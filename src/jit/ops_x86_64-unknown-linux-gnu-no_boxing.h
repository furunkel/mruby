
/* args: {} */
static uint8_t op_nop__text[] = {

};
static uint8_t op_nop__rodata[] = {

};

static void op_nop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_nop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_nop_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_move__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*15: movzwl %dx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*18: shl    $0x4,%rdx */
0x48, 0x8b, 0x34, 0x10,                   /*1c: mov    (%rax,%rdx,1),%rsi */
0x48, 0x8b, 0x54, 0x10, 0x08,             /*20: mov    0x8(%rax,%rdx,1),%rdx */
0x48, 0x89, 0x54, 0x08, 0x08,             /*25: mov    %rdx,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x34, 0x08,                   /*2a: mov    %rsi,(%rax,%rcx,1) */

};
static uint8_t op_move__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_move_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_move_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_move_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadl__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*5: movzwl %ax,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*8: shl    $0x4,%rax */
0x48, 0x8b, 0x4f, 0x18,                   /*c: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x57, 0x20,                   /*10: mov    0x20(%rdi),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%esi */
0x0f, 0xb7, 0xf6,                         /*19: movzwl %si,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*1c: shl    $0x4,%rsi */
0x4c, 0x8b, 0x04, 0x32,                   /*20: mov    (%rdx,%rsi,1),%r8 */
0x48, 0x8b, 0x54, 0x32, 0x08,             /*24: mov    0x8(%rdx,%rsi,1),%rdx */
0x48, 0x89, 0x54, 0x01, 0x08,             /*29: mov    %rdx,0x8(%rcx,%rax,1) */
0x4c, 0x89, 0x04, 0x01,                   /*2e: mov    %r8,(%rcx,%rax,1) */

};
static uint8_t op_loadl__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_loadl_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadl_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadl_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadi__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x03, 0x00, 0x00, 0x00,/*10: movl   $0x3,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*18: mov    0x18(%rdi),%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%edx */
0x0f, 0xbf, 0xd2,                         /*21: movswl %dx,%edx */
0x89, 0x14, 0x08,                         /*24: mov    %edx,(%rax,%rcx,1) */

};
static uint8_t op_loadi__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_loadi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadi_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadsym__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x04, 0x00, 0x00, 0x00,/*10: movl   $0x4,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*18: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x57, 0x28,                   /*1c: mov    0x28(%rdi),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%esi */
0x0f, 0xb7, 0xf6,                         /*25: movzwl %si,%esi */
0x8b, 0x14, 0xb2,                         /*28: mov    (%rdx,%rsi,4),%edx */
0x89, 0x14, 0x08,                         /*2b: mov    %edx,(%rax,%rcx,1) */

};
static uint8_t op_loadsym__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_loadsym_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadsym_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadsym_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadnil__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,/*10: movl   $0x0,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*18: mov    0x18(%rdi),%rax */
0xc7, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, /*1c: movl   $0x0,(%rax,%rcx,1) */

};
static uint8_t op_loadnil__rodata[] = {
0x00, 0x00,                               

};

static void op_loadnil_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadnil_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadnil_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadself__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0x48, 0x8b, 0x10,                         /*10: mov    (%rax),%rdx */
0x48, 0x8b, 0x70, 0x08,                   /*13: mov    0x8(%rax),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*17: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*1c: mov    %rdx,(%rax,%rcx,1) */

};
static uint8_t op_loadself__rodata[] = {
0x00, 0x00,                               

};

static void op_loadself_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadself_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadself_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadt__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x02, 0x00, 0x00, 0x00,/*10: movl   $0x2,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*18: mov    0x18(%rdi),%rax */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*1c: movl   $0x1,(%rax,%rcx,1) */

};
static uint8_t op_loadt__rodata[] = {
0x00, 0x00,                               

};

static void op_loadt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadt_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadf__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,/*10: movl   $0x0,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*18: mov    0x18(%rdi),%rax */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*1c: movl   $0x1,(%rax,%rcx,1) */

};
static uint8_t op_loadf__rodata[] = {
0x00, 0x00,                               

};

static void op_loadf_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadf_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadf_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_getglobal__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x0f, 0xb7, 0xd8,                         /*d: movzwl %ax,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*10: shl    $0x4,%rbx */
0x49, 0x8b, 0x7e, 0x58,                   /*14: mov    0x58(%r14),%rdi */
0x4d, 0x8b, 0x7e, 0x18,                   /*18: mov    0x18(%r14),%r15 */
0x49, 0x8b, 0x46, 0x28,                   /*1c: mov    0x28(%r14),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*25: movzwl %cx,%ecx */
0x8b, 0x34, 0x88,                         /*28: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2b: callq  30 <op_getglobal+0x30> */
0x49, 0x89, 0x04, 0x1f,                   /*30: mov    %rax,(%r15,%rbx,1) */
0x41, 0x89, 0x54, 0x1f, 0x08,             /*34: mov    %edx,0x8(%r15,%rbx,1) */
0x4c, 0x89, 0xf7,                         /*39: mov    %r14,%rdi */
0x5b,                                     /*3c: pop    %rbx */
0x41, 0x5e,                               /*3d: pop    %r14 */
0x41, 0x5f,                               /*3f: pop    %r15 */

};
static uint8_t op_getglobal__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getglobal_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getglobal_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getglobal_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setglobal__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x58,                   /*4: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*15: movzwl %dx,%edx */
0x8b, 0x34, 0x91,                         /*18: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*20: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*23: shl    $0x4,%rcx */
0x48, 0x8b, 0x14, 0x08,                   /*27: mov    (%rax,%rcx,1),%rdx */
0x8b, 0x4c, 0x08, 0x08,                   /*2b: mov    0x8(%rax,%rcx,1),%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2f: callq  34 <op_setglobal+0x34> */
0x48, 0x89, 0xdf,                         /*34: mov    %rbx,%rdi */
0x5b,                                     /*37: pop    %rbx */

};
static uint8_t op_setglobal__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setglobal_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setglobal_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setglobal_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getspecial__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x0f, 0xb7, 0xd8,                         /*d: movzwl %ax,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*10: shl    $0x4,%rbx */
0x4d, 0x8b, 0x7e, 0x18,                   /*14: mov    0x18(%r14),%r15 */
0x49, 0x8b, 0x7e, 0x58,                   /*18: mov    0x58(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*21: movzwl %ax,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*24: callq  29 <op_getspecial+0x29> */
0x49, 0x89, 0x04, 0x1f,                   /*29: mov    %rax,(%r15,%rbx,1) */
0x41, 0x89, 0x54, 0x1f, 0x08,             /*2d: mov    %edx,0x8(%r15,%rbx,1) */
0x4c, 0x89, 0xf7,                         /*32: mov    %r14,%rdi */
0x5b,                                     /*35: pop    %rbx */
0x41, 0x5e,                               /*36: pop    %r14 */
0x41, 0x5f,                               /*38: pop    %r15 */

};
static uint8_t op_getspecial__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getspecial_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getspecial_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getspecial_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setspecial__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x58,                   /*8: mov    0x58(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*11: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*14: shl    $0x4,%rcx */
0x48, 0x8b, 0x14, 0x08,                   /*18: mov    (%rax,%rcx,1),%rdx */
0x8b, 0x4c, 0x08, 0x08,                   /*1c: mov    0x8(%rax,%rcx,1),%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*25: movzwl %ax,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*28: callq  2d <op_setspecial+0x2d> */
0x48, 0x89, 0xdf,                         /*2d: mov    %rbx,%rdi */
0x5b,                                     /*30: pop    %rbx */

};
static uint8_t op_setspecial__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setspecial_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setspecial_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setspecial_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getiv__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x0f, 0xb7, 0xd8,                         /*d: movzwl %ax,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*10: shl    $0x4,%rbx */
0x49, 0x8b, 0x7e, 0x58,                   /*14: mov    0x58(%r14),%rdi */
0x4d, 0x8b, 0x7e, 0x18,                   /*18: mov    0x18(%r14),%r15 */
0x49, 0x8b, 0x46, 0x28,                   /*1c: mov    0x28(%r14),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*25: movzwl %cx,%ecx */
0x8b, 0x34, 0x88,                         /*28: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2b: callq  30 <op_getiv+0x30> */
0x49, 0x89, 0x04, 0x1f,                   /*30: mov    %rax,(%r15,%rbx,1) */
0x41, 0x89, 0x54, 0x1f, 0x08,             /*34: mov    %edx,0x8(%r15,%rbx,1) */
0x4c, 0x89, 0xf7,                         /*39: mov    %r14,%rdi */
0x5b,                                     /*3c: pop    %rbx */
0x41, 0x5e,                               /*3d: pop    %r14 */
0x41, 0x5f,                               /*3f: pop    %r15 */

};
static uint8_t op_getiv__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getiv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getiv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getiv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setiv__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x58,                   /*4: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*15: movzwl %dx,%edx */
0x8b, 0x34, 0x91,                         /*18: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*20: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*23: shl    $0x4,%rcx */
0x48, 0x8b, 0x14, 0x08,                   /*27: mov    (%rax,%rcx,1),%rdx */
0x8b, 0x4c, 0x08, 0x08,                   /*2b: mov    0x8(%rax,%rcx,1),%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2f: callq  34 <op_setiv+0x34> */
0x48, 0x89, 0xdf,                         /*34: mov    %rbx,%rdi */
0x5b,                                     /*37: pop    %rbx */

};
static uint8_t op_setiv__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setiv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setiv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setiv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getcv__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*8: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x58,                   /*c: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*10: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*14: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*18: mov    %rax,0x38(%rcx) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*21: movzwl %ax,%r14d */
0x49, 0xc1, 0xe6, 0x04,                   /*25: shl    $0x4,%r14 */
0x48, 0x8b, 0x7b, 0x58,                   /*29: mov    0x58(%rbx),%rdi */
0x4c, 0x8b, 0x7b, 0x18,                   /*2d: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x43, 0x28,                   /*31: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*35: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*3a: movzwl %cx,%ecx */
0x8b, 0x34, 0x88,                         /*3d: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*40: callq  45 <op_getcv+0x45> */
0x4b, 0x89, 0x04, 0x37,                   /*45: mov    %rax,(%r15,%r14,1) */
0x43, 0x89, 0x54, 0x37, 0x08,             /*49: mov    %edx,0x8(%r15,%r14,1) */
0x48, 0x8b, 0x43, 0x58,                   /*4e: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*52: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*56: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*5a: movq   $0x0,0x38(%rax) */
0x48, 0x89, 0xdf,                         /*62: mov    %rbx,%rdi */
0x5b,                                     /*65: pop    %rbx */
0x41, 0x5e,                               /*66: pop    %r14 */
0x41, 0x5f,                               /*68: pop    %r15 */

};
static uint8_t op_getcv__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getcv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getcv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getcv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setcv__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x58,                   /*4: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*15: movzwl %dx,%edx */
0x8b, 0x34, 0x91,                         /*18: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*20: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*23: shl    $0x4,%rcx */
0x48, 0x8b, 0x14, 0x08,                   /*27: mov    (%rax,%rcx,1),%rdx */
0x8b, 0x4c, 0x08, 0x08,                   /*2b: mov    0x8(%rax,%rcx,1),%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2f: callq  34 <op_setcv+0x34> */
0x48, 0x89, 0xdf,                         /*34: mov    %rbx,%rdi */
0x5b,                                     /*37: pop    %rbx */

};
static uint8_t op_setcv__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setcv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setcv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setcv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getconst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*4: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x58,                   /*8: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*c: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*10: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*14: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x43, 0x28,                   /*18: mov    0x28(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x58,                   /*1c: mov    0x58(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*25: movzwl %cx,%ecx */
0x8b, 0x34, 0x88,                         /*28: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2b: callq  30 <op_getconst+0x30> */
0x48, 0x8b, 0x4b, 0x58,                   /*30: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*34: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*38: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*3c: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x4b, 0x58,                   /*44: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*48: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*4c: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x4b, 0x18,                   /*50: mov    %rcx,0x18(%rbx) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*54: mov    $0x0,%esi */
0x0f, 0xb7, 0xf6,                         /*59: movzwl %si,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*5c: shl    $0x4,%rsi */
0x48, 0x89, 0x04, 0x31,                   /*60: mov    %rax,(%rcx,%rsi,1) */
0x89, 0x54, 0x31, 0x08,                   /*64: mov    %edx,0x8(%rcx,%rsi,1) */
0x48, 0x89, 0xdf,                         /*68: mov    %rbx,%rdi */
0x5b,                                     /*6b: pop    %rbx */

};
static uint8_t op_getconst__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getconst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getconst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getconst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setconst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x58,                   /*4: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*15: movzwl %dx,%edx */
0x8b, 0x34, 0x91,                         /*18: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*20: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*23: shl    $0x4,%rcx */
0x48, 0x8b, 0x14, 0x08,                   /*27: mov    (%rax,%rcx,1),%rdx */
0x8b, 0x4c, 0x08, 0x08,                   /*2b: mov    0x8(%rax,%rcx,1),%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2f: callq  34 <op_setconst+0x34> */
0x48, 0x89, 0xdf,                         /*34: mov    %rbx,%rdi */
0x5b,                                     /*37: pop    %rbx */

};
static uint8_t op_setconst__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setconst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setconst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setconst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getmcnst__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*6: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x58,                   /*a: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*e: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*12: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*16: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x7b, 0x58,                   /*1a: mov    0x58(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1e: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*23: movzwl %ax,%r14d */
0x49, 0xc1, 0xe6, 0x04,                   /*27: shl    $0x4,%r14 */
0x48, 0x8b, 0x43, 0x18,                   /*2b: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*2f: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*33: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*38: movzwl %dx,%edx */
0x8b, 0x0c, 0x91,                         /*3b: mov    (%rcx,%rdx,4),%ecx */
0x4a, 0x8b, 0x34, 0x30,                   /*3e: mov    (%rax,%r14,1),%rsi */
0x42, 0x8b, 0x54, 0x30, 0x08,             /*42: mov    0x8(%rax,%r14,1),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*47: callq  4c <op_getmcnst+0x4c> */
0x48, 0x8b, 0x4b, 0x58,                   /*4c: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*50: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*54: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*58: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x4b, 0x58,                   /*60: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*64: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*68: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x4b, 0x18,                   /*6c: mov    %rcx,0x18(%rbx) */
0x4a, 0x89, 0x04, 0x31,                   /*70: mov    %rax,(%rcx,%r14,1) */
0x42, 0x89, 0x54, 0x31, 0x08,             /*74: mov    %edx,0x8(%rcx,%r14,1) */
0x48, 0x89, 0xdf,                         /*79: mov    %rbx,%rdi */
0x5b,                                     /*7c: pop    %rbx */
0x41, 0x5e,                               /*7d: pop    %r14 */

};
static uint8_t op_getmcnst__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getmcnst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getmcnst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getmcnst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setmcnst__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x7e, 0x58,                   /*6: mov    0x58(%r14),%rdi */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*a: mov    $0x0,%r8d */
0x41, 0x0f, 0xb7, 0xc8,                   /*10: movzwl %r8w,%ecx */
0xff, 0xc1,                               /*14: inc    %ecx */
0x48, 0x63, 0xd1,                         /*16: movslq %ecx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*19: shl    $0x4,%rdx */
0x49, 0x8b, 0x46, 0x18,                   /*1d: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x4e, 0x28,                   /*21: mov    0x28(%r14),%rcx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*25: mov    $0x0,%esi */
0x0f, 0xb7, 0xf6,                         /*2a: movzwl %si,%esi */
0x8b, 0x0c, 0xb1,                         /*2d: mov    (%rcx,%rsi,4),%ecx */
0x41, 0x0f, 0xb7, 0xd8,                   /*30: movzwl %r8w,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*34: shl    $0x4,%rbx */
0x48, 0x8b, 0x34, 0x10,                   /*38: mov    (%rax,%rdx,1),%rsi */
0x8b, 0x54, 0x10, 0x08,                   /*3c: mov    0x8(%rax,%rdx,1),%edx */
0x4c, 0x8b, 0x04, 0x18,                   /*40: mov    (%rax,%rbx,1),%r8 */
0x44, 0x8b, 0x4c, 0x18, 0x08,             /*44: mov    0x8(%rax,%rbx,1),%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*49: callq  4e <op_setmcnst+0x4e> */
0x4c, 0x89, 0xf7,                         /*4e: mov    %r14,%rdi */
0x5b,                                     /*51: pop    %rbx */
0x41, 0x5e,                               /*52: pop    %r14 */

};
static uint8_t op_setmcnst__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setmcnst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setmcnst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setmcnst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getupvar__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*5: movzwl %ax,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*8: shl    $0x4,%rax */
0x48, 0x03, 0x47, 0x18,                   /*c: add    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x58,                   /*10: mov    0x58(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*14: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*18: mov    0x20(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*1c: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*20: mov    0x28(%rcx),%rcx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*24: mov    $0x0,%esi */
0x48, 0x85, 0xc9,                         /*29: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*2c: sete   %dl */
0x40, 0x84, 0xf6,                         /*2f: test   %sil,%sil */
0x74, 0x1f,                               /*32: je     53 <op_getupvar+0x53> */
0x40, 0x0f, 0xb6, 0xf6,                   /*34: movzbl %sil,%esi */
0xf7, 0xde,                               /*38: neg    %esi */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*3a: nopw   0x0(%rax,%rax,1) */
0xf6, 0xc2, 0x01,                         /*40: test   $0x1,%dl */
0x75, 0x12,                               /*43: jne    57 <op_getupvar+0x57> */
0x48, 0x8b, 0x49, 0x08,                   /*45: mov    0x8(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*49: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*4c: sete   %dl */
0xff, 0xc6,                               /*4f: inc    %esi */
0x75, 0xed,                               /*51: jne    40 <op_getupvar+0x40> */
0x84, 0xd2,                               /*53: test   %dl,%dl */
0x74, 0x10,                               /*55: je     67 <op_getupvar+0x67> */
0x48, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, /*57: movq   $0x0,(%rax) */
0xc7, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00, /*5e: movl   $0x0,0x8(%rax) */
0xeb, 0x20,                               /*65: jmp    87 <Bx24243712345617123412345617123456171234561712345612+0x83> */
0x48, 0x8b, 0x49, 0x18,                   /*67: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6b: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*70: movzwl %dx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*73: shl    $0x4,%rdx */
0x48, 0x8b, 0x34, 0x11,                   /*77: mov    (%rcx,%rdx,1),%rsi */
0x48, 0x8b, 0x4c, 0x11, 0x08,             /*7b: mov    0x8(%rcx,%rdx,1),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*80: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x30,                         /*84: mov    %rsi,(%rax) */

};
static uint8_t op_getupvar__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_getupvar_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getupvar_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getupvar_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_setupvar__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x58,                   /*4: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*8: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*c: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*10: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x70, 0x28,                   /*14: mov    0x28(%rax),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x48, 0x85, 0xf6,                         /*1d: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*20: sete   %al */
0x84, 0xc9,                               /*23: test   %cl,%cl */
0x74, 0x1b,                               /*25: je     42 <op_setupvar+0x42> */
0x0f, 0xb6, 0xc9,                         /*27: movzbl %cl,%ecx */
0xf7, 0xd9,                               /*2a: neg    %ecx */
0x0f, 0x1f, 0x40, 0x00,                   /*2c: nopl   0x0(%rax) */
0xa8, 0x01,                               /*30: test   $0x1,%al */
0x75, 0x4d,                               /*32: jne    81 <op_setupvar+0x81> */
0x48, 0x8b, 0x76, 0x08,                   /*34: mov    0x8(%rsi),%rsi */
0x48, 0x85, 0xf6,                         /*38: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*3b: sete   %al */
0xff, 0xc1,                               /*3e: inc    %ecx */
0x75, 0xee,                               /*40: jne    30 <op_setupvar+0x30> */
0x84, 0xc0,                               /*42: test   %al,%al */
0x75, 0x3b,                               /*44: jne    81 <op_setupvar+0x81> */
0x48, 0x8b, 0x43, 0x18,                   /*46: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4a: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*4f: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*52: shl    $0x4,%rcx */
0x48, 0x8b, 0x56, 0x18,                   /*56: mov    0x18(%rsi),%rdx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*5a: mov    $0x0,%edi */
0x0f, 0xb7, 0xff,                         /*5f: movzwl %di,%edi */
0x48, 0xc1, 0xe7, 0x04,                   /*62: shl    $0x4,%rdi */
0x4c, 0x8b, 0x04, 0x08,                   /*66: mov    (%rax,%rcx,1),%r8 */
0x48, 0x8b, 0x44, 0x08, 0x08,             /*6a: mov    0x8(%rax,%rcx,1),%rax */
0x48, 0x89, 0x44, 0x3a, 0x08,             /*6f: mov    %rax,0x8(%rdx,%rdi,1) */
0x4c, 0x89, 0x04, 0x3a,                   /*74: mov    %r8,(%rdx,%rdi,1) */
0x48, 0x8b, 0x7b, 0x58,                   /*78: mov    0x58(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c: callq  81 <op_setupvar+0x81> */
0x48, 0x89, 0xdf,                         /*81: mov    %rbx,%rdi */
0x5b,                                     /*84: pop    %rbx */

};
static uint8_t op_setupvar__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_setupvar_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setupvar_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setupvar_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_jmp__text[] = {

};
static uint8_t op_jmp__rodata[] = {

};

static void op_jmp_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_jmp_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmp_set_args(op, 0,GETARG_sBx(c),0,op_idx);
}


/* args: {"a"=>[[16, 8, 6..9]]} */
static uint8_t op_jmpif__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x83, 0xb8, 0x08, 0x10, 0xab, 0x00, 0x00, /*4: cmpl   $0x0,0xab1008(%rax) */

};
static uint8_t op_jmpif__rodata[] = {

};

static void op_jmpif_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
  *((int32_t *)(op + 6)) = a * 16 + 8;
}

static void op_jmpif_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmpif_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {"a"=>[[16, 8, 6..9]]} */
static uint8_t op_jmpnot__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x83, 0xb8, 0x08, 0x10, 0xab, 0x00, 0x00, /*4: cmpl   $0x0,0xab1008(%rax) */

};
static uint8_t op_jmpnot__rodata[] = {

};

static void op_jmpnot_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
  *((int32_t *)(op + 6)) = a * 16 + 8;
}

static void op_jmpnot_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmpnot_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {"op_idx"=>[[4, 0, 92..95]]} */
static uint8_t op_onerr__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x58,                   /*4: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x48, 0x18,                   /*8: mov    0x18(%rax),%rcx */
0x8b, 0x51, 0x40,                         /*c: mov    0x40(%rcx),%edx */
0x48, 0x8b, 0x71, 0x20,                   /*f: mov    0x20(%rcx),%rsi */
0x3b, 0x56, 0x1c,                         /*13: cmp    0x1c(%rsi),%edx */
0x7f, 0x39,                               /*16: jg     51 <op_onerr+0x51> */
0x8d, 0x04, 0x12,                         /*18: lea    (%rdx,%rdx,1),%eax */
0x85, 0xd2,                               /*1b: test   %edx,%edx */
0xba, 0x10, 0x00, 0x00, 0x00,             /*1d: mov    $0x10,%edx */
0x0f, 0x45, 0xd0,                         /*22: cmovne %eax,%edx */
0x89, 0x51, 0x40,                         /*25: mov    %edx,0x40(%rcx) */
0x48, 0x8b, 0x7b, 0x58,                   /*28: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*2c: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x38,                   /*30: mov    0x38(%rax),%rsi */
0x48, 0x63, 0x50, 0x40,                   /*34: movslq 0x40(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*38: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3c: callq  41 <op_onerr+0x41> */
0x48, 0x8b, 0x4b, 0x58,                   /*41: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*45: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*49: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x43, 0x58,                   /*4d: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x08,                   /*51: mov    0x8(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*55: mov    0x8(%rcx),%rcx */
0x48, 0x8d, 0x91, 0x00, 0x04, 0xde, 0x00, /*59: lea    0xde0400(%rcx),%rdx */
0x48, 0x89, 0x53, 0x10,                   /*60: mov    %rdx,0x10(%rbx) */
0xba, 0x00, 0x00, 0x00, 0x00,             /*64: mov    $0x0,%edx */
0x48, 0x0f, 0xbf, 0xd2,                   /*69: movswq %dx,%rdx */
0x48, 0x8d, 0x8c, 0x91, 0x00, 0x00, 0x78, 0x03,/*6d: lea    0x3780000(%rcx,%rdx,4),%rcx */
0x48, 0x8b, 0x40, 0x18,                   /*75: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*79: mov    0x20(%rax),%rax */
0x48, 0x63, 0x50, 0x1c,                   /*7d: movslq 0x1c(%rax),%rdx */
0x8d, 0x72, 0x01,                         /*81: lea    0x1(%rdx),%esi */
0x89, 0x70, 0x1c,                         /*84: mov    %esi,0x1c(%rax) */
0x48, 0x8b, 0x43, 0x58,                   /*87: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*8b: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x38,                   /*8f: mov    0x38(%rax),%rax */
0x48, 0x89, 0x0c, 0xd0,                   /*93: mov    %rcx,(%rax,%rdx,8) */
0x48, 0x89, 0xdf,                         /*97: mov    %rbx,%rdi */
0x5b,                                     /*9a: pop    %rbx */

};
static uint8_t op_onerr__rodata[] = {
0x00, 0x00,                               

};

static void op_onerr_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
  *((int32_t *)(op + 92)) = op_idx * 4 + 0;
}

static void op_onerr_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_onerr_set_args(op, 0,GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_rescue__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x58,                   /*4: mov    0x58(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*8: mov    0x28(%rcx),%rcx */
0x0f, 0xb6, 0x09,                         /*c: movzbl (%rcx),%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*14: movzwl %dx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*17: shl    $0x4,%rdx */
0x89, 0x4c, 0x10, 0x08,                   /*1b: mov    %ecx,0x8(%rax,%rdx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*1f: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x58,                   /*23: mov    0x58(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*27: mov    0x28(%rcx),%rcx */
0x48, 0x89, 0x0c, 0x10,                   /*2b: mov    %rcx,(%rax,%rdx,1) */
0x48, 0x8b, 0x47, 0x58,                   /*2f: mov    0x58(%rdi),%rax */
0x48, 0xc7, 0x40, 0x28, 0x00, 0x00, 0x00, 0x00,/*33: movq   $0x0,0x28(%rax) */

};
static uint8_t op_rescue__rodata[] = {
0x00, 0x00,                               

};

static void op_rescue_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_rescue_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_rescue_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_poperr__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x66, 0x85, 0xc0,                         /*5: test   %ax,%ax */
0x74, 0x29,                               /*8: je     33 <op_poperr+0x33> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*f: movzwl %ax,%eax */
0xf7, 0xd8,                               /*12: neg    %eax */
0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*14: data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x4f, 0x58,                   /*20: mov    0x58(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*24: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*28: mov    0x20(%rcx),%rcx */
0xff, 0x49, 0x1c,                         /*2c: decl   0x1c(%rcx) */
0xff, 0xc0,                               /*2f: inc    %eax */
0x75, 0xed,                               /*31: jne    20 <op_poperr+0x20> */

};
static uint8_t op_poperr__rodata[] = {
0x00, 0x00,                               

};

static void op_poperr_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_poperr_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_poperr_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_raise__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*9: movzwl %ax,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*c: shl    $0x4,%rax */
0x48, 0x8b, 0x4b, 0x18,                   /*10: mov    0x18(%rbx),%rcx */
0x48, 0x8b, 0x53, 0x58,                   /*14: mov    0x58(%rbx),%rdx */
0x48, 0x8b, 0x04, 0x01,                   /*18: mov    (%rcx,%rax,1),%rax */
0x48, 0x89, 0x42, 0x28,                   /*1c: mov    %rax,0x28(%rdx) */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*20: callq  25 <op_raise+0x25> */
0x48, 0x89, 0xdf,                         /*25: mov    %rbx,%rdi */
0x5b,                                     /*28: pop    %rbx */

};
static uint8_t op_raise__rodata[] = {
0x00, 0x00,                               

};

static void op_raise_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_raise_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_raise_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_epush__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x08,                   /*6: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x58,                   /*a: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x40, 0x20,                   /*e: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*17: movzwl %cx,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*1a: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e: callq  23 <op_epush+0x23> */
0x49, 0x89, 0xc6,                         /*23: mov    %rax,%r14 */
0x48, 0x8b, 0x43, 0x58,                   /*26: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*2a: mov    0x18(%rax),%rax */
0x8b, 0x70, 0x50,                         /*2e: mov    0x50(%rax),%esi */
0x48, 0x8b, 0x48, 0x20,                   /*31: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*35: mov    0x20(%rcx),%edx */
0x39, 0xd6,                               /*38: cmp    %edx,%esi */
0x7f, 0x44,                               /*3a: jg     80 <op_epush+0x80> */
0x8d, 0x0c, 0x36,                         /*3c: lea    (%rsi,%rsi,1),%ecx */
0x85, 0xf6,                               /*3f: test   %esi,%esi */
0xba, 0x10, 0x00, 0x00, 0x00,             /*41: mov    $0x10,%edx */
0x0f, 0x45, 0xd1,                         /*46: cmovne %ecx,%edx */
0x89, 0x50, 0x50,                         /*49: mov    %edx,0x50(%rax) */
0x48, 0x8b, 0x7b, 0x58,                   /*4c: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*50: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*54: mov    0x48(%rax),%rsi */
0x48, 0x63, 0x50, 0x50,                   /*58: movslq 0x50(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*5c: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*60: callq  65 <op_epush+0x65> */
0x48, 0x8b, 0x4b, 0x58,                   /*65: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*69: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x48,                   /*6d: mov    %rax,0x48(%rcx) */
0x48, 0x8b, 0x43, 0x58,                   /*71: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*75: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*79: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*7d: mov    0x20(%rcx),%edx */
0x8d, 0x42, 0x01,                         /*80: lea    0x1(%rdx),%eax */
0x89, 0x41, 0x20,                         /*83: mov    %eax,0x20(%rcx) */
0x48, 0x63, 0xc2,                         /*86: movslq %edx,%rax */
0x48, 0x8b, 0x4b, 0x58,                   /*89: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*8d: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x48,                   /*91: mov    0x48(%rcx),%rcx */
0x4c, 0x89, 0x34, 0xc1,                   /*95: mov    %r14,(%rcx,%rax,8) */
0x8b, 0x43, 0x50,                         /*99: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*9c: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*a0: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*a6: mov    %rbx,%rdi */
0x5b,                                     /*a9: pop    %rbx */
0x41, 0x5e,                               /*aa: pop    %r14 */

};
static uint8_t op_epush__rodata[] = {
0x00, 0x00,                               

};

static void op_epush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_epush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_epush_set_args(op, 0,GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_epop__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x54,                               /*5: push   %r12 */
0x53,                                     /*7: push   %rbx */
0x49, 0x89, 0xff,                         /*8: mov    %rdi,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*b: mov    $0x0,%eax */
0xa9, 0xff, 0xff, 0x00, 0x00,             /*10: test   $0xffff,%eax */
0x7e, 0x51,                               /*15: jle    68 <op_epop+0x68> */
0x49, 0x8b, 0x47, 0x58,                   /*17: mov    0x58(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*1b: mov    0x18(%rax),%rax */
0x4c, 0x8b, 0x70, 0x20,                   /*1f: mov    0x20(%rax),%r14 */
0x41, 0x8b, 0x6e, 0x20,                   /*23: mov    0x20(%r14),%ebp */
0x31, 0xdb,                               /*27: xor    %ebx,%ebx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*29: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xe0,                   /*2e: movzwl %ax,%r12d */
0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*32: data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x41, 0x3b, 0x6e, 0xc8,                   /*40: cmp    -0x38(%r14),%ebp */
0x7e, 0x22,                               /*44: jle    68 <op_epop+0x68> */
0x49, 0x8b, 0x7f, 0x58,                   /*46: mov    0x58(%r15),%rdi */
0xff, 0xcd,                               /*4a: dec    %ebp */
0x89, 0xee,                               /*4c: mov    %ebp,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*4e: callq  53 <op_epop+0x53> */
0x41, 0x8b, 0x47, 0x50,                   /*53: mov    0x50(%r15),%eax */
0x49, 0x8b, 0x4f, 0x58,                   /*57: mov    0x58(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*5b: mov    %eax,0xdc(%rcx) */
0xff, 0xc3,                               /*61: inc    %ebx */
0x44, 0x39, 0xe3,                         /*63: cmp    %r12d,%ebx */
0x7c, 0xd8,                               /*66: jl     40 <op_epop+0x40> */
0x4c, 0x89, 0xff,                         /*68: mov    %r15,%rdi */
0x5b,                                     /*6b: pop    %rbx */
0x41, 0x5c,                               /*6c: pop    %r12 */
0x41, 0x5e,                               /*6e: pop    %r14 */
0x41, 0x5f,                               /*70: pop    %r15 */
0x5d,                                     /*72: pop    %rbp */

};
static uint8_t op_epop__rodata[] = {
0x00, 0x00,                               

};

static void op_epop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_epop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_epop_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {"op_idx"=>[[4, 0, 31..34]]} */
static uint8_t op_send__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x41, 0x56,                               /*4: push   %r14 */
0x53,                                     /*6: push   %rbx */
0x48, 0x83, 0xe4, 0xf0,                   /*7: and    $0xfffffffffffffff0,%rsp */
0x48, 0x89, 0xfb,                         /*b: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x08,                   /*e: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x58,                   /*12: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*16: mov    0x18(%rcx),%rcx */
0x4c, 0x8b, 0x71, 0x20,                   /*1a: mov    0x20(%rcx),%r14 */
0xb9, 0x00, 0x04, 0xde, 0x00,             /*1e: mov    $0xde0400,%ecx */
0x48, 0x03, 0x48, 0x08,                   /*23: add    0x8(%rax),%rcx */
0x48, 0x89, 0x4b, 0x10,                   /*27: mov    %rcx,0x10(%rbx) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*2b: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*30: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*33: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*38: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*3b: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*40: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*44: mov    $0x20,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*49: callq  4e <op_send+0x4e> */
0x48, 0x8b, 0x43, 0x58,                   /*4e: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*52: mov    0x18(%rax),%rax */
0x4c, 0x39, 0x70, 0x20,                   /*56: cmp    %r14,0x20(%rax) */
0x73, 0x0c,                               /*5a: jae    68 <op_send+0x68> */
0x48, 0x89, 0xdf,                         /*5c: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf0,                   /*5f: lea    -0x10(%rbp),%rsp */
0x5b,                                     /*63: pop    %rbx */
0x41, 0x5e,                               /*64: pop    %r14 */
0x5d,                                     /*66: pop    %rbp */
0xc3,                                     /*67: retq */
0x48, 0x89, 0xdf,                         /*68: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf0,                   /*6b: lea    -0x10(%rbp),%rsp */
0x5b,                                     /*6f: pop    %rbx */
0x41, 0x5e,                               /*70: pop    %r14 */
0x5d,                                     /*72: pop    %rbp */

};
static uint8_t op_send__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_send_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
  *((int32_t *)(op + 31)) = op_idx * 4 + 0;
}

static void op_send_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_send_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_sendb__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x53,                                     /*4: push   %rbx */
0x48, 0x83, 0xe4, 0xf0,                   /*5: and    $0xfffffffffffffff0,%rsp */
0x48, 0x83, 0xec, 0x10,                   /*9: sub    $0x10,%rsp */
0x48, 0x89, 0xfb,                         /*d: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*15: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*1d: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*25: movzbl %al,%r8d */
0xbe, 0x21, 0x00, 0x00, 0x00,             /*29: mov    $0x21,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_sendb+0x33> */
0x48, 0x89, 0xdf,                         /*33: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf8,                   /*36: lea    -0x8(%rbp),%rsp */
0x5b,                                     /*3a: pop    %rbx */
0x5d,                                     /*3b: pop    %rbp */

};
static uint8_t op_sendb__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_sendb_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sendb_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sendb_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_fsend__text[] = {

};
static uint8_t op_fsend__rodata[] = {

};

static void op_fsend_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_fsend_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_fsend_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_call__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x56,                               /*1: push   %r14 */
0x53,                                     /*3: push   %rbx */
0x49, 0x89, 0xfe,                         /*4: mov    %rdi,%r14 */
0x49, 0x8b, 0x46, 0x58,                   /*7: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*b: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*f: mov    0x8(%rax),%rcx */
0x48, 0x8b, 0x40, 0x20,                   /*13: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x19,                         /*17: mov    (%rcx),%rbx */
0x8b, 0x51, 0x08,                         /*1a: mov    0x8(%rcx),%edx */
0x48, 0x8b, 0x4b, 0x20,                   /*1d: mov    0x20(%rbx),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*21: mov    %rcx,0x48(%rax) */
0x48, 0x89, 0x58, 0x08,                   /*25: mov    %rbx,0x8(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*29: mov    0x28(%rbx),%rcx */
0x48, 0x85, 0xc9,                         /*2d: test   %rcx,%rcx */
0x74, 0x24,                               /*30: je     56 <op_call+0x56> */
0x8b, 0x71, 0x20,                         /*32: mov    0x20(%rcx),%esi */
0x85, 0xf6,                               /*35: test   %esi,%esi */
0x74, 0x06,                               /*37: je     3f <op_call+0x3f> */
0x89, 0x30,                               /*39: mov    %esi,(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*3b: mov    0x28(%rbx),%rcx */
0x48, 0x83, 0x79, 0x18, 0x00,             /*3f: cmpq   $0x0,0x18(%rcx) */
0x75, 0x10,                               /*44: jne    56 <op_call+0x56> */
0x49, 0x8b, 0x76, 0x58,                   /*46: mov    0x58(%r14),%rsi */
0x48, 0x8b, 0x76, 0x18,                   /*4a: mov    0x18(%rsi),%rsi */
0x48, 0x8b, 0x76, 0x08,                   /*4e: mov    0x8(%rsi),%rsi */
0x48, 0x89, 0x71, 0x18,                   /*52: mov    %rsi,0x18(%rcx) */
0xf6, 0x43, 0x02, 0x04,                   /*56: testb  $0x4,0x2(%rbx) */
0x74, 0x34,                               /*5a: je     90 <op_call+0x90> */
0x49, 0x8b, 0x7e, 0x58,                   /*5c: mov    0x58(%r14),%rdi */
0x48, 0x89, 0xde,                         /*60: mov    %rbx,%rsi */
0xff, 0x53, 0x18,                         /*63: callq  *0x18(%rbx) */
0x48, 0x89, 0xc3,                         /*66: mov    %rax,%rbx */
0x89, 0xd5,                               /*69: mov    %edx,%ebp */
0x49, 0x8b, 0x7e, 0x58,                   /*6b: mov    0x58(%r14),%rdi */
0x41, 0x8b, 0x76, 0x50,                   /*6f: mov    0x50(%r14),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*73: callq  78 <op_call+0x78> */
0x49, 0x8b, 0x46, 0x58,                   /*78: mov    0x58(%r14),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*7c: cmpq   $0x0,0x28(%rax) */
0x74, 0x57,                               /*81: je     da <op_call+0xda> */
0x4c, 0x89, 0xf7,                         /*83: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*86: callq  8b <op_call+0x8b> */
0xe9, 0x30, 0x01, 0x00, 0x00,             /*8b: jmpq   1c0 <op_call+0x1c0> */
0x49, 0x89, 0x1e,                         /*90: mov    %rbx,(%r14) */
0x48, 0x8b, 0x4b, 0x18,                   /*93: mov    0x18(%rbx),%rcx */
0x49, 0x89, 0x4e, 0x08,                   /*97: mov    %rcx,0x8(%r14) */
0x48, 0x85, 0xc9,                         /*9b: test   %rcx,%rcx */
0x0f, 0x84, 0x98, 0x00, 0x00, 0x00,       /*9e: je     13c <op_call+0x13c> */
0x48, 0x8b, 0x51, 0x10,                   /*a4: mov    0x10(%rcx),%rdx */
0x49, 0x89, 0x56, 0x20,                   /*a8: mov    %rdx,0x20(%r14) */
0x48, 0x8b, 0x51, 0x18,                   /*ac: mov    0x18(%rcx),%rdx */
0x49, 0x89, 0x56, 0x28,                   /*b0: mov    %rdx,0x28(%r14) */
0x0f, 0xb7, 0x49, 0x02,                   /*b4: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*b8: mov    %ecx,0x18(%rax) */
0x8b, 0x50, 0x40,                         /*bb: mov    0x40(%rax),%edx */
0x49, 0x8b, 0x46, 0x08,                   /*be: mov    0x8(%r14),%rax */
0x49, 0x8b, 0x7e, 0x58,                   /*c2: mov    0x58(%r14),%rdi */
0x0f, 0xb7, 0x70, 0x02,                   /*c6: movzwl 0x2(%rax),%esi */
0x85, 0xd2,                               /*ca: test   %edx,%edx */
0x0f, 0x88, 0x98, 0x00, 0x00, 0x00,       /*cc: js     16a <op_call+0x16a> */
0x83, 0xc2, 0x02,                         /*d2: add    $0x2,%edx */
0xe9, 0xa0, 0x00, 0x00, 0x00,             /*d5: jmpq   17a <op_call+0x17a> */
0x48, 0x8b, 0x40, 0x18,                   /*da: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*de: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x51, 0x10,                   /*e2: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x50, 0x08,                   /*e6: mov    %rdx,0x8(%rax) */
0x49, 0x89, 0x56, 0x18,                   /*ea: mov    %rdx,0x18(%r14) */
0x48, 0x63, 0x41, 0x44,                   /*ee: movslq 0x44(%rcx),%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*f2: shl    $0x4,%rax */
0x48, 0x89, 0x1c, 0x02,                   /*f6: mov    %rbx,(%rdx,%rax,1) */
0x89, 0x6c, 0x02, 0x08,                   /*fa: mov    %ebp,0x8(%rdx,%rax,1) */
0x48, 0x8b, 0x41, 0x30,                   /*fe: mov    0x30(%rcx),%rax */
0x49, 0x89, 0x46, 0x10,                   /*102: mov    %rax,0x10(%r14) */
0x49, 0x8b, 0x7e, 0x58,                   /*106: mov    0x58(%r14),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*10a: callq  10f <op_call+0x10f> */
0x49, 0x8b, 0x46, 0x58,                   /*10f: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*113: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*117: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*11b: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*11f: mov    0x18(%rax),%rax */
0x49, 0x89, 0x46, 0x08,                   /*123: mov    %rax,0x8(%r14) */
0x48, 0x8b, 0x48, 0x10,                   /*127: mov    0x10(%rax),%rcx */
0x49, 0x89, 0x4e, 0x20,                   /*12b: mov    %rcx,0x20(%r14) */
0x48, 0x8b, 0x40, 0x18,                   /*12f: mov    0x18(%rax),%rax */
0x49, 0x89, 0x46, 0x28,                   /*133: mov    %rax,0x28(%r14) */
0xe9, 0x84, 0x00, 0x00, 0x00,             /*137: jmpq   1c0 <op_call+0x1c0> */
0x49, 0x8b, 0x46, 0x58,                   /*13c: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*140: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*144: mov    0x8(%rax),%rax */
0x48, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, /*148: movq   $0x0,(%rax) */
0xc7, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00, /*14f: movl   $0x0,0x8(%rax) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*156: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*15b: movzwl %ax,%esi */
0x31, 0xd2,                               /*15e: xor    %edx,%edx */
0x4c, 0x89, 0xf7,                         /*160: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*163: callq  168 <op_call+0x168> */
0xeb, 0x56,                               /*168: jmp    1c0 <op_call+0x1c0> */
0x83, 0xfe, 0x03,                         /*16a: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*16d: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*172: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*175: mov    $0x3,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*17a: callq  17f <op_call+0x17f> */
0x49, 0x8b, 0x46, 0x58,                   /*17f: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*183: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*187: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x18,                   /*18b: mov    %rax,0x18(%r14) */
0x48, 0x8b, 0x4b, 0x28,                   /*18f: mov    0x28(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*193: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x11,                         /*197: mov    (%rcx),%rdx */
0x48, 0x8b, 0x49, 0x08,                   /*19a: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*19e: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x10,                         /*1a2: mov    %rdx,(%rax) */
0x49, 0x8b, 0x46, 0x08,                   /*1a5: mov    0x8(%r14),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*1a9: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x10,                   /*1ad: mov    %rax,0x10(%r14) */
0x49, 0x8b, 0x36,                         /*1b1: mov    (%r14),%rsi */
0x49, 0x8b, 0x7e, 0x58,                   /*1b4: mov    0x58(%r14),%rdi */
0x4c, 0x89, 0xf2,                         /*1b8: mov    %r14,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1bb: callq  1c0 <op_call+0x1c0> */
0x4c, 0x89, 0xf7,                         /*1c0: mov    %r14,%rdi */
0x5b,                                     /*1c3: pop    %rbx */
0x41, 0x5e,                               /*1c4: pop    %r14 */
0x5d,                                     /*1c6: pop    %rbp */

};
static uint8_t op_call__rodata[] = {
0x00, 0x00,                               

};

static void op_call_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_call_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_call_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_super__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*a: sub    $0x18,%rsp */
0x48, 0x89, 0xfb,                         /*e: mov    %rdi,%rbx */
0x48, 0x8b, 0x6b, 0x58,                   /*11: mov    0x58(%rbx),%rbp */
0x48, 0x8b, 0x45, 0x18,                   /*15: mov    0x18(%rbp),%rax */
0x4c, 0x8b, 0x70, 0x20,                   /*19: mov    0x20(%rax),%r14 */
0x45, 0x8b, 0x2e,                         /*1d: mov    (%r14),%r13d */
0x45, 0x85, 0xed,                         /*20: test   %r13d,%r13d */
0x74, 0x73,                               /*23: je     98 <op_super+0x98> */
0x48, 0x8b, 0x43, 0x18,                   /*25: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x08,                         /*29: mov    (%rax),%rcx */
0x48, 0x89, 0x0c, 0x24,                   /*2c: mov    %rcx,(%rsp) */
0x4c, 0x8b, 0x78, 0x08,                   /*30: mov    0x8(%rax),%r15 */
0x4c, 0x89, 0x7c, 0x24, 0x08,             /*34: mov    %r15,0x8(%rsp) */
0x49, 0xc1, 0xef, 0x20,                   /*39: shr    $0x20,%r15 */
0x49, 0x8b, 0x46, 0x48,                   /*3d: mov    0x48(%r14),%rax */
0x48, 0x8b, 0x48, 0x28,                   /*41: mov    0x28(%rax),%rcx */
0x48, 0x89, 0x4c, 0x24, 0x10,             /*45: mov    %rcx,0x10(%rsp) */
0x48, 0x8b, 0x03,                         /*4a: mov    (%rbx),%rax */
0x48, 0x39, 0x48, 0x38,                   /*4d: cmp    %rcx,0x38(%rax) */
0x75, 0x08,                               /*51: jne    5b <op_super+0x5b> */
0x31, 0xd2,                               /*53: xor    %edx,%edx */
0x44, 0x39, 0x68, 0x30,                   /*55: cmp    %r13d,0x30(%rax) */
0x74, 0x33,                               /*59: je     8e <op_super+0x8e> */
0x48, 0x39, 0x48, 0x48,                   /*5b: cmp    %rcx,0x48(%rax) */
0x75, 0x0b,                               /*5f: jne    6c <op_super+0x6c> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*61: mov    $0x1,%edx */
0x44, 0x39, 0x68, 0x40,                   /*66: cmp    %r13d,0x40(%rax) */
0x74, 0x22,                               /*6a: je     8e <op_super+0x8e> */
0x48, 0x39, 0x48, 0x58,                   /*6c: cmp    %rcx,0x58(%rax) */
0x75, 0x0b,                               /*70: jne    7d <op_super+0x7d> */
0xba, 0x02, 0x00, 0x00, 0x00,             /*72: mov    $0x2,%edx */
0x44, 0x39, 0x68, 0x50,                   /*77: cmp    %r13d,0x50(%rax) */
0x74, 0x11,                               /*7b: je     8e <op_super+0x8e> */
0x48, 0x39, 0x48, 0x68,                   /*7d: cmp    %rcx,0x68(%rax) */
0x75, 0x53,                               /*81: jne    d6 <op_super+0xd6> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*83: mov    $0x3,%edx */
0x44, 0x39, 0x68, 0x60,                   /*88: cmp    %r13d,0x60(%rax) */
0x75, 0x48,                               /*8c: jne    d6 <op_super+0xd6> */
0x4c, 0x8b, 0xa4, 0xd0, 0x90, 0x00, 0x00, 0x00,/*8e: mov    0x90(%rax,%rdx,8),%r12 */
0xeb, 0x51,                               /*96: jmp    e9 <op_super+0xe9> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*98: mov    0x0(%rip),%rsi        # 9f <op_super+0x9f> */
0x48, 0x89, 0xef,                         /*9f: mov    %rbp,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a2: callq  a7 <op_super+0xa7> */
0x49, 0x89, 0xc6,                         /*a7: mov    %rax,%r14 */
0x48, 0x8b, 0x7b, 0x58,                   /*aa: mov    0x58(%rbx),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*ae: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*b3: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b8: callq  bd <op_super+0xbd> */
0x89, 0xd1,                               /*bd: mov    %edx,%ecx */
0x48, 0x89, 0xef,                         /*bf: mov    %rbp,%rdi */
0x4c, 0x89, 0xf6,                         /*c2: mov    %r14,%rsi */
0x48, 0x89, 0xc2,                         /*c5: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c8: callq  cd <op_super+0xcd> */
0x48, 0x89, 0x45, 0x28,                   /*cd: mov    %rax,0x28(%rbp) */
0xe9, 0x58, 0x02, 0x00, 0x00,             /*d1: jmpq   32e <op_super+0x32e> */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*d6: lea    0x10(%rsp),%rsi */
0x48, 0x89, 0xef,                         /*db: mov    %rbp,%rdi */
0x44, 0x89, 0xea,                         /*de: mov    %r13d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e1: callq  e6 <op_super+0xe6> */
0x49, 0x89, 0xc4,                         /*e6: mov    %rax,%r12 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e9: mov    $0x0,%eax */
0x4d, 0x85, 0xe4,                         /*ee: test   %r12,%r12 */
0x74, 0x08,                               /*f1: je     fb <op_super+0xfb> */
0x0f, 0xb6, 0xe8,                         /*f3: movzbl %al,%ebp */
0xe9, 0x6e, 0x01, 0x00, 0x00,             /*f6: jmpq   269 <op_super+0x269> */
0x48, 0x8b, 0x7b, 0x58,                   /*fb: mov    0x58(%rbx),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*ff: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*104: mov    $0xe,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*109: callq  10e <op_super+0x10e> */
0x41, 0x89, 0xc5,                         /*10e: mov    %eax,%r13d */
0x48, 0x8b, 0x7b, 0x58,                   /*111: mov    0x58(%rbx),%rdi */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*115: lea    0x10(%rsp),%rsi */
0x44, 0x89, 0xea,                         /*11a: mov    %r13d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*11d: callq  122 <op_super+0x122> */
0x49, 0x89, 0xc4,                         /*122: mov    %rax,%r12 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*125: mov    $0x0,%eax */
0x0f, 0xb6, 0xc0,                         /*12a: movzbl %al,%eax */
0x83, 0xf8, 0x7f,                         /*12d: cmp    $0x7f,%eax */
0x75, 0x3c,                               /*130: jne    16e <op_super+0x16e> */
0x48, 0x8b, 0x43, 0x18,                   /*132: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x58,                   /*136: mov    0x58(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13a: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*13f: movzwl %cx,%ecx */
0xff, 0xc1,                               /*142: inc    %ecx */
0x48, 0x63, 0xd1,                         /*144: movslq %ecx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*147: shl    $0x4,%rdx */
0x41, 0x8b, 0x0e,                         /*14b: mov    (%r14),%ecx */
0x48, 0x8b, 0x34, 0x10,                   /*14e: mov    (%rax,%rdx,1),%rsi */
0x8b, 0x54, 0x10, 0x08,                   /*152: mov    0x8(%rax,%rdx,1),%edx */
0x41, 0xb8, 0x04, 0x00, 0x00, 0x00,       /*156: mov    $0x4,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*15c: callq  161 <op_super+0x161> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*161: mov    $0x0,%eax */
0x0f, 0xb6, 0xe8,                         /*166: movzbl %al,%ebp */
0xe9, 0xfb, 0x00, 0x00, 0x00,             /*169: jmpq   269 <op_super+0x269> */
0x48, 0x8b, 0x43, 0x18,                   /*16e: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*172: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*177: movzwl %cx,%ecx */
0x48, 0x8d, 0x51, 0x01,                   /*17a: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*17e: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*182: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*185: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*188: mov    $0x0,%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*18d: movzbl %dil,%edi */
0xff, 0xc7,                               /*191: inc    %edi */
0x48, 0x63, 0xff,                         /*193: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*196: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*19b: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*19e: setge  %cl */
0x08, 0xd1,                               /*1a1: or     %dl,%cl */
0x74, 0x45,                               /*1a3: je     1ea <op_super+0x1ea> */
0x31, 0xc9,                               /*1a5: xor    %ecx,%ecx */
0x84, 0xc9,                               /*1a7: test   %cl,%cl */
0x0f, 0x85, 0x89, 0x00, 0x00, 0x00,       /*1a9: jne    238 <op_super+0x238> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1af: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1b4: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*1b7: shl    $0x4,%rcx */
0x48, 0x8d, 0x44, 0x01, 0x20,             /*1bb: lea    0x20(%rcx,%rax,1),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1c0: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*1c5: movzbl %cl,%ecx */
0xff, 0xc1,                               /*1c8: inc    %ecx */
0x48, 0xf7, 0xd9,                         /*1ca: neg    %rcx */
0x0f, 0x1f, 0x00,                         /*1cd: nopl   (%rax) */
0x48, 0x8b, 0x50, 0xf0,                   /*1d0: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*1d4: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*1d8: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*1dc: mov    %rdx,(%rax) */
0x48, 0x83, 0xc0, 0x10,                   /*1df: add    $0x10,%rax */
0x48, 0xff, 0xc1,                         /*1e3: inc    %rcx */
0x75, 0xe8,                               /*1e6: jne    1d0 <op_super+0x1d0> */
0xeb, 0x4e,                               /*1e8: jmp    238 <op_super+0x238> */
0x31, 0xc9,                               /*1ea: xor    %ecx,%ecx */
0x84, 0xc9,                               /*1ec: test   %cl,%cl */
0x75, 0x48,                               /*1ee: jne    238 <op_super+0x238> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1f0: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*1f5: movzwl %cx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1f8: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*1fd: movzbl %cl,%ecx */
0xff, 0xc1,                               /*200: inc    %ecx */
0x48, 0x63, 0xf1,                         /*202: movslq %ecx,%rsi */
0x48, 0x01, 0xd6,                         /*205: add    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*208: shl    $0x4,%rsi */
0x48, 0x8d, 0x44, 0x06, 0x10,             /*20c: lea    0x10(%rsi,%rax,1),%rax */
0x48, 0xf7, 0xd9,                         /*211: neg    %rcx */
0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*214: data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x50, 0xf0,                   /*220: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*224: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*228: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*22c: mov    %rdx,(%rax) */
0x48, 0x8d, 0x40, 0xf0,                   /*22f: lea    -0x10(%rax),%rax */
0x48, 0xff, 0xc1,                         /*233: inc    %rcx */
0x75, 0xe8,                               /*236: jne    220 <op_super+0x220> */
0x48, 0x8b, 0x43, 0x18,                   /*238: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*23c: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*241: movzwl %cx,%ecx */
0xff, 0xc1,                               /*244: inc    %ecx */
0x48, 0x63, 0xc9,                         /*246: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*249: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x04, 0x00, 0x00, 0x00,/*24d: movl   $0x4,0x8(%rax,%rcx,1) */
0x41, 0x8b, 0x06,                         /*255: mov    (%r14),%eax */
0x48, 0x8b, 0x53, 0x18,                   /*258: mov    0x18(%rbx),%rdx */
0x89, 0x04, 0x0a,                         /*25c: mov    %eax,(%rdx,%rcx,1) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*25f: mov    $0x0,%eax */
0x0f, 0xb6, 0xe8,                         /*264: movzbl %al,%ebp */
0xff, 0xc5,                               /*267: inc    %ebp */
0x4c, 0x8b, 0x34, 0x24,                   /*269: mov    (%rsp),%r14 */
0x48, 0x8b, 0x7b, 0x58,                   /*26d: mov    0x58(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*271: callq  276 <op_super+0x276> */
0x44, 0x89, 0x28,                         /*276: mov    %r13d,(%rax) */
0x4c, 0x89, 0x60, 0x08,                   /*279: mov    %r12,0x8(%rax) */
0x48, 0x8b, 0x4b, 0x58,                   /*27d: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*281: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*285: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x48, 0x10,                   /*289: mov    %rcx,0x10(%rax) */
0x83, 0xfd, 0x7f,                         /*28d: cmp    $0x7f,%ebp */
0xb9, 0xff, 0xff, 0xff, 0xff,             /*290: mov    $0xffffffff,%ecx */
0x0f, 0x45, 0xcd,                         /*295: cmovne %ebp,%ecx */
0x89, 0x48, 0x40,                         /*298: mov    %ecx,0x40(%rax) */
0x48, 0x8b, 0x4c, 0x24, 0x10,             /*29b: mov    0x10(%rsp),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*2a0: mov    %rcx,0x48(%rax) */
0x48, 0x8b, 0x4b, 0x10,                   /*2a4: mov    0x10(%rbx),%rcx */
0x48, 0x83, 0xc1, 0x04,                   /*2a8: add    $0x4,%rcx */
0x48, 0x89, 0x48, 0x30,                   /*2ac: mov    %rcx,0x30(%rax) */
0x48, 0x8b, 0x4b, 0x58,                   /*2b0: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*2b4: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2b8: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*2bd: movzwl %dx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*2c0: shl    $0x4,%rdx */
0x48, 0x01, 0x51, 0x08,                   /*2c4: add    %rdx,0x8(%rcx) */
0x48, 0x8b, 0x4b, 0x58,                   /*2c8: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*2cc: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*2d0: mov    0x8(%rcx),%rcx */
0x4c, 0x89, 0x31,                         /*2d4: mov    %r14,(%rcx) */
0x48, 0x8b, 0x54, 0x24, 0x08,             /*2d7: mov    0x8(%rsp),%rdx */
0x89, 0x51, 0x08,                         /*2dc: mov    %edx,0x8(%rcx) */
0x44, 0x89, 0x79, 0x0c,                   /*2df: mov    %r15d,0xc(%rcx) */
0x41, 0xf6, 0x44, 0x24, 0x02, 0x04,       /*2e3: testb  $0x4,0x2(%r12) */
0x74, 0x50,                               /*2e9: je     33b <op_super+0x33b> */
0x8d, 0x4d, 0x02,                         /*2eb: lea    0x2(%rbp),%ecx */
0x83, 0xfd, 0x7f,                         /*2ee: cmp    $0x7f,%ebp */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*2f1: mov    $0x3,%esi */
0x0f, 0x45, 0xf1,                         /*2f6: cmovne %ecx,%esi */
0x89, 0x70, 0x18,                         /*2f9: mov    %esi,0x18(%rax) */
0x48, 0x8b, 0x7b, 0x58,                   /*2fc: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*300: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x68, 0x08,                   /*304: mov    0x8(%rax),%rbp */
0x4c, 0x89, 0xf6,                         /*308: mov    %r14,%rsi */
0x41, 0xff, 0x54, 0x24, 0x18,             /*30b: callq  *0x18(%r12) */
0x48, 0x89, 0x45, 0x00,                   /*310: mov    %rax,0x0(%rbp) */
0x89, 0x55, 0x08,                         /*314: mov    %edx,0x8(%rbp) */
0x48, 0x8b, 0x7b, 0x58,                   /*317: mov    0x58(%rbx),%rdi */
0x8b, 0x73, 0x50,                         /*31b: mov    0x50(%rbx),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*31e: callq  323 <op_super+0x323> */
0x48, 0x8b, 0x43, 0x58,                   /*323: mov    0x58(%rbx),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*327: cmpq   $0x0,0x28(%rax) */
0x74, 0x5f,                               /*32c: je     38d <op_super+0x38d> */
0x48, 0x89, 0xdf,                         /*32e: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*331: callq  336 <op_super+0x336> */
0xe9, 0xa3, 0x00, 0x00, 0x00,             /*336: jmpq   3de <op_super+0x3de> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*33b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*340: movzwl %cx,%ecx */
0x89, 0x48, 0x44,                         /*343: mov    %ecx,0x44(%rax) */
0x4c, 0x89, 0x60, 0x08,                   /*346: mov    %r12,0x8(%rax) */
0x49, 0x8b, 0x4c, 0x24, 0x18,             /*34a: mov    0x18(%r12),%rcx */
0x48, 0x89, 0x4b, 0x08,                   /*34f: mov    %rcx,0x8(%rbx) */
0x48, 0x8b, 0x51, 0x10,                   /*353: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x53, 0x20,                   /*357: mov    %rdx,0x20(%rbx) */
0x48, 0x8b, 0x51, 0x18,                   /*35b: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x53, 0x28,                   /*35f: mov    %rdx,0x28(%rbx) */
0x0f, 0xb7, 0x49, 0x02,                   /*363: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*367: mov    %ecx,0x18(%rax) */
0x48, 0x8b, 0x4b, 0x08,                   /*36a: mov    0x8(%rbx),%rcx */
0x48, 0x8b, 0x7b, 0x58,                   /*36e: mov    0x58(%rbx),%rdi */
0x0f, 0xb7, 0x71, 0x02,                   /*372: movzwl 0x2(%rcx),%esi */
0x83, 0xfd, 0x7f,                         /*376: cmp    $0x7f,%ebp */
0x75, 0x31,                               /*379: jne    3ac <op_super+0x3ac> */
0x83, 0xfe, 0x03,                         /*37b: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*37e: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*383: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*386: mov    $0x3,%edx */
0xeb, 0x25,                               /*38b: jmp    3b2 <op_super+0x3b2> */
0x48, 0x8b, 0x40, 0x18,                   /*38d: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*391: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*395: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*399: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x4b, 0x18,                   /*39d: mov    %rcx,0x18(%rbx) */
0x48, 0x8b, 0x7b, 0x58,                   /*3a1: mov    0x58(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3a5: callq  3aa <op_super+0x3aa> */
0xeb, 0x32,                               /*3aa: jmp    3de <op_super+0x3de> */
0x8b, 0x50, 0x40,                         /*3ac: mov    0x40(%rax),%edx */
0x83, 0xc2, 0x02,                         /*3af: add    $0x2,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3b2: callq  3b7 <op_super+0x3b7> */
0x48, 0x8b, 0x7b, 0x58,                   /*3b7: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*3bb: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3bf: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x18,                   /*3c3: mov    %rax,0x18(%rbx) */
0x48, 0x8b, 0x43, 0x08,                   /*3c7: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3cb: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x10,                   /*3cf: mov    %rax,0x10(%rbx) */
0x4c, 0x89, 0xe6,                         /*3d3: mov    %r12,%rsi */
0x48, 0x89, 0xda,                         /*3d6: mov    %rbx,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3d9: callq  3de <op_super+0x3de> */
0x48, 0x89, 0xdf,                         /*3de: mov    %rbx,%rdi */
0x48, 0x83, 0xc4, 0x18,                   /*3e1: add    $0x18,%rsp */
0x5b,                                     /*3e5: pop    %rbx */
0x41, 0x5c,                               /*3e6: pop    %r12 */
0x41, 0x5d,                               /*3e8: pop    %r13 */
0x41, 0x5e,                               /*3ea: pop    %r14 */
0x41, 0x5f,                               /*3ec: pop    %r15 */
0x5d,                                     /*3ee: pop    %rbp */

};
static uint8_t op_super__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x6f, 0x75, 0x74,
0x73, 0x69, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x00, 0x6d,
0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x00,

};

static void op_super_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_super_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_super_set_args(op, GETARG_A(c),0,GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_argary__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x48,                   /*a: sub    $0x48,%rsp */
0x49, 0x89, 0xfc,                         /*e: mov    %rdi,%r12 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*16: movzwl %ax,%eax */
0x89, 0x44, 0x24, 0x44,                   /*19: mov    %eax,0x44(%rsp) */
0x44, 0x8b, 0x6c, 0x24, 0x44,             /*1d: mov    0x44(%rsp),%r13d */
0x44, 0x8b, 0x74, 0x24, 0x44,             /*22: mov    0x44(%rsp),%r14d */
0x8b, 0x5c, 0x24, 0x44,                   /*27: mov    0x44(%rsp),%ebx */
0x8b, 0x74, 0x24, 0x44,                   /*2b: mov    0x44(%rsp),%esi */
0x83, 0xe6, 0x0f,                         /*2f: and    $0xf,%esi */
0x0f, 0x84, 0x86, 0x00, 0x00, 0x00,       /*32: je     be <op_argary+0xbe> */
0x49, 0x8b, 0x6c, 0x24, 0x58,             /*38: mov    0x58(%r12),%rbp */
0x48, 0x8b, 0x45, 0x18,                   /*3d: mov    0x18(%rbp),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*41: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*45: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x28,                   /*49: mov    0x28(%rax),%rax */
0x48, 0x85, 0xc0,                         /*4d: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*50: sete   %cl */
0x83, 0xfe, 0x01,                         /*53: cmp    $0x1,%esi */
0x74, 0x1b,                               /*56: je     73 <op_argary+0x73> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*58: mov    $0x1,%edx */
0x29, 0xf2,                               /*5d: sub    %esi,%edx */
0x90,                                     /*5f: nop */
0xf6, 0xc1, 0x01,                         /*60: test   $0x1,%cl */
0x75, 0x12,                               /*63: jne    77 <op_argary+0x77> */
0x48, 0x8b, 0x40, 0x08,                   /*65: mov    0x8(%rax),%rax */
0x48, 0x85, 0xc0,                         /*69: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*6c: sete   %cl */
0xff, 0xc2,                               /*6f: inc    %edx */
0x75, 0xed,                               /*71: jne    60 <op_argary+0x60> */
0x84, 0xc9,                               /*73: test   %cl,%cl */
0x74, 0x4e,                               /*75: je     c5 <op_argary+0xc5> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*77: mov    0x0(%rip),%rsi        # 7e <op_argary+0x7e> */
0x48, 0x89, 0xef,                         /*7e: mov    %rbp,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*81: callq  86 <op_argary+0x86> */
0x49, 0x89, 0xc6,                         /*86: mov    %rax,%r14 */
0x49, 0x8b, 0x7c, 0x24, 0x58,             /*89: mov    0x58(%r12),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*8e: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*93: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*98: callq  9d <op_argary+0x9d> */
0x89, 0xd1,                               /*9d: mov    %edx,%ecx */
0x48, 0x89, 0xef,                         /*9f: mov    %rbp,%rdi */
0x4c, 0x89, 0xf6,                         /*a2: mov    %r14,%rsi */
0x48, 0x89, 0xc2,                         /*a5: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a8: callq  ad <op_argary+0xad> */
0x48, 0x89, 0x45, 0x28,                   /*ad: mov    %rax,0x28(%rbp) */
0x4c, 0x89, 0xe7,                         /*b1: mov    %r12,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b4: callq  b9 <op_argary+0xb9> */
0xe9, 0x31, 0x02, 0x00, 0x00,             /*b9: jmpq   2ef <op_argary+0x2ef> */
0x49, 0x8d, 0x44, 0x24, 0x18,             /*be: lea    0x18(%r12),%rax */
0xeb, 0x04,                               /*c3: jmp    c9 <op_argary+0xc9> */
0x48, 0x83, 0xc0, 0x18,                   /*c5: add    $0x18,%rax */
0x41, 0xc1, 0xed, 0x0a,                   /*c9: shr    $0xa,%r13d */
0x45, 0x89, 0xe9,                         /*cd: mov    %r13d,%r9d */
0x41, 0x83, 0xe1, 0x3f,                   /*d0: and    $0x3f,%r9d */
0x41, 0xc1, 0xee, 0x09,                   /*d4: shr    $0x9,%r14d */
0x41, 0x83, 0xe6, 0x01,                   /*d8: and    $0x1,%r14d */
0xc1, 0xeb, 0x04,                         /*dc: shr    $0x4,%ebx */
0x89, 0xd9,                               /*df: mov    %ebx,%ecx */
0x83, 0xe1, 0x1f,                         /*e1: and    $0x1f,%ecx */
0x4c, 0x8b, 0x00,                         /*e4: mov    (%rax),%r8 */
0x49, 0x8d, 0x68, 0x10,                   /*e7: lea    0x10(%r8),%rbp */
0x45, 0x85, 0xf6,                         /*eb: test   %r14d,%r14d */
0x0f, 0x84, 0x71, 0x01, 0x00, 0x00,       /*ee: je     265 <op_argary+0x265> */
0x44, 0x89, 0x74, 0x24, 0x38,             /*f4: mov    %r14d,0x38(%rsp) */
0x4d, 0x89, 0xe6,                         /*f9: mov    %r12,%r14 */
0x44, 0x89, 0xc8,                         /*fc: mov    %r9d,%eax */
0x48, 0x89, 0x44, 0x24, 0x18,             /*ff: mov    %rax,0x18(%rsp) */
0x48, 0x8d, 0x40, 0x01,                   /*104: lea    0x1(%rax),%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*108: shl    $0x4,%rax */
0x45, 0x31, 0xff,                         /*10c: xor    %r15d,%r15d */
0x41, 0x83, 0x7c, 0x00, 0x08, 0x0e,       /*10f: cmpl   $0xe,0x8(%r8,%rax,1) */
0xba, 0x00, 0x00, 0x00, 0x00,             /*115: mov    $0x0,%edx */
0x75, 0x0b,                               /*11a: jne    127 <op_argary+0x127> */
0x49, 0x8b, 0x04, 0x00,                   /*11c: mov    (%r8,%rax,1),%rax */
0x4c, 0x8b, 0x78, 0x28,                   /*120: mov    0x28(%rax),%r15 */
0x8b, 0x50, 0x18,                         /*124: mov    0x18(%rax),%edx */
0x48, 0x89, 0x54, 0x24, 0x08,             /*127: mov    %rdx,0x8(%rsp) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12c: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xe0,                   /*131: movzwl %ax,%r12d */
0x49, 0xc1, 0xe4, 0x04,                   /*135: shl    $0x4,%r12 */
0x49, 0x8b, 0x46, 0x18,                   /*139: mov    0x18(%r14),%rax */
0x48, 0x89, 0x04, 0x24,                   /*13d: mov    %rax,(%rsp) */
0x49, 0x8b, 0x7e, 0x58,                   /*141: mov    0x58(%r14),%rdi */
0x42, 0x8d, 0x34, 0x09,                   /*145: lea    (%rcx,%r9,1),%esi */
0x48, 0x89, 0x4c, 0x24, 0x20,             /*149: mov    %rcx,0x20(%rsp) */
0x01, 0xd6,                               /*14e: add    %edx,%esi */
0x89, 0x74, 0x24, 0x14,                   /*150: mov    %esi,0x14(%rsp) */
0x4c, 0x89, 0x4c, 0x24, 0x30,             /*154: mov    %r9,0x30(%rsp) */
0x4c, 0x89, 0x44, 0x24, 0x28,             /*159: mov    %r8,0x28(%rsp) */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*15e: callq  163 <op_argary+0x163> */
0x4c, 0x8b, 0x54, 0x24, 0x28,             /*163: mov    0x28(%rsp),%r10 */
0x4c, 0x8b, 0x4c, 0x24, 0x30,             /*168: mov    0x30(%rsp),%r9 */
0x48, 0x8b, 0x0c, 0x24,                   /*16d: mov    (%rsp),%rcx */
0x4a, 0x89, 0x04, 0x21,                   /*171: mov    %rax,(%rcx,%r12,1) */
0x42, 0x89, 0x54, 0x21, 0x08,             /*175: mov    %edx,0x8(%rcx,%r12,1) */
0x49, 0x8b, 0x46, 0x18,                   /*17a: mov    0x18(%r14),%rax */
0x4d, 0x89, 0xf0,                         /*17e: mov    %r14,%r8 */
0x4e, 0x8b, 0x1c, 0x20,                   /*181: mov    (%rax,%r12,1),%r11 */
0x45, 0x85, 0xc9,                         /*185: test   %r9d,%r9d */
0x74, 0x3a,                               /*188: je     1c4 <op_argary+0x1c4> */
0x49, 0x8b, 0x4b, 0x28,                   /*18a: mov    0x28(%r11),%rcx */
0x49, 0x83, 0xe5, 0x3f,                   /*18e: and    $0x3f,%r13 */
0x49, 0xf7, 0xdd,                         /*192: neg    %r13 */
0x4c, 0x89, 0xd2,                         /*195: mov    %r10,%rdx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*198: nopl   0x0(%rax,%rax,1) */
0x48, 0x89, 0xee,                         /*1a0: mov    %rbp,%rsi */
0x48, 0x83, 0xc2, 0x20,                   /*1a3: add    $0x20,%rdx */
0x48, 0x8b, 0x3e,                         /*1a7: mov    (%rsi),%rdi */
0x48, 0x8b, 0x6e, 0x08,                   /*1aa: mov    0x8(%rsi),%rbp */
0x48, 0x89, 0x69, 0x08,                   /*1ae: mov    %rbp,0x8(%rcx) */
0x48, 0x89, 0x39,                         /*1b2: mov    %rdi,(%rcx) */
0x48, 0x8d, 0x49, 0x10,                   /*1b5: lea    0x10(%rcx),%rcx */
0x49, 0xff, 0xc5,                         /*1b9: inc    %r13 */
0x48, 0x89, 0xd5,                         /*1bc: mov    %rdx,%rbp */
0x48, 0x89, 0xf2,                         /*1bf: mov    %rsi,%rdx */
0x75, 0xdc,                               /*1c2: jne    1a0 <op_argary+0x1a0> */
0x48, 0x8b, 0x44, 0x24, 0x08,             /*1c4: mov    0x8(%rsp),%rax */
0x85, 0xc0,                               /*1c9: test   %eax,%eax */
0x44, 0x8b, 0x74, 0x24, 0x38,             /*1cb: mov    0x38(%rsp),%r14d */
0x4c, 0x8b, 0x6c, 0x24, 0x18,             /*1d0: mov    0x18(%rsp),%r13 */
0x7e, 0x34,                               /*1d5: jle    20b <op_argary+0x20b> */
0x4c, 0x89, 0xe9,                         /*1d7: mov    %r13,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*1da: shl    $0x4,%rcx */
0x49, 0x03, 0x4b, 0x28,                   /*1de: add    0x28(%r11),%rcx */
0x48, 0x63, 0xd0,                         /*1e2: movslq %eax,%rdx */
0x48, 0xf7, 0xda,                         /*1e5: neg    %rdx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1e8: nopl   0x0(%rax,%rax,1) */
0x49, 0x8b, 0x37,                         /*1f0: mov    (%r15),%rsi */
0x49, 0x8b, 0x7f, 0x08,                   /*1f3: mov    0x8(%r15),%rdi */
0x4d, 0x8d, 0x7f, 0x10,                   /*1f7: lea    0x10(%r15),%r15 */
0x48, 0x89, 0x79, 0x08,                   /*1fb: mov    %rdi,0x8(%rcx) */
0x48, 0x89, 0x31,                         /*1ff: mov    %rsi,(%rcx) */
0x48, 0x8d, 0x49, 0x10,                   /*202: lea    0x10(%rcx),%rcx */
0x48, 0xff, 0xc2,                         /*206: inc    %rdx */
0x75, 0xe5,                               /*209: jne    1f0 <op_argary+0x1f0> */
0x48, 0x8b, 0x6c, 0x24, 0x20,             /*20b: mov    0x20(%rsp),%rbp */
0x85, 0xed,                               /*210: test   %ebp,%ebp */
0x4d, 0x89, 0xc4,                         /*212: mov    %r8,%r12 */
0x74, 0x44,                               /*215: je     25b <op_argary+0x25b> */
0x4c, 0x89, 0xe9,                         /*217: mov    %r13,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*21a: shl    $0x4,%rcx */
0x4a, 0x8d, 0x4c, 0x11, 0x20,             /*21e: lea    0x20(%rcx,%r10,1),%rcx */
0x48, 0x63, 0xd0,                         /*223: movslq %eax,%rdx */
0x4c, 0x01, 0xea,                         /*226: add    %r13,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*229: shl    $0x4,%rdx */
0x49, 0x03, 0x53, 0x28,                   /*22d: add    0x28(%r11),%rdx */
0x48, 0x83, 0xe3, 0x1f,                   /*231: and    $0x1f,%rbx */
0x48, 0xf7, 0xdb,                         /*235: neg    %rbx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*238: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x31,                         /*240: mov    (%rcx),%rsi */
0x48, 0x8b, 0x79, 0x08,                   /*243: mov    0x8(%rcx),%rdi */
0x48, 0x8d, 0x49, 0x10,                   /*247: lea    0x10(%rcx),%rcx */
0x48, 0x89, 0x7a, 0x08,                   /*24b: mov    %rdi,0x8(%rdx) */
0x48, 0x89, 0x32,                         /*24f: mov    %rsi,(%rdx) */
0x48, 0x8d, 0x52, 0x10,                   /*252: lea    0x10(%rdx),%rdx */
0x48, 0xff, 0xc3,                         /*256: inc    %rbx */
0x75, 0xe5,                               /*259: jne    240 <op_argary+0x240> */
0x8b, 0x44, 0x24, 0x14,                   /*25b: mov    0x14(%rsp),%eax */
0x41, 0x89, 0x43, 0x18,                   /*25f: mov    %eax,0x18(%r11) */
0xeb, 0x43,                               /*263: jmp    2a8 <op_argary+0x2a8> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*265: mov    $0x0,%eax */
0x0f, 0xb7, 0xd8,                         /*26a: movzwl %ax,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*26d: shl    $0x4,%rbx */
0x49, 0x8b, 0x44, 0x24, 0x18,             /*271: mov    0x18(%r12),%rax */
0x48, 0x89, 0x44, 0x24, 0x38,             /*276: mov    %rax,0x38(%rsp) */
0x49, 0x8b, 0x7c, 0x24, 0x58,             /*27b: mov    0x58(%r12),%rdi */
0x42, 0x8d, 0x34, 0x09,                   /*280: lea    (%rcx,%r9,1),%esi */
0x48, 0x89, 0xea,                         /*284: mov    %rbp,%rdx */
0x4d, 0x89, 0xcd,                         /*287: mov    %r9,%r13 */
0x4d, 0x89, 0xc7,                         /*28a: mov    %r8,%r15 */
0x48, 0x89, 0xcd,                         /*28d: mov    %rcx,%rbp */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*290: callq  295 <op_argary+0x295> */
0x4d, 0x89, 0xfa,                         /*295: mov    %r15,%r10 */
0x4d, 0x89, 0xe9,                         /*298: mov    %r13,%r9 */
0x48, 0x8b, 0x4c, 0x24, 0x38,             /*29b: mov    0x38(%rsp),%rcx */
0x48, 0x89, 0x04, 0x19,                   /*2a0: mov    %rax,(%rcx,%rbx,1) */
0x89, 0x54, 0x19, 0x08,                   /*2a4: mov    %edx,0x8(%rcx,%rbx,1) */
0x49, 0x8b, 0x44, 0x24, 0x18,             /*2a8: mov    0x18(%r12),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2ad: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*2b2: movzwl %cx,%ecx */
0xff, 0xc1,                               /*2b5: inc    %ecx */
0x48, 0x63, 0xc9,                         /*2b7: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*2ba: shl    $0x4,%rcx */
0x45, 0x01, 0xf1,                         /*2be: add    %r14d,%r9d */
0x42, 0x8d, 0x54, 0x0d, 0x01,             /*2c1: lea    0x1(%rbp,%r9,1),%edx */
0x48, 0x63, 0xd2,                         /*2c6: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*2c9: shl    $0x4,%rdx */
0x49, 0x8b, 0x34, 0x12,                   /*2cd: mov    (%r10,%rdx,1),%rsi */
0x49, 0x8b, 0x54, 0x12, 0x08,             /*2d1: mov    0x8(%r10,%rdx,1),%rdx */
0x48, 0x89, 0x54, 0x08, 0x08,             /*2d6: mov    %rdx,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x34, 0x08,                   /*2db: mov    %rsi,(%rax,%rcx,1) */
0x41, 0x8b, 0x44, 0x24, 0x50,             /*2df: mov    0x50(%r12),%eax */
0x49, 0x8b, 0x4c, 0x24, 0x58,             /*2e4: mov    0x58(%r12),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*2e9: mov    %eax,0xdc(%rcx) */
0x4c, 0x89, 0xe7,                         /*2ef: mov    %r12,%rdi */
0x48, 0x83, 0xc4, 0x48,                   /*2f2: add    $0x48,%rsp */
0x5b,                                     /*2f6: pop    %rbx */
0x41, 0x5c,                               /*2f7: pop    %r12 */
0x41, 0x5d,                               /*2f9: pop    %r13 */
0x41, 0x5e,                               /*2fb: pop    %r14 */
0x41, 0x5f,                               /*2fd: pop    %r15 */
0x5d,                                     /*2ff: pop    %rbp */

};
static uint8_t op_argary__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x6f, 0x75, 0x74,
0x73, 0x69, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x00,

};

static void op_argary_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_argary_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_argary_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_enter__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*a: sub    $0x18,%rsp */
0x49, 0x89, 0xff,                         /*e: mov    %rdi,%r15 */
0x49, 0x8b, 0x5f, 0x18,                   /*11: mov    0x18(%r15),%rbx */
0x49, 0x8b, 0x7f, 0x58,                   /*15: mov    0x58(%r15),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*19: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1d: mov    0x20(%rax),%rax */
0x4c, 0x63, 0x60, 0x40,                   /*21: movslq 0x40(%rax),%r12 */
0x4d, 0x85, 0xe4,                         /*25: test   %r12,%r12 */
0x49, 0x8d, 0x4c, 0x24, 0x01,             /*28: lea    0x1(%r12),%rcx */
0xb8, 0x02, 0x00, 0x00, 0x00,             /*2d: mov    $0x2,%eax */
0x48, 0x0f, 0x49, 0xc1,                   /*32: cmovns %rcx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*36: shl    $0x4,%rax */
0x4c, 0x8d, 0x2c, 0x03,                   /*3a: lea    (%rbx,%rax,1),%r13 */
0x8b, 0x54, 0x03, 0x08,                   /*3e: mov    0x8(%rbx,%rax,1),%edx */
0x83, 0xfa, 0x0d,                         /*42: cmp    $0xd,%edx */
0x74, 0x31,                               /*45: je     78 <op_enter+0x78> */
0x85, 0xd2,                               /*47: test   %edx,%edx */
0x75, 0x07,                               /*49: jne    52 <op_enter+0x52> */
0x41, 0x83, 0x7d, 0x00, 0x00,             /*4b: cmpl   $0x0,0x0(%r13) */
0x74, 0x26,                               /*50: je     78 <op_enter+0x78> */
0x48, 0x8d, 0x6c, 0x03, 0x08,             /*52: lea    0x8(%rbx,%rax,1),%rbp */
0x49, 0x8b, 0x75, 0x00,                   /*57: mov    0x0(%r13),%rsi */
0xb9, 0x0d, 0x00, 0x00, 0x00,             /*5b: mov    $0xd,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*60: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*66: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6c: callq  71 <op_enter+0x71> */
0x49, 0x89, 0x45, 0x00,                   /*71: mov    %rax,0x0(%r13) */
0x89, 0x55, 0x00,                         /*75: mov    %edx,0x0(%rbp) */
0x48, 0x83, 0xc3, 0x10,                   /*78: add    $0x10,%rbx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*7c: mov    $0x0,%edi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*81: mov    $0x0,%edx */
0x31, 0xc0,                               /*86: xor    %eax,%eax */
0x4c, 0x89, 0xee,                         /*88: mov    %r13,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8b: callq  90 <op_enter+0x90> */
0x45, 0x85, 0xe4,                         /*90: test   %r12d,%r12d */
0x49, 0x89, 0xde,                         /*93: mov    %rbx,%r14 */
0x79, 0x1c,                               /*96: jns    b4 <op_enter+0xb4> */
0x49, 0x8b, 0x47, 0x18,                   /*98: mov    0x18(%r15),%rax */
0x49, 0x8b, 0x7f, 0x58,                   /*9c: mov    0x58(%r15),%rdi */
0x48, 0x8b, 0x70, 0x10,                   /*a0: mov    0x10(%rax),%rsi */
0x4c, 0x8b, 0x76, 0x28,                   /*a4: mov    0x28(%rsi),%r14 */
0x44, 0x8b, 0x66, 0x18,                   /*a8: mov    0x18(%rsi),%r12d */
0x8b, 0x50, 0x18,                         /*ac: mov    0x18(%rax),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*af: callq  b4 <op_enter+0xb4> */
0x49, 0x8b, 0x7f, 0x58,                   /*b4: mov    0x58(%r15),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*b8: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*bc: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*c0: mov    0x8(%rax),%rcx */
0x48, 0x85, 0xc9,                         /*c4: test   %rcx,%rcx */
0x0f, 0x84, 0x85, 0x00, 0x00, 0x00,       /*c7: je     152 <op_enter+0x152> */
0xf6, 0x41, 0x02, 0x08,                   /*cd: testb  $0x8,0x2(%rcx) */
0x74, 0x7f,                               /*d1: je     152 <op_enter+0x152> */
0x45, 0x85, 0xe4,                         /*d3: test   %r12d,%r12d */
0x0f, 0x88, 0xe4, 0x00, 0x00, 0x00,       /*d6: js     1c0 <op_enter+0x1c0> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*dc: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*e1: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*e6: shr    $0x7,%esi */
0x83, 0xe6, 0x1f,                         /*e9: and    $0x1f,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ec: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*f1: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*f4: and    $0x1f,%ecx */
0x44, 0x8d, 0x04, 0x31,                   /*f7: lea    (%rcx,%rsi,1),%r8d */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*fb: mov    $0x0,%ebp */
0xc1, 0xed, 0x0d,                         /*100: shr    $0xd,%ebp */
0x83, 0xe5, 0x1f,                         /*103: and    $0x1f,%ebp */
0x01, 0xcd,                               /*106: add    %ecx,%ebp */
0xc1, 0xea, 0x0c,                         /*108: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*10b: and    $0x1,%edx */
0x0f, 0x94, 0xc1,                         /*10e: sete   %cl */
0x01, 0xea,                               /*111: add    %ebp,%edx */
0x01, 0xf2,                               /*113: add    %esi,%edx */
0x41, 0x39, 0xd4,                         /*115: cmp    %edx,%r12d */
0x0f, 0x9f, 0xc2,                         /*118: setg   %dl */
0x45, 0x39, 0xc4,                         /*11b: cmp    %r8d,%r12d */
0x7c, 0x08,                               /*11e: jl     128 <op_enter+0x128> */
0x20, 0xca,                               /*120: and    %cl,%dl */
0x0f, 0x84, 0x98, 0x00, 0x00, 0x00,       /*122: je     1c0 <op_enter+0x1c0> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*128: mov    $0x0,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12d: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*132: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*135: and    $0x1f,%eax */
0xc1, 0xee, 0x12,                         /*138: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*13b: and    $0x1f,%esi */
0x01, 0xc6,                               /*13e: add    %eax,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*140: callq  145 <op_enter+0x145> */
0x4c, 0x89, 0xff,                         /*145: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*148: callq  14d <op_enter+0x14d> */
0xe9, 0xc2, 0x07, 0x00, 0x00,             /*14d: jmpq   914 <op_enter+0x914> */
0x41, 0x83, 0xfc, 0x01,                   /*152: cmp    $0x1,%r12d */
0x75, 0x68,                               /*156: jne    1c0 <op_enter+0x1c0> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*158: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15d: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*162: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*165: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*168: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*16d: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*170: and    $0x1f,%esi */
0x01, 0xd6,                               /*173: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*175: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*17a: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*17d: and    $0x1,%edx */
0x01, 0xf2,                               /*180: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*182: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*185: and    $0x1f,%ecx */
0x01, 0xd1,                               /*188: add    %edx,%ecx */
0x83, 0xf9, 0x02,                         /*18a: cmp    $0x2,%ecx */
0x7c, 0x31,                               /*18d: jl     1c0 <op_enter+0x1c0> */
0x41, 0xbc, 0x01, 0x00, 0x00, 0x00,       /*18f: mov    $0x1,%r12d */
0x41, 0x83, 0x7e, 0x08, 0x0e,             /*195: cmpl   $0xe,0x8(%r14) */
0x75, 0x24,                               /*19a: jne    1c0 <op_enter+0x1c0> */
0x49, 0x8b, 0x36,                         /*19c: mov    (%r14),%rsi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*19f: mov    $0xe,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1a4: callq  1a9 <op_enter+0x1a9> */
0x49, 0x8b, 0x06,                         /*1a9: mov    (%r14),%rax */
0x44, 0x8b, 0x60, 0x18,                   /*1ac: mov    0x18(%rax),%r12d */
0x4c, 0x8b, 0x70, 0x28,                   /*1b0: mov    0x28(%rax),%r14 */
0x49, 0x8b, 0x47, 0x58,                   /*1b4: mov    0x58(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*1b8: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1bc: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1c0: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1c5: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*1ca: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*1cd: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1d0: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*1d5: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*1d8: and    $0x1f,%esi */
0x01, 0xd6,                               /*1db: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1dd: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*1e2: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*1e5: and    $0x1,%edx */
0x01, 0xf2,                               /*1e8: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*1ea: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*1ed: and    $0x1f,%ecx */
0x01, 0xd1,                               /*1f0: add    %edx,%ecx */
0x89, 0x48, 0x40,                         /*1f2: mov    %ecx,0x40(%rax) */
0x41, 0x39, 0xcc,                         /*1f5: cmp    %ecx,%r12d */
0x0f, 0x8d, 0x22, 0x01, 0x00, 0x00,       /*1f8: jge    320 <op_enter+0x320> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1fe: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*203: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*208: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*20b: and    $0x1f,%eax */
0xc1, 0xe9, 0x12,                         /*20e: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*211: and    $0x1f,%ecx */
0x01, 0xc1,                               /*214: add    %eax,%ecx */
0x41, 0x39, 0xcc,                         /*216: cmp    %ecx,%r12d */
0x7d, 0x15,                               /*219: jge    230 <op_enter+0x230> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*21b: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*220: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*223: and    $0x1f,%ecx */
0x31, 0xd2,                               /*226: xor    %edx,%edx */
0x44, 0x89, 0xe0,                         /*228: mov    %r12d,%eax */
0x29, 0xc8,                               /*22b: sub    %ecx,%eax */
0x0f, 0x4e, 0xc2,                         /*22d: cmovle %edx,%eax */
0x49, 0x8b, 0x4f, 0x18,                   /*230: mov    0x18(%r15),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*234: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*239: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*23e: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*241: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*244: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*249: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*24c: and    $0x1f,%edi */
0x01, 0xf7,                               /*24f: add    %esi,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*251: mov    $0x0,%esi */
0xc1, 0xee, 0x0c,                         /*256: shr    $0xc,%esi */
0x83, 0xe6, 0x01,                         /*259: and    $0x1,%esi */
0x01, 0xfe,                               /*25c: add    %edi,%esi */
0xc1, 0xea, 0x07,                         /*25e: shr    $0x7,%edx */
0x83, 0xe2, 0x1f,                         /*261: and    $0x1f,%edx */
0x8d, 0x54, 0x32, 0x01,                   /*264: lea    0x1(%rdx,%rsi,1),%edx */
0x48, 0x63, 0xd2,                         /*268: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*26b: shl    $0x4,%rdx */
0x49, 0x8b, 0x75, 0x00,                   /*26f: mov    0x0(%r13),%rsi */
0x49, 0x8b, 0x7d, 0x08,                   /*273: mov    0x8(%r13),%rdi */
0x48, 0x89, 0x7c, 0x11, 0x08,             /*277: mov    %rdi,0x8(%rcx,%rdx,1) */
0x48, 0x89, 0x34, 0x11,                   /*27c: mov    %rsi,(%rcx,%rdx,1) */
0x41, 0x8d, 0x4c, 0x24, 0x01,             /*280: lea    0x1(%r12),%ecx */
0x48, 0x63, 0xc9,                         /*285: movslq %ecx,%rcx */
0x49, 0x8b, 0x57, 0x18,                   /*288: mov    0x18(%r15),%rdx */
0x48, 0xc1, 0xe1, 0x04,                   /*28c: shl    $0x4,%rcx */
0xc7, 0x44, 0x0a, 0x08, 0x00, 0x00, 0x00, 0x00,/*290: movl   $0x0,0x8(%rdx,%rcx,1) */
0x49, 0x8b, 0x57, 0x18,                   /*298: mov    0x18(%r15),%rdx */
0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, /*29c: movl   $0x0,(%rdx,%rcx,1) */
0x4c, 0x39, 0xf3,                         /*2a3: cmp    %r14,%rbx */
0x0f, 0x84, 0xb8, 0x01, 0x00, 0x00,       /*2a6: je     464 <op_enter+0x464> */
0x49, 0x8b, 0x4f, 0x18,                   /*2ac: mov    0x18(%r15),%rcx */
0x48, 0x8d, 0x69, 0x10,                   /*2b0: lea    0x10(%rcx),%rbp */
0x4c, 0x39, 0xf5,                         /*2b4: cmp    %r14,%rbp */
0x0f, 0x86, 0x63, 0x01, 0x00, 0x00,       /*2b7: jbe    420 <op_enter+0x420> */
0x44, 0x89, 0xe6,                         /*2bd: mov    %r12d,%esi */
0x29, 0xc6,                               /*2c0: sub    %eax,%esi */
0x48, 0x63, 0xf6,                         /*2c2: movslq %esi,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*2c5: shl    $0x4,%rsi */
0x4c, 0x01, 0xf6,                         /*2c9: add    %r14,%rsi */
0x48, 0x39, 0xf5,                         /*2cc: cmp    %rsi,%rbp */
0x0f, 0x83, 0x4b, 0x01, 0x00, 0x00,       /*2cf: jae    420 <op_enter+0x420> */
0x44, 0x89, 0xe2,                         /*2d5: mov    %r12d,%edx */
0x29, 0xc2,                               /*2d8: sub    %eax,%edx */
0x0f, 0x84, 0x84, 0x01, 0x00, 0x00,       /*2da: je     464 <op_enter+0x464> */
0x48, 0x63, 0xd2,                         /*2e0: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*2e3: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*2e6: shl    $0x4,%rsi */
0x48, 0x01, 0xf1,                         /*2ea: add    %rsi,%rcx */
0x4a, 0x8d, 0x74, 0x36, 0xf0,             /*2ed: lea    -0x10(%rsi,%r14,1),%rsi */
0x48, 0xf7, 0xda,                         /*2f2: neg    %rdx */
0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*2f5: data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x3e,                         /*300: mov    (%rsi),%rdi */
0x48, 0x8b, 0x6e, 0x08,                   /*303: mov    0x8(%rsi),%rbp */
0x48, 0x89, 0x69, 0x08,                   /*307: mov    %rbp,0x8(%rcx) */
0x48, 0x89, 0x39,                         /*30b: mov    %rdi,(%rcx) */
0x48, 0x83, 0xc1, 0xf0,                   /*30e: add    $0xfffffffffffffff0,%rcx */
0x48, 0x83, 0xc6, 0xf0,                   /*312: add    $0xfffffffffffffff0,%rsi */
0x48, 0xff, 0xc2,                         /*316: inc    %rdx */
0x75, 0xe5,                               /*319: jne    300 <op_enter+0x300> */
0xe9, 0x44, 0x01, 0x00, 0x00,             /*31b: jmpq   464 <op_enter+0x464> */
0x4c, 0x39, 0xf3,                         /*320: cmp    %r14,%rbx */
0x0f, 0x84, 0x6b, 0x02, 0x00, 0x00,       /*323: je     594 <op_enter+0x594> */
0x49, 0x8b, 0x47, 0x18,                   /*329: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*32d: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*332: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*337: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*33a: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*33d: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*342: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*345: and    $0x1f,%esi */
0x01, 0xd6,                               /*348: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*34a: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*34f: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*352: and    $0x1,%edx */
0x01, 0xf2,                               /*355: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*357: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*35a: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*35d: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*361: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*364: shl    $0x4,%rcx */
0x49, 0x8b, 0x55, 0x00,                   /*368: mov    0x0(%r13),%rdx */
0x49, 0x8b, 0x75, 0x08,                   /*36c: mov    0x8(%r13),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*370: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*375: mov    %rdx,(%rax,%rcx,1) */
0x49, 0x8b, 0x47, 0x18,                   /*379: mov    0x18(%r15),%rax */
0x48, 0x8d, 0x48, 0x10,                   /*37d: lea    0x10(%rax),%rcx */
0x4c, 0x39, 0xf1,                         /*381: cmp    %r14,%rcx */
0x0f, 0x86, 0xa6, 0x01, 0x00, 0x00,       /*384: jbe    530 <op_enter+0x530> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*38a: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*38f: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*394: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*397: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*39a: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*39d: and    $0x1f,%edx */
0x01, 0xf2,                               /*3a0: add    %esi,%edx */
0x48, 0x63, 0xd2,                         /*3a2: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*3a5: shl    $0x4,%rdx */
0x4c, 0x01, 0xf2,                         /*3a9: add    %r14,%rdx */
0x48, 0x39, 0xd1,                         /*3ac: cmp    %rdx,%rcx */
0x0f, 0x83, 0x7b, 0x01, 0x00, 0x00,       /*3af: jae    530 <op_enter+0x530> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3b5: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3ba: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*3bf: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*3c2: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*3c5: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*3c8: and    $0x1f,%ecx */
0x01, 0xd1,                               /*3cb: add    %edx,%ecx */
0x0f, 0x84, 0xc1, 0x01, 0x00, 0x00,       /*3cd: je     594 <op_enter+0x594> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3d3: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3d8: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*3dd: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*3e0: and    $0x1f,%edx */
0xc1, 0xe9, 0x0d,                         /*3e3: shr    $0xd,%ecx */
0x83, 0xe1, 0x1f,                         /*3e6: and    $0x1f,%ecx */
0x01, 0xd1,                               /*3e9: add    %edx,%ecx */
0x48, 0x89, 0xca,                         /*3eb: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*3ee: shl    $0x4,%rdx */
0x48, 0x01, 0xd0,                         /*3f2: add    %rdx,%rax */
0x4a, 0x8d, 0x54, 0x32, 0xf0,             /*3f5: lea    -0x10(%rdx,%r14,1),%rdx */
0x48, 0xf7, 0xd9,                         /*3fa: neg    %rcx */
0x0f, 0x1f, 0x00,                         /*3fd: nopl   (%rax) */
0x48, 0x8b, 0x32,                         /*400: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*403: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x78, 0x08,                   /*407: mov    %rdi,0x8(%rax) */
0x48, 0x89, 0x30,                         /*40b: mov    %rsi,(%rax) */
0x48, 0x83, 0xc0, 0xf0,                   /*40e: add    $0xfffffffffffffff0,%rax */
0x48, 0x83, 0xc2, 0xf0,                   /*412: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc1,                         /*416: inc    %rcx */
0x75, 0xe5,                               /*419: jne    400 <op_enter+0x400> */
0xe9, 0x74, 0x01, 0x00, 0x00,             /*41b: jmpq   594 <op_enter+0x594> */
0x4c, 0x39, 0xf5,                         /*420: cmp    %r14,%rbp */
0x74, 0x3f,                               /*423: je     464 <op_enter+0x464> */
0x44, 0x89, 0xe6,                         /*425: mov    %r12d,%esi */
0x29, 0xc6,                               /*428: sub    %eax,%esi */
0x74, 0x38,                               /*42a: je     464 <op_enter+0x464> */
0x48, 0x63, 0xf6,                         /*42c: movslq %esi,%rsi */
0x48, 0xf7, 0xde,                         /*42f: neg    %rsi */
0x4c, 0x89, 0xf7,                         /*432: mov    %r14,%rdi */
0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*435: data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xea,                         /*440: mov    %rbp,%rdx */
0x48, 0x83, 0xc1, 0x20,                   /*443: add    $0x20,%rcx */
0x48, 0x8b, 0x2f,                         /*447: mov    (%rdi),%rbp */
0x48, 0x8b, 0x5f, 0x08,                   /*44a: mov    0x8(%rdi),%rbx */
0x48, 0x8d, 0x7f, 0x10,                   /*44e: lea    0x10(%rdi),%rdi */
0x48, 0x89, 0x5a, 0x08,                   /*452: mov    %rbx,0x8(%rdx) */
0x48, 0x89, 0x2a,                         /*456: mov    %rbp,(%rdx) */
0x48, 0xff, 0xc6,                         /*459: inc    %rsi */
0x48, 0x89, 0xcd,                         /*45c: mov    %rcx,%rbp */
0x48, 0x89, 0xd1,                         /*45f: mov    %rdx,%rcx */
0x75, 0xdc,                               /*462: jne    440 <op_enter+0x440> */
0x85, 0xc0,                               /*464: test   %eax,%eax */
0x0f, 0x84, 0x1f, 0x03, 0x00, 0x00,       /*466: je     78b <op_enter+0x78b> */
0x49, 0x8b, 0x4f, 0x18,                   /*46c: mov    0x18(%r15),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*470: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*475: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*47a: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*47d: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*480: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*485: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*488: and    $0x1f,%edi */
0x01, 0xf7,                               /*48b: add    %esi,%edi */
0xc1, 0xea, 0x0c,                         /*48d: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*490: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*493: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x63, 0xd2,                         /*497: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*49a: shl    $0x4,%rdx */
0x48, 0x01, 0xca,                         /*49e: add    %rcx,%rdx */
0x44, 0x89, 0xe6,                         /*4a1: mov    %r12d,%esi */
0x29, 0xc6,                               /*4a4: sub    %eax,%esi */
0x48, 0x63, 0xf6,                         /*4a6: movslq %esi,%rsi */
0x48, 0x89, 0xf7,                         /*4a9: mov    %rsi,%rdi */
0x48, 0xc1, 0xe7, 0x04,                   /*4ac: shl    $0x4,%rdi */
0x4c, 0x01, 0xf7,                         /*4b0: add    %r14,%rdi */
0x48, 0x98,                               /*4b3: cltq */
0x48, 0x39, 0xfa,                         /*4b5: cmp    %rdi,%rdx */
0x0f, 0x86, 0xa2, 0x02, 0x00, 0x00,       /*4b8: jbe    760 <op_enter+0x760> */
0x48, 0x01, 0xc6,                         /*4be: add    %rax,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*4c1: shl    $0x4,%rsi */
0x49, 0x8d, 0x2c, 0x36,                   /*4c5: lea    (%r14,%rsi,1),%rbp */
0x48, 0x39, 0xea,                         /*4c9: cmp    %rbp,%rdx */
0x0f, 0x83, 0x8e, 0x02, 0x00, 0x00,       /*4cc: jae    760 <op_enter+0x760> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4d2: mov    $0x0,%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*4d7: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*4dc: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*4df: and    $0x1f,%edi */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*4e2: mov    $0x0,%ebp */
0xc1, 0xed, 0x0d,                         /*4e7: shr    $0xd,%ebp */
0x83, 0xe5, 0x1f,                         /*4ea: and    $0x1f,%ebp */
0x01, 0xfd,                               /*4ed: add    %edi,%ebp */
0xc1, 0xea, 0x0c,                         /*4ef: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*4f2: and    $0x1,%edx */
0x8d, 0x54, 0x2a, 0x01,                   /*4f5: lea    0x1(%rdx,%rbp,1),%edx */
0x48, 0x01, 0xc2,                         /*4f9: add    %rax,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*4fc: shl    $0x4,%rdx */
0x48, 0x8d, 0x4c, 0x0a, 0xf0,             /*500: lea    -0x10(%rdx,%rcx,1),%rcx */
0x4a, 0x8d, 0x54, 0x36, 0xf0,             /*505: lea    -0x10(%rsi,%r14,1),%rdx */
0x48, 0xf7, 0xd8,                         /*50a: neg    %rax */
0x0f, 0x1f, 0x00,                         /*50d: nopl   (%rax) */
0x48, 0x8b, 0x32,                         /*510: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*513: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x79, 0x08,                   /*517: mov    %rdi,0x8(%rcx) */
0x48, 0x89, 0x31,                         /*51b: mov    %rsi,(%rcx) */
0x48, 0x83, 0xc1, 0xf0,                   /*51e: add    $0xfffffffffffffff0,%rcx */
0x48, 0x83, 0xc2, 0xf0,                   /*522: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc0,                         /*526: inc    %rax */
0x75, 0xe5,                               /*529: jne    510 <op_enter+0x510> */
0xe9, 0x5b, 0x02, 0x00, 0x00,             /*52b: jmpq   78b <op_enter+0x78b> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*530: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*535: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*53a: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*53d: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*540: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*543: and    $0x1f,%edx */
0x01, 0xf2,                               /*546: add    %esi,%edx */
0x4c, 0x39, 0xf1,                         /*548: cmp    %r14,%rcx */
0x74, 0x47,                               /*54b: je     594 <op_enter+0x594> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*54d: mov    $0x0,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*552: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*557: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*55a: and    $0x1f,%edi */
0xc1, 0xee, 0x12,                         /*55d: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*560: and    $0x1f,%esi */
0x01, 0xfe,                               /*563: add    %edi,%esi */
0x74, 0x2d,                               /*565: je     594 <op_enter+0x594> */
0x48, 0xf7, 0xda,                         /*567: neg    %rdx */
0x4c, 0x89, 0xf6,                         /*56a: mov    %r14,%rsi */
0x0f, 0x1f, 0x00,                         /*56d: nopl   (%rax) */
0x48, 0x89, 0xcf,                         /*570: mov    %rcx,%rdi */
0x48, 0x83, 0xc0, 0x20,                   /*573: add    $0x20,%rax */
0x48, 0x8b, 0x0e,                         /*577: mov    (%rsi),%rcx */
0x48, 0x8b, 0x6e, 0x08,                   /*57a: mov    0x8(%rsi),%rbp */
0x48, 0x8d, 0x76, 0x10,                   /*57e: lea    0x10(%rsi),%rsi */
0x48, 0x89, 0x6f, 0x08,                   /*582: mov    %rbp,0x8(%rdi) */
0x48, 0x89, 0x0f,                         /*586: mov    %rcx,(%rdi) */
0x48, 0xff, 0xc2,                         /*589: inc    %rdx */
0x48, 0x89, 0xc1,                         /*58c: mov    %rax,%rcx */
0x48, 0x89, 0xf8,                         /*58f: mov    %rdi,%rax */
0x75, 0xdc,                               /*592: jne    570 <op_enter+0x570> */
0x4c, 0x89, 0x74, 0x24, 0x10,             /*594: mov    %r14,0x10(%rsp) */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*599: mov    $0x0,%ebp */
0x0f, 0xba, 0xe5, 0x0c,                   /*59e: bt     $0xc,%ebp */
0x72, 0x21,                               /*5a2: jb     5c5 <op_enter+0x5c5> */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*5a4: mov    %rbx,0x8(%rsp) */
0x4c, 0x89, 0x2c, 0x24,                   /*5a9: mov    %r13,(%rsp) */
0x4d, 0x89, 0xfd,                         /*5ad: mov    %r15,%r13 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5b0: mov    $0x0,%eax */
0xc1, 0xe8, 0x0d,                         /*5b5: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*5b8: and    $0x1f,%eax */
0xc1, 0xed, 0x12,                         /*5bb: shr    $0x12,%ebp */
0x83, 0xe5, 0x1f,                         /*5be: and    $0x1f,%ebp */
0x01, 0xc5,                               /*5c1: add    %eax,%ebp */
0xeb, 0x73,                               /*5c3: jmp    638 <op_enter+0x638> */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*5c5: mov    %rbx,0x8(%rsp) */
0x4c, 0x89, 0x2c, 0x24,                   /*5ca: mov    %r13,(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5ce: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5d3: mov    $0x0,%eax */
0xc1, 0xe8, 0x0d,                         /*5d8: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*5db: and    $0x1f,%eax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5de: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*5e3: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*5e6: and    $0x1f,%edx */
0x41, 0x89, 0xd6,                         /*5e9: mov    %edx,%r14d */
0x41, 0xf7, 0xde,                         /*5ec: neg    %r14d */
0x41, 0x29, 0xc6,                         /*5ef: sub    %eax,%r14d */
0xc1, 0xe9, 0x07,                         /*5f2: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*5f5: and    $0x1f,%ecx */
0x41, 0x29, 0xce,                         /*5f8: sub    %ecx,%r14d */
0x43, 0x8d, 0x34, 0x34,                   /*5fb: lea    (%r12,%r14,1),%esi */
0x8d, 0x2c, 0x02,                         /*5ff: lea    (%rdx,%rax,1),%ebp */
0x8d, 0x4c, 0x02, 0x01,                   /*602: lea    0x1(%rdx,%rax,1),%ecx */
0x48, 0x63, 0xd9,                         /*606: movslq %ecx,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*609: shl    $0x4,%rbx */
0x4d, 0x89, 0xfd,                         /*60d: mov    %r15,%r13 */
0x4d, 0x8b, 0x7d, 0x18,                   /*610: mov    0x18(%r13),%r15 */
0x49, 0x8b, 0x7d, 0x58,                   /*614: mov    0x58(%r13),%rdi */
0x48, 0x01, 0xc2,                         /*618: add    %rax,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*61b: shl    $0x4,%rdx */
0x48, 0x03, 0x54, 0x24, 0x10,             /*61f: add    0x10(%rsp),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*624: callq  629 <op_enter+0x629> */
0x49, 0x89, 0x04, 0x1f,                   /*629: mov    %rax,(%r15,%rbx,1) */
0x41, 0x89, 0x54, 0x1f, 0x08,             /*62d: mov    %edx,0x8(%r15,%rbx,1) */
0x44, 0x01, 0xf5,                         /*632: add    %r14d,%ebp */
0x44, 0x01, 0xe5,                         /*635: add    %r12d,%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*638: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*63d: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*642: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*645: and    $0x1f,%ecx */
0x41, 0x29, 0xcc,                         /*648: sub    %ecx,%r12d */
0xc1, 0xe8, 0x12,                         /*64b: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*64e: and    $0x1f,%eax */
0x41, 0x39, 0xc4,                         /*651: cmp    %eax,%r12d */
0x4d, 0x89, 0xef,                         /*654: mov    %r13,%r15 */
0x48, 0x8b, 0x5c, 0x24, 0x10,             /*657: mov    0x10(%rsp),%rbx */
0x0f, 0x8e, 0x19, 0x02, 0x00, 0x00,       /*65c: jle    87b <op_enter+0x87b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*662: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*667: shr    $0x7,%eax */
0xa8, 0x1f,                               /*66a: test   $0x1f,%al */
0x0f, 0x84, 0x09, 0x02, 0x00, 0x00,       /*66c: je     87b <op_enter+0x87b> */
0x49, 0x8b, 0x47, 0x18,                   /*672: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*676: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*67b: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*680: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*683: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*686: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*68b: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*68e: and    $0x1f,%esi */
0x01, 0xd6,                               /*691: add    %edx,%esi */
0xc1, 0xe9, 0x0c,                         /*693: shr    $0xc,%ecx */
0x83, 0xe1, 0x01,                         /*696: and    $0x1,%ecx */
0x8d, 0x4c, 0x31, 0x01,                   /*699: lea    0x1(%rcx,%rsi,1),%ecx */
0x48, 0x63, 0xc9,                         /*69d: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*6a0: shl    $0x4,%rcx */
0x48, 0x01, 0xc1,                         /*6a4: add    %rax,%rcx */
0x48, 0x63, 0xd5,                         /*6a7: movslq %ebp,%rdx */
0x48, 0x89, 0xd6,                         /*6aa: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*6ad: shl    $0x4,%rsi */
0x48, 0x01, 0xde,                         /*6b1: add    %rbx,%rsi */
0x48, 0x39, 0xf1,                         /*6b4: cmp    %rsi,%rcx */
0x0f, 0x86, 0x7a, 0x01, 0x00, 0x00,       /*6b7: jbe    837 <op_enter+0x837> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*6bd: mov    $0x0,%edi */
0xc1, 0xef, 0x07,                         /*6c2: shr    $0x7,%edi */
0x83, 0xe7, 0x1f,                         /*6c5: and    $0x1f,%edi */
0x48, 0x01, 0xd7,                         /*6c8: add    %rdx,%rdi */
0x48, 0xc1, 0xe7, 0x04,                   /*6cb: shl    $0x4,%rdi */
0x48, 0x01, 0xdf,                         /*6cf: add    %rbx,%rdi */
0x48, 0x39, 0xf9,                         /*6d2: cmp    %rdi,%rcx */
0x0f, 0x83, 0x5c, 0x01, 0x00, 0x00,       /*6d5: jae    837 <op_enter+0x837> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*6db: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*6e0: shr    $0x7,%ecx */
0xf6, 0xc1, 0x1f,                         /*6e3: test   $0x1f,%cl */
0x0f, 0x84, 0x8f, 0x01, 0x00, 0x00,       /*6e6: je     87b <op_enter+0x87b> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*6ec: mov    $0x0,%ecx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*6f1: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*6f6: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*6f9: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*6fc: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*701: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*704: and    $0x1f,%edi */
0x01, 0xf7,                               /*707: add    %esi,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*709: mov    $0x0,%esi */
0xc1, 0xee, 0x0c,                         /*70e: shr    $0xc,%esi */
0x83, 0xe6, 0x01,                         /*711: and    $0x1,%esi */
0x8d, 0x74, 0x3e, 0x01,                   /*714: lea    0x1(%rsi,%rdi,1),%esi */
0xc1, 0xe9, 0x07,                         /*718: shr    $0x7,%ecx */
0x48, 0x83, 0xe1, 0x1f,                   /*71b: and    $0x1f,%rcx */
0x48, 0x01, 0xce,                         /*71f: add    %rcx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*722: shl    $0x4,%rsi */
0x48, 0x8d, 0x44, 0x06, 0xf0,             /*726: lea    -0x10(%rsi,%rax,1),%rax */
0x48, 0x01, 0xca,                         /*72b: add    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*72e: shl    $0x4,%rdx */
0x48, 0x8d, 0x54, 0x1a, 0xf0,             /*732: lea    -0x10(%rdx,%rbx,1),%rdx */
0x48, 0xf7, 0xd9,                         /*737: neg    %rcx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*73a: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x32,                         /*740: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*743: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x78, 0x08,                   /*747: mov    %rdi,0x8(%rax) */
0x48, 0x89, 0x30,                         /*74b: mov    %rsi,(%rax) */
0x48, 0x83, 0xc0, 0xf0,                   /*74e: add    $0xfffffffffffffff0,%rax */
0x48, 0x83, 0xc2, 0xf0,                   /*752: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc1,                         /*756: inc    %rcx */
0x75, 0xe5,                               /*759: jne    740 <op_enter+0x740> */
0xe9, 0x1b, 0x01, 0x00, 0x00,             /*75b: jmpq   87b <op_enter+0x87b> */
0x48, 0x39, 0xfa,                         /*760: cmp    %rdi,%rdx */
0x74, 0x26,                               /*763: je     78b <op_enter+0x78b> */
0x48, 0xf7, 0xd8,                         /*765: neg    %rax */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*768: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x0f,                         /*770: mov    (%rdi),%rcx */
0x48, 0x8b, 0x77, 0x08,                   /*773: mov    0x8(%rdi),%rsi */
0x48, 0x8d, 0x7f, 0x10,                   /*777: lea    0x10(%rdi),%rdi */
0x48, 0x89, 0x72, 0x08,                   /*77b: mov    %rsi,0x8(%rdx) */
0x48, 0x89, 0x0a,                         /*77f: mov    %rcx,(%rdx) */
0x48, 0x8d, 0x52, 0x10,                   /*782: lea    0x10(%rdx),%rdx */
0x48, 0xff, 0xc0,                         /*786: inc    %rax */
0x75, 0xe5,                               /*789: jne    770 <op_enter+0x770> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*78b: mov    $0x0,%eax */
0x0f, 0xba, 0xe0, 0x0c,                   /*790: bt     $0xc,%eax */
0x73, 0x39,                               /*794: jae    7cf <op_enter+0x7cf> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*796: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*79b: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*7a0: shr    $0xd,%ecx */
0x83, 0xe1, 0x1f,                         /*7a3: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*7a6: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*7a9: and    $0x1f,%eax */
0x8d, 0x44, 0x08, 0x01,                   /*7ac: lea    0x1(%rax,%rcx,1),%eax */
0x48, 0x63, 0xd8,                         /*7b0: movslq %eax,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*7b3: shl    $0x4,%rbx */
0x49, 0x8b, 0x6f, 0x18,                   /*7b7: mov    0x18(%r15),%rbp */
0x49, 0x8b, 0x7f, 0x58,                   /*7bb: mov    0x58(%r15),%rdi */
0x31, 0xf6,                               /*7bf: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c1: callq  7c6 <op_enter+0x7c6> */
0x48, 0x89, 0x44, 0x1d, 0x00,             /*7c6: mov    %rax,0x0(%rbp,%rbx,1) */
0x89, 0x54, 0x1d, 0x08,                   /*7cb: mov    %edx,0x8(%rbp,%rbx,1) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7cf: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7d4: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*7d9: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*7dc: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*7df: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*7e2: and    $0x1f,%eax */
0x01, 0xc8,                               /*7e5: add    %ecx,%eax */
0x41, 0x39, 0xc4,                         /*7e7: cmp    %eax,%r12d */
0x49, 0x8b, 0x47, 0x08,                   /*7ea: mov    0x8(%r15),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*7ee: mov    0xa8(%rax),%rcx */
0x0f, 0x8c, 0x08, 0x01, 0x00, 0x00,       /*7f5: jl     903 <op_enter+0x903> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7fb: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*800: shr    $0xd,%edx */
0xf6, 0xc2, 0x1f,                         /*803: test   $0x1f,%dl */
0x0f, 0x84, 0xf7, 0x00, 0x00, 0x00,       /*806: je     903 <op_enter+0x903> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*80c: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*811: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*816: shr    $0x7,%esi */
0x83, 0xe6, 0x1f,                         /*819: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*81c: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*81f: and    $0x1f,%edx */
0xf7, 0xda,                               /*822: neg    %edx */
0x29, 0xf2,                               /*824: sub    %esi,%edx */
0x42, 0x8d, 0x54, 0x22, 0x01,             /*826: lea    0x1(%rdx,%r12,1),%edx */
0x48, 0x63, 0xd2,                         /*82b: movslq %edx,%rdx */
0x48, 0x8d, 0x0c, 0x91,                   /*82e: lea    (%rcx,%rdx,4),%rcx */
0xe9, 0xd0, 0x00, 0x00, 0x00,             /*832: jmpq   907 <op_enter+0x907> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*837: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*83c: shr    $0x7,%eax */
0x48, 0x39, 0xf1,                         /*83f: cmp    %rsi,%rcx */
0x74, 0x37,                               /*842: je     87b <op_enter+0x87b> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*844: mov    $0x0,%edx */
0xc1, 0xea, 0x07,                         /*849: shr    $0x7,%edx */
0xf6, 0xc2, 0x1f,                         /*84c: test   $0x1f,%dl */
0x74, 0x2a,                               /*84f: je     87b <op_enter+0x87b> */
0x48, 0x83, 0xe0, 0x1f,                   /*851: and    $0x1f,%rax */
0x48, 0xf7, 0xd8,                         /*855: neg    %rax */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*858: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x16,                         /*860: mov    (%rsi),%rdx */
0x48, 0x8b, 0x7e, 0x08,                   /*863: mov    0x8(%rsi),%rdi */
0x48, 0x8d, 0x76, 0x10,                   /*867: lea    0x10(%rsi),%rsi */
0x48, 0x89, 0x79, 0x08,                   /*86b: mov    %rdi,0x8(%rcx) */
0x48, 0x89, 0x11,                         /*86f: mov    %rdx,(%rcx) */
0x48, 0x8d, 0x49, 0x10,                   /*872: lea    0x10(%rcx),%rcx */
0x48, 0xff, 0xc0,                         /*876: inc    %rax */
0x75, 0xe5,                               /*879: jne    860 <op_enter+0x860> */
0x48, 0x39, 0x5c, 0x24, 0x08,             /*87b: cmp    %rbx,0x8(%rsp) */
0x75, 0x53,                               /*880: jne    8d5 <op_enter+0x8d5> */
0x49, 0x8b, 0x47, 0x18,                   /*882: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*886: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*88b: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*890: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*893: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*896: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*89b: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*89e: and    $0x1f,%esi */
0x01, 0xd6,                               /*8a1: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8a3: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*8a8: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*8ab: and    $0x1,%edx */
0x01, 0xf2,                               /*8ae: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*8b0: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*8b3: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*8b6: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*8ba: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*8bd: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x24,                   /*8c1: mov    (%rsp),%rsi */
0x48, 0x8b, 0x16,                         /*8c5: mov    (%rsi),%rdx */
0x48, 0x8b, 0x76, 0x08,                   /*8c8: mov    0x8(%rsi),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*8cc: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*8d1: mov    %rdx,(%rax,%rcx,1) */
0x49, 0x8b, 0x47, 0x08,                   /*8d5: mov    0x8(%r15),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*8d9: mov    0xa8(%rax),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8e0: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*8e5: shr    $0xd,%edx */
0xf6, 0xc2, 0x1f,                         /*8e8: test   $0x1f,%dl */
0x7e, 0x16,                               /*8eb: jle    903 <op_enter+0x903> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8ed: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*8f2: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*8f5: and    $0x1f,%edx */
0xff, 0xc2,                               /*8f8: inc    %edx */
0x48, 0x63, 0xd2,                         /*8fa: movslq %edx,%rdx */
0x48, 0x8d, 0x0c, 0x91,                   /*8fd: lea    (%rcx,%rdx,4),%rcx */
0xeb, 0x04,                               /*901: jmp    907 <op_enter+0x907> */
0x48, 0x83, 0xc1, 0x04,                   /*903: add    $0x4,%rcx */
0x0f, 0xb7, 0x31,                         /*907: movzwl (%rcx),%esi */
0x48, 0x03, 0xb0, 0xc0, 0x00, 0x00, 0x00, /*90a: add    0xc0(%rax),%rsi */
0x4c, 0x89, 0xff,                         /*911: mov    %r15,%rdi */
0x4c, 0x89, 0xff,                         /*914: mov    %r15,%rdi */
0x48, 0x83, 0xc4, 0x18,                   /*917: add    $0x18,%rsp */
0x5b,                                     /*91b: pop    %rbx */
0x41, 0x5c,                               /*91c: pop    %r12 */
0x41, 0x5d,                               /*91e: pop    %r13 */
0x41, 0x5e,                               /*920: pop    %r14 */
0x41, 0x5f,                               /*922: pop    %r15 */
0x5d,                                     /*924: pop    %rbp */
0xff, 0xe6,                               /*925: jmpq   *%rsi */

};
static uint8_t op_enter__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x50, 0x72, 0x6f, 0x63, 0x00, 0x74, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x63,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x6f, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x20, 0x25, 0x70, 0x20, 0x28, 0x25, 0x64,
0x29, 0x0a, 0x00,                         

};

static void op_enter_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_enter_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_enter_set_args(op, GETARG_Ax(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_enter_method_m__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x55,                               /*4: push   %r13 */
0x41, 0x54,                               /*6: push   %r12 */
0x53,                                     /*8: push   %rbx */
0x49, 0x89, 0xfe,                         /*9: mov    %rdi,%r14 */
0x4d, 0x8b, 0x7e, 0x18,                   /*c: mov    0x18(%r14),%r15 */
0x49, 0x8b, 0x7e, 0x58,                   /*10: mov    0x58(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*14: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*18: mov    0x20(%rax),%rax */
0x48, 0x63, 0x58, 0x40,                   /*1c: movslq 0x40(%rax),%rbx */
0x48, 0x8d, 0x4b, 0x01,                   /*20: lea    0x1(%rbx),%rcx */
0x48, 0x85, 0xdb,                         /*24: test   %rbx,%rbx */
0xb8, 0x02, 0x00, 0x00, 0x00,             /*27: mov    $0x2,%eax */
0x48, 0x0f, 0x49, 0xc1,                   /*2c: cmovns %rcx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*30: shl    $0x4,%rax */
0x4d, 0x8d, 0x24, 0x07,                   /*34: lea    (%r15,%rax,1),%r12 */
0x41, 0x8b, 0x54, 0x07, 0x08,             /*38: mov    0x8(%r15,%rax,1),%edx */
0x85, 0xd2,                               /*3d: test   %edx,%edx */
0x75, 0x0b,                               /*3f: jne    4c <op_enter_method_m+0x4c> */
0x41, 0x83, 0x3c, 0x24, 0x00,             /*41: cmpl   $0x0,(%r12) */
0x0f, 0x84, 0xaf, 0x01, 0x00, 0x00,       /*46: je     1fb <op_enter_method_m+0x1fb> */
0x83, 0xfa, 0x0d,                         /*4c: cmp    $0xd,%edx */
0x0f, 0x95, 0xc1,                         /*4f: setne  %cl */
0x84, 0xc9,                               /*52: test   %cl,%cl */
0x74, 0x27,                               /*54: je     7d <op_enter_method_m+0x7d> */
0x4d, 0x8d, 0x6c, 0x07, 0x08,             /*56: lea    0x8(%r15,%rax,1),%r13 */
0x49, 0x8b, 0x34, 0x24,                   /*5b: mov    (%r12),%rsi */
0xb9, 0x0d, 0x00, 0x00, 0x00,             /*5f: mov    $0xd,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*64: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*6a: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*70: callq  75 <op_enter_method_m+0x75> */
0x49, 0x89, 0x04, 0x24,                   /*75: mov    %rax,(%r12) */
0x41, 0x89, 0x55, 0x00,                   /*79: mov    %edx,0x0(%r13) */
0x49, 0x83, 0xc7, 0x10,                   /*7d: add    $0x10,%r15 */
0x85, 0xdb,                               /*81: test   %ebx,%ebx */
0x78, 0x33,                               /*83: js     b8 <op_enter_method_m+0xb8> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*85: mov    $0x0,%eax */
0xc1, 0xe8, 0x12,                         /*8a: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*8d: and    $0x1f,%eax */
0x39, 0xc3,                               /*90: cmp    %eax,%ebx */
0x4c, 0x89, 0xfb,                         /*92: mov    %r15,%rbx */
0x7d, 0x39,                               /*95: jge    d0 <op_enter_method_m+0xd0> */
0x49, 0x8b, 0x7e, 0x58,                   /*97: mov    0x58(%r14),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*9b: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*a0: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*a3: and    $0x1f,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a6: callq  ab <op_enter_method_m+0xab> */
0x4c, 0x89, 0xf7,                         /*ab: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ae: callq  b3 <op_enter_method_m+0xb3> */
0xe9, 0x35, 0x01, 0x00, 0x00,             /*b3: jmpq   1ed <op_enter_method_m+0x1ed> */
0x49, 0x8b, 0x46, 0x18,                   /*b8: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x7e, 0x58,                   /*bc: mov    0x58(%r14),%rdi */
0x48, 0x8b, 0x70, 0x10,                   /*c0: mov    0x10(%rax),%rsi */
0x48, 0x8b, 0x5e, 0x28,                   /*c4: mov    0x28(%rsi),%rbx */
0x8b, 0x50, 0x18,                         /*c8: mov    0x18(%rax),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*cb: callq  d0 <op_enter_method_m+0xd0> */
0x49, 0x8b, 0x46, 0x58,                   /*d0: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*d4: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*d8: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*dc: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*e1: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*e4: and    $0x1f,%ecx */
0x89, 0x48, 0x40,                         /*e7: mov    %ecx,0x40(%rax) */
0x49, 0x8b, 0x46, 0x18,                   /*ea: mov    0x18(%r14),%rax */
0xff, 0xc1,                               /*ee: inc    %ecx */
0x48, 0x63, 0xc9,                         /*f0: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f3: shl    $0x4,%rcx */
0x49, 0x8b, 0x14, 0x24,                   /*f7: mov    (%r12),%rdx */
0x49, 0x8b, 0x74, 0x24, 0x08,             /*fb: mov    0x8(%r12),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*100: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*105: mov    %rdx,(%rax,%rcx,1) */
0x49, 0x39, 0xdf,                         /*109: cmp    %rbx,%r15 */
0x0f, 0x84, 0xc2, 0x00, 0x00, 0x00,       /*10c: je     1d4 <op_enter_method_m+0x1d4> */
0x49, 0x8b, 0x46, 0x18,                   /*112: mov    0x18(%r14),%rax */
0x48, 0x8d, 0x48, 0x10,                   /*116: lea    0x10(%rax),%rcx */
0x48, 0x39, 0xd9,                         /*11a: cmp    %rbx,%rcx */
0x76, 0x6e,                               /*11d: jbe    18d <op_enter_method_m+0x18d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*11f: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*124: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*127: and    $0x1f,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*12a: shl    $0x4,%rdx */
0x48, 0x01, 0xda,                         /*12e: add    %rbx,%rdx */
0x48, 0x39, 0xd1,                         /*131: cmp    %rdx,%rcx */
0x73, 0x57,                               /*134: jae    18d <op_enter_method_m+0x18d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*136: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*13b: shr    $0x12,%ecx */
0xf6, 0xc1, 0x1f,                         /*13e: test   $0x1f,%cl */
0x0f, 0x84, 0x8d, 0x00, 0x00, 0x00,       /*141: je     1d4 <op_enter_method_m+0x1d4> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*147: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*14c: shr    $0x12,%ecx */
0x48, 0x83, 0xe1, 0x1f,                   /*14f: and    $0x1f,%rcx */
0x48, 0x89, 0xca,                         /*153: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*156: shl    $0x4,%rdx */
0x48, 0x01, 0xd0,                         /*15a: add    %rdx,%rax */
0x48, 0x8d, 0x54, 0x1a, 0xf0,             /*15d: lea    -0x10(%rdx,%rbx,1),%rdx */
0x48, 0xf7, 0xd9,                         /*162: neg    %rcx */
0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*165: data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x32,                         /*170: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*173: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x78, 0x08,                   /*177: mov    %rdi,0x8(%rax) */
0x48, 0x89, 0x30,                         /*17b: mov    %rsi,(%rax) */
0x48, 0x83, 0xc0, 0xf0,                   /*17e: add    $0xfffffffffffffff0,%rax */
0x48, 0x83, 0xc2, 0xf0,                   /*182: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc1,                         /*186: inc    %rcx */
0x75, 0xe5,                               /*189: jne    170 <op_enter_method_m+0x170> */
0xeb, 0x47,                               /*18b: jmp    1d4 <op_enter_method_m+0x1d4> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18d: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*192: shr    $0x12,%edx */
0x48, 0x39, 0xd9,                         /*195: cmp    %rbx,%rcx */
0x74, 0x3a,                               /*198: je     1d4 <op_enter_method_m+0x1d4> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*19a: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*19f: shr    $0x12,%esi */
0x40, 0xf6, 0xc6, 0x1f,                   /*1a2: test   $0x1f,%sil */
0x74, 0x2c,                               /*1a6: je     1d4 <op_enter_method_m+0x1d4> */
0x48, 0x83, 0xe2, 0x1f,                   /*1a8: and    $0x1f,%rdx */
0x48, 0xf7, 0xda,                         /*1ac: neg    %rdx */
0x90,                                     /*1af: nop */
0x48, 0x89, 0xce,                         /*1b0: mov    %rcx,%rsi */
0x48, 0x83, 0xc0, 0x20,                   /*1b3: add    $0x20,%rax */
0x48, 0x8b, 0x0b,                         /*1b7: mov    (%rbx),%rcx */
0x48, 0x8b, 0x7b, 0x08,                   /*1ba: mov    0x8(%rbx),%rdi */
0x48, 0x8d, 0x5b, 0x10,                   /*1be: lea    0x10(%rbx),%rbx */
0x48, 0x89, 0x7e, 0x08,                   /*1c2: mov    %rdi,0x8(%rsi) */
0x48, 0x89, 0x0e,                         /*1c6: mov    %rcx,(%rsi) */
0x48, 0xff, 0xc2,                         /*1c9: inc    %rdx */
0x48, 0x89, 0xc1,                         /*1cc: mov    %rax,%rcx */
0x48, 0x89, 0xf0,                         /*1cf: mov    %rsi,%rax */
0x75, 0xdc,                               /*1d2: jne    1b0 <op_enter_method_m+0x1b0> */
0x49, 0x8b, 0x46, 0x08,                   /*1d4: mov    0x8(%r14),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*1d8: mov    0xa8(%rax),%rcx */
0x0f, 0xb7, 0x71, 0x04,                   /*1df: movzwl 0x4(%rcx),%esi */
0x48, 0x03, 0xb0, 0xc0, 0x00, 0x00, 0x00, /*1e3: add    0xc0(%rax),%rsi */
0x4c, 0x89, 0xf7,                         /*1ea: mov    %r14,%rdi */
0x4c, 0x89, 0xf7,                         /*1ed: mov    %r14,%rdi */
0x5b,                                     /*1f0: pop    %rbx */
0x41, 0x5c,                               /*1f1: pop    %r12 */
0x41, 0x5d,                               /*1f3: pop    %r13 */
0x41, 0x5e,                               /*1f5: pop    %r14 */
0x41, 0x5f,                               /*1f7: pop    %r15 */
0xeb, 0x09,                               /*1f9: jmp    204 <_str_const_to_proc24682468+0x1fb> */
0x31, 0xc9,                               /*1fb: xor    %ecx,%ecx */
0xe9, 0x50, 0xfe, 0xff, 0xff,             /*1fd: jmpq   52 <op_enter_method_m+0x52> */
0xff, 0xe6,                               /*202: jmpq   *%rsi */

};
static uint8_t op_enter_method_m__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x50, 0x72, 0x6f, 0x63, 0x00, 0x74, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x63,
0x00,                                     

};

static void op_enter_method_m_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_enter_method_m_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_enter_method_m_set_args(op, GETARG_Ax(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_karg__text[] = {

};
static uint8_t op_karg__rodata[] = {

};

static void op_karg_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_karg_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_karg_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_kdict__text[] = {

};
static uint8_t op_kdict__rodata[] = {

};

static void op_kdict_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_kdict_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_kdict_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_return__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x53,                                     /*4: push   %rbx */
0x48, 0x83, 0xe4, 0xf0,                   /*5: and    $0xfffffffffffffff0,%rsp */
0x48, 0x83, 0xec, 0x10,                   /*9: sub    $0x10,%rsp */
0x48, 0x89, 0xfb,                         /*d: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*15: movzwl %ax,%esi */
0x31, 0xd2,                               /*18: xor    %edx,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1a: callq  1f <op_return+0x1f> */
0x48, 0x89, 0xdf,                         /*1f: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf8,                   /*22: lea    -0x8(%rbp),%rsp */
0x5b,                                     /*26: pop    %rbx */
0x5d,                                     /*27: pop    %rbp */
0xc3,                                     /*28: retq */

};
static uint8_t op_return__rodata[] = {
0x00, 0x00,                               

};

static void op_return_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_return_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_return_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_break__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*9: movzwl %ax,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*11: movzwl %ax,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14: callq  19 <op_break+0x19> */
0x48, 0x89, 0xdf,                         /*19: mov    %rbx,%rdi */
0x5b,                                     /*1c: pop    %rbx */
0xc3,                                     /*1d: retq */

};
static uint8_t op_break__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_break_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_break_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_break_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_tailcall__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*a: sub    $0x18,%rsp */
0x49, 0x89, 0xfd,                         /*e: mov    %rdi,%r13 */
0x4d, 0x8b, 0x75, 0x58,                   /*11: mov    0x58(%r13),%r14 */
0x49, 0x8b, 0x45, 0x18,                   /*15: mov    0x18(%r13),%rax */
0x49, 0x8b, 0x4d, 0x28,                   /*19: mov    0x28(%r13),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*22: movzwl %dx,%edx */
0x8b, 0x1c, 0x91,                         /*25: mov    (%rcx,%rdx,4),%ebx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*28: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*2d: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*30: shl    $0x4,%rcx */
0x48, 0x8b, 0x2c, 0x08,                   /*34: mov    (%rax,%rcx,1),%rbp */
0x8b, 0x4c, 0x08, 0x08,                   /*38: mov    0x8(%rax,%rcx,1),%ecx */
0x31, 0xc0,                               /*3c: xor    %eax,%eax */
0x83, 0xf9, 0x13,                         /*3e: cmp    $0x13,%ecx */
0x7f, 0x23,                               /*41: jg     66 <op_tailcall+0x66> */
0x89, 0xc8,                               /*43: mov    %ecx,%eax */
0x83, 0xf9, 0x07,                         /*45: cmp    $0x7,%ecx */
0x89, 0x4c, 0x24, 0x0c,                   /*48: mov    %ecx,0xc(%rsp) */
0x77, 0x21,                               /*4c: ja     6f <op_tailcall+0x6f> */
0xff, 0x24, 0xc5, 0x00, 0x00, 0x00, 0x00, /*4e: jmpq   *0x0(,%rax,8) */
0x85, 0xed,                               /*55: test   %ebp,%ebp */
0x0f, 0x84, 0xd5, 0x03, 0x00, 0x00,       /*57: je     432 <op_tailcall+0x432> */
0x49, 0x8b, 0x86, 0x90, 0x00, 0x00, 0x00, /*5d: mov    0x90(%r14),%rax */
0xeb, 0x0d,                               /*64: jmp    73 <op_tailcall+0x73> */
0x83, 0xf9, 0x14,                         /*66: cmp    $0x14,%ecx */
0x89, 0x4c, 0x24, 0x0c,                   /*69: mov    %ecx,0xc(%rsp) */
0x74, 0x04,                               /*6d: je     73 <op_tailcall+0x73> */
0x48, 0x8b, 0x45, 0x08,                   /*6f: mov    0x8(%rbp),%rax */
0x48, 0x89, 0x44, 0x24, 0x10,             /*73: mov    %rax,0x10(%rsp) */
0x49, 0x8b, 0x4d, 0x00,                   /*78: mov    0x0(%r13),%rcx */
0x48, 0x39, 0x41, 0x38,                   /*7c: cmp    %rax,0x38(%rcx) */
0x75, 0x07,                               /*80: jne    89 <op_tailcall+0x89> */
0x31, 0xd2,                               /*82: xor    %edx,%edx */
0x39, 0x59, 0x30,                         /*84: cmp    %ebx,0x30(%rcx) */
0x74, 0x30,                               /*87: je     b9 <op_tailcall+0xb9> */
0x48, 0x39, 0x41, 0x48,                   /*89: cmp    %rax,0x48(%rcx) */
0x75, 0x0a,                               /*8d: jne    99 <op_tailcall+0x99> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*8f: mov    $0x1,%edx */
0x39, 0x59, 0x40,                         /*94: cmp    %ebx,0x40(%rcx) */
0x74, 0x20,                               /*97: je     b9 <op_tailcall+0xb9> */
0x48, 0x39, 0x41, 0x58,                   /*99: cmp    %rax,0x58(%rcx) */
0x75, 0x0a,                               /*9d: jne    a9 <op_tailcall+0xa9> */
0xba, 0x02, 0x00, 0x00, 0x00,             /*9f: mov    $0x2,%edx */
0x39, 0x59, 0x50,                         /*a4: cmp    %ebx,0x50(%rcx) */
0x74, 0x10,                               /*a7: je     b9 <op_tailcall+0xb9> */
0x48, 0x39, 0x41, 0x68,                   /*a9: cmp    %rax,0x68(%rcx) */
0x75, 0x14,                               /*ad: jne    c3 <op_tailcall+0xc3> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*af: mov    $0x3,%edx */
0x39, 0x59, 0x60,                         /*b4: cmp    %ebx,0x60(%rcx) */
0x75, 0x0a,                               /*b7: jne    c3 <op_tailcall+0xc3> */
0x4c, 0x8b, 0xa4, 0xd1, 0x90, 0x00, 0x00, 0x00,/*b9: mov    0x90(%rcx,%rdx,8),%r12 */
0xeb, 0x12,                               /*c1: jmp    d5 <op_tailcall+0xd5> */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*c3: lea    0x10(%rsp),%rsi */
0x4c, 0x89, 0xf7,                         /*c8: mov    %r14,%rdi */
0x89, 0xda,                               /*cb: mov    %ebx,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*cd: callq  d2 <op_tailcall+0xd2> */
0x49, 0x89, 0xc4,                         /*d2: mov    %rax,%r12 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*d5: mov    $0x0,%eax */
0x4d, 0x85, 0xe4,                         /*da: test   %r12,%r12 */
0x74, 0x0f,                               /*dd: je     ee <op_tailcall+0xee> */
0x48, 0x89, 0x2c, 0x24,                   /*df: mov    %rbp,(%rsp) */
0x0f, 0xb6, 0xc8,                         /*e3: movzbl %al,%ecx */
0x41, 0x89, 0xdf,                         /*e6: mov    %ebx,%r15d */
0xe9, 0x75, 0x01, 0x00, 0x00,             /*e9: jmpq   263 <op_tailcall+0x263> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*ee: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*f3: mov    $0xe,%edx */
0x4c, 0x89, 0xf7,                         /*f8: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*fb: callq  100 <op_tailcall+0x100> */
0x41, 0x89, 0xc7,                         /*100: mov    %eax,%r15d */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*103: lea    0x10(%rsp),%rsi */
0x4c, 0x89, 0xf7,                         /*108: mov    %r14,%rdi */
0x44, 0x89, 0xfa,                         /*10b: mov    %r15d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*10e: callq  113 <op_tailcall+0x113> */
0x49, 0x89, 0xc4,                         /*113: mov    %rax,%r12 */
0x49, 0x8b, 0x45, 0x18,                   /*116: mov    0x18(%r13),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11a: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*11f: movzbl %cl,%ecx */
0x83, 0xf9, 0x7f,                         /*122: cmp    $0x7f,%ecx */
0x75, 0x3b,                               /*125: jne    162 <op_tailcall+0x162> */
0x48, 0x89, 0x2c, 0x24,                   /*127: mov    %rbp,(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*130: movzwl %cx,%ecx */
0xff, 0xc1,                               /*133: inc    %ecx */
0x48, 0x63, 0xc9,                         /*135: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*138: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x08,                   /*13c: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*140: mov    0x8(%rax,%rcx,1),%edx */
0x41, 0xb8, 0x04, 0x00, 0x00, 0x00,       /*144: mov    $0x4,%r8d */
0x4c, 0x89, 0xf7,                         /*14a: mov    %r14,%rdi */
0x48, 0x89, 0xd9,                         /*14d: mov    %rbx,%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*150: callq  155 <op_tailcall+0x155> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*155: mov    $0x0,%eax */
0x0f, 0xb6, 0xc8,                         /*15a: movzbl %al,%ecx */
0xe9, 0x01, 0x01, 0x00, 0x00,             /*15d: jmpq   263 <op_tailcall+0x263> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*162: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*167: movzwl %cx,%ecx */
0x48, 0x8d, 0x51, 0x01,                   /*16a: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*16e: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*172: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*175: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*178: mov    $0x0,%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*17d: movzbl %dil,%edi */
0xff, 0xc7,                               /*181: inc    %edi */
0x48, 0x63, 0xff,                         /*183: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*186: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*18b: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*18e: setge  %cl */
0x08, 0xd1,                               /*191: or     %dl,%cl */
0x74, 0x55,                               /*193: je     1ea <op_tailcall+0x1ea> */
0x48, 0x89, 0x2c, 0x24,                   /*195: mov    %rbp,(%rsp) */
0x31, 0xc9,                               /*199: xor    %ecx,%ecx */
0x84, 0xc9,                               /*19b: test   %cl,%cl */
0x0f, 0x85, 0x95, 0x00, 0x00, 0x00,       /*19d: jne    238 <op_tailcall+0x238> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a3: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1a8: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*1ab: shl    $0x4,%rcx */
0x48, 0x8d, 0x44, 0x01, 0x20,             /*1af: lea    0x20(%rcx,%rax,1),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b4: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*1b9: movzbl %cl,%ecx */
0xff, 0xc1,                               /*1bc: inc    %ecx */
0x48, 0xf7, 0xd9,                         /*1be: neg    %rcx */
0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1c1: data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x50, 0xf0,                   /*1d0: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*1d4: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*1d8: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*1dc: mov    %rdx,(%rax) */
0x48, 0x83, 0xc0, 0x10,                   /*1df: add    $0x10,%rax */
0x48, 0xff, 0xc1,                         /*1e3: inc    %rcx */
0x75, 0xe8,                               /*1e6: jne    1d0 <op_tailcall+0x1d0> */
0xeb, 0x4e,                               /*1e8: jmp    238 <op_tailcall+0x238> */
0x48, 0x89, 0x2c, 0x24,                   /*1ea: mov    %rbp,(%rsp) */
0x31, 0xc9,                               /*1ee: xor    %ecx,%ecx */
0x84, 0xc9,                               /*1f0: test   %cl,%cl */
0x75, 0x44,                               /*1f2: jne    238 <op_tailcall+0x238> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1f4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*1f9: movzwl %cx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1fc: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*201: movzbl %cl,%ecx */
0xff, 0xc1,                               /*204: inc    %ecx */
0x48, 0x63, 0xf1,                         /*206: movslq %ecx,%rsi */
0x48, 0x01, 0xd6,                         /*209: add    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*20c: shl    $0x4,%rsi */
0x48, 0x8d, 0x44, 0x06, 0x10,             /*210: lea    0x10(%rsi,%rax,1),%rax */
0x48, 0xf7, 0xd9,                         /*215: neg    %rcx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*218: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x50, 0xf0,                   /*220: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*224: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*228: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*22c: mov    %rdx,(%rax) */
0x48, 0x8d, 0x40, 0xf0,                   /*22f: lea    -0x10(%rax),%rax */
0x48, 0xff, 0xc1,                         /*233: inc    %rcx */
0x75, 0xe8,                               /*236: jne    220 <op_tailcall+0x220> */
0x49, 0x8b, 0x45, 0x18,                   /*238: mov    0x18(%r13),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*23c: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*241: movzwl %cx,%ecx */
0xff, 0xc1,                               /*244: inc    %ecx */
0x48, 0x63, 0xc9,                         /*246: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*249: shl    $0x4,%rcx */
0x48, 0x89, 0x1c, 0x08,                   /*24d: mov    %rbx,(%rax,%rcx,1) */
0xc7, 0x44, 0x08, 0x08, 0x04, 0x00, 0x00, 0x00,/*251: movl   $0x4,0x8(%rax,%rcx,1) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*259: mov    $0x0,%eax */
0x0f, 0xb6, 0xc8,                         /*25e: movzbl %al,%ecx */
0xff, 0xc1,                               /*261: inc    %ecx */
0x49, 0x8b, 0x46, 0x18,                   /*263: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*267: mov    0x20(%rax),%rax */
0x44, 0x89, 0x38,                         /*26b: mov    %r15d,(%rax) */
0x48, 0x8b, 0x54, 0x24, 0x10,             /*26e: mov    0x10(%rsp),%rdx */
0x48, 0x89, 0x50, 0x48,                   /*273: mov    %rdx,0x48(%rax) */
0x83, 0xf9, 0x7f,                         /*277: cmp    $0x7f,%ecx */
0xbd, 0xff, 0xff, 0xff, 0xff,             /*27a: mov    $0xffffffff,%ebp */
0x0f, 0x45, 0xe9,                         /*27f: cmovne %ecx,%ebp */
0x89, 0x68, 0x40,                         /*282: mov    %ebp,0x40(%rax) */
0x49, 0x8b, 0x4e, 0x18,                   /*285: mov    0x18(%r14),%rcx */
0x48, 0x8b, 0x51, 0x08,                   /*289: mov    0x8(%rcx),%rdx */
0x49, 0x8b, 0x7d, 0x18,                   /*28d: mov    0x18(%r13),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*291: mov    $0x0,%ecx */
0x0f, 0xb7, 0xf1,                         /*296: movzwl %cx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*299: shl    $0x4,%rsi */
0x48, 0x01, 0xfe,                         /*29d: add    %rdi,%rsi */
0xff, 0xc5,                               /*2a0: inc    %ebp */
0x48, 0x63, 0xcd,                         /*2a2: movslq %ebp,%rcx */
0x48, 0x39, 0xf2,                         /*2a5: cmp    %rsi,%rdx */
0x76, 0x63,                               /*2a8: jbe    30d <op_tailcall+0x30d> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*2aa: mov    $0x0,%ebx */
0x0f, 0xb7, 0xdb,                         /*2af: movzwl %bx,%ebx */
0x48, 0x01, 0xcb,                         /*2b2: add    %rcx,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*2b5: shl    $0x4,%rbx */
0x48, 0x01, 0xfb,                         /*2b9: add    %rdi,%rbx */
0x48, 0x39, 0xda,                         /*2bc: cmp    %rbx,%rdx */
0x73, 0x4c,                               /*2bf: jae    30d <op_tailcall+0x30d> */
0x85, 0xed,                               /*2c1: test   %ebp,%ebp */
0x74, 0x76,                               /*2c3: je     33b <op_tailcall+0x33b> */
0x48, 0x89, 0xce,                         /*2c5: mov    %rcx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*2c8: shl    $0x4,%rsi */
0x48, 0x8d, 0x54, 0x16, 0xf0,             /*2cc: lea    -0x10(%rsi,%rdx,1),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2d1: mov    $0x0,%esi */
0x0f, 0xb7, 0xf6,                         /*2d6: movzwl %si,%esi */
0x48, 0x01, 0xce,                         /*2d9: add    %rcx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*2dc: shl    $0x4,%rsi */
0x48, 0x8d, 0x74, 0x3e, 0xf0,             /*2e0: lea    -0x10(%rsi,%rdi,1),%rsi */
0x48, 0xf7, 0xd9,                         /*2e5: neg    %rcx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*2e8: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x3e,                         /*2f0: mov    (%rsi),%rdi */
0x48, 0x8b, 0x6e, 0x08,                   /*2f3: mov    0x8(%rsi),%rbp */
0x48, 0x89, 0x6a, 0x08,                   /*2f7: mov    %rbp,0x8(%rdx) */
0x48, 0x89, 0x3a,                         /*2fb: mov    %rdi,(%rdx) */
0x48, 0x83, 0xc2, 0xf0,                   /*2fe: add    $0xfffffffffffffff0,%rdx */
0x48, 0x83, 0xc6, 0xf0,                   /*302: add    $0xfffffffffffffff0,%rsi */
0x48, 0xff, 0xc1,                         /*306: inc    %rcx */
0x75, 0xe5,                               /*309: jne    2f0 <op_tailcall+0x2f0> */
0xeb, 0x2e,                               /*30b: jmp    33b <op_tailcall+0x33b> */
0x48, 0x39, 0xf2,                         /*30d: cmp    %rsi,%rdx */
0x74, 0x29,                               /*310: je     33b <op_tailcall+0x33b> */
0x85, 0xed,                               /*312: test   %ebp,%ebp */
0x74, 0x25,                               /*314: je     33b <op_tailcall+0x33b> */
0x48, 0xf7, 0xd9,                         /*316: neg    %rcx */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*319: nopl   0x0(%rax) */
0x48, 0x8b, 0x3e,                         /*320: mov    (%rsi),%rdi */
0x48, 0x8b, 0x6e, 0x08,                   /*323: mov    0x8(%rsi),%rbp */
0x48, 0x8d, 0x76, 0x10,                   /*327: lea    0x10(%rsi),%rsi */
0x48, 0x89, 0x6a, 0x08,                   /*32b: mov    %rbp,0x8(%rdx) */
0x48, 0x89, 0x3a,                         /*32f: mov    %rdi,(%rdx) */
0x48, 0x8d, 0x52, 0x10,                   /*332: lea    0x10(%rdx),%rdx */
0x48, 0xff, 0xc1,                         /*336: inc    %rcx */
0x75, 0xe5,                               /*339: jne    320 <op_tailcall+0x320> */
0x41, 0xf6, 0x44, 0x24, 0x02, 0x04,       /*33b: testb  $0x4,0x2(%r12) */
0x74, 0x3e,                               /*341: je     381 <op_tailcall+0x381> */
0x49, 0x8b, 0x46, 0x18,                   /*343: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*347: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xf7,                         /*34b: mov    %r14,%rdi */
0x48, 0x8b, 0x34, 0x24,                   /*34e: mov    (%rsp),%rsi */
0x8b, 0x54, 0x24, 0x0c,                   /*352: mov    0xc(%rsp),%edx */
0x41, 0xff, 0x54, 0x24, 0x18,             /*356: callq  *0x18(%r12) */
0x48, 0x89, 0x03,                         /*35b: mov    %rax,(%rbx) */
0x89, 0x53, 0x08,                         /*35e: mov    %edx,0x8(%rbx) */
0x41, 0x8b, 0x75, 0x50,                   /*361: mov    0x50(%r13),%esi */
0x4c, 0x89, 0xf7,                         /*365: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*368: callq  36d <op_tailcall+0x36d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*36d: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*372: movzwl %ax,%esi */
0x31, 0xd2,                               /*375: xor    %edx,%edx */
0x4c, 0x89, 0xef,                         /*377: mov    %r13,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*37a: callq  37f <op_tailcall+0x37f> */
0xeb, 0x68,                               /*37f: jmp    3e9 <op_tailcall+0x3e9> */
0x49, 0x8b, 0x4c, 0x24, 0x18,             /*381: mov    0x18(%r12),%rcx */
0x49, 0x89, 0x4d, 0x08,                   /*386: mov    %rcx,0x8(%r13) */
0x48, 0x8b, 0x51, 0x10,                   /*38a: mov    0x10(%rcx),%rdx */
0x49, 0x89, 0x55, 0x20,                   /*38e: mov    %rdx,0x20(%r13) */
0x48, 0x8b, 0x51, 0x18,                   /*392: mov    0x18(%rcx),%rdx */
0x49, 0x89, 0x55, 0x28,                   /*396: mov    %rdx,0x28(%r13) */
0x8b, 0x50, 0x40,                         /*39a: mov    0x40(%rax),%edx */
0x0f, 0xb7, 0x71, 0x02,                   /*39d: movzwl 0x2(%rcx),%esi */
0x85, 0xd2,                               /*3a1: test   %edx,%edx */
0x78, 0x05,                               /*3a3: js     3aa <op_tailcall+0x3aa> */
0x83, 0xc2, 0x02,                         /*3a5: add    $0x2,%edx */
0xeb, 0x10,                               /*3a8: jmp    3ba <op_tailcall+0x3ba> */
0x83, 0xfe, 0x03,                         /*3aa: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*3ad: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*3b2: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*3b5: mov    $0x3,%edx */
0x4c, 0x89, 0xf7,                         /*3ba: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3bd: callq  3c2 <op_tailcall+0x3c2> */
0x49, 0x8b, 0x46, 0x18,                   /*3c2: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3c6: mov    0x8(%rax),%rax */
0x49, 0x89, 0x45, 0x18,                   /*3ca: mov    %rax,0x18(%r13) */
0x49, 0x8b, 0x45, 0x08,                   /*3ce: mov    0x8(%r13),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3d2: mov    0x8(%rax),%rax */
0x49, 0x89, 0x45, 0x10,                   /*3d6: mov    %rax,0x10(%r13) */
0x49, 0x8b, 0x7d, 0x58,                   /*3da: mov    0x58(%r13),%rdi */
0x4c, 0x89, 0xe6,                         /*3de: mov    %r12,%rsi */
0x4c, 0x89, 0xea,                         /*3e1: mov    %r13,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3e4: callq  3e9 <op_tailcall+0x3e9> */
0x4c, 0x89, 0xef,                         /*3e9: mov    %r13,%rdi */
0x48, 0x83, 0xc4, 0x18,                   /*3ec: add    $0x18,%rsp */
0x5b,                                     /*3f0: pop    %rbx */
0x41, 0x5c,                               /*3f1: pop    %r12 */
0x41, 0x5d,                               /*3f3: pop    %r13 */
0x41, 0x5e,                               /*3f5: pop    %r14 */
0x41, 0x5f,                               /*3f7: pop    %r15 */
0x5d,                                     /*3f9: pop    %rbp */
0xeb, 0x42,                               /*3fa: jmp    43e <_str_const_method_missing53+0x3f8> */
0x49, 0x8b, 0x86, 0x88, 0x00, 0x00, 0x00, /*3fc: mov    0x88(%r14),%rax */
0xe9, 0x6b, 0xfc, 0xff, 0xff,             /*403: jmpq   73 <op_tailcall+0x73> */
0x49, 0x8b, 0x86, 0x80, 0x00, 0x00, 0x00, /*408: mov    0x80(%r14),%rax */
0xe9, 0x5f, 0xfc, 0xff, 0xff,             /*40f: jmpq   73 <op_tailcall+0x73> */
0x49, 0x8b, 0x86, 0xa0, 0x00, 0x00, 0x00, /*414: mov    0xa0(%r14),%rax */
0xe9, 0x53, 0xfc, 0xff, 0xff,             /*41b: jmpq   73 <op_tailcall+0x73> */
0x49, 0x8b, 0x46, 0x78,                   /*420: mov    0x78(%r14),%rax */
0xe9, 0x4a, 0xfc, 0xff, 0xff,             /*424: jmpq   73 <op_tailcall+0x73> */
0x49, 0x8b, 0x46, 0x40,                   /*429: mov    0x40(%r14),%rax */
0xe9, 0x41, 0xfc, 0xff, 0xff,             /*42d: jmpq   73 <op_tailcall+0x73> */
0x49, 0x8b, 0x86, 0x98, 0x00, 0x00, 0x00, /*432: mov    0x98(%r14),%rax */
0xe9, 0x35, 0xfc, 0xff, 0xff,             /*439: jmpq   73 <op_tailcall+0x73> */

};
static uint8_t op_tailcall__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x73,
0x73, 0x69, 0x6e, 0x67, 0x00,             

};

static void op_tailcall_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_tailcall_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_tailcall_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_blkpush__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x7e, 0x58,                   /*6: mov    0x58(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*f: movzwl %ax,%eax */
0x89, 0x44, 0x24, 0x04,                   /*12: mov    %eax,0x4(%rsp) */
0x44, 0x8b, 0x4c, 0x24, 0x04,             /*16: mov    0x4(%rsp),%r9d */
0x8b, 0x44, 0x24, 0x04,                   /*1b: mov    0x4(%rsp),%eax */
0x44, 0x8b, 0x44, 0x24, 0x04,             /*1f: mov    0x4(%rsp),%r8d */
0x8b, 0x54, 0x24, 0x04,                   /*24: mov    0x4(%rsp),%edx */
0x83, 0xe2, 0x0f,                         /*28: and    $0xf,%edx */
0x74, 0x5e,                               /*2b: je     8b <op_blkpush+0x8b> */
0x49, 0x8b, 0x4e, 0x58,                   /*2d: mov    0x58(%r14),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*31: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*35: mov    0x20(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*39: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x71, 0x28,                   /*3d: mov    0x28(%rcx),%rsi */
0x48, 0x85, 0xf6,                         /*41: test   %rsi,%rsi */
0x0f, 0x94, 0xc3,                         /*44: sete   %bl */
0x83, 0xfa, 0x01,                         /*47: cmp    $0x1,%edx */
0x74, 0x27,                               /*4a: je     73 <op_blkpush+0x73> */
0xb9, 0x01, 0x00, 0x00, 0x00,             /*4c: mov    $0x1,%ecx */
0x29, 0xd1,                               /*51: sub    %edx,%ecx */
0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*53: data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0xf6, 0xc3, 0x01,                         /*60: test   $0x1,%bl */
0x75, 0x12,                               /*63: jne    77 <op_blkpush+0x77> */
0x48, 0x8b, 0x76, 0x08,                   /*65: mov    0x8(%rsi),%rsi */
0x48, 0x85, 0xf6,                         /*69: test   %rsi,%rsi */
0x0f, 0x94, 0xc3,                         /*6c: sete   %bl */
0xff, 0xc1,                               /*6f: inc    %ecx */
0x75, 0xed,                               /*71: jne    60 <op_blkpush+0x60> */
0x84, 0xdb,                               /*73: test   %bl,%bl */
0x74, 0x1d,                               /*75: je     94 <op_blkpush+0x94> */
0xbe, 0x02, 0x00, 0x00, 0x00,             /*77: mov    $0x2,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c: callq  81 <op_blkpush+0x81> */
0x4c, 0x89, 0xf7,                         /*81: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*84: callq  89 <op_blkpush+0x89> */
0xeb, 0x59,                               /*89: jmp    e4 <op_blkpush+0xe4> */
0x49, 0x8d, 0x4e, 0x18,                   /*8b: lea    0x18(%r14),%rcx */
0x48, 0x89, 0xce,                         /*8f: mov    %rcx,%rsi */
0xeb, 0x08,                               /*92: jmp    9c <op_blkpush+0x9c> */
0x48, 0x83, 0xc6, 0x18,                   /*94: add    $0x18,%rsi */
0x49, 0x8d, 0x4e, 0x18,                   /*98: lea    0x18(%r14),%rcx */
0x41, 0xc1, 0xe9, 0x0a,                   /*9c: shr    $0xa,%r9d */
0x41, 0x83, 0xe1, 0x3f,                   /*a0: and    $0x3f,%r9d */
0xc1, 0xe8, 0x09,                         /*a4: shr    $0x9,%eax */
0x83, 0xe0, 0x01,                         /*a7: and    $0x1,%eax */
0x41, 0xc1, 0xe8, 0x04,                   /*aa: shr    $0x4,%r8d */
0x41, 0x83, 0xe0, 0x1f,                   /*ae: and    $0x1f,%r8d */
0x48, 0x8b, 0x16,                         /*b2: mov    (%rsi),%rdx */
0x48, 0x8b, 0x09,                         /*b5: mov    (%rcx),%rcx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*b8: mov    $0x0,%esi */
0x0f, 0xb7, 0xf6,                         /*bd: movzwl %si,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*c0: shl    $0x4,%rsi */
0x44, 0x01, 0xc8,                         /*c4: add    %r9d,%eax */
0x41, 0x8d, 0x44, 0x00, 0x01,             /*c7: lea    0x1(%r8,%rax,1),%eax */
0x48, 0x98,                               /*cc: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*ce: shl    $0x4,%rax */
0x48, 0x8b, 0x3c, 0x02,                   /*d2: mov    (%rdx,%rax,1),%rdi */
0x48, 0x8b, 0x44, 0x02, 0x08,             /*d6: mov    0x8(%rdx,%rax,1),%rax */
0x48, 0x89, 0x44, 0x31, 0x08,             /*db: mov    %rax,0x8(%rcx,%rsi,1) */
0x48, 0x89, 0x3c, 0x31,                   /*e0: mov    %rdi,(%rcx,%rsi,1) */
0x4c, 0x89, 0xf7,                         /*e4: mov    %r14,%rdi */
0x5b,                                     /*e7: pop    %rbx */
0x41, 0x5e,                               /*e8: pop    %r14 */

};
static uint8_t op_blkpush__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_blkpush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_blkpush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_blkpush_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_add__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x55,                               /*4: push   %r13 */
0x41, 0x54,                               /*6: push   %r12 */
0x53,                                     /*8: push   %rbx */
0x49, 0x89, 0xff,                         /*9: mov    %rdi,%r15 */
0x49, 0x8b, 0x5f, 0x18,                   /*c: mov    0x18(%r15),%rbx */
0x4d, 0x8b, 0x77, 0x58,                   /*10: mov    0x58(%r15),%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*19: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*1c: shl    $0x4,%rcx */
0x4c, 0x8d, 0x64, 0x0b, 0x08,             /*20: lea    0x8(%rbx,%rcx,1),%r12 */
0x8b, 0x54, 0x0b, 0x08,                   /*25: mov    0x8(%rbx,%rcx,1),%edx */
0x89, 0xd1,                               /*29: mov    %edx,%ecx */
0xc1, 0xe1, 0x08,                         /*2b: shl    $0x8,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*2e: and    $0xffff00,%ecx */
0x0f, 0xb7, 0xc0,                         /*34: movzwl %ax,%eax */
0xff, 0xc0,                               /*37: inc    %eax */
0x48, 0x98,                               /*39: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*3b: shl    $0x4,%rax */
0x44, 0x8b, 0x44, 0x03, 0x08,             /*3f: mov    0x8(%rbx,%rax,1),%r8d */
0x41, 0x0f, 0xb6, 0xc0,                   /*44: movzbl %r8b,%eax */
0x09, 0xc8,                               /*48: or     %ecx,%eax */
0x3d, 0x0f, 0x10, 0x00, 0x00,             /*4a: cmp    $0x100f,%eax */
0x7f, 0x53,                               /*4f: jg     a4 <op_add+0xa4> */
0x3d, 0x02, 0x06, 0x00, 0x00,             /*51: cmp    $0x602,%eax */
0x0f, 0x8f, 0x88, 0x00, 0x00, 0x00,       /*56: jg     e4 <op_add+0xe4> */
0x3d, 0x03, 0x03, 0x00, 0x00,             /*5c: cmp    $0x303,%eax */
0x0f, 0x85, 0xaf, 0x00, 0x00, 0x00,       /*61: jne    116 <op_add+0x116> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*67: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*6c: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*6f: shl    $0x4,%rcx */
0x8b, 0x14, 0x0b,                         /*73: mov    (%rbx,%rcx,1),%edx */
0x8b, 0x74, 0x0b, 0x10,                   /*76: mov    0x10(%rbx,%rcx,1),%esi */
0x89, 0xd0,                               /*7a: mov    %edx,%eax */
0x01, 0xf0,                               /*7c: add    %esi,%eax */
0x0f, 0x81, 0x02, 0x01, 0x00, 0x00,       /*7e: jno    186 <op_add+0x186> */
0x48, 0x01, 0xcb,                         /*84: add    %rcx,%rbx */
0x41, 0xc7, 0x04, 0x24, 0x06, 0x00, 0x00, 0x00,/*87: movl   $0x6,(%r12) */
0xf2, 0x0f, 0x2a, 0xc2,                   /*8f: cvtsi2sd %edx,%xmm0 */
0xf2, 0x0f, 0x2a, 0xce,                   /*93: cvtsi2sd %esi,%xmm1 */
0xf2, 0x0f, 0x58, 0xc8,                   /*97: addsd  %xmm0,%xmm1 */
0xf2, 0x0f, 0x11, 0x0b,                   /*9b: movsd  %xmm1,(%rbx) */
0xe9, 0xf9, 0x00, 0x00, 0x00,             /*9f: jmpq   19d <op_add+0x19d> */
0x3d, 0x10, 0x10, 0x00, 0x00,             /*a4: cmp    $0x1010,%eax */
0x0f, 0x85, 0xcd, 0x00, 0x00, 0x00,       /*a9: jne    17c <op_add+0x17c> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*af: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xe8,                   /*b4: movzwl %ax,%r13d */
0x49, 0xc1, 0xe5, 0x04,                   /*b8: shl    $0x4,%r13 */
0x0f, 0xb7, 0xc0,                         /*bc: movzwl %ax,%eax */
0xff, 0xc0,                               /*bf: inc    %eax */
0x48, 0x98,                               /*c1: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*c3: shl    $0x4,%rax */
0x4a, 0x8b, 0x34, 0x2b,                   /*c7: mov    (%rbx,%r13,1),%rsi */
0x48, 0x8b, 0x0c, 0x03,                   /*cb: mov    (%rbx,%rax,1),%rcx */
0x4c, 0x89, 0xf7,                         /*cf: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*d2: callq  d7 <op_add+0xd7> */
0x4a, 0x89, 0x04, 0x2b,                   /*d7: mov    %rax,(%rbx,%r13,1) */
0x41, 0x89, 0x14, 0x24,                   /*db: mov    %edx,(%r12) */
0xe9, 0xb9, 0x00, 0x00, 0x00,             /*df: jmpq   19d <op_add+0x19d> */
0x3d, 0x03, 0x06, 0x00, 0x00,             /*e4: cmp    $0x603,%eax */
0x75, 0x62,                               /*e9: jne    14d <op_add+0x14d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*eb: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*f0: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*f3: shl    $0x4,%rcx */
0x0f, 0xb7, 0xc0,                         /*f7: movzwl %ax,%eax */
0xff, 0xc0,                               /*fa: inc    %eax */
0x48, 0x98,                               /*fc: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*fe: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x03,             /*102: cvtsi2sdl (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x58, 0x04, 0x0b,             /*107: addsd  (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*10c: movsd  %xmm0,(%rbx,%rcx,1) */
0xe9, 0x87, 0x00, 0x00, 0x00,             /*111: jmpq   19d <op_add+0x19d> */
0x3d, 0x06, 0x03, 0x00, 0x00,             /*116: cmp    $0x306,%eax */
0x75, 0x5f,                               /*11b: jne    17c <op_add+0x17c> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11d: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*122: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*125: shl    $0x4,%rcx */
0x0f, 0xb7, 0xc0,                         /*129: movzwl %ax,%eax */
0xff, 0xc0,                               /*12c: inc    %eax */
0x48, 0x98,                               /*12e: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*130: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x0b,             /*134: cvtsi2sdl (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x58, 0x04, 0x03,             /*139: addsd  (%rbx,%rax,1),%xmm0 */
0x41, 0xc7, 0x04, 0x24, 0x06, 0x00, 0x00, 0x00,/*13e: movl   $0x6,(%r12) */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*146: movsd  %xmm0,(%rbx,%rcx,1) */
0xeb, 0x50,                               /*14b: jmp    19d <op_add+0x19d> */
0x3d, 0x06, 0x06, 0x00, 0x00,             /*14d: cmp    $0x606,%eax */
0x75, 0x28,                               /*152: jne    17c <op_add+0x17c> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*154: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*159: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*15c: shl    $0x4,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0x0b,             /*160: movsd  (%rbx,%rcx,1),%xmm0 */
0x0f, 0xb7, 0xc0,                         /*165: movzwl %ax,%eax */
0xff, 0xc0,                               /*168: inc    %eax */
0x48, 0x98,                               /*16a: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*16c: shl    $0x4,%rax */
0xf2, 0x0f, 0x58, 0x04, 0x03,             /*170: addsd  (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*175: movsd  %xmm0,(%rbx,%rcx,1) */
0xeb, 0x21,                               /*17a: jmp    19d <op_add+0x19d> */
0x4c, 0x89, 0xff,                         /*17c: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*17f: callq  184 <op_add+0x184> */
0xeb, 0x22,                               /*184: jmp    1a8 <op_add+0x1a8> */
0x41, 0xc7, 0x04, 0x24, 0x03, 0x00, 0x00, 0x00,/*186: movl   $0x3,(%r12) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18e: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*193: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*196: shl    $0x4,%rcx */
0x89, 0x04, 0x0b,                         /*19a: mov    %eax,(%rbx,%rcx,1) */
0x41, 0x8b, 0x47, 0x50,                   /*19d: mov    0x50(%r15),%eax */
0x41, 0x89, 0x86, 0xdc, 0x00, 0x00, 0x00, /*1a1: mov    %eax,0xdc(%r14) */
0x4c, 0x89, 0xff,                         /*1a8: mov    %r15,%rdi */
0x5b,                                     /*1ab: pop    %rbx */
0x41, 0x5c,                               /*1ac: pop    %r12 */
0x41, 0x5d,                               /*1ae: pop    %r13 */
0x41, 0x5e,                               /*1b0: pop    %r14 */
0x41, 0x5f,                               /*1b2: pop    %r15 */

};
static uint8_t op_add__rodata[] = {
0x00, 0x00,                               

};

static void op_add_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_add_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_add_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_addi__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x4b, 0x18,                   /*4: mov    0x18(%rbx),%rcx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*d: movzwl %ax,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*10: shl    $0x4,%rdx */
0x48, 0x8d, 0x04, 0x11,                   /*14: lea    (%rcx,%rdx,1),%rax */
0x8b, 0x74, 0x11, 0x08,                   /*18: mov    0x8(%rcx,%rdx,1),%esi */
0x83, 0xfe, 0x06,                         /*1c: cmp    $0x6,%esi */
0x75, 0x19,                               /*1f: jne    3a <op_addi+0x3a> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*26: movzbl %cl,%ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*29: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x58, 0x00,                   /*2d: addsd  (%rax),%xmm0 */
0xf2, 0x0f, 0x11, 0x00,                   /*31: movsd  %xmm0,(%rax) */
0xe9, 0x82, 0x00, 0x00, 0x00,             /*35: jmpq   bc <op_addi+0xbc> */
0x83, 0xfe, 0x03,                         /*3a: cmp    $0x3,%esi */
0x75, 0x34,                               /*3d: jne    73 <op_addi+0x73> */
0x48, 0x8d, 0x4c, 0x11, 0x08,             /*3f: lea    0x8(%rcx,%rdx,1),%rcx */
0x8b, 0x10,                               /*44: mov    (%rax),%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*46: mov    $0x0,%esi */
0x40, 0x0f, 0xb6, 0xf6,                   /*4b: movzbl %sil,%esi */
0x01, 0xd6,                               /*4f: add    %edx,%esi */
0x71, 0x61,                               /*51: jno    b4 <op_addi+0xb4> */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*53: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x2a, 0xc2,                   /*59: cvtsi2sd %edx,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5d: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*62: movzbl %cl,%ecx */
0xf2, 0x0f, 0x2a, 0xc9,                   /*65: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x58, 0xc8,                   /*69: addsd  %xmm0,%xmm1 */
0xf2, 0x0f, 0x11, 0x08,                   /*6d: movsd  %xmm1,(%rax) */
0xeb, 0x49,                               /*71: jmp    bc <op_addi+0xbc> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*73: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*78: movzwl %ax,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*7b: shl    $0x4,%rdx */
0xc7, 0x44, 0x0a, 0x18, 0x03, 0x00, 0x00, 0x00,/*7f: movl   $0x3,0x18(%rdx,%rcx,1) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*87: mov    $0x0,%esi */
0x40, 0x0f, 0xb6, 0xf6,                   /*8c: movzbl %sil,%esi */
0x89, 0x74, 0x0a, 0x10,                   /*90: mov    %esi,0x10(%rdx,%rcx,1) */
0x0f, 0xb7, 0xd0,                         /*94: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*97: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*9c: movzwl %ax,%ecx */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*9f: mov    $0x20,%esi */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*a4: mov    $0x1,%r8d */
0x48, 0x89, 0xdf,                         /*aa: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ad: callq  b2 <op_addi+0xb2> */
0xeb, 0x08,                               /*b2: jmp    bc <op_addi+0xbc> */
0xc7, 0x01, 0x03, 0x00, 0x00, 0x00,       /*b4: movl   $0x3,(%rcx) */
0x89, 0x30,                               /*ba: mov    %esi,(%rax) */
0x48, 0x89, 0xdf,                         /*bc: mov    %rbx,%rdi */
0x5b,                                     /*bf: pop    %rbx */

};
static uint8_t op_addi__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_addi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_addi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_addi_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_sub__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edx */
0x0f, 0xb7, 0xca,                         /*d: movzwl %dx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*10: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*14: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*18: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1b: and    $0xffff00,%esi */
0x0f, 0xb7, 0xd2,                         /*21: movzwl %dx,%edx */
0xff, 0xc2,                               /*24: inc    %edx */
0x48, 0x63, 0xd2,                         /*26: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*29: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*2d: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*32: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*34: cmp    $0x602,%edx */
0x7f, 0x62,                               /*3a: jg     9e <op_sub+0x9e> */
0x4c, 0x8d, 0x44, 0x08, 0x08,             /*3c: lea    0x8(%rax,%rcx,1),%r8 */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*41: cmp    $0x303,%edx */
0x0f, 0x85, 0x86, 0x00, 0x00, 0x00,       /*47: jne    d3 <op_sub+0xd3> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4d: mov    $0x0,%esi */
0x0f, 0xb7, 0xd6,                         /*52: movzwl %si,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*55: shl    $0x4,%rdx */
0x8b, 0x0c, 0x10,                         /*59: mov    (%rax,%rdx,1),%ecx */
0x0f, 0xb7, 0xf6,                         /*5c: movzwl %si,%esi */
0xff, 0xc6,                               /*5f: inc    %esi */
0x48, 0x63, 0xf6,                         /*61: movslq %esi,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*64: shl    $0x4,%rsi */
0x8b, 0x3c, 0x30,                         /*68: mov    (%rax,%rsi,1),%edi */
0x89, 0xce,                               /*6b: mov    %ecx,%esi */
0x29, 0xfe,                               /*6d: sub    %edi,%esi */
0x0f, 0x81, 0xd1, 0x00, 0x00, 0x00,       /*6f: jno    146 <op_sub+0x146> */
0x41, 0xc7, 0x00, 0x06, 0x00, 0x00, 0x00, /*75: movl   $0x6,(%r8) */
0xf2, 0x0f, 0x2a, 0xc1,                   /*7c: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x2a, 0xcf,                   /*80: cvtsi2sd %edi,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*84: subsd  %xmm1,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*88: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*8d: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*90: shl    $0x4,%rcx */
0xf2, 0x0f, 0x11, 0x04, 0x08,             /*94: movsd  %xmm0,(%rax,%rcx,1) */
0xe9, 0xb4, 0x00, 0x00, 0x00,             /*99: jmpq   152 <op_sub+0x152> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*9e: cmp    $0x603,%edx */
0x75, 0x65,                               /*a4: jne    10b <op_sub+0x10b> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a6: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*ab: movzwl %cx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*ae: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*b2: movsd  (%rax,%rdx,1),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*b7: movzwl %cx,%ecx */
0xff, 0xc1,                               /*ba: inc    %ecx */
0x48, 0x63, 0xc9,                         /*bc: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*bf: shl    $0x4,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0x08,             /*c3: cvtsi2sdl (%rax,%rcx,1),%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*c8: subsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*cc: movsd  %xmm0,(%rax,%rdx,1) */
0xeb, 0x7f,                               /*d1: jmp    152 <op_sub+0x152> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*d3: cmp    $0x306,%edx */
0x75, 0x61,                               /*d9: jne    13c <op_sub+0x13c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*db: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*e0: movzwl %cx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*e3: shl    $0x4,%rdx */
0x0f, 0xb7, 0xc9,                         /*e7: movzwl %cx,%ecx */
0xff, 0xc1,                               /*ea: inc    %ecx */
0x48, 0x63, 0xc9,                         /*ec: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*ef: shl    $0x4,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0x10,             /*f3: cvtsi2sdl (%rax,%rdx,1),%xmm0 */
0xf2, 0x0f, 0x5c, 0x04, 0x08,             /*f8: subsd  (%rax,%rcx,1),%xmm0 */
0x41, 0xc7, 0x00, 0x06, 0x00, 0x00, 0x00, /*fd: movl   $0x6,(%r8) */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*104: movsd  %xmm0,(%rax,%rdx,1) */
0xeb, 0x47,                               /*109: jmp    152 <op_sub+0x152> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*10b: cmp    $0x606,%edx */
0x75, 0x29,                               /*111: jne    13c <op_sub+0x13c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*113: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*118: movzwl %cx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*11b: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*11f: movsd  (%rax,%rdx,1),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*124: movzwl %cx,%ecx */
0xff, 0xc1,                               /*127: inc    %ecx */
0x48, 0x63, 0xc9,                         /*129: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*12c: shl    $0x4,%rcx */
0xf2, 0x0f, 0x5c, 0x04, 0x08,             /*130: subsd  (%rax,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*135: movsd  %xmm0,(%rax,%rdx,1) */
0xeb, 0x16,                               /*13a: jmp    152 <op_sub+0x152> */
0x48, 0x89, 0xdf,                         /*13c: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*13f: callq  144 <op_sub+0x144> */
0xeb, 0x0c,                               /*144: jmp    152 <op_sub+0x152> */
0x48, 0x01, 0xd0,                         /*146: add    %rdx,%rax */
0x41, 0xc7, 0x00, 0x03, 0x00, 0x00, 0x00, /*149: movl   $0x3,(%r8) */
0x89, 0x30,                               /*150: mov    %esi,(%rax) */
0x48, 0x89, 0xdf,                         /*152: mov    %rbx,%rdi */
0x5b,                                     /*155: pop    %rbx */

};
static uint8_t op_sub__rodata[] = {
0x00, 0x00,                               

};

static void op_sub_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sub_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sub_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_subi__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x4b, 0x18,                   /*4: mov    0x18(%rbx),%rcx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*d: movzwl %ax,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*10: shl    $0x4,%rdx */
0x48, 0x8d, 0x04, 0x11,                   /*14: lea    (%rcx,%rdx,1),%rax */
0x8b, 0x74, 0x11, 0x08,                   /*18: mov    0x8(%rcx,%rdx,1),%esi */
0x83, 0xfe, 0x06,                         /*1c: cmp    $0x6,%esi */
0x75, 0x06,                               /*1f: jne    27 <op_subi+0x27> */
0xf2, 0x0f, 0x10, 0x00,                   /*21: movsd  (%rax),%xmm0 */
0xeb, 0x25,                               /*25: jmp    4c <op_subi+0x4c> */
0x83, 0xfe, 0x03,                         /*27: cmp    $0x3,%esi */
0x75, 0x36,                               /*2a: jne    62 <op_subi+0x62> */
0x48, 0x8d, 0x4c, 0x11, 0x08,             /*2c: lea    0x8(%rcx,%rdx,1),%rcx */
0x8b, 0x10,                               /*31: mov    (%rax),%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*33: mov    $0x0,%esi */
0x40, 0x0f, 0xb6, 0xfe,                   /*38: movzbl %sil,%edi */
0x89, 0xd6,                               /*3c: mov    %edx,%esi */
0x29, 0xfe,                               /*3e: sub    %edi,%esi */
0x71, 0x61,                               /*40: jno    a3 <op_subi+0xa3> */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*42: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x2a, 0xc2,                   /*48: cvtsi2sd %edx,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4c: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*51: movzbl %cl,%ecx */
0xf2, 0x0f, 0x2a, 0xc9,                   /*54: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*58: subsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x00,                   /*5c: movsd  %xmm0,(%rax) */
0xeb, 0x49,                               /*60: jmp    ab <op_subi+0xab> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*62: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*67: movzwl %ax,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*6a: shl    $0x4,%rdx */
0xc7, 0x44, 0x0a, 0x18, 0x03, 0x00, 0x00, 0x00,/*6e: movl   $0x3,0x18(%rdx,%rcx,1) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*76: mov    $0x0,%esi */
0x40, 0x0f, 0xb6, 0xf6,                   /*7b: movzbl %sil,%esi */
0x89, 0x74, 0x0a, 0x10,                   /*7f: mov    %esi,0x10(%rdx,%rcx,1) */
0x0f, 0xb7, 0xd0,                         /*83: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*86: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*8b: movzwl %ax,%ecx */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*8e: mov    $0x20,%esi */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*93: mov    $0x1,%r8d */
0x48, 0x89, 0xdf,                         /*99: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*9c: callq  a1 <op_subi+0xa1> */
0xeb, 0x08,                               /*a1: jmp    ab <op_subi+0xab> */
0xc7, 0x01, 0x03, 0x00, 0x00, 0x00,       /*a3: movl   $0x3,(%rcx) */
0x89, 0x30,                               /*a9: mov    %esi,(%rax) */
0x48, 0x89, 0xdf,                         /*ab: mov    %rbx,%rdi */
0x5b,                                     /*ae: pop    %rbx */

};
static uint8_t op_subi__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_subi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_subi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_subi_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_mul__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0x49, 0x8b, 0x5e, 0x18,                   /*8: mov    0x18(%r14),%rbx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc1,                         /*11: movzwl %cx,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*14: shl    $0x4,%rax */
0x8b, 0x54, 0x03, 0x08,                   /*18: mov    0x8(%rbx,%rax,1),%edx */
0x89, 0xd6,                               /*1c: mov    %edx,%esi */
0xc1, 0xe6, 0x08,                         /*1e: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*21: and    $0xffff00,%esi */
0x0f, 0xb7, 0xc9,                         /*27: movzwl %cx,%ecx */
0xff, 0xc1,                               /*2a: inc    %ecx */
0x48, 0x63, 0xc9,                         /*2c: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*2f: shl    $0x4,%rcx */
0x44, 0x8b, 0x44, 0x0b, 0x08,             /*33: mov    0x8(%rbx,%rcx,1),%r8d */
0x41, 0x0f, 0xb6, 0xc8,                   /*38: movzbl %r8b,%ecx */
0x09, 0xf1,                               /*3c: or     %esi,%ecx */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3e: cmp    $0x602,%ecx */
0x7f, 0x5e,                               /*44: jg     a4 <op_mul+0xa4> */
0x4c, 0x8d, 0x7c, 0x03, 0x08,             /*46: lea    0x8(%rbx,%rax,1),%r15 */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*4b: cmp    $0x303,%ecx */
0x0f, 0x85, 0x80, 0x00, 0x00, 0x00,       /*51: jne    d7 <op_mul+0xd7> */
0x49, 0x8b, 0x7e, 0x58,                   /*57: mov    0x58(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5b: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*60: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*63: shl    $0x4,%rcx */
0x0f, 0xb7, 0xc0,                         /*67: movzwl %ax,%eax */
0xff, 0xc0,                               /*6a: inc    %eax */
0x48, 0x98,                               /*6c: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*6e: shl    $0x4,%rax */
0x48, 0x8b, 0x34, 0x0b,                   /*72: mov    (%rbx,%rcx,1),%rsi */
0x48, 0x8b, 0x0c, 0x03,                   /*76: mov    (%rbx,%rax,1),%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7a: callq  7f <op_mul+0x7f> */
0x83, 0xfa, 0x06,                         /*7f: cmp    $0x6,%edx */
0x0f, 0x85, 0xc0, 0x00, 0x00, 0x00,       /*82: jne    148 <op_mul+0x148> */
0x41, 0xc7, 0x07, 0x06, 0x00, 0x00, 0x00, /*88: movl   $0x6,(%r15) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8f: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*94: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*97: shl    $0x4,%rcx */
0x48, 0x89, 0x04, 0x0b,                   /*9b: mov    %rax,(%rbx,%rcx,1) */
0xe9, 0xbf, 0x00, 0x00, 0x00,             /*9f: jmpq   163 <op_mul+0x163> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*a4: cmp    $0x603,%ecx */
0x75, 0x62,                               /*aa: jne    10e <op_mul+0x10e> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ac: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*b1: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*b4: shl    $0x4,%rcx */
0x0f, 0xb7, 0xc0,                         /*b8: movzwl %ax,%eax */
0xff, 0xc0,                               /*bb: inc    %eax */
0x48, 0x98,                               /*bd: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*bf: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x03,             /*c3: cvtsi2sdl (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x59, 0x04, 0x0b,             /*c8: mulsd  (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*cd: movsd  %xmm0,(%rbx,%rcx,1) */
0xe9, 0x8c, 0x00, 0x00, 0x00,             /*d2: jmpq   163 <op_mul+0x163> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*d7: cmp    $0x306,%ecx */
0x75, 0x5f,                               /*dd: jne    13e <op_mul+0x13e> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*df: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*e4: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*e7: shl    $0x4,%rcx */
0x0f, 0xb7, 0xc0,                         /*eb: movzwl %ax,%eax */
0xff, 0xc0,                               /*ee: inc    %eax */
0x48, 0x98,                               /*f0: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*f2: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x0b,             /*f6: cvtsi2sdl (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x59, 0x04, 0x03,             /*fb: mulsd  (%rbx,%rax,1),%xmm0 */
0x41, 0xc7, 0x07, 0x06, 0x00, 0x00, 0x00, /*100: movl   $0x6,(%r15) */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*107: movsd  %xmm0,(%rbx,%rcx,1) */
0xeb, 0x55,                               /*10c: jmp    163 <op_mul+0x163> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*10e: cmp    $0x606,%ecx */
0x75, 0x28,                               /*114: jne    13e <op_mul+0x13e> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*116: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*11b: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*11e: shl    $0x4,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0x0b,             /*122: movsd  (%rbx,%rcx,1),%xmm0 */
0x0f, 0xb7, 0xc0,                         /*127: movzwl %ax,%eax */
0xff, 0xc0,                               /*12a: inc    %eax */
0x48, 0x98,                               /*12c: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*12e: shl    $0x4,%rax */
0xf2, 0x0f, 0x59, 0x04, 0x03,             /*132: mulsd  (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*137: movsd  %xmm0,(%rbx,%rcx,1) */
0xeb, 0x25,                               /*13c: jmp    163 <op_mul+0x163> */
0x4c, 0x89, 0xf7,                         /*13e: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*141: callq  146 <op_mul+0x146> */
0xeb, 0x1b,                               /*146: jmp    163 <op_mul+0x163> */
0x83, 0xfa, 0x03,                         /*148: cmp    $0x3,%edx */
0x75, 0x16,                               /*14b: jne    163 <op_mul+0x163> */
0x41, 0xc7, 0x07, 0x03, 0x00, 0x00, 0x00, /*14d: movl   $0x3,(%r15) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*154: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*159: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*15c: shl    $0x4,%rcx */
0x89, 0x04, 0x0b,                         /*160: mov    %eax,(%rbx,%rcx,1) */
0x4c, 0x89, 0xf7,                         /*163: mov    %r14,%rdi */
0x5b,                                     /*166: pop    %rbx */
0x41, 0x5e,                               /*167: pop    %r14 */
0x41, 0x5f,                               /*169: pop    %r15 */

};
static uint8_t op_mul__rodata[] = {
0x00, 0x00,                               

};

static void op_mul_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_mul_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_mul_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_div__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edx */
0x0f, 0xb7, 0xca,                         /*d: movzwl %dx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*10: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*14: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*18: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1b: and    $0xffff00,%esi */
0x0f, 0xb7, 0xd2,                         /*21: movzwl %dx,%edx */
0xff, 0xc2,                               /*24: inc    %edx */
0x48, 0x63, 0xd2,                         /*26: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*29: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*2d: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*32: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*34: cmp    $0x602,%edx */
0x7f, 0x43,                               /*3a: jg     7f <op_div+0x7f> */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*3c: lea    0x8(%rax,%rcx,1),%rcx */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*41: cmp    $0x303,%edx */
0x75, 0x6b,                               /*47: jne    b4 <op_div+0xb4> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*49: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*4e: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*51: shl    $0x4,%rsi */
0x0f, 0xb7, 0xd2,                         /*55: movzwl %dx,%edx */
0xff, 0xc2,                               /*58: inc    %edx */
0x48, 0x63, 0xd2,                         /*5a: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*5d: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*61: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xf2, 0x0f, 0x2a, 0x0c, 0x10,             /*66: cvtsi2sdl (%rax,%rdx,1),%xmm1 */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*6b: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x5e, 0xc1,                   /*71: divsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x30,             /*75: movsd  %xmm0,(%rax,%rsi,1) */
0xe9, 0xa5, 0x00, 0x00, 0x00,             /*7a: jmpq   124 <op_div+0x124> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*7f: cmp    $0x603,%edx */
0x75, 0x64,                               /*85: jne    eb <op_div+0xeb> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*87: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*8c: movzwl %cx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*8f: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*93: movsd  (%rax,%rdx,1),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*98: movzwl %cx,%ecx */
0xff, 0xc1,                               /*9b: inc    %ecx */
0x48, 0x63, 0xc9,                         /*9d: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*a0: shl    $0x4,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0x08,             /*a4: cvtsi2sdl (%rax,%rcx,1),%xmm1 */
0xf2, 0x0f, 0x5e, 0xc1,                   /*a9: divsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*ad: movsd  %xmm0,(%rax,%rdx,1) */
0xeb, 0x70,                               /*b2: jmp    124 <op_div+0x124> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*b4: cmp    $0x306,%edx */
0x75, 0x60,                               /*ba: jne    11c <op_div+0x11c> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*bc: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*c1: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*c4: shl    $0x4,%rsi */
0x0f, 0xb7, 0xd2,                         /*c8: movzwl %dx,%edx */
0xff, 0xc2,                               /*cb: inc    %edx */
0x48, 0x63, 0xd2,                         /*cd: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*d0: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*d4: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xf2, 0x0f, 0x5e, 0x04, 0x10,             /*d9: divsd  (%rax,%rdx,1),%xmm0 */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*de: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x11, 0x04, 0x30,             /*e4: movsd  %xmm0,(%rax,%rsi,1) */
0xeb, 0x39,                               /*e9: jmp    124 <op_div+0x124> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*eb: cmp    $0x606,%edx */
0x75, 0x29,                               /*f1: jne    11c <op_div+0x11c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f3: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*f8: movzwl %cx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*fb: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*ff: movsd  (%rax,%rdx,1),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*104: movzwl %cx,%ecx */
0xff, 0xc1,                               /*107: inc    %ecx */
0x48, 0x63, 0xc9,                         /*109: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*10c: shl    $0x4,%rcx */
0xf2, 0x0f, 0x5e, 0x04, 0x08,             /*110: divsd  (%rax,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*115: movsd  %xmm0,(%rax,%rdx,1) */
0xeb, 0x08,                               /*11a: jmp    124 <op_div+0x124> */
0x48, 0x89, 0xdf,                         /*11c: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*11f: callq  124 <op_div+0x124> */
0x48, 0x89, 0xdf,                         /*124: mov    %rbx,%rdi */
0x5b,                                     /*127: pop    %rbx */

};
static uint8_t op_div__rodata[] = {
0x00, 0x00,                               

};

static void op_div_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_div_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_div_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_eq__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x54,                               /*4: push   %r12 */
0x53,                                     /*6: push   %rbx */
0x49, 0x89, 0xfe,                         /*7: mov    %rdi,%r14 */
0x4d, 0x8b, 0x66, 0x18,                   /*a: mov    0x18(%r14),%r12 */
0x49, 0x8b, 0x7e, 0x58,                   /*e: mov    0x58(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%eax */
0x0f, 0xb7, 0xd8,                         /*17: movzwl %ax,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*1a: shl    $0x4,%rbx */
0x49, 0x8b, 0x34, 0x1c,                   /*1e: mov    (%r12,%rbx,1),%rsi */
0x4d, 0x8d, 0x7c, 0x1c, 0x08,             /*22: lea    0x8(%r12,%rbx,1),%r15 */
0x41, 0x8b, 0x54, 0x1c, 0x08,             /*27: mov    0x8(%r12,%rbx,1),%edx */
0x49, 0x8b, 0x4c, 0x1c, 0x10,             /*2c: mov    0x10(%r12,%rbx,1),%rcx */
0x45, 0x8b, 0x44, 0x1c, 0x18,             /*31: mov    0x18(%r12,%rbx,1),%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*36: callq  3b <op_eq+0x3b> */
0x84, 0xc0,                               /*3b: test   %al,%al */
0x74, 0x17,                               /*3d: je     56 <op_eq+0x56> */
0x49, 0x01, 0xdc,                         /*3f: add    %rbx,%r12 */
0x41, 0xc7, 0x07, 0x02, 0x00, 0x00, 0x00, /*42: movl   $0x2,(%r15) */
0x41, 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00,/*49: movl   $0x1,(%r12) */
0xe9, 0x24, 0x01, 0x00, 0x00,             /*51: jmpq   17a <op_eq+0x17a> */
0x41, 0x8b, 0x0f,                         /*56: mov    (%r15),%ecx */
0xc1, 0xe1, 0x08,                         /*59: shl    $0x8,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*5c: and    $0xffff00,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*62: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*67: movzwl %ax,%eax */
0xff, 0xc0,                               /*6a: inc    %eax */
0x48, 0x98,                               /*6c: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*6e: shl    $0x4,%rax */
0x41, 0x0f, 0xb6, 0x44, 0x04, 0x08,       /*72: movzbl 0x8(%r12,%rax,1),%eax */
0x09, 0xc8,                               /*78: or     %ecx,%eax */
0x3d, 0x02, 0x06, 0x00, 0x00,             /*7a: cmp    $0x602,%eax */
0x7f, 0x2e,                               /*7f: jg     af <op_eq+0xaf> */
0x3d, 0x03, 0x03, 0x00, 0x00,             /*81: cmp    $0x303,%eax */
0x75, 0x54,                               /*86: jne    dc <op_eq+0xdc> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*88: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*8d: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*90: shl    $0x4,%rcx */
0x41, 0x8b, 0x0c, 0x0c,                   /*94: mov    (%r12,%rcx,1),%ecx */
0x0f, 0xb7, 0xc0,                         /*98: movzwl %ax,%eax */
0xff, 0xc0,                               /*9b: inc    %eax */
0x48, 0x98,                               /*9d: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*9f: shl    $0x4,%rax */
0x41, 0x3b, 0x0c, 0x04,                   /*a3: cmp    (%r12,%rax,1),%ecx */
0x0f, 0x94, 0xc0,                         /*a7: sete   %al */
0x0f, 0xb6, 0xc0,                         /*aa: movzbl %al,%eax */
0xeb, 0x7b,                               /*ad: jmp    12a <op_eq+0x12a> */
0x3d, 0x03, 0x06, 0x00, 0x00,             /*af: cmp    $0x603,%eax */
0x75, 0x41,                               /*b4: jne    f7 <op_eq+0xf7> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*b6: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*bb: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*be: shl    $0x4,%rcx */
0x0f, 0xb7, 0xc0,                         /*c2: movzwl %ax,%eax */
0xff, 0xc0,                               /*c5: inc    %eax */
0x48, 0x98,                               /*c7: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*c9: shl    $0x4,%rax */
0xf2, 0x41, 0x0f, 0x2a, 0x04, 0x04,       /*cd: cvtsi2sdl (%r12,%rax,1),%xmm0 */
0xf2, 0x41, 0x0f, 0xc2, 0x04, 0x0c, 0x00, /*d3: cmpeqsd (%r12,%rcx,1),%xmm0 */
0xeb, 0x46,                               /*da: jmp    122 <op_eq+0x122> */
0x3d, 0x06, 0x03, 0x00, 0x00,             /*dc: cmp    $0x306,%eax */
0x75, 0x71,                               /*e1: jne    154 <op_eq+0x154> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e3: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*e8: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*eb: shl    $0x4,%rcx */
0xf2, 0x41, 0x0f, 0x2a, 0x04, 0x0c,       /*ef: cvtsi2sdl (%r12,%rcx,1),%xmm0 */
0xeb, 0x19,                               /*f5: jmp    110 <op_eq+0x110> */
0x3d, 0x06, 0x06, 0x00, 0x00,             /*f7: cmp    $0x606,%eax */
0x75, 0x56,                               /*fc: jne    154 <op_eq+0x154> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*fe: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*103: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*106: shl    $0x4,%rcx */
0xf2, 0x41, 0x0f, 0x10, 0x04, 0x0c,       /*10a: movsd  (%r12,%rcx,1),%xmm0 */
0x0f, 0xb7, 0xc0,                         /*110: movzwl %ax,%eax */
0xff, 0xc0,                               /*113: inc    %eax */
0x48, 0x98,                               /*115: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*117: shl    $0x4,%rax */
0xf2, 0x41, 0x0f, 0xc2, 0x04, 0x04, 0x00, /*11b: cmpeqsd (%r12,%rax,1),%xmm0 */
0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*122: movq   %xmm0,%rax */
0x83, 0xe0, 0x01,                         /*127: and    $0x1,%eax */
0x85, 0xc0,                               /*12a: test   %eax,%eax */
0x74, 0x09,                               /*12c: je     137 <op_eq+0x137> */
0x41, 0xc7, 0x07, 0x02, 0x00, 0x00, 0x00, /*12e: movl   $0x2,(%r15) */
0xeb, 0x07,                               /*135: jmp    13e <op_eq+0x13e> */
0x41, 0xc7, 0x07, 0x00, 0x00, 0x00, 0x00, /*137: movl   $0x0,(%r15) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*13e: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*143: movzwl %ax,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*146: shl    $0x4,%rax */
0x41, 0xc7, 0x04, 0x04, 0x01, 0x00, 0x00, 0x00,/*14a: movl   $0x1,(%r12,%rax,1) */
0xeb, 0x26,                               /*152: jmp    17a <op_eq+0x17a> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*154: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*159: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*15c: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*161: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*164: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*169: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*16d: mov    $0x20,%esi */
0x4c, 0x89, 0xf7,                         /*172: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*175: callq  17a <op_eq+0x17a> */
0x4c, 0x89, 0xf7,                         /*17a: mov    %r14,%rdi */
0x5b,                                     /*17d: pop    %rbx */
0x41, 0x5c,                               /*17e: pop    %r12 */
0x41, 0x5e,                               /*180: pop    %r14 */
0x41, 0x5f,                               /*182: pop    %r15 */

};
static uint8_t op_eq__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_eq_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_eq_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_eq_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_lt__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edx */
0x0f, 0xb7, 0xca,                         /*d: movzwl %dx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*10: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*14: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*18: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1b: and    $0xffff00,%esi */
0x0f, 0xb7, 0xd2,                         /*21: movzwl %dx,%edx */
0xff, 0xc2,                               /*24: inc    %edx */
0x48, 0x63, 0xd2,                         /*26: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*29: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*2d: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*32: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*34: cmp    $0x602,%edx */
0x7f, 0x2e,                               /*3a: jg     6a <op_lt+0x6a> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*3c: cmp    $0x303,%edx */
0x75, 0x4d,                               /*42: jne    91 <op_lt+0x91> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*44: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*49: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*4c: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*50: mov    (%rax,%rsi,1),%esi */
0x0f, 0xb7, 0xd2,                         /*53: movzwl %dx,%edx */
0xff, 0xc2,                               /*56: inc    %edx */
0x48, 0x63, 0xd2,                         /*58: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*5b: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*5f: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9c, 0xc2,                         /*62: setl   %dl */
0xe9, 0x8b, 0x00, 0x00, 0x00,             /*65: jmpq   f5 <op_lt+0xf5> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*6a: cmp    $0x603,%edx */
0x75, 0x56,                               /*70: jne    c8 <op_lt+0xc8> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*72: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*77: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*7a: shl    $0x4,%rsi */
0x0f, 0xb7, 0xd2,                         /*7e: movzwl %dx,%edx */
0xff, 0xc2,                               /*81: inc    %edx */
0x48, 0x63, 0xd2,                         /*83: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*86: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x10,             /*8a: cvtsi2sdl (%rax,%rdx,1),%xmm0 */
0xeb, 0x5c,                               /*8f: jmp    ed <op_lt+0xed> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*91: cmp    $0x306,%edx */
0x0f, 0x85, 0x87, 0x00, 0x00, 0x00,       /*97: jne    124 <op_lt+0x124> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*9d: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*a2: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*a5: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*a9: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0x0f, 0xb7, 0xd2,                         /*ae: movzwl %dx,%edx */
0xff, 0xc2,                               /*b1: inc    %edx */
0x48, 0x63, 0xd2,                         /*b3: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*b6: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x0c, 0x10,             /*ba: movsd  (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*bf: ucomisd %xmm0,%xmm1 */
0x0f, 0x97, 0xc2,                         /*c3: seta   %dl */
0xeb, 0x2d,                               /*c6: jmp    f5 <op_lt+0xf5> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*c8: cmp    $0x606,%edx */
0x75, 0x54,                               /*ce: jne    124 <op_lt+0x124> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*d0: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*d5: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*d8: shl    $0x4,%rsi */
0x0f, 0xb7, 0xd2,                         /*dc: movzwl %dx,%edx */
0xff, 0xc2,                               /*df: inc    %edx */
0x48, 0x63, 0xd2,                         /*e1: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*e4: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*e8: movsd  (%rax,%rdx,1),%xmm0 */
0x66, 0x0f, 0x2e, 0x04, 0x30,             /*ed: ucomisd (%rax,%rsi,1),%xmm0 */
0x0f, 0x97, 0xc2,                         /*f2: seta   %dl */
0x0f, 0xb6, 0xd2,                         /*f5: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*f8: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*fd: test   %edx,%edx */
0x74, 0x08,                               /*ff: je     109 <op_lt+0x109> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*101: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*107: jmp    10f <op_lt+0x10f> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*109: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10f: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*114: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*117: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*11b: movl   $0x1,(%rax,%rcx,1) */
0xeb, 0x26,                               /*122: jmp    14a <op_lt+0x14a> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*124: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*129: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12c: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*131: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*134: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*139: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*13d: mov    $0x20,%esi */
0x48, 0x89, 0xdf,                         /*142: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*145: callq  14a <op_lt+0x14a> */
0x48, 0x89, 0xdf,                         /*14a: mov    %rbx,%rdi */
0x5b,                                     /*14d: pop    %rbx */

};
static uint8_t op_lt__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_lt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_lt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_lt_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_le__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edx */
0x0f, 0xb7, 0xca,                         /*d: movzwl %dx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*10: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*14: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*18: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1b: and    $0xffff00,%esi */
0x0f, 0xb7, 0xd2,                         /*21: movzwl %dx,%edx */
0xff, 0xc2,                               /*24: inc    %edx */
0x48, 0x63, 0xd2,                         /*26: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*29: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*2d: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*32: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*34: cmp    $0x602,%edx */
0x7f, 0x2e,                               /*3a: jg     6a <op_le+0x6a> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*3c: cmp    $0x303,%edx */
0x75, 0x4d,                               /*42: jne    91 <op_le+0x91> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*44: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*49: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*4c: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*50: mov    (%rax,%rsi,1),%esi */
0x0f, 0xb7, 0xd2,                         /*53: movzwl %dx,%edx */
0xff, 0xc2,                               /*56: inc    %edx */
0x48, 0x63, 0xd2,                         /*58: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*5b: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*5f: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9e, 0xc2,                         /*62: setle  %dl */
0xe9, 0x8b, 0x00, 0x00, 0x00,             /*65: jmpq   f5 <op_le+0xf5> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*6a: cmp    $0x603,%edx */
0x75, 0x56,                               /*70: jne    c8 <op_le+0xc8> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*72: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*77: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*7a: shl    $0x4,%rsi */
0x0f, 0xb7, 0xd2,                         /*7e: movzwl %dx,%edx */
0xff, 0xc2,                               /*81: inc    %edx */
0x48, 0x63, 0xd2,                         /*83: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*86: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x10,             /*8a: cvtsi2sdl (%rax,%rdx,1),%xmm0 */
0xeb, 0x5c,                               /*8f: jmp    ed <op_le+0xed> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*91: cmp    $0x306,%edx */
0x0f, 0x85, 0x87, 0x00, 0x00, 0x00,       /*97: jne    124 <op_le+0x124> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*9d: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*a2: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*a5: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*a9: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0x0f, 0xb7, 0xd2,                         /*ae: movzwl %dx,%edx */
0xff, 0xc2,                               /*b1: inc    %edx */
0x48, 0x63, 0xd2,                         /*b3: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*b6: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x0c, 0x10,             /*ba: movsd  (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*bf: ucomisd %xmm0,%xmm1 */
0x0f, 0x93, 0xc2,                         /*c3: setae  %dl */
0xeb, 0x2d,                               /*c6: jmp    f5 <op_le+0xf5> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*c8: cmp    $0x606,%edx */
0x75, 0x54,                               /*ce: jne    124 <op_le+0x124> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*d0: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*d5: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*d8: shl    $0x4,%rsi */
0x0f, 0xb7, 0xd2,                         /*dc: movzwl %dx,%edx */
0xff, 0xc2,                               /*df: inc    %edx */
0x48, 0x63, 0xd2,                         /*e1: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*e4: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*e8: movsd  (%rax,%rdx,1),%xmm0 */
0x66, 0x0f, 0x2e, 0x04, 0x30,             /*ed: ucomisd (%rax,%rsi,1),%xmm0 */
0x0f, 0x93, 0xc2,                         /*f2: setae  %dl */
0x0f, 0xb6, 0xd2,                         /*f5: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*f8: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*fd: test   %edx,%edx */
0x74, 0x08,                               /*ff: je     109 <op_le+0x109> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*101: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*107: jmp    10f <op_le+0x10f> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*109: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10f: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*114: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*117: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*11b: movl   $0x1,(%rax,%rcx,1) */
0xeb, 0x26,                               /*122: jmp    14a <op_le+0x14a> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*124: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*129: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12c: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*131: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*134: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*139: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*13d: mov    $0x20,%esi */
0x48, 0x89, 0xdf,                         /*142: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*145: callq  14a <op_le+0x14a> */
0x48, 0x89, 0xdf,                         /*14a: mov    %rbx,%rdi */
0x5b,                                     /*14d: pop    %rbx */

};
static uint8_t op_le__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_le_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_le_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_le_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_gt__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edx */
0x0f, 0xb7, 0xca,                         /*d: movzwl %dx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*10: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*14: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*18: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1b: and    $0xffff00,%esi */
0x0f, 0xb7, 0xd2,                         /*21: movzwl %dx,%edx */
0xff, 0xc2,                               /*24: inc    %edx */
0x48, 0x63, 0xd2,                         /*26: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*29: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*2d: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*32: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*34: cmp    $0x602,%edx */
0x7f, 0x2b,                               /*3a: jg     67 <op_gt+0x67> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*3c: cmp    $0x303,%edx */
0x75, 0x56,                               /*42: jne    9a <op_gt+0x9a> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*44: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*49: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*4c: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*50: mov    (%rax,%rsi,1),%esi */
0x0f, 0xb7, 0xd2,                         /*53: movzwl %dx,%edx */
0xff, 0xc2,                               /*56: inc    %edx */
0x48, 0x63, 0xd2,                         /*58: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*5b: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*5f: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9f, 0xc2,                         /*62: setg   %dl */
0xeb, 0x7b,                               /*65: jmp    e2 <op_gt+0xe2> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*67: cmp    $0x603,%edx */
0x75, 0x46,                               /*6d: jne    b5 <op_gt+0xb5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6f: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*74: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*77: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*7b: movsd  (%rax,%rsi,1),%xmm0 */
0x0f, 0xb7, 0xd2,                         /*80: movzwl %dx,%edx */
0xff, 0xc2,                               /*83: inc    %edx */
0x48, 0x63, 0xd2,                         /*85: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*88: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x0c, 0x10,             /*8c: cvtsi2sdl (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*91: ucomisd %xmm1,%xmm0 */
0x0f, 0x97, 0xc2,                         /*95: seta   %dl */
0xeb, 0x48,                               /*98: jmp    e2 <op_gt+0xe2> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*9a: cmp    $0x306,%edx */
0x75, 0x6f,                               /*a0: jne    111 <op_gt+0x111> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a2: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*a7: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*aa: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*ae: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xeb, 0x19,                               /*b3: jmp    ce <op_gt+0xce> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*b5: cmp    $0x606,%edx */
0x75, 0x54,                               /*bb: jne    111 <op_gt+0x111> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*bd: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*c2: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*c5: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*c9: movsd  (%rax,%rsi,1),%xmm0 */
0x0f, 0xb7, 0xd2,                         /*ce: movzwl %dx,%edx */
0xff, 0xc2,                               /*d1: inc    %edx */
0x48, 0x63, 0xd2,                         /*d3: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*d6: shl    $0x4,%rdx */
0x66, 0x0f, 0x2e, 0x04, 0x10,             /*da: ucomisd (%rax,%rdx,1),%xmm0 */
0x0f, 0x97, 0xc2,                         /*df: seta   %dl */
0x0f, 0xb6, 0xd2,                         /*e2: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*e5: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*ea: test   %edx,%edx */
0x74, 0x08,                               /*ec: je     f6 <op_gt+0xf6> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*ee: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*f4: jmp    fc <op_gt+0xfc> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*f6: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fc: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*101: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*104: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*108: movl   $0x1,(%rax,%rcx,1) */
0xeb, 0x26,                               /*10f: jmp    137 <op_gt+0x137> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*111: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*116: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*119: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*11e: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*121: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*126: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*12a: mov    $0x20,%esi */
0x48, 0x89, 0xdf,                         /*12f: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*132: callq  137 <op_gt+0x137> */
0x48, 0x89, 0xdf,                         /*137: mov    %rbx,%rdi */
0x5b,                                     /*13a: pop    %rbx */

};
static uint8_t op_gt__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_gt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_gt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_gt_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_ge__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edx */
0x0f, 0xb7, 0xca,                         /*d: movzwl %dx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*10: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*14: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*18: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1b: and    $0xffff00,%esi */
0x0f, 0xb7, 0xd2,                         /*21: movzwl %dx,%edx */
0xff, 0xc2,                               /*24: inc    %edx */
0x48, 0x63, 0xd2,                         /*26: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*29: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*2d: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*32: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*34: cmp    $0x602,%edx */
0x7f, 0x2b,                               /*3a: jg     67 <op_ge+0x67> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*3c: cmp    $0x303,%edx */
0x75, 0x56,                               /*42: jne    9a <op_ge+0x9a> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*44: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*49: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*4c: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*50: mov    (%rax,%rsi,1),%esi */
0x0f, 0xb7, 0xd2,                         /*53: movzwl %dx,%edx */
0xff, 0xc2,                               /*56: inc    %edx */
0x48, 0x63, 0xd2,                         /*58: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*5b: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*5f: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9d, 0xc2,                         /*62: setge  %dl */
0xeb, 0x7b,                               /*65: jmp    e2 <op_ge+0xe2> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*67: cmp    $0x603,%edx */
0x75, 0x46,                               /*6d: jne    b5 <op_ge+0xb5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6f: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*74: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*77: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*7b: movsd  (%rax,%rsi,1),%xmm0 */
0x0f, 0xb7, 0xd2,                         /*80: movzwl %dx,%edx */
0xff, 0xc2,                               /*83: inc    %edx */
0x48, 0x63, 0xd2,                         /*85: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*88: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x0c, 0x10,             /*8c: cvtsi2sdl (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*91: ucomisd %xmm1,%xmm0 */
0x0f, 0x93, 0xc2,                         /*95: setae  %dl */
0xeb, 0x48,                               /*98: jmp    e2 <op_ge+0xe2> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*9a: cmp    $0x306,%edx */
0x75, 0x6f,                               /*a0: jne    111 <op_ge+0x111> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a2: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*a7: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*aa: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*ae: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xeb, 0x19,                               /*b3: jmp    ce <op_ge+0xce> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*b5: cmp    $0x606,%edx */
0x75, 0x54,                               /*bb: jne    111 <op_ge+0x111> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*bd: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*c2: movzwl %dx,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*c5: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*c9: movsd  (%rax,%rsi,1),%xmm0 */
0x0f, 0xb7, 0xd2,                         /*ce: movzwl %dx,%edx */
0xff, 0xc2,                               /*d1: inc    %edx */
0x48, 0x63, 0xd2,                         /*d3: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*d6: shl    $0x4,%rdx */
0x66, 0x0f, 0x2e, 0x04, 0x10,             /*da: ucomisd (%rax,%rdx,1),%xmm0 */
0x0f, 0x93, 0xc2,                         /*df: setae  %dl */
0x0f, 0xb6, 0xd2,                         /*e2: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*e5: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*ea: test   %edx,%edx */
0x74, 0x08,                               /*ec: je     f6 <op_ge+0xf6> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*ee: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*f4: jmp    fc <op_ge+0xfc> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*f6: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fc: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*101: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*104: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*108: movl   $0x1,(%rax,%rcx,1) */
0xeb, 0x26,                               /*10f: jmp    137 <op_ge+0x137> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*111: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*116: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*119: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*11e: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*121: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*126: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*12a: mov    $0x20,%esi */
0x48, 0x89, 0xdf,                         /*12f: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*132: callq  137 <op_ge+0x137> */
0x48, 0x89, 0xdf,                         /*137: mov    %rbx,%rdi */
0x5b,                                     /*13a: pop    %rbx */

};
static uint8_t op_ge__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_ge_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_ge_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_ge_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_array__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*d: movzwl %ax,%r14d */
0x49, 0xc1, 0xe6, 0x04,                   /*11: shl    $0x4,%r14 */
0x4c, 0x8b, 0x7b, 0x18,                   /*15: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x7b, 0x58,                   /*19: mov    0x58(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*22: movzwl %ax,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*25: shl    $0x4,%rdx */
0x4c, 0x01, 0xfa,                         /*29: add    %r15,%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*2c: mov    $0x0,%eax */
0x0f, 0xb6, 0xf0,                         /*31: movzbl %al,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*34: callq  39 <op_array+0x39> */
0x4b, 0x89, 0x04, 0x37,                   /*39: mov    %rax,(%r15,%r14,1) */
0x43, 0x89, 0x54, 0x37, 0x08,             /*3d: mov    %edx,0x8(%r15,%r14,1) */
0x8b, 0x43, 0x50,                         /*42: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*45: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*49: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*4f: mov    %rbx,%rdi */
0x5b,                                     /*52: pop    %rbx */
0x41, 0x5e,                               /*53: pop    %r14 */
0x41, 0x5f,                               /*55: pop    %r15 */

};
static uint8_t op_array__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_array_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_array_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_array_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_arycat__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x54,                               /*4: push   %r12 */
0x53,                                     /*6: push   %rbx */
0x49, 0x89, 0xff,                         /*7: mov    %rdi,%r15 */
0x4d, 0x8b, 0x67, 0x18,                   /*a: mov    0x18(%r15),%r12 */
0x4d, 0x8b, 0x77, 0x58,                   /*e: mov    0x58(%r15),%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%eax */
0x0f, 0xb7, 0xd8,                         /*17: movzwl %ax,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*1a: shl    $0x4,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1e: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*23: movzwl %ax,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*26: shl    $0x4,%rax */
0x49, 0x8b, 0x34, 0x04,                   /*2a: mov    (%r12,%rax,1),%rsi */
0x41, 0x8b, 0x54, 0x04, 0x08,             /*2e: mov    0x8(%r12,%rax,1),%edx */
0x4c, 0x89, 0xf7,                         /*33: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*36: callq  3b <op_arycat+0x3b> */
0x41, 0x89, 0xd0,                         /*3b: mov    %edx,%r8d */
0x49, 0x8b, 0x34, 0x1c,                   /*3e: mov    (%r12,%rbx,1),%rsi */
0x41, 0x8b, 0x54, 0x1c, 0x08,             /*42: mov    0x8(%r12,%rbx,1),%edx */
0x4c, 0x89, 0xf7,                         /*47: mov    %r14,%rdi */
0x48, 0x89, 0xc1,                         /*4a: mov    %rax,%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*4d: callq  52 <op_arycat+0x52> */
0x41, 0x8b, 0x47, 0x50,                   /*52: mov    0x50(%r15),%eax */
0x49, 0x8b, 0x4f, 0x58,                   /*56: mov    0x58(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*5a: mov    %eax,0xdc(%rcx) */
0x4c, 0x89, 0xff,                         /*60: mov    %r15,%rdi */
0x5b,                                     /*63: pop    %rbx */
0x41, 0x5c,                               /*64: pop    %r12 */
0x41, 0x5e,                               /*66: pop    %r14 */
0x41, 0x5f,                               /*68: pop    %r15 */

};
static uint8_t op_arycat__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_arycat_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_arycat_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_arycat_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_arypush__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x46, 0x18,                   /*6: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x7e, 0x58,                   /*a: mov    0x58(%r14),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*13: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*16: shl    $0x4,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%edx */
0x0f, 0xb7, 0xda,                         /*1f: movzwl %dx,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*22: shl    $0x4,%rbx */
0x48, 0x8b, 0x34, 0x08,                   /*26: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*2a: mov    0x8(%rax,%rcx,1),%edx */
0x48, 0x8b, 0x0c, 0x18,                   /*2e: mov    (%rax,%rbx,1),%rcx */
0x44, 0x8b, 0x44, 0x18, 0x08,             /*32: mov    0x8(%rax,%rbx,1),%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*37: callq  3c <op_arypush+0x3c> */
0x4c, 0x89, 0xf7,                         /*3c: mov    %r14,%rdi */
0x5b,                                     /*3f: pop    %rbx */
0x41, 0x5e,                               /*40: pop    %r14 */

};
static uint8_t op_arypush__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_arypush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_arypush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_arypush_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_aref__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0x49, 0x8b, 0x5e, 0x18,                   /*8: mov    0x18(%r14),%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*11: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*14: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x0b,                   /*18: mov    (%rbx,%rcx,1),%rsi */
0x8b, 0x44, 0x0b, 0x08,                   /*1c: mov    0x8(%rbx,%rcx,1),%eax */
0x83, 0xf8, 0x0e,                         /*20: cmp    $0xe,%eax */
0x75, 0x2e,                               /*23: jne    53 <op_aref+0x53> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*25: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf8,                   /*2a: movzwl %ax,%r15d */
0x49, 0xc1, 0xe7, 0x04,                   /*2e: shl    $0x4,%r15 */
0x49, 0x8b, 0x7e, 0x58,                   /*32: mov    0x58(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*36: mov    $0x0,%eax */
0x0f, 0xb6, 0xc8,                         /*3b: movzbl %al,%ecx */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*3e: mov    $0xe,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*43: callq  48 <op_aref+0x48> */
0x4a, 0x89, 0x04, 0x3b,                   /*48: mov    %rax,(%rbx,%r15,1) */
0x42, 0x89, 0x54, 0x3b, 0x08,             /*4c: mov    %edx,0x8(%rbx,%r15,1) */
0xeb, 0x46,                               /*51: jmp    99 <op_aref+0x99> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*53: mov    $0x0,%edx */
0x84, 0xd2,                               /*58: test   %dl,%dl */
0x75, 0x1e,                               /*5a: jne    7a <op_aref+0x7a> */
0x8b, 0x4c, 0x0b, 0x0c,                   /*5c: mov    0xc(%rbx,%rcx,1),%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*60: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*65: movzwl %dx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*68: shl    $0x4,%rdx */
0x48, 0x89, 0x34, 0x13,                   /*6c: mov    %rsi,(%rbx,%rdx,1) */
0x89, 0x44, 0x13, 0x08,                   /*70: mov    %eax,0x8(%rbx,%rdx,1) */
0x89, 0x4c, 0x13, 0x0c,                   /*74: mov    %ecx,0xc(%rbx,%rdx,1) */
0xeb, 0x1f,                               /*78: jmp    99 <op_aref+0x99> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7a: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*7f: movzwl %ax,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*82: shl    $0x4,%rax */
0xc7, 0x44, 0x03, 0x08, 0x00, 0x00, 0x00, 0x00,/*86: movl   $0x0,0x8(%rbx,%rax,1) */
0x49, 0x8b, 0x4e, 0x18,                   /*8e: mov    0x18(%r14),%rcx */
0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*92: movl   $0x0,(%rcx,%rax,1) */
0x4c, 0x89, 0xf7,                         /*99: mov    %r14,%rdi */
0x5b,                                     /*9c: pop    %rbx */
0x41, 0x5e,                               /*9d: pop    %r14 */
0x41, 0x5f,                               /*9f: pop    %r15 */

};
static uint8_t op_aref__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_aref_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_aref_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_aref_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_aset__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x46, 0x18,                   /*6: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x7e, 0x58,                   /*a: mov    0x58(%r14),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*13: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*16: shl    $0x4,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%edx */
0x0f, 0xb7, 0xda,                         /*1f: movzwl %dx,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*22: shl    $0x4,%rbx */
0x48, 0x8b, 0x34, 0x08,                   /*26: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*2a: mov    0x8(%rax,%rcx,1),%edx */
0x4c, 0x8b, 0x04, 0x18,                   /*2e: mov    (%rax,%rbx,1),%r8 */
0x44, 0x8b, 0x4c, 0x18, 0x08,             /*32: mov    0x8(%rax,%rbx,1),%r9d */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*37: mov    $0x0,%eax */
0x0f, 0xb6, 0xc8,                         /*3c: movzbl %al,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3f: callq  44 <op_aset+0x44> */
0x4c, 0x89, 0xf7,                         /*44: mov    %r14,%rdi */
0x5b,                                     /*47: pop    %rbx */
0x41, 0x5e,                               /*48: pop    %r14 */

};
static uint8_t op_aset__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_aset_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_aset_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_aset_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_apost__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x49, 0x89, 0xff,                         /*a: mov    %rdi,%r15 */
0x49, 0x8b, 0x47, 0x18,                   /*d: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*16: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*19: shl    $0x4,%rcx */
0x4c, 0x8d, 0x24, 0x08,                   /*1d: lea    (%rax,%rcx,1),%r12 */
0x4c, 0x8d, 0x6c, 0x08, 0x08,             /*21: lea    0x8(%rax,%rcx,1),%r13 */
0x83, 0x7c, 0x08, 0x08, 0x0e,             /*26: cmpl   $0xe,0x8(%rax,%rcx,1) */
0x0f, 0x85, 0xb0, 0x00, 0x00, 0x00,       /*2b: jne    e1 <op_apost+0xe1> */
0x4c, 0x8b, 0x34, 0x08,                   /*31: mov    (%rax,%rcx,1),%r14 */
0x41, 0x8b, 0x5e, 0x18,                   /*35: mov    0x18(%r14),%ebx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*39: mov    $0x0,%eax */
0x0f, 0xb6, 0xc0,                         /*3e: movzbl %al,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*41: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*46: movzwl %cx,%ecx */
0x01, 0xc1,                               /*49: add    %eax,%ecx */
0x49, 0x8b, 0x7f, 0x58,                   /*4b: mov    0x58(%r15),%rdi */
0x39, 0xcb,                               /*4f: cmp    %ecx,%ebx */
0x0f, 0x8e, 0xed, 0x00, 0x00, 0x00,       /*51: jle    144 <op_apost+0x144> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*57: mov    $0x0,%eax */
0x0f, 0xb6, 0xe8,                         /*5c: movzbl %al,%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5f: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*64: movzwl %ax,%esi */
0xf7, 0xde,                               /*67: neg    %esi */
0x29, 0xee,                               /*69: sub    %ebp,%esi */
0x01, 0xde,                               /*6b: add    %ebx,%esi */
0x0f, 0xb7, 0xd0,                         /*6d: movzwl %ax,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*70: shl    $0x4,%rdx */
0x49, 0x03, 0x56, 0x28,                   /*74: add    0x28(%r14),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*78: callq  7d <op_apost+0x7d> */
0x49, 0x89, 0x04, 0x24,                   /*7d: mov    %rax,(%r12) */
0x41, 0x89, 0x55, 0x00,                   /*81: mov    %edx,0x0(%r13) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*85: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*8a: movzwl %ax,%eax */
0xff, 0xc0,                               /*8d: inc    %eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8f: mov    $0x0,%ecx */
0x84, 0xc9,                               /*94: test   %cl,%cl */
0x0f, 0x84, 0x73, 0x01, 0x00, 0x00,       /*96: je     20f <op_apost+0x20f> */
0xf7, 0xdd,                               /*9c: neg    %ebp */
0x48, 0xc1, 0xe0, 0x04,                   /*9e: shl    $0x4,%rax */
0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*a2: data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x49, 0x8b, 0x4f, 0x18,                   /*b0: mov    0x18(%r15),%rcx */
0x8d, 0x14, 0x2b,                         /*b4: lea    (%rbx,%rbp,1),%edx */
0x48, 0x63, 0xd2,                         /*b7: movslq %edx,%rdx */
0x49, 0x8b, 0x76, 0x28,                   /*ba: mov    0x28(%r14),%rsi */
0x48, 0xc1, 0xe2, 0x04,                   /*be: shl    $0x4,%rdx */
0x48, 0x8b, 0x3c, 0x16,                   /*c2: mov    (%rsi,%rdx,1),%rdi */
0x48, 0x8b, 0x54, 0x16, 0x08,             /*c6: mov    0x8(%rsi,%rdx,1),%rdx */
0x48, 0x89, 0x54, 0x01, 0x08,             /*cb: mov    %rdx,0x8(%rcx,%rax,1) */
0x48, 0x89, 0x3c, 0x01,                   /*d0: mov    %rdi,(%rcx,%rax,1) */
0x48, 0x83, 0xc0, 0x10,                   /*d4: add    $0x10,%rax */
0xff, 0xc5,                               /*d8: inc    %ebp */
0x75, 0xd4,                               /*da: jne    b0 <op_apost+0xb0> */
0xe9, 0x2e, 0x01, 0x00, 0x00,             /*dc: jmpq   20f <op_apost+0x20f> */
0x49, 0x8b, 0x7f, 0x58,                   /*e1: mov    0x58(%r15),%rdi */
0x31, 0xf6,                               /*e5: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e7: callq  ec <op_apost+0xec> */
0x49, 0x89, 0x04, 0x24,                   /*ec: mov    %rax,(%r12) */
0x41, 0x89, 0x55, 0x00,                   /*f0: mov    %edx,0x0(%r13) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f4: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f9: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*fe: movzwl %ax,%eax */
0xff, 0xc0,                               /*101: inc    %eax */
0x84, 0xc9,                               /*103: test   %cl,%cl */
0x0f, 0x84, 0x04, 0x01, 0x00, 0x00,       /*105: je     20f <op_apost+0x20f> */
0x0f, 0xb6, 0xc9,                         /*10b: movzbl %cl,%ecx */
0xf7, 0xd9,                               /*10e: neg    %ecx */
0x48, 0xc1, 0xe0, 0x04,                   /*110: shl    $0x4,%rax */
0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*114: data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x49, 0x8b, 0x57, 0x18,                   /*120: mov    0x18(%r15),%rdx */
0xc7, 0x44, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00,/*124: movl   $0x0,0x8(%rdx,%rax,1) */
0x49, 0x8b, 0x57, 0x18,                   /*12c: mov    0x18(%r15),%rdx */
0xc7, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, /*130: movl   $0x0,(%rdx,%rax,1) */
0x48, 0x83, 0xc0, 0x10,                   /*137: add    $0x10,%rax */
0xff, 0xc1,                               /*13b: inc    %ecx */
0x75, 0xe1,                               /*13d: jne    120 <op_apost+0x120> */
0xe9, 0xcb, 0x00, 0x00, 0x00,             /*13f: jmpq   20f <op_apost+0x20f> */
0x31, 0xed,                               /*144: xor    %ebp,%ebp */
0x31, 0xf6,                               /*146: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*148: callq  14d <op_apost+0x14d> */
0x49, 0x89, 0x04, 0x24,                   /*14d: mov    %rax,(%r12) */
0x41, 0x89, 0x55, 0x00,                   /*151: mov    %edx,0x0(%r13) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*155: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*15a: movzwl %ax,%eax */
0x39, 0xc3,                               /*15d: cmp    %eax,%ebx */
0x7e, 0x57,                               /*15f: jle    1b8 <op_apost+0x1b8> */
0x8d, 0x6b, 0xff,                         /*161: lea    -0x1(%rbx),%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*164: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*169: movzwl %ax,%ecx */
0x29, 0xcd,                               /*16c: sub    %ecx,%ebp */
0x29, 0xcb,                               /*16e: sub    %ecx,%ebx */
0x0f, 0xb7, 0xc0,                         /*170: movzwl %ax,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*173: shl    $0x4,%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*177: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*17c: movzwl %cx,%ecx */
0xff, 0xc1,                               /*17f: inc    %ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*181: shl    $0x4,%rcx */
0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*185: data16 nopw %cs:0x0(%rax,%rax,1) */
0x49, 0x8b, 0x57, 0x18,                   /*190: mov    0x18(%r15),%rdx */
0x49, 0x8b, 0x76, 0x28,                   /*194: mov    0x28(%r14),%rsi */
0x48, 0x8b, 0x3c, 0x06,                   /*198: mov    (%rsi,%rax,1),%rdi */
0x48, 0x8b, 0x74, 0x06, 0x08,             /*19c: mov    0x8(%rsi,%rax,1),%rsi */
0x48, 0x89, 0x74, 0x0a, 0x08,             /*1a1: mov    %rsi,0x8(%rdx,%rcx,1) */
0x48, 0x89, 0x3c, 0x0a,                   /*1a6: mov    %rdi,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x10,                   /*1aa: add    $0x10,%rcx */
0x48, 0x83, 0xc0, 0x10,                   /*1ae: add    $0x10,%rax */
0xff, 0xcb,                               /*1b2: dec    %ebx */
0x75, 0xda,                               /*1b4: jne    190 <op_apost+0x190> */
0xff, 0xc5,                               /*1b6: inc    %ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1b8: mov    $0x0,%eax */
0x0f, 0xb6, 0xc0,                         /*1bd: movzbl %al,%eax */
0x39, 0xc5,                               /*1c0: cmp    %eax,%ebp */
0x7d, 0x4b,                               /*1c2: jge    20f <op_apost+0x20f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1c4: mov    $0x0,%eax */
0x0f, 0xb6, 0xc0,                         /*1c9: movzbl %al,%eax */
0x29, 0xe8,                               /*1cc: sub    %ebp,%eax */
0x48, 0x63, 0xd5,                         /*1ce: movslq %ebp,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d1: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1d6: movzwl %cx,%ecx */
0xff, 0xc1,                               /*1d9: inc    %ecx */
0x48, 0x01, 0xd1,                         /*1db: add    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*1de: shl    $0x4,%rcx */
0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1e2: data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x49, 0x8b, 0x57, 0x18,                   /*1f0: mov    0x18(%r15),%rdx */
0xc7, 0x44, 0x0a, 0x08, 0x00, 0x00, 0x00, 0x00,/*1f4: movl   $0x0,0x8(%rdx,%rcx,1) */
0x49, 0x8b, 0x57, 0x18,                   /*1fc: mov    0x18(%r15),%rdx */
0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, /*200: movl   $0x0,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x10,                   /*207: add    $0x10,%rcx */
0xff, 0xc8,                               /*20b: dec    %eax */
0x75, 0xe1,                               /*20d: jne    1f0 <op_apost+0x1f0> */
0x41, 0x8b, 0x47, 0x50,                   /*20f: mov    0x50(%r15),%eax */
0x49, 0x8b, 0x4f, 0x58,                   /*213: mov    0x58(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*217: mov    %eax,0xdc(%rcx) */
0x4c, 0x89, 0xff,                         /*21d: mov    %r15,%rdi */
0x5b,                                     /*220: pop    %rbx */
0x41, 0x5c,                               /*221: pop    %r12 */
0x41, 0x5d,                               /*223: pop    %r13 */
0x41, 0x5e,                               /*225: pop    %r14 */
0x41, 0x5f,                               /*227: pop    %r15 */
0x5d,                                     /*229: pop    %rbp */

};
static uint8_t op_apost__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_apost_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_apost_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_apost_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_string__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*d: movzwl %ax,%r14d */
0x49, 0xc1, 0xe6, 0x04,                   /*11: shl    $0x4,%r14 */
0x48, 0x8b, 0x7b, 0x58,                   /*15: mov    0x58(%rbx),%rdi */
0x4c, 0x8b, 0x7b, 0x18,                   /*19: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x43, 0x20,                   /*1d: mov    0x20(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*26: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*29: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x08,                   /*2d: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*31: mov    0x8(%rax,%rcx,1),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*35: callq  3a <op_string+0x3a> */
0x4b, 0x89, 0x04, 0x37,                   /*3a: mov    %rax,(%r15,%r14,1) */
0x43, 0x89, 0x54, 0x37, 0x08,             /*3e: mov    %edx,0x8(%r15,%r14,1) */
0x8b, 0x43, 0x50,                         /*43: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*46: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*4a: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*50: mov    %rbx,%rdi */
0x5b,                                     /*53: pop    %rbx */
0x41, 0x5e,                               /*54: pop    %r14 */
0x41, 0x5f,                               /*56: pop    %r15 */

};
static uint8_t op_string__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_string_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_string_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_string_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_strcat__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x46, 0x18,                   /*6: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x7e, 0x58,                   /*a: mov    0x58(%r14),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*13: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*16: shl    $0x4,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%edx */
0x0f, 0xb7, 0xda,                         /*1f: movzwl %dx,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*22: shl    $0x4,%rbx */
0x48, 0x8b, 0x34, 0x08,                   /*26: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*2a: mov    0x8(%rax,%rcx,1),%edx */
0x48, 0x8b, 0x0c, 0x18,                   /*2e: mov    (%rax,%rbx,1),%rcx */
0x44, 0x8b, 0x44, 0x18, 0x08,             /*32: mov    0x8(%rax,%rbx,1),%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*37: callq  3c <op_strcat+0x3c> */
0x4c, 0x89, 0xf7,                         /*3c: mov    %r14,%rdi */
0x5b,                                     /*3f: pop    %rbx */
0x41, 0x5e,                               /*40: pop    %r14 */

};
static uint8_t op_strcat__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_strcat_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_strcat_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_strcat_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_hash__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x54,                               /*5: push   %r12 */
0x53,                                     /*7: push   %rbx */
0x48, 0x83, 0xec, 0x20,                   /*8: sub    $0x20,%rsp */
0x48, 0x89, 0xfb,                         /*c: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*14: movzwl %ax,%eax */
0x89, 0x44, 0x24, 0x1c,                   /*17: mov    %eax,0x1c(%rsp) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%eax */
0x0f, 0xb6, 0xc0,                         /*20: movzbl %al,%eax */
0x89, 0x44, 0x24, 0x18,                   /*23: mov    %eax,0x18(%rsp) */
0x8b, 0x44, 0x24, 0x1c,                   /*27: mov    0x1c(%rsp),%eax */
0x8b, 0x4c, 0x24, 0x18,                   /*2b: mov    0x18(%rsp),%ecx */
0x44, 0x8d, 0x24, 0x48,                   /*2f: lea    (%rax,%rcx,2),%r12d */
0x48, 0x8b, 0x7b, 0x58,                   /*33: mov    0x58(%rbx),%rdi */
0x8b, 0x74, 0x24, 0x18,                   /*37: mov    0x18(%rsp),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3b: callq  40 <op_hash+0x40> */
0x49, 0x89, 0xc6,                         /*40: mov    %rax,%r14 */
0x41, 0x89, 0xd7,                         /*43: mov    %edx,%r15d */
0xeb, 0x52,                               /*46: jmp    9a <op_hash+0x9a> */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*48: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x7b, 0x58,                   /*50: mov    0x58(%rbx),%rdi */
0x48, 0x63, 0x44, 0x24, 0x1c,             /*54: movslq 0x1c(%rsp),%rax */
0x48, 0x8b, 0x53, 0x18,                   /*59: mov    0x18(%rbx),%rdx */
0x48, 0xc1, 0xe0, 0x04,                   /*5d: shl    $0x4,%rax */
0x48, 0x63, 0x74, 0x24, 0x1c,             /*61: movslq 0x1c(%rsp),%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*66: shl    $0x4,%rsi */
0x48, 0x8b, 0x6b, 0x18,                   /*6a: mov    0x18(%rbx),%rbp */
0x48, 0x8b, 0x0c, 0x02,                   /*6e: mov    (%rdx,%rax,1),%rcx */
0x44, 0x8b, 0x44, 0x02, 0x08,             /*72: mov    0x8(%rdx,%rax,1),%r8d */
0x48, 0x8b, 0x44, 0x2e, 0x10,             /*77: mov    0x10(%rsi,%rbp,1),%rax */
0x48, 0x8b, 0x54, 0x2e, 0x18,             /*7c: mov    0x18(%rsi,%rbp,1),%rdx */
0x48, 0x89, 0x54, 0x24, 0x08,             /*81: mov    %rdx,0x8(%rsp) */
0x48, 0x89, 0x04, 0x24,                   /*86: mov    %rax,(%rsp) */
0x4c, 0x89, 0xf6,                         /*8a: mov    %r14,%rsi */
0x44, 0x89, 0xfa,                         /*8d: mov    %r15d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*90: callq  95 <op_hash+0x95> */
0x83, 0x44, 0x24, 0x1c, 0x02,             /*95: addl   $0x2,0x1c(%rsp) */
0x8b, 0x44, 0x24, 0x1c,                   /*9a: mov    0x1c(%rsp),%eax */
0x44, 0x39, 0xe0,                         /*9e: cmp    %r12d,%eax */
0x7c, 0xad,                               /*a1: jl     50 <op_hash+0x50> */
0x48, 0x8b, 0x43, 0x18,                   /*a3: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a7: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*ac: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*af: shl    $0x4,%rcx */
0x4c, 0x89, 0x34, 0x08,                   /*b3: mov    %r14,(%rax,%rcx,1) */
0x44, 0x89, 0x7c, 0x08, 0x08,             /*b7: mov    %r15d,0x8(%rax,%rcx,1) */
0x8b, 0x43, 0x50,                         /*bc: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*bf: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*c3: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*c9: mov    %rbx,%rdi */
0x48, 0x83, 0xc4, 0x20,                   /*cc: add    $0x20,%rsp */
0x5b,                                     /*d0: pop    %rbx */
0x41, 0x5c,                               /*d1: pop    %r12 */
0x41, 0x5e,                               /*d3: pop    %r14 */
0x41, 0x5f,                               /*d5: pop    %r15 */
0x5d,                                     /*d7: pop    %rbp */

};
static uint8_t op_hash__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_hash_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_hash_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_hash_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_lambda__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*9: movzwl %ax,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*11: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*19: movzwl %ax,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_lambda+0x21> */
0x48, 0x89, 0xdf,                         /*21: mov    %rbx,%rdi */
0x5b,                                     /*24: pop    %rbx */

};
static uint8_t op_lambda__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_lambda_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_lambda_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_lambda_set_args(op, GETARG_A(c),GETARG_b(c),GETARG_c(c),op_idx);
}


/* args: {} */
static uint8_t op_range__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xff,                         /*5: mov    %rdi,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*d: movzwl %ax,%r14d */
0x49, 0xc1, 0xe6, 0x04,                   /*11: shl    $0x4,%r14 */
0x49, 0x8b, 0x5f, 0x18,                   /*15: mov    0x18(%r15),%rbx */
0x49, 0x8b, 0x7f, 0x58,                   /*19: mov    0x58(%r15),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*22: movzwl %ax,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*25: shl    $0x4,%rcx */
0x0f, 0xb7, 0xc0,                         /*29: movzwl %ax,%eax */
0xff, 0xc0,                               /*2c: inc    %eax */
0x48, 0x98,                               /*2e: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*30: shl    $0x4,%rax */
0x48, 0x8b, 0x34, 0x0b,                   /*34: mov    (%rbx,%rcx,1),%rsi */
0x8b, 0x54, 0x0b, 0x08,                   /*38: mov    0x8(%rbx,%rcx,1),%edx */
0x48, 0x8b, 0x0c, 0x03,                   /*3c: mov    (%rbx,%rax,1),%rcx */
0x44, 0x8b, 0x44, 0x03, 0x08,             /*40: mov    0x8(%rbx,%rax,1),%r8d */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*45: mov    $0x0,%eax */
0x84, 0xc0,                               /*4a: test   %al,%al */
0x0f, 0x95, 0xc0,                         /*4c: setne  %al */
0x44, 0x0f, 0xb6, 0xc8,                   /*4f: movzbl %al,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*53: callq  58 <op_range+0x58> */
0x4a, 0x89, 0x04, 0x33,                   /*58: mov    %rax,(%rbx,%r14,1) */
0x42, 0x89, 0x54, 0x33, 0x08,             /*5c: mov    %edx,0x8(%rbx,%r14,1) */
0x41, 0x8b, 0x47, 0x50,                   /*61: mov    0x50(%r15),%eax */
0x49, 0x8b, 0x4f, 0x58,                   /*65: mov    0x58(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*69: mov    %eax,0xdc(%rcx) */
0x4c, 0x89, 0xff,                         /*6f: mov    %r15,%rdi */
0x5b,                                     /*72: pop    %rbx */
0x41, 0x5e,                               /*73: pop    %r14 */
0x41, 0x5f,                               /*75: pop    %r15 */

};
static uint8_t op_range__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_range_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_range_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_range_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_oclass__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*5: movzwl %ax,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*8: shl    $0x4,%rax */
0x48, 0x8b, 0x4f, 0x18,                   /*c: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x57, 0x58,                   /*10: mov    0x58(%rdi),%rdx */
0x48, 0x8b, 0x52, 0x40,                   /*14: mov    0x40(%rdx),%rdx */
0x0f, 0xb6, 0x32,                         /*18: movzbl (%rdx),%esi */
0x48, 0x89, 0x14, 0x01,                   /*1b: mov    %rdx,(%rcx,%rax,1) */
0x89, 0x74, 0x01, 0x08,                   /*1f: mov    %esi,0x8(%rcx,%rax,1) */

};
static uint8_t op_oclass__rodata[] = {
0x00, 0x00,                               

};

static void op_oclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_oclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_oclass_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_class__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x18,                   /*4: mov    0x18(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x28,                   /*8: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*11: movzwl %cx,%ecx */
0x44, 0x8b, 0x0c, 0x88,                   /*14: mov    (%rax,%rcx,4),%r9d */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*1d: movzwl %cx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*20: shl    $0x4,%rdx */
0x4c, 0x8b, 0x14, 0x17,                   /*24: mov    (%rdi,%rdx,1),%r10 */
0x4c, 0x89, 0xd0,                         /*28: mov    %r10,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*2b: shr    $0x20,%rax */
0x8b, 0x54, 0x17, 0x08,                   /*2f: mov    0x8(%rdi,%rdx,1),%edx */
0x0f, 0xb7, 0xc9,                         /*33: movzwl %cx,%ecx */
0xff, 0xc1,                               /*36: inc    %ecx */
0x48, 0x63, 0xf1,                         /*38: movslq %ecx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*3b: shl    $0x4,%rsi */
0x48, 0x8b, 0x0c, 0x37,                   /*3f: mov    (%rdi,%rsi,1),%rcx */
0x44, 0x8b, 0x44, 0x37, 0x08,             /*43: mov    0x8(%rdi,%rsi,1),%r8d */
0x85, 0xd2,                               /*48: test   %edx,%edx */
0x75, 0x22,                               /*4a: jne    6e <op_class+0x6e> */
0x31, 0xd2,                               /*4c: xor    %edx,%edx */
0x45, 0x85, 0xd2,                         /*4e: test   %r10d,%r10d */
0x75, 0x1b,                               /*51: jne    6e <op_class+0x6e> */
0x48, 0x8b, 0x43, 0x58,                   /*53: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*57: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*5b: mov    0x20(%rax),%rax */
0x4c, 0x8b, 0x50, 0x48,                   /*5f: mov    0x48(%rax),%r10 */
0x41, 0x0f, 0xb6, 0x12,                   /*63: movzbl (%r10),%edx */
0x4c, 0x89, 0xd0,                         /*67: mov    %r10,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*6a: shr    $0x20,%rax */
0x48, 0x8b, 0x7b, 0x58,                   /*6e: mov    0x58(%rbx),%rdi */
0x48, 0xc1, 0xe0, 0x20,                   /*72: shl    $0x20,%rax */
0x44, 0x89, 0xd6,                         /*76: mov    %r10d,%esi */
0x48, 0x09, 0xc6,                         /*79: or     %rax,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c: callq  81 <op_class+0x81> */
0x48, 0x8b, 0x4b, 0x18,                   /*81: mov    0x18(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*85: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*8a: movzwl %dx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*8d: shl    $0x4,%rdx */
0x0f, 0xb6, 0x30,                         /*91: movzbl (%rax),%esi */
0x48, 0x89, 0x04, 0x11,                   /*94: mov    %rax,(%rcx,%rdx,1) */
0x89, 0x74, 0x11, 0x08,                   /*98: mov    %esi,0x8(%rcx,%rdx,1) */
0x8b, 0x43, 0x50,                         /*9c: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*9f: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*a3: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*a9: mov    %rbx,%rdi */
0x5b,                                     /*ac: pop    %rbx */

};
static uint8_t op_class__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_class_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_class_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_class_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_module__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x53, 0x18,                   /*4: mov    0x18(%rbx),%rdx */
0x48, 0x8b, 0x43, 0x28,                   /*8: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*11: movzwl %cx,%ecx */
0x8b, 0x0c, 0x88,                         /*14: mov    (%rax,%rcx,4),%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%eax */
0x0f, 0xb7, 0xf8,                         /*1c: movzwl %ax,%edi */
0x48, 0xc1, 0xe7, 0x04,                   /*1f: shl    $0x4,%rdi */
0x48, 0x8b, 0x34, 0x3a,                   /*23: mov    (%rdx,%rdi,1),%rsi */
0x48, 0x89, 0xf0,                         /*27: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*2a: shr    $0x20,%rax */
0x8b, 0x54, 0x3a, 0x08,                   /*2e: mov    0x8(%rdx,%rdi,1),%edx */
0x85, 0xd2,                               /*32: test   %edx,%edx */
0x75, 0x20,                               /*34: jne    56 <op_module+0x56> */
0x31, 0xd2,                               /*36: xor    %edx,%edx */
0x85, 0xf6,                               /*38: test   %esi,%esi */
0x75, 0x1a,                               /*3a: jne    56 <op_module+0x56> */
0x48, 0x8b, 0x43, 0x58,                   /*3c: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*40: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*44: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*48: mov    0x48(%rax),%rsi */
0x0f, 0xb6, 0x16,                         /*4c: movzbl (%rsi),%edx */
0x48, 0x89, 0xf0,                         /*4f: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*52: shr    $0x20,%rax */
0x48, 0x8b, 0x7b, 0x58,                   /*56: mov    0x58(%rbx),%rdi */
0x48, 0xc1, 0xe0, 0x20,                   /*5a: shl    $0x20,%rax */
0x89, 0xf6,                               /*5e: mov    %esi,%esi */
0x48, 0x09, 0xc6,                         /*60: or     %rax,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*63: callq  68 <op_module+0x68> */
0x48, 0x8b, 0x4b, 0x18,                   /*68: mov    0x18(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6c: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*71: movzwl %dx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*74: shl    $0x4,%rdx */
0x0f, 0xb6, 0x30,                         /*78: movzbl (%rax),%esi */
0x48, 0x89, 0x04, 0x11,                   /*7b: mov    %rax,(%rcx,%rdx,1) */
0x89, 0x74, 0x11, 0x08,                   /*7f: mov    %esi,0x8(%rcx,%rdx,1) */
0x8b, 0x43, 0x50,                         /*83: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*86: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*8a: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*90: mov    %rbx,%rdi */
0x5b,                                     /*93: pop    %rbx */

};
static uint8_t op_module__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_module_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_module_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_module_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_exec__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x49, 0x89, 0xfe,                         /*a: mov    %rdi,%r14 */
0x41, 0xbd, 0x00, 0x00, 0x00, 0x00,       /*d: mov    $0x0,%r13d */
0x41, 0x0f, 0xb7, 0xed,                   /*13: movzwl %r13w,%ebp */
0x48, 0xc1, 0xe5, 0x04,                   /*17: shl    $0x4,%rbp */
0x49, 0x8b, 0x46, 0x18,                   /*1b: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x7e, 0x58,                   /*1f: mov    0x58(%r14),%rdi */
0x4c, 0x8b, 0x3c, 0x28,                   /*23: mov    (%rax,%rbp,1),%r15 */
0x44, 0x8b, 0x64, 0x28, 0x08,             /*27: mov    0x8(%rax,%rbp,1),%r12d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2c: callq  31 <op_exec+0x31> */
0x48, 0x89, 0xc3,                         /*31: mov    %rax,%rbx */
0x49, 0x8b, 0x46, 0x10,                   /*34: mov    0x10(%r14),%rax */
0x48, 0x83, 0xc0, 0x04,                   /*38: add    $0x4,%rax */
0x48, 0x89, 0x43, 0x30,                   /*3c: mov    %rax,0x30(%rbx) */
0x41, 0x0f, 0xb7, 0xc5,                   /*40: movzwl %r13w,%eax */
0x89, 0x43, 0x44,                         /*44: mov    %eax,0x44(%rbx) */
0xc7, 0x03, 0x00, 0x00, 0x00, 0x00,       /*47: movl   $0x0,(%rbx) */
0x49, 0x8b, 0x46, 0x58,                   /*4d: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*51: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*55: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x10,                   /*59: mov    %rax,0x10(%rbx) */
0xc7, 0x43, 0x40, 0x00, 0x00, 0x00, 0x00, /*5d: movl   $0x0,0x40(%rbx) */
0x4c, 0x89, 0x7b, 0x48,                   /*64: mov    %r15,0x48(%rbx) */
0x49, 0x8b, 0x46, 0x58,                   /*68: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*6c: mov    0x18(%rax),%rax */
0x48, 0x01, 0x68, 0x08,                   /*70: add    %rbp,0x8(%rax) */
0x49, 0x8b, 0x46, 0x08,                   /*74: mov    0x8(%r14),%rax */
0x49, 0x8b, 0x7e, 0x58,                   /*78: mov    0x58(%r14),%rdi */
0x48, 0x8b, 0x40, 0x20,                   /*7c: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*80: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*85: movzwl %cx,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*88: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8c: callq  91 <op_exec+0x91> */
0x48, 0x89, 0xc5,                         /*91: mov    %rax,%rbp */
0x48, 0x8b, 0x43, 0x48,                   /*94: mov    0x48(%rbx),%rax */
0x48, 0x89, 0x45, 0x20,                   /*98: mov    %rax,0x20(%rbp) */
0x48, 0x89, 0x6b, 0x08,                   /*9c: mov    %rbp,0x8(%rbx) */
0xf6, 0x45, 0x02, 0x04,                   /*a0: testb  $0x4,0x2(%rbp) */
0x74, 0x44,                               /*a4: je     ea <op_exec+0xea> */
0xc7, 0x43, 0x18, 0x00, 0x00, 0x00, 0x00, /*a6: movl   $0x0,0x18(%rbx) */
0x49, 0x8b, 0x7e, 0x58,                   /*ad: mov    0x58(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*b1: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*b5: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xfe,                         /*b9: mov    %r15,%rsi */
0x44, 0x89, 0xe2,                         /*bc: mov    %r12d,%edx */
0xff, 0x55, 0x18,                         /*bf: callq  *0x18(%rbp) */
0x48, 0x89, 0x03,                         /*c2: mov    %rax,(%rbx) */
0x89, 0x53, 0x08,                         /*c5: mov    %edx,0x8(%rbx) */
0x49, 0x8b, 0x7e, 0x58,                   /*c8: mov    0x58(%r14),%rdi */
0x41, 0x8b, 0x76, 0x50,                   /*cc: mov    0x50(%r14),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*d0: callq  d5 <op_exec+0xd5> */
0x49, 0x8b, 0x46, 0x58,                   /*d5: mov    0x58(%r14),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*d9: cmpq   $0x0,0x28(%rax) */
0x74, 0x68,                               /*de: je     148 <op_exec+0x148> */
0x4c, 0x89, 0xf7,                         /*e0: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e3: callq  e8 <op_exec+0xe8> */
0xeb, 0x7b,                               /*e8: jmp    165 <op_exec+0x165> */
0x48, 0x8b, 0x45, 0x18,                   /*ea: mov    0x18(%rbp),%rax */
0x49, 0x89, 0x46, 0x08,                   /*ee: mov    %rax,0x8(%r14) */
0x48, 0x8b, 0x48, 0x10,                   /*f2: mov    0x10(%rax),%rcx */
0x49, 0x89, 0x4e, 0x20,                   /*f6: mov    %rcx,0x20(%r14) */
0x48, 0x8b, 0x48, 0x18,                   /*fa: mov    0x18(%rax),%rcx */
0x49, 0x89, 0x4e, 0x28,                   /*fe: mov    %rcx,0x28(%r14) */
0x49, 0x8b, 0x7e, 0x58,                   /*102: mov    0x58(%r14),%rdi */
0x0f, 0xb7, 0x70, 0x02,                   /*106: movzwl 0x2(%rax),%esi */
0xba, 0x01, 0x00, 0x00, 0x00,             /*10a: mov    $0x1,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*10f: callq  114 <op_exec+0x114> */
0x49, 0x8b, 0x46, 0x08,                   /*114: mov    0x8(%r14),%rax */
0x0f, 0xb7, 0x40, 0x02,                   /*118: movzwl 0x2(%rax),%eax */
0x89, 0x43, 0x18,                         /*11c: mov    %eax,0x18(%rbx) */
0x49, 0x8b, 0x7e, 0x58,                   /*11f: mov    0x58(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*123: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*127: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x18,                   /*12b: mov    %rax,0x18(%r14) */
0x49, 0x8b, 0x46, 0x08,                   /*12f: mov    0x8(%r14),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*133: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x10,                   /*137: mov    %rax,0x10(%r14) */
0x48, 0x89, 0xee,                         /*13b: mov    %rbp,%rsi */
0x4c, 0x89, 0xf2,                         /*13e: mov    %r14,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*141: callq  146 <op_exec+0x146> */
0xeb, 0x1d,                               /*146: jmp    165 <op_exec+0x165> */
0x48, 0x8b, 0x40, 0x18,                   /*148: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*14c: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*150: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*154: mov    %rcx,0x8(%rax) */
0x49, 0x89, 0x4e, 0x18,                   /*158: mov    %rcx,0x18(%r14) */
0x49, 0x8b, 0x7e, 0x58,                   /*15c: mov    0x58(%r14),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*160: callq  165 <op_exec+0x165> */
0x4c, 0x89, 0xf7,                         /*165: mov    %r14,%rdi */
0x5b,                                     /*168: pop    %rbx */
0x41, 0x5c,                               /*169: pop    %r12 */
0x41, 0x5d,                               /*16b: pop    %r13 */
0x41, 0x5e,                               /*16d: pop    %r14 */
0x41, 0x5f,                               /*16f: pop    %r15 */
0x5d,                                     /*171: pop    %rbp */

};
static uint8_t op_exec__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_exec_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_exec_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_exec_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_method__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*4: mov    $0x0,%r8d */
0x41, 0x0f, 0xb7, 0xc8,                   /*a: movzwl %r8w,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*e: shl    $0x4,%rcx */
0x4c, 0x8b, 0x4b, 0x18,                   /*12: mov    0x18(%rbx),%r9 */
0x48, 0x8b, 0x53, 0x28,                   /*16: mov    0x28(%rbx),%rdx */
0x49, 0x8b, 0x34, 0x09,                   /*1a: mov    (%r9,%rcx,1),%rsi */
0x48, 0x8b, 0x7b, 0x58,                   /*1e: mov    0x58(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*22: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*27: movzwl %cx,%ecx */
0x8b, 0x14, 0x8a,                         /*2a: mov    (%rdx,%rcx,4),%edx */
0x41, 0x0f, 0xb7, 0xc8,                   /*2d: movzwl %r8w,%ecx */
0xff, 0xc1,                               /*31: inc    %ecx */
0x48, 0x63, 0xc1,                         /*33: movslq %ecx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*36: shl    $0x4,%rax */
0x49, 0x8b, 0x0c, 0x01,                   /*3a: mov    (%r9,%rax,1),%rcx */
0x45, 0x8b, 0x44, 0x01, 0x08,             /*3e: mov    0x8(%r9,%rax,1),%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*43: callq  48 <op_method+0x48> */
0x8b, 0x43, 0x50,                         /*48: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*4b: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*4f: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*55: mov    %rbx,%rdi */
0x5b,                                     /*58: pop    %rbx */

};
static uint8_t op_method__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_method_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_method_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_method_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_sclass__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xff,                         /*5: mov    %rdi,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*d: movzwl %ax,%r14d */
0x49, 0xc1, 0xe6, 0x04,                   /*11: shl    $0x4,%r14 */
0x49, 0x8b, 0x5f, 0x18,                   /*15: mov    0x18(%r15),%rbx */
0x49, 0x8b, 0x7f, 0x58,                   /*19: mov    0x58(%r15),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*22: movzwl %ax,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*25: shl    $0x4,%rax */
0x48, 0x8b, 0x34, 0x03,                   /*29: mov    (%rbx,%rax,1),%rsi */
0x8b, 0x54, 0x03, 0x08,                   /*2d: mov    0x8(%rbx,%rax,1),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*31: callq  36 <op_sclass+0x36> */
0x4a, 0x89, 0x04, 0x33,                   /*36: mov    %rax,(%rbx,%r14,1) */
0x42, 0x89, 0x54, 0x33, 0x08,             /*3a: mov    %edx,0x8(%rbx,%r14,1) */
0x41, 0x8b, 0x47, 0x50,                   /*3f: mov    0x50(%r15),%eax */
0x49, 0x8b, 0x4f, 0x58,                   /*43: mov    0x58(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*47: mov    %eax,0xdc(%rcx) */
0x4c, 0x89, 0xff,                         /*4d: mov    %r15,%rdi */
0x5b,                                     /*50: pop    %rbx */
0x41, 0x5e,                               /*51: pop    %r14 */
0x41, 0x5f,                               /*53: pop    %r15 */

};
static uint8_t op_sclass__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_sclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sclass_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_tclass__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0x49, 0x8b, 0x5e, 0x58,                   /*8: mov    0x58(%r14),%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*c: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*10: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x48,                   /*14: mov    0x48(%rax),%rax */
0x48, 0x85, 0xc0,                         /*18: test   %rax,%rax */
0x74, 0x1d,                               /*1b: je     3a <op_tclass+0x3a> */
0x49, 0x8b, 0x4e, 0x18,                   /*1d: mov    0x18(%r14),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*26: movzwl %dx,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*29: shl    $0x4,%rdx */
0x0f, 0xb6, 0x30,                         /*2d: movzbl (%rax),%esi */
0x48, 0x89, 0x04, 0x11,                   /*30: mov    %rax,(%rcx,%rdx,1) */
0x89, 0x74, 0x11, 0x08,                   /*34: mov    %esi,0x8(%rcx,%rdx,1) */
0xeb, 0x44,                               /*38: jmp    7e <op_tclass+0x7e> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3a: mov    0x0(%rip),%rsi        # 41 <op_tclass+0x41> */
0x48, 0x89, 0xdf,                         /*41: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*44: callq  49 <op_tclass+0x49> */
0x49, 0x89, 0xc7,                         /*49: mov    %rax,%r15 */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4c: mov    $0x0,%esi */
0xba, 0x19, 0x00, 0x00, 0x00,             /*51: mov    $0x19,%edx */
0x48, 0x89, 0xdf,                         /*56: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*59: callq  5e <op_tclass+0x5e> */
0x89, 0xd1,                               /*5e: mov    %edx,%ecx */
0x48, 0x89, 0xdf,                         /*60: mov    %rbx,%rdi */
0x4c, 0x89, 0xfe,                         /*63: mov    %r15,%rsi */
0x48, 0x89, 0xc2,                         /*66: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*69: callq  6e <op_tclass+0x6e> */
0x49, 0x8b, 0x4e, 0x58,                   /*6e: mov    0x58(%r14),%rcx */
0x48, 0x89, 0x41, 0x28,                   /*72: mov    %rax,0x28(%rcx) */
0x4c, 0x89, 0xf7,                         /*76: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*79: callq  7e <op_tclass+0x7e> */
0x4c, 0x89, 0xf7,                         /*7e: mov    %r14,%rdi */
0x5b,                                     /*81: pop    %rbx */
0x41, 0x5e,                               /*82: pop    %r14 */
0x41, 0x5f,                               /*84: pop    %r15 */

};
static uint8_t op_tclass__rodata[] = {
0x6e, 0x6f, 0x20, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x20,
0x6f, 0x72, 0x20, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x00, 0x00, 0x00,

};

static void op_tclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_tclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_tclass_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_debug__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*9: movzwl %ax,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*11: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%eax */
0x0f, 0xb6, 0xc8,                         /*19: movzbl %al,%ecx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%edi */
0x31, 0xc0,                               /*21: xor    %eax,%eax */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*23: callq  28 <op_debug+0x28> */
0x48, 0x89, 0xdf,                         /*28: mov    %rbx,%rdi */
0x5b,                                     /*2b: pop    %rbx */

};
static uint8_t op_debug__rodata[] = {
0x4f, 0x50, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x20, 0x25, 0x64, 0x20, 0x25, 0x64, 0x20, 0x25,
0x64, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_debug_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_debug_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_debug_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_stop__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*4: callq  9 <op_stop+0x9> */
0x48, 0x89, 0xdf,                         /*9: mov    %rbx,%rdi */
0x5b,                                     /*c: pop    %rbx */

};
static uint8_t op_stop__rodata[] = {

};

static void op_stop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_stop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_stop_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_err__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x53,                                     /*5: push   %rbx */
0x48, 0x89, 0xfb,                         /*6: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x20,                   /*9: mov    0x20(%rbx),%rax */
0x4c, 0x8b, 0x73, 0x58,                   /*d: mov    0x58(%rbx),%r14 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*16: movzwl %cx,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*19: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x08,                   /*1d: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*21: mov    0x8(%rax,%rcx,1),%edx */
0x4c, 0x89, 0xf7,                         /*25: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*28: callq  2d <op_err+0x2d> */
0x48, 0x89, 0xc5,                         /*2d: mov    %rax,%rbp */
0x41, 0x89, 0xd7,                         /*30: mov    %edx,%r15d */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*33: mov    $0x0,%eax */
0x66, 0x85, 0xc0,                         /*38: test   %ax,%ax */
0x75, 0x09,                               /*3b: jne    46 <op_err+0x46> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3d: mov    0x0(%rip),%rsi        # 44 <op_err+0x44> */
0xeb, 0x07,                               /*44: jmp    4d <op_err+0x4d> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*46: mov    0x0(%rip),%rsi        # 4d <op_err+0x4d> */
0x4c, 0x89, 0xf7,                         /*4d: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*50: callq  55 <op_err+0x55> */
0x4c, 0x89, 0xf7,                         /*55: mov    %r14,%rdi */
0x48, 0x89, 0xc6,                         /*58: mov    %rax,%rsi */
0x48, 0x89, 0xea,                         /*5b: mov    %rbp,%rdx */
0x44, 0x89, 0xf9,                         /*5e: mov    %r15d,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*61: callq  66 <op_err+0x66> */
0x48, 0x8b, 0x4b, 0x58,                   /*66: mov    0x58(%rbx),%rcx */
0x48, 0x89, 0x41, 0x28,                   /*6a: mov    %rax,0x28(%rcx) */
0x48, 0x89, 0xdf,                         /*6e: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*71: callq  76 <op_err+0x76> */
0x48, 0x89, 0xdf,                         /*76: mov    %rbx,%rdi */
0x5b,                                     /*79: pop    %rbx */
0x41, 0x5e,                               /*7a: pop    %r14 */
0x41, 0x5f,                               /*7c: pop    %r15 */
0x5d,                                     /*7e: pop    %rbp */

};
static uint8_t op_err__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_err_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_err_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_err_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}

typedef void (*jit_args_func_t)(uint8_t *op, mrb_code c, uint32_t op_idx);
typedef void (*jit_link_func_t)(uint8_t *op, uint8_t *data);
static jit_args_func_t arg_funcs[78];
extern jit_link_func_t link_funcs[];
uint8_t* ops_text[78];
uint8_t* ops_rodata[78];
static char *op_names[78];

static size_t op_sizes_text[] = {
  sizeof(op_nop__text), /* 0 */
  sizeof(op_move__text), /* 46 */
  sizeof(op_loadl__text), /* 50 */
  sizeof(op_loadi__text), /* 39 */
  sizeof(op_loadsym__text), /* 46 */
  sizeof(op_loadnil__text), /* 35 */
  sizeof(op_loadself__text), /* 32 */
  sizeof(op_loadt__text), /* 35 */
  sizeof(op_loadf__text), /* 35 */
  sizeof(op_getglobal__text), /* 65 */
  sizeof(op_setglobal__text), /* 56 */
  sizeof(op_getspecial__text), /* 58 */
  sizeof(op_setspecial__text), /* 49 */
  sizeof(op_getiv__text), /* 65 */
  sizeof(op_setiv__text), /* 56 */
  sizeof(op_getcv__text), /* 106 */
  sizeof(op_setcv__text), /* 56 */
  sizeof(op_getconst__text), /* 108 */
  sizeof(op_setconst__text), /* 56 */
  sizeof(op_getmcnst__text), /* 127 */
  sizeof(op_setmcnst__text), /* 84 */
  sizeof(op_getupvar__text), /* 135 */
  sizeof(op_setupvar__text), /* 133 */
  sizeof(op_jmp__text), /* 0 */
  sizeof(op_jmpif__text), /* 11 */
  sizeof(op_jmpnot__text), /* 11 */
  sizeof(op_onerr__text), /* 155 */
  sizeof(op_rescue__text), /* 59 */
  sizeof(op_poperr__text), /* 51 */
  sizeof(op_raise__text), /* 41 */
  sizeof(op_epush__text), /* 172 */
  sizeof(op_epop__text), /* 115 */
  sizeof(op_send__text), /* 115 */
  sizeof(op_sendb__text), /* 60 */
  sizeof(op_fsend__text), /* 0 */
  sizeof(op_call__text), /* 455 */
  sizeof(op_super__text), /* 1007 */
  sizeof(op_argary__text), /* 768 */
  sizeof(op_enter__text), /* 2343 */
  sizeof(op_enter_method_m__text), /* 516 */
  sizeof(op_karg__text), /* 0 */
  sizeof(op_kdict__text), /* 0 */
  sizeof(op_return__text), /* 41 */
  sizeof(op_break__text), /* 30 */
  sizeof(op_tailcall__text), /* 1086 */
  sizeof(op_blkpush__text), /* 234 */
  sizeof(op_add__text), /* 436 */
  sizeof(op_addi__text), /* 192 */
  sizeof(op_sub__text), /* 342 */
  sizeof(op_subi__text), /* 175 */
  sizeof(op_mul__text), /* 363 */
  sizeof(op_div__text), /* 296 */
  sizeof(op_eq__text), /* 388 */
  sizeof(op_lt__text), /* 334 */
  sizeof(op_le__text), /* 334 */
  sizeof(op_gt__text), /* 315 */
  sizeof(op_ge__text), /* 315 */
  sizeof(op_array__text), /* 87 */
  sizeof(op_arycat__text), /* 106 */
  sizeof(op_arypush__text), /* 66 */
  sizeof(op_aref__text), /* 161 */
  sizeof(op_aset__text), /* 74 */
  sizeof(op_apost__text), /* 554 */
  sizeof(op_string__text), /* 88 */
  sizeof(op_strcat__text), /* 66 */
  sizeof(op_hash__text), /* 216 */
  sizeof(op_lambda__text), /* 37 */
  sizeof(op_range__text), /* 119 */
  sizeof(op_oclass__text), /* 35 */
  sizeof(op_class__text), /* 173 */
  sizeof(op_module__text), /* 148 */
  sizeof(op_exec__text), /* 370 */
  sizeof(op_method__text), /* 89 */
  sizeof(op_sclass__text), /* 85 */
  sizeof(op_tclass__text), /* 134 */
  sizeof(op_debug__text), /* 44 */
  sizeof(op_stop__text), /* 13 */
  sizeof(op_err__text), /* 127 */

};
static size_t op_sizes_rodata[] = {
  sizeof(op_nop__rodata), /* 0 */
  sizeof(op_move__rodata), /* 4 */
  sizeof(op_loadl__rodata), /* 4 */
  sizeof(op_loadi__rodata), /* 4 */
  sizeof(op_loadsym__rodata), /* 4 */
  sizeof(op_loadnil__rodata), /* 2 */
  sizeof(op_loadself__rodata), /* 2 */
  sizeof(op_loadt__rodata), /* 2 */
  sizeof(op_loadf__rodata), /* 2 */
  sizeof(op_getglobal__rodata), /* 4 */
  sizeof(op_setglobal__rodata), /* 4 */
  sizeof(op_getspecial__rodata), /* 4 */
  sizeof(op_setspecial__rodata), /* 4 */
  sizeof(op_getiv__rodata), /* 4 */
  sizeof(op_setiv__rodata), /* 4 */
  sizeof(op_getcv__rodata), /* 4 */
  sizeof(op_setcv__rodata), /* 4 */
  sizeof(op_getconst__rodata), /* 4 */
  sizeof(op_setconst__rodata), /* 4 */
  sizeof(op_getmcnst__rodata), /* 4 */
  sizeof(op_setmcnst__rodata), /* 4 */
  sizeof(op_getupvar__rodata), /* 6 */
  sizeof(op_setupvar__rodata), /* 6 */
  sizeof(op_jmp__rodata), /* 0 */
  sizeof(op_jmpif__rodata), /* 0 */
  sizeof(op_jmpnot__rodata), /* 0 */
  sizeof(op_onerr__rodata), /* 2 */
  sizeof(op_rescue__rodata), /* 2 */
  sizeof(op_poperr__rodata), /* 2 */
  sizeof(op_raise__rodata), /* 2 */
  sizeof(op_epush__rodata), /* 2 */
  sizeof(op_epop__rodata), /* 2 */
  sizeof(op_send__rodata), /* 5 */
  sizeof(op_sendb__rodata), /* 5 */
  sizeof(op_fsend__rodata), /* 0 */
  sizeof(op_call__rodata), /* 2 */
  sizeof(op_super__rodata), /* 62 */
  sizeof(op_argary__rodata), /* 47 */
  sizeof(op_enter__rodata), /* 51 */
  sizeof(op_enter_method_m__rodata), /* 17 */
  sizeof(op_karg__rodata), /* 0 */
  sizeof(op_kdict__rodata), /* 0 */
  sizeof(op_return__rodata), /* 2 */
  sizeof(op_break__rodata), /* 4 */
  sizeof(op_tailcall__rodata), /* 85 */
  sizeof(op_blkpush__rodata), /* 4 */
  sizeof(op_add__rodata), /* 2 */
  sizeof(op_addi__rodata), /* 6 */
  sizeof(op_sub__rodata), /* 2 */
  sizeof(op_subi__rodata), /* 6 */
  sizeof(op_mul__rodata), /* 2 */
  sizeof(op_div__rodata), /* 2 */
  sizeof(op_eq__rodata), /* 5 */
  sizeof(op_lt__rodata), /* 5 */
  sizeof(op_le__rodata), /* 5 */
  sizeof(op_gt__rodata), /* 5 */
  sizeof(op_ge__rodata), /* 5 */
  sizeof(op_array__rodata), /* 6 */
  sizeof(op_arycat__rodata), /* 4 */
  sizeof(op_arypush__rodata), /* 4 */
  sizeof(op_aref__rodata), /* 6 */
  sizeof(op_aset__rodata), /* 6 */
  sizeof(op_apost__rodata), /* 5 */
  sizeof(op_string__rodata), /* 4 */
  sizeof(op_strcat__rodata), /* 4 */
  sizeof(op_hash__rodata), /* 6 */
  sizeof(op_lambda__rodata), /* 6 */
  sizeof(op_range__rodata), /* 6 */
  sizeof(op_oclass__rodata), /* 2 */
  sizeof(op_class__rodata), /* 4 */
  sizeof(op_module__rodata), /* 4 */
  sizeof(op_exec__rodata), /* 4 */
  sizeof(op_method__rodata), /* 4 */
  sizeof(op_sclass__rodata), /* 4 */
  sizeof(op_tclass__rodata), /* 28 */
  sizeof(op_debug__rodata), /* 25 */
  sizeof(op_stop__rodata), /* 0 */
  sizeof(op_err__rodata), /* 4 */

};
static int8_t op_algn_text[] = {
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,

};
static int8_t op_algn_rodata[] = {
  -1,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  -1,
  -1,
  -1,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  -1,
  2,
  16,
  16,
  16,
  4,
  -1,
  -1,
  2,
  2,
  8,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  16,
  16,
  -1,
  2,

};

extern void init_linker();
void init_ops() {
  static int init = 0;
  if(init == 0) {
    init = 1;
    init_linker();
    ops_text[0] = op_nop__text;
    ops_rodata[0] = op_nop__rodata;
    op_names[0] = "op_nop";
    arg_funcs[0] = op_nop_set_args_from_code;
    ops_text[1] = op_move__text;
    ops_rodata[1] = op_move__rodata;
    op_names[1] = "op_move";
    arg_funcs[1] = op_move_set_args_from_code;
    ops_text[2] = op_loadl__text;
    ops_rodata[2] = op_loadl__rodata;
    op_names[2] = "op_loadl";
    arg_funcs[2] = op_loadl_set_args_from_code;
    ops_text[3] = op_loadi__text;
    ops_rodata[3] = op_loadi__rodata;
    op_names[3] = "op_loadi";
    arg_funcs[3] = op_loadi_set_args_from_code;
    ops_text[4] = op_loadsym__text;
    ops_rodata[4] = op_loadsym__rodata;
    op_names[4] = "op_loadsym";
    arg_funcs[4] = op_loadsym_set_args_from_code;
    ops_text[5] = op_loadnil__text;
    ops_rodata[5] = op_loadnil__rodata;
    op_names[5] = "op_loadnil";
    arg_funcs[5] = op_loadnil_set_args_from_code;
    ops_text[6] = op_loadself__text;
    ops_rodata[6] = op_loadself__rodata;
    op_names[6] = "op_loadself";
    arg_funcs[6] = op_loadself_set_args_from_code;
    ops_text[7] = op_loadt__text;
    ops_rodata[7] = op_loadt__rodata;
    op_names[7] = "op_loadt";
    arg_funcs[7] = op_loadt_set_args_from_code;
    ops_text[8] = op_loadf__text;
    ops_rodata[8] = op_loadf__rodata;
    op_names[8] = "op_loadf";
    arg_funcs[8] = op_loadf_set_args_from_code;
    ops_text[9] = op_getglobal__text;
    ops_rodata[9] = op_getglobal__rodata;
    op_names[9] = "op_getglobal";
    arg_funcs[9] = op_getglobal_set_args_from_code;
    ops_text[10] = op_setglobal__text;
    ops_rodata[10] = op_setglobal__rodata;
    op_names[10] = "op_setglobal";
    arg_funcs[10] = op_setglobal_set_args_from_code;
    ops_text[11] = op_getspecial__text;
    ops_rodata[11] = op_getspecial__rodata;
    op_names[11] = "op_getspecial";
    arg_funcs[11] = op_getspecial_set_args_from_code;
    ops_text[12] = op_setspecial__text;
    ops_rodata[12] = op_setspecial__rodata;
    op_names[12] = "op_setspecial";
    arg_funcs[12] = op_setspecial_set_args_from_code;
    ops_text[13] = op_getiv__text;
    ops_rodata[13] = op_getiv__rodata;
    op_names[13] = "op_getiv";
    arg_funcs[13] = op_getiv_set_args_from_code;
    ops_text[14] = op_setiv__text;
    ops_rodata[14] = op_setiv__rodata;
    op_names[14] = "op_setiv";
    arg_funcs[14] = op_setiv_set_args_from_code;
    ops_text[15] = op_getcv__text;
    ops_rodata[15] = op_getcv__rodata;
    op_names[15] = "op_getcv";
    arg_funcs[15] = op_getcv_set_args_from_code;
    ops_text[16] = op_setcv__text;
    ops_rodata[16] = op_setcv__rodata;
    op_names[16] = "op_setcv";
    arg_funcs[16] = op_setcv_set_args_from_code;
    ops_text[17] = op_getconst__text;
    ops_rodata[17] = op_getconst__rodata;
    op_names[17] = "op_getconst";
    arg_funcs[17] = op_getconst_set_args_from_code;
    ops_text[18] = op_setconst__text;
    ops_rodata[18] = op_setconst__rodata;
    op_names[18] = "op_setconst";
    arg_funcs[18] = op_setconst_set_args_from_code;
    ops_text[19] = op_getmcnst__text;
    ops_rodata[19] = op_getmcnst__rodata;
    op_names[19] = "op_getmcnst";
    arg_funcs[19] = op_getmcnst_set_args_from_code;
    ops_text[20] = op_setmcnst__text;
    ops_rodata[20] = op_setmcnst__rodata;
    op_names[20] = "op_setmcnst";
    arg_funcs[20] = op_setmcnst_set_args_from_code;
    ops_text[21] = op_getupvar__text;
    ops_rodata[21] = op_getupvar__rodata;
    op_names[21] = "op_getupvar";
    arg_funcs[21] = op_getupvar_set_args_from_code;
    ops_text[22] = op_setupvar__text;
    ops_rodata[22] = op_setupvar__rodata;
    op_names[22] = "op_setupvar";
    arg_funcs[22] = op_setupvar_set_args_from_code;
    ops_text[23] = op_jmp__text;
    ops_rodata[23] = op_jmp__rodata;
    op_names[23] = "op_jmp";
    arg_funcs[23] = op_jmp_set_args_from_code;
    ops_text[24] = op_jmpif__text;
    ops_rodata[24] = op_jmpif__rodata;
    op_names[24] = "op_jmpif";
    arg_funcs[24] = op_jmpif_set_args_from_code;
    ops_text[25] = op_jmpnot__text;
    ops_rodata[25] = op_jmpnot__rodata;
    op_names[25] = "op_jmpnot";
    arg_funcs[25] = op_jmpnot_set_args_from_code;
    ops_text[26] = op_onerr__text;
    ops_rodata[26] = op_onerr__rodata;
    op_names[26] = "op_onerr";
    arg_funcs[26] = op_onerr_set_args_from_code;
    ops_text[27] = op_rescue__text;
    ops_rodata[27] = op_rescue__rodata;
    op_names[27] = "op_rescue";
    arg_funcs[27] = op_rescue_set_args_from_code;
    ops_text[28] = op_poperr__text;
    ops_rodata[28] = op_poperr__rodata;
    op_names[28] = "op_poperr";
    arg_funcs[28] = op_poperr_set_args_from_code;
    ops_text[29] = op_raise__text;
    ops_rodata[29] = op_raise__rodata;
    op_names[29] = "op_raise";
    arg_funcs[29] = op_raise_set_args_from_code;
    ops_text[30] = op_epush__text;
    ops_rodata[30] = op_epush__rodata;
    op_names[30] = "op_epush";
    arg_funcs[30] = op_epush_set_args_from_code;
    ops_text[31] = op_epop__text;
    ops_rodata[31] = op_epop__rodata;
    op_names[31] = "op_epop";
    arg_funcs[31] = op_epop_set_args_from_code;
    ops_text[32] = op_send__text;
    ops_rodata[32] = op_send__rodata;
    op_names[32] = "op_send";
    arg_funcs[32] = op_send_set_args_from_code;
    ops_text[33] = op_sendb__text;
    ops_rodata[33] = op_sendb__rodata;
    op_names[33] = "op_sendb";
    arg_funcs[33] = op_sendb_set_args_from_code;
    ops_text[34] = op_fsend__text;
    ops_rodata[34] = op_fsend__rodata;
    op_names[34] = "op_fsend";
    arg_funcs[34] = op_fsend_set_args_from_code;
    ops_text[35] = op_call__text;
    ops_rodata[35] = op_call__rodata;
    op_names[35] = "op_call";
    arg_funcs[35] = op_call_set_args_from_code;
    ops_text[36] = op_super__text;
    ops_rodata[36] = op_super__rodata;
    op_names[36] = "op_super";
    arg_funcs[36] = op_super_set_args_from_code;
    ops_text[37] = op_argary__text;
    ops_rodata[37] = op_argary__rodata;
    op_names[37] = "op_argary";
    arg_funcs[37] = op_argary_set_args_from_code;
    ops_text[38] = op_enter__text;
    ops_rodata[38] = op_enter__rodata;
    op_names[38] = "op_enter";
    arg_funcs[38] = op_enter_set_args_from_code;
    ops_text[39] = op_enter_method_m__text;
    ops_rodata[39] = op_enter_method_m__rodata;
    op_names[39] = "op_enter_method_m";
    arg_funcs[39] = op_enter_method_m_set_args_from_code;
    ops_text[40] = op_karg__text;
    ops_rodata[40] = op_karg__rodata;
    op_names[40] = "op_karg";
    arg_funcs[40] = op_karg_set_args_from_code;
    ops_text[41] = op_kdict__text;
    ops_rodata[41] = op_kdict__rodata;
    op_names[41] = "op_kdict";
    arg_funcs[41] = op_kdict_set_args_from_code;
    ops_text[42] = op_return__text;
    ops_rodata[42] = op_return__rodata;
    op_names[42] = "op_return";
    arg_funcs[42] = op_return_set_args_from_code;
    ops_text[43] = op_break__text;
    ops_rodata[43] = op_break__rodata;
    op_names[43] = "op_break";
    arg_funcs[43] = op_break_set_args_from_code;
    ops_text[44] = op_tailcall__text;
    ops_rodata[44] = op_tailcall__rodata;
    op_names[44] = "op_tailcall";
    arg_funcs[44] = op_tailcall_set_args_from_code;
    ops_text[45] = op_blkpush__text;
    ops_rodata[45] = op_blkpush__rodata;
    op_names[45] = "op_blkpush";
    arg_funcs[45] = op_blkpush_set_args_from_code;
    ops_text[46] = op_add__text;
    ops_rodata[46] = op_add__rodata;
    op_names[46] = "op_add";
    arg_funcs[46] = op_add_set_args_from_code;
    ops_text[47] = op_addi__text;
    ops_rodata[47] = op_addi__rodata;
    op_names[47] = "op_addi";
    arg_funcs[47] = op_addi_set_args_from_code;
    ops_text[48] = op_sub__text;
    ops_rodata[48] = op_sub__rodata;
    op_names[48] = "op_sub";
    arg_funcs[48] = op_sub_set_args_from_code;
    ops_text[49] = op_subi__text;
    ops_rodata[49] = op_subi__rodata;
    op_names[49] = "op_subi";
    arg_funcs[49] = op_subi_set_args_from_code;
    ops_text[50] = op_mul__text;
    ops_rodata[50] = op_mul__rodata;
    op_names[50] = "op_mul";
    arg_funcs[50] = op_mul_set_args_from_code;
    ops_text[51] = op_div__text;
    ops_rodata[51] = op_div__rodata;
    op_names[51] = "op_div";
    arg_funcs[51] = op_div_set_args_from_code;
    ops_text[52] = op_eq__text;
    ops_rodata[52] = op_eq__rodata;
    op_names[52] = "op_eq";
    arg_funcs[52] = op_eq_set_args_from_code;
    ops_text[53] = op_lt__text;
    ops_rodata[53] = op_lt__rodata;
    op_names[53] = "op_lt";
    arg_funcs[53] = op_lt_set_args_from_code;
    ops_text[54] = op_le__text;
    ops_rodata[54] = op_le__rodata;
    op_names[54] = "op_le";
    arg_funcs[54] = op_le_set_args_from_code;
    ops_text[55] = op_gt__text;
    ops_rodata[55] = op_gt__rodata;
    op_names[55] = "op_gt";
    arg_funcs[55] = op_gt_set_args_from_code;
    ops_text[56] = op_ge__text;
    ops_rodata[56] = op_ge__rodata;
    op_names[56] = "op_ge";
    arg_funcs[56] = op_ge_set_args_from_code;
    ops_text[57] = op_array__text;
    ops_rodata[57] = op_array__rodata;
    op_names[57] = "op_array";
    arg_funcs[57] = op_array_set_args_from_code;
    ops_text[58] = op_arycat__text;
    ops_rodata[58] = op_arycat__rodata;
    op_names[58] = "op_arycat";
    arg_funcs[58] = op_arycat_set_args_from_code;
    ops_text[59] = op_arypush__text;
    ops_rodata[59] = op_arypush__rodata;
    op_names[59] = "op_arypush";
    arg_funcs[59] = op_arypush_set_args_from_code;
    ops_text[60] = op_aref__text;
    ops_rodata[60] = op_aref__rodata;
    op_names[60] = "op_aref";
    arg_funcs[60] = op_aref_set_args_from_code;
    ops_text[61] = op_aset__text;
    ops_rodata[61] = op_aset__rodata;
    op_names[61] = "op_aset";
    arg_funcs[61] = op_aset_set_args_from_code;
    ops_text[62] = op_apost__text;
    ops_rodata[62] = op_apost__rodata;
    op_names[62] = "op_apost";
    arg_funcs[62] = op_apost_set_args_from_code;
    ops_text[63] = op_string__text;
    ops_rodata[63] = op_string__rodata;
    op_names[63] = "op_string";
    arg_funcs[63] = op_string_set_args_from_code;
    ops_text[64] = op_strcat__text;
    ops_rodata[64] = op_strcat__rodata;
    op_names[64] = "op_strcat";
    arg_funcs[64] = op_strcat_set_args_from_code;
    ops_text[65] = op_hash__text;
    ops_rodata[65] = op_hash__rodata;
    op_names[65] = "op_hash";
    arg_funcs[65] = op_hash_set_args_from_code;
    ops_text[66] = op_lambda__text;
    ops_rodata[66] = op_lambda__rodata;
    op_names[66] = "op_lambda";
    arg_funcs[66] = op_lambda_set_args_from_code;
    ops_text[67] = op_range__text;
    ops_rodata[67] = op_range__rodata;
    op_names[67] = "op_range";
    arg_funcs[67] = op_range_set_args_from_code;
    ops_text[68] = op_oclass__text;
    ops_rodata[68] = op_oclass__rodata;
    op_names[68] = "op_oclass";
    arg_funcs[68] = op_oclass_set_args_from_code;
    ops_text[69] = op_class__text;
    ops_rodata[69] = op_class__rodata;
    op_names[69] = "op_class";
    arg_funcs[69] = op_class_set_args_from_code;
    ops_text[70] = op_module__text;
    ops_rodata[70] = op_module__rodata;
    op_names[70] = "op_module";
    arg_funcs[70] = op_module_set_args_from_code;
    ops_text[71] = op_exec__text;
    ops_rodata[71] = op_exec__rodata;
    op_names[71] = "op_exec";
    arg_funcs[71] = op_exec_set_args_from_code;
    ops_text[72] = op_method__text;
    ops_rodata[72] = op_method__rodata;
    op_names[72] = "op_method";
    arg_funcs[72] = op_method_set_args_from_code;
    ops_text[73] = op_sclass__text;
    ops_rodata[73] = op_sclass__rodata;
    op_names[73] = "op_sclass";
    arg_funcs[73] = op_sclass_set_args_from_code;
    ops_text[74] = op_tclass__text;
    ops_rodata[74] = op_tclass__rodata;
    op_names[74] = "op_tclass";
    arg_funcs[74] = op_tclass_set_args_from_code;
    ops_text[75] = op_debug__text;
    ops_rodata[75] = op_debug__rodata;
    op_names[75] = "op_debug";
    arg_funcs[75] = op_debug_set_args_from_code;
    ops_text[76] = op_stop__text;
    ops_rodata[76] = op_stop__rodata;
    op_names[76] = "op_stop";
    arg_funcs[76] = op_stop_set_args_from_code;
    ops_text[77] = op_err__text;
    ops_rodata[77] = op_err__rodata;
    op_names[77] = "op_err";
    arg_funcs[77] = op_err_set_args_from_code;
  }
}

uint8_t *jit_return(uint8_t *b) {
  *b++ = 0xc3;
  return b;
}
uint8_t *jit_jump(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 235;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *b++ = 233;
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_if(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 116;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31729;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_not(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 117;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31473;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
