
/* args: {} */
static uint8_t op_nop__text[] = {

};
static uint8_t op_nop__rodata[] = {

};

static void op_nop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_nop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_nop_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_move__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*9: shl    $0x4,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*12: shl    $0x4,%rdx */
0x48, 0x8b, 0x34, 0x10,                   /*16: mov    (%rax,%rdx,1),%rsi */
0x48, 0x8b, 0x54, 0x10, 0x08,             /*1a: mov    0x8(%rax,%rdx,1),%rdx */
0x48, 0x89, 0x54, 0x08, 0x08,             /*1f: mov    %rdx,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x34, 0x08,                   /*24: mov    %rsi,(%rax,%rcx,1) */

};
static uint8_t op_move__rodata[] = {

};

static void op_move_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_move_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_move_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadl__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*5: shl    $0x4,%rax */
0x48, 0x8b, 0x4f, 0x18,                   /*9: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x57, 0x20,                   /*d: mov    0x20(%rdi),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*16: shl    $0x4,%rsi */
0x48, 0x8b, 0x3c, 0x32,                   /*1a: mov    (%rdx,%rsi,1),%rdi */
0x48, 0x8b, 0x54, 0x32, 0x08,             /*1e: mov    0x8(%rdx,%rsi,1),%rdx */
0x48, 0x89, 0x54, 0x01, 0x08,             /*23: mov    %rdx,0x8(%rcx,%rax,1) */
0x48, 0x89, 0x3c, 0x01,                   /*28: mov    %rdi,(%rcx,%rax,1) */

};
static uint8_t op_loadl__rodata[] = {

};

static void op_loadl_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadl_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadl_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadi__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*9: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x03, 0x00, 0x00, 0x00,/*d: movl   $0x3,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*15: mov    0x18(%rdi),%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*19: mov    $0x0,%edx */
0x89, 0x14, 0x08,                         /*1e: mov    %edx,(%rax,%rcx,1) */

};
static uint8_t op_loadi__rodata[] = {

};

static void op_loadi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadi_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadsym__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*9: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x04, 0x00, 0x00, 0x00,/*d: movl   $0x4,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*15: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x57, 0x28,                   /*19: mov    0x28(%rdi),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%esi */
0x8b, 0x14, 0xb2,                         /*22: mov    (%rdx,%rsi,4),%edx */
0x89, 0x14, 0x08,                         /*25: mov    %edx,(%rax,%rcx,1) */

};
static uint8_t op_loadsym__rodata[] = {

};

static void op_loadsym_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadsym_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadsym_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadnil__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*9: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,/*d: movl   $0x0,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*15: mov    0x18(%rdi),%rax */
0xc7, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, /*19: movl   $0x0,(%rax,%rcx,1) */

};
static uint8_t op_loadnil__rodata[] = {

};

static void op_loadnil_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadnil_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadnil_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadself__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*9: shl    $0x4,%rcx */
0x48, 0x8b, 0x10,                         /*d: mov    (%rax),%rdx */
0x48, 0x8b, 0x70, 0x08,                   /*10: mov    0x8(%rax),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*14: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*19: mov    %rdx,(%rax,%rcx,1) */

};
static uint8_t op_loadself__rodata[] = {

};

static void op_loadself_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadself_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadself_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadt__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*9: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x02, 0x00, 0x00, 0x00,/*d: movl   $0x2,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*15: mov    0x18(%rdi),%rax */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*19: movl   $0x1,(%rax,%rcx,1) */

};
static uint8_t op_loadt__rodata[] = {

};

static void op_loadt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadt_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadf__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*9: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,/*d: movl   $0x0,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*15: mov    0x18(%rdi),%rax */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*19: movl   $0x1,(%rax,%rcx,1) */

};
static uint8_t op_loadf__rodata[] = {

};

static void op_loadf_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadf_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadf_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_getglobal__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*3: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*8: shl    $0x4,%rbx */
0x48, 0x8b, 0x47, 0x58,                   /*c: mov    0x58(%rdi),%rax */
0x4c, 0x8b, 0x77, 0x18,                   /*10: mov    0x18(%rdi),%r14 */
0x48, 0x8b, 0x4f, 0x28,                   /*14: mov    0x28(%rdi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%edx */
0x8b, 0x34, 0x91,                         /*1d: mov    (%rcx,%rdx,4),%esi */
0x48, 0x89, 0xc7,                         /*20: mov    %rax,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*23: callq  28 <op_getglobal+0x28> */
0x49, 0x89, 0x04, 0x1e,                   /*28: mov    %rax,(%r14,%rbx,1) */
0x41, 0x89, 0x54, 0x1e, 0x08,             /*2c: mov    %edx,0x8(%r14,%rbx,1) */
0x5b,                                     /*31: pop    %rbx */
0x41, 0x5e,                               /*32: pop    %r14 */

};
static uint8_t op_getglobal__rodata[] = {

};

static void op_getglobal_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getglobal_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getglobal_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setglobal__text[] = {
0x48, 0x8b, 0x47, 0x58,                   /*0: mov    0x58(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x18,                   /*4: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x57, 0x28,                   /*8: mov    0x28(%rdi),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%esi */
0x8b, 0x34, 0xb2,                         /*11: mov    (%rdx,%rsi,4),%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%edi */
0x48, 0xc1, 0xe7, 0x04,                   /*19: shl    $0x4,%rdi */
0x48, 0x8b, 0x14, 0x39,                   /*1d: mov    (%rcx,%rdi,1),%rdx */
0x8b, 0x4c, 0x39, 0x08,                   /*21: mov    0x8(%rcx,%rdi,1),%ecx */
0x48, 0x89, 0xc7,                         /*25: mov    %rax,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*28: callq  2d <op_setglobal+0x2d> */

};
static uint8_t op_setglobal__rodata[] = {

};

static void op_setglobal_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setglobal_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setglobal_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getspecial__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*3: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*8: shl    $0x4,%rbx */
0x4c, 0x8b, 0x77, 0x18,                   /*c: mov    0x18(%rdi),%r14 */
0x48, 0x8b, 0x7f, 0x58,                   /*10: mov    0x58(%rdi),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*19: callq  1e <op_getspecial+0x1e> */
0x49, 0x89, 0x04, 0x1e,                   /*1e: mov    %rax,(%r14,%rbx,1) */
0x41, 0x89, 0x54, 0x1e, 0x08,             /*22: mov    %edx,0x8(%r14,%rbx,1) */
0x5b,                                     /*27: pop    %rbx */
0x41, 0x5e,                               /*28: pop    %r14 */

};
static uint8_t op_getspecial__rodata[] = {

};

static void op_getspecial_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getspecial_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getspecial_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setspecial__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x7f, 0x58,                   /*4: mov    0x58(%rdi),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*d: shl    $0x4,%rcx */
0x48, 0x8b, 0x14, 0x08,                   /*11: mov    (%rax,%rcx,1),%rdx */
0x8b, 0x4c, 0x08, 0x08,                   /*15: mov    0x8(%rax,%rcx,1),%ecx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*19: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e: callq  23 <op_setspecial+0x23> */

};
static uint8_t op_setspecial__rodata[] = {

};

static void op_setspecial_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setspecial_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setspecial_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getiv__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*3: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*8: shl    $0x4,%rbx */
0x48, 0x8b, 0x47, 0x58,                   /*c: mov    0x58(%rdi),%rax */
0x4c, 0x8b, 0x77, 0x18,                   /*10: mov    0x18(%rdi),%r14 */
0x48, 0x8b, 0x4f, 0x28,                   /*14: mov    0x28(%rdi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%edx */
0x8b, 0x34, 0x91,                         /*1d: mov    (%rcx,%rdx,4),%esi */
0x48, 0x89, 0xc7,                         /*20: mov    %rax,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*23: callq  28 <op_getiv+0x28> */
0x49, 0x89, 0x04, 0x1e,                   /*28: mov    %rax,(%r14,%rbx,1) */
0x41, 0x89, 0x54, 0x1e, 0x08,             /*2c: mov    %edx,0x8(%r14,%rbx,1) */
0x5b,                                     /*31: pop    %rbx */
0x41, 0x5e,                               /*32: pop    %r14 */

};
static uint8_t op_getiv__rodata[] = {

};

static void op_getiv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getiv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getiv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setiv__text[] = {
0x48, 0x8b, 0x47, 0x58,                   /*0: mov    0x58(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x18,                   /*4: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x57, 0x28,                   /*8: mov    0x28(%rdi),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%esi */
0x8b, 0x34, 0xb2,                         /*11: mov    (%rdx,%rsi,4),%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%edi */
0x48, 0xc1, 0xe7, 0x04,                   /*19: shl    $0x4,%rdi */
0x48, 0x8b, 0x14, 0x39,                   /*1d: mov    (%rcx,%rdi,1),%rdx */
0x8b, 0x4c, 0x39, 0x08,                   /*21: mov    0x8(%rcx,%rdi,1),%ecx */
0x48, 0x89, 0xc7,                         /*25: mov    %rax,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*28: callq  2d <op_setiv+0x2d> */

};
static uint8_t op_setiv__rodata[] = {

};

static void op_setiv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setiv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setiv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getcv__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*8: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x58,                   /*c: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*10: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*14: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*18: mov    %rax,0x38(%rcx) */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*1c: mov    $0x0,%r14d */
0x49, 0xc1, 0xe6, 0x04,                   /*22: shl    $0x4,%r14 */
0x48, 0x8b, 0x7b, 0x58,                   /*26: mov    0x58(%rbx),%rdi */
0x4c, 0x8b, 0x7b, 0x18,                   /*2a: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x43, 0x28,                   /*2e: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*32: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*37: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3a: callq  3f <op_getcv+0x3f> */
0x4b, 0x89, 0x04, 0x37,                   /*3f: mov    %rax,(%r15,%r14,1) */
0x43, 0x89, 0x54, 0x37, 0x08,             /*43: mov    %edx,0x8(%r15,%r14,1) */
0x48, 0x8b, 0x43, 0x58,                   /*48: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*4c: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*50: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*54: movq   $0x0,0x38(%rax) */
0x5b,                                     /*5c: pop    %rbx */
0x41, 0x5e,                               /*5d: pop    %r14 */
0x41, 0x5f,                               /*5f: pop    %r15 */

};
static uint8_t op_getcv__rodata[] = {

};

static void op_getcv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getcv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getcv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setcv__text[] = {
0x48, 0x8b, 0x47, 0x58,                   /*0: mov    0x58(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x18,                   /*4: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x57, 0x28,                   /*8: mov    0x28(%rdi),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%esi */
0x8b, 0x34, 0xb2,                         /*11: mov    (%rdx,%rsi,4),%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%edi */
0x48, 0xc1, 0xe7, 0x04,                   /*19: shl    $0x4,%rdi */
0x48, 0x8b, 0x14, 0x39,                   /*1d: mov    (%rcx,%rdi,1),%rdx */
0x8b, 0x4c, 0x39, 0x08,                   /*21: mov    0x8(%rcx,%rdi,1),%ecx */
0x48, 0x89, 0xc7,                         /*25: mov    %rax,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*28: callq  2d <op_setcv+0x2d> */

};
static uint8_t op_setcv__rodata[] = {

};

static void op_setcv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setcv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setcv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getconst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*4: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x58,                   /*8: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*c: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*10: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*14: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x43, 0x28,                   /*18: mov    0x28(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x58,                   /*1c: mov    0x58(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*25: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*28: callq  2d <op_getconst+0x2d> */
0x48, 0x8b, 0x4b, 0x58,                   /*2d: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*31: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*35: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*39: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x4b, 0x58,                   /*41: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*45: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*49: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x4b, 0x18,                   /*4d: mov    %rcx,0x18(%rbx) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*56: shl    $0x4,%rsi */
0x48, 0x89, 0x04, 0x31,                   /*5a: mov    %rax,(%rcx,%rsi,1) */
0x89, 0x54, 0x31, 0x08,                   /*5e: mov    %edx,0x8(%rcx,%rsi,1) */
0x5b,                                     /*62: pop    %rbx */

};
static uint8_t op_getconst__rodata[] = {

};

static void op_getconst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getconst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getconst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setconst__text[] = {
0x48, 0x8b, 0x47, 0x58,                   /*0: mov    0x58(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x18,                   /*4: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x57, 0x28,                   /*8: mov    0x28(%rdi),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%esi */
0x8b, 0x34, 0xb2,                         /*11: mov    (%rdx,%rsi,4),%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%edi */
0x48, 0xc1, 0xe7, 0x04,                   /*19: shl    $0x4,%rdi */
0x48, 0x8b, 0x14, 0x39,                   /*1d: mov    (%rcx,%rdi,1),%rdx */
0x8b, 0x4c, 0x39, 0x08,                   /*21: mov    0x8(%rcx,%rdi,1),%ecx */
0x48, 0x89, 0xc7,                         /*25: mov    %rax,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*28: callq  2d <op_setconst+0x2d> */

};
static uint8_t op_setconst__rodata[] = {

};

static void op_setconst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setconst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setconst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getmcnst__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*6: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x58,                   /*a: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*e: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*12: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*16: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x7b, 0x58,                   /*1a: mov    0x58(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1e: mov    $0x0,%eax */
0x4c, 0x63, 0xf0,                         /*23: movslq %eax,%r14 */
0x49, 0xc1, 0xe6, 0x04,                   /*26: shl    $0x4,%r14 */
0x48, 0x8b, 0x43, 0x18,                   /*2a: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*2e: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*32: mov    $0x0,%edx */
0x8b, 0x0c, 0x91,                         /*37: mov    (%rcx,%rdx,4),%ecx */
0x4a, 0x8b, 0x34, 0x30,                   /*3a: mov    (%rax,%r14,1),%rsi */
0x42, 0x8b, 0x54, 0x30, 0x08,             /*3e: mov    0x8(%rax,%r14,1),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*43: callq  48 <op_getmcnst+0x48> */
0x48, 0x8b, 0x4b, 0x58,                   /*48: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*4c: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*50: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*54: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x4b, 0x58,                   /*5c: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*60: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*64: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x4b, 0x18,                   /*68: mov    %rcx,0x18(%rbx) */
0x4a, 0x89, 0x04, 0x31,                   /*6c: mov    %rax,(%rcx,%r14,1) */
0x42, 0x89, 0x54, 0x31, 0x08,             /*70: mov    %edx,0x8(%rcx,%r14,1) */
0x5b,                                     /*75: pop    %rbx */
0x41, 0x5e,                               /*76: pop    %r14 */

};
static uint8_t op_getmcnst__rodata[] = {

};

static void op_getmcnst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getmcnst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getmcnst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setmcnst__text[] = {
0x4c, 0x8b, 0x57, 0x58,                   /*0: mov    0x58(%rdi),%r10 */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%esi */
0x8d, 0x4e, 0x01,                         /*9: lea    0x1(%rsi),%ecx */
0x48, 0x63, 0xd1,                         /*c: movslq %ecx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*f: shl    $0x4,%rdx */
0x48, 0x8b, 0x47, 0x18,                   /*13: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x28,                   /*17: mov    0x28(%rdi),%rcx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%edi */
0x8b, 0x0c, 0xb9,                         /*20: mov    (%rcx,%rdi,4),%ecx */
0x48, 0x63, 0xfe,                         /*23: movslq %esi,%rdi */
0x48, 0xc1, 0xe7, 0x04,                   /*26: shl    $0x4,%rdi */
0x48, 0x8b, 0x34, 0x10,                   /*2a: mov    (%rax,%rdx,1),%rsi */
0x8b, 0x54, 0x10, 0x08,                   /*2e: mov    0x8(%rax,%rdx,1),%edx */
0x4c, 0x8b, 0x04, 0x38,                   /*32: mov    (%rax,%rdi,1),%r8 */
0x44, 0x8b, 0x4c, 0x38, 0x08,             /*36: mov    0x8(%rax,%rdi,1),%r9d */
0x4c, 0x89, 0xd7,                         /*3b: mov    %r10,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3e: callq  43 <op_setmcnst+0x43> */

};
static uint8_t op_setmcnst__rodata[] = {

};

static void op_setmcnst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setmcnst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setmcnst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getupvar__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*5: shl    $0x4,%rax */
0x48, 0x03, 0x47, 0x18,                   /*9: add    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x58,                   /*d: mov    0x58(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*11: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*15: mov    0x20(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*19: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*1d: mov    0x28(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*21: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*24: sete   %dl */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*27: mov    $0x0,%esi */
0x85, 0xf6,                               /*2c: test   %esi,%esi */
0x74, 0x13,                               /*2e: je     43 <op_getupvar+0x43> */
0xf6, 0xc2, 0x01,                         /*30: test   $0x1,%dl */
0x75, 0x12,                               /*33: jne    47 <op_getupvar+0x47> */
0x48, 0x8b, 0x49, 0x08,                   /*35: mov    0x8(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*39: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*3c: sete   %dl */
0xff, 0xce,                               /*3f: dec    %esi */
0x75, 0xed,                               /*41: jne    30 <op_getupvar+0x30> */
0x84, 0xd2,                               /*43: test   %dl,%dl */
0x74, 0x10,                               /*45: je     57 <op_getupvar+0x57> */
0x48, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, /*47: movq   $0x0,(%rax) */
0xc7, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00, /*4e: movl   $0x0,0x8(%rax) */
0xeb, 0x20,                               /*55: jmp    77 <op_getupvar+0x77> */
0x48, 0x8b, 0x49, 0x18,                   /*57: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5b: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*60: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*63: shl    $0x4,%rdx */
0x48, 0x8b, 0x34, 0x11,                   /*67: mov    (%rcx,%rdx,1),%rsi */
0x48, 0x8b, 0x4c, 0x11, 0x08,             /*6b: mov    0x8(%rcx,%rdx,1),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*70: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x30,                         /*74: mov    %rsi,(%rax) */

};
static uint8_t op_getupvar__rodata[] = {

};

static void op_getupvar_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getupvar_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getupvar_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_setupvar__text[] = {
0x48, 0x8b, 0x47, 0x58,                   /*0: mov    0x58(%rdi),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*4: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*8: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*c: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x70, 0x28,                   /*10: mov    0x28(%rax),%rsi */
0x48, 0x85, 0xf6,                         /*14: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*17: sete   %al */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%ecx */
0x85, 0xc9,                               /*1f: test   %ecx,%ecx */
0x74, 0x1f,                               /*21: je     42 <op_setupvar+0x42> */
0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*23: data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0xa8, 0x01,                               /*30: test   $0x1,%al */
0x75, 0x49,                               /*32: jne    7d <op_setupvar+0x7d> */
0x48, 0x8b, 0x76, 0x08,                   /*34: mov    0x8(%rsi),%rsi */
0x48, 0x85, 0xf6,                         /*38: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*3b: sete   %al */
0xff, 0xc9,                               /*3e: dec    %ecx */
0x75, 0xee,                               /*40: jne    30 <op_setupvar+0x30> */
0x84, 0xc0,                               /*42: test   %al,%al */
0x75, 0x37,                               /*44: jne    7d <op_setupvar+0x7d> */
0x4c, 0x8b, 0x47, 0x18,                   /*46: mov    0x18(%rdi),%r8 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4a: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*4f: shl    $0x4,%rcx */
0x48, 0x8b, 0x56, 0x18,                   /*53: mov    0x18(%rsi),%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*57: mov    $0x0,%eax */
0x48, 0x98,                               /*5c: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*5e: shl    $0x4,%rax */
0x4d, 0x8b, 0x0c, 0x08,                   /*62: mov    (%r8,%rcx,1),%r9 */
0x49, 0x8b, 0x4c, 0x08, 0x08,             /*66: mov    0x8(%r8,%rcx,1),%rcx */
0x48, 0x89, 0x4c, 0x02, 0x08,             /*6b: mov    %rcx,0x8(%rdx,%rax,1) */
0x4c, 0x89, 0x0c, 0x02,                   /*70: mov    %r9,(%rdx,%rax,1) */
0x48, 0x8b, 0x7f, 0x58,                   /*74: mov    0x58(%rdi),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*78: callq  7d <op_setupvar+0x7d> */

};
static uint8_t op_setupvar__rodata[] = {

};

static void op_setupvar_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setupvar_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setupvar_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_jmp__text[] = {

};
static uint8_t op_jmp__rodata[] = {

};

static void op_jmp_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_jmp_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmp_set_args(op, 0,GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_jmpif__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*9: shl    $0x4,%rcx */
0x83, 0x7c, 0x08, 0x08, 0x00,             /*d: cmpl   $0x0,0x8(%rax,%rcx,1) */

};
static uint8_t op_jmpif__rodata[] = {

};

static void op_jmpif_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_jmpif_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmpif_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_jmpnot__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*9: shl    $0x4,%rcx */
0x83, 0x7c, 0x08, 0x08, 0x00,             /*d: cmpl   $0x0,0x8(%rax,%rcx,1) */

};
static uint8_t op_jmpnot__rodata[] = {

};

static void op_jmpnot_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_jmpnot_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmpnot_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_onerr__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x58,                   /*4: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x48, 0x18,                   /*8: mov    0x18(%rax),%rcx */
0x8b, 0x51, 0x40,                         /*c: mov    0x40(%rcx),%edx */
0x48, 0x8b, 0x71, 0x20,                   /*f: mov    0x20(%rcx),%rsi */
0x3b, 0x56, 0x1c,                         /*13: cmp    0x1c(%rsi),%edx */
0x7f, 0x39,                               /*16: jg     51 <op_onerr+0x51> */
0x8d, 0x04, 0x12,                         /*18: lea    (%rdx,%rdx,1),%eax */
0x85, 0xd2,                               /*1b: test   %edx,%edx */
0xba, 0x10, 0x00, 0x00, 0x00,             /*1d: mov    $0x10,%edx */
0x0f, 0x45, 0xd0,                         /*22: cmovne %eax,%edx */
0x89, 0x51, 0x40,                         /*25: mov    %edx,0x40(%rcx) */
0x48, 0x8b, 0x7b, 0x58,                   /*28: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*2c: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x38,                   /*30: mov    0x38(%rax),%rsi */
0x48, 0x63, 0x50, 0x40,                   /*34: movslq 0x40(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*38: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3c: callq  41 <op_onerr+0x41> */
0x48, 0x8b, 0x4b, 0x58,                   /*41: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*45: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*49: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x43, 0x58,                   /*4d: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x08,                   /*51: mov    0x8(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*55: mov    0x8(%rcx),%rcx */
0x48, 0x8d, 0x91, 0x00, 0x00, 0x78, 0x03, /*59: lea    0x3780000(%rcx),%rdx */
0x48, 0x89, 0x53, 0x10,                   /*60: mov    %rdx,0x10(%rbx) */
0xba, 0x00, 0x00, 0x00, 0x00,             /*64: mov    $0x0,%edx */
0x48, 0x8d, 0x8c, 0x91, 0x00, 0x00, 0x78, 0x03,/*69: lea    0x3780000(%rcx,%rdx,4),%rcx */
0x48, 0x8b, 0x40, 0x18,                   /*71: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*75: mov    0x20(%rax),%rax */
0x48, 0x63, 0x50, 0x1c,                   /*79: movslq 0x1c(%rax),%rdx */
0x8d, 0x72, 0x01,                         /*7d: lea    0x1(%rdx),%esi */
0x89, 0x70, 0x1c,                         /*80: mov    %esi,0x1c(%rax) */
0x48, 0x8b, 0x43, 0x58,                   /*83: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*87: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x38,                   /*8b: mov    0x38(%rax),%rax */
0x48, 0x89, 0x0c, 0xd0,                   /*8f: mov    %rcx,(%rax,%rdx,8) */
0x5b,                                     /*93: pop    %rbx */

};
static uint8_t op_onerr__rodata[] = {

};

static void op_onerr_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_onerr_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_onerr_set_args(op, 0,GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_rescue__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x58,                   /*4: mov    0x58(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*8: mov    0x28(%rcx),%rcx */
0x0f, 0xb6, 0x09,                         /*c: movzbl (%rcx),%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*14: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*17: shl    $0x4,%rdx */
0x89, 0x4c, 0x10, 0x08,                   /*1b: mov    %ecx,0x8(%rax,%rdx,1) */
0x48, 0x8b, 0x47, 0x18,                   /*1f: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x58,                   /*23: mov    0x58(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*27: mov    0x28(%rcx),%rcx */
0x48, 0x89, 0x0c, 0x10,                   /*2b: mov    %rcx,(%rax,%rdx,1) */
0x48, 0x8b, 0x47, 0x58,                   /*2f: mov    0x58(%rdi),%rax */
0x48, 0xc7, 0x40, 0x28, 0x00, 0x00, 0x00, 0x00,/*33: movq   $0x0,0x28(%rax) */

};
static uint8_t op_rescue__rodata[] = {

};

static void op_rescue_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_rescue_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_rescue_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_poperr__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x85, 0xc0,                               /*5: test   %eax,%eax */
0x74, 0x1a,                               /*7: je     23 <op_poperr+0x23> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*9: mov    $0x0,%eax */
0x66, 0x90,                               /*e: xchg   %ax,%ax */
0x48, 0x8b, 0x4f, 0x58,                   /*10: mov    0x58(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*14: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*18: mov    0x20(%rcx),%rcx */
0xff, 0x49, 0x1c,                         /*1c: decl   0x1c(%rcx) */
0xff, 0xc8,                               /*1f: dec    %eax */
0x75, 0xed,                               /*21: jne    10 <op_poperr+0x10> */

};
static uint8_t op_poperr__rodata[] = {

};

static void op_poperr_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_poperr_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_poperr_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_raise__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*5: shl    $0x4,%rax */
0x48, 0x8b, 0x4f, 0x18,                   /*9: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x57, 0x58,                   /*d: mov    0x58(%rdi),%rdx */
0x48, 0x8b, 0x04, 0x01,                   /*11: mov    (%rcx,%rax,1),%rax */
0x48, 0x89, 0x42, 0x28,                   /*15: mov    %rax,0x28(%rdx) */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*19: callq  1e <op_raise+0x1e> */

};
static uint8_t op_raise__rodata[] = {

};

static void op_raise_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_raise_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_raise_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_epush__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x08,                   /*6: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x58,                   /*a: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x40, 0x20,                   /*e: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*17: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1b: callq  20 <op_epush+0x20> */
0x49, 0x89, 0xc6,                         /*20: mov    %rax,%r14 */
0x48, 0x8b, 0x43, 0x58,                   /*23: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*27: mov    0x18(%rax),%rax */
0x8b, 0x70, 0x50,                         /*2b: mov    0x50(%rax),%esi */
0x48, 0x8b, 0x48, 0x20,                   /*2e: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*32: mov    0x20(%rcx),%edx */
0x39, 0xd6,                               /*35: cmp    %edx,%esi */
0x7f, 0x44,                               /*37: jg     7d <op_epush+0x7d> */
0x8d, 0x0c, 0x36,                         /*39: lea    (%rsi,%rsi,1),%ecx */
0x85, 0xf6,                               /*3c: test   %esi,%esi */
0xba, 0x10, 0x00, 0x00, 0x00,             /*3e: mov    $0x10,%edx */
0x0f, 0x45, 0xd1,                         /*43: cmovne %ecx,%edx */
0x89, 0x50, 0x50,                         /*46: mov    %edx,0x50(%rax) */
0x48, 0x8b, 0x7b, 0x58,                   /*49: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*4d: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*51: mov    0x48(%rax),%rsi */
0x48, 0x63, 0x50, 0x50,                   /*55: movslq 0x50(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*59: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*5d: callq  62 <op_epush+0x62> */
0x48, 0x8b, 0x4b, 0x58,                   /*62: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*66: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x48,                   /*6a: mov    %rax,0x48(%rcx) */
0x48, 0x8b, 0x43, 0x58,                   /*6e: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*72: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*76: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*7a: mov    0x20(%rcx),%edx */
0x8d, 0x42, 0x01,                         /*7d: lea    0x1(%rdx),%eax */
0x89, 0x41, 0x20,                         /*80: mov    %eax,0x20(%rcx) */
0x48, 0x63, 0xc2,                         /*83: movslq %edx,%rax */
0x48, 0x8b, 0x4b, 0x58,                   /*86: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*8a: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x48,                   /*8e: mov    0x48(%rcx),%rcx */
0x4c, 0x89, 0x34, 0xc1,                   /*92: mov    %r14,(%rcx,%rax,8) */
0x8b, 0x43, 0x50,                         /*96: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*99: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*9d: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*a3: pop    %rbx */
0x41, 0x5e,                               /*a4: pop    %r14 */

};
static uint8_t op_epush__rodata[] = {

};

static void op_epush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_epush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_epush_set_args(op, 0,GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_epop__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x54,                               /*5: push   %r12 */
0x53,                                     /*7: push   %rbx */
0x49, 0x89, 0xff,                         /*8: mov    %rdi,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*b: mov    $0x0,%eax */
0x85, 0xc0,                               /*10: test   %eax,%eax */
0x7e, 0x44,                               /*12: jle    58 <op_epop+0x58> */
0x49, 0x8b, 0x47, 0x58,                   /*14: mov    0x58(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*18: mov    0x18(%rax),%rax */
0x4c, 0x8b, 0x70, 0x20,                   /*1c: mov    0x20(%rax),%r14 */
0x41, 0x8b, 0x6e, 0x20,                   /*20: mov    0x20(%r14),%ebp */
0x31, 0xdb,                               /*24: xor    %ebx,%ebx */
0x41, 0xbc, 0x00, 0x00, 0x00, 0x00,       /*26: mov    $0x0,%r12d */
0x0f, 0x1f, 0x40, 0x00,                   /*2c: nopl   0x0(%rax) */
0x41, 0x3b, 0x6e, 0xc8,                   /*30: cmp    -0x38(%r14),%ebp */
0x7e, 0x22,                               /*34: jle    58 <op_epop+0x58> */
0x49, 0x8b, 0x7f, 0x58,                   /*36: mov    0x58(%r15),%rdi */
0xff, 0xcd,                               /*3a: dec    %ebp */
0x89, 0xee,                               /*3c: mov    %ebp,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3e: callq  43 <op_epop+0x43> */
0x41, 0x8b, 0x47, 0x50,                   /*43: mov    0x50(%r15),%eax */
0x49, 0x8b, 0x4f, 0x58,                   /*47: mov    0x58(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*4b: mov    %eax,0xdc(%rcx) */
0xff, 0xc3,                               /*51: inc    %ebx */
0x44, 0x39, 0xe3,                         /*53: cmp    %r12d,%ebx */
0x7c, 0xd8,                               /*56: jl     30 <op_epop+0x30> */
0x5b,                                     /*58: pop    %rbx */
0x41, 0x5c,                               /*59: pop    %r12 */
0x41, 0x5e,                               /*5b: pop    %r14 */
0x41, 0x5f,                               /*5d: pop    %r15 */
0x5d,                                     /*5f: pop    %rbp */

};
static uint8_t op_epop__rodata[] = {

};

static void op_epop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_epop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_epop_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_send__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x41, 0x56,                               /*4: push   %r14 */
0x53,                                     /*6: push   %rbx */
0x48, 0x83, 0xe4, 0xf0,                   /*7: and    $0xfffffffffffffff0,%rsp */
0x48, 0x89, 0xfb,                         /*b: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x08,                   /*e: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x58,                   /*12: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*16: mov    0x18(%rcx),%rcx */
0x4c, 0x8b, 0x71, 0x20,                   /*1a: mov    0x20(%rcx),%r14 */
0xb9, 0x00, 0x00, 0x78, 0x03,             /*1e: mov    $0x3780000,%ecx */
0x48, 0x03, 0x48, 0x08,                   /*23: add    0x8(%rax),%rcx */
0x48, 0x89, 0x4b, 0x10,                   /*27: mov    %rcx,0x10(%rbx) */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*2b: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*30: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*35: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*3a: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*40: callq  45 <op_send+0x45> */
0x48, 0x8b, 0x43, 0x58,                   /*45: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*49: mov    0x18(%rax),%rax */
0x4c, 0x39, 0x70, 0x20,                   /*4d: cmp    %r14,0x20(%rax) */
0x73, 0x09,                               /*51: jae    5c <op_send+0x5c> */
0x48, 0x8d, 0x65, 0xf0,                   /*53: lea    -0x10(%rbp),%rsp */
0x5b,                                     /*57: pop    %rbx */
0x41, 0x5e,                               /*58: pop    %r14 */
0x5d,                                     /*5a: pop    %rbp */
0xc3,                                     /*5b: retq */
0x48, 0x8d, 0x65, 0xf0,                   /*5c: lea    -0x10(%rbp),%rsp */
0x5b,                                     /*60: pop    %rbx */
0x41, 0x5e,                               /*61: pop    %r14 */
0x5d,                                     /*63: pop    %rbp */

};
static uint8_t op_send__rodata[] = {

};

static void op_send_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_send_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_send_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_sendb__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x48, 0x83, 0xe4, 0xf0,                   /*4: and    $0xfffffffffffffff0,%rsp */
0xbe, 0x21, 0x00, 0x00, 0x00,             /*8: mov    $0x21,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*17: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1d: callq  22 <op_sendb+0x22> */
0x48, 0x89, 0xec,                         /*22: mov    %rbp,%rsp */
0x5d,                                     /*25: pop    %rbp */

};
static uint8_t op_sendb__rodata[] = {

};

static void op_sendb_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sendb_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sendb_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_fsend__text[] = {

};
static uint8_t op_fsend__rodata[] = {

};

static void op_fsend_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_fsend_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_fsend_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_call__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x56,                               /*1: push   %r14 */
0x53,                                     /*3: push   %rbx */
0x49, 0x89, 0xfe,                         /*4: mov    %rdi,%r14 */
0x49, 0x8b, 0x46, 0x58,                   /*7: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*b: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*f: mov    0x8(%rax),%rcx */
0x48, 0x8b, 0x40, 0x20,                   /*13: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x19,                         /*17: mov    (%rcx),%rbx */
0x8b, 0x51, 0x08,                         /*1a: mov    0x8(%rcx),%edx */
0x48, 0x8b, 0x4b, 0x20,                   /*1d: mov    0x20(%rbx),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*21: mov    %rcx,0x48(%rax) */
0x48, 0x89, 0x58, 0x08,                   /*25: mov    %rbx,0x8(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*29: mov    0x28(%rbx),%rcx */
0x48, 0x85, 0xc9,                         /*2d: test   %rcx,%rcx */
0x74, 0x24,                               /*30: je     56 <op_call+0x56> */
0x8b, 0x71, 0x20,                         /*32: mov    0x20(%rcx),%esi */
0x85, 0xf6,                               /*35: test   %esi,%esi */
0x74, 0x06,                               /*37: je     3f <op_call+0x3f> */
0x89, 0x30,                               /*39: mov    %esi,(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*3b: mov    0x28(%rbx),%rcx */
0x48, 0x83, 0x79, 0x18, 0x00,             /*3f: cmpq   $0x0,0x18(%rcx) */
0x75, 0x10,                               /*44: jne    56 <op_call+0x56> */
0x49, 0x8b, 0x76, 0x58,                   /*46: mov    0x58(%r14),%rsi */
0x48, 0x8b, 0x76, 0x18,                   /*4a: mov    0x18(%rsi),%rsi */
0x48, 0x8b, 0x76, 0x08,                   /*4e: mov    0x8(%rsi),%rsi */
0x48, 0x89, 0x71, 0x18,                   /*52: mov    %rsi,0x18(%rcx) */
0xf6, 0x43, 0x02, 0x04,                   /*56: testb  $0x4,0x2(%rbx) */
0x74, 0x34,                               /*5a: je     90 <op_call+0x90> */
0x49, 0x8b, 0x7e, 0x58,                   /*5c: mov    0x58(%r14),%rdi */
0x48, 0x89, 0xde,                         /*60: mov    %rbx,%rsi */
0xff, 0x53, 0x18,                         /*63: callq  *0x18(%rbx) */
0x48, 0x89, 0xc3,                         /*66: mov    %rax,%rbx */
0x89, 0xd5,                               /*69: mov    %edx,%ebp */
0x49, 0x8b, 0x7e, 0x58,                   /*6b: mov    0x58(%r14),%rdi */
0x41, 0x8b, 0x76, 0x50,                   /*6f: mov    0x50(%r14),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*73: callq  78 <op_call+0x78> */
0x49, 0x8b, 0x46, 0x58,                   /*78: mov    0x58(%r14),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*7c: cmpq   $0x0,0x28(%rax) */
0x74, 0x57,                               /*81: je     da <op_call+0xda> */
0x4c, 0x89, 0xf7,                         /*83: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*86: callq  8b <op_call+0x8b> */
0xe9, 0x2d, 0x01, 0x00, 0x00,             /*8b: jmpq   1bd <op_call+0x1bd> */
0x49, 0x89, 0x1e,                         /*90: mov    %rbx,(%r14) */
0x48, 0x8b, 0x4b, 0x18,                   /*93: mov    0x18(%rbx),%rcx */
0x49, 0x89, 0x4e, 0x08,                   /*97: mov    %rcx,0x8(%r14) */
0x48, 0x85, 0xc9,                         /*9b: test   %rcx,%rcx */
0x0f, 0x84, 0x98, 0x00, 0x00, 0x00,       /*9e: je     13c <op_call+0x13c> */
0x48, 0x8b, 0x51, 0x10,                   /*a4: mov    0x10(%rcx),%rdx */
0x49, 0x89, 0x56, 0x20,                   /*a8: mov    %rdx,0x20(%r14) */
0x48, 0x8b, 0x51, 0x18,                   /*ac: mov    0x18(%rcx),%rdx */
0x49, 0x89, 0x56, 0x28,                   /*b0: mov    %rdx,0x28(%r14) */
0x0f, 0xb7, 0x49, 0x02,                   /*b4: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*b8: mov    %ecx,0x18(%rax) */
0x8b, 0x50, 0x40,                         /*bb: mov    0x40(%rax),%edx */
0x49, 0x8b, 0x46, 0x08,                   /*be: mov    0x8(%r14),%rax */
0x49, 0x8b, 0x7e, 0x58,                   /*c2: mov    0x58(%r14),%rdi */
0x0f, 0xb7, 0x70, 0x02,                   /*c6: movzwl 0x2(%rax),%esi */
0x85, 0xd2,                               /*ca: test   %edx,%edx */
0x0f, 0x88, 0x95, 0x00, 0x00, 0x00,       /*cc: js     167 <op_call+0x167> */
0x83, 0xc2, 0x02,                         /*d2: add    $0x2,%edx */
0xe9, 0x9d, 0x00, 0x00, 0x00,             /*d5: jmpq   177 <op_call+0x177> */
0x48, 0x8b, 0x40, 0x18,                   /*da: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*de: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x51, 0x10,                   /*e2: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x50, 0x08,                   /*e6: mov    %rdx,0x8(%rax) */
0x49, 0x89, 0x56, 0x18,                   /*ea: mov    %rdx,0x18(%r14) */
0x48, 0x63, 0x41, 0x44,                   /*ee: movslq 0x44(%rcx),%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*f2: shl    $0x4,%rax */
0x48, 0x89, 0x1c, 0x02,                   /*f6: mov    %rbx,(%rdx,%rax,1) */
0x89, 0x6c, 0x02, 0x08,                   /*fa: mov    %ebp,0x8(%rdx,%rax,1) */
0x48, 0x8b, 0x41, 0x30,                   /*fe: mov    0x30(%rcx),%rax */
0x49, 0x89, 0x46, 0x10,                   /*102: mov    %rax,0x10(%r14) */
0x49, 0x8b, 0x7e, 0x58,                   /*106: mov    0x58(%r14),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*10a: callq  10f <op_call+0x10f> */
0x49, 0x8b, 0x46, 0x58,                   /*10f: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*113: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*117: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*11b: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*11f: mov    0x18(%rax),%rax */
0x49, 0x89, 0x46, 0x08,                   /*123: mov    %rax,0x8(%r14) */
0x48, 0x8b, 0x48, 0x10,                   /*127: mov    0x10(%rax),%rcx */
0x49, 0x89, 0x4e, 0x20,                   /*12b: mov    %rcx,0x20(%r14) */
0x48, 0x8b, 0x40, 0x18,                   /*12f: mov    0x18(%rax),%rax */
0x49, 0x89, 0x46, 0x28,                   /*133: mov    %rax,0x28(%r14) */
0xe9, 0x81, 0x00, 0x00, 0x00,             /*137: jmpq   1bd <op_call+0x1bd> */
0x49, 0x8b, 0x46, 0x58,                   /*13c: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*140: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*144: mov    0x8(%rax),%rax */
0x48, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, /*148: movq   $0x0,(%rax) */
0xc7, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00, /*14f: movl   $0x0,0x8(%rax) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*156: mov    $0x0,%esi */
0x31, 0xd2,                               /*15b: xor    %edx,%edx */
0x4c, 0x89, 0xf7,                         /*15d: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*160: callq  165 <op_call+0x165> */
0xeb, 0x56,                               /*165: jmp    1bd <op_call+0x1bd> */
0x83, 0xfe, 0x03,                         /*167: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*16a: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*16f: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*172: mov    $0x3,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*177: callq  17c <op_call+0x17c> */
0x49, 0x8b, 0x46, 0x58,                   /*17c: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*180: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*184: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x18,                   /*188: mov    %rax,0x18(%r14) */
0x48, 0x8b, 0x4b, 0x28,                   /*18c: mov    0x28(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*190: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x11,                         /*194: mov    (%rcx),%rdx */
0x48, 0x8b, 0x49, 0x08,                   /*197: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*19b: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x10,                         /*19f: mov    %rdx,(%rax) */
0x49, 0x8b, 0x46, 0x08,                   /*1a2: mov    0x8(%r14),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*1a6: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x10,                   /*1aa: mov    %rax,0x10(%r14) */
0x49, 0x8b, 0x36,                         /*1ae: mov    (%r14),%rsi */
0x49, 0x8b, 0x7e, 0x58,                   /*1b1: mov    0x58(%r14),%rdi */
0x4c, 0x89, 0xf2,                         /*1b5: mov    %r14,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1b8: callq  1bd <op_call+0x1bd> */
0x5b,                                     /*1bd: pop    %rbx */
0x41, 0x5e,                               /*1be: pop    %r14 */
0x5d,                                     /*1c0: pop    %rbp */

};
static uint8_t op_call__rodata[] = {

};

static void op_call_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_call_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_call_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_super__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*a: sub    $0x18,%rsp */
0x48, 0x89, 0xfb,                         /*e: mov    %rdi,%rbx */
0x48, 0x8b, 0x6b, 0x58,                   /*11: mov    0x58(%rbx),%rbp */
0x48, 0x8b, 0x45, 0x18,                   /*15: mov    0x18(%rbp),%rax */
0x4c, 0x8b, 0x70, 0x20,                   /*19: mov    0x20(%rax),%r14 */
0x45, 0x8b, 0x2e,                         /*1d: mov    (%r14),%r13d */
0x45, 0x85, 0xed,                         /*20: test   %r13d,%r13d */
0x74, 0x73,                               /*23: je     98 <op_super+0x98> */
0x48, 0x8b, 0x43, 0x18,                   /*25: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x08,                         /*29: mov    (%rax),%rcx */
0x48, 0x89, 0x0c, 0x24,                   /*2c: mov    %rcx,(%rsp) */
0x4c, 0x8b, 0x78, 0x08,                   /*30: mov    0x8(%rax),%r15 */
0x4c, 0x89, 0x7c, 0x24, 0x08,             /*34: mov    %r15,0x8(%rsp) */
0x49, 0xc1, 0xef, 0x20,                   /*39: shr    $0x20,%r15 */
0x49, 0x8b, 0x46, 0x48,                   /*3d: mov    0x48(%r14),%rax */
0x48, 0x8b, 0x48, 0x28,                   /*41: mov    0x28(%rax),%rcx */
0x48, 0x89, 0x4c, 0x24, 0x10,             /*45: mov    %rcx,0x10(%rsp) */
0x48, 0x8b, 0x03,                         /*4a: mov    (%rbx),%rax */
0x48, 0x39, 0x48, 0x38,                   /*4d: cmp    %rcx,0x38(%rax) */
0x75, 0x08,                               /*51: jne    5b <op_super+0x5b> */
0x31, 0xd2,                               /*53: xor    %edx,%edx */
0x44, 0x39, 0x68, 0x30,                   /*55: cmp    %r13d,0x30(%rax) */
0x74, 0x33,                               /*59: je     8e <op_super+0x8e> */
0x48, 0x39, 0x48, 0x48,                   /*5b: cmp    %rcx,0x48(%rax) */
0x75, 0x0b,                               /*5f: jne    6c <op_super+0x6c> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*61: mov    $0x1,%edx */
0x44, 0x39, 0x68, 0x40,                   /*66: cmp    %r13d,0x40(%rax) */
0x74, 0x22,                               /*6a: je     8e <op_super+0x8e> */
0x48, 0x39, 0x48, 0x58,                   /*6c: cmp    %rcx,0x58(%rax) */
0x75, 0x0b,                               /*70: jne    7d <op_super+0x7d> */
0xba, 0x02, 0x00, 0x00, 0x00,             /*72: mov    $0x2,%edx */
0x44, 0x39, 0x68, 0x50,                   /*77: cmp    %r13d,0x50(%rax) */
0x74, 0x11,                               /*7b: je     8e <op_super+0x8e> */
0x48, 0x39, 0x48, 0x68,                   /*7d: cmp    %rcx,0x68(%rax) */
0x75, 0x53,                               /*81: jne    d6 <op_super+0xd6> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*83: mov    $0x3,%edx */
0x44, 0x39, 0x68, 0x60,                   /*88: cmp    %r13d,0x60(%rax) */
0x75, 0x48,                               /*8c: jne    d6 <op_super+0xd6> */
0x4c, 0x8b, 0xa4, 0xd0, 0x90, 0x00, 0x00, 0x00,/*8e: mov    0x90(%rax,%rdx,8),%r12 */
0xeb, 0x51,                               /*96: jmp    e9 <op_super+0xe9> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*98: mov    0x0(%rip),%rsi        # 9f <op_super+0x9f> */
0x48, 0x89, 0xef,                         /*9f: mov    %rbp,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a2: callq  a7 <op_super+0xa7> */
0x49, 0x89, 0xc6,                         /*a7: mov    %rax,%r14 */
0x48, 0x8b, 0x7b, 0x58,                   /*aa: mov    0x58(%rbx),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*ae: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*b3: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b8: callq  bd <op_super+0xbd> */
0x89, 0xd1,                               /*bd: mov    %edx,%ecx */
0x48, 0x89, 0xef,                         /*bf: mov    %rbp,%rdi */
0x4c, 0x89, 0xf6,                         /*c2: mov    %r14,%rsi */
0x48, 0x89, 0xc2,                         /*c5: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c8: callq  cd <op_super+0xcd> */
0x48, 0x89, 0x45, 0x28,                   /*cd: mov    %rax,0x28(%rbp) */
0xe9, 0x42, 0x02, 0x00, 0x00,             /*d1: jmpq   318 <op_super+0x318> */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*d6: lea    0x10(%rsp),%rsi */
0x48, 0x89, 0xef,                         /*db: mov    %rbp,%rdi */
0x44, 0x89, 0xea,                         /*de: mov    %r13d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e1: callq  e6 <op_super+0xe6> */
0x49, 0x89, 0xc4,                         /*e6: mov    %rax,%r12 */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*e9: mov    $0x0,%ebp */
0x4d, 0x85, 0xe4,                         /*ee: test   %r12,%r12 */
0x0f, 0x85, 0x5c, 0x01, 0x00, 0x00,       /*f1: jne    253 <op_super+0x253> */
0x48, 0x8b, 0x7b, 0x58,                   /*f7: mov    0x58(%rbx),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*fb: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*100: mov    $0xe,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*105: callq  10a <op_super+0x10a> */
0x41, 0x89, 0xc5,                         /*10a: mov    %eax,%r13d */
0x48, 0x8b, 0x7b, 0x58,                   /*10d: mov    0x58(%rbx),%rdi */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*111: lea    0x10(%rsp),%rsi */
0x44, 0x89, 0xea,                         /*116: mov    %r13d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*119: callq  11e <op_super+0x11e> */
0x49, 0x89, 0xc4,                         /*11e: mov    %rax,%r12 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*121: mov    $0x0,%eax */
0x83, 0xf8, 0x7f,                         /*126: cmp    $0x7f,%eax */
0x75, 0x36,                               /*129: jne    161 <op_super+0x161> */
0x48, 0x8b, 0x43, 0x18,                   /*12b: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x58,                   /*12f: mov    0x58(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*133: mov    $0x0,%ecx */
0xff, 0xc1,                               /*138: inc    %ecx */
0x48, 0x63, 0xd1,                         /*13a: movslq %ecx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*13d: shl    $0x4,%rdx */
0x41, 0x8b, 0x0e,                         /*141: mov    (%r14),%ecx */
0x48, 0x8b, 0x34, 0x10,                   /*144: mov    (%rax,%rdx,1),%rsi */
0x8b, 0x54, 0x10, 0x08,                   /*148: mov    0x8(%rax,%rdx,1),%edx */
0x41, 0xb8, 0x04, 0x00, 0x00, 0x00,       /*14c: mov    $0x4,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*152: callq  157 <op_super+0x157> */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*157: mov    $0x0,%ebp */
0xe9, 0xf2, 0x00, 0x00, 0x00,             /*15c: jmpq   253 <op_super+0x253> */
0x48, 0x8b, 0x43, 0x18,                   /*161: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*165: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*16a: movslq %ecx,%rcx */
0x48, 0x8d, 0x51, 0x01,                   /*16d: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*171: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*175: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*178: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*17b: mov    $0x0,%edi */
0xff, 0xc7,                               /*180: inc    %edi */
0x48, 0x63, 0xff,                         /*182: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*185: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*18a: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*18d: setge  %cl */
0x08, 0xd1,                               /*190: or     %dl,%cl */
0x74, 0x46,                               /*192: je     1da <op_super+0x1da> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*194: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*199: cmp    $0xffffffff,%ecx */
0x0f, 0x84, 0x86, 0x00, 0x00, 0x00,       /*19c: je     228 <op_super+0x228> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a2: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a7: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*1aa: shl    $0x4,%rcx */
0x48, 0x8d, 0x44, 0x01, 0x20,             /*1ae: lea    0x20(%rcx,%rax,1),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b3: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1b8: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1ba: movslq %ecx,%rcx */
0x48, 0xf7, 0xd9,                         /*1bd: neg    %rcx */
0x48, 0x8b, 0x50, 0xf0,                   /*1c0: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*1c4: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*1c8: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*1cc: mov    %rdx,(%rax) */
0x48, 0x83, 0xc0, 0x10,                   /*1cf: add    $0x10,%rax */
0x48, 0xff, 0xc1,                         /*1d3: inc    %rcx */
0x75, 0xe8,                               /*1d6: jne    1c0 <op_super+0x1c0> */
0xeb, 0x4e,                               /*1d8: jmp    228 <op_super+0x228> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1da: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*1df: cmp    $0xffffffff,%ecx */
0x74, 0x44,                               /*1e2: je     228 <op_super+0x228> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1e4: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*1e9: movslq %ecx,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1ec: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1f1: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1f3: movslq %ecx,%rcx */
0x48, 0x01, 0xca,                         /*1f6: add    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*1f9: shl    $0x4,%rdx */
0x48, 0x8d, 0x44, 0x02, 0x10,             /*1fd: lea    0x10(%rdx,%rax,1),%rax */
0x48, 0xf7, 0xd9,                         /*202: neg    %rcx */
0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*205: data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x50, 0xf0,                   /*210: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*214: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*218: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*21c: mov    %rdx,(%rax) */
0x48, 0x8d, 0x40, 0xf0,                   /*21f: lea    -0x10(%rax),%rax */
0x48, 0xff, 0xc1,                         /*223: inc    %rcx */
0x75, 0xe8,                               /*226: jne    210 <op_super+0x210> */
0x48, 0x8b, 0x43, 0x18,                   /*228: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*22c: mov    $0x0,%ecx */
0xff, 0xc1,                               /*231: inc    %ecx */
0x48, 0x63, 0xc9,                         /*233: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*236: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x04, 0x00, 0x00, 0x00,/*23a: movl   $0x4,0x8(%rax,%rcx,1) */
0x41, 0x8b, 0x06,                         /*242: mov    (%r14),%eax */
0x48, 0x8b, 0x53, 0x18,                   /*245: mov    0x18(%rbx),%rdx */
0x89, 0x04, 0x0a,                         /*249: mov    %eax,(%rdx,%rcx,1) */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*24c: mov    $0x0,%ebp */
0xff, 0xc5,                               /*251: inc    %ebp */
0x4c, 0x8b, 0x34, 0x24,                   /*253: mov    (%rsp),%r14 */
0x48, 0x8b, 0x7b, 0x58,                   /*257: mov    0x58(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*25b: callq  260 <op_super+0x260> */
0x44, 0x89, 0x28,                         /*260: mov    %r13d,(%rax) */
0x4c, 0x89, 0x60, 0x08,                   /*263: mov    %r12,0x8(%rax) */
0x48, 0x8b, 0x4b, 0x58,                   /*267: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*26b: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*26f: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x48, 0x10,                   /*273: mov    %rcx,0x10(%rax) */
0x83, 0xfd, 0x7f,                         /*277: cmp    $0x7f,%ebp */
0xb9, 0xff, 0xff, 0xff, 0xff,             /*27a: mov    $0xffffffff,%ecx */
0x0f, 0x45, 0xcd,                         /*27f: cmovne %ebp,%ecx */
0x89, 0x48, 0x40,                         /*282: mov    %ecx,0x40(%rax) */
0x48, 0x8b, 0x4c, 0x24, 0x10,             /*285: mov    0x10(%rsp),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*28a: mov    %rcx,0x48(%rax) */
0x48, 0x8b, 0x4b, 0x10,                   /*28e: mov    0x10(%rbx),%rcx */
0x48, 0x83, 0xc1, 0x04,                   /*292: add    $0x4,%rcx */
0x48, 0x89, 0x48, 0x30,                   /*296: mov    %rcx,0x30(%rax) */
0x48, 0x8b, 0x4b, 0x58,                   /*29a: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*29e: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2a2: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*2a7: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*2aa: shl    $0x4,%rdx */
0x48, 0x01, 0x51, 0x08,                   /*2ae: add    %rdx,0x8(%rcx) */
0x48, 0x8b, 0x4b, 0x58,                   /*2b2: mov    0x58(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*2b6: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*2ba: mov    0x8(%rcx),%rcx */
0x4c, 0x89, 0x31,                         /*2be: mov    %r14,(%rcx) */
0x48, 0x8b, 0x54, 0x24, 0x08,             /*2c1: mov    0x8(%rsp),%rdx */
0x89, 0x51, 0x08,                         /*2c6: mov    %edx,0x8(%rcx) */
0x44, 0x89, 0x79, 0x0c,                   /*2c9: mov    %r15d,0xc(%rcx) */
0x41, 0xf6, 0x44, 0x24, 0x02, 0x04,       /*2cd: testb  $0x4,0x2(%r12) */
0x74, 0x50,                               /*2d3: je     325 <op_super+0x325> */
0x8d, 0x4d, 0x02,                         /*2d5: lea    0x2(%rbp),%ecx */
0x83, 0xfd, 0x7f,                         /*2d8: cmp    $0x7f,%ebp */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*2db: mov    $0x3,%esi */
0x0f, 0x45, 0xf1,                         /*2e0: cmovne %ecx,%esi */
0x89, 0x70, 0x18,                         /*2e3: mov    %esi,0x18(%rax) */
0x48, 0x8b, 0x7b, 0x58,                   /*2e6: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*2ea: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x68, 0x08,                   /*2ee: mov    0x8(%rax),%rbp */
0x4c, 0x89, 0xf6,                         /*2f2: mov    %r14,%rsi */
0x41, 0xff, 0x54, 0x24, 0x18,             /*2f5: callq  *0x18(%r12) */
0x48, 0x89, 0x45, 0x00,                   /*2fa: mov    %rax,0x0(%rbp) */
0x89, 0x55, 0x08,                         /*2fe: mov    %edx,0x8(%rbp) */
0x48, 0x8b, 0x7b, 0x58,                   /*301: mov    0x58(%rbx),%rdi */
0x8b, 0x73, 0x50,                         /*305: mov    0x50(%rbx),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*308: callq  30d <op_super+0x30d> */
0x48, 0x8b, 0x43, 0x58,                   /*30d: mov    0x58(%rbx),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*311: cmpq   $0x0,0x28(%rax) */
0x74, 0x5c,                               /*316: je     374 <op_super+0x374> */
0x48, 0x89, 0xdf,                         /*318: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*31b: callq  320 <op_super+0x320> */
0xe9, 0xa0, 0x00, 0x00, 0x00,             /*320: jmpq   3c5 <op_super+0x3c5> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*325: mov    $0x0,%ecx */
0x89, 0x48, 0x44,                         /*32a: mov    %ecx,0x44(%rax) */
0x4c, 0x89, 0x60, 0x08,                   /*32d: mov    %r12,0x8(%rax) */
0x49, 0x8b, 0x4c, 0x24, 0x18,             /*331: mov    0x18(%r12),%rcx */
0x48, 0x89, 0x4b, 0x08,                   /*336: mov    %rcx,0x8(%rbx) */
0x48, 0x8b, 0x51, 0x10,                   /*33a: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x53, 0x20,                   /*33e: mov    %rdx,0x20(%rbx) */
0x48, 0x8b, 0x51, 0x18,                   /*342: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x53, 0x28,                   /*346: mov    %rdx,0x28(%rbx) */
0x0f, 0xb7, 0x49, 0x02,                   /*34a: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*34e: mov    %ecx,0x18(%rax) */
0x48, 0x8b, 0x4b, 0x08,                   /*351: mov    0x8(%rbx),%rcx */
0x48, 0x8b, 0x7b, 0x58,                   /*355: mov    0x58(%rbx),%rdi */
0x0f, 0xb7, 0x71, 0x02,                   /*359: movzwl 0x2(%rcx),%esi */
0x83, 0xfd, 0x7f,                         /*35d: cmp    $0x7f,%ebp */
0x75, 0x31,                               /*360: jne    393 <op_super+0x393> */
0x83, 0xfe, 0x03,                         /*362: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*365: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*36a: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*36d: mov    $0x3,%edx */
0xeb, 0x25,                               /*372: jmp    399 <op_super+0x399> */
0x48, 0x8b, 0x40, 0x18,                   /*374: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*378: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*37c: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*380: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x4b, 0x18,                   /*384: mov    %rcx,0x18(%rbx) */
0x48, 0x8b, 0x7b, 0x58,                   /*388: mov    0x58(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*38c: callq  391 <op_super+0x391> */
0xeb, 0x32,                               /*391: jmp    3c5 <op_super+0x3c5> */
0x8b, 0x50, 0x40,                         /*393: mov    0x40(%rax),%edx */
0x83, 0xc2, 0x02,                         /*396: add    $0x2,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*399: callq  39e <op_super+0x39e> */
0x48, 0x8b, 0x7b, 0x58,                   /*39e: mov    0x58(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*3a2: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3a6: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x18,                   /*3aa: mov    %rax,0x18(%rbx) */
0x48, 0x8b, 0x43, 0x08,                   /*3ae: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3b2: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x10,                   /*3b6: mov    %rax,0x10(%rbx) */
0x4c, 0x89, 0xe6,                         /*3ba: mov    %r12,%rsi */
0x48, 0x89, 0xda,                         /*3bd: mov    %rbx,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3c0: callq  3c5 <op_super+0x3c5> */
0x48, 0x83, 0xc4, 0x18,                   /*3c5: add    $0x18,%rsp */
0x5b,                                     /*3c9: pop    %rbx */
0x41, 0x5c,                               /*3ca: pop    %r12 */
0x41, 0x5d,                               /*3cc: pop    %r13 */
0x41, 0x5e,                               /*3ce: pop    %r14 */
0x41, 0x5f,                               /*3d0: pop    %r15 */
0x5d,                                     /*3d2: pop    %rbp */

};
static uint8_t op_super__rodata[] = {
0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x6f, 0x75, 0x74,
0x73, 0x69, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x00, 0x6d,
0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x00,

};

static void op_super_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_super_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_super_set_args(op, GETARG_A(c),0,GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_argary__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x48,                   /*a: sub    $0x48,%rsp */
0x49, 0x89, 0xfe,                         /*e: mov    %rdi,%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%eax */
0x89, 0x44, 0x24, 0x44,                   /*16: mov    %eax,0x44(%rsp) */
0x44, 0x8b, 0x6c, 0x24, 0x44,             /*1a: mov    0x44(%rsp),%r13d */
0x44, 0x8b, 0x7c, 0x24, 0x44,             /*1f: mov    0x44(%rsp),%r15d */
0x8b, 0x5c, 0x24, 0x44,                   /*24: mov    0x44(%rsp),%ebx */
0x8b, 0x74, 0x24, 0x44,                   /*28: mov    0x44(%rsp),%esi */
0x83, 0xe6, 0x0f,                         /*2c: and    $0xf,%esi */
0x0f, 0x84, 0x88, 0x00, 0x00, 0x00,       /*2f: je     bd <op_argary+0xbd> */
0x49, 0x8b, 0x6e, 0x58,                   /*35: mov    0x58(%r14),%rbp */
0x48, 0x8b, 0x45, 0x18,                   /*39: mov    0x18(%rbp),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*3d: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*41: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x28,                   /*45: mov    0x28(%rax),%rax */
0x48, 0x85, 0xc0,                         /*49: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*4c: sete   %cl */
0x83, 0xfe, 0x01,                         /*4f: cmp    $0x1,%esi */
0x74, 0x1f,                               /*52: je     73 <op_argary+0x73> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*54: mov    $0x1,%edx */
0x29, 0xf2,                               /*59: sub    %esi,%edx */
0x0f, 0x1f, 0x44, 0x00, 0x00,             /*5b: nopl   0x0(%rax,%rax,1) */
0xf6, 0xc1, 0x01,                         /*60: test   $0x1,%cl */
0x75, 0x12,                               /*63: jne    77 <op_argary+0x77> */
0x48, 0x8b, 0x40, 0x08,                   /*65: mov    0x8(%rax),%rax */
0x48, 0x85, 0xc0,                         /*69: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*6c: sete   %cl */
0xff, 0xc2,                               /*6f: inc    %edx */
0x75, 0xed,                               /*71: jne    60 <op_argary+0x60> */
0x84, 0xc9,                               /*73: test   %cl,%cl */
0x74, 0x4c,                               /*75: je     c3 <op_argary+0xc3> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*77: mov    0x0(%rip),%rsi        # 7e <op_argary+0x7e> */
0x48, 0x89, 0xef,                         /*7e: mov    %rbp,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*81: callq  86 <op_argary+0x86> */
0x48, 0x89, 0xc3,                         /*86: mov    %rax,%rbx */
0x49, 0x8b, 0x7e, 0x58,                   /*89: mov    0x58(%r14),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*8d: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*92: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*97: callq  9c <op_argary+0x9c> */
0x89, 0xd1,                               /*9c: mov    %edx,%ecx */
0x48, 0x89, 0xef,                         /*9e: mov    %rbp,%rdi */
0x48, 0x89, 0xde,                         /*a1: mov    %rbx,%rsi */
0x48, 0x89, 0xc2,                         /*a4: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a7: callq  ac <op_argary+0xac> */
0x48, 0x89, 0x45, 0x28,                   /*ac: mov    %rax,0x28(%rbp) */
0x4c, 0x89, 0xf7,                         /*b0: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b3: callq  b8 <op_argary+0xb8> */
0xe9, 0x1a, 0x02, 0x00, 0x00,             /*b8: jmpq   2d7 <op_argary+0x2d7> */
0x49, 0x8d, 0x46, 0x18,                   /*bd: lea    0x18(%r14),%rax */
0xeb, 0x04,                               /*c1: jmp    c7 <op_argary+0xc7> */
0x48, 0x83, 0xc0, 0x18,                   /*c3: add    $0x18,%rax */
0x41, 0xc1, 0xed, 0x0a,                   /*c7: shr    $0xa,%r13d */
0x45, 0x89, 0xe9,                         /*cb: mov    %r13d,%r9d */
0x41, 0x83, 0xe1, 0x3f,                   /*ce: and    $0x3f,%r9d */
0x41, 0xc1, 0xef, 0x09,                   /*d2: shr    $0x9,%r15d */
0x41, 0x83, 0xe7, 0x01,                   /*d6: and    $0x1,%r15d */
0xc1, 0xeb, 0x04,                         /*da: shr    $0x4,%ebx */
0x89, 0xd9,                               /*dd: mov    %ebx,%ecx */
0x83, 0xe1, 0x1f,                         /*df: and    $0x1f,%ecx */
0x4c, 0x8b, 0x00,                         /*e2: mov    (%rax),%r8 */
0x49, 0x8d, 0x68, 0x10,                   /*e5: lea    0x10(%r8),%rbp */
0x45, 0x85, 0xff,                         /*e9: test   %r15d,%r15d */
0x0f, 0x84, 0x63, 0x01, 0x00, 0x00,       /*ec: je     255 <op_argary+0x255> */
0x44, 0x89, 0x7c, 0x24, 0x38,             /*f2: mov    %r15d,0x38(%rsp) */
0x44, 0x89, 0xc8,                         /*f7: mov    %r9d,%eax */
0x48, 0x89, 0x44, 0x24, 0x18,             /*fa: mov    %rax,0x18(%rsp) */
0x48, 0x8d, 0x40, 0x01,                   /*ff: lea    0x1(%rax),%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*103: shl    $0x4,%rax */
0x45, 0x31, 0xe4,                         /*107: xor    %r12d,%r12d */
0x41, 0x83, 0x7c, 0x00, 0x08, 0x0e,       /*10a: cmpl   $0xe,0x8(%r8,%rax,1) */
0xba, 0x00, 0x00, 0x00, 0x00,             /*110: mov    $0x0,%edx */
0x75, 0x0b,                               /*115: jne    122 <op_argary+0x122> */
0x49, 0x8b, 0x04, 0x00,                   /*117: mov    (%r8,%rax,1),%rax */
0x4c, 0x8b, 0x60, 0x28,                   /*11b: mov    0x28(%rax),%r12 */
0x8b, 0x50, 0x18,                         /*11f: mov    0x18(%rax),%edx */
0x48, 0x89, 0x54, 0x24, 0x08,             /*122: mov    %rdx,0x8(%rsp) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*127: mov    $0x0,%eax */
0x4c, 0x63, 0xf8,                         /*12c: movslq %eax,%r15 */
0x49, 0xc1, 0xe7, 0x04,                   /*12f: shl    $0x4,%r15 */
0x49, 0x8b, 0x46, 0x18,                   /*133: mov    0x18(%r14),%rax */
0x48, 0x89, 0x04, 0x24,                   /*137: mov    %rax,(%rsp) */
0x49, 0x8b, 0x7e, 0x58,                   /*13b: mov    0x58(%r14),%rdi */
0x42, 0x8d, 0x34, 0x09,                   /*13f: lea    (%rcx,%r9,1),%esi */
0x48, 0x89, 0x4c, 0x24, 0x20,             /*143: mov    %rcx,0x20(%rsp) */
0x01, 0xd6,                               /*148: add    %edx,%esi */
0x89, 0x74, 0x24, 0x14,                   /*14a: mov    %esi,0x14(%rsp) */
0x4c, 0x89, 0x4c, 0x24, 0x30,             /*14e: mov    %r9,0x30(%rsp) */
0x4c, 0x89, 0x44, 0x24, 0x28,             /*153: mov    %r8,0x28(%rsp) */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*158: callq  15d <op_argary+0x15d> */
0x4c, 0x8b, 0x4c, 0x24, 0x28,             /*15d: mov    0x28(%rsp),%r9 */
0x4c, 0x8b, 0x44, 0x24, 0x30,             /*162: mov    0x30(%rsp),%r8 */
0x48, 0x8b, 0x0c, 0x24,                   /*167: mov    (%rsp),%rcx */
0x4a, 0x89, 0x04, 0x39,                   /*16b: mov    %rax,(%rcx,%r15,1) */
0x42, 0x89, 0x54, 0x39, 0x08,             /*16f: mov    %edx,0x8(%rcx,%r15,1) */
0x49, 0x8b, 0x46, 0x18,                   /*174: mov    0x18(%r14),%rax */
0x4e, 0x8b, 0x14, 0x38,                   /*178: mov    (%rax,%r15,1),%r10 */
0x45, 0x85, 0xc0,                         /*17c: test   %r8d,%r8d */
0x74, 0x33,                               /*17f: je     1b4 <op_argary+0x1b4> */
0x49, 0x8b, 0x4a, 0x28,                   /*181: mov    0x28(%r10),%rcx */
0x49, 0x83, 0xe5, 0x3f,                   /*185: and    $0x3f,%r13 */
0x49, 0xf7, 0xdd,                         /*189: neg    %r13 */
0x4c, 0x89, 0xca,                         /*18c: mov    %r9,%rdx */
0x90,                                     /*18f: nop */
0x48, 0x89, 0xee,                         /*190: mov    %rbp,%rsi */
0x48, 0x83, 0xc2, 0x20,                   /*193: add    $0x20,%rdx */
0x48, 0x8b, 0x3e,                         /*197: mov    (%rsi),%rdi */
0x48, 0x8b, 0x6e, 0x08,                   /*19a: mov    0x8(%rsi),%rbp */
0x48, 0x89, 0x69, 0x08,                   /*19e: mov    %rbp,0x8(%rcx) */
0x48, 0x89, 0x39,                         /*1a2: mov    %rdi,(%rcx) */
0x48, 0x8d, 0x49, 0x10,                   /*1a5: lea    0x10(%rcx),%rcx */
0x49, 0xff, 0xc5,                         /*1a9: inc    %r13 */
0x48, 0x89, 0xd5,                         /*1ac: mov    %rdx,%rbp */
0x48, 0x89, 0xf2,                         /*1af: mov    %rsi,%rdx */
0x75, 0xdc,                               /*1b2: jne    190 <op_argary+0x190> */
0x48, 0x8b, 0x44, 0x24, 0x08,             /*1b4: mov    0x8(%rsp),%rax */
0x85, 0xc0,                               /*1b9: test   %eax,%eax */
0x44, 0x8b, 0x7c, 0x24, 0x38,             /*1bb: mov    0x38(%rsp),%r15d */
0x4c, 0x8b, 0x5c, 0x24, 0x18,             /*1c0: mov    0x18(%rsp),%r11 */
0x7e, 0x37,                               /*1c5: jle    1fe <op_argary+0x1fe> */
0x4c, 0x89, 0xd9,                         /*1c7: mov    %r11,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*1ca: shl    $0x4,%rcx */
0x49, 0x03, 0x4a, 0x28,                   /*1ce: add    0x28(%r10),%rcx */
0x48, 0x63, 0xd0,                         /*1d2: movslq %eax,%rdx */
0x48, 0xf7, 0xda,                         /*1d5: neg    %rdx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1d8: nopl   0x0(%rax,%rax,1) */
0x49, 0x8b, 0x34, 0x24,                   /*1e0: mov    (%r12),%rsi */
0x49, 0x8b, 0x7c, 0x24, 0x08,             /*1e4: mov    0x8(%r12),%rdi */
0x4d, 0x8d, 0x64, 0x24, 0x10,             /*1e9: lea    0x10(%r12),%r12 */
0x48, 0x89, 0x79, 0x08,                   /*1ee: mov    %rdi,0x8(%rcx) */
0x48, 0x89, 0x31,                         /*1f2: mov    %rsi,(%rcx) */
0x48, 0x8d, 0x49, 0x10,                   /*1f5: lea    0x10(%rcx),%rcx */
0x48, 0xff, 0xc2,                         /*1f9: inc    %rdx */
0x75, 0xe2,                               /*1fc: jne    1e0 <op_argary+0x1e0> */
0x48, 0x8b, 0x6c, 0x24, 0x20,             /*1fe: mov    0x20(%rsp),%rbp */
0x85, 0xed,                               /*203: test   %ebp,%ebp */
0x74, 0x44,                               /*205: je     24b <op_argary+0x24b> */
0x4c, 0x89, 0xd9,                         /*207: mov    %r11,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*20a: shl    $0x4,%rcx */
0x4a, 0x8d, 0x4c, 0x09, 0x20,             /*20e: lea    0x20(%rcx,%r9,1),%rcx */
0x48, 0x63, 0xd0,                         /*213: movslq %eax,%rdx */
0x4c, 0x01, 0xda,                         /*216: add    %r11,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*219: shl    $0x4,%rdx */
0x49, 0x03, 0x52, 0x28,                   /*21d: add    0x28(%r10),%rdx */
0x48, 0x83, 0xe3, 0x1f,                   /*221: and    $0x1f,%rbx */
0x48, 0xf7, 0xdb,                         /*225: neg    %rbx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*228: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x31,                         /*230: mov    (%rcx),%rsi */
0x48, 0x8b, 0x79, 0x08,                   /*233: mov    0x8(%rcx),%rdi */
0x48, 0x8d, 0x49, 0x10,                   /*237: lea    0x10(%rcx),%rcx */
0x48, 0x89, 0x7a, 0x08,                   /*23b: mov    %rdi,0x8(%rdx) */
0x48, 0x89, 0x32,                         /*23f: mov    %rsi,(%rdx) */
0x48, 0x8d, 0x52, 0x10,                   /*242: lea    0x10(%rdx),%rdx */
0x48, 0xff, 0xc3,                         /*246: inc    %rbx */
0x75, 0xe5,                               /*249: jne    230 <op_argary+0x230> */
0x8b, 0x44, 0x24, 0x14,                   /*24b: mov    0x14(%rsp),%eax */
0x41, 0x89, 0x42, 0x18,                   /*24f: mov    %eax,0x18(%r10) */
0xeb, 0x41,                               /*253: jmp    296 <op_argary+0x296> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*255: mov    $0x0,%eax */
0x48, 0x63, 0xd8,                         /*25a: movslq %eax,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*25d: shl    $0x4,%rbx */
0x49, 0x8b, 0x46, 0x18,                   /*261: mov    0x18(%r14),%rax */
0x48, 0x89, 0x44, 0x24, 0x38,             /*265: mov    %rax,0x38(%rsp) */
0x49, 0x8b, 0x7e, 0x58,                   /*26a: mov    0x58(%r14),%rdi */
0x42, 0x8d, 0x34, 0x09,                   /*26e: lea    (%rcx,%r9,1),%esi */
0x48, 0x89, 0xea,                         /*272: mov    %rbp,%rdx */
0x4d, 0x89, 0xcd,                         /*275: mov    %r9,%r13 */
0x4d, 0x89, 0xc4,                         /*278: mov    %r8,%r12 */
0x48, 0x89, 0xcd,                         /*27b: mov    %rcx,%rbp */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*27e: callq  283 <op_argary+0x283> */
0x4d, 0x89, 0xe1,                         /*283: mov    %r12,%r9 */
0x4d, 0x89, 0xe8,                         /*286: mov    %r13,%r8 */
0x48, 0x8b, 0x4c, 0x24, 0x38,             /*289: mov    0x38(%rsp),%rcx */
0x48, 0x89, 0x04, 0x19,                   /*28e: mov    %rax,(%rcx,%rbx,1) */
0x89, 0x54, 0x19, 0x08,                   /*292: mov    %edx,0x8(%rcx,%rbx,1) */
0x49, 0x8b, 0x46, 0x18,                   /*296: mov    0x18(%r14),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*29a: mov    $0x0,%ecx */
0xff, 0xc1,                               /*29f: inc    %ecx */
0x48, 0x63, 0xc9,                         /*2a1: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*2a4: shl    $0x4,%rcx */
0x45, 0x01, 0xf8,                         /*2a8: add    %r15d,%r8d */
0x42, 0x8d, 0x54, 0x05, 0x01,             /*2ab: lea    0x1(%rbp,%r8,1),%edx */
0x48, 0x63, 0xd2,                         /*2b0: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*2b3: shl    $0x4,%rdx */
0x49, 0x8b, 0x34, 0x11,                   /*2b7: mov    (%r9,%rdx,1),%rsi */
0x49, 0x8b, 0x54, 0x11, 0x08,             /*2bb: mov    0x8(%r9,%rdx,1),%rdx */
0x48, 0x89, 0x54, 0x08, 0x08,             /*2c0: mov    %rdx,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x34, 0x08,                   /*2c5: mov    %rsi,(%rax,%rcx,1) */
0x41, 0x8b, 0x46, 0x50,                   /*2c9: mov    0x50(%r14),%eax */
0x49, 0x8b, 0x4e, 0x58,                   /*2cd: mov    0x58(%r14),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*2d1: mov    %eax,0xdc(%rcx) */
0x48, 0x83, 0xc4, 0x48,                   /*2d7: add    $0x48,%rsp */
0x5b,                                     /*2db: pop    %rbx */
0x41, 0x5c,                               /*2dc: pop    %r12 */
0x41, 0x5d,                               /*2de: pop    %r13 */
0x41, 0x5e,                               /*2e0: pop    %r14 */
0x41, 0x5f,                               /*2e2: pop    %r15 */
0x5d,                                     /*2e4: pop    %rbp */

};
static uint8_t op_argary__rodata[] = {
0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x6f, 0x75, 0x74,
0x73, 0x69, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x00,

};

static void op_argary_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_argary_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_argary_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_enter__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*a: sub    $0x18,%rsp */
0x49, 0x89, 0xff,                         /*e: mov    %rdi,%r15 */
0x49, 0x8b, 0x5f, 0x18,                   /*11: mov    0x18(%r15),%rbx */
0x49, 0x8b, 0x7f, 0x58,                   /*15: mov    0x58(%r15),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*19: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1d: mov    0x20(%rax),%rax */
0x4c, 0x63, 0x70, 0x40,                   /*21: movslq 0x40(%rax),%r14 */
0x4d, 0x85, 0xf6,                         /*25: test   %r14,%r14 */
0x49, 0x8d, 0x4e, 0x01,                   /*28: lea    0x1(%r14),%rcx */
0xb8, 0x02, 0x00, 0x00, 0x00,             /*2c: mov    $0x2,%eax */
0x48, 0x0f, 0x49, 0xc1,                   /*31: cmovns %rcx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*35: shl    $0x4,%rax */
0x4c, 0x8d, 0x2c, 0x03,                   /*39: lea    (%rbx,%rax,1),%r13 */
0x8b, 0x54, 0x03, 0x08,                   /*3d: mov    0x8(%rbx,%rax,1),%edx */
0x83, 0xfa, 0x0d,                         /*41: cmp    $0xd,%edx */
0x74, 0x31,                               /*44: je     77 <op_enter+0x77> */
0x85, 0xd2,                               /*46: test   %edx,%edx */
0x75, 0x07,                               /*48: jne    51 <op_enter+0x51> */
0x41, 0x83, 0x7d, 0x00, 0x00,             /*4a: cmpl   $0x0,0x0(%r13) */
0x74, 0x26,                               /*4f: je     77 <op_enter+0x77> */
0x48, 0x8d, 0x6c, 0x03, 0x08,             /*51: lea    0x8(%rbx,%rax,1),%rbp */
0x49, 0x8b, 0x75, 0x00,                   /*56: mov    0x0(%r13),%rsi */
0xb9, 0x0d, 0x00, 0x00, 0x00,             /*5a: mov    $0xd,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*5f: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*65: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6b: callq  70 <op_enter+0x70> */
0x49, 0x89, 0x45, 0x00,                   /*70: mov    %rax,0x0(%r13) */
0x89, 0x55, 0x00,                         /*74: mov    %edx,0x0(%rbp) */
0x48, 0x83, 0xc3, 0x10,                   /*77: add    $0x10,%rbx */
0x45, 0x85, 0xf6,                         /*7b: test   %r14d,%r14d */
0x49, 0x89, 0xdc,                         /*7e: mov    %rbx,%r12 */
0x79, 0x1c,                               /*81: jns    9f <op_enter+0x9f> */
0x49, 0x8b, 0x47, 0x18,                   /*83: mov    0x18(%r15),%rax */
0x49, 0x8b, 0x7f, 0x58,                   /*87: mov    0x58(%r15),%rdi */
0x48, 0x8b, 0x70, 0x10,                   /*8b: mov    0x10(%rax),%rsi */
0x4c, 0x8b, 0x66, 0x28,                   /*8f: mov    0x28(%rsi),%r12 */
0x44, 0x8b, 0x76, 0x18,                   /*93: mov    0x18(%rsi),%r14d */
0x8b, 0x50, 0x18,                         /*97: mov    0x18(%rax),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*9a: callq  9f <op_enter+0x9f> */
0x49, 0x8b, 0x7f, 0x58,                   /*9f: mov    0x58(%r15),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*a3: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*a7: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*ab: mov    0x8(%rax),%rcx */
0x48, 0x85, 0xc9,                         /*af: test   %rcx,%rcx */
0x0f, 0x84, 0x85, 0x00, 0x00, 0x00,       /*b2: je     13d <op_enter+0x13d> */
0xf6, 0x41, 0x02, 0x08,                   /*b8: testb  $0x8,0x2(%rcx) */
0x74, 0x7f,                               /*bc: je     13d <op_enter+0x13d> */
0x45, 0x85, 0xf6,                         /*be: test   %r14d,%r14d */
0x0f, 0x88, 0xe7, 0x00, 0x00, 0x00,       /*c1: js     1ae <op_enter+0x1ae> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*c7: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*cc: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*d1: shr    $0x7,%esi */
0x83, 0xe6, 0x1f,                         /*d4: and    $0x1f,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*d7: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*dc: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*df: and    $0x1f,%ecx */
0x44, 0x8d, 0x04, 0x31,                   /*e2: lea    (%rcx,%rsi,1),%r8d */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*e6: mov    $0x0,%ebp */
0xc1, 0xed, 0x0d,                         /*eb: shr    $0xd,%ebp */
0x83, 0xe5, 0x1f,                         /*ee: and    $0x1f,%ebp */
0x01, 0xcd,                               /*f1: add    %ecx,%ebp */
0xc1, 0xea, 0x0c,                         /*f3: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*f6: and    $0x1,%edx */
0x0f, 0x94, 0xc1,                         /*f9: sete   %cl */
0x01, 0xea,                               /*fc: add    %ebp,%edx */
0x01, 0xf2,                               /*fe: add    %esi,%edx */
0x41, 0x39, 0xd6,                         /*100: cmp    %edx,%r14d */
0x0f, 0x9f, 0xc2,                         /*103: setg   %dl */
0x45, 0x39, 0xc6,                         /*106: cmp    %r8d,%r14d */
0x7c, 0x08,                               /*109: jl     113 <op_enter+0x113> */
0x20, 0xca,                               /*10b: and    %cl,%dl */
0x0f, 0x84, 0x9b, 0x00, 0x00, 0x00,       /*10d: je     1ae <op_enter+0x1ae> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*113: mov    $0x0,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*118: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*11d: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*120: and    $0x1f,%eax */
0xc1, 0xee, 0x12,                         /*123: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*126: and    $0x1f,%esi */
0x01, 0xc6,                               /*129: add    %eax,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*12b: callq  130 <op_enter+0x130> */
0x4c, 0x89, 0xff,                         /*130: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*133: callq  138 <op_enter+0x138> */
0xe9, 0xc7, 0x07, 0x00, 0x00,             /*138: jmpq   904 <op_enter+0x904> */
0x41, 0x83, 0xfe, 0x01,                   /*13d: cmp    $0x1,%r14d */
0x75, 0x6b,                               /*141: jne    1ae <op_enter+0x1ae> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*143: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*148: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*14d: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*150: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*153: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*158: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*15b: and    $0x1f,%esi */
0x01, 0xd6,                               /*15e: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*160: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*165: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*168: and    $0x1,%edx */
0x01, 0xf2,                               /*16b: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*16d: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*170: and    $0x1f,%ecx */
0x01, 0xd1,                               /*173: add    %edx,%ecx */
0x83, 0xf9, 0x02,                         /*175: cmp    $0x2,%ecx */
0x7c, 0x34,                               /*178: jl     1ae <op_enter+0x1ae> */
0x41, 0xbe, 0x01, 0x00, 0x00, 0x00,       /*17a: mov    $0x1,%r14d */
0x41, 0x83, 0x7c, 0x24, 0x08, 0x0e,       /*180: cmpl   $0xe,0x8(%r12) */
0x75, 0x26,                               /*186: jne    1ae <op_enter+0x1ae> */
0x49, 0x8b, 0x34, 0x24,                   /*188: mov    (%r12),%rsi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*18c: mov    $0xe,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*191: callq  196 <op_enter+0x196> */
0x49, 0x8b, 0x04, 0x24,                   /*196: mov    (%r12),%rax */
0x44, 0x8b, 0x70, 0x18,                   /*19a: mov    0x18(%rax),%r14d */
0x4c, 0x8b, 0x60, 0x28,                   /*19e: mov    0x28(%rax),%r12 */
0x49, 0x8b, 0x47, 0x58,                   /*1a2: mov    0x58(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*1a6: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1aa: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1ae: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1b3: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*1b8: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*1bb: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1be: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*1c3: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*1c6: and    $0x1f,%esi */
0x01, 0xd6,                               /*1c9: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1cb: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*1d0: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*1d3: and    $0x1,%edx */
0x01, 0xf2,                               /*1d6: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*1d8: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*1db: and    $0x1f,%ecx */
0x01, 0xd1,                               /*1de: add    %edx,%ecx */
0x89, 0x48, 0x40,                         /*1e0: mov    %ecx,0x40(%rax) */
0x41, 0x39, 0xce,                         /*1e3: cmp    %ecx,%r14d */
0x0f, 0x8d, 0x24, 0x01, 0x00, 0x00,       /*1e6: jge    310 <op_enter+0x310> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1ec: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1f1: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*1f6: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*1f9: and    $0x1f,%eax */
0xc1, 0xe9, 0x12,                         /*1fc: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*1ff: and    $0x1f,%ecx */
0x01, 0xc1,                               /*202: add    %eax,%ecx */
0x41, 0x39, 0xce,                         /*204: cmp    %ecx,%r14d */
0x7d, 0x15,                               /*207: jge    21e <op_enter+0x21e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*209: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*20e: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*211: and    $0x1f,%ecx */
0x31, 0xd2,                               /*214: xor    %edx,%edx */
0x44, 0x89, 0xf0,                         /*216: mov    %r14d,%eax */
0x29, 0xc8,                               /*219: sub    %ecx,%eax */
0x0f, 0x4e, 0xc2,                         /*21b: cmovle %edx,%eax */
0x49, 0x8b, 0x4f, 0x18,                   /*21e: mov    0x18(%r15),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*222: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*227: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*22c: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*22f: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*232: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*237: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*23a: and    $0x1f,%edi */
0x01, 0xf7,                               /*23d: add    %esi,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*23f: mov    $0x0,%esi */
0xc1, 0xee, 0x0c,                         /*244: shr    $0xc,%esi */
0x83, 0xe6, 0x01,                         /*247: and    $0x1,%esi */
0x01, 0xfe,                               /*24a: add    %edi,%esi */
0xc1, 0xea, 0x07,                         /*24c: shr    $0x7,%edx */
0x83, 0xe2, 0x1f,                         /*24f: and    $0x1f,%edx */
0x8d, 0x54, 0x32, 0x01,                   /*252: lea    0x1(%rdx,%rsi,1),%edx */
0x48, 0x63, 0xd2,                         /*256: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*259: shl    $0x4,%rdx */
0x49, 0x8b, 0x75, 0x00,                   /*25d: mov    0x0(%r13),%rsi */
0x49, 0x8b, 0x7d, 0x08,                   /*261: mov    0x8(%r13),%rdi */
0x48, 0x89, 0x7c, 0x11, 0x08,             /*265: mov    %rdi,0x8(%rcx,%rdx,1) */
0x48, 0x89, 0x34, 0x11,                   /*26a: mov    %rsi,(%rcx,%rdx,1) */
0x41, 0x8d, 0x4e, 0x01,                   /*26e: lea    0x1(%r14),%ecx */
0x48, 0x63, 0xc9,                         /*272: movslq %ecx,%rcx */
0x49, 0x8b, 0x57, 0x18,                   /*275: mov    0x18(%r15),%rdx */
0x48, 0xc1, 0xe1, 0x04,                   /*279: shl    $0x4,%rcx */
0xc7, 0x44, 0x0a, 0x08, 0x00, 0x00, 0x00, 0x00,/*27d: movl   $0x0,0x8(%rdx,%rcx,1) */
0x49, 0x8b, 0x57, 0x18,                   /*285: mov    0x18(%r15),%rdx */
0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, /*289: movl   $0x0,(%rdx,%rcx,1) */
0x4c, 0x39, 0xe3,                         /*290: cmp    %r12,%rbx */
0x0f, 0x84, 0xbb, 0x01, 0x00, 0x00,       /*293: je     454 <op_enter+0x454> */
0x49, 0x8b, 0x4f, 0x18,                   /*299: mov    0x18(%r15),%rcx */
0x48, 0x8d, 0x69, 0x10,                   /*29d: lea    0x10(%rcx),%rbp */
0x4c, 0x39, 0xe5,                         /*2a1: cmp    %r12,%rbp */
0x0f, 0x86, 0x66, 0x01, 0x00, 0x00,       /*2a4: jbe    410 <op_enter+0x410> */
0x44, 0x89, 0xf6,                         /*2aa: mov    %r14d,%esi */
0x29, 0xc6,                               /*2ad: sub    %eax,%esi */
0x48, 0x63, 0xf6,                         /*2af: movslq %esi,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*2b2: shl    $0x4,%rsi */
0x4c, 0x01, 0xe6,                         /*2b6: add    %r12,%rsi */
0x48, 0x39, 0xf5,                         /*2b9: cmp    %rsi,%rbp */
0x0f, 0x83, 0x4e, 0x01, 0x00, 0x00,       /*2bc: jae    410 <op_enter+0x410> */
0x44, 0x89, 0xf2,                         /*2c2: mov    %r14d,%edx */
0x29, 0xc2,                               /*2c5: sub    %eax,%edx */
0x0f, 0x84, 0x87, 0x01, 0x00, 0x00,       /*2c7: je     454 <op_enter+0x454> */
0x48, 0x63, 0xd2,                         /*2cd: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*2d0: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*2d3: shl    $0x4,%rsi */
0x48, 0x01, 0xf1,                         /*2d7: add    %rsi,%rcx */
0x4a, 0x8d, 0x74, 0x26, 0xf0,             /*2da: lea    -0x10(%rsi,%r12,1),%rsi */
0x48, 0xf7, 0xda,                         /*2df: neg    %rdx */
0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*2e2: data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x3e,                         /*2f0: mov    (%rsi),%rdi */
0x48, 0x8b, 0x6e, 0x08,                   /*2f3: mov    0x8(%rsi),%rbp */
0x48, 0x89, 0x69, 0x08,                   /*2f7: mov    %rbp,0x8(%rcx) */
0x48, 0x89, 0x39,                         /*2fb: mov    %rdi,(%rcx) */
0x48, 0x83, 0xc1, 0xf0,                   /*2fe: add    $0xfffffffffffffff0,%rcx */
0x48, 0x83, 0xc6, 0xf0,                   /*302: add    $0xfffffffffffffff0,%rsi */
0x48, 0xff, 0xc2,                         /*306: inc    %rdx */
0x75, 0xe5,                               /*309: jne    2f0 <op_enter+0x2f0> */
0xe9, 0x44, 0x01, 0x00, 0x00,             /*30b: jmpq   454 <op_enter+0x454> */
0x4c, 0x39, 0xe3,                         /*310: cmp    %r12,%rbx */
0x0f, 0x84, 0x6b, 0x02, 0x00, 0x00,       /*313: je     584 <op_enter+0x584> */
0x49, 0x8b, 0x47, 0x18,                   /*319: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*31d: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*322: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*327: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*32a: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*32d: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*332: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*335: and    $0x1f,%esi */
0x01, 0xd6,                               /*338: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*33a: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*33f: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*342: and    $0x1,%edx */
0x01, 0xf2,                               /*345: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*347: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*34a: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*34d: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*351: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*354: shl    $0x4,%rcx */
0x49, 0x8b, 0x55, 0x00,                   /*358: mov    0x0(%r13),%rdx */
0x49, 0x8b, 0x75, 0x08,                   /*35c: mov    0x8(%r13),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*360: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*365: mov    %rdx,(%rax,%rcx,1) */
0x49, 0x8b, 0x47, 0x18,                   /*369: mov    0x18(%r15),%rax */
0x48, 0x8d, 0x48, 0x10,                   /*36d: lea    0x10(%rax),%rcx */
0x4c, 0x39, 0xe1,                         /*371: cmp    %r12,%rcx */
0x0f, 0x86, 0xa6, 0x01, 0x00, 0x00,       /*374: jbe    520 <op_enter+0x520> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*37a: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*37f: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*384: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*387: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*38a: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*38d: and    $0x1f,%edx */
0x01, 0xf2,                               /*390: add    %esi,%edx */
0x48, 0x63, 0xd2,                         /*392: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*395: shl    $0x4,%rdx */
0x4c, 0x01, 0xe2,                         /*399: add    %r12,%rdx */
0x48, 0x39, 0xd1,                         /*39c: cmp    %rdx,%rcx */
0x0f, 0x83, 0x7b, 0x01, 0x00, 0x00,       /*39f: jae    520 <op_enter+0x520> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3a5: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3aa: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*3af: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*3b2: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*3b5: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*3b8: and    $0x1f,%ecx */
0x01, 0xd1,                               /*3bb: add    %edx,%ecx */
0x0f, 0x84, 0xc1, 0x01, 0x00, 0x00,       /*3bd: je     584 <op_enter+0x584> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3c3: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3c8: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*3cd: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*3d0: and    $0x1f,%edx */
0xc1, 0xe9, 0x0d,                         /*3d3: shr    $0xd,%ecx */
0x83, 0xe1, 0x1f,                         /*3d6: and    $0x1f,%ecx */
0x01, 0xd1,                               /*3d9: add    %edx,%ecx */
0x48, 0x89, 0xca,                         /*3db: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*3de: shl    $0x4,%rdx */
0x48, 0x01, 0xd0,                         /*3e2: add    %rdx,%rax */
0x4a, 0x8d, 0x54, 0x22, 0xf0,             /*3e5: lea    -0x10(%rdx,%r12,1),%rdx */
0x48, 0xf7, 0xd9,                         /*3ea: neg    %rcx */
0x0f, 0x1f, 0x00,                         /*3ed: nopl   (%rax) */
0x48, 0x8b, 0x32,                         /*3f0: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*3f3: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x78, 0x08,                   /*3f7: mov    %rdi,0x8(%rax) */
0x48, 0x89, 0x30,                         /*3fb: mov    %rsi,(%rax) */
0x48, 0x83, 0xc0, 0xf0,                   /*3fe: add    $0xfffffffffffffff0,%rax */
0x48, 0x83, 0xc2, 0xf0,                   /*402: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc1,                         /*406: inc    %rcx */
0x75, 0xe5,                               /*409: jne    3f0 <op_enter+0x3f0> */
0xe9, 0x74, 0x01, 0x00, 0x00,             /*40b: jmpq   584 <op_enter+0x584> */
0x4c, 0x39, 0xe5,                         /*410: cmp    %r12,%rbp */
0x74, 0x3f,                               /*413: je     454 <op_enter+0x454> */
0x44, 0x89, 0xf6,                         /*415: mov    %r14d,%esi */
0x29, 0xc6,                               /*418: sub    %eax,%esi */
0x74, 0x38,                               /*41a: je     454 <op_enter+0x454> */
0x48, 0x63, 0xf6,                         /*41c: movslq %esi,%rsi */
0x48, 0xf7, 0xde,                         /*41f: neg    %rsi */
0x4c, 0x89, 0xe7,                         /*422: mov    %r12,%rdi */
0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*425: data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xea,                         /*430: mov    %rbp,%rdx */
0x48, 0x83, 0xc1, 0x20,                   /*433: add    $0x20,%rcx */
0x48, 0x8b, 0x2f,                         /*437: mov    (%rdi),%rbp */
0x48, 0x8b, 0x5f, 0x08,                   /*43a: mov    0x8(%rdi),%rbx */
0x48, 0x8d, 0x7f, 0x10,                   /*43e: lea    0x10(%rdi),%rdi */
0x48, 0x89, 0x5a, 0x08,                   /*442: mov    %rbx,0x8(%rdx) */
0x48, 0x89, 0x2a,                         /*446: mov    %rbp,(%rdx) */
0x48, 0xff, 0xc6,                         /*449: inc    %rsi */
0x48, 0x89, 0xcd,                         /*44c: mov    %rcx,%rbp */
0x48, 0x89, 0xd1,                         /*44f: mov    %rdx,%rcx */
0x75, 0xdc,                               /*452: jne    430 <op_enter+0x430> */
0x85, 0xc0,                               /*454: test   %eax,%eax */
0x0f, 0x84, 0x1f, 0x03, 0x00, 0x00,       /*456: je     77b <op_enter+0x77b> */
0x49, 0x8b, 0x4f, 0x18,                   /*45c: mov    0x18(%r15),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*460: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*465: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*46a: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*46d: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*470: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*475: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*478: and    $0x1f,%edi */
0x01, 0xf7,                               /*47b: add    %esi,%edi */
0xc1, 0xea, 0x0c,                         /*47d: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*480: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*483: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x63, 0xd2,                         /*487: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*48a: shl    $0x4,%rdx */
0x48, 0x01, 0xca,                         /*48e: add    %rcx,%rdx */
0x44, 0x89, 0xf6,                         /*491: mov    %r14d,%esi */
0x29, 0xc6,                               /*494: sub    %eax,%esi */
0x48, 0x63, 0xf6,                         /*496: movslq %esi,%rsi */
0x48, 0x89, 0xf7,                         /*499: mov    %rsi,%rdi */
0x48, 0xc1, 0xe7, 0x04,                   /*49c: shl    $0x4,%rdi */
0x4c, 0x01, 0xe7,                         /*4a0: add    %r12,%rdi */
0x48, 0x98,                               /*4a3: cltq */
0x48, 0x39, 0xfa,                         /*4a5: cmp    %rdi,%rdx */
0x0f, 0x86, 0xa2, 0x02, 0x00, 0x00,       /*4a8: jbe    750 <op_enter+0x750> */
0x48, 0x01, 0xc6,                         /*4ae: add    %rax,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*4b1: shl    $0x4,%rsi */
0x49, 0x8d, 0x2c, 0x34,                   /*4b5: lea    (%r12,%rsi,1),%rbp */
0x48, 0x39, 0xea,                         /*4b9: cmp    %rbp,%rdx */
0x0f, 0x83, 0x8e, 0x02, 0x00, 0x00,       /*4bc: jae    750 <op_enter+0x750> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4c2: mov    $0x0,%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*4c7: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*4cc: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*4cf: and    $0x1f,%edi */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*4d2: mov    $0x0,%ebp */
0xc1, 0xed, 0x0d,                         /*4d7: shr    $0xd,%ebp */
0x83, 0xe5, 0x1f,                         /*4da: and    $0x1f,%ebp */
0x01, 0xfd,                               /*4dd: add    %edi,%ebp */
0xc1, 0xea, 0x0c,                         /*4df: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*4e2: and    $0x1,%edx */
0x8d, 0x54, 0x2a, 0x01,                   /*4e5: lea    0x1(%rdx,%rbp,1),%edx */
0x48, 0x01, 0xc2,                         /*4e9: add    %rax,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*4ec: shl    $0x4,%rdx */
0x48, 0x8d, 0x4c, 0x0a, 0xf0,             /*4f0: lea    -0x10(%rdx,%rcx,1),%rcx */
0x4a, 0x8d, 0x54, 0x26, 0xf0,             /*4f5: lea    -0x10(%rsi,%r12,1),%rdx */
0x48, 0xf7, 0xd8,                         /*4fa: neg    %rax */
0x0f, 0x1f, 0x00,                         /*4fd: nopl   (%rax) */
0x48, 0x8b, 0x32,                         /*500: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*503: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x79, 0x08,                   /*507: mov    %rdi,0x8(%rcx) */
0x48, 0x89, 0x31,                         /*50b: mov    %rsi,(%rcx) */
0x48, 0x83, 0xc1, 0xf0,                   /*50e: add    $0xfffffffffffffff0,%rcx */
0x48, 0x83, 0xc2, 0xf0,                   /*512: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc0,                         /*516: inc    %rax */
0x75, 0xe5,                               /*519: jne    500 <op_enter+0x500> */
0xe9, 0x5b, 0x02, 0x00, 0x00,             /*51b: jmpq   77b <op_enter+0x77b> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*520: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*525: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*52a: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*52d: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*530: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*533: and    $0x1f,%edx */
0x01, 0xf2,                               /*536: add    %esi,%edx */
0x4c, 0x39, 0xe1,                         /*538: cmp    %r12,%rcx */
0x74, 0x47,                               /*53b: je     584 <op_enter+0x584> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*53d: mov    $0x0,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*542: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*547: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*54a: and    $0x1f,%edi */
0xc1, 0xee, 0x12,                         /*54d: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*550: and    $0x1f,%esi */
0x01, 0xfe,                               /*553: add    %edi,%esi */
0x74, 0x2d,                               /*555: je     584 <op_enter+0x584> */
0x48, 0xf7, 0xda,                         /*557: neg    %rdx */
0x4c, 0x89, 0xe6,                         /*55a: mov    %r12,%rsi */
0x0f, 0x1f, 0x00,                         /*55d: nopl   (%rax) */
0x48, 0x89, 0xcf,                         /*560: mov    %rcx,%rdi */
0x48, 0x83, 0xc0, 0x20,                   /*563: add    $0x20,%rax */
0x48, 0x8b, 0x0e,                         /*567: mov    (%rsi),%rcx */
0x48, 0x8b, 0x6e, 0x08,                   /*56a: mov    0x8(%rsi),%rbp */
0x48, 0x8d, 0x76, 0x10,                   /*56e: lea    0x10(%rsi),%rsi */
0x48, 0x89, 0x6f, 0x08,                   /*572: mov    %rbp,0x8(%rdi) */
0x48, 0x89, 0x0f,                         /*576: mov    %rcx,(%rdi) */
0x48, 0xff, 0xc2,                         /*579: inc    %rdx */
0x48, 0x89, 0xc1,                         /*57c: mov    %rax,%rcx */
0x48, 0x89, 0xf8,                         /*57f: mov    %rdi,%rax */
0x75, 0xdc,                               /*582: jne    560 <op_enter+0x560> */
0x4c, 0x89, 0x64, 0x24, 0x10,             /*584: mov    %r12,0x10(%rsp) */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*589: mov    $0x0,%ebp */
0x0f, 0xba, 0xe5, 0x0c,                   /*58e: bt     $0xc,%ebp */
0x72, 0x21,                               /*592: jb     5b5 <op_enter+0x5b5> */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*594: mov    %rbx,0x8(%rsp) */
0x4c, 0x89, 0x2c, 0x24,                   /*599: mov    %r13,(%rsp) */
0x4d, 0x89, 0xfd,                         /*59d: mov    %r15,%r13 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5a0: mov    $0x0,%eax */
0xc1, 0xe8, 0x0d,                         /*5a5: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*5a8: and    $0x1f,%eax */
0xc1, 0xed, 0x12,                         /*5ab: shr    $0x12,%ebp */
0x83, 0xe5, 0x1f,                         /*5ae: and    $0x1f,%ebp */
0x01, 0xc5,                               /*5b1: add    %eax,%ebp */
0xeb, 0x73,                               /*5b3: jmp    628 <op_enter+0x628> */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*5b5: mov    %rbx,0x8(%rsp) */
0x4c, 0x89, 0x2c, 0x24,                   /*5ba: mov    %r13,(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5be: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5c3: mov    $0x0,%eax */
0xc1, 0xe8, 0x0d,                         /*5c8: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*5cb: and    $0x1f,%eax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5ce: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*5d3: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*5d6: and    $0x1f,%edx */
0x41, 0x89, 0xd4,                         /*5d9: mov    %edx,%r12d */
0x41, 0xf7, 0xdc,                         /*5dc: neg    %r12d */
0x41, 0x29, 0xc4,                         /*5df: sub    %eax,%r12d */
0xc1, 0xe9, 0x07,                         /*5e2: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*5e5: and    $0x1f,%ecx */
0x41, 0x29, 0xcc,                         /*5e8: sub    %ecx,%r12d */
0x43, 0x8d, 0x34, 0x26,                   /*5eb: lea    (%r14,%r12,1),%esi */
0x8d, 0x2c, 0x02,                         /*5ef: lea    (%rdx,%rax,1),%ebp */
0x8d, 0x4c, 0x02, 0x01,                   /*5f2: lea    0x1(%rdx,%rax,1),%ecx */
0x48, 0x63, 0xd9,                         /*5f6: movslq %ecx,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*5f9: shl    $0x4,%rbx */
0x4d, 0x89, 0xfd,                         /*5fd: mov    %r15,%r13 */
0x4d, 0x8b, 0x7d, 0x18,                   /*600: mov    0x18(%r13),%r15 */
0x49, 0x8b, 0x7d, 0x58,                   /*604: mov    0x58(%r13),%rdi */
0x48, 0x01, 0xc2,                         /*608: add    %rax,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*60b: shl    $0x4,%rdx */
0x48, 0x03, 0x54, 0x24, 0x10,             /*60f: add    0x10(%rsp),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*614: callq  619 <op_enter+0x619> */
0x49, 0x89, 0x04, 0x1f,                   /*619: mov    %rax,(%r15,%rbx,1) */
0x41, 0x89, 0x54, 0x1f, 0x08,             /*61d: mov    %edx,0x8(%r15,%rbx,1) */
0x44, 0x01, 0xe5,                         /*622: add    %r12d,%ebp */
0x44, 0x01, 0xf5,                         /*625: add    %r14d,%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*628: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*62d: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*632: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*635: and    $0x1f,%ecx */
0x41, 0x29, 0xce,                         /*638: sub    %ecx,%r14d */
0xc1, 0xe8, 0x12,                         /*63b: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*63e: and    $0x1f,%eax */
0x41, 0x39, 0xc6,                         /*641: cmp    %eax,%r14d */
0x4d, 0x89, 0xef,                         /*644: mov    %r13,%r15 */
0x48, 0x8b, 0x5c, 0x24, 0x10,             /*647: mov    0x10(%rsp),%rbx */
0x0f, 0x8e, 0x19, 0x02, 0x00, 0x00,       /*64c: jle    86b <op_enter+0x86b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*652: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*657: shr    $0x7,%eax */
0xa8, 0x1f,                               /*65a: test   $0x1f,%al */
0x0f, 0x84, 0x09, 0x02, 0x00, 0x00,       /*65c: je     86b <op_enter+0x86b> */
0x49, 0x8b, 0x47, 0x18,                   /*662: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*666: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*66b: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*670: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*673: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*676: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*67b: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*67e: and    $0x1f,%esi */
0x01, 0xd6,                               /*681: add    %edx,%esi */
0xc1, 0xe9, 0x0c,                         /*683: shr    $0xc,%ecx */
0x83, 0xe1, 0x01,                         /*686: and    $0x1,%ecx */
0x8d, 0x4c, 0x31, 0x01,                   /*689: lea    0x1(%rcx,%rsi,1),%ecx */
0x48, 0x63, 0xc9,                         /*68d: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*690: shl    $0x4,%rcx */
0x48, 0x01, 0xc1,                         /*694: add    %rax,%rcx */
0x48, 0x63, 0xd5,                         /*697: movslq %ebp,%rdx */
0x48, 0x89, 0xd6,                         /*69a: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*69d: shl    $0x4,%rsi */
0x48, 0x01, 0xde,                         /*6a1: add    %rbx,%rsi */
0x48, 0x39, 0xf1,                         /*6a4: cmp    %rsi,%rcx */
0x0f, 0x86, 0x7a, 0x01, 0x00, 0x00,       /*6a7: jbe    827 <op_enter+0x827> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*6ad: mov    $0x0,%edi */
0xc1, 0xef, 0x07,                         /*6b2: shr    $0x7,%edi */
0x83, 0xe7, 0x1f,                         /*6b5: and    $0x1f,%edi */
0x48, 0x01, 0xd7,                         /*6b8: add    %rdx,%rdi */
0x48, 0xc1, 0xe7, 0x04,                   /*6bb: shl    $0x4,%rdi */
0x48, 0x01, 0xdf,                         /*6bf: add    %rbx,%rdi */
0x48, 0x39, 0xf9,                         /*6c2: cmp    %rdi,%rcx */
0x0f, 0x83, 0x5c, 0x01, 0x00, 0x00,       /*6c5: jae    827 <op_enter+0x827> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*6cb: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*6d0: shr    $0x7,%ecx */
0xf6, 0xc1, 0x1f,                         /*6d3: test   $0x1f,%cl */
0x0f, 0x84, 0x8f, 0x01, 0x00, 0x00,       /*6d6: je     86b <op_enter+0x86b> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*6dc: mov    $0x0,%ecx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*6e1: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*6e6: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*6e9: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*6ec: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*6f1: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*6f4: and    $0x1f,%edi */
0x01, 0xf7,                               /*6f7: add    %esi,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*6f9: mov    $0x0,%esi */
0xc1, 0xee, 0x0c,                         /*6fe: shr    $0xc,%esi */
0x83, 0xe6, 0x01,                         /*701: and    $0x1,%esi */
0x8d, 0x74, 0x3e, 0x01,                   /*704: lea    0x1(%rsi,%rdi,1),%esi */
0xc1, 0xe9, 0x07,                         /*708: shr    $0x7,%ecx */
0x48, 0x83, 0xe1, 0x1f,                   /*70b: and    $0x1f,%rcx */
0x48, 0x01, 0xce,                         /*70f: add    %rcx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*712: shl    $0x4,%rsi */
0x48, 0x8d, 0x44, 0x06, 0xf0,             /*716: lea    -0x10(%rsi,%rax,1),%rax */
0x48, 0x01, 0xca,                         /*71b: add    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*71e: shl    $0x4,%rdx */
0x48, 0x8d, 0x54, 0x1a, 0xf0,             /*722: lea    -0x10(%rdx,%rbx,1),%rdx */
0x48, 0xf7, 0xd9,                         /*727: neg    %rcx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*72a: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x32,                         /*730: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*733: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x78, 0x08,                   /*737: mov    %rdi,0x8(%rax) */
0x48, 0x89, 0x30,                         /*73b: mov    %rsi,(%rax) */
0x48, 0x83, 0xc0, 0xf0,                   /*73e: add    $0xfffffffffffffff0,%rax */
0x48, 0x83, 0xc2, 0xf0,                   /*742: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc1,                         /*746: inc    %rcx */
0x75, 0xe5,                               /*749: jne    730 <op_enter+0x730> */
0xe9, 0x1b, 0x01, 0x00, 0x00,             /*74b: jmpq   86b <op_enter+0x86b> */
0x48, 0x39, 0xfa,                         /*750: cmp    %rdi,%rdx */
0x74, 0x26,                               /*753: je     77b <op_enter+0x77b> */
0x48, 0xf7, 0xd8,                         /*755: neg    %rax */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*758: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x0f,                         /*760: mov    (%rdi),%rcx */
0x48, 0x8b, 0x77, 0x08,                   /*763: mov    0x8(%rdi),%rsi */
0x48, 0x8d, 0x7f, 0x10,                   /*767: lea    0x10(%rdi),%rdi */
0x48, 0x89, 0x72, 0x08,                   /*76b: mov    %rsi,0x8(%rdx) */
0x48, 0x89, 0x0a,                         /*76f: mov    %rcx,(%rdx) */
0x48, 0x8d, 0x52, 0x10,                   /*772: lea    0x10(%rdx),%rdx */
0x48, 0xff, 0xc0,                         /*776: inc    %rax */
0x75, 0xe5,                               /*779: jne    760 <op_enter+0x760> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*77b: mov    $0x0,%eax */
0x0f, 0xba, 0xe0, 0x0c,                   /*780: bt     $0xc,%eax */
0x73, 0x39,                               /*784: jae    7bf <op_enter+0x7bf> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*786: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*78b: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*790: shr    $0xd,%ecx */
0x83, 0xe1, 0x1f,                         /*793: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*796: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*799: and    $0x1f,%eax */
0x8d, 0x44, 0x08, 0x01,                   /*79c: lea    0x1(%rax,%rcx,1),%eax */
0x48, 0x63, 0xd8,                         /*7a0: movslq %eax,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*7a3: shl    $0x4,%rbx */
0x49, 0x8b, 0x6f, 0x18,                   /*7a7: mov    0x18(%r15),%rbp */
0x49, 0x8b, 0x7f, 0x58,                   /*7ab: mov    0x58(%r15),%rdi */
0x31, 0xf6,                               /*7af: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7b1: callq  7b6 <op_enter+0x7b6> */
0x48, 0x89, 0x44, 0x1d, 0x00,             /*7b6: mov    %rax,0x0(%rbp,%rbx,1) */
0x89, 0x54, 0x1d, 0x08,                   /*7bb: mov    %edx,0x8(%rbp,%rbx,1) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7bf: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7c4: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*7c9: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*7cc: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*7cf: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*7d2: and    $0x1f,%eax */
0x01, 0xc8,                               /*7d5: add    %ecx,%eax */
0x41, 0x39, 0xc6,                         /*7d7: cmp    %eax,%r14d */
0x49, 0x8b, 0x47, 0x08,                   /*7da: mov    0x8(%r15),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*7de: mov    0xa8(%rax),%rcx */
0x0f, 0x8c, 0x08, 0x01, 0x00, 0x00,       /*7e5: jl     8f3 <op_enter+0x8f3> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7eb: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*7f0: shr    $0xd,%edx */
0xf6, 0xc2, 0x1f,                         /*7f3: test   $0x1f,%dl */
0x0f, 0x84, 0xf7, 0x00, 0x00, 0x00,       /*7f6: je     8f3 <op_enter+0x8f3> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7fc: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*801: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*806: shr    $0x7,%esi */
0x83, 0xe6, 0x1f,                         /*809: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*80c: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*80f: and    $0x1f,%edx */
0xf7, 0xda,                               /*812: neg    %edx */
0x29, 0xf2,                               /*814: sub    %esi,%edx */
0x42, 0x8d, 0x54, 0x32, 0x01,             /*816: lea    0x1(%rdx,%r14,1),%edx */
0x48, 0x63, 0xd2,                         /*81b: movslq %edx,%rdx */
0x48, 0x8d, 0x0c, 0x91,                   /*81e: lea    (%rcx,%rdx,4),%rcx */
0xe9, 0xd0, 0x00, 0x00, 0x00,             /*822: jmpq   8f7 <op_enter+0x8f7> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*827: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*82c: shr    $0x7,%eax */
0x48, 0x39, 0xf1,                         /*82f: cmp    %rsi,%rcx */
0x74, 0x37,                               /*832: je     86b <op_enter+0x86b> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*834: mov    $0x0,%edx */
0xc1, 0xea, 0x07,                         /*839: shr    $0x7,%edx */
0xf6, 0xc2, 0x1f,                         /*83c: test   $0x1f,%dl */
0x74, 0x2a,                               /*83f: je     86b <op_enter+0x86b> */
0x48, 0x83, 0xe0, 0x1f,                   /*841: and    $0x1f,%rax */
0x48, 0xf7, 0xd8,                         /*845: neg    %rax */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*848: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x16,                         /*850: mov    (%rsi),%rdx */
0x48, 0x8b, 0x7e, 0x08,                   /*853: mov    0x8(%rsi),%rdi */
0x48, 0x8d, 0x76, 0x10,                   /*857: lea    0x10(%rsi),%rsi */
0x48, 0x89, 0x79, 0x08,                   /*85b: mov    %rdi,0x8(%rcx) */
0x48, 0x89, 0x11,                         /*85f: mov    %rdx,(%rcx) */
0x48, 0x8d, 0x49, 0x10,                   /*862: lea    0x10(%rcx),%rcx */
0x48, 0xff, 0xc0,                         /*866: inc    %rax */
0x75, 0xe5,                               /*869: jne    850 <op_enter+0x850> */
0x48, 0x39, 0x5c, 0x24, 0x08,             /*86b: cmp    %rbx,0x8(%rsp) */
0x75, 0x53,                               /*870: jne    8c5 <op_enter+0x8c5> */
0x49, 0x8b, 0x47, 0x18,                   /*872: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*876: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*87b: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*880: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*883: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*886: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*88b: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*88e: and    $0x1f,%esi */
0x01, 0xd6,                               /*891: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*893: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*898: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*89b: and    $0x1,%edx */
0x01, 0xf2,                               /*89e: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*8a0: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*8a3: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*8a6: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*8aa: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*8ad: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x24,                   /*8b1: mov    (%rsp),%rsi */
0x48, 0x8b, 0x16,                         /*8b5: mov    (%rsi),%rdx */
0x48, 0x8b, 0x76, 0x08,                   /*8b8: mov    0x8(%rsi),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*8bc: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*8c1: mov    %rdx,(%rax,%rcx,1) */
0x49, 0x8b, 0x47, 0x08,                   /*8c5: mov    0x8(%r15),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*8c9: mov    0xa8(%rax),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8d0: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*8d5: shr    $0xd,%edx */
0xf6, 0xc2, 0x1f,                         /*8d8: test   $0x1f,%dl */
0x7e, 0x16,                               /*8db: jle    8f3 <op_enter+0x8f3> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8dd: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*8e2: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*8e5: and    $0x1f,%edx */
0xff, 0xc2,                               /*8e8: inc    %edx */
0x48, 0x63, 0xd2,                         /*8ea: movslq %edx,%rdx */
0x48, 0x8d, 0x0c, 0x91,                   /*8ed: lea    (%rcx,%rdx,4),%rcx */
0xeb, 0x04,                               /*8f1: jmp    8f7 <op_enter+0x8f7> */
0x48, 0x83, 0xc1, 0x04,                   /*8f3: add    $0x4,%rcx */
0x0f, 0xb7, 0x31,                         /*8f7: movzwl (%rcx),%esi */
0x48, 0x03, 0xb0, 0xc0, 0x00, 0x00, 0x00, /*8fa: add    0xc0(%rax),%rsi */
0x4c, 0x89, 0xff,                         /*901: mov    %r15,%rdi */
0x48, 0x83, 0xc4, 0x18,                   /*904: add    $0x18,%rsp */
0x5b,                                     /*908: pop    %rbx */
0x41, 0x5c,                               /*909: pop    %r12 */
0x41, 0x5d,                               /*90b: pop    %r13 */
0x41, 0x5e,                               /*90d: pop    %r14 */
0x41, 0x5f,                               /*90f: pop    %r15 */
0x5d,                                     /*911: pop    %rbp */
0xff, 0xe6,                               /*912: jmpq   *%rsi */

};
static uint8_t op_enter__rodata[] = {
0x50, 0x72, 0x6f, 0x63, 0x00, 0x74, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x00,

};

static void op_enter_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_enter_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_enter_set_args(op, GETARG_Ax(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_enter_method_m__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x55,                               /*4: push   %r13 */
0x41, 0x54,                               /*6: push   %r12 */
0x53,                                     /*8: push   %rbx */
0x49, 0x89, 0xfe,                         /*9: mov    %rdi,%r14 */
0x4d, 0x8b, 0x7e, 0x18,                   /*c: mov    0x18(%r14),%r15 */
0x49, 0x8b, 0x7e, 0x58,                   /*10: mov    0x58(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*14: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*18: mov    0x20(%rax),%rax */
0x48, 0x63, 0x58, 0x40,                   /*1c: movslq 0x40(%rax),%rbx */
0x48, 0x8d, 0x4b, 0x01,                   /*20: lea    0x1(%rbx),%rcx */
0x48, 0x85, 0xdb,                         /*24: test   %rbx,%rbx */
0xb8, 0x02, 0x00, 0x00, 0x00,             /*27: mov    $0x2,%eax */
0x48, 0x0f, 0x49, 0xc1,                   /*2c: cmovns %rcx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*30: shl    $0x4,%rax */
0x4d, 0x8d, 0x24, 0x07,                   /*34: lea    (%r15,%rax,1),%r12 */
0x41, 0x8b, 0x54, 0x07, 0x08,             /*38: mov    0x8(%r15,%rax,1),%edx */
0x85, 0xd2,                               /*3d: test   %edx,%edx */
0x75, 0x0b,                               /*3f: jne    4c <op_enter_method_m+0x4c> */
0x41, 0x83, 0x3c, 0x24, 0x00,             /*41: cmpl   $0x0,(%r12) */
0x0f, 0x84, 0xac, 0x01, 0x00, 0x00,       /*46: je     1f8 <op_enter_method_m+0x1f8> */
0x83, 0xfa, 0x0d,                         /*4c: cmp    $0xd,%edx */
0x0f, 0x95, 0xc1,                         /*4f: setne  %cl */
0x84, 0xc9,                               /*52: test   %cl,%cl */
0x74, 0x27,                               /*54: je     7d <op_enter_method_m+0x7d> */
0x4d, 0x8d, 0x6c, 0x07, 0x08,             /*56: lea    0x8(%r15,%rax,1),%r13 */
0x49, 0x8b, 0x34, 0x24,                   /*5b: mov    (%r12),%rsi */
0xb9, 0x0d, 0x00, 0x00, 0x00,             /*5f: mov    $0xd,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*64: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*6a: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*70: callq  75 <op_enter_method_m+0x75> */
0x49, 0x89, 0x04, 0x24,                   /*75: mov    %rax,(%r12) */
0x41, 0x89, 0x55, 0x00,                   /*79: mov    %edx,0x0(%r13) */
0x49, 0x83, 0xc7, 0x10,                   /*7d: add    $0x10,%r15 */
0x85, 0xdb,                               /*81: test   %ebx,%ebx */
0x78, 0x33,                               /*83: js     b8 <op_enter_method_m+0xb8> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*85: mov    $0x0,%eax */
0xc1, 0xe8, 0x12,                         /*8a: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*8d: and    $0x1f,%eax */
0x39, 0xc3,                               /*90: cmp    %eax,%ebx */
0x4c, 0x89, 0xfb,                         /*92: mov    %r15,%rbx */
0x7d, 0x39,                               /*95: jge    d0 <op_enter_method_m+0xd0> */
0x49, 0x8b, 0x7e, 0x58,                   /*97: mov    0x58(%r14),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*9b: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*a0: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*a3: and    $0x1f,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a6: callq  ab <op_enter_method_m+0xab> */
0x4c, 0x89, 0xf7,                         /*ab: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ae: callq  b3 <op_enter_method_m+0xb3> */
0xe9, 0x35, 0x01, 0x00, 0x00,             /*b3: jmpq   1ed <op_enter_method_m+0x1ed> */
0x49, 0x8b, 0x46, 0x18,                   /*b8: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x7e, 0x58,                   /*bc: mov    0x58(%r14),%rdi */
0x48, 0x8b, 0x70, 0x10,                   /*c0: mov    0x10(%rax),%rsi */
0x48, 0x8b, 0x5e, 0x28,                   /*c4: mov    0x28(%rsi),%rbx */
0x8b, 0x50, 0x18,                         /*c8: mov    0x18(%rax),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*cb: callq  d0 <op_enter_method_m+0xd0> */
0x49, 0x8b, 0x46, 0x58,                   /*d0: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*d4: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*d8: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*dc: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*e1: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*e4: and    $0x1f,%ecx */
0x89, 0x48, 0x40,                         /*e7: mov    %ecx,0x40(%rax) */
0x49, 0x8b, 0x46, 0x18,                   /*ea: mov    0x18(%r14),%rax */
0xff, 0xc1,                               /*ee: inc    %ecx */
0x48, 0x63, 0xc9,                         /*f0: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f3: shl    $0x4,%rcx */
0x49, 0x8b, 0x14, 0x24,                   /*f7: mov    (%r12),%rdx */
0x49, 0x8b, 0x74, 0x24, 0x08,             /*fb: mov    0x8(%r12),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*100: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*105: mov    %rdx,(%rax,%rcx,1) */
0x49, 0x39, 0xdf,                         /*109: cmp    %rbx,%r15 */
0x0f, 0x84, 0xc2, 0x00, 0x00, 0x00,       /*10c: je     1d4 <op_enter_method_m+0x1d4> */
0x49, 0x8b, 0x46, 0x18,                   /*112: mov    0x18(%r14),%rax */
0x48, 0x8d, 0x48, 0x10,                   /*116: lea    0x10(%rax),%rcx */
0x48, 0x39, 0xd9,                         /*11a: cmp    %rbx,%rcx */
0x76, 0x6e,                               /*11d: jbe    18d <op_enter_method_m+0x18d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*11f: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*124: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*127: and    $0x1f,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*12a: shl    $0x4,%rdx */
0x48, 0x01, 0xda,                         /*12e: add    %rbx,%rdx */
0x48, 0x39, 0xd1,                         /*131: cmp    %rdx,%rcx */
0x73, 0x57,                               /*134: jae    18d <op_enter_method_m+0x18d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*136: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*13b: shr    $0x12,%ecx */
0xf6, 0xc1, 0x1f,                         /*13e: test   $0x1f,%cl */
0x0f, 0x84, 0x8d, 0x00, 0x00, 0x00,       /*141: je     1d4 <op_enter_method_m+0x1d4> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*147: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*14c: shr    $0x12,%ecx */
0x48, 0x83, 0xe1, 0x1f,                   /*14f: and    $0x1f,%rcx */
0x48, 0x89, 0xca,                         /*153: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*156: shl    $0x4,%rdx */
0x48, 0x01, 0xd0,                         /*15a: add    %rdx,%rax */
0x48, 0x8d, 0x54, 0x1a, 0xf0,             /*15d: lea    -0x10(%rdx,%rbx,1),%rdx */
0x48, 0xf7, 0xd9,                         /*162: neg    %rcx */
0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*165: data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x32,                         /*170: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*173: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x78, 0x08,                   /*177: mov    %rdi,0x8(%rax) */
0x48, 0x89, 0x30,                         /*17b: mov    %rsi,(%rax) */
0x48, 0x83, 0xc0, 0xf0,                   /*17e: add    $0xfffffffffffffff0,%rax */
0x48, 0x83, 0xc2, 0xf0,                   /*182: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc1,                         /*186: inc    %rcx */
0x75, 0xe5,                               /*189: jne    170 <op_enter_method_m+0x170> */
0xeb, 0x47,                               /*18b: jmp    1d4 <op_enter_method_m+0x1d4> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18d: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*192: shr    $0x12,%edx */
0x48, 0x39, 0xd9,                         /*195: cmp    %rbx,%rcx */
0x74, 0x3a,                               /*198: je     1d4 <op_enter_method_m+0x1d4> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*19a: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*19f: shr    $0x12,%esi */
0x40, 0xf6, 0xc6, 0x1f,                   /*1a2: test   $0x1f,%sil */
0x74, 0x2c,                               /*1a6: je     1d4 <op_enter_method_m+0x1d4> */
0x48, 0x83, 0xe2, 0x1f,                   /*1a8: and    $0x1f,%rdx */
0x48, 0xf7, 0xda,                         /*1ac: neg    %rdx */
0x90,                                     /*1af: nop */
0x48, 0x89, 0xce,                         /*1b0: mov    %rcx,%rsi */
0x48, 0x83, 0xc0, 0x20,                   /*1b3: add    $0x20,%rax */
0x48, 0x8b, 0x0b,                         /*1b7: mov    (%rbx),%rcx */
0x48, 0x8b, 0x7b, 0x08,                   /*1ba: mov    0x8(%rbx),%rdi */
0x48, 0x8d, 0x5b, 0x10,                   /*1be: lea    0x10(%rbx),%rbx */
0x48, 0x89, 0x7e, 0x08,                   /*1c2: mov    %rdi,0x8(%rsi) */
0x48, 0x89, 0x0e,                         /*1c6: mov    %rcx,(%rsi) */
0x48, 0xff, 0xc2,                         /*1c9: inc    %rdx */
0x48, 0x89, 0xc1,                         /*1cc: mov    %rax,%rcx */
0x48, 0x89, 0xf0,                         /*1cf: mov    %rsi,%rax */
0x75, 0xdc,                               /*1d2: jne    1b0 <op_enter_method_m+0x1b0> */
0x49, 0x8b, 0x46, 0x08,                   /*1d4: mov    0x8(%r14),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*1d8: mov    0xa8(%rax),%rcx */
0x0f, 0xb7, 0x71, 0x04,                   /*1df: movzwl 0x4(%rcx),%esi */
0x48, 0x03, 0xb0, 0xc0, 0x00, 0x00, 0x00, /*1e3: add    0xc0(%rax),%rsi */
0x4c, 0x89, 0xf7,                         /*1ea: mov    %r14,%rdi */
0x5b,                                     /*1ed: pop    %rbx */
0x41, 0x5c,                               /*1ee: pop    %r12 */
0x41, 0x5d,                               /*1f0: pop    %r13 */
0x41, 0x5e,                               /*1f2: pop    %r14 */
0x41, 0x5f,                               /*1f4: pop    %r15 */
0xeb, 0x09,                               /*1f6: jmp    201 <_str_const_to_proc24682468+0x1fc> */
0x31, 0xc9,                               /*1f8: xor    %ecx,%ecx */
0xe9, 0x53, 0xfe, 0xff, 0xff,             /*1fa: jmpq   52 <op_enter_method_m+0x52> */
0xff, 0xe6,                               /*1ff: jmpq   *%rsi */

};
static uint8_t op_enter_method_m__rodata[] = {
0x50, 0x72, 0x6f, 0x63, 0x00, 0x74, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x00,

};

static void op_enter_method_m_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_enter_method_m_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_enter_method_m_set_args(op, GETARG_Ax(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_karg__text[] = {

};
static uint8_t op_karg__rodata[] = {

};

static void op_karg_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_karg_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_karg_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_kdict__text[] = {

};
static uint8_t op_kdict__rodata[] = {

};

static void op_kdict_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_kdict_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_kdict_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_return__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x48, 0x83, 0xe4, 0xf0,                   /*4: and    $0xfffffffffffffff0,%rsp */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%esi */
0x31, 0xd2,                               /*d: xor    %edx,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*f: callq  14 <op_return+0x14> */
0x48, 0x89, 0xec,                         /*14: mov    %rbp,%rsp */
0x5d,                                     /*17: pop    %rbp */
0xc3,                                     /*18: retq */

};
static uint8_t op_return__rodata[] = {

};

static void op_return_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_return_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_return_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_break__text[] = {
0xbe, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5: mov    $0x0,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a: callq  f <op_break+0xf> */
0xc3,                                     /*f: retq */

};
static uint8_t op_break__rodata[] = {

};

static void op_break_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_break_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_break_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_tailcall__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*a: sub    $0x18,%rsp */
0x49, 0x89, 0xfd,                         /*e: mov    %rdi,%r13 */
0x4d, 0x8b, 0x75, 0x58,                   /*11: mov    0x58(%r13),%r14 */
0x49, 0x8b, 0x45, 0x18,                   /*15: mov    0x18(%r13),%rax */
0x49, 0x8b, 0x4d, 0x28,                   /*19: mov    0x28(%r13),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%edx */
0x8b, 0x1c, 0x91,                         /*22: mov    (%rcx,%rdx,4),%ebx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*25: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*2a: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*2d: shl    $0x4,%rcx */
0x48, 0x8b, 0x2c, 0x08,                   /*31: mov    (%rax,%rcx,1),%rbp */
0x8b, 0x4c, 0x08, 0x08,                   /*35: mov    0x8(%rax,%rcx,1),%ecx */
0x31, 0xc0,                               /*39: xor    %eax,%eax */
0x83, 0xf9, 0x13,                         /*3b: cmp    $0x13,%ecx */
0x7f, 0x23,                               /*3e: jg     63 <op_tailcall+0x63> */
0x89, 0xc8,                               /*40: mov    %ecx,%eax */
0x83, 0xf9, 0x07,                         /*42: cmp    $0x7,%ecx */
0x89, 0x4c, 0x24, 0x0c,                   /*45: mov    %ecx,0xc(%rsp) */
0x77, 0x21,                               /*49: ja     6c <op_tailcall+0x6c> */
0xff, 0x24, 0xc5, 0x00, 0x00, 0x00, 0x00, /*4b: jmpq   *0x0(,%rax,8) */
0x85, 0xed,                               /*52: test   %ebp,%ebp */
0x0f, 0x84, 0xc2, 0x03, 0x00, 0x00,       /*54: je     41c <op_tailcall+0x41c> */
0x49, 0x8b, 0x86, 0x90, 0x00, 0x00, 0x00, /*5a: mov    0x90(%r14),%rax */
0xeb, 0x0d,                               /*61: jmp    70 <op_tailcall+0x70> */
0x83, 0xf9, 0x14,                         /*63: cmp    $0x14,%ecx */
0x89, 0x4c, 0x24, 0x0c,                   /*66: mov    %ecx,0xc(%rsp) */
0x74, 0x04,                               /*6a: je     70 <op_tailcall+0x70> */
0x48, 0x8b, 0x45, 0x08,                   /*6c: mov    0x8(%rbp),%rax */
0x48, 0x89, 0x44, 0x24, 0x10,             /*70: mov    %rax,0x10(%rsp) */
0x49, 0x8b, 0x4d, 0x00,                   /*75: mov    0x0(%r13),%rcx */
0x48, 0x39, 0x41, 0x38,                   /*79: cmp    %rax,0x38(%rcx) */
0x75, 0x07,                               /*7d: jne    86 <op_tailcall+0x86> */
0x31, 0xd2,                               /*7f: xor    %edx,%edx */
0x39, 0x59, 0x30,                         /*81: cmp    %ebx,0x30(%rcx) */
0x74, 0x30,                               /*84: je     b6 <op_tailcall+0xb6> */
0x48, 0x39, 0x41, 0x48,                   /*86: cmp    %rax,0x48(%rcx) */
0x75, 0x0a,                               /*8a: jne    96 <op_tailcall+0x96> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*8c: mov    $0x1,%edx */
0x39, 0x59, 0x40,                         /*91: cmp    %ebx,0x40(%rcx) */
0x74, 0x20,                               /*94: je     b6 <op_tailcall+0xb6> */
0x48, 0x39, 0x41, 0x58,                   /*96: cmp    %rax,0x58(%rcx) */
0x75, 0x0a,                               /*9a: jne    a6 <op_tailcall+0xa6> */
0xba, 0x02, 0x00, 0x00, 0x00,             /*9c: mov    $0x2,%edx */
0x39, 0x59, 0x50,                         /*a1: cmp    %ebx,0x50(%rcx) */
0x74, 0x10,                               /*a4: je     b6 <op_tailcall+0xb6> */
0x48, 0x39, 0x41, 0x68,                   /*a6: cmp    %rax,0x68(%rcx) */
0x75, 0x14,                               /*aa: jne    c0 <op_tailcall+0xc0> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*ac: mov    $0x3,%edx */
0x39, 0x59, 0x60,                         /*b1: cmp    %ebx,0x60(%rcx) */
0x75, 0x0a,                               /*b4: jne    c0 <op_tailcall+0xc0> */
0x4c, 0x8b, 0xa4, 0xd1, 0x90, 0x00, 0x00, 0x00,/*b6: mov    0x90(%rcx,%rdx,8),%r12 */
0xeb, 0x12,                               /*be: jmp    d2 <op_tailcall+0xd2> */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*c0: lea    0x10(%rsp),%rsi */
0x4c, 0x89, 0xf7,                         /*c5: mov    %r14,%rdi */
0x89, 0xda,                               /*c8: mov    %ebx,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ca: callq  cf <op_tailcall+0xcf> */
0x49, 0x89, 0xc4,                         /*cf: mov    %rax,%r12 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*d2: mov    $0x0,%ecx */
0x4d, 0x85, 0xe4,                         /*d7: test   %r12,%r12 */
0x74, 0x0c,                               /*da: je     e8 <op_tailcall+0xe8> */
0x48, 0x89, 0x2c, 0x24,                   /*dc: mov    %rbp,(%rsp) */
0x41, 0x89, 0xdf,                         /*e0: mov    %ebx,%r15d */
0xe9, 0x65, 0x01, 0x00, 0x00,             /*e3: jmpq   24d <op_tailcall+0x24d> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*e8: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*ed: mov    $0xe,%edx */
0x4c, 0x89, 0xf7,                         /*f2: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*f5: callq  fa <op_tailcall+0xfa> */
0x41, 0x89, 0xc7,                         /*fa: mov    %eax,%r15d */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*fd: lea    0x10(%rsp),%rsi */
0x4c, 0x89, 0xf7,                         /*102: mov    %r14,%rdi */
0x44, 0x89, 0xfa,                         /*105: mov    %r15d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*108: callq  10d <op_tailcall+0x10d> */
0x49, 0x89, 0xc4,                         /*10d: mov    %rax,%r12 */
0x49, 0x8b, 0x45, 0x18,                   /*110: mov    0x18(%r13),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*114: mov    $0x0,%ecx */
0x83, 0xf9, 0x7f,                         /*119: cmp    $0x7f,%ecx */
0x75, 0x35,                               /*11c: jne    153 <op_tailcall+0x153> */
0x48, 0x89, 0x2c, 0x24,                   /*11e: mov    %rbp,(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*122: mov    $0x0,%ecx */
0xff, 0xc1,                               /*127: inc    %ecx */
0x48, 0x63, 0xc9,                         /*129: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*12c: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x08,                   /*130: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*134: mov    0x8(%rax,%rcx,1),%edx */
0x41, 0xb8, 0x04, 0x00, 0x00, 0x00,       /*138: mov    $0x4,%r8d */
0x4c, 0x89, 0xf7,                         /*13e: mov    %r14,%rdi */
0x48, 0x89, 0xd9,                         /*141: mov    %rbx,%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*144: callq  149 <op_tailcall+0x149> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*149: mov    $0x0,%ecx */
0xe9, 0xfa, 0x00, 0x00, 0x00,             /*14e: jmpq   24d <op_tailcall+0x24d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*153: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*158: movslq %ecx,%rcx */
0x48, 0x8d, 0x51, 0x01,                   /*15b: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*15f: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*163: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*166: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*169: mov    $0x0,%edi */
0xff, 0xc7,                               /*16e: inc    %edi */
0x48, 0x63, 0xff,                         /*170: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*173: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*178: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*17b: setge  %cl */
0x08, 0xd1,                               /*17e: or     %dl,%cl */
0x74, 0x58,                               /*180: je     1da <op_tailcall+0x1da> */
0x48, 0x89, 0x2c, 0x24,                   /*182: mov    %rbp,(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*186: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*18b: cmp    $0xffffffff,%ecx */
0x0f, 0x84, 0x94, 0x00, 0x00, 0x00,       /*18e: je     228 <op_tailcall+0x228> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*194: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*199: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*19c: shl    $0x4,%rcx */
0x48, 0x8d, 0x44, 0x01, 0x20,             /*1a0: lea    0x20(%rcx,%rax,1),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a5: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1aa: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1ac: movslq %ecx,%rcx */
0x48, 0xf7, 0xd9,                         /*1af: neg    %rcx */
0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1b2: data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x50, 0xf0,                   /*1c0: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*1c4: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*1c8: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*1cc: mov    %rdx,(%rax) */
0x48, 0x83, 0xc0, 0x10,                   /*1cf: add    $0x10,%rax */
0x48, 0xff, 0xc1,                         /*1d3: inc    %rcx */
0x75, 0xe8,                               /*1d6: jne    1c0 <op_tailcall+0x1c0> */
0xeb, 0x4e,                               /*1d8: jmp    228 <op_tailcall+0x228> */
0x48, 0x89, 0x2c, 0x24,                   /*1da: mov    %rbp,(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1de: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*1e3: cmp    $0xffffffff,%ecx */
0x74, 0x40,                               /*1e6: je     228 <op_tailcall+0x228> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1e8: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*1ed: movslq %ecx,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1f0: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1f5: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1f7: movslq %ecx,%rcx */
0x48, 0x01, 0xca,                         /*1fa: add    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*1fd: shl    $0x4,%rdx */
0x48, 0x8d, 0x44, 0x02, 0x10,             /*201: lea    0x10(%rdx,%rax,1),%rax */
0x48, 0xf7, 0xd9,                         /*206: neg    %rcx */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*209: nopl   0x0(%rax) */
0x48, 0x8b, 0x50, 0xf0,                   /*210: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*214: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*218: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*21c: mov    %rdx,(%rax) */
0x48, 0x8d, 0x40, 0xf0,                   /*21f: lea    -0x10(%rax),%rax */
0x48, 0xff, 0xc1,                         /*223: inc    %rcx */
0x75, 0xe8,                               /*226: jne    210 <op_tailcall+0x210> */
0x49, 0x8b, 0x45, 0x18,                   /*228: mov    0x18(%r13),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*22c: mov    $0x0,%ecx */
0xff, 0xc1,                               /*231: inc    %ecx */
0x48, 0x63, 0xc9,                         /*233: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*236: shl    $0x4,%rcx */
0x48, 0x89, 0x1c, 0x08,                   /*23a: mov    %rbx,(%rax,%rcx,1) */
0xc7, 0x44, 0x08, 0x08, 0x04, 0x00, 0x00, 0x00,/*23e: movl   $0x4,0x8(%rax,%rcx,1) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*246: mov    $0x0,%ecx */
0xff, 0xc1,                               /*24b: inc    %ecx */
0x49, 0x8b, 0x46, 0x18,                   /*24d: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*251: mov    0x20(%rax),%rax */
0x44, 0x89, 0x38,                         /*255: mov    %r15d,(%rax) */
0x48, 0x8b, 0x54, 0x24, 0x10,             /*258: mov    0x10(%rsp),%rdx */
0x48, 0x89, 0x50, 0x48,                   /*25d: mov    %rdx,0x48(%rax) */
0x83, 0xf9, 0x7f,                         /*261: cmp    $0x7f,%ecx */
0xbd, 0xff, 0xff, 0xff, 0xff,             /*264: mov    $0xffffffff,%ebp */
0x0f, 0x45, 0xe9,                         /*269: cmovne %ecx,%ebp */
0x89, 0x68, 0x40,                         /*26c: mov    %ebp,0x40(%rax) */
0x49, 0x8b, 0x4e, 0x18,                   /*26f: mov    0x18(%r14),%rcx */
0x48, 0x8b, 0x51, 0x08,                   /*273: mov    0x8(%rcx),%rdx */
0x49, 0x8b, 0x7d, 0x18,                   /*277: mov    0x18(%r13),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*27b: mov    $0x0,%ecx */
0x48, 0x63, 0xf1,                         /*280: movslq %ecx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*283: shl    $0x4,%rsi */
0x48, 0x01, 0xfe,                         /*287: add    %rdi,%rsi */
0xff, 0xc5,                               /*28a: inc    %ebp */
0x48, 0x63, 0xcd,                         /*28c: movslq %ebp,%rcx */
0x48, 0x39, 0xf2,                         /*28f: cmp    %rsi,%rdx */
0x76, 0x69,                               /*292: jbe    2fd <op_tailcall+0x2fd> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*294: mov    $0x0,%ebx */
0x48, 0x63, 0xdb,                         /*299: movslq %ebx,%rbx */
0x48, 0x01, 0xcb,                         /*29c: add    %rcx,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*29f: shl    $0x4,%rbx */
0x48, 0x01, 0xfb,                         /*2a3: add    %rdi,%rbx */
0x48, 0x39, 0xda,                         /*2a6: cmp    %rbx,%rdx */
0x73, 0x52,                               /*2a9: jae    2fd <op_tailcall+0x2fd> */
0x85, 0xed,                               /*2ab: test   %ebp,%ebp */
0x74, 0x7c,                               /*2ad: je     32b <op_tailcall+0x32b> */
0x48, 0x89, 0xce,                         /*2af: mov    %rcx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*2b2: shl    $0x4,%rsi */
0x48, 0x8d, 0x54, 0x16, 0xf0,             /*2b6: lea    -0x10(%rsi,%rdx,1),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2bb: mov    $0x0,%esi */
0x48, 0x63, 0xf6,                         /*2c0: movslq %esi,%rsi */
0x48, 0x01, 0xce,                         /*2c3: add    %rcx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*2c6: shl    $0x4,%rsi */
0x48, 0x8d, 0x74, 0x3e, 0xf0,             /*2ca: lea    -0x10(%rsi,%rdi,1),%rsi */
0x48, 0xf7, 0xd9,                         /*2cf: neg    %rcx */
0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*2d2: data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x3e,                         /*2e0: mov    (%rsi),%rdi */
0x48, 0x8b, 0x6e, 0x08,                   /*2e3: mov    0x8(%rsi),%rbp */
0x48, 0x89, 0x6a, 0x08,                   /*2e7: mov    %rbp,0x8(%rdx) */
0x48, 0x89, 0x3a,                         /*2eb: mov    %rdi,(%rdx) */
0x48, 0x83, 0xc2, 0xf0,                   /*2ee: add    $0xfffffffffffffff0,%rdx */
0x48, 0x83, 0xc6, 0xf0,                   /*2f2: add    $0xfffffffffffffff0,%rsi */
0x48, 0xff, 0xc1,                         /*2f6: inc    %rcx */
0x75, 0xe5,                               /*2f9: jne    2e0 <op_tailcall+0x2e0> */
0xeb, 0x2e,                               /*2fb: jmp    32b <op_tailcall+0x32b> */
0x48, 0x39, 0xf2,                         /*2fd: cmp    %rsi,%rdx */
0x74, 0x29,                               /*300: je     32b <op_tailcall+0x32b> */
0x85, 0xed,                               /*302: test   %ebp,%ebp */
0x74, 0x25,                               /*304: je     32b <op_tailcall+0x32b> */
0x48, 0xf7, 0xd9,                         /*306: neg    %rcx */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*309: nopl   0x0(%rax) */
0x48, 0x8b, 0x3e,                         /*310: mov    (%rsi),%rdi */
0x48, 0x8b, 0x6e, 0x08,                   /*313: mov    0x8(%rsi),%rbp */
0x48, 0x8d, 0x76, 0x10,                   /*317: lea    0x10(%rsi),%rsi */
0x48, 0x89, 0x6a, 0x08,                   /*31b: mov    %rbp,0x8(%rdx) */
0x48, 0x89, 0x3a,                         /*31f: mov    %rdi,(%rdx) */
0x48, 0x8d, 0x52, 0x10,                   /*322: lea    0x10(%rdx),%rdx */
0x48, 0xff, 0xc1,                         /*326: inc    %rcx */
0x75, 0xe5,                               /*329: jne    310 <op_tailcall+0x310> */
0x41, 0xf6, 0x44, 0x24, 0x02, 0x04,       /*32b: testb  $0x4,0x2(%r12) */
0x74, 0x3b,                               /*331: je     36e <op_tailcall+0x36e> */
0x49, 0x8b, 0x46, 0x18,                   /*333: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*337: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xf7,                         /*33b: mov    %r14,%rdi */
0x48, 0x8b, 0x34, 0x24,                   /*33e: mov    (%rsp),%rsi */
0x8b, 0x54, 0x24, 0x0c,                   /*342: mov    0xc(%rsp),%edx */
0x41, 0xff, 0x54, 0x24, 0x18,             /*346: callq  *0x18(%r12) */
0x48, 0x89, 0x03,                         /*34b: mov    %rax,(%rbx) */
0x89, 0x53, 0x08,                         /*34e: mov    %edx,0x8(%rbx) */
0x41, 0x8b, 0x75, 0x50,                   /*351: mov    0x50(%r13),%esi */
0x4c, 0x89, 0xf7,                         /*355: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*358: callq  35d <op_tailcall+0x35d> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*35d: mov    $0x0,%esi */
0x31, 0xd2,                               /*362: xor    %edx,%edx */
0x4c, 0x89, 0xef,                         /*364: mov    %r13,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*367: callq  36c <op_tailcall+0x36c> */
0xeb, 0x68,                               /*36c: jmp    3d6 <op_tailcall+0x3d6> */
0x49, 0x8b, 0x4c, 0x24, 0x18,             /*36e: mov    0x18(%r12),%rcx */
0x49, 0x89, 0x4d, 0x08,                   /*373: mov    %rcx,0x8(%r13) */
0x48, 0x8b, 0x51, 0x10,                   /*377: mov    0x10(%rcx),%rdx */
0x49, 0x89, 0x55, 0x20,                   /*37b: mov    %rdx,0x20(%r13) */
0x48, 0x8b, 0x51, 0x18,                   /*37f: mov    0x18(%rcx),%rdx */
0x49, 0x89, 0x55, 0x28,                   /*383: mov    %rdx,0x28(%r13) */
0x8b, 0x50, 0x40,                         /*387: mov    0x40(%rax),%edx */
0x0f, 0xb7, 0x71, 0x02,                   /*38a: movzwl 0x2(%rcx),%esi */
0x85, 0xd2,                               /*38e: test   %edx,%edx */
0x78, 0x05,                               /*390: js     397 <op_tailcall+0x397> */
0x83, 0xc2, 0x02,                         /*392: add    $0x2,%edx */
0xeb, 0x10,                               /*395: jmp    3a7 <op_tailcall+0x3a7> */
0x83, 0xfe, 0x03,                         /*397: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*39a: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*39f: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*3a2: mov    $0x3,%edx */
0x4c, 0x89, 0xf7,                         /*3a7: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3aa: callq  3af <op_tailcall+0x3af> */
0x49, 0x8b, 0x46, 0x18,                   /*3af: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3b3: mov    0x8(%rax),%rax */
0x49, 0x89, 0x45, 0x18,                   /*3b7: mov    %rax,0x18(%r13) */
0x49, 0x8b, 0x45, 0x08,                   /*3bb: mov    0x8(%r13),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3bf: mov    0x8(%rax),%rax */
0x49, 0x89, 0x45, 0x10,                   /*3c3: mov    %rax,0x10(%r13) */
0x49, 0x8b, 0x7d, 0x58,                   /*3c7: mov    0x58(%r13),%rdi */
0x4c, 0x89, 0xe6,                         /*3cb: mov    %r12,%rsi */
0x4c, 0x89, 0xea,                         /*3ce: mov    %r13,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3d1: callq  3d6 <op_tailcall+0x3d6> */
0x48, 0x83, 0xc4, 0x18,                   /*3d6: add    $0x18,%rsp */
0x5b,                                     /*3da: pop    %rbx */
0x41, 0x5c,                               /*3db: pop    %r12 */
0x41, 0x5d,                               /*3dd: pop    %r13 */
0x41, 0x5e,                               /*3df: pop    %r14 */
0x41, 0x5f,                               /*3e1: pop    %r15 */
0x5d,                                     /*3e3: pop    %rbp */
0xeb, 0x42,                               /*3e4: jmp    428 <_str_const_method_missing51+0x3e8> */
0x49, 0x8b, 0x86, 0x88, 0x00, 0x00, 0x00, /*3e6: mov    0x88(%r14),%rax */
0xe9, 0x7e, 0xfc, 0xff, 0xff,             /*3ed: jmpq   70 <op_tailcall+0x70> */
0x49, 0x8b, 0x86, 0x80, 0x00, 0x00, 0x00, /*3f2: mov    0x80(%r14),%rax */
0xe9, 0x72, 0xfc, 0xff, 0xff,             /*3f9: jmpq   70 <op_tailcall+0x70> */
0x49, 0x8b, 0x86, 0xa0, 0x00, 0x00, 0x00, /*3fe: mov    0xa0(%r14),%rax */
0xe9, 0x66, 0xfc, 0xff, 0xff,             /*405: jmpq   70 <op_tailcall+0x70> */
0x49, 0x8b, 0x46, 0x78,                   /*40a: mov    0x78(%r14),%rax */
0xe9, 0x5d, 0xfc, 0xff, 0xff,             /*40e: jmpq   70 <op_tailcall+0x70> */
0x49, 0x8b, 0x46, 0x40,                   /*413: mov    0x40(%r14),%rax */
0xe9, 0x54, 0xfc, 0xff, 0xff,             /*417: jmpq   70 <op_tailcall+0x70> */
0x49, 0x8b, 0x86, 0x98, 0x00, 0x00, 0x00, /*41c: mov    0x98(%r14),%rax */
0xe9, 0x48, 0xfc, 0xff, 0xff,             /*423: jmpq   70 <op_tailcall+0x70> */

};
static uint8_t op_tailcall__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x00,

};

static void op_tailcall_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_tailcall_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_tailcall_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_blkpush__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x7e, 0x58,                   /*6: mov    0x58(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%eax */
0x89, 0x44, 0x24, 0x04,                   /*f: mov    %eax,0x4(%rsp) */
0x44, 0x8b, 0x4c, 0x24, 0x04,             /*13: mov    0x4(%rsp),%r9d */
0x8b, 0x44, 0x24, 0x04,                   /*18: mov    0x4(%rsp),%eax */
0x44, 0x8b, 0x44, 0x24, 0x04,             /*1c: mov    0x4(%rsp),%r8d */
0x8b, 0x5c, 0x24, 0x04,                   /*21: mov    0x4(%rsp),%ebx */
0x83, 0xe3, 0x0f,                         /*25: and    $0xf,%ebx */
0x74, 0x51,                               /*28: je     7b <op_blkpush+0x7b> */
0x49, 0x8b, 0x4e, 0x58,                   /*2a: mov    0x58(%r14),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*2e: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*32: mov    0x20(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*36: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x71, 0x28,                   /*3a: mov    0x28(%rcx),%rsi */
0x48, 0x85, 0xf6,                         /*3e: test   %rsi,%rsi */
0x0f, 0x94, 0xc1,                         /*41: sete   %cl */
0x83, 0xfb, 0x01,                         /*44: cmp    $0x1,%ebx */
0x74, 0x1a,                               /*47: je     63 <op_blkpush+0x63> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*49: mov    $0x1,%edx */
0x29, 0xda,                               /*4e: sub    %ebx,%edx */
0xf6, 0xc1, 0x01,                         /*50: test   $0x1,%cl */
0x75, 0x12,                               /*53: jne    67 <op_blkpush+0x67> */
0x48, 0x8b, 0x76, 0x08,                   /*55: mov    0x8(%rsi),%rsi */
0x48, 0x85, 0xf6,                         /*59: test   %rsi,%rsi */
0x0f, 0x94, 0xc1,                         /*5c: sete   %cl */
0xff, 0xc2,                               /*5f: inc    %edx */
0x75, 0xed,                               /*61: jne    50 <op_blkpush+0x50> */
0x84, 0xc9,                               /*63: test   %cl,%cl */
0x74, 0x1d,                               /*65: je     84 <op_blkpush+0x84> */
0xbe, 0x02, 0x00, 0x00, 0x00,             /*67: mov    $0x2,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6c: callq  71 <op_blkpush+0x71> */
0x4c, 0x89, 0xf7,                         /*71: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*74: callq  79 <op_blkpush+0x79> */
0xeb, 0x59,                               /*79: jmp    d4 <op_blkpush+0xd4> */
0x49, 0x83, 0xc6, 0x18,                   /*7b: add    $0x18,%r14 */
0x4c, 0x89, 0xf6,                         /*7f: mov    %r14,%rsi */
0xeb, 0x08,                               /*82: jmp    8c <op_blkpush+0x8c> */
0x48, 0x83, 0xc6, 0x18,                   /*84: add    $0x18,%rsi */
0x49, 0x83, 0xc6, 0x18,                   /*88: add    $0x18,%r14 */
0x41, 0xc1, 0xe9, 0x0a,                   /*8c: shr    $0xa,%r9d */
0x41, 0x83, 0xe1, 0x3f,                   /*90: and    $0x3f,%r9d */
0xc1, 0xe8, 0x09,                         /*94: shr    $0x9,%eax */
0x83, 0xe0, 0x01,                         /*97: and    $0x1,%eax */
0x41, 0xc1, 0xe8, 0x04,                   /*9a: shr    $0x4,%r8d */
0x41, 0x83, 0xe0, 0x1f,                   /*9e: and    $0x1f,%r8d */
0x48, 0x8b, 0x0e,                         /*a2: mov    (%rsi),%rcx */
0x49, 0x8b, 0x16,                         /*a5: mov    (%r14),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*a8: mov    $0x0,%esi */
0x48, 0x63, 0xf6,                         /*ad: movslq %esi,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*b0: shl    $0x4,%rsi */
0x44, 0x01, 0xc8,                         /*b4: add    %r9d,%eax */
0x41, 0x8d, 0x44, 0x00, 0x01,             /*b7: lea    0x1(%r8,%rax,1),%eax */
0x48, 0x98,                               /*bc: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*be: shl    $0x4,%rax */
0x48, 0x8b, 0x3c, 0x01,                   /*c2: mov    (%rcx,%rax,1),%rdi */
0x48, 0x8b, 0x44, 0x01, 0x08,             /*c6: mov    0x8(%rcx,%rax,1),%rax */
0x48, 0x89, 0x44, 0x32, 0x08,             /*cb: mov    %rax,0x8(%rdx,%rsi,1) */
0x48, 0x89, 0x3c, 0x32,                   /*d0: mov    %rdi,(%rdx,%rsi,1) */
0x5b,                                     /*d4: pop    %rbx */
0x41, 0x5e,                               /*d5: pop    %r14 */

};
static uint8_t op_blkpush__rodata[] = {

};

static void op_blkpush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_blkpush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_blkpush_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_add__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x55,                               /*4: push   %r13 */
0x41, 0x54,                               /*6: push   %r12 */
0x53,                                     /*8: push   %rbx */
0x49, 0x89, 0xff,                         /*9: mov    %rdi,%r15 */
0x49, 0x8b, 0x5f, 0x18,                   /*c: mov    0x18(%r15),%rbx */
0x4d, 0x8b, 0x77, 0x58,                   /*10: mov    0x58(%r15),%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%eax */
0x48, 0x98,                               /*19: cltq */
0x48, 0x89, 0xc1,                         /*1b: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*1e: shl    $0x4,%rcx */
0x4c, 0x8d, 0x64, 0x0b, 0x08,             /*22: lea    0x8(%rbx,%rcx,1),%r12 */
0x8b, 0x54, 0x0b, 0x08,                   /*27: mov    0x8(%rbx,%rcx,1),%edx */
0x89, 0xd1,                               /*2b: mov    %edx,%ecx */
0xc1, 0xe1, 0x08,                         /*2d: shl    $0x8,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*30: and    $0xffff00,%ecx */
0xff, 0xc0,                               /*36: inc    %eax */
0x48, 0x98,                               /*38: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*3a: shl    $0x4,%rax */
0x44, 0x8b, 0x44, 0x03, 0x08,             /*3e: mov    0x8(%rbx,%rax,1),%r8d */
0x41, 0x0f, 0xb6, 0xc0,                   /*43: movzbl %r8b,%eax */
0x09, 0xc8,                               /*47: or     %ecx,%eax */
0x3d, 0x0f, 0x10, 0x00, 0x00,             /*49: cmp    $0x100f,%eax */
0x7f, 0x53,                               /*4e: jg     a3 <op_add+0xa3> */
0x3d, 0x02, 0x06, 0x00, 0x00,             /*50: cmp    $0x602,%eax */
0x0f, 0x8f, 0x86, 0x00, 0x00, 0x00,       /*55: jg     e1 <op_add+0xe1> */
0x3d, 0x03, 0x03, 0x00, 0x00,             /*5b: cmp    $0x303,%eax */
0x0f, 0x85, 0xac, 0x00, 0x00, 0x00,       /*60: jne    112 <op_add+0x112> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*66: mov    $0x0,%eax */
0x48, 0x63, 0xc8,                         /*6b: movslq %eax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*6e: shl    $0x4,%rcx */
0x8b, 0x14, 0x0b,                         /*72: mov    (%rbx,%rcx,1),%edx */
0x8b, 0x74, 0x0b, 0x10,                   /*75: mov    0x10(%rbx,%rcx,1),%esi */
0x89, 0xd0,                               /*79: mov    %edx,%eax */
0x01, 0xf0,                               /*7b: add    %esi,%eax */
0x0f, 0x81, 0xfd, 0x00, 0x00, 0x00,       /*7d: jno    180 <op_add+0x180> */
0x48, 0x01, 0xcb,                         /*83: add    %rcx,%rbx */
0x41, 0xc7, 0x04, 0x24, 0x06, 0x00, 0x00, 0x00,/*86: movl   $0x6,(%r12) */
0xf2, 0x0f, 0x2a, 0xc2,                   /*8e: cvtsi2sd %edx,%xmm0 */
0xf2, 0x0f, 0x2a, 0xce,                   /*92: cvtsi2sd %esi,%xmm1 */
0xf2, 0x0f, 0x58, 0xc8,                   /*96: addsd  %xmm0,%xmm1 */
0xf2, 0x0f, 0x11, 0x0b,                   /*9a: movsd  %xmm1,(%rbx) */
0xe9, 0xf4, 0x00, 0x00, 0x00,             /*9e: jmpq   197 <op_add+0x197> */
0x3d, 0x10, 0x10, 0x00, 0x00,             /*a3: cmp    $0x1010,%eax */
0x0f, 0x85, 0xc8, 0x00, 0x00, 0x00,       /*a8: jne    176 <op_add+0x176> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ae: mov    $0x0,%eax */
0x48, 0x98,                               /*b3: cltq */
0x49, 0x89, 0xc5,                         /*b5: mov    %rax,%r13 */
0x49, 0xc1, 0xe5, 0x04,                   /*b8: shl    $0x4,%r13 */
0xff, 0xc0,                               /*bc: inc    %eax */
0x48, 0x98,                               /*be: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*c0: shl    $0x4,%rax */
0x4a, 0x8b, 0x34, 0x2b,                   /*c4: mov    (%rbx,%r13,1),%rsi */
0x48, 0x8b, 0x0c, 0x03,                   /*c8: mov    (%rbx,%rax,1),%rcx */
0x4c, 0x89, 0xf7,                         /*cc: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*cf: callq  d4 <op_add+0xd4> */
0x4a, 0x89, 0x04, 0x2b,                   /*d4: mov    %rax,(%rbx,%r13,1) */
0x41, 0x89, 0x14, 0x24,                   /*d8: mov    %edx,(%r12) */
0xe9, 0xb6, 0x00, 0x00, 0x00,             /*dc: jmpq   197 <op_add+0x197> */
0x3d, 0x03, 0x06, 0x00, 0x00,             /*e1: cmp    $0x603,%eax */
0x75, 0x60,                               /*e6: jne    148 <op_add+0x148> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e8: mov    $0x0,%eax */
0x48, 0x98,                               /*ed: cltq */
0x48, 0x89, 0xc1,                         /*ef: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f2: shl    $0x4,%rcx */
0xff, 0xc0,                               /*f6: inc    %eax */
0x48, 0x98,                               /*f8: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*fa: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x03,             /*fe: cvtsi2sdl (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x58, 0x04, 0x0b,             /*103: addsd  (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*108: movsd  %xmm0,(%rbx,%rcx,1) */
0xe9, 0x85, 0x00, 0x00, 0x00,             /*10d: jmpq   197 <op_add+0x197> */
0x3d, 0x06, 0x03, 0x00, 0x00,             /*112: cmp    $0x306,%eax */
0x75, 0x5d,                               /*117: jne    176 <op_add+0x176> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*119: mov    $0x0,%eax */
0x48, 0x98,                               /*11e: cltq */
0x48, 0x89, 0xc1,                         /*120: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*123: shl    $0x4,%rcx */
0xff, 0xc0,                               /*127: inc    %eax */
0x48, 0x98,                               /*129: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*12b: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x0b,             /*12f: cvtsi2sdl (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x58, 0x04, 0x03,             /*134: addsd  (%rbx,%rax,1),%xmm0 */
0x41, 0xc7, 0x04, 0x24, 0x06, 0x00, 0x00, 0x00,/*139: movl   $0x6,(%r12) */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*141: movsd  %xmm0,(%rbx,%rcx,1) */
0xeb, 0x4f,                               /*146: jmp    197 <op_add+0x197> */
0x3d, 0x06, 0x06, 0x00, 0x00,             /*148: cmp    $0x606,%eax */
0x75, 0x27,                               /*14d: jne    176 <op_add+0x176> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14f: mov    $0x0,%eax */
0x48, 0x98,                               /*154: cltq */
0x48, 0x89, 0xc1,                         /*156: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*159: shl    $0x4,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0x0b,             /*15d: movsd  (%rbx,%rcx,1),%xmm0 */
0xff, 0xc0,                               /*162: inc    %eax */
0x48, 0x98,                               /*164: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*166: shl    $0x4,%rax */
0xf2, 0x0f, 0x58, 0x04, 0x03,             /*16a: addsd  (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*16f: movsd  %xmm0,(%rbx,%rcx,1) */
0xeb, 0x21,                               /*174: jmp    197 <op_add+0x197> */
0x4c, 0x89, 0xff,                         /*176: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*179: callq  17e <op_add+0x17e> */
0xeb, 0x22,                               /*17e: jmp    1a2 <op_add+0x1a2> */
0x41, 0xc7, 0x04, 0x24, 0x03, 0x00, 0x00, 0x00,/*180: movl   $0x3,(%r12) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*188: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*18d: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*190: shl    $0x4,%rcx */
0x89, 0x04, 0x0b,                         /*194: mov    %eax,(%rbx,%rcx,1) */
0x41, 0x8b, 0x47, 0x50,                   /*197: mov    0x50(%r15),%eax */
0x41, 0x89, 0x86, 0xdc, 0x00, 0x00, 0x00, /*19b: mov    %eax,0xdc(%r14) */
0x5b,                                     /*1a2: pop    %rbx */
0x41, 0x5c,                               /*1a3: pop    %r12 */
0x41, 0x5d,                               /*1a5: pop    %r13 */
0x41, 0x5e,                               /*1a7: pop    %r14 */
0x41, 0x5f,                               /*1a9: pop    %r15 */

};
static uint8_t op_add__rodata[] = {

};

static void op_add_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_add_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_add_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_addi__text[] = {
0x48, 0x8b, 0x4f, 0x18,                   /*0: mov    0x18(%rdi),%rcx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*9: movslq %eax,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*c: shl    $0x4,%rdx */
0x48, 0x8d, 0x04, 0x11,                   /*10: lea    (%rcx,%rdx,1),%rax */
0x8b, 0x74, 0x11, 0x08,                   /*14: mov    0x8(%rcx,%rdx,1),%esi */
0x83, 0xfe, 0x06,                         /*18: cmp    $0x6,%esi */
0x75, 0x14,                               /*1b: jne    31 <op_addi+0x31> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*22: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x58, 0x00,                   /*26: addsd  (%rax),%xmm0 */
0xf2, 0x0f, 0x11, 0x00,                   /*2a: movsd  %xmm0,(%rax) */
0x58,                                     /*2e: pop    %rax */
0xeb, 0x73,                               /*2f: jmp    a4 <op_addi+0xa4> */
0x83, 0xfe, 0x03,                         /*31: cmp    $0x3,%esi */
0x75, 0x2e,                               /*34: jne    64 <op_addi+0x64> */
0x48, 0x8d, 0x4c, 0x11, 0x08,             /*36: lea    0x8(%rcx,%rdx,1),%rcx */
0x8b, 0x10,                               /*3b: mov    (%rax),%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*3d: mov    $0x0,%esi */
0x01, 0xd6,                               /*42: add    %edx,%esi */
0x71, 0x56,                               /*44: jno    9c <op_addi+0x9c> */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*46: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x2a, 0xc2,                   /*4c: cvtsi2sd %edx,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*50: mov    $0x0,%ecx */
0xf2, 0x0f, 0x2a, 0xc9,                   /*55: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x58, 0xc8,                   /*59: addsd  %xmm0,%xmm1 */
0xf2, 0x0f, 0x11, 0x08,                   /*5d: movsd  %xmm1,(%rax) */
0x58,                                     /*61: pop    %rax */
0xeb, 0x40,                               /*62: jmp    a4 <op_addi+0xa4> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*64: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*69: movslq %eax,%rdx */
0x48, 0x89, 0xd0,                         /*6c: mov    %rdx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*6f: shl    $0x4,%rax */
0xc7, 0x44, 0x08, 0x18, 0x03, 0x00, 0x00, 0x00,/*73: movl   $0x3,0x18(%rax,%rcx,1) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*7b: mov    $0x0,%esi */
0x89, 0x74, 0x08, 0x10,                   /*80: mov    %esi,0x10(%rax,%rcx,1) */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*84: mov    $0x20,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*89: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*8e: mov    $0x1,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*94: callq  99 <op_addi+0x99> */
0x58,                                     /*99: pop    %rax */
0xeb, 0x08,                               /*9a: jmp    a4 <op_addi+0xa4> */
0xc7, 0x01, 0x03, 0x00, 0x00, 0x00,       /*9c: movl   $0x3,(%rcx) */
0x89, 0x30,                               /*a2: mov    %esi,(%rax) */

};
static uint8_t op_addi__rodata[] = {

};

static void op_addi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_addi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_addi_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_sub__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*9: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*c: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*13: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*17: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1a: and    $0xffff00,%esi */
0xff, 0xc2,                               /*20: inc    %edx */
0x48, 0x63, 0xd2,                         /*22: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*25: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*29: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*2e: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*30: cmp    $0x602,%edx */
0x7f, 0x63,                               /*36: jg     9b <op_sub+0x9b> */
0x4c, 0x8d, 0x44, 0x08, 0x08,             /*38: lea    0x8(%rax,%rcx,1),%r8 */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*3d: cmp    $0x303,%edx */
0x0f, 0x85, 0x88, 0x00, 0x00, 0x00,       /*43: jne    d1 <op_sub+0xd1> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*49: mov    $0x0,%ecx */
0x48, 0x63, 0xf1,                         /*4e: movslq %ecx,%rsi */
0x48, 0x89, 0xf2,                         /*51: mov    %rsi,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*54: shl    $0x4,%rdx */
0x8b, 0x0c, 0x10,                         /*58: mov    (%rax,%rdx,1),%ecx */
0xff, 0xc6,                               /*5b: inc    %esi */
0x48, 0x63, 0xf6,                         /*5d: movslq %esi,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*60: shl    $0x4,%rsi */
0x8b, 0x3c, 0x30,                         /*64: mov    (%rax,%rsi,1),%edi */
0x89, 0xce,                               /*67: mov    %ecx,%esi */
0x29, 0xfe,                               /*69: sub    %edi,%esi */
0x0f, 0x81, 0xd3, 0x00, 0x00, 0x00,       /*6b: jno    144 <op_sub+0x144> */
0x41, 0xc7, 0x00, 0x06, 0x00, 0x00, 0x00, /*71: movl   $0x6,(%r8) */
0xf2, 0x0f, 0x2a, 0xc1,                   /*78: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x2a, 0xcf,                   /*7c: cvtsi2sd %edi,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*80: subsd  %xmm1,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*84: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*89: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*8c: shl    $0x4,%rcx */
0xf2, 0x0f, 0x11, 0x04, 0x08,             /*90: movsd  %xmm0,(%rax,%rcx,1) */
0x58,                                     /*95: pop    %rax */
0xe9, 0xb5, 0x00, 0x00, 0x00,             /*96: jmpq   150 <op_sub+0x150> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*9b: cmp    $0x603,%edx */
0x75, 0x67,                               /*a1: jne    10a <op_sub+0x10a> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a3: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*a8: movslq %ecx,%rcx */
0x48, 0x89, 0xca,                         /*ab: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*ae: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*b2: movsd  (%rax,%rdx,1),%xmm0 */
0xff, 0xc1,                               /*b7: inc    %ecx */
0x48, 0x63, 0xc9,                         /*b9: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*bc: shl    $0x4,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0x08,             /*c0: cvtsi2sdl (%rax,%rcx,1),%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*c5: subsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*c9: movsd  %xmm0,(%rax,%rdx,1) */
0x58,                                     /*ce: pop    %rax */
0xeb, 0x7f,                               /*cf: jmp    150 <op_sub+0x150> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*d1: cmp    $0x306,%edx */
0x75, 0x63,                               /*d7: jne    13c <op_sub+0x13c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*d9: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*de: movslq %ecx,%rcx */
0x48, 0x89, 0xca,                         /*e1: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*e4: shl    $0x4,%rdx */
0xff, 0xc1,                               /*e8: inc    %ecx */
0x48, 0x63, 0xc9,                         /*ea: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*ed: shl    $0x4,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0x10,             /*f1: cvtsi2sdl (%rax,%rdx,1),%xmm0 */
0xf2, 0x0f, 0x5c, 0x04, 0x08,             /*f6: subsd  (%rax,%rcx,1),%xmm0 */
0x41, 0xc7, 0x00, 0x06, 0x00, 0x00, 0x00, /*fb: movl   $0x6,(%r8) */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*102: movsd  %xmm0,(%rax,%rdx,1) */
0x58,                                     /*107: pop    %rax */
0xeb, 0x46,                               /*108: jmp    150 <op_sub+0x150> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*10a: cmp    $0x606,%edx */
0x75, 0x2a,                               /*110: jne    13c <op_sub+0x13c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*112: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*117: movslq %ecx,%rcx */
0x48, 0x89, 0xca,                         /*11a: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*11d: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*121: movsd  (%rax,%rdx,1),%xmm0 */
0xff, 0xc1,                               /*126: inc    %ecx */
0x48, 0x63, 0xc9,                         /*128: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*12b: shl    $0x4,%rcx */
0xf2, 0x0f, 0x5c, 0x04, 0x08,             /*12f: subsd  (%rax,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*134: movsd  %xmm0,(%rax,%rdx,1) */
0x58,                                     /*139: pop    %rax */
0xeb, 0x14,                               /*13a: jmp    150 <op_sub+0x150> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*13c: callq  141 <op_sub+0x141> */
0x58,                                     /*141: pop    %rax */
0xeb, 0x0c,                               /*142: jmp    150 <op_sub+0x150> */
0x48, 0x01, 0xd0,                         /*144: add    %rdx,%rax */
0x41, 0xc7, 0x00, 0x03, 0x00, 0x00, 0x00, /*147: movl   $0x3,(%r8) */
0x89, 0x30,                               /*14e: mov    %esi,(%rax) */

};
static uint8_t op_sub__rodata[] = {

};

static void op_sub_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sub_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sub_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_subi__text[] = {
0x48, 0x8b, 0x4f, 0x18,                   /*0: mov    0x18(%rdi),%rcx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*9: movslq %eax,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*c: shl    $0x4,%rdx */
0x48, 0x8d, 0x04, 0x11,                   /*10: lea    (%rcx,%rdx,1),%rax */
0x8b, 0x74, 0x11, 0x08,                   /*14: mov    0x8(%rcx,%rdx,1),%esi */
0x83, 0xfe, 0x06,                         /*18: cmp    $0x6,%esi */
0x75, 0x06,                               /*1b: jne    23 <op_subi+0x23> */
0xf2, 0x0f, 0x10, 0x00,                   /*1d: movsd  (%rax),%xmm0 */
0xeb, 0x21,                               /*21: jmp    44 <op_subi+0x44> */
0x83, 0xfe, 0x03,                         /*23: cmp    $0x3,%esi */
0x75, 0x30,                               /*26: jne    58 <op_subi+0x58> */
0x48, 0x8d, 0x4c, 0x11, 0x08,             /*28: lea    0x8(%rcx,%rdx,1),%rcx */
0x8b, 0x10,                               /*2d: mov    (%rax),%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*2f: mov    $0x0,%edi */
0x89, 0xd6,                               /*34: mov    %edx,%esi */
0x29, 0xfe,                               /*36: sub    %edi,%esi */
0x71, 0x56,                               /*38: jno    90 <op_subi+0x90> */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*3a: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x2a, 0xc2,                   /*40: cvtsi2sd %edx,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*44: mov    $0x0,%ecx */
0xf2, 0x0f, 0x2a, 0xc9,                   /*49: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*4d: subsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x00,                   /*51: movsd  %xmm0,(%rax) */
0x58,                                     /*55: pop    %rax */
0xeb, 0x40,                               /*56: jmp    98 <op_subi+0x98> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*58: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*5d: movslq %eax,%rdx */
0x48, 0x89, 0xd0,                         /*60: mov    %rdx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*63: shl    $0x4,%rax */
0xc7, 0x44, 0x08, 0x18, 0x03, 0x00, 0x00, 0x00,/*67: movl   $0x3,0x18(%rax,%rcx,1) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*6f: mov    $0x0,%esi */
0x89, 0x74, 0x08, 0x10,                   /*74: mov    %esi,0x10(%rax,%rcx,1) */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*78: mov    $0x20,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7d: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*82: mov    $0x1,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*88: callq  8d <op_subi+0x8d> */
0x58,                                     /*8d: pop    %rax */
0xeb, 0x08,                               /*8e: jmp    98 <op_subi+0x98> */
0xc7, 0x01, 0x03, 0x00, 0x00, 0x00,       /*90: movl   $0x3,(%rcx) */
0x89, 0x30,                               /*96: mov    %esi,(%rax) */

};
static uint8_t op_subi__rodata[] = {

};

static void op_subi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_subi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_subi_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_mul__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x5f, 0x18,                   /*3: mov    0x18(%rdi),%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%eax */
0x48, 0x63, 0xc8,                         /*c: movslq %eax,%rcx */
0x48, 0x89, 0xc8,                         /*f: mov    %rcx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*12: shl    $0x4,%rax */
0x8b, 0x54, 0x03, 0x08,                   /*16: mov    0x8(%rbx,%rax,1),%edx */
0x89, 0xd6,                               /*1a: mov    %edx,%esi */
0xc1, 0xe6, 0x08,                         /*1c: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1f: and    $0xffff00,%esi */
0xff, 0xc1,                               /*25: inc    %ecx */
0x48, 0x63, 0xc9,                         /*27: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*2a: shl    $0x4,%rcx */
0x44, 0x8b, 0x44, 0x0b, 0x08,             /*2e: mov    0x8(%rbx,%rcx,1),%r8d */
0x41, 0x0f, 0xb6, 0xc8,                   /*33: movzbl %r8b,%ecx */
0x09, 0xf1,                               /*37: or     %esi,%ecx */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*39: cmp    $0x602,%ecx */
0x7f, 0x59,                               /*3f: jg     9a <op_mul+0x9a> */
0x4c, 0x8d, 0x74, 0x03, 0x08,             /*41: lea    0x8(%rbx,%rax,1),%r14 */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*46: cmp    $0x303,%ecx */
0x75, 0x7e,                               /*4c: jne    cc <op_mul+0xcc> */
0x48, 0x8b, 0x7f, 0x58,                   /*4e: mov    0x58(%rdi),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*52: mov    $0x0,%eax */
0x48, 0x98,                               /*57: cltq */
0x48, 0x89, 0xc1,                         /*59: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*5c: shl    $0x4,%rcx */
0xff, 0xc0,                               /*60: inc    %eax */
0x48, 0x98,                               /*62: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*64: shl    $0x4,%rax */
0x48, 0x8b, 0x34, 0x0b,                   /*68: mov    (%rbx,%rcx,1),%rsi */
0x48, 0x8b, 0x0c, 0x03,                   /*6c: mov    (%rbx,%rax,1),%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*70: callq  75 <op_mul+0x75> */
0x83, 0xfa, 0x06,                         /*75: cmp    $0x6,%edx */
0x0f, 0x85, 0xba, 0x00, 0x00, 0x00,       /*78: jne    138 <op_mul+0x138> */
0x41, 0xc7, 0x06, 0x06, 0x00, 0x00, 0x00, /*7e: movl   $0x6,(%r14) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*85: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*8a: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*8d: shl    $0x4,%rcx */
0x48, 0x89, 0x04, 0x0b,                   /*91: mov    %rax,(%rbx,%rcx,1) */
0xe9, 0xb9, 0x00, 0x00, 0x00,             /*95: jmpq   153 <op_mul+0x153> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*9a: cmp    $0x603,%ecx */
0x75, 0x60,                               /*a0: jne    102 <op_mul+0x102> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a2: mov    $0x0,%eax */
0x48, 0x98,                               /*a7: cltq */
0x48, 0x89, 0xc1,                         /*a9: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*ac: shl    $0x4,%rcx */
0xff, 0xc0,                               /*b0: inc    %eax */
0x48, 0x98,                               /*b2: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*b4: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x03,             /*b8: cvtsi2sdl (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x59, 0x04, 0x0b,             /*bd: mulsd  (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*c2: movsd  %xmm0,(%rbx,%rcx,1) */
0xe9, 0x87, 0x00, 0x00, 0x00,             /*c7: jmpq   153 <op_mul+0x153> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*cc: cmp    $0x306,%ecx */
0x75, 0x5d,                               /*d2: jne    131 <op_mul+0x131> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*d4: mov    $0x0,%eax */
0x48, 0x98,                               /*d9: cltq */
0x48, 0x89, 0xc1,                         /*db: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*de: shl    $0x4,%rcx */
0xff, 0xc0,                               /*e2: inc    %eax */
0x48, 0x98,                               /*e4: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*e6: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x0b,             /*ea: cvtsi2sdl (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x59, 0x04, 0x03,             /*ef: mulsd  (%rbx,%rax,1),%xmm0 */
0x41, 0xc7, 0x06, 0x06, 0x00, 0x00, 0x00, /*f4: movl   $0x6,(%r14) */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*fb: movsd  %xmm0,(%rbx,%rcx,1) */
0xeb, 0x51,                               /*100: jmp    153 <op_mul+0x153> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*102: cmp    $0x606,%ecx */
0x75, 0x27,                               /*108: jne    131 <op_mul+0x131> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10a: mov    $0x0,%eax */
0x48, 0x98,                               /*10f: cltq */
0x48, 0x89, 0xc1,                         /*111: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*114: shl    $0x4,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0x0b,             /*118: movsd  (%rbx,%rcx,1),%xmm0 */
0xff, 0xc0,                               /*11d: inc    %eax */
0x48, 0x98,                               /*11f: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*121: shl    $0x4,%rax */
0xf2, 0x0f, 0x59, 0x04, 0x03,             /*125: mulsd  (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*12a: movsd  %xmm0,(%rbx,%rcx,1) */
0xeb, 0x22,                               /*12f: jmp    153 <op_mul+0x153> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*131: callq  136 <op_mul+0x136> */
0xeb, 0x1b,                               /*136: jmp    153 <op_mul+0x153> */
0x83, 0xfa, 0x03,                         /*138: cmp    $0x3,%edx */
0x75, 0x16,                               /*13b: jne    153 <op_mul+0x153> */
0x41, 0xc7, 0x06, 0x03, 0x00, 0x00, 0x00, /*13d: movl   $0x3,(%r14) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*144: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*149: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*14c: shl    $0x4,%rcx */
0x89, 0x04, 0x0b,                         /*150: mov    %eax,(%rbx,%rcx,1) */
0x5b,                                     /*153: pop    %rbx */
0x41, 0x5e,                               /*154: pop    %r14 */

};
static uint8_t op_mul__rodata[] = {

};

static void op_mul_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_mul_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_mul_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_div__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*9: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*c: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*13: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*17: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1a: and    $0xffff00,%esi */
0xff, 0xc2,                               /*20: inc    %edx */
0x48, 0x63, 0xd2,                         /*22: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*25: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*29: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*2e: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*30: cmp    $0x602,%edx */
0x7f, 0x44,                               /*36: jg     7c <op_div+0x7c> */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*38: lea    0x8(%rax,%rcx,1),%rcx */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*3d: cmp    $0x303,%edx */
0x75, 0x6d,                               /*43: jne    b2 <op_div+0xb2> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*45: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*4a: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*4d: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*50: shl    $0x4,%rsi */
0xff, 0xc2,                               /*54: inc    %edx */
0x48, 0x63, 0xd2,                         /*56: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*59: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*5d: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xf2, 0x0f, 0x2a, 0x0c, 0x10,             /*62: cvtsi2sdl (%rax,%rdx,1),%xmm1 */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*67: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x5e, 0xc1,                   /*6d: divsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x30,             /*71: movsd  %xmm0,(%rax,%rsi,1) */
0x58,                                     /*76: pop    %rax */
0xe9, 0xa5, 0x00, 0x00, 0x00,             /*77: jmpq   121 <op_div+0x121> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*7c: cmp    $0x603,%edx */
0x75, 0x66,                               /*82: jne    ea <op_div+0xea> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*84: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*89: movslq %ecx,%rcx */
0x48, 0x89, 0xca,                         /*8c: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*8f: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*93: movsd  (%rax,%rdx,1),%xmm0 */
0xff, 0xc1,                               /*98: inc    %ecx */
0x48, 0x63, 0xc9,                         /*9a: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*9d: shl    $0x4,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0x08,             /*a1: cvtsi2sdl (%rax,%rcx,1),%xmm1 */
0xf2, 0x0f, 0x5e, 0xc1,                   /*a6: divsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*aa: movsd  %xmm0,(%rax,%rdx,1) */
0x58,                                     /*af: pop    %rax */
0xeb, 0x6f,                               /*b0: jmp    121 <op_div+0x121> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*b2: cmp    $0x306,%edx */
0x75, 0x62,                               /*b8: jne    11c <op_div+0x11c> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*ba: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*bf: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*c2: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*c5: shl    $0x4,%rsi */
0xff, 0xc2,                               /*c9: inc    %edx */
0x48, 0x63, 0xd2,                         /*cb: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*ce: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*d2: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xf2, 0x0f, 0x5e, 0x04, 0x10,             /*d7: divsd  (%rax,%rdx,1),%xmm0 */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*dc: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x11, 0x04, 0x30,             /*e2: movsd  %xmm0,(%rax,%rsi,1) */
0x58,                                     /*e7: pop    %rax */
0xeb, 0x37,                               /*e8: jmp    121 <op_div+0x121> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*ea: cmp    $0x606,%edx */
0x75, 0x2a,                               /*f0: jne    11c <op_div+0x11c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f2: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*f7: movslq %ecx,%rcx */
0x48, 0x89, 0xca,                         /*fa: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*fd: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*101: movsd  (%rax,%rdx,1),%xmm0 */
0xff, 0xc1,                               /*106: inc    %ecx */
0x48, 0x63, 0xc9,                         /*108: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*10b: shl    $0x4,%rcx */
0xf2, 0x0f, 0x5e, 0x04, 0x08,             /*10f: divsd  (%rax,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*114: movsd  %xmm0,(%rax,%rdx,1) */
0x58,                                     /*119: pop    %rax */
0xeb, 0x05,                               /*11a: jmp    121 <op_div+0x121> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*11c: callq  121 <op_div+0x121> */

};
static uint8_t op_div__rodata[] = {

};

static void op_div_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_div_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_div_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_eq__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x54,                               /*4: push   %r12 */
0x53,                                     /*6: push   %rbx */
0x49, 0x89, 0xfe,                         /*7: mov    %rdi,%r14 */
0x4d, 0x8b, 0x66, 0x18,                   /*a: mov    0x18(%r14),%r12 */
0x49, 0x8b, 0x7e, 0x58,                   /*e: mov    0x58(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%eax */
0x48, 0x63, 0xd8,                         /*17: movslq %eax,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*1a: shl    $0x4,%rbx */
0x49, 0x8b, 0x34, 0x1c,                   /*1e: mov    (%r12,%rbx,1),%rsi */
0x4d, 0x8d, 0x7c, 0x1c, 0x08,             /*22: lea    0x8(%r12,%rbx,1),%r15 */
0x41, 0x8b, 0x54, 0x1c, 0x08,             /*27: mov    0x8(%r12,%rbx,1),%edx */
0x49, 0x8b, 0x4c, 0x1c, 0x10,             /*2c: mov    0x10(%r12,%rbx,1),%rcx */
0x45, 0x8b, 0x44, 0x1c, 0x18,             /*31: mov    0x18(%r12,%rbx,1),%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*36: callq  3b <op_eq+0x3b> */
0x84, 0xc0,                               /*3b: test   %al,%al */
0x74, 0x17,                               /*3d: je     56 <op_eq+0x56> */
0x49, 0x01, 0xdc,                         /*3f: add    %rbx,%r12 */
0x41, 0xc7, 0x07, 0x02, 0x00, 0x00, 0x00, /*42: movl   $0x2,(%r15) */
0x41, 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00,/*49: movl   $0x1,(%r12) */
0xe9, 0x16, 0x01, 0x00, 0x00,             /*51: jmpq   16c <op_eq+0x16c> */
0x41, 0x8b, 0x0f,                         /*56: mov    (%r15),%ecx */
0xc1, 0xe1, 0x08,                         /*59: shl    $0x8,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*5c: and    $0xffff00,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*62: mov    $0x0,%eax */
0xff, 0xc0,                               /*67: inc    %eax */
0x48, 0x98,                               /*69: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*6b: shl    $0x4,%rax */
0x41, 0x0f, 0xb6, 0x44, 0x04, 0x08,       /*6f: movzbl 0x8(%r12,%rax,1),%eax */
0x09, 0xc8,                               /*75: or     %ecx,%eax */
0x3d, 0x02, 0x06, 0x00, 0x00,             /*77: cmp    $0x602,%eax */
0x7f, 0x2d,                               /*7c: jg     ab <op_eq+0xab> */
0x3d, 0x03, 0x03, 0x00, 0x00,             /*7e: cmp    $0x303,%eax */
0x75, 0x52,                               /*83: jne    d7 <op_eq+0xd7> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*85: mov    $0x0,%eax */
0x48, 0x98,                               /*8a: cltq */
0x48, 0x89, 0xc1,                         /*8c: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*8f: shl    $0x4,%rcx */
0x41, 0x8b, 0x0c, 0x0c,                   /*93: mov    (%r12,%rcx,1),%ecx */
0xff, 0xc0,                               /*97: inc    %eax */
0x48, 0x98,                               /*99: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*9b: shl    $0x4,%rax */
0x41, 0x3b, 0x0c, 0x04,                   /*9f: cmp    (%r12,%rax,1),%ecx */
0x0f, 0x94, 0xc0,                         /*a3: sete   %al */
0x0f, 0xb6, 0xc0,                         /*a6: movzbl %al,%eax */
0xeb, 0x7b,                               /*a9: jmp    126 <op_eq+0x126> */
0x3d, 0x03, 0x06, 0x00, 0x00,             /*ab: cmp    $0x603,%eax */
0x75, 0x42,                               /*b0: jne    f4 <op_eq+0xf4> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*b2: mov    $0x0,%eax */
0x48, 0x98,                               /*b7: cltq */
0x48, 0x89, 0xc1,                         /*b9: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*bc: shl    $0x4,%rcx */
0xff, 0xc0,                               /*c0: inc    %eax */
0x48, 0x98,                               /*c2: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*c4: shl    $0x4,%rax */
0xf2, 0x41, 0x0f, 0x2a, 0x04, 0x04,       /*c8: cvtsi2sdl (%r12,%rax,1),%xmm0 */
0xf2, 0x41, 0x0f, 0xc2, 0x04, 0x0c, 0x00, /*ce: cmpeqsd (%r12,%rcx,1),%xmm0 */
0xeb, 0x47,                               /*d5: jmp    11e <op_eq+0x11e> */
0x3d, 0x06, 0x03, 0x00, 0x00,             /*d7: cmp    $0x306,%eax */
0x75, 0x71,                               /*dc: jne    14f <op_eq+0x14f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*de: mov    $0x0,%eax */
0x48, 0x98,                               /*e3: cltq */
0x48, 0x89, 0xc1,                         /*e5: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*e8: shl    $0x4,%rcx */
0xf2, 0x41, 0x0f, 0x2a, 0x04, 0x0c,       /*ec: cvtsi2sdl (%r12,%rcx,1),%xmm0 */
0xeb, 0x1b,                               /*f2: jmp    10f <op_eq+0x10f> */
0x3d, 0x06, 0x06, 0x00, 0x00,             /*f4: cmp    $0x606,%eax */
0x75, 0x54,                               /*f9: jne    14f <op_eq+0x14f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*fb: mov    $0x0,%eax */
0x48, 0x98,                               /*100: cltq */
0x48, 0x89, 0xc1,                         /*102: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*105: shl    $0x4,%rcx */
0xf2, 0x41, 0x0f, 0x10, 0x04, 0x0c,       /*109: movsd  (%r12,%rcx,1),%xmm0 */
0xff, 0xc0,                               /*10f: inc    %eax */
0x48, 0x98,                               /*111: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*113: shl    $0x4,%rax */
0xf2, 0x41, 0x0f, 0xc2, 0x04, 0x04, 0x00, /*117: cmpeqsd (%r12,%rax,1),%xmm0 */
0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*11e: movq   %xmm0,%rax */
0x83, 0xe0, 0x01,                         /*123: and    $0x1,%eax */
0x85, 0xc0,                               /*126: test   %eax,%eax */
0x74, 0x09,                               /*128: je     133 <op_eq+0x133> */
0x41, 0xc7, 0x07, 0x02, 0x00, 0x00, 0x00, /*12a: movl   $0x2,(%r15) */
0xeb, 0x07,                               /*131: jmp    13a <op_eq+0x13a> */
0x41, 0xc7, 0x07, 0x00, 0x00, 0x00, 0x00, /*133: movl   $0x0,(%r15) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*13a: mov    $0x0,%eax */
0x48, 0x98,                               /*13f: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*141: shl    $0x4,%rax */
0x41, 0xc7, 0x04, 0x04, 0x01, 0x00, 0x00, 0x00,/*145: movl   $0x1,(%r12,%rax,1) */
0xeb, 0x1d,                               /*14d: jmp    16c <op_eq+0x16c> */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*14f: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*154: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*159: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*15e: mov    $0x0,%r8d */
0x4c, 0x89, 0xf7,                         /*164: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*167: callq  16c <op_eq+0x16c> */
0x5b,                                     /*16c: pop    %rbx */
0x41, 0x5c,                               /*16d: pop    %r12 */
0x41, 0x5e,                               /*16f: pop    %r14 */
0x41, 0x5f,                               /*171: pop    %r15 */

};
static uint8_t op_eq__rodata[] = {

};

static void op_eq_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_eq_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_eq_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_lt__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*9: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*c: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*13: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*17: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1a: and    $0xffff00,%esi */
0xff, 0xc2,                               /*20: inc    %edx */
0x48, 0x63, 0xd2,                         /*22: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*25: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*29: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*2e: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*30: cmp    $0x602,%edx */
0x7f, 0x2e,                               /*36: jg     66 <op_lt+0x66> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*38: cmp    $0x303,%edx */
0x75, 0x4d,                               /*3e: jne    8d <op_lt+0x8d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*40: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*45: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*48: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*4b: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*4f: mov    (%rax,%rsi,1),%esi */
0xff, 0xc2,                               /*52: inc    %edx */
0x48, 0x63, 0xd2,                         /*54: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*57: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*5b: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9c, 0xc2,                         /*5e: setl   %dl */
0xe9, 0x8b, 0x00, 0x00, 0x00,             /*61: jmpq   f1 <op_lt+0xf1> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*66: cmp    $0x603,%edx */
0x75, 0x56,                               /*6c: jne    c4 <op_lt+0xc4> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6e: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*73: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*76: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*79: shl    $0x4,%rsi */
0xff, 0xc2,                               /*7d: inc    %edx */
0x48, 0x63, 0xd2,                         /*7f: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*82: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x10,             /*86: cvtsi2sdl (%rax,%rdx,1),%xmm0 */
0xeb, 0x5c,                               /*8b: jmp    e9 <op_lt+0xe9> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*8d: cmp    $0x306,%edx */
0x0f, 0x85, 0x88, 0x00, 0x00, 0x00,       /*93: jne    121 <op_lt+0x121> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*99: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*9e: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*a1: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*a4: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*a8: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*ad: inc    %edx */
0x48, 0x63, 0xd2,                         /*af: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*b2: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x0c, 0x10,             /*b6: movsd  (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*bb: ucomisd %xmm0,%xmm1 */
0x0f, 0x97, 0xc2,                         /*bf: seta   %dl */
0xeb, 0x2d,                               /*c2: jmp    f1 <op_lt+0xf1> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*c4: cmp    $0x606,%edx */
0x75, 0x55,                               /*ca: jne    121 <op_lt+0x121> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*cc: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*d1: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*d4: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*d7: shl    $0x4,%rsi */
0xff, 0xc2,                               /*db: inc    %edx */
0x48, 0x63, 0xd2,                         /*dd: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*e0: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*e4: movsd  (%rax,%rdx,1),%xmm0 */
0x66, 0x0f, 0x2e, 0x04, 0x30,             /*e9: ucomisd (%rax,%rsi,1),%xmm0 */
0x0f, 0x97, 0xc2,                         /*ee: seta   %dl */
0x0f, 0xb6, 0xd2,                         /*f1: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*f4: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*f9: test   %edx,%edx */
0x74, 0x08,                               /*fb: je     105 <op_lt+0x105> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*fd: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*103: jmp    10b <op_lt+0x10b> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*105: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10b: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*110: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*113: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*117: movl   $0x1,(%rax,%rcx,1) */
0x58,                                     /*11e: pop    %rax */
0xeb, 0x1a,                               /*11f: jmp    13b <op_lt+0x13b> */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*121: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*126: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12b: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*130: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*136: callq  13b <op_lt+0x13b> */

};
static uint8_t op_lt__rodata[] = {

};

static void op_lt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_lt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_lt_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_le__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*9: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*c: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*13: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*17: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1a: and    $0xffff00,%esi */
0xff, 0xc2,                               /*20: inc    %edx */
0x48, 0x63, 0xd2,                         /*22: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*25: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*29: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*2e: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*30: cmp    $0x602,%edx */
0x7f, 0x2e,                               /*36: jg     66 <op_le+0x66> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*38: cmp    $0x303,%edx */
0x75, 0x4d,                               /*3e: jne    8d <op_le+0x8d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*40: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*45: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*48: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*4b: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*4f: mov    (%rax,%rsi,1),%esi */
0xff, 0xc2,                               /*52: inc    %edx */
0x48, 0x63, 0xd2,                         /*54: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*57: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*5b: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9e, 0xc2,                         /*5e: setle  %dl */
0xe9, 0x8b, 0x00, 0x00, 0x00,             /*61: jmpq   f1 <op_le+0xf1> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*66: cmp    $0x603,%edx */
0x75, 0x56,                               /*6c: jne    c4 <op_le+0xc4> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6e: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*73: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*76: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*79: shl    $0x4,%rsi */
0xff, 0xc2,                               /*7d: inc    %edx */
0x48, 0x63, 0xd2,                         /*7f: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*82: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x10,             /*86: cvtsi2sdl (%rax,%rdx,1),%xmm0 */
0xeb, 0x5c,                               /*8b: jmp    e9 <op_le+0xe9> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*8d: cmp    $0x306,%edx */
0x0f, 0x85, 0x88, 0x00, 0x00, 0x00,       /*93: jne    121 <op_le+0x121> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*99: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*9e: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*a1: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*a4: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*a8: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*ad: inc    %edx */
0x48, 0x63, 0xd2,                         /*af: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*b2: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x0c, 0x10,             /*b6: movsd  (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*bb: ucomisd %xmm0,%xmm1 */
0x0f, 0x93, 0xc2,                         /*bf: setae  %dl */
0xeb, 0x2d,                               /*c2: jmp    f1 <op_le+0xf1> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*c4: cmp    $0x606,%edx */
0x75, 0x55,                               /*ca: jne    121 <op_le+0x121> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*cc: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*d1: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*d4: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*d7: shl    $0x4,%rsi */
0xff, 0xc2,                               /*db: inc    %edx */
0x48, 0x63, 0xd2,                         /*dd: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*e0: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*e4: movsd  (%rax,%rdx,1),%xmm0 */
0x66, 0x0f, 0x2e, 0x04, 0x30,             /*e9: ucomisd (%rax,%rsi,1),%xmm0 */
0x0f, 0x93, 0xc2,                         /*ee: setae  %dl */
0x0f, 0xb6, 0xd2,                         /*f1: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*f4: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*f9: test   %edx,%edx */
0x74, 0x08,                               /*fb: je     105 <op_le+0x105> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*fd: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*103: jmp    10b <op_le+0x10b> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*105: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10b: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*110: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*113: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*117: movl   $0x1,(%rax,%rcx,1) */
0x58,                                     /*11e: pop    %rax */
0xeb, 0x1a,                               /*11f: jmp    13b <op_le+0x13b> */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*121: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*126: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12b: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*130: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*136: callq  13b <op_le+0x13b> */

};
static uint8_t op_le__rodata[] = {

};

static void op_le_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_le_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_le_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_gt__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*9: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*c: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*13: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*17: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1a: and    $0xffff00,%esi */
0xff, 0xc2,                               /*20: inc    %edx */
0x48, 0x63, 0xd2,                         /*22: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*25: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*29: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*2e: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*30: cmp    $0x602,%edx */
0x7f, 0x2b,                               /*36: jg     63 <op_gt+0x63> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*38: cmp    $0x303,%edx */
0x75, 0x56,                               /*3e: jne    96 <op_gt+0x96> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*40: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*45: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*48: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*4b: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*4f: mov    (%rax,%rsi,1),%esi */
0xff, 0xc2,                               /*52: inc    %edx */
0x48, 0x63, 0xd2,                         /*54: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*57: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*5b: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9f, 0xc2,                         /*5e: setg   %dl */
0xeb, 0x7e,                               /*61: jmp    e1 <op_gt+0xe1> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*63: cmp    $0x603,%edx */
0x75, 0x49,                               /*69: jne    b4 <op_gt+0xb4> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6b: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*70: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*73: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*76: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*7a: movsd  (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*7f: inc    %edx */
0x48, 0x63, 0xd2,                         /*81: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*84: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x0c, 0x10,             /*88: cvtsi2sdl (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*8d: ucomisd %xmm1,%xmm0 */
0x0f, 0x97, 0xc2,                         /*91: seta   %dl */
0xeb, 0x4b,                               /*94: jmp    e1 <op_gt+0xe1> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*96: cmp    $0x306,%edx */
0x75, 0x73,                               /*9c: jne    111 <op_gt+0x111> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*9e: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*a3: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*a6: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*a9: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*ad: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xeb, 0x1c,                               /*b2: jmp    d0 <op_gt+0xd0> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*b4: cmp    $0x606,%edx */
0x75, 0x55,                               /*ba: jne    111 <op_gt+0x111> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*bc: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*c1: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*c4: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*c7: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*cb: movsd  (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*d0: inc    %edx */
0x48, 0x63, 0xd2,                         /*d2: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*d5: shl    $0x4,%rdx */
0x66, 0x0f, 0x2e, 0x04, 0x10,             /*d9: ucomisd (%rax,%rdx,1),%xmm0 */
0x0f, 0x97, 0xc2,                         /*de: seta   %dl */
0x0f, 0xb6, 0xd2,                         /*e1: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*e4: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*e9: test   %edx,%edx */
0x74, 0x08,                               /*eb: je     f5 <op_gt+0xf5> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*ed: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*f3: jmp    fb <op_gt+0xfb> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*f5: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fb: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*100: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*103: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*107: movl   $0x1,(%rax,%rcx,1) */
0x58,                                     /*10e: pop    %rax */
0xeb, 0x1a,                               /*10f: jmp    12b <op_gt+0x12b> */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*111: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*116: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11b: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*120: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*126: callq  12b <op_gt+0x12b> */

};
static uint8_t op_gt__rodata[] = {

};

static void op_gt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_gt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_gt_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_ge__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*9: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*c: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*13: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*17: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*1a: and    $0xffff00,%esi */
0xff, 0xc2,                               /*20: inc    %edx */
0x48, 0x63, 0xd2,                         /*22: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*25: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*29: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*2e: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*30: cmp    $0x602,%edx */
0x7f, 0x2b,                               /*36: jg     63 <op_ge+0x63> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*38: cmp    $0x303,%edx */
0x75, 0x56,                               /*3e: jne    96 <op_ge+0x96> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*40: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*45: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*48: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*4b: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*4f: mov    (%rax,%rsi,1),%esi */
0xff, 0xc2,                               /*52: inc    %edx */
0x48, 0x63, 0xd2,                         /*54: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*57: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*5b: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9d, 0xc2,                         /*5e: setge  %dl */
0xeb, 0x7e,                               /*61: jmp    e1 <op_ge+0xe1> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*63: cmp    $0x603,%edx */
0x75, 0x49,                               /*69: jne    b4 <op_ge+0xb4> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6b: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*70: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*73: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*76: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*7a: movsd  (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*7f: inc    %edx */
0x48, 0x63, 0xd2,                         /*81: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*84: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x0c, 0x10,             /*88: cvtsi2sdl (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*8d: ucomisd %xmm1,%xmm0 */
0x0f, 0x93, 0xc2,                         /*91: setae  %dl */
0xeb, 0x4b,                               /*94: jmp    e1 <op_ge+0xe1> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*96: cmp    $0x306,%edx */
0x75, 0x73,                               /*9c: jne    111 <op_ge+0x111> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*9e: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*a3: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*a6: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*a9: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*ad: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xeb, 0x1c,                               /*b2: jmp    d0 <op_ge+0xd0> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*b4: cmp    $0x606,%edx */
0x75, 0x55,                               /*ba: jne    111 <op_ge+0x111> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*bc: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*c1: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*c4: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*c7: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*cb: movsd  (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*d0: inc    %edx */
0x48, 0x63, 0xd2,                         /*d2: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*d5: shl    $0x4,%rdx */
0x66, 0x0f, 0x2e, 0x04, 0x10,             /*d9: ucomisd (%rax,%rdx,1),%xmm0 */
0x0f, 0x93, 0xc2,                         /*de: setae  %dl */
0x0f, 0xb6, 0xd2,                         /*e1: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*e4: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*e9: test   %edx,%edx */
0x74, 0x08,                               /*eb: je     f5 <op_ge+0xf5> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*ed: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*f3: jmp    fb <op_ge+0xfb> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*f5: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fb: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*100: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*103: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*107: movl   $0x1,(%rax,%rcx,1) */
0x58,                                     /*10e: pop    %rax */
0xeb, 0x1a,                               /*10f: jmp    12b <op_ge+0x12b> */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*111: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*116: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11b: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*120: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*126: callq  12b <op_ge+0x12b> */

};
static uint8_t op_ge__rodata[] = {

};

static void op_ge_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_ge_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_ge_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_array__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*d: shl    $0x4,%rbx */
0x4d, 0x8b, 0x7e, 0x18,                   /*11: mov    0x18(%r14),%r15 */
0x49, 0x8b, 0x7e, 0x58,                   /*15: mov    0x58(%r14),%rdi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*19: mov    $0x0,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*1e: shl    $0x4,%rdx */
0x4c, 0x01, 0xfa,                         /*22: add    %r15,%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*25: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2a: callq  2f <op_array+0x2f> */
0x49, 0x89, 0x04, 0x1f,                   /*2f: mov    %rax,(%r15,%rbx,1) */
0x41, 0x89, 0x54, 0x1f, 0x08,             /*33: mov    %edx,0x8(%r15,%rbx,1) */
0x41, 0x8b, 0x46, 0x50,                   /*38: mov    0x50(%r14),%eax */
0x49, 0x8b, 0x4e, 0x58,                   /*3c: mov    0x58(%r14),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*40: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*46: pop    %rbx */
0x41, 0x5e,                               /*47: pop    %r14 */
0x41, 0x5f,                               /*49: pop    %r15 */

};
static uint8_t op_array__rodata[] = {

};

static void op_array_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_array_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_array_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_arycat__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x54,                               /*4: push   %r12 */
0x53,                                     /*6: push   %rbx */
0x49, 0x89, 0xff,                         /*7: mov    %rdi,%r15 */
0x4d, 0x8b, 0x67, 0x18,                   /*a: mov    0x18(%r15),%r12 */
0x4d, 0x8b, 0x77, 0x58,                   /*e: mov    0x58(%r15),%r14 */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*17: shl    $0x4,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*20: shl    $0x4,%rax */
0x49, 0x8b, 0x34, 0x04,                   /*24: mov    (%r12,%rax,1),%rsi */
0x41, 0x8b, 0x54, 0x04, 0x08,             /*28: mov    0x8(%r12,%rax,1),%edx */
0x4c, 0x89, 0xf7,                         /*2d: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*30: callq  35 <op_arycat+0x35> */
0x41, 0x89, 0xd0,                         /*35: mov    %edx,%r8d */
0x49, 0x8b, 0x34, 0x1c,                   /*38: mov    (%r12,%rbx,1),%rsi */
0x41, 0x8b, 0x54, 0x1c, 0x08,             /*3c: mov    0x8(%r12,%rbx,1),%edx */
0x4c, 0x89, 0xf7,                         /*41: mov    %r14,%rdi */
0x48, 0x89, 0xc1,                         /*44: mov    %rax,%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*47: callq  4c <op_arycat+0x4c> */
0x41, 0x8b, 0x47, 0x50,                   /*4c: mov    0x50(%r15),%eax */
0x49, 0x8b, 0x4f, 0x58,                   /*50: mov    0x58(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*54: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*5a: pop    %rbx */
0x41, 0x5c,                               /*5b: pop    %r12 */
0x41, 0x5e,                               /*5d: pop    %r14 */
0x41, 0x5f,                               /*5f: pop    %r15 */

};
static uint8_t op_arycat__rodata[] = {

};

static void op_arycat_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_arycat_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_arycat_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_arypush__text[] = {
0x4c, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%r8 */
0x48, 0x8b, 0x7f, 0x58,                   /*4: mov    0x58(%rdi),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*d: shl    $0x4,%rcx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*16: shl    $0x4,%rax */
0x49, 0x8b, 0x34, 0x08,                   /*1a: mov    (%r8,%rcx,1),%rsi */
0x41, 0x8b, 0x54, 0x08, 0x08,             /*1e: mov    0x8(%r8,%rcx,1),%edx */
0x49, 0x8b, 0x0c, 0x00,                   /*23: mov    (%r8,%rax,1),%rcx */
0x45, 0x8b, 0x44, 0x00, 0x08,             /*27: mov    0x8(%r8,%rax,1),%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2c: callq  31 <op_arypush+0x31> */

};
static uint8_t op_arypush__rodata[] = {

};

static void op_arypush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_arypush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_arypush_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_aref__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x5f, 0x18,                   /*3: mov    0x18(%rdi),%rbx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x0b,                   /*10: mov    (%rbx,%rcx,1),%rsi */
0x8b, 0x44, 0x0b, 0x08,                   /*14: mov    0x8(%rbx,%rcx,1),%eax */
0x83, 0xf8, 0x0e,                         /*18: cmp    $0xe,%eax */
0x75, 0x28,                               /*1b: jne    45 <op_aref+0x45> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*1d: mov    $0x0,%r14d */
0x49, 0xc1, 0xe6, 0x04,                   /*23: shl    $0x4,%r14 */
0x48, 0x8b, 0x7f, 0x58,                   /*27: mov    0x58(%rdi),%rdi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*2b: mov    $0xe,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*30: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*35: callq  3a <op_aref+0x3a> */
0x4a, 0x89, 0x04, 0x33,                   /*3a: mov    %rax,(%rbx,%r14,1) */
0x42, 0x89, 0x54, 0x33, 0x08,             /*3e: mov    %edx,0x8(%rbx,%r14,1) */
0xeb, 0x42,                               /*43: jmp    87 <op_aref+0x87> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*45: mov    $0x0,%edx */
0x85, 0xd2,                               /*4a: test   %edx,%edx */
0x75, 0x1b,                               /*4c: jne    69 <op_aref+0x69> */
0x8b, 0x4c, 0x0b, 0x0c,                   /*4e: mov    0xc(%rbx,%rcx,1),%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*52: mov    $0x0,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*57: shl    $0x4,%rdx */
0x48, 0x89, 0x34, 0x13,                   /*5b: mov    %rsi,(%rbx,%rdx,1) */
0x89, 0x44, 0x13, 0x08,                   /*5f: mov    %eax,0x8(%rbx,%rdx,1) */
0x89, 0x4c, 0x13, 0x0c,                   /*63: mov    %ecx,0xc(%rbx,%rdx,1) */
0xeb, 0x1e,                               /*67: jmp    87 <op_aref+0x87> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*69: mov    $0x0,%eax */
0x48, 0x98,                               /*6e: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*70: shl    $0x4,%rax */
0xc7, 0x44, 0x03, 0x08, 0x00, 0x00, 0x00, 0x00,/*74: movl   $0x0,0x8(%rbx,%rax,1) */
0x48, 0x8b, 0x4f, 0x18,                   /*7c: mov    0x18(%rdi),%rcx */
0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*80: movl   $0x0,(%rcx,%rax,1) */
0x5b,                                     /*87: pop    %rbx */
0x41, 0x5e,                               /*88: pop    %r14 */

};
static uint8_t op_aref__rodata[] = {

};

static void op_aref_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_aref_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_aref_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_aset__text[] = {
0x4c, 0x8b, 0x4f, 0x18,                   /*0: mov    0x18(%rdi),%r9 */
0x48, 0x8b, 0x7f, 0x58,                   /*4: mov    0x58(%rdi),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*d: shl    $0x4,%rcx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*16: shl    $0x4,%rax */
0x49, 0x8b, 0x34, 0x09,                   /*1a: mov    (%r9,%rcx,1),%rsi */
0x41, 0x8b, 0x54, 0x09, 0x08,             /*1e: mov    0x8(%r9,%rcx,1),%edx */
0x4d, 0x8b, 0x04, 0x01,                   /*23: mov    (%r9,%rax,1),%r8 */
0x45, 0x8b, 0x4c, 0x01, 0x08,             /*27: mov    0x8(%r9,%rax,1),%r9d */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2c: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*31: callq  36 <op_aset+0x36> */

};
static uint8_t op_aset__rodata[] = {

};

static void op_aset_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_aset_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_aset_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_apost__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x49, 0x89, 0xff,                         /*a: mov    %rdi,%r15 */
0x49, 0x8b, 0x47, 0x18,                   /*d: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*16: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*19: shl    $0x4,%rcx */
0x4c, 0x8d, 0x24, 0x08,                   /*1d: lea    (%rax,%rcx,1),%r12 */
0x4c, 0x8d, 0x6c, 0x08, 0x08,             /*21: lea    0x8(%rax,%rcx,1),%r13 */
0x83, 0x7c, 0x08, 0x08, 0x0e,             /*26: cmpl   $0xe,0x8(%rax,%rcx,1) */
0x0f, 0x85, 0xa0, 0x00, 0x00, 0x00,       /*2b: jne    d1 <op_apost+0xd1> */
0x4c, 0x8b, 0x34, 0x08,                   /*31: mov    (%rax,%rcx,1),%r14 */
0x41, 0x8b, 0x5e, 0x18,                   /*35: mov    0x18(%r14),%ebx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*39: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3e: mov    $0x0,%ecx */
0x01, 0xc1,                               /*43: add    %eax,%ecx */
0x49, 0x8b, 0x7f, 0x58,                   /*45: mov    0x58(%r15),%rdi */
0x39, 0xcb,                               /*49: cmp    %ecx,%ebx */
0x0f, 0x8e, 0xd4, 0x00, 0x00, 0x00,       /*4b: jle    125 <op_apost+0x125> */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%ebp */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*56: mov    $0x0,%esi */
0x48, 0x63, 0xd6,                         /*5b: movslq %esi,%rdx */
0xf7, 0xde,                               /*5e: neg    %esi */
0x29, 0xee,                               /*60: sub    %ebp,%esi */
0x01, 0xde,                               /*62: add    %ebx,%esi */
0x48, 0xc1, 0xe2, 0x04,                   /*64: shl    $0x4,%rdx */
0x49, 0x03, 0x56, 0x28,                   /*68: add    0x28(%r14),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6c: callq  71 <op_apost+0x71> */
0x49, 0x89, 0x04, 0x24,                   /*71: mov    %rax,(%r12) */
0x41, 0x89, 0x55, 0x00,                   /*75: mov    %edx,0x0(%r13) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*79: mov    $0x0,%eax */
0x85, 0xed,                               /*7e: test   %ebp,%ebp */
0x0f, 0x84, 0x49, 0x01, 0x00, 0x00,       /*80: je     1cf <op_apost+0x1cf> */
0xf7, 0xdd,                               /*86: neg    %ebp */
0x48, 0x98,                               /*88: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*8a: shl    $0x4,%rax */
0x48, 0x83, 0xc0, 0x10,                   /*8e: add    $0x10,%rax */
0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*92: data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x49, 0x8b, 0x4f, 0x18,                   /*a0: mov    0x18(%r15),%rcx */
0x8d, 0x14, 0x2b,                         /*a4: lea    (%rbx,%rbp,1),%edx */
0x48, 0x63, 0xd2,                         /*a7: movslq %edx,%rdx */
0x49, 0x8b, 0x76, 0x28,                   /*aa: mov    0x28(%r14),%rsi */
0x48, 0xc1, 0xe2, 0x04,                   /*ae: shl    $0x4,%rdx */
0x48, 0x8b, 0x3c, 0x16,                   /*b2: mov    (%rsi,%rdx,1),%rdi */
0x48, 0x8b, 0x54, 0x16, 0x08,             /*b6: mov    0x8(%rsi,%rdx,1),%rdx */
0x48, 0x89, 0x54, 0x01, 0x08,             /*bb: mov    %rdx,0x8(%rcx,%rax,1) */
0x48, 0x89, 0x3c, 0x01,                   /*c0: mov    %rdi,(%rcx,%rax,1) */
0x48, 0x83, 0xc0, 0x10,                   /*c4: add    $0x10,%rax */
0xff, 0xc5,                               /*c8: inc    %ebp */
0x75, 0xd4,                               /*ca: jne    a0 <op_apost+0xa0> */
0xe9, 0xfe, 0x00, 0x00, 0x00,             /*cc: jmpq   1cf <op_apost+0x1cf> */
0x49, 0x8b, 0x7f, 0x58,                   /*d1: mov    0x58(%r15),%rdi */
0x31, 0xf6,                               /*d5: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*d7: callq  dc <op_apost+0xdc> */
0x49, 0x89, 0x04, 0x24,                   /*dc: mov    %rax,(%r12) */
0x41, 0x89, 0x55, 0x00,                   /*e0: mov    %edx,0x0(%r13) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e4: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e9: mov    $0x0,%eax */
0x85, 0xc0,                               /*ee: test   %eax,%eax */
0x0f, 0x84, 0xd9, 0x00, 0x00, 0x00,       /*f0: je     1cf <op_apost+0x1cf> */
0x48, 0x63, 0xc9,                         /*f6: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f9: shl    $0x4,%rcx */
0x0f, 0x1f, 0x00,                         /*fd: nopl   (%rax) */
0xff, 0xc8,                               /*100: dec    %eax */
0x49, 0x8b, 0x57, 0x18,                   /*102: mov    0x18(%r15),%rdx */
0xc7, 0x44, 0x0a, 0x18, 0x00, 0x00, 0x00, 0x00,/*106: movl   $0x0,0x18(%rdx,%rcx,1) */
0x49, 0x8b, 0x57, 0x18,                   /*10e: mov    0x18(%r15),%rdx */
0xc7, 0x44, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00,/*112: movl   $0x0,0x10(%rdx,%rcx,1) */
0x48, 0x8d, 0x49, 0x10,                   /*11a: lea    0x10(%rcx),%rcx */
0x75, 0xe0,                               /*11e: jne    100 <op_apost+0x100> */
0xe9, 0xaa, 0x00, 0x00, 0x00,             /*120: jmpq   1cf <op_apost+0x1cf> */
0x31, 0xed,                               /*125: xor    %ebp,%ebp */
0x31, 0xf6,                               /*127: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*129: callq  12e <op_apost+0x12e> */
0x49, 0x89, 0x04, 0x24,                   /*12e: mov    %rax,(%r12) */
0x41, 0x89, 0x55, 0x00,                   /*132: mov    %edx,0x0(%r13) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*136: mov    $0x0,%eax */
0x39, 0xc3,                               /*13b: cmp    %eax,%ebx */
0x7e, 0x49,                               /*13d: jle    188 <op_apost+0x188> */
0x8d, 0x6b, 0xff,                         /*13f: lea    -0x1(%rbx),%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*142: mov    $0x0,%eax */
0x29, 0xc5,                               /*147: sub    %eax,%ebp */
0x29, 0xc3,                               /*149: sub    %eax,%ebx */
0x48, 0x98,                               /*14b: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*14d: shl    $0x4,%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*151: mov    $0x0,%ecx */
0xff, 0xc1,                               /*156: inc    %ecx */
0x48, 0x63, 0xc9,                         /*158: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*15b: shl    $0x4,%rcx */
0x90,                                     /*15f: nop */
0x49, 0x8b, 0x57, 0x18,                   /*160: mov    0x18(%r15),%rdx */
0x49, 0x8b, 0x76, 0x28,                   /*164: mov    0x28(%r14),%rsi */
0x48, 0x8b, 0x3c, 0x06,                   /*168: mov    (%rsi,%rax,1),%rdi */
0x48, 0x8b, 0x74, 0x06, 0x08,             /*16c: mov    0x8(%rsi,%rax,1),%rsi */
0x48, 0x89, 0x74, 0x0a, 0x08,             /*171: mov    %rsi,0x8(%rdx,%rcx,1) */
0x48, 0x89, 0x3c, 0x0a,                   /*176: mov    %rdi,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x10,                   /*17a: add    $0x10,%rcx */
0x48, 0x83, 0xc0, 0x10,                   /*17e: add    $0x10,%rax */
0xff, 0xcb,                               /*182: dec    %ebx */
0x75, 0xda,                               /*184: jne    160 <op_apost+0x160> */
0xff, 0xc5,                               /*186: inc    %ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*188: mov    $0x0,%eax */
0x39, 0xc5,                               /*18d: cmp    %eax,%ebp */
0x7d, 0x3e,                               /*18f: jge    1cf <op_apost+0x1cf> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*191: mov    $0x0,%eax */
0x29, 0xe8,                               /*196: sub    %ebp,%eax */
0x48, 0x63, 0xd5,                         /*198: movslq %ebp,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*19b: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1a0: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1a2: movslq %ecx,%rcx */
0x48, 0x01, 0xd1,                         /*1a5: add    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*1a8: shl    $0x4,%rcx */
0x0f, 0x1f, 0x40, 0x00,                   /*1ac: nopl   0x0(%rax) */
0x49, 0x8b, 0x57, 0x18,                   /*1b0: mov    0x18(%r15),%rdx */
0xc7, 0x44, 0x0a, 0x08, 0x00, 0x00, 0x00, 0x00,/*1b4: movl   $0x0,0x8(%rdx,%rcx,1) */
0x49, 0x8b, 0x57, 0x18,                   /*1bc: mov    0x18(%r15),%rdx */
0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, /*1c0: movl   $0x0,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x10,                   /*1c7: add    $0x10,%rcx */
0xff, 0xc8,                               /*1cb: dec    %eax */
0x75, 0xe1,                               /*1cd: jne    1b0 <op_apost+0x1b0> */
0x41, 0x8b, 0x47, 0x50,                   /*1cf: mov    0x50(%r15),%eax */
0x49, 0x8b, 0x4f, 0x58,                   /*1d3: mov    0x58(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*1d7: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*1dd: pop    %rbx */
0x41, 0x5c,                               /*1de: pop    %r12 */
0x41, 0x5d,                               /*1e0: pop    %r13 */
0x41, 0x5e,                               /*1e2: pop    %r14 */
0x41, 0x5f,                               /*1e4: pop    %r15 */
0x5d,                                     /*1e6: pop    %rbp */

};
static uint8_t op_apost__rodata[] = {

};

static void op_apost_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_apost_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_apost_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_string__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*8: mov    $0x0,%r14d */
0x49, 0xc1, 0xe6, 0x04,                   /*e: shl    $0x4,%r14 */
0x48, 0x8b, 0x7b, 0x58,                   /*12: mov    0x58(%rbx),%rdi */
0x4c, 0x8b, 0x7b, 0x18,                   /*16: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x43, 0x20,                   /*1a: mov    0x20(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1e: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*23: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x08,                   /*27: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*2b: mov    0x8(%rax,%rcx,1),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2f: callq  34 <op_string+0x34> */
0x4b, 0x89, 0x04, 0x37,                   /*34: mov    %rax,(%r15,%r14,1) */
0x43, 0x89, 0x54, 0x37, 0x08,             /*38: mov    %edx,0x8(%r15,%r14,1) */
0x8b, 0x43, 0x50,                         /*3d: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*40: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*44: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*4a: pop    %rbx */
0x41, 0x5e,                               /*4b: pop    %r14 */
0x41, 0x5f,                               /*4d: pop    %r15 */

};
static uint8_t op_string__rodata[] = {

};

static void op_string_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_string_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_string_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_strcat__text[] = {
0x4c, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%r8 */
0x48, 0x8b, 0x7f, 0x58,                   /*4: mov    0x58(%rdi),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*d: shl    $0x4,%rcx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*16: shl    $0x4,%rax */
0x49, 0x8b, 0x34, 0x08,                   /*1a: mov    (%r8,%rcx,1),%rsi */
0x41, 0x8b, 0x54, 0x08, 0x08,             /*1e: mov    0x8(%r8,%rcx,1),%edx */
0x49, 0x8b, 0x0c, 0x00,                   /*23: mov    (%r8,%rax,1),%rcx */
0x45, 0x8b, 0x44, 0x00, 0x08,             /*27: mov    0x8(%r8,%rax,1),%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2c: callq  31 <op_strcat+0x31> */

};
static uint8_t op_strcat__rodata[] = {

};

static void op_strcat_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_strcat_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_strcat_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_hash__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x54,                               /*5: push   %r12 */
0x53,                                     /*7: push   %rbx */
0x48, 0x83, 0xec, 0x20,                   /*8: sub    $0x20,%rsp */
0x48, 0x89, 0xfb,                         /*c: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%eax */
0x89, 0x44, 0x24, 0x1c,                   /*14: mov    %eax,0x1c(%rsp) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%eax */
0x89, 0x44, 0x24, 0x18,                   /*1d: mov    %eax,0x18(%rsp) */
0x8b, 0x44, 0x24, 0x1c,                   /*21: mov    0x1c(%rsp),%eax */
0x8b, 0x4c, 0x24, 0x18,                   /*25: mov    0x18(%rsp),%ecx */
0x44, 0x8d, 0x3c, 0x48,                   /*29: lea    (%rax,%rcx,2),%r15d */
0x48, 0x8b, 0x7b, 0x58,                   /*2d: mov    0x58(%rbx),%rdi */
0x8b, 0x74, 0x24, 0x18,                   /*31: mov    0x18(%rsp),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*35: callq  3a <op_hash+0x3a> */
0x49, 0x89, 0xc6,                         /*3a: mov    %rax,%r14 */
0x41, 0x89, 0xd4,                         /*3d: mov    %edx,%r12d */
0xeb, 0x58,                               /*40: jmp    9a <op_hash+0x9a> */
0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*42: data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x7b, 0x58,                   /*50: mov    0x58(%rbx),%rdi */
0x48, 0x63, 0x44, 0x24, 0x1c,             /*54: movslq 0x1c(%rsp),%rax */
0x48, 0x8b, 0x53, 0x18,                   /*59: mov    0x18(%rbx),%rdx */
0x48, 0xc1, 0xe0, 0x04,                   /*5d: shl    $0x4,%rax */
0x48, 0x63, 0x74, 0x24, 0x1c,             /*61: movslq 0x1c(%rsp),%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*66: shl    $0x4,%rsi */
0x48, 0x8b, 0x6b, 0x18,                   /*6a: mov    0x18(%rbx),%rbp */
0x48, 0x8b, 0x0c, 0x02,                   /*6e: mov    (%rdx,%rax,1),%rcx */
0x44, 0x8b, 0x44, 0x02, 0x08,             /*72: mov    0x8(%rdx,%rax,1),%r8d */
0x48, 0x8b, 0x44, 0x2e, 0x10,             /*77: mov    0x10(%rsi,%rbp,1),%rax */
0x48, 0x8b, 0x54, 0x2e, 0x18,             /*7c: mov    0x18(%rsi,%rbp,1),%rdx */
0x48, 0x89, 0x54, 0x24, 0x08,             /*81: mov    %rdx,0x8(%rsp) */
0x48, 0x89, 0x04, 0x24,                   /*86: mov    %rax,(%rsp) */
0x4c, 0x89, 0xf6,                         /*8a: mov    %r14,%rsi */
0x44, 0x89, 0xe2,                         /*8d: mov    %r12d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*90: callq  95 <op_hash+0x95> */
0x83, 0x44, 0x24, 0x1c, 0x02,             /*95: addl   $0x2,0x1c(%rsp) */
0x8b, 0x44, 0x24, 0x1c,                   /*9a: mov    0x1c(%rsp),%eax */
0x44, 0x39, 0xf8,                         /*9e: cmp    %r15d,%eax */
0x7c, 0xad,                               /*a1: jl     50 <op_hash+0x50> */
0x48, 0x8b, 0x43, 0x18,                   /*a3: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*ac: shl    $0x4,%rcx */
0x4c, 0x89, 0x34, 0x08,                   /*b0: mov    %r14,(%rax,%rcx,1) */
0x44, 0x89, 0x64, 0x08, 0x08,             /*b4: mov    %r12d,0x8(%rax,%rcx,1) */
0x8b, 0x43, 0x50,                         /*b9: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*bc: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*c0: mov    %eax,0xdc(%rcx) */
0x48, 0x83, 0xc4, 0x20,                   /*c6: add    $0x20,%rsp */
0x5b,                                     /*ca: pop    %rbx */
0x41, 0x5c,                               /*cb: pop    %r12 */
0x41, 0x5e,                               /*cd: pop    %r14 */
0x41, 0x5f,                               /*cf: pop    %r15 */
0x5d,                                     /*d1: pop    %rbp */

};
static uint8_t op_hash__rodata[] = {

};

static void op_hash_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_hash_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_hash_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_lambda__text[] = {
0xbe, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*f: callq  14 <op_lambda+0x14> */

};
static uint8_t op_lambda__rodata[] = {

};

static void op_lambda_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_lambda_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_lambda_set_args(op, GETARG_A(c),GETARG_b(c),GETARG_c(c),op_idx);
}


/* args: {} */
static uint8_t op_range__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0x41, 0xbf, 0x00, 0x00, 0x00, 0x00,       /*8: mov    $0x0,%r15d */
0x49, 0xc1, 0xe7, 0x04,                   /*e: shl    $0x4,%r15 */
0x49, 0x8b, 0x5e, 0x18,                   /*12: mov    0x18(%r14),%rbx */
0x49, 0x8b, 0x7e, 0x58,                   /*16: mov    0x58(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%eax */
0x48, 0x98,                               /*1f: cltq */
0x48, 0x89, 0xc1,                         /*21: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*24: shl    $0x4,%rcx */
0xff, 0xc0,                               /*28: inc    %eax */
0x48, 0x98,                               /*2a: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*2c: shl    $0x4,%rax */
0x48, 0x8b, 0x34, 0x0b,                   /*30: mov    (%rbx,%rcx,1),%rsi */
0x8b, 0x54, 0x0b, 0x08,                   /*34: mov    0x8(%rbx,%rcx,1),%edx */
0x48, 0x8b, 0x0c, 0x03,                   /*38: mov    (%rbx,%rax,1),%rcx */
0x44, 0x8b, 0x44, 0x03, 0x08,             /*3c: mov    0x8(%rbx,%rax,1),%r8d */
0x41, 0xb9, 0x01, 0x00, 0x00, 0x00,       /*41: mov    $0x1,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*47: callq  4c <op_range+0x4c> */
0x4a, 0x89, 0x04, 0x3b,                   /*4c: mov    %rax,(%rbx,%r15,1) */
0x42, 0x89, 0x54, 0x3b, 0x08,             /*50: mov    %edx,0x8(%rbx,%r15,1) */
0x41, 0x8b, 0x46, 0x50,                   /*55: mov    0x50(%r14),%eax */
0x49, 0x8b, 0x4e, 0x58,                   /*59: mov    0x58(%r14),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*5d: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*63: pop    %rbx */
0x41, 0x5e,                               /*64: pop    %r14 */
0x41, 0x5f,                               /*66: pop    %r15 */

};
static uint8_t op_range__rodata[] = {

};

static void op_range_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_range_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_range_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_oclass__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*5: shl    $0x4,%rax */
0x48, 0x8b, 0x4f, 0x18,                   /*9: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x57, 0x58,                   /*d: mov    0x58(%rdi),%rdx */
0x48, 0x8b, 0x52, 0x40,                   /*11: mov    0x40(%rdx),%rdx */
0x0f, 0xb6, 0x32,                         /*15: movzbl (%rdx),%esi */
0x48, 0x89, 0x14, 0x01,                   /*18: mov    %rdx,(%rcx,%rax,1) */
0x89, 0x74, 0x01, 0x08,                   /*1c: mov    %esi,0x8(%rcx,%rax,1) */

};
static uint8_t op_oclass__rodata[] = {

};

static void op_oclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_oclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_oclass_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_class__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x18,                   /*4: mov    0x18(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x28,                   /*8: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x44, 0x8b, 0x0c, 0x88,                   /*11: mov    (%rax,%rcx,4),%r9d */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%eax */
0x48, 0x63, 0xc8,                         /*1a: movslq %eax,%rcx */
0x48, 0x89, 0xca,                         /*1d: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*20: shl    $0x4,%rdx */
0x4c, 0x8b, 0x14, 0x17,                   /*24: mov    (%rdi,%rdx,1),%r10 */
0x4c, 0x89, 0xd0,                         /*28: mov    %r10,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*2b: shr    $0x20,%rax */
0x8b, 0x54, 0x17, 0x08,                   /*2f: mov    0x8(%rdi,%rdx,1),%edx */
0xff, 0xc1,                               /*33: inc    %ecx */
0x48, 0x63, 0xf1,                         /*35: movslq %ecx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*38: shl    $0x4,%rsi */
0x48, 0x8b, 0x0c, 0x37,                   /*3c: mov    (%rdi,%rsi,1),%rcx */
0x44, 0x8b, 0x44, 0x37, 0x08,             /*40: mov    0x8(%rdi,%rsi,1),%r8d */
0x85, 0xd2,                               /*45: test   %edx,%edx */
0x75, 0x22,                               /*47: jne    6b <op_class+0x6b> */
0x31, 0xd2,                               /*49: xor    %edx,%edx */
0x45, 0x85, 0xd2,                         /*4b: test   %r10d,%r10d */
0x75, 0x1b,                               /*4e: jne    6b <op_class+0x6b> */
0x48, 0x8b, 0x43, 0x58,                   /*50: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*54: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*58: mov    0x20(%rax),%rax */
0x4c, 0x8b, 0x50, 0x48,                   /*5c: mov    0x48(%rax),%r10 */
0x41, 0x0f, 0xb6, 0x12,                   /*60: movzbl (%r10),%edx */
0x4c, 0x89, 0xd0,                         /*64: mov    %r10,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*67: shr    $0x20,%rax */
0x48, 0x8b, 0x7b, 0x58,                   /*6b: mov    0x58(%rbx),%rdi */
0x48, 0xc1, 0xe0, 0x20,                   /*6f: shl    $0x20,%rax */
0x44, 0x89, 0xd6,                         /*73: mov    %r10d,%esi */
0x48, 0x09, 0xc6,                         /*76: or     %rax,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*79: callq  7e <op_class+0x7e> */
0x48, 0x8b, 0x4b, 0x18,                   /*7e: mov    0x18(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*82: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*87: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*8a: shl    $0x4,%rdx */
0x0f, 0xb6, 0x30,                         /*8e: movzbl (%rax),%esi */
0x48, 0x89, 0x04, 0x11,                   /*91: mov    %rax,(%rcx,%rdx,1) */
0x89, 0x74, 0x11, 0x08,                   /*95: mov    %esi,0x8(%rcx,%rdx,1) */
0x8b, 0x43, 0x50,                         /*99: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*9c: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*a0: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*a6: pop    %rbx */

};
static uint8_t op_class__rodata[] = {

};

static void op_class_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_class_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_class_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_module__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x53, 0x18,                   /*4: mov    0x18(%rbx),%rdx */
0x48, 0x8b, 0x43, 0x28,                   /*8: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x8b, 0x0c, 0x88,                         /*11: mov    (%rax,%rcx,4),%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%eax */
0x48, 0x63, 0xf8,                         /*19: movslq %eax,%rdi */
0x48, 0xc1, 0xe7, 0x04,                   /*1c: shl    $0x4,%rdi */
0x48, 0x8b, 0x34, 0x3a,                   /*20: mov    (%rdx,%rdi,1),%rsi */
0x48, 0x89, 0xf0,                         /*24: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*27: shr    $0x20,%rax */
0x8b, 0x54, 0x3a, 0x08,                   /*2b: mov    0x8(%rdx,%rdi,1),%edx */
0x85, 0xd2,                               /*2f: test   %edx,%edx */
0x75, 0x20,                               /*31: jne    53 <op_module+0x53> */
0x31, 0xd2,                               /*33: xor    %edx,%edx */
0x85, 0xf6,                               /*35: test   %esi,%esi */
0x75, 0x1a,                               /*37: jne    53 <op_module+0x53> */
0x48, 0x8b, 0x43, 0x58,                   /*39: mov    0x58(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*3d: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*41: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*45: mov    0x48(%rax),%rsi */
0x0f, 0xb6, 0x16,                         /*49: movzbl (%rsi),%edx */
0x48, 0x89, 0xf0,                         /*4c: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*4f: shr    $0x20,%rax */
0x48, 0x8b, 0x7b, 0x58,                   /*53: mov    0x58(%rbx),%rdi */
0x48, 0xc1, 0xe0, 0x20,                   /*57: shl    $0x20,%rax */
0x89, 0xf6,                               /*5b: mov    %esi,%esi */
0x48, 0x09, 0xc6,                         /*5d: or     %rax,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*60: callq  65 <op_module+0x65> */
0x48, 0x8b, 0x4b, 0x18,                   /*65: mov    0x18(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*69: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*6e: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*71: shl    $0x4,%rdx */
0x0f, 0xb6, 0x30,                         /*75: movzbl (%rax),%esi */
0x48, 0x89, 0x04, 0x11,                   /*78: mov    %rax,(%rcx,%rdx,1) */
0x89, 0x74, 0x11, 0x08,                   /*7c: mov    %esi,0x8(%rcx,%rdx,1) */
0x8b, 0x43, 0x50,                         /*80: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*83: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*87: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*8d: pop    %rbx */

};
static uint8_t op_module__rodata[] = {

};

static void op_module_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_module_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_module_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_exec__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x49, 0x89, 0xfe,                         /*a: mov    %rdi,%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%eax */
0x4c, 0x63, 0xe8,                         /*12: movslq %eax,%r13 */
0x4c, 0x89, 0xed,                         /*15: mov    %r13,%rbp */
0x48, 0xc1, 0xe5, 0x04,                   /*18: shl    $0x4,%rbp */
0x49, 0x8b, 0x46, 0x18,                   /*1c: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x7e, 0x58,                   /*20: mov    0x58(%r14),%rdi */
0x4c, 0x8b, 0x3c, 0x28,                   /*24: mov    (%rax,%rbp,1),%r15 */
0x44, 0x8b, 0x64, 0x28, 0x08,             /*28: mov    0x8(%rax,%rbp,1),%r12d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2d: callq  32 <op_exec+0x32> */
0x48, 0x89, 0xc3,                         /*32: mov    %rax,%rbx */
0x49, 0x8b, 0x46, 0x10,                   /*35: mov    0x10(%r14),%rax */
0x48, 0x83, 0xc0, 0x04,                   /*39: add    $0x4,%rax */
0x48, 0x89, 0x43, 0x30,                   /*3d: mov    %rax,0x30(%rbx) */
0x44, 0x89, 0x6b, 0x44,                   /*41: mov    %r13d,0x44(%rbx) */
0xc7, 0x03, 0x00, 0x00, 0x00, 0x00,       /*45: movl   $0x0,(%rbx) */
0x49, 0x8b, 0x46, 0x58,                   /*4b: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*4f: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*53: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x10,                   /*57: mov    %rax,0x10(%rbx) */
0xc7, 0x43, 0x40, 0x00, 0x00, 0x00, 0x00, /*5b: movl   $0x0,0x40(%rbx) */
0x4c, 0x89, 0x7b, 0x48,                   /*62: mov    %r15,0x48(%rbx) */
0x49, 0x8b, 0x46, 0x58,                   /*66: mov    0x58(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*6a: mov    0x18(%rax),%rax */
0x48, 0x01, 0x68, 0x08,                   /*6e: add    %rbp,0x8(%rax) */
0x49, 0x8b, 0x46, 0x08,                   /*72: mov    0x8(%r14),%rax */
0x49, 0x8b, 0x7e, 0x58,                   /*76: mov    0x58(%r14),%rdi */
0x48, 0x8b, 0x40, 0x20,                   /*7a: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7e: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*83: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*87: callq  8c <op_exec+0x8c> */
0x48, 0x89, 0xc5,                         /*8c: mov    %rax,%rbp */
0x48, 0x8b, 0x43, 0x48,                   /*8f: mov    0x48(%rbx),%rax */
0x48, 0x89, 0x45, 0x20,                   /*93: mov    %rax,0x20(%rbp) */
0x48, 0x89, 0x6b, 0x08,                   /*97: mov    %rbp,0x8(%rbx) */
0xf6, 0x45, 0x02, 0x04,                   /*9b: testb  $0x4,0x2(%rbp) */
0x74, 0x44,                               /*9f: je     e5 <op_exec+0xe5> */
0xc7, 0x43, 0x18, 0x00, 0x00, 0x00, 0x00, /*a1: movl   $0x0,0x18(%rbx) */
0x49, 0x8b, 0x7e, 0x58,                   /*a8: mov    0x58(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*ac: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*b0: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xfe,                         /*b4: mov    %r15,%rsi */
0x44, 0x89, 0xe2,                         /*b7: mov    %r12d,%edx */
0xff, 0x55, 0x18,                         /*ba: callq  *0x18(%rbp) */
0x48, 0x89, 0x03,                         /*bd: mov    %rax,(%rbx) */
0x89, 0x53, 0x08,                         /*c0: mov    %edx,0x8(%rbx) */
0x49, 0x8b, 0x7e, 0x58,                   /*c3: mov    0x58(%r14),%rdi */
0x41, 0x8b, 0x76, 0x50,                   /*c7: mov    0x50(%r14),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*cb: callq  d0 <op_exec+0xd0> */
0x49, 0x8b, 0x46, 0x58,                   /*d0: mov    0x58(%r14),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*d4: cmpq   $0x0,0x28(%rax) */
0x74, 0x68,                               /*d9: je     143 <op_exec+0x143> */
0x4c, 0x89, 0xf7,                         /*db: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*de: callq  e3 <op_exec+0xe3> */
0xeb, 0x7b,                               /*e3: jmp    160 <op_exec+0x160> */
0x48, 0x8b, 0x45, 0x18,                   /*e5: mov    0x18(%rbp),%rax */
0x49, 0x89, 0x46, 0x08,                   /*e9: mov    %rax,0x8(%r14) */
0x48, 0x8b, 0x48, 0x10,                   /*ed: mov    0x10(%rax),%rcx */
0x49, 0x89, 0x4e, 0x20,                   /*f1: mov    %rcx,0x20(%r14) */
0x48, 0x8b, 0x48, 0x18,                   /*f5: mov    0x18(%rax),%rcx */
0x49, 0x89, 0x4e, 0x28,                   /*f9: mov    %rcx,0x28(%r14) */
0x49, 0x8b, 0x7e, 0x58,                   /*fd: mov    0x58(%r14),%rdi */
0x0f, 0xb7, 0x70, 0x02,                   /*101: movzwl 0x2(%rax),%esi */
0xba, 0x01, 0x00, 0x00, 0x00,             /*105: mov    $0x1,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*10a: callq  10f <op_exec+0x10f> */
0x49, 0x8b, 0x46, 0x08,                   /*10f: mov    0x8(%r14),%rax */
0x0f, 0xb7, 0x40, 0x02,                   /*113: movzwl 0x2(%rax),%eax */
0x89, 0x43, 0x18,                         /*117: mov    %eax,0x18(%rbx) */
0x49, 0x8b, 0x7e, 0x58,                   /*11a: mov    0x58(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*11e: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*122: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x18,                   /*126: mov    %rax,0x18(%r14) */
0x49, 0x8b, 0x46, 0x08,                   /*12a: mov    0x8(%r14),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*12e: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x10,                   /*132: mov    %rax,0x10(%r14) */
0x48, 0x89, 0xee,                         /*136: mov    %rbp,%rsi */
0x4c, 0x89, 0xf2,                         /*139: mov    %r14,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*13c: callq  141 <op_exec+0x141> */
0xeb, 0x1d,                               /*141: jmp    160 <op_exec+0x160> */
0x48, 0x8b, 0x40, 0x18,                   /*143: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*147: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*14b: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*14f: mov    %rcx,0x8(%rax) */
0x49, 0x89, 0x4e, 0x18,                   /*153: mov    %rcx,0x18(%r14) */
0x49, 0x8b, 0x7e, 0x58,                   /*157: mov    0x58(%r14),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*15b: callq  160 <op_exec+0x160> */
0x5b,                                     /*160: pop    %rbx */
0x41, 0x5c,                               /*161: pop    %r12 */
0x41, 0x5d,                               /*163: pop    %r13 */
0x41, 0x5e,                               /*165: pop    %r14 */
0x41, 0x5f,                               /*167: pop    %r15 */
0x5d,                                     /*169: pop    %rbp */

};
static uint8_t op_exec__rodata[] = {

};

static void op_exec_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_exec_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_exec_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_method__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x48, 0x98,                               /*9: cltq */
0x48, 0x89, 0xc1,                         /*b: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*e: shl    $0x4,%rcx */
0x4c, 0x8b, 0x43, 0x18,                   /*12: mov    0x18(%rbx),%r8 */
0x48, 0x8b, 0x53, 0x28,                   /*16: mov    0x28(%rbx),%rdx */
0x49, 0x8b, 0x34, 0x08,                   /*1a: mov    (%r8,%rcx,1),%rsi */
0x48, 0x8b, 0x7b, 0x58,                   /*1e: mov    0x58(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*22: mov    $0x0,%ecx */
0x8b, 0x14, 0x8a,                         /*27: mov    (%rdx,%rcx,4),%edx */
0xff, 0xc0,                               /*2a: inc    %eax */
0x48, 0x98,                               /*2c: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*2e: shl    $0x4,%rax */
0x49, 0x8b, 0x0c, 0x00,                   /*32: mov    (%r8,%rax,1),%rcx */
0x45, 0x8b, 0x44, 0x00, 0x08,             /*36: mov    0x8(%r8,%rax,1),%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3b: callq  40 <op_method+0x40> */
0x8b, 0x43, 0x50,                         /*40: mov    0x50(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x58,                   /*43: mov    0x58(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*47: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*4d: pop    %rbx */

};
static uint8_t op_method__rodata[] = {

};

static void op_method_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_method_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_method_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_sclass__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0x41, 0xbf, 0x00, 0x00, 0x00, 0x00,       /*8: mov    $0x0,%r15d */
0x49, 0xc1, 0xe7, 0x04,                   /*e: shl    $0x4,%r15 */
0x49, 0x8b, 0x5e, 0x18,                   /*12: mov    0x18(%r14),%rbx */
0x49, 0x8b, 0x7e, 0x58,                   /*16: mov    0x58(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*1f: shl    $0x4,%rax */
0x48, 0x8b, 0x34, 0x03,                   /*23: mov    (%rbx,%rax,1),%rsi */
0x8b, 0x54, 0x03, 0x08,                   /*27: mov    0x8(%rbx,%rax,1),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2b: callq  30 <op_sclass+0x30> */
0x4a, 0x89, 0x04, 0x3b,                   /*30: mov    %rax,(%rbx,%r15,1) */
0x42, 0x89, 0x54, 0x3b, 0x08,             /*34: mov    %edx,0x8(%rbx,%r15,1) */
0x41, 0x8b, 0x46, 0x50,                   /*39: mov    0x50(%r14),%eax */
0x49, 0x8b, 0x4e, 0x58,                   /*3d: mov    0x58(%r14),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*41: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*47: pop    %rbx */
0x41, 0x5e,                               /*48: pop    %r14 */
0x41, 0x5f,                               /*4a: pop    %r15 */

};
static uint8_t op_sclass__rodata[] = {

};

static void op_sclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sclass_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_tclass__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0x49, 0x8b, 0x5e, 0x58,                   /*8: mov    0x58(%r14),%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*c: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*10: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x48,                   /*14: mov    0x48(%rax),%rax */
0x48, 0x85, 0xc0,                         /*18: test   %rax,%rax */
0x74, 0x1a,                               /*1b: je     37 <op_tclass+0x37> */
0x49, 0x8b, 0x4e, 0x18,                   /*1d: mov    0x18(%r14),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*26: shl    $0x4,%rdx */
0x0f, 0xb6, 0x30,                         /*2a: movzbl (%rax),%esi */
0x48, 0x89, 0x04, 0x11,                   /*2d: mov    %rax,(%rcx,%rdx,1) */
0x89, 0x74, 0x11, 0x08,                   /*31: mov    %esi,0x8(%rcx,%rdx,1) */
0xeb, 0x44,                               /*35: jmp    7b <op_tclass+0x7b> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*37: mov    0x0(%rip),%rsi        # 3e <op_tclass+0x3e> */
0x48, 0x89, 0xdf,                         /*3e: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*41: callq  46 <op_tclass+0x46> */
0x49, 0x89, 0xc7,                         /*46: mov    %rax,%r15 */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*49: mov    $0x0,%esi */
0xba, 0x19, 0x00, 0x00, 0x00,             /*4e: mov    $0x19,%edx */
0x48, 0x89, 0xdf,                         /*53: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*56: callq  5b <op_tclass+0x5b> */
0x89, 0xd1,                               /*5b: mov    %edx,%ecx */
0x48, 0x89, 0xdf,                         /*5d: mov    %rbx,%rdi */
0x4c, 0x89, 0xfe,                         /*60: mov    %r15,%rsi */
0x48, 0x89, 0xc2,                         /*63: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*66: callq  6b <op_tclass+0x6b> */
0x49, 0x8b, 0x4e, 0x58,                   /*6b: mov    0x58(%r14),%rcx */
0x48, 0x89, 0x41, 0x28,                   /*6f: mov    %rax,0x28(%rcx) */
0x4c, 0x89, 0xf7,                         /*73: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*76: callq  7b <op_tclass+0x7b> */
0x5b,                                     /*7b: pop    %rbx */
0x41, 0x5e,                               /*7c: pop    %r14 */
0x41, 0x5f,                               /*7e: pop    %r15 */

};
static uint8_t op_tclass__rodata[] = {
0x6e, 0x6f, 0x20, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x20,
0x6f, 0x72, 0x20, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x00,

};

static void op_tclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_tclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_tclass_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_debug__text[] = {
0xbf, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%ecx */
0x31, 0xc0,                               /*14: xor    %eax,%eax */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*16: callq  1b <op_debug+0x1b> */

};
static uint8_t op_debug__rodata[] = {
0x4f, 0x50, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x20, 0x25, 0x64, 0x20, 0x25, 0x64, 0x20, 0x25,
0x64, 0x0a, 0x00,                         

};

static void op_debug_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_debug_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_debug_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_stop__text[] = {
0xe8, 0x00, 0x00, 0x00, 0x00,             /*0: callq  5 <op_stop+0x5> */

};
static uint8_t op_stop__rodata[] = {

};

static void op_stop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_stop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_stop_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_err__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x53,                                     /*5: push   %rbx */
0x48, 0x89, 0xfb,                         /*6: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x20,                   /*9: mov    0x20(%rbx),%rax */
0x4c, 0x8b, 0x73, 0x58,                   /*d: mov    0x58(%rbx),%r14 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*16: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x08,                   /*1a: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*1e: mov    0x8(%rax,%rcx,1),%edx */
0x4c, 0x89, 0xf7,                         /*22: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*25: callq  2a <op_err+0x2a> */
0x49, 0x89, 0xc7,                         /*2a: mov    %rax,%r15 */
0x89, 0xd5,                               /*2d: mov    %edx,%ebp */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*2f: mov    0x0(%rip),%rsi        # 36 <op_err+0x36> */
0x4c, 0x89, 0xf7,                         /*36: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*39: callq  3e <op_err+0x3e> */
0x4c, 0x89, 0xf7,                         /*3e: mov    %r14,%rdi */
0x48, 0x89, 0xc6,                         /*41: mov    %rax,%rsi */
0x4c, 0x89, 0xfa,                         /*44: mov    %r15,%rdx */
0x89, 0xe9,                               /*47: mov    %ebp,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*49: callq  4e <op_err+0x4e> */
0x48, 0x8b, 0x4b, 0x58,                   /*4e: mov    0x58(%rbx),%rcx */
0x48, 0x89, 0x41, 0x28,                   /*52: mov    %rax,0x28(%rcx) */
0x48, 0x89, 0xdf,                         /*56: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*59: callq  5e <op_err+0x5e> */
0x5b,                                     /*5e: pop    %rbx */
0x41, 0x5e,                               /*5f: pop    %r14 */
0x41, 0x5f,                               /*61: pop    %r15 */
0x5d,                                     /*63: pop    %rbp */

};
static uint8_t op_err__rodata[] = {

};

static void op_err_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_err_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_err_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}

typedef void (*jit_args_func_t)(uint8_t *op, mrb_code c, uint32_t op_idx);
typedef void (*jit_link_func_t)(uint8_t *op, uint8_t *data, mrb_code c);
static jit_args_func_t arg_funcs[78];
extern jit_link_func_t link_funcs[];
uint8_t* ops_text[78];
uint8_t* ops_rodata[78];
static char *op_names[78];

static size_t op_sizes_text[] = {
  sizeof(op_nop__text), /* 0 */
  sizeof(op_move__text), /* 40 */
  sizeof(op_loadl__text), /* 44 */
  sizeof(op_loadi__text), /* 33 */
  sizeof(op_loadsym__text), /* 40 */
  sizeof(op_loadnil__text), /* 32 */
  sizeof(op_loadself__text), /* 29 */
  sizeof(op_loadt__text), /* 32 */
  sizeof(op_loadf__text), /* 32 */
  sizeof(op_getglobal__text), /* 52 */
  sizeof(op_setglobal__text), /* 45 */
  sizeof(op_getspecial__text), /* 42 */
  sizeof(op_setspecial__text), /* 35 */
  sizeof(op_getiv__text), /* 52 */
  sizeof(op_setiv__text), /* 45 */
  sizeof(op_getcv__text), /* 97 */
  sizeof(op_setcv__text), /* 45 */
  sizeof(op_getconst__text), /* 99 */
  sizeof(op_setconst__text), /* 45 */
  sizeof(op_getmcnst__text), /* 120 */
  sizeof(op_setmcnst__text), /* 67 */
  sizeof(op_getupvar__text), /* 119 */
  sizeof(op_setupvar__text), /* 125 */
  sizeof(op_jmp__text), /* 0 */
  sizeof(op_jmpif__text), /* 18 */
  sizeof(op_jmpnot__text), /* 18 */
  sizeof(op_onerr__text), /* 148 */
  sizeof(op_rescue__text), /* 59 */
  sizeof(op_poperr__text), /* 35 */
  sizeof(op_raise__text), /* 30 */
  sizeof(op_epush__text), /* 166 */
  sizeof(op_epop__text), /* 96 */
  sizeof(op_send__text), /* 100 */
  sizeof(op_sendb__text), /* 38 */
  sizeof(op_fsend__text), /* 0 */
  sizeof(op_call__text), /* 449 */
  sizeof(op_super__text), /* 979 */
  sizeof(op_argary__text), /* 741 */
  sizeof(op_enter__text), /* 2324 */
  sizeof(op_enter_method_m__text), /* 513 */
  sizeof(op_karg__text), /* 0 */
  sizeof(op_kdict__text), /* 0 */
  sizeof(op_return__text), /* 25 */
  sizeof(op_break__text), /* 16 */
  sizeof(op_tailcall__text), /* 1064 */
  sizeof(op_blkpush__text), /* 215 */
  sizeof(op_add__text), /* 427 */
  sizeof(op_addi__text), /* 164 */
  sizeof(op_sub__text), /* 336 */
  sizeof(op_subi__text), /* 152 */
  sizeof(op_mul__text), /* 342 */
  sizeof(op_div__text), /* 289 */
  sizeof(op_eq__text), /* 371 */
  sizeof(op_lt__text), /* 315 */
  sizeof(op_le__text), /* 315 */
  sizeof(op_gt__text), /* 299 */
  sizeof(op_ge__text), /* 299 */
  sizeof(op_array__text), /* 75 */
  sizeof(op_arycat__text), /* 97 */
  sizeof(op_arypush__text), /* 49 */
  sizeof(op_aref__text), /* 138 */
  sizeof(op_aset__text), /* 54 */
  sizeof(op_apost__text), /* 487 */
  sizeof(op_string__text), /* 79 */
  sizeof(op_strcat__text), /* 49 */
  sizeof(op_hash__text), /* 210 */
  sizeof(op_lambda__text), /* 20 */
  sizeof(op_range__text), /* 104 */
  sizeof(op_oclass__text), /* 32 */
  sizeof(op_class__text), /* 167 */
  sizeof(op_module__text), /* 142 */
  sizeof(op_exec__text), /* 362 */
  sizeof(op_method__text), /* 78 */
  sizeof(op_sclass__text), /* 76 */
  sizeof(op_tclass__text), /* 128 */
  sizeof(op_debug__text), /* 27 */
  sizeof(op_stop__text), /* 5 */
  sizeof(op_err__text), /* 100 */

};
static size_t op_sizes_rodata[] = {
  sizeof(op_nop__rodata), /* 0 */
  sizeof(op_move__rodata), /* 0 */
  sizeof(op_loadl__rodata), /* 0 */
  sizeof(op_loadi__rodata), /* 0 */
  sizeof(op_loadsym__rodata), /* 0 */
  sizeof(op_loadnil__rodata), /* 0 */
  sizeof(op_loadself__rodata), /* 0 */
  sizeof(op_loadt__rodata), /* 0 */
  sizeof(op_loadf__rodata), /* 0 */
  sizeof(op_getglobal__rodata), /* 0 */
  sizeof(op_setglobal__rodata), /* 0 */
  sizeof(op_getspecial__rodata), /* 0 */
  sizeof(op_setspecial__rodata), /* 0 */
  sizeof(op_getiv__rodata), /* 0 */
  sizeof(op_setiv__rodata), /* 0 */
  sizeof(op_getcv__rodata), /* 0 */
  sizeof(op_setcv__rodata), /* 0 */
  sizeof(op_getconst__rodata), /* 0 */
  sizeof(op_setconst__rodata), /* 0 */
  sizeof(op_getmcnst__rodata), /* 0 */
  sizeof(op_setmcnst__rodata), /* 0 */
  sizeof(op_getupvar__rodata), /* 0 */
  sizeof(op_setupvar__rodata), /* 0 */
  sizeof(op_jmp__rodata), /* 0 */
  sizeof(op_jmpif__rodata), /* 0 */
  sizeof(op_jmpnot__rodata), /* 0 */
  sizeof(op_onerr__rodata), /* 0 */
  sizeof(op_rescue__rodata), /* 0 */
  sizeof(op_poperr__rodata), /* 0 */
  sizeof(op_raise__rodata), /* 0 */
  sizeof(op_epush__rodata), /* 0 */
  sizeof(op_epop__rodata), /* 0 */
  sizeof(op_send__rodata), /* 0 */
  sizeof(op_sendb__rodata), /* 0 */
  sizeof(op_fsend__rodata), /* 0 */
  sizeof(op_call__rodata), /* 0 */
  sizeof(op_super__rodata), /* 46 */
  sizeof(op_argary__rodata), /* 31 */
  sizeof(op_enter__rodata), /* 13 */
  sizeof(op_enter_method_m__rodata), /* 13 */
  sizeof(op_karg__rodata), /* 0 */
  sizeof(op_kdict__rodata), /* 0 */
  sizeof(op_return__rodata), /* 0 */
  sizeof(op_break__rodata), /* 0 */
  sizeof(op_tailcall__rodata), /* 79 */
  sizeof(op_blkpush__rodata), /* 0 */
  sizeof(op_add__rodata), /* 0 */
  sizeof(op_addi__rodata), /* 0 */
  sizeof(op_sub__rodata), /* 0 */
  sizeof(op_subi__rodata), /* 0 */
  sizeof(op_mul__rodata), /* 0 */
  sizeof(op_div__rodata), /* 0 */
  sizeof(op_eq__rodata), /* 0 */
  sizeof(op_lt__rodata), /* 0 */
  sizeof(op_le__rodata), /* 0 */
  sizeof(op_gt__rodata), /* 0 */
  sizeof(op_ge__rodata), /* 0 */
  sizeof(op_array__rodata), /* 0 */
  sizeof(op_arycat__rodata), /* 0 */
  sizeof(op_arypush__rodata), /* 0 */
  sizeof(op_aref__rodata), /* 0 */
  sizeof(op_aset__rodata), /* 0 */
  sizeof(op_apost__rodata), /* 0 */
  sizeof(op_string__rodata), /* 0 */
  sizeof(op_strcat__rodata), /* 0 */
  sizeof(op_hash__rodata), /* 0 */
  sizeof(op_lambda__rodata), /* 0 */
  sizeof(op_range__rodata), /* 0 */
  sizeof(op_oclass__rodata), /* 0 */
  sizeof(op_class__rodata), /* 0 */
  sizeof(op_module__rodata), /* 0 */
  sizeof(op_exec__rodata), /* 0 */
  sizeof(op_method__rodata), /* 0 */
  sizeof(op_sclass__rodata), /* 0 */
  sizeof(op_tclass__rodata), /* 26 */
  sizeof(op_debug__rodata), /* 19 */
  sizeof(op_stop__rodata), /* 0 */
  sizeof(op_err__rodata), /* 0 */

};
static int8_t op_algn_text[] = {
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,

};
static int8_t op_algn_rodata[] = {
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  16,
  16,
  1,
  1,
  -1,
  -1,
  -1,
  -1,
  8,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  16,
  16,
  -1,
  -1,

};

extern void init_linker();
void init_ops() {
  static int init = 0;
  if(init == 0) {
    init = 1;
    init_linker();
    ops_text[0] = op_nop__text;
    ops_rodata[0] = op_nop__rodata;
    op_names[0] = "op_nop";
    arg_funcs[0] = op_nop_set_args_from_code;
    ops_text[1] = op_move__text;
    ops_rodata[1] = op_move__rodata;
    op_names[1] = "op_move";
    arg_funcs[1] = op_move_set_args_from_code;
    ops_text[2] = op_loadl__text;
    ops_rodata[2] = op_loadl__rodata;
    op_names[2] = "op_loadl";
    arg_funcs[2] = op_loadl_set_args_from_code;
    ops_text[3] = op_loadi__text;
    ops_rodata[3] = op_loadi__rodata;
    op_names[3] = "op_loadi";
    arg_funcs[3] = op_loadi_set_args_from_code;
    ops_text[4] = op_loadsym__text;
    ops_rodata[4] = op_loadsym__rodata;
    op_names[4] = "op_loadsym";
    arg_funcs[4] = op_loadsym_set_args_from_code;
    ops_text[5] = op_loadnil__text;
    ops_rodata[5] = op_loadnil__rodata;
    op_names[5] = "op_loadnil";
    arg_funcs[5] = op_loadnil_set_args_from_code;
    ops_text[6] = op_loadself__text;
    ops_rodata[6] = op_loadself__rodata;
    op_names[6] = "op_loadself";
    arg_funcs[6] = op_loadself_set_args_from_code;
    ops_text[7] = op_loadt__text;
    ops_rodata[7] = op_loadt__rodata;
    op_names[7] = "op_loadt";
    arg_funcs[7] = op_loadt_set_args_from_code;
    ops_text[8] = op_loadf__text;
    ops_rodata[8] = op_loadf__rodata;
    op_names[8] = "op_loadf";
    arg_funcs[8] = op_loadf_set_args_from_code;
    ops_text[9] = op_getglobal__text;
    ops_rodata[9] = op_getglobal__rodata;
    op_names[9] = "op_getglobal";
    arg_funcs[9] = op_getglobal_set_args_from_code;
    ops_text[10] = op_setglobal__text;
    ops_rodata[10] = op_setglobal__rodata;
    op_names[10] = "op_setglobal";
    arg_funcs[10] = op_setglobal_set_args_from_code;
    ops_text[11] = op_getspecial__text;
    ops_rodata[11] = op_getspecial__rodata;
    op_names[11] = "op_getspecial";
    arg_funcs[11] = op_getspecial_set_args_from_code;
    ops_text[12] = op_setspecial__text;
    ops_rodata[12] = op_setspecial__rodata;
    op_names[12] = "op_setspecial";
    arg_funcs[12] = op_setspecial_set_args_from_code;
    ops_text[13] = op_getiv__text;
    ops_rodata[13] = op_getiv__rodata;
    op_names[13] = "op_getiv";
    arg_funcs[13] = op_getiv_set_args_from_code;
    ops_text[14] = op_setiv__text;
    ops_rodata[14] = op_setiv__rodata;
    op_names[14] = "op_setiv";
    arg_funcs[14] = op_setiv_set_args_from_code;
    ops_text[15] = op_getcv__text;
    ops_rodata[15] = op_getcv__rodata;
    op_names[15] = "op_getcv";
    arg_funcs[15] = op_getcv_set_args_from_code;
    ops_text[16] = op_setcv__text;
    ops_rodata[16] = op_setcv__rodata;
    op_names[16] = "op_setcv";
    arg_funcs[16] = op_setcv_set_args_from_code;
    ops_text[17] = op_getconst__text;
    ops_rodata[17] = op_getconst__rodata;
    op_names[17] = "op_getconst";
    arg_funcs[17] = op_getconst_set_args_from_code;
    ops_text[18] = op_setconst__text;
    ops_rodata[18] = op_setconst__rodata;
    op_names[18] = "op_setconst";
    arg_funcs[18] = op_setconst_set_args_from_code;
    ops_text[19] = op_getmcnst__text;
    ops_rodata[19] = op_getmcnst__rodata;
    op_names[19] = "op_getmcnst";
    arg_funcs[19] = op_getmcnst_set_args_from_code;
    ops_text[20] = op_setmcnst__text;
    ops_rodata[20] = op_setmcnst__rodata;
    op_names[20] = "op_setmcnst";
    arg_funcs[20] = op_setmcnst_set_args_from_code;
    ops_text[21] = op_getupvar__text;
    ops_rodata[21] = op_getupvar__rodata;
    op_names[21] = "op_getupvar";
    arg_funcs[21] = op_getupvar_set_args_from_code;
    ops_text[22] = op_setupvar__text;
    ops_rodata[22] = op_setupvar__rodata;
    op_names[22] = "op_setupvar";
    arg_funcs[22] = op_setupvar_set_args_from_code;
    ops_text[23] = op_jmp__text;
    ops_rodata[23] = op_jmp__rodata;
    op_names[23] = "op_jmp";
    arg_funcs[23] = op_jmp_set_args_from_code;
    ops_text[24] = op_jmpif__text;
    ops_rodata[24] = op_jmpif__rodata;
    op_names[24] = "op_jmpif";
    arg_funcs[24] = op_jmpif_set_args_from_code;
    ops_text[25] = op_jmpnot__text;
    ops_rodata[25] = op_jmpnot__rodata;
    op_names[25] = "op_jmpnot";
    arg_funcs[25] = op_jmpnot_set_args_from_code;
    ops_text[26] = op_onerr__text;
    ops_rodata[26] = op_onerr__rodata;
    op_names[26] = "op_onerr";
    arg_funcs[26] = op_onerr_set_args_from_code;
    ops_text[27] = op_rescue__text;
    ops_rodata[27] = op_rescue__rodata;
    op_names[27] = "op_rescue";
    arg_funcs[27] = op_rescue_set_args_from_code;
    ops_text[28] = op_poperr__text;
    ops_rodata[28] = op_poperr__rodata;
    op_names[28] = "op_poperr";
    arg_funcs[28] = op_poperr_set_args_from_code;
    ops_text[29] = op_raise__text;
    ops_rodata[29] = op_raise__rodata;
    op_names[29] = "op_raise";
    arg_funcs[29] = op_raise_set_args_from_code;
    ops_text[30] = op_epush__text;
    ops_rodata[30] = op_epush__rodata;
    op_names[30] = "op_epush";
    arg_funcs[30] = op_epush_set_args_from_code;
    ops_text[31] = op_epop__text;
    ops_rodata[31] = op_epop__rodata;
    op_names[31] = "op_epop";
    arg_funcs[31] = op_epop_set_args_from_code;
    ops_text[32] = op_send__text;
    ops_rodata[32] = op_send__rodata;
    op_names[32] = "op_send";
    arg_funcs[32] = op_send_set_args_from_code;
    ops_text[33] = op_sendb__text;
    ops_rodata[33] = op_sendb__rodata;
    op_names[33] = "op_sendb";
    arg_funcs[33] = op_sendb_set_args_from_code;
    ops_text[34] = op_fsend__text;
    ops_rodata[34] = op_fsend__rodata;
    op_names[34] = "op_fsend";
    arg_funcs[34] = op_fsend_set_args_from_code;
    ops_text[35] = op_call__text;
    ops_rodata[35] = op_call__rodata;
    op_names[35] = "op_call";
    arg_funcs[35] = op_call_set_args_from_code;
    ops_text[36] = op_super__text;
    ops_rodata[36] = op_super__rodata;
    op_names[36] = "op_super";
    arg_funcs[36] = op_super_set_args_from_code;
    ops_text[37] = op_argary__text;
    ops_rodata[37] = op_argary__rodata;
    op_names[37] = "op_argary";
    arg_funcs[37] = op_argary_set_args_from_code;
    ops_text[38] = op_enter__text;
    ops_rodata[38] = op_enter__rodata;
    op_names[38] = "op_enter";
    arg_funcs[38] = op_enter_set_args_from_code;
    ops_text[39] = op_enter_method_m__text;
    ops_rodata[39] = op_enter_method_m__rodata;
    op_names[39] = "op_enter_method_m";
    arg_funcs[39] = op_enter_method_m_set_args_from_code;
    ops_text[40] = op_karg__text;
    ops_rodata[40] = op_karg__rodata;
    op_names[40] = "op_karg";
    arg_funcs[40] = op_karg_set_args_from_code;
    ops_text[41] = op_kdict__text;
    ops_rodata[41] = op_kdict__rodata;
    op_names[41] = "op_kdict";
    arg_funcs[41] = op_kdict_set_args_from_code;
    ops_text[42] = op_return__text;
    ops_rodata[42] = op_return__rodata;
    op_names[42] = "op_return";
    arg_funcs[42] = op_return_set_args_from_code;
    ops_text[43] = op_break__text;
    ops_rodata[43] = op_break__rodata;
    op_names[43] = "op_break";
    arg_funcs[43] = op_break_set_args_from_code;
    ops_text[44] = op_tailcall__text;
    ops_rodata[44] = op_tailcall__rodata;
    op_names[44] = "op_tailcall";
    arg_funcs[44] = op_tailcall_set_args_from_code;
    ops_text[45] = op_blkpush__text;
    ops_rodata[45] = op_blkpush__rodata;
    op_names[45] = "op_blkpush";
    arg_funcs[45] = op_blkpush_set_args_from_code;
    ops_text[46] = op_add__text;
    ops_rodata[46] = op_add__rodata;
    op_names[46] = "op_add";
    arg_funcs[46] = op_add_set_args_from_code;
    ops_text[47] = op_addi__text;
    ops_rodata[47] = op_addi__rodata;
    op_names[47] = "op_addi";
    arg_funcs[47] = op_addi_set_args_from_code;
    ops_text[48] = op_sub__text;
    ops_rodata[48] = op_sub__rodata;
    op_names[48] = "op_sub";
    arg_funcs[48] = op_sub_set_args_from_code;
    ops_text[49] = op_subi__text;
    ops_rodata[49] = op_subi__rodata;
    op_names[49] = "op_subi";
    arg_funcs[49] = op_subi_set_args_from_code;
    ops_text[50] = op_mul__text;
    ops_rodata[50] = op_mul__rodata;
    op_names[50] = "op_mul";
    arg_funcs[50] = op_mul_set_args_from_code;
    ops_text[51] = op_div__text;
    ops_rodata[51] = op_div__rodata;
    op_names[51] = "op_div";
    arg_funcs[51] = op_div_set_args_from_code;
    ops_text[52] = op_eq__text;
    ops_rodata[52] = op_eq__rodata;
    op_names[52] = "op_eq";
    arg_funcs[52] = op_eq_set_args_from_code;
    ops_text[53] = op_lt__text;
    ops_rodata[53] = op_lt__rodata;
    op_names[53] = "op_lt";
    arg_funcs[53] = op_lt_set_args_from_code;
    ops_text[54] = op_le__text;
    ops_rodata[54] = op_le__rodata;
    op_names[54] = "op_le";
    arg_funcs[54] = op_le_set_args_from_code;
    ops_text[55] = op_gt__text;
    ops_rodata[55] = op_gt__rodata;
    op_names[55] = "op_gt";
    arg_funcs[55] = op_gt_set_args_from_code;
    ops_text[56] = op_ge__text;
    ops_rodata[56] = op_ge__rodata;
    op_names[56] = "op_ge";
    arg_funcs[56] = op_ge_set_args_from_code;
    ops_text[57] = op_array__text;
    ops_rodata[57] = op_array__rodata;
    op_names[57] = "op_array";
    arg_funcs[57] = op_array_set_args_from_code;
    ops_text[58] = op_arycat__text;
    ops_rodata[58] = op_arycat__rodata;
    op_names[58] = "op_arycat";
    arg_funcs[58] = op_arycat_set_args_from_code;
    ops_text[59] = op_arypush__text;
    ops_rodata[59] = op_arypush__rodata;
    op_names[59] = "op_arypush";
    arg_funcs[59] = op_arypush_set_args_from_code;
    ops_text[60] = op_aref__text;
    ops_rodata[60] = op_aref__rodata;
    op_names[60] = "op_aref";
    arg_funcs[60] = op_aref_set_args_from_code;
    ops_text[61] = op_aset__text;
    ops_rodata[61] = op_aset__rodata;
    op_names[61] = "op_aset";
    arg_funcs[61] = op_aset_set_args_from_code;
    ops_text[62] = op_apost__text;
    ops_rodata[62] = op_apost__rodata;
    op_names[62] = "op_apost";
    arg_funcs[62] = op_apost_set_args_from_code;
    ops_text[63] = op_string__text;
    ops_rodata[63] = op_string__rodata;
    op_names[63] = "op_string";
    arg_funcs[63] = op_string_set_args_from_code;
    ops_text[64] = op_strcat__text;
    ops_rodata[64] = op_strcat__rodata;
    op_names[64] = "op_strcat";
    arg_funcs[64] = op_strcat_set_args_from_code;
    ops_text[65] = op_hash__text;
    ops_rodata[65] = op_hash__rodata;
    op_names[65] = "op_hash";
    arg_funcs[65] = op_hash_set_args_from_code;
    ops_text[66] = op_lambda__text;
    ops_rodata[66] = op_lambda__rodata;
    op_names[66] = "op_lambda";
    arg_funcs[66] = op_lambda_set_args_from_code;
    ops_text[67] = op_range__text;
    ops_rodata[67] = op_range__rodata;
    op_names[67] = "op_range";
    arg_funcs[67] = op_range_set_args_from_code;
    ops_text[68] = op_oclass__text;
    ops_rodata[68] = op_oclass__rodata;
    op_names[68] = "op_oclass";
    arg_funcs[68] = op_oclass_set_args_from_code;
    ops_text[69] = op_class__text;
    ops_rodata[69] = op_class__rodata;
    op_names[69] = "op_class";
    arg_funcs[69] = op_class_set_args_from_code;
    ops_text[70] = op_module__text;
    ops_rodata[70] = op_module__rodata;
    op_names[70] = "op_module";
    arg_funcs[70] = op_module_set_args_from_code;
    ops_text[71] = op_exec__text;
    ops_rodata[71] = op_exec__rodata;
    op_names[71] = "op_exec";
    arg_funcs[71] = op_exec_set_args_from_code;
    ops_text[72] = op_method__text;
    ops_rodata[72] = op_method__rodata;
    op_names[72] = "op_method";
    arg_funcs[72] = op_method_set_args_from_code;
    ops_text[73] = op_sclass__text;
    ops_rodata[73] = op_sclass__rodata;
    op_names[73] = "op_sclass";
    arg_funcs[73] = op_sclass_set_args_from_code;
    ops_text[74] = op_tclass__text;
    ops_rodata[74] = op_tclass__rodata;
    op_names[74] = "op_tclass";
    arg_funcs[74] = op_tclass_set_args_from_code;
    ops_text[75] = op_debug__text;
    ops_rodata[75] = op_debug__rodata;
    op_names[75] = "op_debug";
    arg_funcs[75] = op_debug_set_args_from_code;
    ops_text[76] = op_stop__text;
    ops_rodata[76] = op_stop__rodata;
    op_names[76] = "op_stop";
    arg_funcs[76] = op_stop_set_args_from_code;
    ops_text[77] = op_err__text;
    ops_rodata[77] = op_err__rodata;
    op_names[77] = "op_err";
    arg_funcs[77] = op_err_set_args_from_code;
  }
}

uint8_t *jit_return(uint8_t *b) {
  *b++ = 0xc3;
  return b;
}
uint8_t *jit_jump(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 235;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *b++ = 233;
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_if(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 116;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31729;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_not(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 117;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31473;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
