
/* args: {} */
static uint8_t op_nop__text[] = {

};
static uint8_t op_nop__rodata[] = {

};

static void op_nop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_nop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_nop_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_move__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*9: mov    $0x0,%edx */
0x48, 0x8b, 0x0c, 0xc8,                   /*e: mov    (%rax,%rcx,8),%rcx */
0x48, 0x89, 0x0c, 0xd0,                   /*12: mov    %rcx,(%rax,%rdx,8) */

};
static uint8_t op_move__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_move_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_move_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_move_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadl__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x20,                   /*4: mov    0x20(%rdi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%esi */
0x48, 0x8b, 0x0c, 0xd1,                   /*12: mov    (%rcx,%rdx,8),%rcx */
0x48, 0x89, 0x0c, 0xf0,                   /*16: mov    %rcx,(%rax,%rsi,8) */

};
static uint8_t op_loadl__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_loadl_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadl_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadl_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadi__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*9: movq   $0x0,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*11: mov    0x18(%rdi),%rax */
0x8b, 0x14, 0xc8,                         /*15: mov    (%rax,%rcx,8),%edx */
0x83, 0xe2, 0x01,                         /*18: and    $0x1,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%esi */
0x01, 0xf6,                               /*20: add    %esi,%esi */
0x09, 0xd6,                               /*22: or     %edx,%esi */
0x89, 0x34, 0xc8,                         /*24: mov    %esi,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*27: mov    0x18(%rdi),%rax */
0x83, 0x0c, 0xc8, 0x01,                   /*2b: orl    $0x1,(%rax,%rcx,8) */

};
static uint8_t op_loadi__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_loadi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadi_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadsym__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*9: movq   $0x0,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*11: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x57, 0x28,                   /*15: mov    0x28(%rdi),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*19: mov    $0x0,%esi */
0x8b, 0x14, 0xb2,                         /*1e: mov    (%rdx,%rsi,4),%edx */
0x89, 0x54, 0xc8, 0x04,                   /*21: mov    %edx,0x4(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*25: mov    0x18(%rdi),%rax */
0xc6, 0x04, 0xc8, 0x0e,                   /*29: movb   $0xe,(%rax,%rcx,8) */

};
static uint8_t op_loadsym__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_loadsym_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadsym_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadsym_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadnil__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*9: movq   $0x0,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*11: mov    0x18(%rdi),%rax */
0x83, 0x24, 0xc8, 0x01,                   /*15: andl   $0x1,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*19: mov    0x18(%rdi),%rax */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*1d: movq   $0x0,(%rax,%rcx,8) */

};
static uint8_t op_loadnil__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_loadnil_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadnil_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadnil_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadself__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0x8b, 0x10,                         /*9: mov    (%rax),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*c: mov    %rdx,(%rax,%rcx,8) */

};
static uint8_t op_loadself__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_loadself_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadself_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadself_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadt__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*9: movq   $0x0,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*11: mov    0x18(%rdi),%rax */
0x8b, 0x14, 0xc8,                         /*15: mov    (%rax,%rcx,8),%edx */
0x83, 0xe2, 0x01,                         /*18: and    $0x1,%edx */
0x83, 0xca, 0x02,                         /*1b: or     $0x2,%edx */
0x89, 0x14, 0xc8,                         /*1e: mov    %edx,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*21: mov    0x18(%rdi),%rax */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*25: movq   $0x4,(%rax,%rcx,8) */

};
static uint8_t op_loadt__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_loadt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadt_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadf__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*9: movq   $0x0,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*11: mov    0x18(%rdi),%rax */
0x8b, 0x14, 0xc8,                         /*15: mov    (%rax,%rcx,8),%edx */
0x83, 0xe2, 0x01,                         /*18: and    $0x1,%edx */
0x83, 0xca, 0x02,                         /*1b: or     $0x2,%edx */
0x89, 0x14, 0xc8,                         /*1e: mov    %edx,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*21: mov    0x18(%rdi),%rax */
0x48, 0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00,/*25: movq   $0x2,(%rax,%rcx,8) */

};
static uint8_t op_loadf__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_loadf_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadf_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadf_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_getglobal__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*6: mov    0x50(%rbx),%rdi */
0x4c, 0x8b, 0x73, 0x18,                   /*a: mov    0x18(%rbx),%r14 */
0x48, 0x8b, 0x43, 0x28,                   /*e: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*17: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1a: callq  1f <op_getglobal+0x1f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%ecx */
0x49, 0x89, 0x04, 0xce,                   /*24: mov    %rax,(%r14,%rcx,8) */
0x48, 0x89, 0xdf,                         /*28: mov    %rbx,%rdi */
0x5b,                                     /*2b: pop    %rbx */
0x41, 0x5e,                               /*2c: pop    %r14 */

};
static uint8_t op_getglobal__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_getglobal_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getglobal_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getglobal_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setglobal__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*4: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x8b, 0x34, 0x91,                         /*15: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*1d: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*21: callq  26 <op_setglobal+0x26> */
0x48, 0x89, 0xdf,                         /*26: mov    %rbx,%rdi */
0x5b,                                     /*29: pop    %rbx */

};
static uint8_t op_setglobal__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_setglobal_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setglobal_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setglobal_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getspecial__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x4c, 0x8b, 0x73, 0x18,                   /*6: mov    0x18(%rbx),%r14 */
0x48, 0x8b, 0x7b, 0x50,                   /*a: mov    0x50(%rbx),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*13: callq  18 <op_getspecial+0x18> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x49, 0x89, 0x04, 0xce,                   /*1d: mov    %rax,(%r14,%rcx,8) */
0x48, 0x89, 0xdf,                         /*21: mov    %rbx,%rdi */
0x5b,                                     /*24: pop    %rbx */
0x41, 0x5e,                               /*25: pop    %r14 */

};
static uint8_t op_getspecial__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_getspecial_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getspecial_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getspecial_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setspecial__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*8: mov    0x50(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*11: mov    (%rax,%rcx,8),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1a: callq  1f <op_setspecial+0x1f> */
0x48, 0x89, 0xdf,                         /*1f: mov    %rbx,%rdi */
0x5b,                                     /*22: pop    %rbx */

};
static uint8_t op_setspecial__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_setspecial_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setspecial_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setspecial_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getiv__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*6: mov    0x50(%rbx),%rdi */
0x4c, 0x8b, 0x73, 0x18,                   /*a: mov    0x18(%rbx),%r14 */
0x48, 0x8b, 0x43, 0x28,                   /*e: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*17: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1a: callq  1f <op_getiv+0x1f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%ecx */
0x49, 0x89, 0x04, 0xce,                   /*24: mov    %rax,(%r14,%rcx,8) */
0x48, 0x89, 0xdf,                         /*28: mov    %rbx,%rdi */
0x5b,                                     /*2b: pop    %rbx */
0x41, 0x5e,                               /*2c: pop    %r14 */

};
static uint8_t op_getiv__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_getiv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getiv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getiv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setiv__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*4: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x8b, 0x34, 0x91,                         /*15: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*1d: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*21: callq  26 <op_setiv+0x26> */
0x48, 0x89, 0xdf,                         /*26: mov    %rbx,%rdi */
0x5b,                                     /*29: pop    %rbx */

};
static uint8_t op_setiv__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_setiv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setiv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setiv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getcv__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*6: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x50,                   /*a: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*e: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*12: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*16: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x7b, 0x50,                   /*1a: mov    0x50(%rbx),%rdi */
0x4c, 0x8b, 0x73, 0x18,                   /*1e: mov    0x18(%rbx),%r14 */
0x48, 0x8b, 0x43, 0x28,                   /*22: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*26: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*2b: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_getcv+0x33> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*33: mov    $0x0,%ecx */
0x49, 0x89, 0x04, 0xce,                   /*38: mov    %rax,(%r14,%rcx,8) */
0x48, 0x8b, 0x43, 0x50,                   /*3c: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*40: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*44: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*48: movq   $0x0,0x38(%rax) */
0x48, 0x89, 0xdf,                         /*50: mov    %rbx,%rdi */
0x5b,                                     /*53: pop    %rbx */
0x41, 0x5e,                               /*54: pop    %r14 */

};
static uint8_t op_getcv__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_getcv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getcv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getcv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setcv__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*4: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x8b, 0x34, 0x91,                         /*15: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*1d: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*21: callq  26 <op_setcv+0x26> */
0x48, 0x89, 0xdf,                         /*26: mov    %rbx,%rdi */
0x5b,                                     /*29: pop    %rbx */

};
static uint8_t op_setcv__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_setcv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setcv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setcv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getconst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*4: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x50,                   /*8: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*c: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*10: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*14: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x43, 0x28,                   /*18: mov    0x28(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*1c: mov    0x50(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*25: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*28: callq  2d <op_getconst+0x2d> */
0x48, 0x8b, 0x4b, 0x50,                   /*2d: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*31: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*35: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*39: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x4b, 0x50,                   /*41: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*45: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*49: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x4b, 0x18,                   /*4d: mov    %rcx,0x18(%rbx) */
0xba, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%edx */
0x48, 0x89, 0x04, 0xd1,                   /*56: mov    %rax,(%rcx,%rdx,8) */
0x48, 0x89, 0xdf,                         /*5a: mov    %rbx,%rdi */
0x5b,                                     /*5d: pop    %rbx */

};
static uint8_t op_getconst__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_getconst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getconst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getconst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setconst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*4: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x8b, 0x34, 0x91,                         /*15: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*1d: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*21: callq  26 <op_setconst+0x26> */
0x48, 0x89, 0xdf,                         /*26: mov    %rbx,%rdi */
0x5b,                                     /*29: pop    %rbx */

};
static uint8_t op_setconst__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_setconst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setconst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setconst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getmcnst__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*6: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x50,                   /*a: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*e: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*12: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*16: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x7b, 0x50,                   /*1a: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*1e: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*22: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*26: mov    $0x0,%edx */
0x8b, 0x14, 0x91,                         /*2b: mov    (%rcx,%rdx,4),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2e: mov    $0x0,%ecx */
0x4c, 0x63, 0xf1,                         /*33: movslq %ecx,%r14 */
0x4a, 0x8b, 0x34, 0xf0,                   /*36: mov    (%rax,%r14,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3a: callq  3f <op_getmcnst+0x3f> */
0x48, 0x8b, 0x4b, 0x50,                   /*3f: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*43: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*47: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*4b: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x4b, 0x50,                   /*53: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*57: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*5b: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x4b, 0x18,                   /*5f: mov    %rcx,0x18(%rbx) */
0x4a, 0x89, 0x04, 0xf1,                   /*63: mov    %rax,(%rcx,%r14,8) */
0x48, 0x89, 0xdf,                         /*67: mov    %rbx,%rdi */
0x5b,                                     /*6a: pop    %rbx */
0x41, 0x5e,                               /*6b: pop    %r14 */

};
static uint8_t op_getmcnst__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_getmcnst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getmcnst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getmcnst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setmcnst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*4: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x8b, 0x14, 0x91,                         /*15: mov    (%rcx,%rdx,4),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x8d, 0x71, 0x01,                         /*1d: lea    0x1(%rcx),%esi */
0x48, 0x63, 0xf6,                         /*20: movslq %esi,%rsi */
0x48, 0x8b, 0x34, 0xf0,                   /*23: mov    (%rax,%rsi,8),%rsi */
0x48, 0x63, 0xc9,                         /*27: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*2a: mov    (%rax,%rcx,8),%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_setmcnst+0x33> */
0x48, 0x89, 0xdf,                         /*33: mov    %rbx,%rdi */
0x5b,                                     /*36: pop    %rbx */

};
static uint8_t op_setmcnst__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_setmcnst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setmcnst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setmcnst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getupvar__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x50,                   /*4: mov    0x50(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*8: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*c: mov    0x20(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*10: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*14: mov    0x28(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*18: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*1b: sete   %dl */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1e: mov    $0x0,%esi */
0x85, 0xf6,                               /*23: test   %esi,%esi */
0x74, 0x1c,                               /*25: je     43 <op_getupvar+0x43> */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*27: nopw   0x0(%rax,%rax,1) */
0xf6, 0xc2, 0x01,                         /*30: test   $0x1,%dl */
0x75, 0x12,                               /*33: jne    47 <op_getupvar+0x47> */
0x48, 0x8b, 0x49, 0x08,                   /*35: mov    0x8(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*39: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*3c: sete   %dl */
0xff, 0xce,                               /*3f: dec    %esi */
0x75, 0xed,                               /*41: jne    30 <op_getupvar+0x30> */
0x84, 0xd2,                               /*43: test   %dl,%dl */
0x74, 0x0f,                               /*45: je     56 <op_getupvar+0x56> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*47: mov    $0x0,%ecx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*4c: movq   $0x0,(%rax,%rcx,8) */
0xeb, 0x19,                               /*54: jmp    6f <Bx1+0x5f> */
0x48, 0x8b, 0x49, 0x18,                   /*56: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5a: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*5f: movslq %edx,%rdx */
0x48, 0x8b, 0x0c, 0xd1,                   /*62: mov    (%rcx,%rdx,8),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*66: mov    $0x0,%edx */
0x48, 0x89, 0x0c, 0xd0,                   /*6b: mov    %rcx,(%rax,%rdx,8) */

};
static uint8_t op_getupvar__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_getupvar_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getupvar_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getupvar_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_setupvar__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x50,                   /*4: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*8: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*c: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*10: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x70, 0x28,                   /*14: mov    0x28(%rax),%rsi */
0x48, 0x85, 0xf6,                         /*18: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*1b: sete   %al */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1e: mov    $0x0,%ecx */
0x85, 0xc9,                               /*23: test   %ecx,%ecx */
0x74, 0x1b,                               /*25: je     42 <op_setupvar+0x42> */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*27: nopw   0x0(%rax,%rax,1) */
0xa8, 0x01,                               /*30: test   $0x1,%al */
0x75, 0x38,                               /*32: jne    6c <op_setupvar+0x6c> */
0x48, 0x8b, 0x76, 0x08,                   /*34: mov    0x8(%rsi),%rsi */
0x48, 0x85, 0xf6,                         /*38: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*3b: sete   %al */
0xff, 0xc9,                               /*3e: dec    %ecx */
0x75, 0xee,                               /*40: jne    30 <op_setupvar+0x30> */
0x84, 0xc0,                               /*42: test   %al,%al */
0x75, 0x26,                               /*44: jne    6c <op_setupvar+0x6c> */
0x48, 0x8b, 0x43, 0x18,                   /*46: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4e, 0x18,                   /*4a: mov    0x18(%rsi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4e: mov    $0x0,%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*53: mov    $0x0,%edi */
0x48, 0x63, 0xff,                         /*58: movslq %edi,%rdi */
0x48, 0x8b, 0x04, 0xd0,                   /*5b: mov    (%rax,%rdx,8),%rax */
0x48, 0x89, 0x04, 0xf9,                   /*5f: mov    %rax,(%rcx,%rdi,8) */
0x48, 0x8b, 0x7b, 0x50,                   /*63: mov    0x50(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*67: callq  6c <op_setupvar+0x6c> */
0x48, 0x89, 0xdf,                         /*6c: mov    %rbx,%rdi */
0x5b,                                     /*6f: pop    %rbx */

};
static uint8_t op_setupvar__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_setupvar_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setupvar_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setupvar_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_jmp__text[] = {

};
static uint8_t op_jmp__rodata[] = {

};

static void op_jmp_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_jmp_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmp_set_args(op, 0,GETARG_sBx(c),0,op_idx);
}


/* args: {"a"=>[[8, 0, 7..10]]} */
static uint8_t op_jmpif__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x80, 0x00, 0x08, 0xab, 0x00, /*4: mov    0xab0800(%rax),%rax */
0x48, 0x83, 0xc8, 0x02,                   /*b: or     $0x2,%rax */
0x48, 0x83, 0xf8, 0x02,                   /*f: cmp    $0x2,%rax */

};
static uint8_t op_jmpif__rodata[] = {

};

static void op_jmpif_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
  *((int32_t *)(op + 7)) = a * 8 + 0;
}

static void op_jmpif_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmpif_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {"a"=>[[8, 0, 7..10]]} */
static uint8_t op_jmpnot__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x80, 0x00, 0x08, 0xab, 0x00, /*4: mov    0xab0800(%rax),%rax */
0x48, 0x83, 0xc8, 0x02,                   /*b: or     $0x2,%rax */
0x48, 0x83, 0xf8, 0x02,                   /*f: cmp    $0x2,%rax */

};
static uint8_t op_jmpnot__rodata[] = {

};

static void op_jmpnot_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
  *((int32_t *)(op + 7)) = a * 8 + 0;
}

static void op_jmpnot_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmpnot_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {"op_idx"=>[[4, 0, 92..95]]} */
static uint8_t op_onerr__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x50,                   /*4: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x48, 0x18,                   /*8: mov    0x18(%rax),%rcx */
0x8b, 0x51, 0x40,                         /*c: mov    0x40(%rcx),%edx */
0x48, 0x8b, 0x71, 0x20,                   /*f: mov    0x20(%rcx),%rsi */
0x3b, 0x56, 0x1c,                         /*13: cmp    0x1c(%rsi),%edx */
0x7f, 0x39,                               /*16: jg     51 <op_onerr+0x51> */
0x8d, 0x04, 0x12,                         /*18: lea    (%rdx,%rdx,1),%eax */
0x85, 0xd2,                               /*1b: test   %edx,%edx */
0xba, 0x10, 0x00, 0x00, 0x00,             /*1d: mov    $0x10,%edx */
0x0f, 0x45, 0xd0,                         /*22: cmovne %eax,%edx */
0x89, 0x51, 0x40,                         /*25: mov    %edx,0x40(%rcx) */
0x48, 0x8b, 0x7b, 0x50,                   /*28: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*2c: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x38,                   /*30: mov    0x38(%rax),%rsi */
0x48, 0x63, 0x50, 0x40,                   /*34: movslq 0x40(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*38: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3c: callq  41 <op_onerr+0x41> */
0x48, 0x8b, 0x4b, 0x50,                   /*41: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*45: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*49: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x43, 0x50,                   /*4d: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x08,                   /*51: mov    0x8(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*55: mov    0x8(%rcx),%rcx */
0x48, 0x8d, 0x91, 0x00, 0x04, 0xde, 0x00, /*59: lea    0xde0400(%rcx),%rdx */
0x48, 0x89, 0x53, 0x10,                   /*60: mov    %rdx,0x10(%rbx) */
0xba, 0x00, 0x00, 0x00, 0x00,             /*64: mov    $0x0,%edx */
0x48, 0x8d, 0x8c, 0x91, 0x00, 0x00, 0x78, 0x03,/*69: lea    0x3780000(%rcx,%rdx,4),%rcx */
0x48, 0x8b, 0x40, 0x18,                   /*71: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*75: mov    0x20(%rax),%rax */
0x48, 0x63, 0x50, 0x1c,                   /*79: movslq 0x1c(%rax),%rdx */
0x8d, 0x72, 0x01,                         /*7d: lea    0x1(%rdx),%esi */
0x89, 0x70, 0x1c,                         /*80: mov    %esi,0x1c(%rax) */
0x48, 0x8b, 0x43, 0x50,                   /*83: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*87: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x38,                   /*8b: mov    0x38(%rax),%rax */
0x48, 0x89, 0x0c, 0xd0,                   /*8f: mov    %rcx,(%rax,%rdx,8) */
0x48, 0x89, 0xdf,                         /*93: mov    %rbx,%rdi */
0x5b,                                     /*96: pop    %rbx */

};
static uint8_t op_onerr__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_onerr_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
  *((int32_t *)(op + 92)) = op_idx * 4 + 0;
}

static void op_onerr_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_onerr_set_args(op, 0,GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_rescue__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*9: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*c: movq   $0x0,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*14: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x57, 0x50,                   /*18: mov    0x50(%rdi),%rdx */
0x48, 0x8b, 0x52, 0x28,                   /*1c: mov    0x28(%rdx),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*20: mov    %rdx,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x50,                   /*24: mov    0x50(%rdi),%rax */
0x48, 0x8b, 0x48, 0x28,                   /*28: mov    0x28(%rax),%rcx */
0x8b, 0x01,                               /*2c: mov    (%rcx),%eax */
0x0f, 0xb6, 0xf0,                         /*2e: movzbl %al,%esi */
0x0f, 0xb6, 0xd0,                         /*31: movzbl %al,%edx */
0x83, 0xfe, 0x05,                         /*34: cmp    $0x5,%esi */
0x77, 0x25,                               /*37: ja     5e <op_rescue+0x5e> */
0xff, 0x24, 0xd5, 0x00, 0x00, 0x00, 0x00, /*39: jmpq   *0x0(,%rdx,8) */
0x48, 0x85, 0xc9,                         /*40: test   %rcx,%rcx */
0x0f, 0x95, 0xc0,                         /*43: setne  %al */
0x0f, 0xb6, 0xc0,                         /*46: movzbl %al,%eax */
0x48, 0x01, 0xc0,                         /*49: add    %rax,%rax */
0x48, 0x8b, 0x4f, 0x18,                   /*4c: mov    0x18(%rdi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*50: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*55: movslq %edx,%rdx */
0x48, 0x89, 0x04, 0xd1,                   /*58: mov    %rax,(%rcx,%rdx,8) */
0xeb, 0x67,                               /*5c: jmp    c5 <op_rescue+0xc5> */
0x48, 0x8b, 0x4f, 0x18,                   /*5e: mov    0x18(%rdi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*62: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*67: movslq %edx,%rdx */
0x48, 0x8b, 0x0c, 0xd1,                   /*6a: mov    (%rcx,%rdx,8),%rcx */
0x48, 0x85, 0xc9,                         /*6e: test   %rcx,%rcx */
0x74, 0x52,                               /*71: je     c5 <op_rescue+0xc5> */
0x88, 0x01,                               /*73: mov    %al,(%rcx) */
0xeb, 0x4e,                               /*75: jmp    c5 <op_rescue+0xc5> */
0x48, 0x8b, 0x47, 0x18,                   /*77: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7b: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*80: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*83: movq   $0x4,(%rax,%rcx,8) */
0xeb, 0x38,                               /*8b: jmp    c5 <op_rescue+0xc5> */
0x48, 0x8b, 0x47, 0x18,                   /*8d: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*91: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*96: movslq %ecx,%rcx */
0x83, 0x0c, 0xc8, 0x01,                   /*99: orl    $0x1,(%rax,%rcx,8) */
0xeb, 0x26,                               /*9d: jmp    c5 <op_rescue+0xc5> */
0x48, 0x8b, 0x47, 0x18,                   /*9f: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a3: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*a8: movslq %ecx,%rcx */
0xc6, 0x04, 0xc8, 0x0e,                   /*ab: movb   $0xe,(%rax,%rcx,8) */
0xeb, 0x14,                               /*af: jmp    c5 <op_rescue+0xc5> */
0x48, 0x8b, 0x47, 0x18,                   /*b1: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*b5: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*ba: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x06, 0x00, 0x00, 0x00,/*bd: movq   $0x6,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x50,                   /*c5: mov    0x50(%rdi),%rax */
0x48, 0xc7, 0x40, 0x28, 0x00, 0x00, 0x00, 0x00,/*c9: movq   $0x0,0x28(%rax) */

};
static uint8_t op_rescue__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_rescue_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_rescue_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_rescue_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_poperr__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x85, 0xc0,                               /*5: test   %eax,%eax */
0x74, 0x1a,                               /*7: je     23 <op_poperr+0x23> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*9: mov    $0x0,%eax */
0x66, 0x90,                               /*e: xchg   %ax,%ax */
0x48, 0x8b, 0x4f, 0x50,                   /*10: mov    0x50(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*14: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*18: mov    0x20(%rcx),%rcx */
0xff, 0x49, 0x1c,                         /*1c: decl   0x1c(%rcx) */
0xff, 0xc8,                               /*1f: dec    %eax */
0x75, 0xed,                               /*21: jne    10 <op_poperr+0x10> */

};
static uint8_t op_poperr__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_poperr_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_poperr_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_poperr_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_raise__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x48, 0x8b, 0x4b, 0x18,                   /*9: mov    0x18(%rbx),%rcx */
0x48, 0x8b, 0x53, 0x50,                   /*d: mov    0x50(%rbx),%rdx */
0x48, 0x8b, 0x04, 0xc1,                   /*11: mov    (%rcx,%rax,8),%rax */
0x48, 0x89, 0x42, 0x28,                   /*15: mov    %rax,0x28(%rdx) */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*19: callq  1e <op_raise+0x1e> */
0x48, 0x89, 0xdf,                         /*1e: mov    %rbx,%rdi */
0x5b,                                     /*21: pop    %rbx */

};
static uint8_t op_raise__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_raise_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_raise_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_raise_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_epush__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x08,                   /*6: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*a: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x40, 0x20,                   /*e: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*17: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1b: callq  20 <op_epush+0x20> */
0x49, 0x89, 0xc6,                         /*20: mov    %rax,%r14 */
0x48, 0x8b, 0x43, 0x50,                   /*23: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*27: mov    0x18(%rax),%rax */
0x8b, 0x70, 0x50,                         /*2b: mov    0x50(%rax),%esi */
0x48, 0x8b, 0x48, 0x20,                   /*2e: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*32: mov    0x20(%rcx),%edx */
0x39, 0xd6,                               /*35: cmp    %edx,%esi */
0x7f, 0x44,                               /*37: jg     7d <op_epush+0x7d> */
0x8d, 0x0c, 0x36,                         /*39: lea    (%rsi,%rsi,1),%ecx */
0x85, 0xf6,                               /*3c: test   %esi,%esi */
0xba, 0x10, 0x00, 0x00, 0x00,             /*3e: mov    $0x10,%edx */
0x0f, 0x45, 0xd1,                         /*43: cmovne %ecx,%edx */
0x89, 0x50, 0x50,                         /*46: mov    %edx,0x50(%rax) */
0x48, 0x8b, 0x7b, 0x50,                   /*49: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*4d: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*51: mov    0x48(%rax),%rsi */
0x48, 0x63, 0x50, 0x50,                   /*55: movslq 0x50(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*59: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*5d: callq  62 <op_epush+0x62> */
0x48, 0x8b, 0x4b, 0x50,                   /*62: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*66: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x48,                   /*6a: mov    %rax,0x48(%rcx) */
0x48, 0x8b, 0x43, 0x50,                   /*6e: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*72: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*76: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*7a: mov    0x20(%rcx),%edx */
0x8d, 0x42, 0x01,                         /*7d: lea    0x1(%rdx),%eax */
0x89, 0x41, 0x20,                         /*80: mov    %eax,0x20(%rcx) */
0x48, 0x63, 0xc2,                         /*83: movslq %edx,%rax */
0x48, 0x8b, 0x4b, 0x50,                   /*86: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*8a: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x48,                   /*8e: mov    0x48(%rcx),%rcx */
0x4c, 0x89, 0x34, 0xc1,                   /*92: mov    %r14,(%rcx,%rax,8) */
0x8b, 0x43, 0x48,                         /*96: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*99: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*9d: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*a3: mov    %rbx,%rdi */
0x5b,                                     /*a6: pop    %rbx */
0x41, 0x5e,                               /*a7: pop    %r14 */

};
static uint8_t op_epush__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_epush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_epush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_epush_set_args(op, 0,GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_epop__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x54,                               /*5: push   %r12 */
0x53,                                     /*7: push   %rbx */
0x49, 0x89, 0xff,                         /*8: mov    %rdi,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*b: mov    $0x0,%eax */
0x85, 0xc0,                               /*10: test   %eax,%eax */
0x7e, 0x44,                               /*12: jle    58 <op_epop+0x58> */
0x49, 0x8b, 0x47, 0x50,                   /*14: mov    0x50(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*18: mov    0x18(%rax),%rax */
0x4c, 0x8b, 0x70, 0x20,                   /*1c: mov    0x20(%rax),%r14 */
0x41, 0x8b, 0x6e, 0x20,                   /*20: mov    0x20(%r14),%ebp */
0x31, 0xdb,                               /*24: xor    %ebx,%ebx */
0x41, 0xbc, 0x00, 0x00, 0x00, 0x00,       /*26: mov    $0x0,%r12d */
0x0f, 0x1f, 0x40, 0x00,                   /*2c: nopl   0x0(%rax) */
0x41, 0x3b, 0x6e, 0xc8,                   /*30: cmp    -0x38(%r14),%ebp */
0x7e, 0x22,                               /*34: jle    58 <op_epop+0x58> */
0x49, 0x8b, 0x7f, 0x50,                   /*36: mov    0x50(%r15),%rdi */
0xff, 0xcd,                               /*3a: dec    %ebp */
0x89, 0xee,                               /*3c: mov    %ebp,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3e: callq  43 <op_epop+0x43> */
0x41, 0x8b, 0x47, 0x48,                   /*43: mov    0x48(%r15),%eax */
0x49, 0x8b, 0x4f, 0x50,                   /*47: mov    0x50(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*4b: mov    %eax,0xdc(%rcx) */
0xff, 0xc3,                               /*51: inc    %ebx */
0x44, 0x39, 0xe3,                         /*53: cmp    %r12d,%ebx */
0x7c, 0xd8,                               /*56: jl     30 <op_epop+0x30> */
0x4c, 0x89, 0xff,                         /*58: mov    %r15,%rdi */
0x5b,                                     /*5b: pop    %rbx */
0x41, 0x5c,                               /*5c: pop    %r12 */
0x41, 0x5e,                               /*5e: pop    %r14 */
0x41, 0x5f,                               /*60: pop    %r15 */
0x5d,                                     /*62: pop    %rbp */

};
static uint8_t op_epop__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_epop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_epop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_epop_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {"op_idx"=>[[4, 0, 31..34]]} */
static uint8_t op_send__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x41, 0x56,                               /*4: push   %r14 */
0x53,                                     /*6: push   %rbx */
0x48, 0x83, 0xe4, 0xf0,                   /*7: and    $0xfffffffffffffff0,%rsp */
0x48, 0x89, 0xfb,                         /*b: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x08,                   /*e: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x50,                   /*12: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*16: mov    0x18(%rcx),%rcx */
0x4c, 0x8b, 0x71, 0x20,                   /*1a: mov    0x20(%rcx),%r14 */
0xb9, 0x00, 0x04, 0xde, 0x00,             /*1e: mov    $0xde0400,%ecx */
0x48, 0x03, 0x48, 0x08,                   /*23: add    0x8(%rax),%rcx */
0x48, 0x89, 0x4b, 0x10,                   /*27: mov    %rcx,0x10(%rbx) */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*2b: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*30: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*35: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*3a: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*40: callq  45 <op_send+0x45> */
0x48, 0x8b, 0x43, 0x50,                   /*45: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*49: mov    0x18(%rax),%rax */
0x4c, 0x39, 0x70, 0x20,                   /*4d: cmp    %r14,0x20(%rax) */
0x73, 0x0c,                               /*51: jae    5f <op_send+0x5f> */
0x48, 0x89, 0xdf,                         /*53: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf0,                   /*56: lea    -0x10(%rbp),%rsp */
0x5b,                                     /*5a: pop    %rbx */
0x41, 0x5e,                               /*5b: pop    %r14 */
0x5d,                                     /*5d: pop    %rbp */
0xc3,                                     /*5e: retq */
0x48, 0x89, 0xdf,                         /*5f: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf0,                   /*62: lea    -0x10(%rbp),%rsp */
0x5b,                                     /*66: pop    %rbx */
0x41, 0x5e,                               /*67: pop    %r14 */
0x5d,                                     /*69: pop    %rbp */

};
static uint8_t op_send__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_send_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
  *((int32_t *)(op + 31)) = op_idx * 4 + 0;
}

static void op_send_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_send_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_sendb__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x53,                                     /*4: push   %rbx */
0x48, 0x83, 0xe4, 0xf0,                   /*5: and    $0xfffffffffffffff0,%rsp */
0x48, 0x83, 0xec, 0x10,                   /*9: sub    $0x10,%rsp */
0x48, 0x89, 0xfb,                         /*d: mov    %rdi,%rbx */
0xbe, 0x21, 0x00, 0x00, 0x00,             /*10: mov    $0x21,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*1f: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*25: callq  2a <op_sendb+0x2a> */
0x48, 0x89, 0xdf,                         /*2a: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf8,                   /*2d: lea    -0x8(%rbp),%rsp */
0x5b,                                     /*31: pop    %rbx */
0x5d,                                     /*32: pop    %rbp */

};
static uint8_t op_sendb__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_sendb_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sendb_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sendb_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_fsend__text[] = {

};
static uint8_t op_fsend__rodata[] = {

};

static void op_fsend_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_fsend_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_fsend_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_call__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x46, 0x50,                   /*6: mov    0x50(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*a: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*e: mov    0x8(%rax),%rcx */
0x48, 0x8b, 0x40, 0x20,                   /*12: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x19,                         /*16: mov    (%rcx),%rbx */
0x48, 0x8b, 0x4b, 0x20,                   /*19: mov    0x20(%rbx),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*1d: mov    %rcx,0x48(%rax) */
0x48, 0x89, 0x58, 0x08,                   /*21: mov    %rbx,0x8(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*25: mov    0x28(%rbx),%rcx */
0x48, 0x85, 0xc9,                         /*29: test   %rcx,%rcx */
0x74, 0x24,                               /*2c: je     52 <op_call+0x52> */
0x8b, 0x51, 0x20,                         /*2e: mov    0x20(%rcx),%edx */
0x85, 0xd2,                               /*31: test   %edx,%edx */
0x74, 0x06,                               /*33: je     3b <op_call+0x3b> */
0x89, 0x10,                               /*35: mov    %edx,(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*37: mov    0x28(%rbx),%rcx */
0x48, 0x83, 0x79, 0x18, 0x00,             /*3b: cmpq   $0x0,0x18(%rcx) */
0x75, 0x10,                               /*40: jne    52 <op_call+0x52> */
0x49, 0x8b, 0x56, 0x50,                   /*42: mov    0x50(%r14),%rdx */
0x48, 0x8b, 0x52, 0x18,                   /*46: mov    0x18(%rdx),%rdx */
0x48, 0x8b, 0x52, 0x08,                   /*4a: mov    0x8(%rdx),%rdx */
0x48, 0x89, 0x51, 0x18,                   /*4e: mov    %rdx,0x18(%rcx) */
0xf6, 0x43, 0x02, 0x04,                   /*52: testb  $0x4,0x2(%rbx) */
0x74, 0x32,                               /*56: je     8a <op_call+0x8a> */
0x49, 0x8b, 0x7e, 0x50,                   /*58: mov    0x50(%r14),%rdi */
0x48, 0x89, 0xde,                         /*5c: mov    %rbx,%rsi */
0xff, 0x53, 0x18,                         /*5f: callq  *0x18(%rbx) */
0x48, 0x89, 0xc3,                         /*62: mov    %rax,%rbx */
0x49, 0x8b, 0x7e, 0x50,                   /*65: mov    0x50(%r14),%rdi */
0x41, 0x8b, 0x76, 0x48,                   /*69: mov    0x48(%r14),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6d: callq  72 <op_call+0x72> */
0x49, 0x8b, 0x46, 0x50,                   /*72: mov    0x50(%r14),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*76: cmpq   $0x0,0x28(%rax) */
0x74, 0x57,                               /*7b: je     d4 <op_call+0xd4> */
0x4c, 0x89, 0xf7,                         /*7d: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*80: callq  85 <op_call+0x85> */
0xe9, 0x13, 0x01, 0x00, 0x00,             /*85: jmpq   19d <op_call+0x19d> */
0x49, 0x89, 0x1e,                         /*8a: mov    %rbx,(%r14) */
0x48, 0x8b, 0x4b, 0x18,                   /*8d: mov    0x18(%rbx),%rcx */
0x49, 0x89, 0x4e, 0x08,                   /*91: mov    %rcx,0x8(%r14) */
0x48, 0x85, 0xc9,                         /*95: test   %rcx,%rcx */
0x0f, 0x84, 0x8d, 0x00, 0x00, 0x00,       /*98: je     12b <op_call+0x12b> */
0x48, 0x8b, 0x51, 0x10,                   /*9e: mov    0x10(%rcx),%rdx */
0x49, 0x89, 0x56, 0x20,                   /*a2: mov    %rdx,0x20(%r14) */
0x48, 0x8b, 0x51, 0x18,                   /*a6: mov    0x18(%rcx),%rdx */
0x49, 0x89, 0x56, 0x28,                   /*aa: mov    %rdx,0x28(%r14) */
0x0f, 0xb7, 0x49, 0x02,                   /*ae: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*b2: mov    %ecx,0x18(%rax) */
0x8b, 0x50, 0x40,                         /*b5: mov    0x40(%rax),%edx */
0x49, 0x8b, 0x46, 0x08,                   /*b8: mov    0x8(%r14),%rax */
0x49, 0x8b, 0x7e, 0x50,                   /*bc: mov    0x50(%r14),%rdi */
0x0f, 0xb7, 0x70, 0x02,                   /*c0: movzwl 0x2(%rax),%esi */
0x85, 0xd2,                               /*c4: test   %edx,%edx */
0x0f, 0x88, 0x83, 0x00, 0x00, 0x00,       /*c6: js     14f <op_call+0x14f> */
0x83, 0xc2, 0x02,                         /*cc: add    $0x2,%edx */
0xe9, 0x8b, 0x00, 0x00, 0x00,             /*cf: jmpq   15f <op_call+0x15f> */
0x48, 0x8b, 0x40, 0x18,                   /*d4: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*d8: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x51, 0x10,                   /*dc: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x50, 0x08,                   /*e0: mov    %rdx,0x8(%rax) */
0x49, 0x89, 0x56, 0x18,                   /*e4: mov    %rdx,0x18(%r14) */
0x48, 0x63, 0x41, 0x44,                   /*e8: movslq 0x44(%rcx),%rax */
0x48, 0x89, 0x1c, 0xc2,                   /*ec: mov    %rbx,(%rdx,%rax,8) */
0x48, 0x8b, 0x41, 0x30,                   /*f0: mov    0x30(%rcx),%rax */
0x49, 0x89, 0x46, 0x10,                   /*f4: mov    %rax,0x10(%r14) */
0x49, 0x8b, 0x7e, 0x50,                   /*f8: mov    0x50(%r14),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*fc: callq  101 <op_call+0x101> */
0x49, 0x8b, 0x46, 0x50,                   /*101: mov    0x50(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*105: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*109: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*10d: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*111: mov    0x18(%rax),%rax */
0x49, 0x89, 0x46, 0x08,                   /*115: mov    %rax,0x8(%r14) */
0x48, 0x8b, 0x48, 0x10,                   /*119: mov    0x10(%rax),%rcx */
0x49, 0x89, 0x4e, 0x20,                   /*11d: mov    %rcx,0x20(%r14) */
0x48, 0x8b, 0x40, 0x18,                   /*121: mov    0x18(%rax),%rax */
0x49, 0x89, 0x46, 0x28,                   /*125: mov    %rax,0x28(%r14) */
0xeb, 0x72,                               /*129: jmp    19d <op_call+0x19d> */
0x49, 0x8b, 0x46, 0x50,                   /*12b: mov    0x50(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*12f: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*133: mov    0x8(%rax),%rax */
0x48, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, /*137: movq   $0x0,(%rax) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*13e: mov    $0x0,%esi */
0x31, 0xd2,                               /*143: xor    %edx,%edx */
0x4c, 0x89, 0xf7,                         /*145: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*148: callq  14d <op_call+0x14d> */
0xeb, 0x4e,                               /*14d: jmp    19d <op_call+0x19d> */
0x83, 0xfe, 0x03,                         /*14f: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*152: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*157: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*15a: mov    $0x3,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*15f: callq  164 <op_call+0x164> */
0x49, 0x8b, 0x46, 0x50,                   /*164: mov    0x50(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*168: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*16c: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x18,                   /*170: mov    %rax,0x18(%r14) */
0x48, 0x8b, 0x4b, 0x28,                   /*174: mov    0x28(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*178: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x09,                         /*17c: mov    (%rcx),%rcx */
0x48, 0x89, 0x08,                         /*17f: mov    %rcx,(%rax) */
0x49, 0x8b, 0x46, 0x08,                   /*182: mov    0x8(%r14),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*186: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x10,                   /*18a: mov    %rax,0x10(%r14) */
0x49, 0x8b, 0x36,                         /*18e: mov    (%r14),%rsi */
0x49, 0x8b, 0x7e, 0x50,                   /*191: mov    0x50(%r14),%rdi */
0x4c, 0x89, 0xf2,                         /*195: mov    %r14,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*198: callq  19d <op_call+0x19d> */
0x4c, 0x89, 0xf7,                         /*19d: mov    %r14,%rdi */
0x5b,                                     /*1a0: pop    %rbx */
0x41, 0x5e,                               /*1a1: pop    %r14 */

};
static uint8_t op_call__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_call_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_call_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_call_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_super__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x89, 0xfb,                         /*a: mov    %rdi,%rbx */
0x48, 0x8b, 0x6b, 0x50,                   /*d: mov    0x50(%rbx),%rbp */
0x48, 0x8b, 0x45, 0x18,                   /*11: mov    0x18(%rbp),%rax */
0x4c, 0x8b, 0x68, 0x20,                   /*15: mov    0x20(%rax),%r13 */
0x45, 0x8b, 0x65, 0x00,                   /*19: mov    0x0(%r13),%r12d */
0x45, 0x85, 0xe4,                         /*1d: test   %r12d,%r12d */
0x74, 0x61,                               /*20: je     83 <op_super+0x83> */
0x48, 0x8b, 0x43, 0x18,                   /*22: mov    0x18(%rbx),%rax */
0x4c, 0x8b, 0x30,                         /*26: mov    (%rax),%r14 */
0x49, 0x8b, 0x45, 0x48,                   /*29: mov    0x48(%r13),%rax */
0x48, 0x8b, 0x48, 0x28,                   /*2d: mov    0x28(%rax),%rcx */
0x48, 0x89, 0x0c, 0x24,                   /*31: mov    %rcx,(%rsp) */
0x48, 0x8b, 0x03,                         /*35: mov    (%rbx),%rax */
0x48, 0x39, 0x48, 0x38,                   /*38: cmp    %rcx,0x38(%rax) */
0x75, 0x08,                               /*3c: jne    46 <op_super+0x46> */
0x31, 0xd2,                               /*3e: xor    %edx,%edx */
0x44, 0x39, 0x60, 0x30,                   /*40: cmp    %r12d,0x30(%rax) */
0x74, 0x33,                               /*44: je     79 <op_super+0x79> */
0x48, 0x39, 0x48, 0x48,                   /*46: cmp    %rcx,0x48(%rax) */
0x75, 0x0b,                               /*4a: jne    57 <op_super+0x57> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*4c: mov    $0x1,%edx */
0x44, 0x39, 0x60, 0x40,                   /*51: cmp    %r12d,0x40(%rax) */
0x74, 0x22,                               /*55: je     79 <op_super+0x79> */
0x48, 0x39, 0x48, 0x58,                   /*57: cmp    %rcx,0x58(%rax) */
0x75, 0x0b,                               /*5b: jne    68 <op_super+0x68> */
0xba, 0x02, 0x00, 0x00, 0x00,             /*5d: mov    $0x2,%edx */
0x44, 0x39, 0x60, 0x50,                   /*62: cmp    %r12d,0x50(%rax) */
0x74, 0x11,                               /*66: je     79 <op_super+0x79> */
0x48, 0x39, 0x48, 0x68,                   /*68: cmp    %rcx,0x68(%rax) */
0x75, 0x51,                               /*6c: jne    bf <op_super+0xbf> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*6e: mov    $0x3,%edx */
0x44, 0x39, 0x60, 0x60,                   /*73: cmp    %r12d,0x60(%rax) */
0x75, 0x46,                               /*77: jne    bf <op_super+0xbf> */
0x4c, 0x8b, 0xbc, 0xd0, 0x90, 0x00, 0x00, 0x00,/*79: mov    0x90(%rax,%rdx,8),%r15 */
0xeb, 0x4e,                               /*81: jmp    d1 <op_super+0xd1> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*83: mov    0x0(%rip),%rsi        # 8a <op_super+0x8a> */
0x48, 0x89, 0xef,                         /*8a: mov    %rbp,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8d: callq  92 <op_super+0x92> */
0x49, 0x89, 0xc6,                         /*92: mov    %rax,%r14 */
0x48, 0x8b, 0x7b, 0x50,                   /*95: mov    0x50(%rbx),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*99: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*9e: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a3: callq  a8 <op_super+0xa8> */
0x48, 0x89, 0xef,                         /*a8: mov    %rbp,%rdi */
0x4c, 0x89, 0xf6,                         /*ab: mov    %r14,%rsi */
0x48, 0x89, 0xc2,                         /*ae: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b1: callq  b6 <op_super+0xb6> */
0x48, 0x89, 0x45, 0x28,                   /*b6: mov    %rax,0x28(%rbp) */
0xe9, 0x0f, 0x02, 0x00, 0x00,             /*ba: jmpq   2ce <op_super+0x2ce> */
0x48, 0x8d, 0x34, 0x24,                   /*bf: lea    (%rsp),%rsi */
0x48, 0x89, 0xef,                         /*c3: mov    %rbp,%rdi */
0x44, 0x89, 0xe2,                         /*c6: mov    %r12d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c9: callq  ce <op_super+0xce> */
0x49, 0x89, 0xc7,                         /*ce: mov    %rax,%r15 */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*d1: mov    $0x0,%ebp */
0x4d, 0x85, 0xff,                         /*d6: test   %r15,%r15 */
0x0f, 0x85, 0x40, 0x01, 0x00, 0x00,       /*d9: jne    21f <op_super+0x21f> */
0x48, 0x8b, 0x7b, 0x50,                   /*df: mov    0x50(%rbx),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*e3: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*e8: mov    $0xe,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ed: callq  f2 <op_super+0xf2> */
0x41, 0x89, 0xc4,                         /*f2: mov    %eax,%r12d */
0x48, 0x8b, 0x7b, 0x50,                   /*f5: mov    0x50(%rbx),%rdi */
0x48, 0x8d, 0x34, 0x24,                   /*f9: lea    (%rsp),%rsi */
0x44, 0x89, 0xe2,                         /*fd: mov    %r12d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*100: callq  105 <op_super+0x105> */
0x49, 0x89, 0xc7,                         /*105: mov    %rax,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*108: mov    $0x0,%eax */
0x83, 0xf8, 0x7f,                         /*10d: cmp    $0x7f,%eax */
0x75, 0x31,                               /*110: jne    143 <op_super+0x143> */
0x48, 0x8b, 0x43, 0x18,                   /*112: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*116: mov    0x50(%rbx),%rdi */
0x41, 0x8b, 0x55, 0x00,                   /*11a: mov    0x0(%r13),%edx */
0x48, 0xc1, 0xe2, 0x20,                   /*11e: shl    $0x20,%rdx */
0x48, 0x83, 0xca, 0x0e,                   /*122: or     $0xe,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*126: mov    $0x0,%ecx */
0xff, 0xc1,                               /*12b: inc    %ecx */
0x48, 0x63, 0xc9,                         /*12d: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*130: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*134: callq  139 <op_super+0x139> */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*139: mov    $0x0,%ebp */
0xe9, 0xdc, 0x00, 0x00, 0x00,             /*13e: jmpq   21f <op_super+0x21f> */
0x48, 0x8b, 0x43, 0x18,                   /*143: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*147: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*14c: movslq %ecx,%rcx */
0x48, 0x8d, 0x51, 0x01,                   /*14f: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*153: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*157: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*15a: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*15d: mov    $0x0,%edi */
0xff, 0xc7,                               /*162: inc    %edi */
0x48, 0x63, 0xff,                         /*164: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*167: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*16c: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*16f: setge  %cl */
0x08, 0xd1,                               /*172: or     %dl,%cl */
0x74, 0x3c,                               /*174: je     1b2 <op_super+0x1b2> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*176: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*17b: cmp    $0xffffffff,%ecx */
0x74, 0x6e,                               /*17e: je     1ee <op_super+0x1ee> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*180: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*185: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x10,             /*188: lea    0x10(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18d: mov    $0x0,%ecx */
0xff, 0xc1,                               /*192: inc    %ecx */
0x48, 0x63, 0xc9,                         /*194: movslq %ecx,%rcx */
0x48, 0xf7, 0xd9,                         /*197: neg    %rcx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*19a: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x50, 0xf8,                   /*1a0: mov    -0x8(%rax),%rdx */
0x48, 0x89, 0x10,                         /*1a4: mov    %rdx,(%rax) */
0x48, 0x8d, 0x40, 0x08,                   /*1a7: lea    0x8(%rax),%rax */
0x48, 0xff, 0xc1,                         /*1ab: inc    %rcx */
0x75, 0xf0,                               /*1ae: jne    1a0 <op_super+0x1a0> */
0xeb, 0x3c,                               /*1b0: jmp    1ee <op_super+0x1ee> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b2: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*1b7: cmp    $0xffffffff,%ecx */
0x74, 0x32,                               /*1ba: je     1ee <op_super+0x1ee> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1bc: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1c1: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x08,             /*1c4: lea    0x8(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1c9: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1ce: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1d0: movslq %ecx,%rcx */
0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1d3: data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x54, 0xc8, 0xf8,             /*1e0: mov    -0x8(%rax,%rcx,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*1e5: mov    %rdx,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*1e9: dec    %rcx */
0x75, 0xf2,                               /*1ec: jne    1e0 <op_super+0x1e0> */
0x48, 0x8b, 0x43, 0x18,                   /*1ee: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1f2: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1f7: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1f9: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*1fc: movq   $0x0,(%rax,%rcx,8) */
0x41, 0x8b, 0x45, 0x00,                   /*204: mov    0x0(%r13),%eax */
0x48, 0x8b, 0x53, 0x18,                   /*208: mov    0x18(%rbx),%rdx */
0x89, 0x44, 0xca, 0x04,                   /*20c: mov    %eax,0x4(%rdx,%rcx,8) */
0x48, 0x8b, 0x43, 0x18,                   /*210: mov    0x18(%rbx),%rax */
0xc6, 0x04, 0xc8, 0x0e,                   /*214: movb   $0xe,(%rax,%rcx,8) */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*218: mov    $0x0,%ebp */
0xff, 0xc5,                               /*21d: inc    %ebp */
0x48, 0x8b, 0x7b, 0x50,                   /*21f: mov    0x50(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*223: callq  228 <op_super+0x228> */
0x44, 0x89, 0x20,                         /*228: mov    %r12d,(%rax) */
0x4c, 0x89, 0x78, 0x08,                   /*22b: mov    %r15,0x8(%rax) */
0x48, 0x8b, 0x4b, 0x50,                   /*22f: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*233: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*237: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x48, 0x10,                   /*23b: mov    %rcx,0x10(%rax) */
0x83, 0xfd, 0x7f,                         /*23f: cmp    $0x7f,%ebp */
0xb9, 0xff, 0xff, 0xff, 0xff,             /*242: mov    $0xffffffff,%ecx */
0x0f, 0x45, 0xcd,                         /*247: cmovne %ebp,%ecx */
0x89, 0x48, 0x40,                         /*24a: mov    %ecx,0x40(%rax) */
0x48, 0x8b, 0x0c, 0x24,                   /*24d: mov    (%rsp),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*251: mov    %rcx,0x48(%rax) */
0x48, 0x8b, 0x4b, 0x10,                   /*255: mov    0x10(%rbx),%rcx */
0x48, 0x83, 0xc1, 0x04,                   /*259: add    $0x4,%rcx */
0x48, 0x89, 0x48, 0x30,                   /*25d: mov    %rcx,0x30(%rax) */
0x48, 0x8b, 0x4b, 0x50,                   /*261: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*265: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*269: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*26e: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*271: shl    $0x3,%rdx */
0x48, 0x01, 0x51, 0x08,                   /*275: add    %rdx,0x8(%rcx) */
0x48, 0x8b, 0x4b, 0x50,                   /*279: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*27d: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*281: mov    0x8(%rcx),%rcx */
0x4c, 0x89, 0x31,                         /*285: mov    %r14,(%rcx) */
0x41, 0xf6, 0x47, 0x02, 0x04,             /*288: testb  $0x4,0x2(%r15) */
0x74, 0x4c,                               /*28d: je     2db <op_super+0x2db> */
0x8d, 0x4d, 0x02,                         /*28f: lea    0x2(%rbp),%ecx */
0x83, 0xfd, 0x7f,                         /*292: cmp    $0x7f,%ebp */
0xba, 0x03, 0x00, 0x00, 0x00,             /*295: mov    $0x3,%edx */
0x0f, 0x45, 0xd1,                         /*29a: cmovne %ecx,%edx */
0x89, 0x50, 0x18,                         /*29d: mov    %edx,0x18(%rax) */
0x48, 0x8b, 0x7b, 0x50,                   /*2a0: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*2a4: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x68, 0x08,                   /*2a8: mov    0x8(%rax),%rbp */
0x4c, 0x89, 0xf6,                         /*2ac: mov    %r14,%rsi */
0x41, 0xff, 0x57, 0x18,                   /*2af: callq  *0x18(%r15) */
0x48, 0x89, 0x45, 0x00,                   /*2b3: mov    %rax,0x0(%rbp) */
0x48, 0x8b, 0x7b, 0x50,                   /*2b7: mov    0x50(%rbx),%rdi */
0x8b, 0x73, 0x48,                         /*2bb: mov    0x48(%rbx),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2be: callq  2c3 <op_super+0x2c3> */
0x48, 0x8b, 0x43, 0x50,                   /*2c3: mov    0x50(%rbx),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*2c7: cmpq   $0x0,0x28(%rax) */
0x74, 0x5b,                               /*2cc: je     329 <op_super+0x329> */
0x48, 0x89, 0xdf,                         /*2ce: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2d1: callq  2d6 <op_super+0x2d6> */
0xe9, 0x9f, 0x00, 0x00, 0x00,             /*2d6: jmpq   37a <op_super+0x37a> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2db: mov    $0x0,%ecx */
0x89, 0x48, 0x44,                         /*2e0: mov    %ecx,0x44(%rax) */
0x4c, 0x89, 0x78, 0x08,                   /*2e3: mov    %r15,0x8(%rax) */
0x49, 0x8b, 0x4f, 0x18,                   /*2e7: mov    0x18(%r15),%rcx */
0x48, 0x89, 0x4b, 0x08,                   /*2eb: mov    %rcx,0x8(%rbx) */
0x48, 0x8b, 0x51, 0x10,                   /*2ef: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x53, 0x20,                   /*2f3: mov    %rdx,0x20(%rbx) */
0x48, 0x8b, 0x51, 0x18,                   /*2f7: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x53, 0x28,                   /*2fb: mov    %rdx,0x28(%rbx) */
0x0f, 0xb7, 0x49, 0x02,                   /*2ff: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*303: mov    %ecx,0x18(%rax) */
0x48, 0x8b, 0x4b, 0x08,                   /*306: mov    0x8(%rbx),%rcx */
0x48, 0x8b, 0x7b, 0x50,                   /*30a: mov    0x50(%rbx),%rdi */
0x0f, 0xb7, 0x71, 0x02,                   /*30e: movzwl 0x2(%rcx),%esi */
0x83, 0xfd, 0x7f,                         /*312: cmp    $0x7f,%ebp */
0x75, 0x31,                               /*315: jne    348 <op_super+0x348> */
0x83, 0xfe, 0x03,                         /*317: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*31a: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*31f: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*322: mov    $0x3,%edx */
0xeb, 0x25,                               /*327: jmp    34e <op_super+0x34e> */
0x48, 0x8b, 0x40, 0x18,                   /*329: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*32d: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*331: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*335: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x4b, 0x18,                   /*339: mov    %rcx,0x18(%rbx) */
0x48, 0x8b, 0x7b, 0x50,                   /*33d: mov    0x50(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*341: callq  346 <op_super+0x346> */
0xeb, 0x32,                               /*346: jmp    37a <op_super+0x37a> */
0x8b, 0x50, 0x40,                         /*348: mov    0x40(%rax),%edx */
0x83, 0xc2, 0x02,                         /*34b: add    $0x2,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*34e: callq  353 <op_super+0x353> */
0x48, 0x8b, 0x7b, 0x50,                   /*353: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*357: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*35b: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x18,                   /*35f: mov    %rax,0x18(%rbx) */
0x48, 0x8b, 0x43, 0x08,                   /*363: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*367: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x10,                   /*36b: mov    %rax,0x10(%rbx) */
0x4c, 0x89, 0xfe,                         /*36f: mov    %r15,%rsi */
0x48, 0x89, 0xda,                         /*372: mov    %rbx,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*375: callq  37a <op_super+0x37a> */
0x48, 0x89, 0xdf,                         /*37a: mov    %rbx,%rdi */
0x5b,                                     /*37d: pop    %rbx */
0x41, 0x5c,                               /*37e: pop    %r12 */
0x41, 0x5d,                               /*380: pop    %r13 */
0x41, 0x5e,                               /*382: pop    %r14 */
0x41, 0x5f,                               /*384: pop    %r15 */
0x5d,                                     /*386: pop    %rbp */

};
static uint8_t op_super__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x6f, 0x75, 0x74,
0x73, 0x69, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x00, 0x6d,
0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x00,

};

static void op_super_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_super_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_super_set_args(op, GETARG_A(c),0,GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_argary__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x38,                   /*a: sub    $0x38,%rsp */
0x49, 0x89, 0xff,                         /*e: mov    %rdi,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%eax */
0x89, 0x44, 0x24, 0x34,                   /*16: mov    %eax,0x34(%rsp) */
0x44, 0x8b, 0x6c, 0x24, 0x34,             /*1a: mov    0x34(%rsp),%r13d */
0x44, 0x8b, 0x64, 0x24, 0x34,             /*1f: mov    0x34(%rsp),%r12d */
0x8b, 0x5c, 0x24, 0x34,                   /*24: mov    0x34(%rsp),%ebx */
0x8b, 0x74, 0x24, 0x34,                   /*28: mov    0x34(%rsp),%esi */
0x83, 0xe6, 0x0f,                         /*2c: and    $0xf,%esi */
0x0f, 0x84, 0x86, 0x00, 0x00, 0x00,       /*2f: je     bb <op_argary+0xbb> */
0x49, 0x8b, 0x6f, 0x50,                   /*35: mov    0x50(%r15),%rbp */
0x48, 0x8b, 0x45, 0x18,                   /*39: mov    0x18(%rbp),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*3d: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*41: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x28,                   /*45: mov    0x28(%rax),%rax */
0x48, 0x85, 0xc0,                         /*49: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*4c: sete   %cl */
0x83, 0xfe, 0x01,                         /*4f: cmp    $0x1,%esi */
0x74, 0x1f,                               /*52: je     73 <op_argary+0x73> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*54: mov    $0x1,%edx */
0x29, 0xf2,                               /*59: sub    %esi,%edx */
0x0f, 0x1f, 0x44, 0x00, 0x00,             /*5b: nopl   0x0(%rax,%rax,1) */
0xf6, 0xc1, 0x01,                         /*60: test   $0x1,%cl */
0x75, 0x12,                               /*63: jne    77 <op_argary+0x77> */
0x48, 0x8b, 0x40, 0x08,                   /*65: mov    0x8(%rax),%rax */
0x48, 0x85, 0xc0,                         /*69: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*6c: sete   %cl */
0xff, 0xc2,                               /*6f: inc    %edx */
0x75, 0xed,                               /*71: jne    60 <op_argary+0x60> */
0x84, 0xc9,                               /*73: test   %cl,%cl */
0x74, 0x4a,                               /*75: je     c1 <op_argary+0xc1> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*77: mov    0x0(%rip),%rsi        # 7e <op_argary+0x7e> */
0x48, 0x89, 0xef,                         /*7e: mov    %rbp,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*81: callq  86 <op_argary+0x86> */
0x48, 0x89, 0xc3,                         /*86: mov    %rax,%rbx */
0x49, 0x8b, 0x7f, 0x50,                   /*89: mov    0x50(%r15),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*8d: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*92: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*97: callq  9c <op_argary+0x9c> */
0x48, 0x89, 0xef,                         /*9c: mov    %rbp,%rdi */
0x48, 0x89, 0xde,                         /*9f: mov    %rbx,%rsi */
0x48, 0x89, 0xc2,                         /*a2: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a5: callq  aa <op_argary+0xaa> */
0x48, 0x89, 0x45, 0x28,                   /*aa: mov    %rax,0x28(%rbp) */
0x4c, 0x89, 0xff,                         /*ae: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b1: callq  b6 <op_argary+0xb6> */
0xe9, 0xf4, 0x01, 0x00, 0x00,             /*b6: jmpq   2af <op_argary+0x2af> */
0x49, 0x8d, 0x47, 0x18,                   /*bb: lea    0x18(%r15),%rax */
0xeb, 0x04,                               /*bf: jmp    c5 <op_argary+0xc5> */
0x48, 0x83, 0xc0, 0x18,                   /*c1: add    $0x18,%rax */
0x41, 0xc1, 0xed, 0x0a,                   /*c5: shr    $0xa,%r13d */
0x45, 0x89, 0xee,                         /*c9: mov    %r13d,%r14d */
0x41, 0x83, 0xe6, 0x3f,                   /*cc: and    $0x3f,%r14d */
0x41, 0xc1, 0xec, 0x09,                   /*d0: shr    $0x9,%r12d */
0x41, 0x83, 0xe4, 0x01,                   /*d4: and    $0x1,%r12d */
0xc1, 0xeb, 0x04,                         /*d8: shr    $0x4,%ebx */
0x41, 0x89, 0xd8,                         /*db: mov    %ebx,%r8d */
0x41, 0x83, 0xe0, 0x1f,                   /*de: and    $0x1f,%r8d */
0x48, 0x8b, 0x08,                         /*e2: mov    (%rax),%rcx */
0x48, 0x8d, 0x69, 0x08,                   /*e5: lea    0x8(%rcx),%rbp */
0x45, 0x85, 0xe4,                         /*e9: test   %r12d,%r12d */
0x74, 0x5f,                               /*ec: je     14d <op_argary+0x14d> */
0x44, 0x89, 0x64, 0x24, 0x30,             /*ee: mov    %r12d,0x30(%rsp) */
0x44, 0x89, 0xf0,                         /*f3: mov    %r14d,%eax */
0x48, 0x89, 0x44, 0x24, 0x18,             /*f6: mov    %rax,0x18(%rsp) */
0x48, 0x8b, 0x44, 0xc1, 0x08,             /*fb: mov    0x8(%rcx,%rax,8),%rax */
0x48, 0x89, 0x4c, 0x24, 0x28,             /*100: mov    %rcx,0x28(%rsp) */
0x48, 0x83, 0xf8, 0x07,                   /*105: cmp    $0x7,%rax */
0x73, 0x15,                               /*109: jae    120 <op_argary+0x120> */
0x0f, 0xb6, 0xc8,                         /*10b: movzbl %al,%ecx */
0x45, 0x31, 0xe4,                         /*10e: xor    %r12d,%r12d */
0xba, 0x55, 0x00, 0x00, 0x00,             /*111: mov    $0x55,%edx */
0x0f, 0xa3, 0xca,                         /*116: bt     %ecx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*119: mov    $0x0,%ecx */
0x72, 0x61,                               /*11e: jb     181 <op_argary+0x181> */
0x45, 0x31, 0xe4,                         /*120: xor    %r12d,%r12d */
0xa8, 0x01,                               /*123: test   $0x1,%al */
0x75, 0x58,                               /*125: jne    17f <op_argary+0x17f> */
0x0f, 0xb6, 0xc8,                         /*127: movzbl %al,%ecx */
0x83, 0xf9, 0x0e,                         /*12a: cmp    $0xe,%ecx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12d: mov    $0x0,%ecx */
0x74, 0x4d,                               /*132: je     181 <op_argary+0x181> */
0x45, 0x31, 0xe4,                         /*134: xor    %r12d,%r12d */
0x0f, 0xb6, 0x08,                         /*137: movzbl (%rax),%ecx */
0x83, 0xf9, 0x0e,                         /*13a: cmp    $0xe,%ecx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13d: mov    $0x0,%ecx */
0x75, 0x3d,                               /*142: jne    181 <op_argary+0x181> */
0x4c, 0x8b, 0x60, 0x28,                   /*144: mov    0x28(%rax),%r12 */
0x8b, 0x48, 0x18,                         /*148: mov    0x18(%rax),%ecx */
0xeb, 0x34,                               /*14b: jmp    181 <op_argary+0x181> */
0x4d, 0x8b, 0x6f, 0x18,                   /*14d: mov    0x18(%r15),%r13 */
0x49, 0x8b, 0x7f, 0x50,                   /*151: mov    0x50(%r15),%rdi */
0x43, 0x8d, 0x34, 0x30,                   /*155: lea    (%r8,%r14,1),%esi */
0x48, 0x89, 0xea,                         /*159: mov    %rbp,%rdx */
0x48, 0x89, 0xcd,                         /*15c: mov    %rcx,%rbp */
0x4c, 0x89, 0xc3,                         /*15f: mov    %r8,%rbx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*162: callq  167 <op_argary+0x167> */
0x48, 0x89, 0xdf,                         /*167: mov    %rbx,%rdi */
0x49, 0x89, 0xe8,                         /*16a: mov    %rbp,%r8 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16d: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*172: movslq %ecx,%rcx */
0x49, 0x89, 0x44, 0xcd, 0x00,             /*175: mov    %rax,0x0(%r13,%rcx,8) */
0xe9, 0x01, 0x01, 0x00, 0x00,             /*17a: jmpq   280 <op_argary+0x280> */
0x31, 0xc9,                               /*17f: xor    %ecx,%ecx */
0x48, 0x89, 0x4c, 0x24, 0x08,             /*181: mov    %rcx,0x8(%rsp) */
0x49, 0x8b, 0x47, 0x18,                   /*186: mov    0x18(%r15),%rax */
0x48, 0x89, 0x04, 0x24,                   /*18a: mov    %rax,(%rsp) */
0x49, 0x8b, 0x7f, 0x50,                   /*18e: mov    0x50(%r15),%rdi */
0x43, 0x8d, 0x34, 0x30,                   /*192: lea    (%r8,%r14,1),%esi */
0x4c, 0x89, 0x44, 0x24, 0x20,             /*196: mov    %r8,0x20(%rsp) */
0x01, 0xce,                               /*19b: add    %ecx,%esi */
0x89, 0x74, 0x24, 0x14,                   /*19d: mov    %esi,0x14(%rsp) */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1a1: callq  1a6 <op_argary+0x1a6> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a6: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1ab: movslq %ecx,%rcx */
0x48, 0x8b, 0x14, 0x24,                   /*1ae: mov    (%rsp),%rdx */
0x48, 0x89, 0x04, 0xca,                   /*1b2: mov    %rax,(%rdx,%rcx,8) */
0x49, 0x8b, 0x47, 0x18,                   /*1b6: mov    0x18(%r15),%rax */
0x4c, 0x8b, 0x0c, 0xc8,                   /*1ba: mov    (%rax,%rcx,8),%r9 */
0x45, 0x85, 0xf6,                         /*1be: test   %r14d,%r14d */
0x4c, 0x8b, 0x44, 0x24, 0x28,             /*1c1: mov    0x28(%rsp),%r8 */
0x74, 0x34,                               /*1c6: je     1fc <op_argary+0x1fc> */
0x49, 0x8b, 0x49, 0x28,                   /*1c8: mov    0x28(%r9),%rcx */
0x49, 0x83, 0xe5, 0x3f,                   /*1cc: and    $0x3f,%r13 */
0x49, 0xf7, 0xdd,                         /*1d0: neg    %r13 */
0x4c, 0x89, 0xc2,                         /*1d3: mov    %r8,%rdx */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1d6: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xee,                         /*1e0: mov    %rbp,%rsi */
0x48, 0x83, 0xc2, 0x10,                   /*1e3: add    $0x10,%rdx */
0x48, 0x8b, 0x3e,                         /*1e7: mov    (%rsi),%rdi */
0x48, 0x89, 0x39,                         /*1ea: mov    %rdi,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*1ed: add    $0x8,%rcx */
0x49, 0xff, 0xc5,                         /*1f1: inc    %r13 */
0x48, 0x89, 0xd5,                         /*1f4: mov    %rdx,%rbp */
0x48, 0x89, 0xf2,                         /*1f7: mov    %rsi,%rdx */
0x75, 0xe4,                               /*1fa: jne    1e0 <op_argary+0x1e0> */
0x48, 0x8b, 0x44, 0x24, 0x08,             /*1fc: mov    0x8(%rsp),%rax */
0x85, 0xc0,                               /*201: test   %eax,%eax */
0x48, 0x8b, 0x6c, 0x24, 0x18,             /*203: mov    0x18(%rsp),%rbp */
0x7e, 0x2a,                               /*208: jle    234 <op_argary+0x234> */
0x48, 0x8d, 0x0c, 0xed, 0x00, 0x00, 0x00, 0x00,/*20a: lea    0x0(,%rbp,8),%rcx */
0x49, 0x03, 0x49, 0x28,                   /*212: add    0x28(%r9),%rcx */
0x48, 0x63, 0xd0,                         /*216: movslq %eax,%rdx */
0x48, 0xf7, 0xda,                         /*219: neg    %rdx */
0x0f, 0x1f, 0x40, 0x00,                   /*21c: nopl   0x0(%rax) */
0x49, 0x8b, 0x34, 0x24,                   /*220: mov    (%r12),%rsi */
0x49, 0x83, 0xc4, 0x08,                   /*224: add    $0x8,%r12 */
0x48, 0x89, 0x31,                         /*228: mov    %rsi,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*22b: add    $0x8,%rcx */
0x48, 0xff, 0xc2,                         /*22f: inc    %rdx */
0x75, 0xec,                               /*232: jne    220 <op_argary+0x220> */
0x48, 0x8b, 0x7c, 0x24, 0x20,             /*234: mov    0x20(%rsp),%rdi */
0x85, 0xff,                               /*239: test   %edi,%edi */
0x74, 0x36,                               /*23b: je     273 <op_argary+0x273> */
0x49, 0x8d, 0x4c, 0xe8, 0x10,             /*23d: lea    0x10(%r8,%rbp,8),%rcx */
0x48, 0x63, 0xd0,                         /*242: movslq %eax,%rdx */
0x48, 0x01, 0xea,                         /*245: add    %rbp,%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*248: shl    $0x3,%rdx */
0x49, 0x03, 0x51, 0x28,                   /*24c: add    0x28(%r9),%rdx */
0x48, 0x83, 0xe3, 0x1f,                   /*250: and    $0x1f,%rbx */
0x48, 0xf7, 0xdb,                         /*254: neg    %rbx */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*257: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x31,                         /*260: mov    (%rcx),%rsi */
0x48, 0x83, 0xc1, 0x08,                   /*263: add    $0x8,%rcx */
0x48, 0x89, 0x32,                         /*267: mov    %rsi,(%rdx) */
0x48, 0x83, 0xc2, 0x08,                   /*26a: add    $0x8,%rdx */
0x48, 0xff, 0xc3,                         /*26e: inc    %rbx */
0x75, 0xed,                               /*271: jne    260 <op_argary+0x260> */
0x8b, 0x4c, 0x24, 0x14,                   /*273: mov    0x14(%rsp),%ecx */
0x41, 0x89, 0x49, 0x18,                   /*277: mov    %ecx,0x18(%r9) */
0x44, 0x8b, 0x64, 0x24, 0x30,             /*27b: mov    0x30(%rsp),%r12d */
0x49, 0x8b, 0x47, 0x18,                   /*280: mov    0x18(%r15),%rax */
0x45, 0x01, 0xe6,                         /*284: add    %r12d,%r14d */
0x42, 0x8d, 0x4c, 0x37, 0x01,             /*287: lea    0x1(%rdi,%r14,1),%ecx */
0x48, 0x63, 0xc9,                         /*28c: movslq %ecx,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*28f: mov    $0x0,%edx */
0xff, 0xc2,                               /*294: inc    %edx */
0x48, 0x63, 0xd2,                         /*296: movslq %edx,%rdx */
0x49, 0x8b, 0x0c, 0xc8,                   /*299: mov    (%r8,%rcx,8),%rcx */
0x48, 0x89, 0x0c, 0xd0,                   /*29d: mov    %rcx,(%rax,%rdx,8) */
0x41, 0x8b, 0x47, 0x48,                   /*2a1: mov    0x48(%r15),%eax */
0x49, 0x8b, 0x4f, 0x50,                   /*2a5: mov    0x50(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*2a9: mov    %eax,0xdc(%rcx) */
0x4c, 0x89, 0xff,                         /*2af: mov    %r15,%rdi */
0x48, 0x83, 0xc4, 0x38,                   /*2b2: add    $0x38,%rsp */
0x5b,                                     /*2b6: pop    %rbx */
0x41, 0x5c,                               /*2b7: pop    %r12 */
0x41, 0x5d,                               /*2b9: pop    %r13 */
0x41, 0x5e,                               /*2bb: pop    %r14 */
0x41, 0x5f,                               /*2bd: pop    %r15 */
0x5d,                                     /*2bf: pop    %rbp */

};
static uint8_t op_argary__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x6f, 0x75, 0x74,
0x73, 0x69, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x00,

};

static void op_argary_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_argary_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_argary_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_enter__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*a: sub    $0x18,%rsp */
0x49, 0x89, 0xff,                         /*e: mov    %rdi,%r15 */
0x4d, 0x8b, 0x6f, 0x18,                   /*11: mov    0x18(%r15),%r13 */
0x49, 0x8b, 0x7f, 0x50,                   /*15: mov    0x50(%r15),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*19: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1d: mov    0x20(%rax),%rax */
0x48, 0x63, 0x58, 0x40,                   /*21: movslq 0x40(%rax),%rbx */
0x48, 0x85, 0xdb,                         /*25: test   %rbx,%rbx */
0x48, 0x8d, 0x43, 0x01,                   /*28: lea    0x1(%rbx),%rax */
0xb9, 0x02, 0x00, 0x00, 0x00,             /*2c: mov    $0x2,%ecx */
0x48, 0x0f, 0x49, 0xc8,                   /*31: cmovns %rax,%rcx */
0x4d, 0x8d, 0x64, 0xcd, 0x00,             /*35: lea    0x0(%r13,%rcx,8),%r12 */
0x49, 0x8b, 0x74, 0xcd, 0x00,             /*3a: mov    0x0(%r13,%rcx,8),%rsi */
0x48, 0x83, 0xfe, 0x06,                   /*3f: cmp    $0x6,%rsi */
0x77, 0x07,                               /*43: ja     4c <op_enter+0x4c> */
0xff, 0x24, 0xf5, 0x00, 0x00, 0x00, 0x00, /*45: jmpq   *0x0(,%rsi,8) */
0x40, 0xf6, 0xc6, 0x01,                   /*4c: test   $0x1,%sil */
0x75, 0x11,                               /*50: jne    63 <op_enter+0x63> */
0x40, 0x0f, 0xb6, 0xc6,                   /*52: movzbl %sil,%eax */
0x83, 0xf8, 0x0e,                         /*56: cmp    $0xe,%eax */
0x74, 0x08,                               /*59: je     63 <op_enter+0x63> */
0x0f, 0xb6, 0x06,                         /*5b: movzbl (%rsi),%eax */
0x83, 0xf8, 0x0d,                         /*5e: cmp    $0xd,%eax */
0x74, 0x19,                               /*61: je     7c <op_enter+0x7c> */
0xba, 0x0d, 0x00, 0x00, 0x00,             /*63: mov    $0xd,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*68: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*6d: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*73: callq  78 <op_enter+0x78> */
0x49, 0x89, 0x04, 0x24,                   /*78: mov    %rax,(%r12) */
0x49, 0x83, 0xc5, 0x08,                   /*7c: add    $0x8,%r13 */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*80: mov    $0x0,%edi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*85: mov    $0x0,%edx */
0x31, 0xc0,                               /*8a: xor    %eax,%eax */
0x4c, 0x89, 0xe6,                         /*8c: mov    %r12,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8f: callq  94 <op_enter+0x94> */
0x85, 0xdb,                               /*94: test   %ebx,%ebx */
0x4d, 0x89, 0xee,                         /*96: mov    %r13,%r14 */
0x79, 0x18,                               /*99: jns    b3 <op_enter+0xb3> */
0x49, 0x8b, 0x47, 0x18,                   /*9b: mov    0x18(%r15),%rax */
0x49, 0x8b, 0x7f, 0x50,                   /*9f: mov    0x50(%r15),%rdi */
0x48, 0x8b, 0x70, 0x08,                   /*a3: mov    0x8(%rax),%rsi */
0x4c, 0x8b, 0x76, 0x28,                   /*a7: mov    0x28(%rsi),%r14 */
0x8b, 0x5e, 0x18,                         /*ab: mov    0x18(%rsi),%ebx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ae: callq  b3 <op_enter+0xb3> */
0x49, 0x8b, 0x7f, 0x50,                   /*b3: mov    0x50(%r15),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*b7: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*bb: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*bf: mov    0x8(%rax),%rcx */
0x48, 0x85, 0xc9,                         /*c3: test   %rcx,%rcx */
0x0f, 0x84, 0x83, 0x00, 0x00, 0x00,       /*c6: je     14f <op_enter+0x14f> */
0xf6, 0x41, 0x02, 0x08,                   /*cc: testb  $0x8,0x2(%rcx) */
0x74, 0x7d,                               /*d0: je     14f <op_enter+0x14f> */
0x85, 0xdb,                               /*d2: test   %ebx,%ebx */
0x0f, 0x88, 0x00, 0x01, 0x00, 0x00,       /*d4: js     1da <op_enter+0x1da> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*da: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*df: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*e4: shr    $0x7,%esi */
0x83, 0xe6, 0x1f,                         /*e7: and    $0x1f,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ea: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*ef: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*f2: and    $0x1f,%ecx */
0x44, 0x8d, 0x04, 0x31,                   /*f5: lea    (%rcx,%rsi,1),%r8d */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*f9: mov    $0x0,%ebp */
0xc1, 0xed, 0x0d,                         /*fe: shr    $0xd,%ebp */
0x83, 0xe5, 0x1f,                         /*101: and    $0x1f,%ebp */
0x01, 0xcd,                               /*104: add    %ecx,%ebp */
0xc1, 0xea, 0x0c,                         /*106: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*109: and    $0x1,%edx */
0x0f, 0x94, 0xc1,                         /*10c: sete   %cl */
0x01, 0xea,                               /*10f: add    %ebp,%edx */
0x01, 0xf2,                               /*111: add    %esi,%edx */
0x39, 0xd3,                               /*113: cmp    %edx,%ebx */
0x0f, 0x9f, 0xc2,                         /*115: setg   %dl */
0x44, 0x39, 0xc3,                         /*118: cmp    %r8d,%ebx */
0x7c, 0x08,                               /*11b: jl     125 <op_enter+0x125> */
0x20, 0xca,                               /*11d: and    %cl,%dl */
0x0f, 0x84, 0xb5, 0x00, 0x00, 0x00,       /*11f: je     1da <op_enter+0x1da> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*125: mov    $0x0,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12a: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*12f: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*132: and    $0x1f,%eax */
0xc1, 0xee, 0x12,                         /*135: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*138: and    $0x1f,%esi */
0x01, 0xc6,                               /*13b: add    %eax,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*13d: callq  142 <op_enter+0x142> */
0x4c, 0x89, 0xff,                         /*142: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*145: callq  14a <op_enter+0x14a> */
0xe9, 0xeb, 0x06, 0x00, 0x00,             /*14a: jmpq   83a <op_enter+0x83a> */
0x83, 0xfb, 0x01,                         /*14f: cmp    $0x1,%ebx */
0x0f, 0x85, 0x82, 0x00, 0x00, 0x00,       /*152: jne    1da <op_enter+0x1da> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*158: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15d: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*162: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*165: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*168: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*16d: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*170: and    $0x1f,%esi */
0x01, 0xd6,                               /*173: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*175: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*17a: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*17d: and    $0x1,%edx */
0x01, 0xf2,                               /*180: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*182: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*185: and    $0x1f,%ecx */
0x01, 0xd1,                               /*188: add    %edx,%ecx */
0x83, 0xf9, 0x02,                         /*18a: cmp    $0x2,%ecx */
0x7c, 0x4b,                               /*18d: jl     1da <op_enter+0x1da> */
0x49, 0x8b, 0x36,                         /*18f: mov    (%r14),%rsi */
0xbb, 0x01, 0x00, 0x00, 0x00,             /*192: mov    $0x1,%ebx */
0x48, 0x83, 0xfe, 0x06,                   /*197: cmp    $0x6,%rsi */
0x77, 0x0b,                               /*19b: ja     1a8 <op_enter+0x1a8> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*19d: mov    $0x55,%ecx */
0x48, 0x0f, 0xa3, 0xf1,                   /*1a2: bt     %rsi,%rcx */
0x72, 0x32,                               /*1a6: jb     1da <op_enter+0x1da> */
0x40, 0xf6, 0xc6, 0x01,                   /*1a8: test   $0x1,%sil */
0x75, 0x2c,                               /*1ac: jne    1da <op_enter+0x1da> */
0x40, 0x0f, 0xb6, 0xce,                   /*1ae: movzbl %sil,%ecx */
0x83, 0xf9, 0x0e,                         /*1b2: cmp    $0xe,%ecx */
0x74, 0x23,                               /*1b5: je     1da <op_enter+0x1da> */
0x0f, 0xb6, 0x0e,                         /*1b7: movzbl (%rsi),%ecx */
0x83, 0xf9, 0x0e,                         /*1ba: cmp    $0xe,%ecx */
0x75, 0x1b,                               /*1bd: jne    1da <op_enter+0x1da> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1bf: callq  1c4 <op_enter+0x1c4> */
0x49, 0x8b, 0x06,                         /*1c4: mov    (%r14),%rax */
0x8b, 0x58, 0x18,                         /*1c7: mov    0x18(%rax),%ebx */
0x4c, 0x8b, 0x70, 0x28,                   /*1ca: mov    0x28(%rax),%r14 */
0x49, 0x8b, 0x47, 0x50,                   /*1ce: mov    0x50(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*1d2: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1d6: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1da: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1df: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*1e4: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*1e7: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1ea: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*1ef: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*1f2: and    $0x1f,%esi */
0x01, 0xd6,                               /*1f5: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1f7: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*1fc: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*1ff: and    $0x1,%edx */
0x01, 0xf2,                               /*202: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*204: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*207: and    $0x1f,%ecx */
0x01, 0xd1,                               /*20a: add    %edx,%ecx */
0x89, 0x48, 0x40,                         /*20c: mov    %ecx,0x40(%rax) */
0x39, 0xcb,                               /*20f: cmp    %ecx,%ebx */
0x0f, 0x8d, 0xec, 0x00, 0x00, 0x00,       /*211: jge    303 <op_enter+0x303> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*217: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*21c: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*221: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*224: and    $0x1f,%eax */
0xc1, 0xe9, 0x12,                         /*227: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*22a: and    $0x1f,%ecx */
0x01, 0xc1,                               /*22d: add    %eax,%ecx */
0x39, 0xcb,                               /*22f: cmp    %ecx,%ebx */
0x7d, 0x14,                               /*231: jge    247 <op_enter+0x247> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*233: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*238: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*23b: and    $0x1f,%ecx */
0x31, 0xd2,                               /*23e: xor    %edx,%edx */
0x89, 0xd8,                               /*240: mov    %ebx,%eax */
0x29, 0xc8,                               /*242: sub    %ecx,%eax */
0x0f, 0x4e, 0xc2,                         /*244: cmovle %edx,%eax */
0x49, 0x8b, 0x4f, 0x18,                   /*247: mov    0x18(%r15),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*24b: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*250: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*255: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*258: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*25b: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*260: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*263: and    $0x1f,%edi */
0x01, 0xf7,                               /*266: add    %esi,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*268: mov    $0x0,%esi */
0xc1, 0xee, 0x0c,                         /*26d: shr    $0xc,%esi */
0x83, 0xe6, 0x01,                         /*270: and    $0x1,%esi */
0x01, 0xfe,                               /*273: add    %edi,%esi */
0xc1, 0xea, 0x07,                         /*275: shr    $0x7,%edx */
0x83, 0xe2, 0x1f,                         /*278: and    $0x1f,%edx */
0x8d, 0x54, 0x32, 0x01,                   /*27b: lea    0x1(%rdx,%rsi,1),%edx */
0x48, 0x63, 0xd2,                         /*27f: movslq %edx,%rdx */
0x49, 0x8b, 0x34, 0x24,                   /*282: mov    (%r12),%rsi */
0x48, 0x89, 0x34, 0xd1,                   /*286: mov    %rsi,(%rcx,%rdx,8) */
0x8d, 0x4b, 0x01,                         /*28a: lea    0x1(%rbx),%ecx */
0x48, 0x63, 0xc9,                         /*28d: movslq %ecx,%rcx */
0x49, 0x8b, 0x57, 0x18,                   /*290: mov    0x18(%r15),%rdx */
0x48, 0xc7, 0x04, 0xca, 0x00, 0x00, 0x00, 0x00,/*294: movq   $0x0,(%rdx,%rcx,8) */
0x49, 0x8b, 0x57, 0x18,                   /*29c: mov    0x18(%r15),%rdx */
0x83, 0x24, 0xca, 0x01,                   /*2a0: andl   $0x1,(%rdx,%rcx,8) */
0x49, 0x8b, 0x57, 0x18,                   /*2a4: mov    0x18(%r15),%rdx */
0x48, 0xc7, 0x04, 0xca, 0x00, 0x00, 0x00, 0x00,/*2a8: movq   $0x0,(%rdx,%rcx,8) */
0x4d, 0x39, 0xf5,                         /*2b0: cmp    %r14,%r13 */
0x0f, 0x84, 0x63, 0x01, 0x00, 0x00,       /*2b3: je     41c <op_enter+0x41c> */
0x49, 0x8b, 0x4f, 0x18,                   /*2b9: mov    0x18(%r15),%rcx */
0x48, 0x8d, 0x69, 0x08,                   /*2bd: lea    0x8(%rcx),%rbp */
0x4c, 0x39, 0xf5,                         /*2c1: cmp    %r14,%rbp */
0x0f, 0x86, 0x19, 0x01, 0x00, 0x00,       /*2c4: jbe    3e3 <op_enter+0x3e3> */
0x89, 0xde,                               /*2ca: mov    %ebx,%esi */
0x29, 0xc6,                               /*2cc: sub    %eax,%esi */
0x48, 0x63, 0xf6,                         /*2ce: movslq %esi,%rsi */
0x49, 0x8d, 0x3c, 0xf6,                   /*2d1: lea    (%r14,%rsi,8),%rdi */
0x48, 0x39, 0xfd,                         /*2d5: cmp    %rdi,%rbp */
0x0f, 0x83, 0x05, 0x01, 0x00, 0x00,       /*2d8: jae    3e3 <op_enter+0x3e3> */
0x39, 0xc3,                               /*2de: cmp    %eax,%ebx */
0x0f, 0x84, 0x36, 0x01, 0x00, 0x00,       /*2e0: je     41c <op_enter+0x41c> */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*2e6: nopw   %cs:0x0(%rax,%rax,1) */
0x49, 0x8b, 0x54, 0xf6, 0xf8,             /*2f0: mov    -0x8(%r14,%rsi,8),%rdx */
0x48, 0x89, 0x14, 0xf1,                   /*2f5: mov    %rdx,(%rcx,%rsi,8) */
0x48, 0xff, 0xce,                         /*2f9: dec    %rsi */
0x75, 0xf2,                               /*2fc: jne    2f0 <op_enter+0x2f0> */
0xe9, 0x19, 0x01, 0x00, 0x00,             /*2fe: jmpq   41c <op_enter+0x41c> */
0x4d, 0x39, 0xf5,                         /*303: cmp    %r14,%r13 */
0x0f, 0x84, 0x10, 0x02, 0x00, 0x00,       /*306: je     51c <op_enter+0x51c> */
0x49, 0x8b, 0x47, 0x18,                   /*30c: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*310: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*315: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*31a: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*31d: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*320: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*325: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*328: and    $0x1f,%esi */
0x01, 0xd6,                               /*32b: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*32d: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*332: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*335: and    $0x1,%edx */
0x01, 0xf2,                               /*338: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*33a: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*33d: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*340: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*344: movslq %ecx,%rcx */
0x49, 0x8b, 0x14, 0x24,                   /*347: mov    (%r12),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*34b: mov    %rdx,(%rax,%rcx,8) */
0x49, 0x8b, 0x47, 0x18,                   /*34f: mov    0x18(%r15),%rax */
0x48, 0x8d, 0x48, 0x08,                   /*353: lea    0x8(%rax),%rcx */
0x4c, 0x39, 0xf1,                         /*357: cmp    %r14,%rcx */
0x0f, 0x86, 0x62, 0x01, 0x00, 0x00,       /*35a: jbe    4c2 <op_enter+0x4c2> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*360: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*365: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*36a: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*36d: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*370: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*373: and    $0x1f,%edx */
0x01, 0xf2,                               /*376: add    %esi,%edx */
0x48, 0x63, 0xd2,                         /*378: movslq %edx,%rdx */
0x49, 0x8d, 0x14, 0xd6,                   /*37b: lea    (%r14,%rdx,8),%rdx */
0x48, 0x39, 0xd1,                         /*37f: cmp    %rdx,%rcx */
0x0f, 0x83, 0x3a, 0x01, 0x00, 0x00,       /*382: jae    4c2 <op_enter+0x4c2> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*388: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*38d: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*392: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*395: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*398: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*39b: and    $0x1f,%ecx */
0x01, 0xd1,                               /*39e: add    %edx,%ecx */
0x0f, 0x84, 0x76, 0x01, 0x00, 0x00,       /*3a0: je     51c <op_enter+0x51c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3a6: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3ab: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*3b0: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*3b3: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*3b6: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*3b9: and    $0x1f,%ecx */
0x01, 0xd1,                               /*3bc: add    %edx,%ecx */
0x48, 0x63, 0xc9,                         /*3be: movslq %ecx,%rcx */
0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*3c1: data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x49, 0x8b, 0x54, 0xce, 0xf8,             /*3d0: mov    -0x8(%r14,%rcx,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*3d5: mov    %rdx,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*3d9: dec    %rcx */
0x75, 0xf2,                               /*3dc: jne    3d0 <op_enter+0x3d0> */
0xe9, 0x39, 0x01, 0x00, 0x00,             /*3de: jmpq   51c <op_enter+0x51c> */
0x4c, 0x39, 0xf5,                         /*3e3: cmp    %r14,%rbp */
0x74, 0x34,                               /*3e6: je     41c <op_enter+0x41c> */
0x89, 0xde,                               /*3e8: mov    %ebx,%esi */
0x29, 0xc6,                               /*3ea: sub    %eax,%esi */
0x74, 0x2e,                               /*3ec: je     41c <op_enter+0x41c> */
0x48, 0x63, 0xf6,                         /*3ee: movslq %esi,%rsi */
0x48, 0xf7, 0xde,                         /*3f1: neg    %rsi */
0x4c, 0x89, 0xf7,                         /*3f4: mov    %r14,%rdi */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*3f7: nopw   0x0(%rax,%rax,1) */
0x48, 0x89, 0xea,                         /*400: mov    %rbp,%rdx */
0x48, 0x83, 0xc1, 0x10,                   /*403: add    $0x10,%rcx */
0x48, 0x8b, 0x2f,                         /*407: mov    (%rdi),%rbp */
0x48, 0x83, 0xc7, 0x08,                   /*40a: add    $0x8,%rdi */
0x48, 0x89, 0x2a,                         /*40e: mov    %rbp,(%rdx) */
0x48, 0xff, 0xc6,                         /*411: inc    %rsi */
0x48, 0x89, 0xcd,                         /*414: mov    %rcx,%rbp */
0x48, 0x89, 0xd1,                         /*417: mov    %rdx,%rcx */
0x75, 0xe4,                               /*41a: jne    400 <op_enter+0x400> */
0x85, 0xc0,                               /*41c: test   %eax,%eax */
0x0f, 0x84, 0xaf, 0x02, 0x00, 0x00,       /*41e: je     6d3 <op_enter+0x6d3> */
0x4d, 0x8b, 0x47, 0x18,                   /*424: mov    0x18(%r15),%r8 */
0xba, 0x00, 0x00, 0x00, 0x00,             /*428: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*42d: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*432: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*435: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*438: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*43d: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*440: and    $0x1f,%edi */
0x01, 0xf7,                               /*443: add    %esi,%edi */
0xc1, 0xea, 0x0c,                         /*445: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*448: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*44b: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x63, 0xd2,                         /*44f: movslq %edx,%rdx */
0x49, 0x8d, 0x14, 0xd0,                   /*452: lea    (%r8,%rdx,8),%rdx */
0x89, 0xde,                               /*456: mov    %ebx,%esi */
0x29, 0xc6,                               /*458: sub    %eax,%esi */
0x48, 0x63, 0xee,                         /*45a: movslq %esi,%rbp */
0x49, 0x8d, 0x3c, 0xee,                   /*45d: lea    (%r14,%rbp,8),%rdi */
0x48, 0x39, 0xfa,                         /*461: cmp    %rdi,%rdx */
0x0f, 0x86, 0x48, 0x02, 0x00, 0x00,       /*464: jbe    6b2 <op_enter+0x6b2> */
0x48, 0x63, 0xf0,                         /*46a: movslq %eax,%rsi */
0x48, 0x8d, 0x4c, 0x35, 0x00,             /*46d: lea    0x0(%rbp,%rsi,1),%rcx */
0x49, 0x8d, 0x0c, 0xce,                   /*472: lea    (%r14,%rcx,8),%rcx */
0x48, 0x39, 0xca,                         /*476: cmp    %rcx,%rdx */
0x0f, 0x83, 0x33, 0x02, 0x00, 0x00,       /*479: jae    6b2 <op_enter+0x6b2> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*47f: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*484: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*489: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*48c: and    $0x1f,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*48f: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*494: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*497: and    $0x1f,%edx */
0x01, 0xca,                               /*49a: add    %ecx,%edx */
0xc1, 0xe8, 0x0c,                         /*49c: shr    $0xc,%eax */
0x83, 0xe0, 0x01,                         /*49f: and    $0x1,%eax */
0x8d, 0x44, 0x10, 0x01,                   /*4a2: lea    0x1(%rax,%rdx,1),%eax */
0x49, 0x8d, 0x44, 0xc0, 0xf8,             /*4a6: lea    -0x8(%r8,%rax,8),%rax */
0x49, 0x8d, 0x4c, 0xee, 0xf8,             /*4ab: lea    -0x8(%r14,%rbp,8),%rcx */
0x48, 0x8b, 0x14, 0xf1,                   /*4b0: mov    (%rcx,%rsi,8),%rdx */
0x48, 0x89, 0x14, 0xf0,                   /*4b4: mov    %rdx,(%rax,%rsi,8) */
0x48, 0xff, 0xce,                         /*4b8: dec    %rsi */
0x75, 0xf3,                               /*4bb: jne    4b0 <op_enter+0x4b0> */
0xe9, 0x11, 0x02, 0x00, 0x00,             /*4bd: jmpq   6d3 <op_enter+0x6d3> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4c2: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4c7: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*4cc: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*4cf: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*4d2: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*4d5: and    $0x1f,%edx */
0x01, 0xf2,                               /*4d8: add    %esi,%edx */
0x4c, 0x39, 0xf1,                         /*4da: cmp    %r14,%rcx */
0x74, 0x3d,                               /*4dd: je     51c <op_enter+0x51c> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4df: mov    $0x0,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*4e4: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*4e9: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*4ec: and    $0x1f,%edi */
0xc1, 0xee, 0x12,                         /*4ef: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*4f2: and    $0x1f,%esi */
0x01, 0xfe,                               /*4f5: add    %edi,%esi */
0x74, 0x23,                               /*4f7: je     51c <op_enter+0x51c> */
0x48, 0xf7, 0xda,                         /*4f9: neg    %rdx */
0x4c, 0x89, 0xf6,                         /*4fc: mov    %r14,%rsi */
0x90,                                     /*4ff: nop */
0x48, 0x89, 0xcf,                         /*500: mov    %rcx,%rdi */
0x48, 0x83, 0xc0, 0x10,                   /*503: add    $0x10,%rax */
0x48, 0x8b, 0x0e,                         /*507: mov    (%rsi),%rcx */
0x48, 0x83, 0xc6, 0x08,                   /*50a: add    $0x8,%rsi */
0x48, 0x89, 0x0f,                         /*50e: mov    %rcx,(%rdi) */
0x48, 0xff, 0xc2,                         /*511: inc    %rdx */
0x48, 0x89, 0xc1,                         /*514: mov    %rax,%rcx */
0x48, 0x89, 0xf8,                         /*517: mov    %rdi,%rax */
0x75, 0xe4,                               /*51a: jne    500 <op_enter+0x500> */
0x4c, 0x89, 0x74, 0x24, 0x10,             /*51c: mov    %r14,0x10(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*521: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*526: mov    $0x0,%eax */
0x0f, 0xba, 0xe1, 0x0c,                   /*52b: bt     $0xc,%ecx */
0x72, 0x10,                               /*52f: jb     541 <op_enter+0x541> */
0xc1, 0xe8, 0x0d,                         /*531: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*534: and    $0x1f,%eax */
0xc1, 0xe9, 0x12,                         /*537: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*53a: and    $0x1f,%ecx */
0x01, 0xc1,                               /*53d: add    %eax,%ecx */
0xeb, 0x72,                               /*53f: jmp    5b3 <op_enter+0x5b3> */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*541: mov    $0x0,%ebp */
0xc1, 0xed, 0x0d,                         /*546: shr    $0xd,%ebp */
0x83, 0xe5, 0x1f,                         /*549: and    $0x1f,%ebp */
0x4c, 0x89, 0x64, 0x24, 0x08,             /*54c: mov    %r12,0x8(%rsp) */
0x41, 0xbc, 0x00, 0x00, 0x00, 0x00,       /*551: mov    $0x0,%r12d */
0x41, 0xc1, 0xec, 0x12,                   /*557: shr    $0x12,%r12d */
0x41, 0x83, 0xe4, 0x1f,                   /*55b: and    $0x1f,%r12d */
0x45, 0x89, 0xe6,                         /*55f: mov    %r12d,%r14d */
0x41, 0xf7, 0xde,                         /*562: neg    %r14d */
0x41, 0x29, 0xee,                         /*565: sub    %ebp,%r14d */
0xc1, 0xe8, 0x07,                         /*568: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*56b: and    $0x1f,%eax */
0x41, 0x29, 0xc6,                         /*56e: sub    %eax,%r14d */
0x42, 0x8d, 0x34, 0x33,                   /*571: lea    (%rbx,%r14,1),%esi */
0x4c, 0x89, 0x2c, 0x24,                   /*575: mov    %r13,(%rsp) */
0x4d, 0x8b, 0x6f, 0x18,                   /*579: mov    0x18(%r15),%r13 */
0x49, 0x8b, 0x7f, 0x50,                   /*57d: mov    0x50(%r15),%rdi */
0x49, 0x8d, 0x04, 0x2c,                   /*581: lea    (%r12,%rbp,1),%rax */
0x48, 0x8b, 0x4c, 0x24, 0x10,             /*585: mov    0x10(%rsp),%rcx */
0x48, 0x8d, 0x14, 0xc1,                   /*58a: lea    (%rcx,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*58e: callq  593 <op_enter+0x593> */
0x44, 0x89, 0xe1,                         /*593: mov    %r12d,%ecx */
0x01, 0xe9,                               /*596: add    %ebp,%ecx */
0x41, 0x8d, 0x54, 0x2c, 0x01,             /*598: lea    0x1(%r12,%rbp,1),%edx */
0x4c, 0x8b, 0x64, 0x24, 0x08,             /*59d: mov    0x8(%rsp),%r12 */
0x48, 0x63, 0xd2,                         /*5a2: movslq %edx,%rdx */
0x49, 0x89, 0x44, 0xd5, 0x00,             /*5a5: mov    %rax,0x0(%r13,%rdx,8) */
0x4c, 0x8b, 0x2c, 0x24,                   /*5aa: mov    (%rsp),%r13 */
0x44, 0x01, 0xf1,                         /*5ae: add    %r14d,%ecx */
0x01, 0xd9,                               /*5b1: add    %ebx,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5b3: mov    $0x0,%eax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5b8: mov    $0x0,%edx */
0xc1, 0xea, 0x07,                         /*5bd: shr    $0x7,%edx */
0x83, 0xe2, 0x1f,                         /*5c0: and    $0x1f,%edx */
0x29, 0xd3,                               /*5c3: sub    %edx,%ebx */
0xc1, 0xe8, 0x12,                         /*5c5: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*5c8: and    $0x1f,%eax */
0x39, 0xc3,                               /*5cb: cmp    %eax,%ebx */
0x48, 0x8b, 0x6c, 0x24, 0x10,             /*5cd: mov    0x10(%rsp),%rbp */
0x0f, 0x8e, 0xdb, 0x01, 0x00, 0x00,       /*5d2: jle    7b3 <op_enter+0x7b3> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5d8: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*5dd: shr    $0x7,%eax */
0xa8, 0x1f,                               /*5e0: test   $0x1f,%al */
0x0f, 0x84, 0xcb, 0x01, 0x00, 0x00,       /*5e2: je     7b3 <op_enter+0x7b3> */
0x49, 0x8b, 0x47, 0x18,                   /*5e8: mov    0x18(%r15),%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5ec: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5f1: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*5f6: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*5f9: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*5fc: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*601: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*604: and    $0x1f,%edi */
0x01, 0xf7,                               /*607: add    %esi,%edi */
0xc1, 0xea, 0x0c,                         /*609: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*60c: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*60f: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x63, 0xd2,                         /*613: movslq %edx,%rdx */
0x48, 0x8d, 0x14, 0xd0,                   /*616: lea    (%rax,%rdx,8),%rdx */
0x48, 0x63, 0xf1,                         /*61a: movslq %ecx,%rsi */
0x48, 0x8d, 0x4c, 0xf5, 0x00,             /*61d: lea    0x0(%rbp,%rsi,8),%rcx */
0x48, 0x39, 0xca,                         /*622: cmp    %rcx,%rdx */
0x0f, 0x86, 0x4a, 0x01, 0x00, 0x00,       /*625: jbe    775 <op_enter+0x775> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*62b: mov    $0x0,%edi */
0xc1, 0xef, 0x07,                         /*630: shr    $0x7,%edi */
0x83, 0xe7, 0x1f,                         /*633: and    $0x1f,%edi */
0x48, 0x01, 0xf7,                         /*636: add    %rsi,%rdi */
0x48, 0x8d, 0x7c, 0xfd, 0x00,             /*639: lea    0x0(%rbp,%rdi,8),%rdi */
0x48, 0x39, 0xfa,                         /*63e: cmp    %rdi,%rdx */
0x0f, 0x83, 0x2e, 0x01, 0x00, 0x00,       /*641: jae    775 <op_enter+0x775> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*647: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*64c: shr    $0x7,%ecx */
0xf6, 0xc1, 0x1f,                         /*64f: test   $0x1f,%cl */
0x0f, 0x84, 0x5b, 0x01, 0x00, 0x00,       /*652: je     7b3 <op_enter+0x7b3> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*658: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*65d: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*662: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*665: and    $0x1f,%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*668: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*66d: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*670: and    $0x1f,%edi */
0x01, 0xd7,                               /*673: add    %edx,%edi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*675: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*67a: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*67d: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*680: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x8d, 0x44, 0xd0, 0xf8,             /*684: lea    -0x8(%rax,%rdx,8),%rax */
0x48, 0x8d, 0x54, 0xf5, 0xf8,             /*689: lea    -0x8(%rbp,%rsi,8),%rdx */
0xc1, 0xe9, 0x07,                         /*68e: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*691: and    $0x1f,%ecx */
0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*694: data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x34, 0xca,                   /*6a0: mov    (%rdx,%rcx,8),%rsi */
0x48, 0x89, 0x34, 0xc8,                   /*6a4: mov    %rsi,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*6a8: dec    %rcx */
0x75, 0xf3,                               /*6ab: jne    6a0 <op_enter+0x6a0> */
0xe9, 0x01, 0x01, 0x00, 0x00,             /*6ad: jmpq   7b3 <op_enter+0x7b3> */
0x48, 0x39, 0xfa,                         /*6b2: cmp    %rdi,%rdx */
0x74, 0x1c,                               /*6b5: je     6d3 <op_enter+0x6d3> */
0x48, 0x98,                               /*6b7: cltq */
0x48, 0xf7, 0xd8,                         /*6b9: neg    %rax */
0x0f, 0x1f, 0x40, 0x00,                   /*6bc: nopl   0x0(%rax) */
0x48, 0x8b, 0x0f,                         /*6c0: mov    (%rdi),%rcx */
0x48, 0x83, 0xc7, 0x08,                   /*6c3: add    $0x8,%rdi */
0x48, 0x89, 0x0a,                         /*6c7: mov    %rcx,(%rdx) */
0x48, 0x83, 0xc2, 0x08,                   /*6ca: add    $0x8,%rdx */
0x48, 0xff, 0xc0,                         /*6ce: inc    %rax */
0x75, 0xed,                               /*6d1: jne    6c0 <op_enter+0x6c0> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*6d3: mov    $0x0,%eax */
0x0f, 0xba, 0xe0, 0x0c,                   /*6d8: bt     $0xc,%eax */
0x73, 0x31,                               /*6dc: jae    70f <op_enter+0x70f> */
0x49, 0x8b, 0x6f, 0x18,                   /*6de: mov    0x18(%r15),%rbp */
0x49, 0x8b, 0x7f, 0x50,                   /*6e2: mov    0x50(%r15),%rdi */
0x31, 0xf6,                               /*6e6: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6e8: callq  6ed <op_enter+0x6ed> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*6ed: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6f2: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*6f7: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*6fa: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*6fd: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*700: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*703: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*707: movslq %ecx,%rcx */
0x48, 0x89, 0x44, 0xcd, 0x00,             /*70a: mov    %rax,0x0(%rbp,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*70f: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*714: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*719: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*71c: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*71f: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*722: and    $0x1f,%eax */
0x01, 0xc8,                               /*725: add    %ecx,%eax */
0x39, 0xc3,                               /*727: cmp    %eax,%ebx */
0x49, 0x8b, 0x47, 0x08,                   /*729: mov    0x8(%r15),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*72d: mov    0xa8(%rax),%rcx */
0x0f, 0x8c, 0xef, 0x00, 0x00, 0x00,       /*734: jl     829 <op_enter+0x829> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*73a: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*73f: shr    $0xd,%edx */
0xf6, 0xc2, 0x1f,                         /*742: test   $0x1f,%dl */
0x0f, 0x84, 0xde, 0x00, 0x00, 0x00,       /*745: je     829 <op_enter+0x829> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*74b: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*750: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*755: shr    $0x7,%esi */
0x83, 0xe6, 0x1f,                         /*758: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*75b: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*75e: and    $0x1f,%edx */
0xf7, 0xda,                               /*761: neg    %edx */
0x29, 0xf2,                               /*763: sub    %esi,%edx */
0x8d, 0x54, 0x1a, 0x01,                   /*765: lea    0x1(%rdx,%rbx,1),%edx */
0x48, 0x63, 0xd2,                         /*769: movslq %edx,%rdx */
0x48, 0x8d, 0x0c, 0x91,                   /*76c: lea    (%rcx,%rdx,4),%rcx */
0xe9, 0xb8, 0x00, 0x00, 0x00,             /*770: jmpq   82d <op_enter+0x82d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*775: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*77a: shr    $0x7,%eax */
0x48, 0x39, 0xca,                         /*77d: cmp    %rcx,%rdx */
0x74, 0x31,                               /*780: je     7b3 <op_enter+0x7b3> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*782: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*787: shr    $0x7,%esi */
0x40, 0xf6, 0xc6, 0x1f,                   /*78a: test   $0x1f,%sil */
0x74, 0x23,                               /*78e: je     7b3 <op_enter+0x7b3> */
0x48, 0x83, 0xe0, 0x1f,                   /*790: and    $0x1f,%rax */
0x48, 0xf7, 0xd8,                         /*794: neg    %rax */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*797: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x31,                         /*7a0: mov    (%rcx),%rsi */
0x48, 0x83, 0xc1, 0x08,                   /*7a3: add    $0x8,%rcx */
0x48, 0x89, 0x32,                         /*7a7: mov    %rsi,(%rdx) */
0x48, 0x83, 0xc2, 0x08,                   /*7aa: add    $0x8,%rdx */
0x48, 0xff, 0xc0,                         /*7ae: inc    %rax */
0x75, 0xed,                               /*7b1: jne    7a0 <op_enter+0x7a0> */
0x49, 0x39, 0xed,                         /*7b3: cmp    %rbp,%r13 */
0x75, 0x43,                               /*7b6: jne    7fb <op_enter+0x7fb> */
0x49, 0x8b, 0x47, 0x18,                   /*7b8: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7bc: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7c1: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*7c6: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*7c9: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*7cc: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*7d1: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*7d4: and    $0x1f,%esi */
0x01, 0xd6,                               /*7d7: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7d9: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*7de: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*7e1: and    $0x1,%edx */
0x01, 0xf2,                               /*7e4: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*7e6: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*7e9: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*7ec: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*7f0: movslq %ecx,%rcx */
0x49, 0x8b, 0x14, 0x24,                   /*7f3: mov    (%r12),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*7f7: mov    %rdx,(%rax,%rcx,8) */
0x49, 0x8b, 0x47, 0x08,                   /*7fb: mov    0x8(%r15),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*7ff: mov    0xa8(%rax),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*806: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*80b: shr    $0xd,%edx */
0xf6, 0xc2, 0x1f,                         /*80e: test   $0x1f,%dl */
0x7e, 0x16,                               /*811: jle    829 <op_enter+0x829> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*813: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*818: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*81b: and    $0x1f,%edx */
0xff, 0xc2,                               /*81e: inc    %edx */
0x48, 0x63, 0xd2,                         /*820: movslq %edx,%rdx */
0x48, 0x8d, 0x0c, 0x91,                   /*823: lea    (%rcx,%rdx,4),%rcx */
0xeb, 0x04,                               /*827: jmp    82d <op_enter+0x82d> */
0x48, 0x83, 0xc1, 0x04,                   /*829: add    $0x4,%rcx */
0x0f, 0xb7, 0x31,                         /*82d: movzwl (%rcx),%esi */
0x48, 0x03, 0xb0, 0xc0, 0x00, 0x00, 0x00, /*830: add    0xc0(%rax),%rsi */
0x4c, 0x89, 0xff,                         /*837: mov    %r15,%rdi */
0x4c, 0x89, 0xff,                         /*83a: mov    %r15,%rdi */
0x48, 0x83, 0xc4, 0x18,                   /*83d: add    $0x18,%rsp */
0x5b,                                     /*841: pop    %rbx */
0x41, 0x5c,                               /*842: pop    %r12 */
0x41, 0x5d,                               /*844: pop    %r13 */
0x41, 0x5e,                               /*846: pop    %r14 */
0x41, 0x5f,                               /*848: pop    %r15 */
0x5d,                                     /*84a: pop    %rbp */
0xff, 0xe6,                               /*84b: jmpq   *%rsi */

};
static uint8_t op_enter__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x50, 0x72, 0x6f, 0x63, 0x00, 0x74, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x00, 0x00, 0x00, 0x00,
0x6f, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x20, 0x25, 0x70, 0x20, 0x28, 0x25, 0x64,
0x29, 0x0a, 0x00,                         

};

static void op_enter_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_enter_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_enter_set_args(op, GETARG_Ax(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_enter_method_m__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x55,                               /*4: push   %r13 */
0x41, 0x54,                               /*6: push   %r12 */
0x53,                                     /*8: push   %rbx */
0x49, 0x89, 0xfe,                         /*9: mov    %rdi,%r14 */
0x4d, 0x8b, 0x7e, 0x18,                   /*c: mov    0x18(%r14),%r15 */
0x49, 0x8b, 0x7e, 0x50,                   /*10: mov    0x50(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*14: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*18: mov    0x20(%rax),%rax */
0x48, 0x63, 0x58, 0x40,                   /*1c: movslq 0x40(%rax),%rbx */
0x48, 0x8d, 0x43, 0x01,                   /*20: lea    0x1(%rbx),%rax */
0x48, 0x85, 0xdb,                         /*24: test   %rbx,%rbx */
0x41, 0xbc, 0x02, 0x00, 0x00, 0x00,       /*27: mov    $0x2,%r12d */
0x4c, 0x0f, 0x49, 0xe0,                   /*2d: cmovns %rax,%r12 */
0x4b, 0x8b, 0x34, 0xe7,                   /*31: mov    (%r15,%r12,8),%rsi */
0x48, 0x85, 0xf6,                         /*35: test   %rsi,%rsi */
0x74, 0x3d,                               /*38: je     77 <op_enter_method_m+0x77> */
0x48, 0x83, 0xfe, 0x07,                   /*3a: cmp    $0x7,%rsi */
0x73, 0x13,                               /*3e: jae    53 <op_enter_method_m+0x53> */
0xb8, 0x55, 0x00, 0x00, 0x00,             /*40: mov    $0x55,%eax */
0x0f, 0xa3, 0xf0,                         /*45: bt     %esi,%eax */
0x73, 0x09,                               /*48: jae    53 <op_enter_method_m+0x53> */
0x8b, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00, /*4a: mov    0x0(,%rsi,4),%eax */
0xeb, 0x1c,                               /*51: jmp    6f <op_enter_method_m+0x6f> */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*53: mov    $0x3,%eax */
0x40, 0xf6, 0xc6, 0x01,                   /*58: test   $0x1,%sil */
0x75, 0x11,                               /*5c: jne    6f <op_enter_method_m+0x6f> */
0x40, 0x0f, 0xb6, 0xce,                   /*5e: movzbl %sil,%ecx */
0xb8, 0x04, 0x00, 0x00, 0x00,             /*62: mov    $0x4,%eax */
0x83, 0xf9, 0x0e,                         /*67: cmp    $0xe,%ecx */
0x74, 0x03,                               /*6a: je     6f <op_enter_method_m+0x6f> */
0x0f, 0xb6, 0x06,                         /*6c: movzbl (%rsi),%eax */
0x83, 0xf8, 0x0d,                         /*6f: cmp    $0xd,%eax */
0x0f, 0x95, 0xc0,                         /*72: setne  %al */
0xeb, 0x02,                               /*75: jmp    79 <op_enter_method_m+0x79> */
0x31, 0xc0,                               /*77: xor    %eax,%eax */
0x84, 0xc0,                               /*79: test   %al,%al */
0x74, 0x19,                               /*7b: je     96 <op_enter_method_m+0x96> */
0xba, 0x0d, 0x00, 0x00, 0x00,             /*7d: mov    $0xd,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*82: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*87: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8d: callq  92 <op_enter_method_m+0x92> */
0x4b, 0x89, 0x04, 0xe7,                   /*92: mov    %rax,(%r15,%r12,8) */
0x4d, 0x8d, 0x6f, 0x08,                   /*96: lea    0x8(%r15),%r13 */
0x85, 0xdb,                               /*9a: test   %ebx,%ebx */
0x78, 0x33,                               /*9c: js     d1 <op_enter_method_m+0xd1> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*9e: mov    $0x0,%eax */
0xc1, 0xe8, 0x12,                         /*a3: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*a6: and    $0x1f,%eax */
0x39, 0xc3,                               /*a9: cmp    %eax,%ebx */
0x4c, 0x89, 0xeb,                         /*ab: mov    %r13,%rbx */
0x7d, 0x36,                               /*ae: jge    e6 <op_enter_method_m+0xe6> */
0x49, 0x8b, 0x7e, 0x50,                   /*b0: mov    0x50(%r14),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*b4: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*b9: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*bc: and    $0x1f,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*bf: callq  c4 <op_enter_method_m+0xc4> */
0x4c, 0x89, 0xf7,                         /*c4: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c7: callq  cc <op_enter_method_m+0xcc> */
0xe9, 0x04, 0x01, 0x00, 0x00,             /*cc: jmpq   1d5 <op_enter_method_m+0x1d5> */
0x49, 0x8b, 0x46, 0x18,                   /*d1: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x7e, 0x50,                   /*d5: mov    0x50(%r14),%rdi */
0x48, 0x8b, 0x70, 0x08,                   /*d9: mov    0x8(%rax),%rsi */
0x48, 0x8b, 0x5e, 0x28,                   /*dd: mov    0x28(%rsi),%rbx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e1: callq  e6 <op_enter_method_m+0xe6> */
0x49, 0x8b, 0x46, 0x50,                   /*e6: mov    0x50(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*ea: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*ee: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f2: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*f7: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*fa: and    $0x1f,%ecx */
0x89, 0x48, 0x40,                         /*fd: mov    %ecx,0x40(%rax) */
0x49, 0x8b, 0x46, 0x18,                   /*100: mov    0x18(%r14),%rax */
0xff, 0xc1,                               /*104: inc    %ecx */
0x48, 0x63, 0xc9,                         /*106: movslq %ecx,%rcx */
0x4b, 0x8b, 0x14, 0xe7,                   /*109: mov    (%r15,%r12,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*10d: mov    %rdx,(%rax,%rcx,8) */
0x49, 0x39, 0xdd,                         /*111: cmp    %rbx,%r13 */
0x0f, 0x84, 0xa2, 0x00, 0x00, 0x00,       /*114: je     1bc <op_enter_method_m+0x1bc> */
0x49, 0x8b, 0x46, 0x18,                   /*11a: mov    0x18(%r14),%rax */
0x48, 0x8d, 0x48, 0x08,                   /*11e: lea    0x8(%rax),%rcx */
0x48, 0x39, 0xd9,                         /*122: cmp    %rbx,%rcx */
0x76, 0x49,                               /*125: jbe    170 <op_enter_method_m+0x170> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*127: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*12c: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*12f: and    $0x1f,%edx */
0x48, 0x8d, 0x14, 0xd3,                   /*132: lea    (%rbx,%rdx,8),%rdx */
0x48, 0x39, 0xd1,                         /*136: cmp    %rdx,%rcx */
0x73, 0x35,                               /*139: jae    170 <op_enter_method_m+0x170> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13b: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*140: shr    $0x12,%ecx */
0xf6, 0xc1, 0x1f,                         /*143: test   $0x1f,%cl */
0x74, 0x74,                               /*146: je     1bc <op_enter_method_m+0x1bc> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*148: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*14d: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*150: and    $0x1f,%ecx */
0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*153: data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x54, 0xcb, 0xf8,             /*160: mov    -0x8(%rbx,%rcx,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*165: mov    %rdx,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*169: dec    %rcx */
0x75, 0xf2,                               /*16c: jne    160 <op_enter_method_m+0x160> */
0xeb, 0x4c,                               /*16e: jmp    1bc <op_enter_method_m+0x1bc> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*170: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*175: shr    $0x12,%edx */
0x48, 0x39, 0xd9,                         /*178: cmp    %rbx,%rcx */
0x74, 0x3f,                               /*17b: je     1bc <op_enter_method_m+0x1bc> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*17d: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*182: shr    $0x12,%esi */
0x40, 0xf6, 0xc6, 0x1f,                   /*185: test   $0x1f,%sil */
0x74, 0x31,                               /*189: je     1bc <op_enter_method_m+0x1bc> */
0x48, 0x83, 0xe2, 0x1f,                   /*18b: and    $0x1f,%rdx */
0x48, 0xf7, 0xda,                         /*18f: neg    %rdx */
0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*192: data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xce,                         /*1a0: mov    %rcx,%rsi */
0x48, 0x83, 0xc0, 0x10,                   /*1a3: add    $0x10,%rax */
0x48, 0x8b, 0x0b,                         /*1a7: mov    (%rbx),%rcx */
0x48, 0x83, 0xc3, 0x08,                   /*1aa: add    $0x8,%rbx */
0x48, 0x89, 0x0e,                         /*1ae: mov    %rcx,(%rsi) */
0x48, 0xff, 0xc2,                         /*1b1: inc    %rdx */
0x48, 0x89, 0xc1,                         /*1b4: mov    %rax,%rcx */
0x48, 0x89, 0xf0,                         /*1b7: mov    %rsi,%rax */
0x75, 0xe4,                               /*1ba: jne    1a0 <op_enter_method_m+0x1a0> */
0x49, 0x8b, 0x46, 0x08,                   /*1bc: mov    0x8(%r14),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*1c0: mov    0xa8(%rax),%rcx */
0x0f, 0xb7, 0x71, 0x04,                   /*1c7: movzwl 0x4(%rcx),%esi */
0x48, 0x03, 0xb0, 0xc0, 0x00, 0x00, 0x00, /*1cb: add    0xc0(%rax),%rsi */
0x4c, 0x89, 0xf7,                         /*1d2: mov    %r14,%rdi */
0x4c, 0x89, 0xf7,                         /*1d5: mov    %r14,%rdi */
0x5b,                                     /*1d8: pop    %rbx */
0x41, 0x5c,                               /*1d9: pop    %r12 */
0x41, 0x5d,                               /*1db: pop    %r13 */
0x41, 0x5e,                               /*1dd: pop    %r14 */
0x41, 0x5f,                               /*1df: pop    %r15 */
0xff, 0xe6,                               /*1e1: jmpq   *%rsi */

};
static uint8_t op_enter_method_m__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x72, 0x6f, 0x63, 0x00, 0x74, 0x6f, 0x5f,
0x70, 0x72, 0x6f, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};

static void op_enter_method_m_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_enter_method_m_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_enter_method_m_set_args(op, GETARG_Ax(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_karg__text[] = {

};
static uint8_t op_karg__rodata[] = {

};

static void op_karg_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_karg_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_karg_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_kdict__text[] = {

};
static uint8_t op_kdict__rodata[] = {

};

static void op_kdict_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_kdict_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_kdict_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_return__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x53,                                     /*4: push   %rbx */
0x48, 0x83, 0xe4, 0xf0,                   /*5: and    $0xfffffffffffffff0,%rsp */
0x48, 0x83, 0xec, 0x10,                   /*9: sub    $0x10,%rsp */
0x48, 0x89, 0xfb,                         /*d: mov    %rdi,%rbx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%esi */
0x31, 0xd2,                               /*15: xor    %edx,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*17: callq  1c <op_return+0x1c> */
0x48, 0x89, 0xdf,                         /*1c: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf8,                   /*1f: lea    -0x8(%rbp),%rsp */
0x5b,                                     /*23: pop    %rbx */
0x5d,                                     /*24: pop    %rbp */
0xc3,                                     /*25: retq */

};
static uint8_t op_return__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_return_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_return_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_return_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_break__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*9: mov    $0x0,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e: callq  13 <op_break+0x13> */
0x48, 0x89, 0xdf,                         /*13: mov    %rbx,%rdi */
0x5b,                                     /*16: pop    %rbx */
0xc3,                                     /*17: retq */

};
static uint8_t op_break__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_break_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_break_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_break_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_tailcall__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*a: sub    $0x18,%rsp */
0x49, 0x89, 0xff,                         /*e: mov    %rdi,%r15 */
0x4d, 0x8b, 0x77, 0x50,                   /*11: mov    0x50(%r15),%r14 */
0x49, 0x8b, 0x47, 0x18,                   /*15: mov    0x18(%r15),%rax */
0x49, 0x8b, 0x4f, 0x28,                   /*19: mov    0x28(%r15),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%edx */
0x44, 0x8b, 0x24, 0x91,                   /*22: mov    (%rcx,%rdx,4),%r12d */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*26: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*2b: movslq %ecx,%rcx */
0x48, 0x8b, 0x1c, 0xc8,                   /*2e: mov    (%rax,%rcx,8),%rbx */
0x48, 0x83, 0xfb, 0x06,                   /*32: cmp    $0x6,%rbx */
0x77, 0x07,                               /*36: ja     3f <op_tailcall+0x3f> */
0xff, 0x24, 0xdd, 0x00, 0x00, 0x00, 0x00, /*38: jmpq   *0x0(,%rbx,8) */
0xf6, 0xc3, 0x01,                         /*3f: test   $0x1,%bl */
0x75, 0x2c,                               /*42: jne    70 <op_tailcall+0x70> */
0x0f, 0xb6, 0xc3,                         /*44: movzbl %bl,%eax */
0x83, 0xf8, 0x0e,                         /*47: cmp    $0xe,%eax */
0x74, 0x2d,                               /*4a: je     79 <op_tailcall+0x79> */
0x0f, 0xb6, 0x0b,                         /*4c: movzbl (%rbx),%ecx */
0x31, 0xc0,                               /*4f: xor    %eax,%eax */
0x83, 0xf9, 0x13,                         /*51: cmp    $0x13,%ecx */
0x7f, 0x3e,                               /*54: jg     94 <op_tailcall+0x94> */
0x83, 0xf9, 0x07,                         /*56: cmp    $0x7,%ecx */
0x77, 0x3e,                               /*59: ja     99 <op_tailcall+0x99> */
0xff, 0x24, 0xcd, 0x00, 0x00, 0x00, 0x00, /*5b: jmpq   *0x0(,%rcx,8) */
0x83, 0xfb, 0x02,                         /*62: cmp    $0x2,%ebx */
0x72, 0x24,                               /*65: jb     8b <op_tailcall+0x8b> */
0x49, 0x8b, 0x86, 0x90, 0x00, 0x00, 0x00, /*67: mov    0x90(%r14),%rax */
0xeb, 0x2d,                               /*6e: jmp    9d <op_tailcall+0x9d> */
0x49, 0x8b, 0x86, 0x80, 0x00, 0x00, 0x00, /*70: mov    0x80(%r14),%rax */
0xeb, 0x24,                               /*77: jmp    9d <op_tailcall+0x9d> */
0x49, 0x8b, 0x86, 0xa0, 0x00, 0x00, 0x00, /*79: mov    0xa0(%r14),%rax */
0xeb, 0x1b,                               /*80: jmp    9d <op_tailcall+0x9d> */
0x49, 0x8b, 0x86, 0x88, 0x00, 0x00, 0x00, /*82: mov    0x88(%r14),%rax */
0xeb, 0x12,                               /*89: jmp    9d <op_tailcall+0x9d> */
0x49, 0x8b, 0x86, 0x98, 0x00, 0x00, 0x00, /*8b: mov    0x98(%r14),%rax */
0xeb, 0x09,                               /*92: jmp    9d <op_tailcall+0x9d> */
0x83, 0xf9, 0x14,                         /*94: cmp    $0x14,%ecx */
0x74, 0x04,                               /*97: je     9d <op_tailcall+0x9d> */
0x48, 0x8b, 0x43, 0x08,                   /*99: mov    0x8(%rbx),%rax */
0x48, 0x89, 0x44, 0x24, 0x10,             /*9d: mov    %rax,0x10(%rsp) */
0x49, 0x8b, 0x0f,                         /*a2: mov    (%r15),%rcx */
0x48, 0x39, 0x41, 0x38,                   /*a5: cmp    %rax,0x38(%rcx) */
0x75, 0x08,                               /*a9: jne    b3 <op_tailcall+0xb3> */
0x31, 0xd2,                               /*ab: xor    %edx,%edx */
0x44, 0x39, 0x61, 0x30,                   /*ad: cmp    %r12d,0x30(%rcx) */
0x74, 0x33,                               /*b1: je     e6 <op_tailcall+0xe6> */
0x48, 0x39, 0x41, 0x48,                   /*b3: cmp    %rax,0x48(%rcx) */
0x75, 0x0b,                               /*b7: jne    c4 <op_tailcall+0xc4> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*b9: mov    $0x1,%edx */
0x44, 0x39, 0x61, 0x40,                   /*be: cmp    %r12d,0x40(%rcx) */
0x74, 0x22,                               /*c2: je     e6 <op_tailcall+0xe6> */
0x48, 0x39, 0x41, 0x58,                   /*c4: cmp    %rax,0x58(%rcx) */
0x75, 0x0b,                               /*c8: jne    d5 <op_tailcall+0xd5> */
0xba, 0x02, 0x00, 0x00, 0x00,             /*ca: mov    $0x2,%edx */
0x44, 0x39, 0x61, 0x50,                   /*cf: cmp    %r12d,0x50(%rcx) */
0x74, 0x11,                               /*d3: je     e6 <op_tailcall+0xe6> */
0x48, 0x39, 0x41, 0x68,                   /*d5: cmp    %rax,0x68(%rcx) */
0x75, 0x15,                               /*d9: jne    f0 <op_tailcall+0xf0> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*db: mov    $0x3,%edx */
0x44, 0x39, 0x61, 0x60,                   /*e0: cmp    %r12d,0x60(%rcx) */
0x75, 0x0a,                               /*e4: jne    f0 <op_tailcall+0xf0> */
0x4c, 0x8b, 0xac, 0xd1, 0x90, 0x00, 0x00, 0x00,/*e6: mov    0x90(%rcx,%rdx,8),%r13 */
0xeb, 0x13,                               /*ee: jmp    103 <op_tailcall+0x103> */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*f0: lea    0x10(%rsp),%rsi */
0x4c, 0x89, 0xf7,                         /*f5: mov    %r14,%rdi */
0x44, 0x89, 0xe2,                         /*f8: mov    %r12d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*fb: callq  100 <op_tailcall+0x100> */
0x49, 0x89, 0xc5,                         /*100: mov    %rax,%r13 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*103: mov    $0x0,%ecx */
0x4d, 0x85, 0xed,                         /*108: test   %r13,%r13 */
0x74, 0x0a,                               /*10b: je     117 <op_tailcall+0x117> */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*10d: mov    %rbx,0x8(%rsp) */
0xe9, 0x30, 0x01, 0x00, 0x00,             /*112: jmpq   247 <op_tailcall+0x247> */
0x49, 0xc1, 0xe4, 0x20,                   /*117: shl    $0x20,%r12 */
0x4c, 0x89, 0xe5,                         /*11b: mov    %r12,%rbp */
0x48, 0x83, 0xcd, 0x0e,                   /*11e: or     $0xe,%rbp */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*122: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*127: mov    $0xe,%edx */
0x4c, 0x89, 0xf7,                         /*12c: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*12f: callq  134 <op_tailcall+0x134> */
0x41, 0x89, 0xc4,                         /*134: mov    %eax,%r12d */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*137: lea    0x10(%rsp),%rsi */
0x4c, 0x89, 0xf7,                         /*13c: mov    %r14,%rdi */
0x44, 0x89, 0xe2,                         /*13f: mov    %r12d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*142: callq  147 <op_tailcall+0x147> */
0x49, 0x89, 0xc5,                         /*147: mov    %rax,%r13 */
0x49, 0x8b, 0x47, 0x18,                   /*14a: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*14e: mov    $0x0,%ecx */
0x83, 0xf9, 0x7f,                         /*153: cmp    $0x7f,%ecx */
0x75, 0x28,                               /*156: jne    180 <op_tailcall+0x180> */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*158: mov    %rbx,0x8(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15d: mov    $0x0,%ecx */
0xff, 0xc1,                               /*162: inc    %ecx */
0x48, 0x63, 0xc9,                         /*164: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*167: mov    (%rax,%rcx,8),%rsi */
0x4c, 0x89, 0xf7,                         /*16b: mov    %r14,%rdi */
0x48, 0x89, 0xea,                         /*16e: mov    %rbp,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*171: callq  176 <op_tailcall+0x176> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*176: mov    $0x0,%ecx */
0xe9, 0xc7, 0x00, 0x00, 0x00,             /*17b: jmpq   247 <op_tailcall+0x247> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*180: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*185: movslq %ecx,%rcx */
0x48, 0x8d, 0x51, 0x01,                   /*188: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*18c: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*190: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*193: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*196: mov    $0x0,%edi */
0xff, 0xc7,                               /*19b: inc    %edi */
0x48, 0x63, 0xff,                         /*19d: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*1a0: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*1a5: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*1a8: setge  %cl */
0x08, 0xd1,                               /*1ab: or     %dl,%cl */
0x74, 0x43,                               /*1ad: je     1f2 <op_tailcall+0x1f2> */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*1af: mov    %rbx,0x8(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b4: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*1b9: cmp    $0xffffffff,%ecx */
0x74, 0x70,                               /*1bc: je     22e <op_tailcall+0x22e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1be: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1c3: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x10,             /*1c6: lea    0x10(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1cb: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1d0: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1d2: movslq %ecx,%rcx */
0x48, 0xf7, 0xd9,                         /*1d5: neg    %rcx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1d8: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x50, 0xf8,                   /*1e0: mov    -0x8(%rax),%rdx */
0x48, 0x89, 0x10,                         /*1e4: mov    %rdx,(%rax) */
0x48, 0x8d, 0x40, 0x08,                   /*1e7: lea    0x8(%rax),%rax */
0x48, 0xff, 0xc1,                         /*1eb: inc    %rcx */
0x75, 0xf0,                               /*1ee: jne    1e0 <op_tailcall+0x1e0> */
0xeb, 0x3c,                               /*1f0: jmp    22e <op_tailcall+0x22e> */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*1f2: mov    %rbx,0x8(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1f7: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*1fc: cmp    $0xffffffff,%ecx */
0x74, 0x2d,                               /*1ff: je     22e <op_tailcall+0x22e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*201: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*206: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x08,             /*209: lea    0x8(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*20e: mov    $0x0,%ecx */
0xff, 0xc1,                               /*213: inc    %ecx */
0x48, 0x63, 0xc9,                         /*215: movslq %ecx,%rcx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*218: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x54, 0xc8, 0xf8,             /*220: mov    -0x8(%rax,%rcx,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*225: mov    %rdx,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*229: dec    %rcx */
0x75, 0xf2,                               /*22c: jne    220 <op_tailcall+0x220> */
0x49, 0x8b, 0x47, 0x18,                   /*22e: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*232: mov    $0x0,%ecx */
0xff, 0xc1,                               /*237: inc    %ecx */
0x48, 0x63, 0xc9,                         /*239: movslq %ecx,%rcx */
0x48, 0x89, 0x2c, 0xc8,                   /*23c: mov    %rbp,(%rax,%rcx,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*240: mov    $0x0,%ecx */
0xff, 0xc1,                               /*245: inc    %ecx */
0x49, 0x8b, 0x46, 0x18,                   /*247: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*24b: mov    0x20(%rax),%rax */
0x44, 0x89, 0x20,                         /*24f: mov    %r12d,(%rax) */
0x48, 0x8b, 0x54, 0x24, 0x10,             /*252: mov    0x10(%rsp),%rdx */
0x48, 0x89, 0x50, 0x48,                   /*257: mov    %rdx,0x48(%rax) */
0x83, 0xf9, 0x7f,                         /*25b: cmp    $0x7f,%ecx */
0xbe, 0xff, 0xff, 0xff, 0xff,             /*25e: mov    $0xffffffff,%esi */
0x0f, 0x45, 0xf1,                         /*263: cmovne %ecx,%esi */
0x89, 0x70, 0x40,                         /*266: mov    %esi,0x40(%rax) */
0x49, 0x8b, 0x4e, 0x18,                   /*269: mov    0x18(%r14),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*26d: mov    0x8(%rcx),%rcx */
0x49, 0x8b, 0x7f, 0x18,                   /*271: mov    0x18(%r15),%rdi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*275: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*27a: movslq %edx,%rdx */
0x48, 0x8d, 0x14, 0xd7,                   /*27d: lea    (%rdi,%rdx,8),%rdx */
0xff, 0xc6,                               /*281: inc    %esi */
0x48, 0x39, 0xd1,                         /*283: cmp    %rdx,%rcx */
0x76, 0x38,                               /*286: jbe    2c0 <op_tailcall+0x2c0> */
0x48, 0x63, 0xee,                         /*288: movslq %esi,%rbp */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*28b: mov    $0x0,%ebx */
0x48, 0x63, 0xdb,                         /*290: movslq %ebx,%rbx */
0x48, 0x01, 0xeb,                         /*293: add    %rbp,%rbx */
0x48, 0x8d, 0x1c, 0xdf,                   /*296: lea    (%rdi,%rbx,8),%rbx */
0x48, 0x39, 0xd9,                         /*29a: cmp    %rbx,%rcx */
0x73, 0x21,                               /*29d: jae    2c0 <op_tailcall+0x2c0> */
0x85, 0xf6,                               /*29f: test   %esi,%esi */
0x74, 0x40,                               /*2a1: je     2e3 <op_tailcall+0x2e3> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2a3: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*2a8: movslq %edx,%rdx */
0x48, 0x8d, 0x54, 0xd7, 0xf8,             /*2ab: lea    -0x8(%rdi,%rdx,8),%rdx */
0x48, 0x8b, 0x34, 0xea,                   /*2b0: mov    (%rdx,%rbp,8),%rsi */
0x48, 0x89, 0x74, 0xe9, 0xf8,             /*2b4: mov    %rsi,-0x8(%rcx,%rbp,8) */
0x48, 0xff, 0xcd,                         /*2b9: dec    %rbp */
0x75, 0xf2,                               /*2bc: jne    2b0 <op_tailcall+0x2b0> */
0xeb, 0x23,                               /*2be: jmp    2e3 <op_tailcall+0x2e3> */
0x48, 0x39, 0xd1,                         /*2c0: cmp    %rdx,%rcx */
0x74, 0x1e,                               /*2c3: je     2e3 <op_tailcall+0x2e3> */
0x85, 0xf6,                               /*2c5: test   %esi,%esi */
0x74, 0x1a,                               /*2c7: je     2e3 <op_tailcall+0x2e3> */
0x48, 0x63, 0xf6,                         /*2c9: movslq %esi,%rsi */
0x48, 0xf7, 0xde,                         /*2cc: neg    %rsi */
0x90,                                     /*2cf: nop */
0x48, 0x8b, 0x3a,                         /*2d0: mov    (%rdx),%rdi */
0x48, 0x83, 0xc2, 0x08,                   /*2d3: add    $0x8,%rdx */
0x48, 0x89, 0x39,                         /*2d7: mov    %rdi,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*2da: add    $0x8,%rcx */
0x48, 0xff, 0xc6,                         /*2de: inc    %rsi */
0x75, 0xed,                               /*2e1: jne    2d0 <op_tailcall+0x2d0> */
0x41, 0xf6, 0x45, 0x02, 0x04,             /*2e3: testb  $0x4,0x2(%r13) */
0x74, 0x34,                               /*2e8: je     31e <op_tailcall+0x31e> */
0x49, 0x8b, 0x46, 0x18,                   /*2ea: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*2ee: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xf7,                         /*2f2: mov    %r14,%rdi */
0x48, 0x8b, 0x74, 0x24, 0x08,             /*2f5: mov    0x8(%rsp),%rsi */
0x41, 0xff, 0x55, 0x18,                   /*2fa: callq  *0x18(%r13) */
0x48, 0x89, 0x03,                         /*2fe: mov    %rax,(%rbx) */
0x41, 0x8b, 0x77, 0x48,                   /*301: mov    0x48(%r15),%esi */
0x4c, 0x89, 0xf7,                         /*305: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*308: callq  30d <op_tailcall+0x30d> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*30d: mov    $0x0,%esi */
0x31, 0xd2,                               /*312: xor    %edx,%edx */
0x4c, 0x89, 0xff,                         /*314: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*317: callq  31c <op_tailcall+0x31c> */
0xeb, 0x67,                               /*31c: jmp    385 <op_tailcall+0x385> */
0x49, 0x8b, 0x4d, 0x18,                   /*31e: mov    0x18(%r13),%rcx */
0x49, 0x89, 0x4f, 0x08,                   /*322: mov    %rcx,0x8(%r15) */
0x48, 0x8b, 0x51, 0x10,                   /*326: mov    0x10(%rcx),%rdx */
0x49, 0x89, 0x57, 0x20,                   /*32a: mov    %rdx,0x20(%r15) */
0x48, 0x8b, 0x51, 0x18,                   /*32e: mov    0x18(%rcx),%rdx */
0x49, 0x89, 0x57, 0x28,                   /*332: mov    %rdx,0x28(%r15) */
0x8b, 0x50, 0x40,                         /*336: mov    0x40(%rax),%edx */
0x0f, 0xb7, 0x71, 0x02,                   /*339: movzwl 0x2(%rcx),%esi */
0x85, 0xd2,                               /*33d: test   %edx,%edx */
0x78, 0x05,                               /*33f: js     346 <op_tailcall+0x346> */
0x83, 0xc2, 0x02,                         /*341: add    $0x2,%edx */
0xeb, 0x10,                               /*344: jmp    356 <op_tailcall+0x356> */
0x83, 0xfe, 0x03,                         /*346: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*349: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*34e: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*351: mov    $0x3,%edx */
0x4c, 0x89, 0xf7,                         /*356: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*359: callq  35e <op_tailcall+0x35e> */
0x49, 0x8b, 0x46, 0x18,                   /*35e: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*362: mov    0x8(%rax),%rax */
0x49, 0x89, 0x47, 0x18,                   /*366: mov    %rax,0x18(%r15) */
0x49, 0x8b, 0x47, 0x08,                   /*36a: mov    0x8(%r15),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*36e: mov    0x8(%rax),%rax */
0x49, 0x89, 0x47, 0x10,                   /*372: mov    %rax,0x10(%r15) */
0x49, 0x8b, 0x7f, 0x50,                   /*376: mov    0x50(%r15),%rdi */
0x4c, 0x89, 0xee,                         /*37a: mov    %r13,%rsi */
0x4c, 0x89, 0xfa,                         /*37d: mov    %r15,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*380: callq  385 <op_tailcall+0x385> */
0x4c, 0x89, 0xff,                         /*385: mov    %r15,%rdi */
0x48, 0x83, 0xc4, 0x18,                   /*388: add    $0x18,%rsp */
0x5b,                                     /*38c: pop    %rbx */
0x41, 0x5c,                               /*38d: pop    %r12 */
0x41, 0x5d,                               /*38f: pop    %r13 */
0x41, 0x5e,                               /*391: pop    %r14 */
0x41, 0x5f,                               /*393: pop    %r15 */
0x5d,                                     /*395: pop    %rbp */
0xeb, 0x12,                               /*396: jmp    3aa <_str_const_method_missing23+0x31a> */
0x49, 0x8b, 0x46, 0x78,                   /*398: mov    0x78(%r14),%rax */
0xe9, 0xfc, 0xfc, 0xff, 0xff,             /*39c: jmpq   9d <op_tailcall+0x9d> */
0x49, 0x8b, 0x46, 0x40,                   /*3a1: mov    0x40(%r14),%rax */
0xe9, 0xf3, 0xfc, 0xff, 0xff,             /*3a5: jmpq   9d <op_tailcall+0x9d> */

};
static uint8_t op_tailcall__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x00,

};

static void op_tailcall_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_tailcall_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_tailcall_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_blkpush__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x7e, 0x50,                   /*6: mov    0x50(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%eax */
0x89, 0x44, 0x24, 0x04,                   /*f: mov    %eax,0x4(%rsp) */
0x44, 0x8b, 0x4c, 0x24, 0x04,             /*13: mov    0x4(%rsp),%r9d */
0x8b, 0x44, 0x24, 0x04,                   /*18: mov    0x4(%rsp),%eax */
0x44, 0x8b, 0x44, 0x24, 0x04,             /*1c: mov    0x4(%rsp),%r8d */
0x8b, 0x54, 0x24, 0x04,                   /*21: mov    0x4(%rsp),%edx */
0x83, 0xe2, 0x0f,                         /*25: and    $0xf,%edx */
0x74, 0x51,                               /*28: je     7b <op_blkpush+0x7b> */
0x49, 0x8b, 0x4e, 0x50,                   /*2a: mov    0x50(%r14),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*2e: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*32: mov    0x20(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*36: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x71, 0x28,                   /*3a: mov    0x28(%rcx),%rsi */
0x48, 0x85, 0xf6,                         /*3e: test   %rsi,%rsi */
0x0f, 0x94, 0xc3,                         /*41: sete   %bl */
0x83, 0xfa, 0x01,                         /*44: cmp    $0x1,%edx */
0x74, 0x1a,                               /*47: je     63 <op_blkpush+0x63> */
0xb9, 0x01, 0x00, 0x00, 0x00,             /*49: mov    $0x1,%ecx */
0x29, 0xd1,                               /*4e: sub    %edx,%ecx */
0xf6, 0xc3, 0x01,                         /*50: test   $0x1,%bl */
0x75, 0x12,                               /*53: jne    67 <op_blkpush+0x67> */
0x48, 0x8b, 0x76, 0x08,                   /*55: mov    0x8(%rsi),%rsi */
0x48, 0x85, 0xf6,                         /*59: test   %rsi,%rsi */
0x0f, 0x94, 0xc3,                         /*5c: sete   %bl */
0xff, 0xc1,                               /*5f: inc    %ecx */
0x75, 0xed,                               /*61: jne    50 <op_blkpush+0x50> */
0x84, 0xdb,                               /*63: test   %bl,%bl */
0x74, 0x1d,                               /*65: je     84 <op_blkpush+0x84> */
0xbe, 0x02, 0x00, 0x00, 0x00,             /*67: mov    $0x2,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6c: callq  71 <op_blkpush+0x71> */
0x4c, 0x89, 0xf7,                         /*71: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*74: callq  79 <op_blkpush+0x79> */
0xeb, 0x47,                               /*79: jmp    c2 <op_blkpush+0xc2> */
0x49, 0x8d, 0x4e, 0x18,                   /*7b: lea    0x18(%r14),%rcx */
0x48, 0x89, 0xce,                         /*7f: mov    %rcx,%rsi */
0xeb, 0x08,                               /*82: jmp    8c <op_blkpush+0x8c> */
0x48, 0x83, 0xc6, 0x18,                   /*84: add    $0x18,%rsi */
0x49, 0x8d, 0x4e, 0x18,                   /*88: lea    0x18(%r14),%rcx */
0x41, 0xc1, 0xe9, 0x0a,                   /*8c: shr    $0xa,%r9d */
0x41, 0x83, 0xe1, 0x3f,                   /*90: and    $0x3f,%r9d */
0xc1, 0xe8, 0x09,                         /*94: shr    $0x9,%eax */
0x83, 0xe0, 0x01,                         /*97: and    $0x1,%eax */
0x41, 0xc1, 0xe8, 0x04,                   /*9a: shr    $0x4,%r8d */
0x41, 0x83, 0xe0, 0x1f,                   /*9e: and    $0x1f,%r8d */
0x48, 0x8b, 0x16,                         /*a2: mov    (%rsi),%rdx */
0x48, 0x8b, 0x09,                         /*a5: mov    (%rcx),%rcx */
0x44, 0x01, 0xc8,                         /*a8: add    %r9d,%eax */
0x41, 0x8d, 0x44, 0x00, 0x01,             /*ab: lea    0x1(%r8,%rax,1),%eax */
0x48, 0x98,                               /*b0: cltq */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*b2: mov    $0x0,%esi */
0x48, 0x63, 0xf6,                         /*b7: movslq %esi,%rsi */
0x48, 0x8b, 0x04, 0xc2,                   /*ba: mov    (%rdx,%rax,8),%rax */
0x48, 0x89, 0x04, 0xf1,                   /*be: mov    %rax,(%rcx,%rsi,8) */
0x4c, 0x89, 0xf7,                         /*c2: mov    %r14,%rdi */
0x5b,                                     /*c5: pop    %rbx */
0x41, 0x5e,                               /*c6: pop    %r14 */

};
static uint8_t op_blkpush__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_blkpush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_blkpush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_blkpush_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_add__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0x4c, 0x8b, 0x7b, 0x18,                   /*8: mov    0x18(%rbx),%r15 */
0x4c, 0x8b, 0x73, 0x50,                   /*c: mov    0x50(%rbx),%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%eax */
0x48, 0x98,                               /*15: cltq */
0x49, 0x8b, 0x34, 0xc7,                   /*17: mov    (%r15,%rax,8),%rsi */
0x48, 0x83, 0xfe, 0x07,                   /*1b: cmp    $0x7,%rsi */
0x73, 0x13,                               /*1f: jae    34 <op_add+0x34> */
0xb8, 0x55, 0x00, 0x00, 0x00,             /*21: mov    $0x55,%eax */
0x0f, 0xa3, 0xf0,                         /*26: bt     %esi,%eax */
0x73, 0x09,                               /*29: jae    34 <op_add+0x34> */
0x8b, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00, /*2b: mov    0x0(,%rsi,4),%eax */
0xeb, 0x1c,                               /*32: jmp    50 <op_add+0x50> */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*34: mov    $0x3,%eax */
0x40, 0xf6, 0xc6, 0x01,                   /*39: test   $0x1,%sil */
0x75, 0x11,                               /*3d: jne    50 <op_add+0x50> */
0x40, 0x0f, 0xb6, 0xce,                   /*3f: movzbl %sil,%ecx */
0xb8, 0x04, 0x00, 0x00, 0x00,             /*43: mov    $0x4,%eax */
0x83, 0xf9, 0x0e,                         /*48: cmp    $0xe,%ecx */
0x74, 0x03,                               /*4b: je     50 <op_add+0x50> */
0x0f, 0xb6, 0x06,                         /*4d: movzbl (%rsi),%eax */
0xc1, 0xe0, 0x08,                         /*50: shl    $0x8,%eax */
0x25, 0x00, 0xff, 0xff, 0x00,             /*53: and    $0xffff00,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*58: mov    $0x0,%ecx */
0xff, 0xc1,                               /*5d: inc    %ecx */
0x48, 0x63, 0xc9,                         /*5f: movslq %ecx,%rcx */
0x49, 0x8b, 0x14, 0xcf,                   /*62: mov    (%r15,%rcx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*66: cmp    $0x7,%rdx */
0x73, 0x13,                               /*6a: jae    7f <op_add+0x7f> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*6c: mov    $0x55,%ecx */
0x0f, 0xa3, 0xd1,                         /*71: bt     %edx,%ecx */
0x73, 0x09,                               /*74: jae    7f <op_add+0x7f> */
0x8b, 0x0c, 0x95, 0x00, 0x00, 0x00, 0x00, /*76: mov    0x0(,%rdx,4),%ecx */
0xeb, 0x1a,                               /*7d: jmp    99 <op_add+0x99> */
0xb9, 0x03, 0x00, 0x00, 0x00,             /*7f: mov    $0x3,%ecx */
0xf6, 0xc2, 0x01,                         /*84: test   $0x1,%dl */
0x75, 0x10,                               /*87: jne    99 <op_add+0x99> */
0x0f, 0xb6, 0xfa,                         /*89: movzbl %dl,%edi */
0xb9, 0x04, 0x00, 0x00, 0x00,             /*8c: mov    $0x4,%ecx */
0x83, 0xff, 0x0e,                         /*91: cmp    $0xe,%edi */
0x74, 0x03,                               /*94: je     99 <op_add+0x99> */
0x0f, 0xb6, 0x0a,                         /*96: movzbl (%rdx),%ecx */
0x0f, 0xb6, 0xc9,                         /*99: movzbl %cl,%ecx */
0x09, 0xc1,                               /*9c: or     %eax,%ecx */
0x81, 0xf9, 0x0f, 0x10, 0x00, 0x00,       /*9e: cmp    $0x100f,%ecx */
0x7f, 0x46,                               /*a4: jg     ec <op_add+0xec> */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*a6: cmp    $0x602,%ecx */
0x7f, 0x50,                               /*ac: jg     fe <op_add+0xfe> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*ae: cmp    $0x303,%ecx */
0x75, 0x5d,                               /*b4: jne    113 <op_add+0x113> */
0xd1, 0xfe,                               /*b6: sar    %esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*b8: mov    $0x0,%eax */
0x48, 0x98,                               /*bd: cltq */
0x41, 0x8b, 0x44, 0xc7, 0x08,             /*bf: mov    0x8(%r15,%rax,8),%eax */
0xd1, 0xf8,                               /*c4: sar    %eax */
0x01, 0xf0,                               /*c6: add    %esi,%eax */
0x89, 0xc1,                               /*c8: mov    %eax,%ecx */
0x81, 0xc1, 0x00, 0x00, 0x00, 0x40,       /*ca: add    $0x40000000,%ecx */
0x78, 0x74,                               /*d0: js     146 <op_add+0x146> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*d2: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*d7: movslq %ecx,%rcx */
0x49, 0xc7, 0x04, 0xcf, 0x00, 0x00, 0x00, 0x00,/*da: movq   $0x0,(%r15,%rcx,8) */
0x8d, 0x44, 0x00, 0x01,                   /*e2: lea    0x1(%rax,%rax,1),%eax */
0x41, 0x89, 0x04, 0xcf,                   /*e6: mov    %eax,(%r15,%rcx,8) */
0xeb, 0x72,                               /*ea: jmp    15e <op_add+0x15e> */
0x81, 0xf9, 0x10, 0x10, 0x00, 0x00,       /*ec: cmp    $0x1010,%ecx */
0x75, 0x48,                               /*f2: jne    13c <op_add+0x13c> */
0x4c, 0x89, 0xf7,                         /*f4: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*f7: callq  fc <op_add+0xfc> */
0xeb, 0x54,                               /*fc: jmp    152 <op_add+0x152> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*fe: cmp    $0x603,%ecx */
0x75, 0x22,                               /*104: jne    128 <op_add+0x128> */
0xd1, 0xfa,                               /*106: sar    %edx */
0xf2, 0x0f, 0x2a, 0xc2,                   /*108: cvtsi2sd %edx,%xmm0 */
0xf2, 0x0f, 0x58, 0x46, 0x18,             /*10c: addsd  0x18(%rsi),%xmm0 */
0xeb, 0x37,                               /*111: jmp    14a <op_add+0x14a> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*113: cmp    $0x306,%ecx */
0x75, 0x21,                               /*119: jne    13c <op_add+0x13c> */
0xd1, 0xfe,                               /*11b: sar    %esi */
0xf2, 0x0f, 0x2a, 0xc6,                   /*11d: cvtsi2sd %esi,%xmm0 */
0xf2, 0x0f, 0x58, 0x42, 0x18,             /*121: addsd  0x18(%rdx),%xmm0 */
0xeb, 0x22,                               /*126: jmp    14a <op_add+0x14a> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*128: cmp    $0x606,%ecx */
0x75, 0x0c,                               /*12e: jne    13c <op_add+0x13c> */
0xf2, 0x0f, 0x10, 0x46, 0x18,             /*130: movsd  0x18(%rsi),%xmm0 */
0xf2, 0x0f, 0x58, 0x42, 0x18,             /*135: addsd  0x18(%rdx),%xmm0 */
0xeb, 0x0e,                               /*13a: jmp    14a <op_add+0x14a> */
0x48, 0x89, 0xdf,                         /*13c: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*13f: callq  144 <op_add+0x144> */
0xeb, 0x22,                               /*144: jmp    168 <op_add+0x168> */
0xf2, 0x0f, 0x2a, 0xc0,                   /*146: cvtsi2sd %eax,%xmm0 */
0x4c, 0x89, 0xf7,                         /*14a: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14d: callq  152 <op_add+0x152> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*152: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*157: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xcf,                   /*15a: mov    %rax,(%r15,%rcx,8) */
0x8b, 0x43, 0x48,                         /*15e: mov    0x48(%rbx),%eax */
0x41, 0x89, 0x86, 0xdc, 0x00, 0x00, 0x00, /*161: mov    %eax,0xdc(%r14) */
0x48, 0x89, 0xdf,                         /*168: mov    %rbx,%rdi */
0x5b,                                     /*16b: pop    %rbx */
0x41, 0x5e,                               /*16c: pop    %r14 */
0x41, 0x5f,                               /*16e: pop    %r15 */

};
static uint8_t op_add__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};

static void op_add_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_add_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_add_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_addi__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x4c, 0x8b, 0x73, 0x18,                   /*6: mov    0x18(%rbx),%r14 */
0x48, 0x8b, 0x7b, 0x50,                   /*a: mov    0x50(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%eax */
0x48, 0x98,                               /*13: cltq */
0x49, 0x8b, 0x04, 0xc6,                   /*15: mov    (%r14,%rax,8),%rax */
0x48, 0x83, 0xf8, 0x06,                   /*19: cmp    $0x6,%rax */
0x77, 0x0b,                               /*1d: ja     2a <op_addi+0x2a> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*1f: mov    $0x55,%ecx */
0x48, 0x0f, 0xa3, 0xc1,                   /*24: bt     %rax,%rcx */
0x72, 0x58,                               /*28: jb     82 <op_addi+0x82> */
0xa8, 0x01,                               /*2a: test   $0x1,%al */
0x75, 0x25,                               /*2c: jne    53 <op_addi+0x53> */
0x0f, 0xb6, 0xc8,                         /*2e: movzbl %al,%ecx */
0x83, 0xf9, 0x0e,                         /*31: cmp    $0xe,%ecx */
0x74, 0x4c,                               /*34: je     82 <op_addi+0x82> */
0x0f, 0xb6, 0x08,                         /*36: movzbl (%rax),%ecx */
0x83, 0xf9, 0x06,                         /*39: cmp    $0x6,%ecx */
0x75, 0x10,                               /*3c: jne    4e <op_addi+0x4e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3e: mov    $0x0,%ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*43: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x58, 0x40, 0x18,             /*47: addsd  0x18(%rax),%xmm0 */
0xeb, 0x7e,                               /*4c: jmp    cc <op_addi+0xcc> */
0x83, 0xf9, 0x03,                         /*4e: cmp    $0x3,%ecx */
0x75, 0x2f,                               /*51: jne    82 <op_addi+0x82> */
0xd1, 0xf8,                               /*53: sar    %eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*55: mov    $0x0,%ecx */
0x8d, 0x14, 0x08,                         /*5a: lea    (%rax,%rcx,1),%edx */
0x01, 0xc1,                               /*5d: add    %eax,%ecx */
0x70, 0x5a,                               /*5f: jo     bb <op_addi+0xbb> */
0x81, 0xc2, 0x00, 0x00, 0x00, 0x40,       /*61: add    $0x40000000,%edx */
0x78, 0x52,                               /*67: js     bb <op_addi+0xbb> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*69: mov    $0x0,%eax */
0x48, 0x98,                               /*6e: cltq */
0x49, 0xc7, 0x04, 0xc6, 0x00, 0x00, 0x00, 0x00,/*70: movq   $0x0,(%r14,%rax,8) */
0x8d, 0x4c, 0x09, 0x01,                   /*78: lea    0x1(%rcx,%rcx,1),%ecx */
0x41, 0x89, 0x0c, 0xc6,                   /*7c: mov    %ecx,(%r14,%rax,8) */
0xeb, 0x5b,                               /*80: jmp    dd <op_addi+0xdd> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*82: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*87: movslq %eax,%rdx */
0x49, 0xc7, 0x44, 0xd6, 0x08, 0x00, 0x00, 0x00, 0x00,/*8a: movq   $0x0,0x8(%r14,%rdx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*93: mov    $0x0,%eax */
0x8d, 0x44, 0x00, 0x01,                   /*98: lea    0x1(%rax,%rax,1),%eax */
0x41, 0x89, 0x44, 0xd6, 0x08,             /*9c: mov    %eax,0x8(%r14,%rdx,8) */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*a1: mov    $0x20,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a6: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*ab: mov    $0x1,%r8d */
0x48, 0x89, 0xdf,                         /*b1: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b4: callq  b9 <op_addi+0xb9> */
0xeb, 0x22,                               /*b9: jmp    dd <op_addi+0xdd> */
0xf2, 0x0f, 0x2a, 0xc8,                   /*bb: cvtsi2sd %eax,%xmm1 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*bf: mov    $0x0,%eax */
0xf2, 0x0f, 0x2a, 0xc0,                   /*c4: cvtsi2sd %eax,%xmm0 */
0xf2, 0x0f, 0x58, 0xc1,                   /*c8: addsd  %xmm1,%xmm0 */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*cc: callq  d1 <op_addi+0xd1> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*d1: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*d6: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xce,                   /*d9: mov    %rax,(%r14,%rcx,8) */
0x48, 0x89, 0xdf,                         /*dd: mov    %rbx,%rdi */
0x5b,                                     /*e0: pop    %rbx */
0x41, 0x5e,                               /*e1: pop    %r14 */

};
static uint8_t op_addi__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_addi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_addi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_addi_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_sub__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xff,                         /*5: mov    %rdi,%r15 */
0x4d, 0x8b, 0x77, 0x18,                   /*8: mov    0x18(%r15),%r14 */
0x49, 0x8b, 0x7f, 0x50,                   /*c: mov    0x50(%r15),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%eax */
0x48, 0x98,                               /*15: cltq */
0x49, 0x8b, 0x04, 0xc6,                   /*17: mov    (%r14,%rax,8),%rax */
0x48, 0x83, 0xf8, 0x07,                   /*1b: cmp    $0x7,%rax */
0x73, 0x13,                               /*1f: jae    34 <op_sub+0x34> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*21: mov    $0x55,%ecx */
0x0f, 0xa3, 0xc1,                         /*26: bt     %eax,%ecx */
0x73, 0x09,                               /*29: jae    34 <op_sub+0x34> */
0x8b, 0x14, 0x85, 0x00, 0x00, 0x00, 0x00, /*2b: mov    0x0(,%rax,4),%edx */
0xeb, 0x19,                               /*32: jmp    4d <op_sub+0x4d> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*34: mov    $0x3,%edx */
0xa8, 0x01,                               /*39: test   $0x1,%al */
0x75, 0x10,                               /*3b: jne    4d <op_sub+0x4d> */
0x0f, 0xb6, 0xc8,                         /*3d: movzbl %al,%ecx */
0xba, 0x04, 0x00, 0x00, 0x00,             /*40: mov    $0x4,%edx */
0x83, 0xf9, 0x0e,                         /*45: cmp    $0xe,%ecx */
0x74, 0x03,                               /*48: je     4d <op_sub+0x4d> */
0x0f, 0xb6, 0x10,                         /*4a: movzbl (%rax),%edx */
0xc1, 0xe2, 0x08,                         /*4d: shl    $0x8,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*50: and    $0xffff00,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*56: mov    $0x0,%ecx */
0xff, 0xc1,                               /*5b: inc    %ecx */
0x48, 0x63, 0xc9,                         /*5d: movslq %ecx,%rcx */
0x49, 0x8b, 0x0c, 0xce,                   /*60: mov    (%r14,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*64: cmp    $0x7,%rcx */
0x73, 0x13,                               /*68: jae    7d <op_sub+0x7d> */
0xbe, 0x55, 0x00, 0x00, 0x00,             /*6a: mov    $0x55,%esi */
0x0f, 0xa3, 0xce,                         /*6f: bt     %ecx,%esi */
0x73, 0x09,                               /*72: jae    7d <op_sub+0x7d> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*74: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*7b: jmp    97 <op_sub+0x97> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*7d: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*82: test   $0x1,%cl */
0x75, 0x10,                               /*85: jne    97 <op_sub+0x97> */
0x0f, 0xb6, 0xd9,                         /*87: movzbl %cl,%ebx */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*8a: mov    $0x4,%esi */
0x83, 0xfb, 0x0e,                         /*8f: cmp    $0xe,%ebx */
0x74, 0x03,                               /*92: je     97 <op_sub+0x97> */
0x0f, 0xb6, 0x31,                         /*94: movzbl (%rcx),%esi */
0x40, 0x0f, 0xb6, 0xf6,                   /*97: movzbl %sil,%esi */
0x09, 0xd6,                               /*9b: or     %edx,%esi */
0x81, 0xfe, 0x02, 0x06, 0x00, 0x00,       /*9d: cmp    $0x602,%esi */
0x7f, 0x33,                               /*a3: jg     d8 <op_sub+0xd8> */
0x81, 0xfe, 0x03, 0x03, 0x00, 0x00,       /*a5: cmp    $0x303,%esi */
0x75, 0x3c,                               /*ab: jne    e9 <op_sub+0xe9> */
0xd1, 0xf8,                               /*ad: sar    %eax */
0xd1, 0xf9,                               /*af: sar    %ecx */
0x89, 0xc2,                               /*b1: mov    %eax,%edx */
0x29, 0xca,                               /*b3: sub    %ecx,%edx */
0x89, 0xd6,                               /*b5: mov    %edx,%esi */
0x81, 0xc6, 0x00, 0x00, 0x00, 0x40,       /*b7: add    $0x40000000,%esi */
0x78, 0x5d,                               /*bd: js     11c <op_sub+0x11c> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*bf: mov    $0x0,%eax */
0x48, 0x98,                               /*c4: cltq */
0x49, 0xc7, 0x04, 0xc6, 0x00, 0x00, 0x00, 0x00,/*c6: movq   $0x0,(%r14,%rax,8) */
0x8d, 0x4c, 0x12, 0x01,                   /*ce: lea    0x1(%rdx,%rdx,1),%ecx */
0x41, 0x89, 0x0c, 0xc6,                   /*d2: mov    %ecx,(%r14,%rax,8) */
0xeb, 0x61,                               /*d6: jmp    139 <op_sub+0x139> */
0x81, 0xfe, 0x03, 0x06, 0x00, 0x00,       /*d8: cmp    $0x603,%esi */
0x75, 0x1e,                               /*de: jne    fe <op_sub+0xfe> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*e0: movsd  0x18(%rax),%xmm0 */
0xd1, 0xf9,                               /*e5: sar    %ecx */
0xeb, 0x37,                               /*e7: jmp    120 <op_sub+0x120> */
0x81, 0xfe, 0x06, 0x03, 0x00, 0x00,       /*e9: cmp    $0x306,%esi */
0x75, 0x21,                               /*ef: jne    112 <op_sub+0x112> */
0xd1, 0xf8,                               /*f1: sar    %eax */
0xf2, 0x0f, 0x2a, 0xc0,                   /*f3: cvtsi2sd %eax,%xmm0 */
0xf2, 0x0f, 0x5c, 0x41, 0x18,             /*f7: subsd  0x18(%rcx),%xmm0 */
0xeb, 0x2a,                               /*fc: jmp    128 <op_sub+0x128> */
0x81, 0xfe, 0x06, 0x06, 0x00, 0x00,       /*fe: cmp    $0x606,%esi */
0x75, 0x0c,                               /*104: jne    112 <op_sub+0x112> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*106: movsd  0x18(%rax),%xmm0 */
0xf2, 0x0f, 0x5c, 0x41, 0x18,             /*10b: subsd  0x18(%rcx),%xmm0 */
0xeb, 0x16,                               /*110: jmp    128 <op_sub+0x128> */
0x4c, 0x89, 0xff,                         /*112: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*115: callq  11a <op_sub+0x11a> */
0xeb, 0x1d,                               /*11a: jmp    139 <op_sub+0x139> */
0xf2, 0x0f, 0x2a, 0xc0,                   /*11c: cvtsi2sd %eax,%xmm0 */
0xf2, 0x0f, 0x2a, 0xc9,                   /*120: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*124: subsd  %xmm1,%xmm0 */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*128: callq  12d <op_sub+0x12d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12d: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*132: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xce,                   /*135: mov    %rax,(%r14,%rcx,8) */
0x4c, 0x89, 0xff,                         /*139: mov    %r15,%rdi */
0x5b,                                     /*13c: pop    %rbx */
0x41, 0x5e,                               /*13d: pop    %r14 */
0x41, 0x5f,                               /*13f: pop    %r15 */

};
static uint8_t op_sub__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};

static void op_sub_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sub_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sub_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_subi__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x4c, 0x8b, 0x73, 0x18,                   /*6: mov    0x18(%rbx),%r14 */
0x48, 0x8b, 0x7b, 0x50,                   /*a: mov    0x50(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%eax */
0x48, 0x98,                               /*13: cltq */
0x49, 0x8b, 0x04, 0xc6,                   /*15: mov    (%r14,%rax,8),%rax */
0x48, 0x83, 0xf8, 0x06,                   /*19: cmp    $0x6,%rax */
0x77, 0x0b,                               /*1d: ja     2a <op_subi+0x2a> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*1f: mov    $0x55,%ecx */
0x48, 0x0f, 0xa3, 0xc1,                   /*24: bt     %rax,%rcx */
0x72, 0x52,                               /*28: jb     7c <op_subi+0x7c> */
0xa8, 0x01,                               /*2a: test   $0x1,%al */
0x75, 0x1c,                               /*2c: jne    4a <op_subi+0x4a> */
0x0f, 0xb6, 0xc8,                         /*2e: movzbl %al,%ecx */
0x83, 0xf9, 0x0e,                         /*31: cmp    $0xe,%ecx */
0x74, 0x46,                               /*34: je     7c <op_subi+0x7c> */
0x0f, 0xb6, 0x08,                         /*36: movzbl (%rax),%ecx */
0x83, 0xf9, 0x06,                         /*39: cmp    $0x6,%ecx */
0x75, 0x07,                               /*3c: jne    45 <op_subi+0x45> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*3e: movsd  0x18(%rax),%xmm0 */
0xeb, 0x74,                               /*43: jmp    b9 <op_subi+0xb9> */
0x83, 0xf9, 0x03,                         /*45: cmp    $0x3,%ecx */
0x75, 0x32,                               /*48: jne    7c <op_subi+0x7c> */
0xd1, 0xf8,                               /*4a: sar    %eax */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4c: mov    $0x0,%esi */
0x89, 0xc2,                               /*51: mov    %eax,%edx */
0x29, 0xf2,                               /*53: sub    %esi,%edx */
0x89, 0xc1,                               /*55: mov    %eax,%ecx */
0x29, 0xf1,                               /*57: sub    %esi,%ecx */
0x70, 0x5a,                               /*59: jo     b5 <op_subi+0xb5> */
0x81, 0xc2, 0x00, 0x00, 0x00, 0x40,       /*5b: add    $0x40000000,%edx */
0x78, 0x52,                               /*61: js     b5 <op_subi+0xb5> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*63: mov    $0x0,%eax */
0x48, 0x98,                               /*68: cltq */
0x49, 0xc7, 0x04, 0xc6, 0x00, 0x00, 0x00, 0x00,/*6a: movq   $0x0,(%r14,%rax,8) */
0x8d, 0x4c, 0x09, 0x01,                   /*72: lea    0x1(%rcx,%rcx,1),%ecx */
0x41, 0x89, 0x0c, 0xc6,                   /*76: mov    %ecx,(%r14,%rax,8) */
0xeb, 0x5b,                               /*7a: jmp    d7 <op_subi+0xd7> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7c: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*81: movslq %eax,%rdx */
0x49, 0xc7, 0x44, 0xd6, 0x08, 0x00, 0x00, 0x00, 0x00,/*84: movq   $0x0,0x8(%r14,%rdx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8d: mov    $0x0,%eax */
0x8d, 0x44, 0x00, 0x01,                   /*92: lea    0x1(%rax,%rax,1),%eax */
0x41, 0x89, 0x44, 0xd6, 0x08,             /*96: mov    %eax,0x8(%r14,%rdx,8) */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*9b: mov    $0x20,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a0: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*a5: mov    $0x1,%r8d */
0x48, 0x89, 0xdf,                         /*ab: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ae: callq  b3 <op_subi+0xb3> */
0xeb, 0x22,                               /*b3: jmp    d7 <op_subi+0xd7> */
0xf2, 0x0f, 0x2a, 0xc0,                   /*b5: cvtsi2sd %eax,%xmm0 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*b9: mov    $0x0,%eax */
0xf2, 0x0f, 0x2a, 0xc8,                   /*be: cvtsi2sd %eax,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*c2: subsd  %xmm1,%xmm0 */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c6: callq  cb <op_subi+0xcb> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*cb: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*d0: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xce,                   /*d3: mov    %rax,(%r14,%rcx,8) */
0x48, 0x89, 0xdf,                         /*d7: mov    %rbx,%rdi */
0x5b,                                     /*da: pop    %rbx */
0x41, 0x5e,                               /*db: pop    %r14 */

};
static uint8_t op_subi__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_subi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_subi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_subi_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_mul__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0x4c, 0x8b, 0x7b, 0x18,                   /*8: mov    0x18(%rbx),%r15 */
0x4c, 0x8b, 0x73, 0x50,                   /*c: mov    0x50(%rbx),%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%eax */
0x48, 0x98,                               /*15: cltq */
0x49, 0x8b, 0x34, 0xc7,                   /*17: mov    (%r15,%rax,8),%rsi */
0x48, 0x83, 0xfe, 0x07,                   /*1b: cmp    $0x7,%rsi */
0x73, 0x13,                               /*1f: jae    34 <op_mul+0x34> */
0xb8, 0x55, 0x00, 0x00, 0x00,             /*21: mov    $0x55,%eax */
0x0f, 0xa3, 0xf0,                         /*26: bt     %esi,%eax */
0x73, 0x09,                               /*29: jae    34 <op_mul+0x34> */
0x8b, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00, /*2b: mov    0x0(,%rsi,4),%eax */
0xeb, 0x1c,                               /*32: jmp    50 <op_mul+0x50> */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*34: mov    $0x3,%eax */
0x40, 0xf6, 0xc6, 0x01,                   /*39: test   $0x1,%sil */
0x75, 0x11,                               /*3d: jne    50 <op_mul+0x50> */
0x40, 0x0f, 0xb6, 0xce,                   /*3f: movzbl %sil,%ecx */
0xb8, 0x04, 0x00, 0x00, 0x00,             /*43: mov    $0x4,%eax */
0x83, 0xf9, 0x0e,                         /*48: cmp    $0xe,%ecx */
0x74, 0x03,                               /*4b: je     50 <op_mul+0x50> */
0x0f, 0xb6, 0x06,                         /*4d: movzbl (%rsi),%eax */
0xc1, 0xe0, 0x08,                         /*50: shl    $0x8,%eax */
0x25, 0x00, 0xff, 0xff, 0x00,             /*53: and    $0xffff00,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*58: mov    $0x0,%ecx */
0xff, 0xc1,                               /*5d: inc    %ecx */
0x48, 0x63, 0xc9,                         /*5f: movslq %ecx,%rcx */
0x49, 0x8b, 0x14, 0xcf,                   /*62: mov    (%r15,%rcx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*66: cmp    $0x7,%rdx */
0x73, 0x13,                               /*6a: jae    7f <op_mul+0x7f> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*6c: mov    $0x55,%ecx */
0x0f, 0xa3, 0xd1,                         /*71: bt     %edx,%ecx */
0x73, 0x09,                               /*74: jae    7f <op_mul+0x7f> */
0x8b, 0x0c, 0x95, 0x00, 0x00, 0x00, 0x00, /*76: mov    0x0(,%rdx,4),%ecx */
0xeb, 0x1a,                               /*7d: jmp    99 <op_mul+0x99> */
0xb9, 0x03, 0x00, 0x00, 0x00,             /*7f: mov    $0x3,%ecx */
0xf6, 0xc2, 0x01,                         /*84: test   $0x1,%dl */
0x75, 0x10,                               /*87: jne    99 <op_mul+0x99> */
0x0f, 0xb6, 0xfa,                         /*89: movzbl %dl,%edi */
0xb9, 0x04, 0x00, 0x00, 0x00,             /*8c: mov    $0x4,%ecx */
0x83, 0xff, 0x0e,                         /*91: cmp    $0xe,%edi */
0x74, 0x03,                               /*94: je     99 <op_mul+0x99> */
0x0f, 0xb6, 0x0a,                         /*96: movzbl (%rdx),%ecx */
0x0f, 0xb6, 0xc9,                         /*99: movzbl %cl,%ecx */
0x09, 0xc1,                               /*9c: or     %eax,%ecx */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*9e: cmp    $0x602,%ecx */
0x7f, 0x44,                               /*a4: jg     ea <op_mul+0xea> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*a6: cmp    $0x303,%ecx */
0x75, 0x51,                               /*ac: jne    ff <op_mul+0xff> */
0x4c, 0x89, 0xf7,                         /*ae: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b1: callq  b6 <op_mul+0xb6> */
0x48, 0x83, 0xf8, 0x06,                   /*b6: cmp    $0x6,%rax */
0x77, 0x0f,                               /*ba: ja     cb <op_mul+0xcb> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*bc: mov    $0x55,%ecx */
0x48, 0x0f, 0xa3, 0xc1,                   /*c1: bt     %rax,%rcx */
0x0f, 0x82, 0x97, 0x00, 0x00, 0x00,       /*c5: jb     162 <op_mul+0x162> */
0xa8, 0x01,                               /*cb: test   $0x1,%al */
0x75, 0x7c,                               /*cd: jne    14b <op_mul+0x14b> */
0x0f, 0xb6, 0xc8,                         /*cf: movzbl %al,%ecx */
0x83, 0xf9, 0x0e,                         /*d2: cmp    $0xe,%ecx */
0x0f, 0x84, 0x87, 0x00, 0x00, 0x00,       /*d5: je     162 <op_mul+0x162> */
0x0f, 0xb6, 0x08,                         /*db: movzbl (%rax),%ecx */
0x83, 0xf9, 0x06,                         /*de: cmp    $0x6,%ecx */
0x75, 0x63,                               /*e1: jne    146 <op_mul+0x146> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*e3: movsd  0x18(%rax),%xmm0 */
0xeb, 0x3c,                               /*e8: jmp    126 <op_mul+0x126> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*ea: cmp    $0x603,%ecx */
0x75, 0x22,                               /*f0: jne    114 <op_mul+0x114> */
0xd1, 0xfa,                               /*f2: sar    %edx */
0xf2, 0x0f, 0x2a, 0xc2,                   /*f4: cvtsi2sd %edx,%xmm0 */
0xf2, 0x0f, 0x59, 0x46, 0x18,             /*f8: mulsd  0x18(%rsi),%xmm0 */
0xeb, 0x27,                               /*fd: jmp    126 <op_mul+0x126> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*ff: cmp    $0x306,%ecx */
0x75, 0x35,                               /*105: jne    13c <op_mul+0x13c> */
0xd1, 0xfe,                               /*107: sar    %esi */
0xf2, 0x0f, 0x2a, 0xc6,                   /*109: cvtsi2sd %esi,%xmm0 */
0xf2, 0x0f, 0x59, 0x42, 0x18,             /*10d: mulsd  0x18(%rdx),%xmm0 */
0xeb, 0x12,                               /*112: jmp    126 <op_mul+0x126> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*114: cmp    $0x606,%ecx */
0x75, 0x20,                               /*11a: jne    13c <op_mul+0x13c> */
0xf2, 0x0f, 0x10, 0x46, 0x18,             /*11c: movsd  0x18(%rsi),%xmm0 */
0xf2, 0x0f, 0x59, 0x42, 0x18,             /*121: mulsd  0x18(%rdx),%xmm0 */
0x4c, 0x89, 0xf7,                         /*126: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*129: callq  12e <op_mul+0x12e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12e: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*133: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xcf,                   /*136: mov    %rax,(%r15,%rcx,8) */
0xeb, 0x26,                               /*13a: jmp    162 <op_mul+0x162> */
0x48, 0x89, 0xdf,                         /*13c: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*13f: callq  144 <op_mul+0x144> */
0xeb, 0x1c,                               /*144: jmp    162 <op_mul+0x162> */
0x83, 0xf9, 0x03,                         /*146: cmp    $0x3,%ecx */
0x75, 0x17,                               /*149: jne    162 <op_mul+0x162> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*14b: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*150: movslq %ecx,%rcx */
0x49, 0xc7, 0x04, 0xcf, 0x00, 0x00, 0x00, 0x00,/*153: movq   $0x0,(%r15,%rcx,8) */
0x83, 0xc8, 0x01,                         /*15b: or     $0x1,%eax */
0x41, 0x89, 0x04, 0xcf,                   /*15e: mov    %eax,(%r15,%rcx,8) */
0x48, 0x89, 0xdf,                         /*162: mov    %rbx,%rdi */
0x5b,                                     /*165: pop    %rbx */
0x41, 0x5e,                               /*166: pop    %r14 */
0x41, 0x5f,                               /*168: pop    %r15 */

};
static uint8_t op_mul__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};

static void op_mul_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_mul_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_mul_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_div__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x4c, 0x8b, 0x73, 0x18,                   /*6: mov    0x18(%rbx),%r14 */
0x48, 0x8b, 0x7b, 0x50,                   /*a: mov    0x50(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%eax */
0x48, 0x98,                               /*13: cltq */
0x49, 0x8b, 0x04, 0xc6,                   /*15: mov    (%r14,%rax,8),%rax */
0x48, 0x83, 0xf8, 0x07,                   /*19: cmp    $0x7,%rax */
0x73, 0x13,                               /*1d: jae    32 <op_div+0x32> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*1f: mov    $0x55,%ecx */
0x0f, 0xa3, 0xc1,                         /*24: bt     %eax,%ecx */
0x73, 0x09,                               /*27: jae    32 <op_div+0x32> */
0x8b, 0x14, 0x85, 0x00, 0x00, 0x00, 0x00, /*29: mov    0x0(,%rax,4),%edx */
0xeb, 0x19,                               /*30: jmp    4b <op_div+0x4b> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*32: mov    $0x3,%edx */
0xa8, 0x01,                               /*37: test   $0x1,%al */
0x75, 0x10,                               /*39: jne    4b <op_div+0x4b> */
0x0f, 0xb6, 0xc8,                         /*3b: movzbl %al,%ecx */
0xba, 0x04, 0x00, 0x00, 0x00,             /*3e: mov    $0x4,%edx */
0x83, 0xf9, 0x0e,                         /*43: cmp    $0xe,%ecx */
0x74, 0x03,                               /*46: je     4b <op_div+0x4b> */
0x0f, 0xb6, 0x10,                         /*48: movzbl (%rax),%edx */
0xc1, 0xe2, 0x08,                         /*4b: shl    $0x8,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*4e: and    $0xffff00,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*54: mov    $0x0,%ecx */
0xff, 0xc1,                               /*59: inc    %ecx */
0x48, 0x63, 0xc9,                         /*5b: movslq %ecx,%rcx */
0x49, 0x8b, 0x0c, 0xce,                   /*5e: mov    (%r14,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*62: cmp    $0x7,%rcx */
0x73, 0x13,                               /*66: jae    7b <op_div+0x7b> */
0xbe, 0x55, 0x00, 0x00, 0x00,             /*68: mov    $0x55,%esi */
0x0f, 0xa3, 0xce,                         /*6d: bt     %ecx,%esi */
0x73, 0x09,                               /*70: jae    7b <op_div+0x7b> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*72: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1c,                               /*79: jmp    97 <op_div+0x97> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*7b: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*80: test   $0x1,%cl */
0x75, 0x12,                               /*83: jne    97 <op_div+0x97> */
0x44, 0x0f, 0xb6, 0xc1,                   /*85: movzbl %cl,%r8d */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*89: mov    $0x4,%esi */
0x41, 0x83, 0xf8, 0x0e,                   /*8e: cmp    $0xe,%r8d */
0x74, 0x03,                               /*92: je     97 <op_div+0x97> */
0x0f, 0xb6, 0x31,                         /*94: movzbl (%rcx),%esi */
0x40, 0x0f, 0xb6, 0xf6,                   /*97: movzbl %sil,%esi */
0x09, 0xd6,                               /*9b: or     %edx,%esi */
0x81, 0xfe, 0x02, 0x06, 0x00, 0x00,       /*9d: cmp    $0x602,%esi */
0x7f, 0x12,                               /*a3: jg     b7 <op_div+0xb7> */
0x81, 0xfe, 0x03, 0x03, 0x00, 0x00,       /*a5: cmp    $0x303,%esi */
0x75, 0x23,                               /*ab: jne    d0 <op_div+0xd0> */
0xd1, 0xf8,                               /*ad: sar    %eax */
0xd1, 0xf9,                               /*af: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc0,                   /*b1: cvtsi2sd %eax,%xmm0 */
0xeb, 0x0f,                               /*b5: jmp    c6 <op_div+0xc6> */
0x81, 0xfe, 0x03, 0x06, 0x00, 0x00,       /*b7: cmp    $0x603,%esi */
0x75, 0x26,                               /*bd: jne    e5 <op_div+0xe5> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*bf: movsd  0x18(%rax),%xmm0 */
0xd1, 0xf9,                               /*c4: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc9,                   /*c6: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x5e, 0xc1,                   /*ca: divsd  %xmm1,%xmm0 */
0xeb, 0x27,                               /*ce: jmp    f7 <op_div+0xf7> */
0x81, 0xfe, 0x06, 0x03, 0x00, 0x00,       /*d0: cmp    $0x306,%esi */
0x75, 0x32,                               /*d6: jne    10a <op_div+0x10a> */
0xd1, 0xf8,                               /*d8: sar    %eax */
0xf2, 0x0f, 0x2a, 0xc0,                   /*da: cvtsi2sd %eax,%xmm0 */
0xf2, 0x0f, 0x5e, 0x41, 0x18,             /*de: divsd  0x18(%rcx),%xmm0 */
0xeb, 0x12,                               /*e3: jmp    f7 <op_div+0xf7> */
0x81, 0xfe, 0x06, 0x06, 0x00, 0x00,       /*e5: cmp    $0x606,%esi */
0x75, 0x1d,                               /*eb: jne    10a <op_div+0x10a> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*ed: movsd  0x18(%rax),%xmm0 */
0xf2, 0x0f, 0x5e, 0x41, 0x18,             /*f2: divsd  0x18(%rcx),%xmm0 */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*f7: callq  fc <op_div+0xfc> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fc: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*101: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xce,                   /*104: mov    %rax,(%r14,%rcx,8) */
0xeb, 0x08,                               /*108: jmp    112 <op_div+0x112> */
0x48, 0x89, 0xdf,                         /*10a: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*10d: callq  112 <op_div+0x112> */
0x48, 0x89, 0xdf,                         /*112: mov    %rbx,%rdi */
0x5b,                                     /*115: pop    %rbx */
0x41, 0x5e,                               /*116: pop    %r14 */

};
static uint8_t op_div__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};

static void op_div_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_div_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_div_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_eq__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x5e, 0x18,                   /*6: mov    0x18(%r14),%rbx */
0x49, 0x8b, 0x7e, 0x50,                   /*a: mov    0x50(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%eax */
0x48, 0x98,                               /*13: cltq */
0x48, 0x8b, 0x34, 0xc3,                   /*15: mov    (%rbx,%rax,8),%rsi */
0x48, 0x8b, 0x54, 0xc3, 0x08,             /*19: mov    0x8(%rbx,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e: callq  23 <op_eq+0x23> */
0x84, 0xc0,                               /*23: test   %al,%al */
0x0f, 0x85, 0x06, 0x01, 0x00, 0x00,       /*25: jne    131 <op_eq+0x131> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*2b: mov    $0x0,%eax */
0x48, 0x98,                               /*30: cltq */
0x48, 0x8b, 0x04, 0xc3,                   /*32: mov    (%rbx,%rax,8),%rax */
0x48, 0x83, 0xf8, 0x07,                   /*36: cmp    $0x7,%rax */
0x73, 0x13,                               /*3a: jae    4f <op_eq+0x4f> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*3c: mov    $0x55,%ecx */
0x0f, 0xa3, 0xc1,                         /*41: bt     %eax,%ecx */
0x73, 0x09,                               /*44: jae    4f <op_eq+0x4f> */
0x8b, 0x14, 0x85, 0x00, 0x00, 0x00, 0x00, /*46: mov    0x0(,%rax,4),%edx */
0xeb, 0x19,                               /*4d: jmp    68 <op_eq+0x68> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*4f: mov    $0x3,%edx */
0xa8, 0x01,                               /*54: test   $0x1,%al */
0x75, 0x10,                               /*56: jne    68 <op_eq+0x68> */
0x0f, 0xb6, 0xc8,                         /*58: movzbl %al,%ecx */
0xba, 0x04, 0x00, 0x00, 0x00,             /*5b: mov    $0x4,%edx */
0x83, 0xf9, 0x0e,                         /*60: cmp    $0xe,%ecx */
0x74, 0x03,                               /*63: je     68 <op_eq+0x68> */
0x0f, 0xb6, 0x10,                         /*65: movzbl (%rax),%edx */
0xc1, 0xe2, 0x08,                         /*68: shl    $0x8,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*6b: and    $0xffff00,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*71: mov    $0x0,%ecx */
0xff, 0xc1,                               /*76: inc    %ecx */
0x48, 0x63, 0xc9,                         /*78: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xcb,                   /*7b: mov    (%rbx,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*7f: cmp    $0x7,%rcx */
0x73, 0x13,                               /*83: jae    98 <op_eq+0x98> */
0xbe, 0x55, 0x00, 0x00, 0x00,             /*85: mov    $0x55,%esi */
0x0f, 0xa3, 0xce,                         /*8a: bt     %ecx,%esi */
0x73, 0x09,                               /*8d: jae    98 <op_eq+0x98> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*8f: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*96: jmp    b2 <op_eq+0xb2> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*98: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*9d: test   $0x1,%cl */
0x75, 0x10,                               /*a0: jne    b2 <op_eq+0xb2> */
0x0f, 0xb6, 0xf9,                         /*a2: movzbl %cl,%edi */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*a5: mov    $0x4,%esi */
0x83, 0xff, 0x0e,                         /*aa: cmp    $0xe,%edi */
0x74, 0x03,                               /*ad: je     b2 <op_eq+0xb2> */
0x0f, 0xb6, 0x31,                         /*af: movzbl (%rcx),%esi */
0x40, 0x0f, 0xb6, 0xf6,                   /*b2: movzbl %sil,%esi */
0x09, 0xd6,                               /*b6: or     %edx,%esi */
0x81, 0xfe, 0x02, 0x06, 0x00, 0x00,       /*b8: cmp    $0x602,%esi */
0x7f, 0x11,                               /*be: jg     d1 <op_eq+0xd1> */
0x81, 0xfe, 0x03, 0x03, 0x00, 0x00,       /*c0: cmp    $0x303,%esi */
0x75, 0x24,                               /*c6: jne    ec <op_eq+0xec> */
0x31, 0xc1,                               /*c8: xor    %eax,%ecx */
0x83, 0xf9, 0x02,                         /*ca: cmp    $0x2,%ecx */
0x19, 0xc0,                               /*cd: sbb    %eax,%eax */
0xeb, 0x43,                               /*cf: jmp    114 <op_eq+0x114> */
0x81, 0xfe, 0x03, 0x06, 0x00, 0x00,       /*d1: cmp    $0x603,%esi */
0x75, 0x23,                               /*d7: jne    fc <op_eq+0xfc> */
0xd1, 0xf9,                               /*d9: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*db: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0xc2, 0x40, 0x18, 0x00,       /*df: cmpeqsd 0x18(%rax),%xmm0 */
0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*e5: movq   %xmm0,%rax */
0xeb, 0x28,                               /*ea: jmp    114 <op_eq+0x114> */
0x81, 0xfe, 0x06, 0x03, 0x00, 0x00,       /*ec: cmp    $0x306,%esi */
0x75, 0x65,                               /*f2: jne    159 <op_eq+0x159> */
0xd1, 0xf8,                               /*f4: sar    %eax */
0xf2, 0x0f, 0x2a, 0xc0,                   /*f6: cvtsi2sd %eax,%xmm0 */
0xeb, 0x0d,                               /*fa: jmp    109 <op_eq+0x109> */
0x81, 0xfe, 0x06, 0x06, 0x00, 0x00,       /*fc: cmp    $0x606,%esi */
0x75, 0x55,                               /*102: jne    159 <op_eq+0x159> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*104: movsd  0x18(%rax),%xmm0 */
0xf2, 0x0f, 0xc2, 0x41, 0x18, 0x00,       /*109: cmpeqsd 0x18(%rcx),%xmm0 */
0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*10f: movq   %xmm0,%rax */
0x83, 0xe0, 0x01,                         /*114: and    $0x1,%eax */
0x85, 0xc0,                               /*117: test   %eax,%eax */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*119: mov    $0x0,%eax */
0x48, 0x98,                               /*11e: cltq */
0x48, 0xc7, 0x04, 0xc3, 0x00, 0x00, 0x00, 0x00,/*120: movq   $0x0,(%rbx,%rax,8) */
0xc7, 0x04, 0xc3, 0x02, 0x00, 0x00, 0x00, /*128: movl   $0x2,(%rbx,%rax,8) */
0x74, 0x17,                               /*12f: je     148 <op_eq+0x148> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*131: mov    $0x0,%eax */
0x48, 0x98,                               /*136: cltq */
0x48, 0xc7, 0x04, 0xc3, 0x04, 0x00, 0x00, 0x00,/*138: movq   $0x4,(%rbx,%rax,8) */
0x4c, 0x89, 0xf7,                         /*140: mov    %r14,%rdi */
0x5b,                                     /*143: pop    %rbx */
0x41, 0x5e,                               /*144: pop    %r14 */
0xeb, 0x30,                               /*146: jmp    178 <C+0x168> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*148: mov    $0x0,%eax */
0x48, 0x98,                               /*14d: cltq */
0x48, 0xc7, 0x04, 0xc3, 0x02, 0x00, 0x00, 0x00,/*14f: movq   $0x2,(%rbx,%rax,8) */
0xeb, 0xe7,                               /*157: jmp    140 <op_eq+0x140> */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*159: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15e: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*163: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*168: mov    $0x0,%r8d */
0x4c, 0x89, 0xf7,                         /*16e: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*171: callq  176 <op_eq+0x176> */
0xeb, 0xc8,                               /*176: jmp    140 <op_eq+0x140> */

};
static uint8_t op_eq__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};

static void op_eq_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_eq_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_eq_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_lt__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x46, 0x18,                   /*6: mov    0x18(%r14),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*f: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*12: mov    (%rax,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*16: cmp    $0x7,%rcx */
0x73, 0x13,                               /*1a: jae    2f <op_lt+0x2f> */
0xba, 0x55, 0x00, 0x00, 0x00,             /*1c: mov    $0x55,%edx */
0x0f, 0xa3, 0xca,                         /*21: bt     %ecx,%edx */
0x73, 0x09,                               /*24: jae    2f <op_lt+0x2f> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*26: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*2d: jmp    49 <op_lt+0x49> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*2f: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*34: test   $0x1,%cl */
0x75, 0x10,                               /*37: jne    49 <op_lt+0x49> */
0x0f, 0xb6, 0xd1,                         /*39: movzbl %cl,%edx */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*3c: mov    $0x4,%esi */
0x83, 0xfa, 0x0e,                         /*41: cmp    $0xe,%edx */
0x74, 0x03,                               /*44: je     49 <op_lt+0x49> */
0x0f, 0xb6, 0x31,                         /*46: movzbl (%rcx),%esi */
0xc1, 0xe6, 0x08,                         /*49: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*4c: and    $0xffff00,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*52: mov    $0x0,%edx */
0xff, 0xc2,                               /*57: inc    %edx */
0x48, 0x63, 0xd2,                         /*59: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*5c: mov    (%rax,%rdx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*60: cmp    $0x7,%rdx */
0x73, 0x13,                               /*64: jae    79 <op_lt+0x79> */
0xbf, 0x55, 0x00, 0x00, 0x00,             /*66: mov    $0x55,%edi */
0x0f, 0xa3, 0xd7,                         /*6b: bt     %edx,%edi */
0x73, 0x09,                               /*6e: jae    79 <op_lt+0x79> */
0x8b, 0x3c, 0x95, 0x00, 0x00, 0x00, 0x00, /*70: mov    0x0(,%rdx,4),%edi */
0xeb, 0x1a,                               /*77: jmp    93 <op_lt+0x93> */
0xbf, 0x03, 0x00, 0x00, 0x00,             /*79: mov    $0x3,%edi */
0xf6, 0xc2, 0x01,                         /*7e: test   $0x1,%dl */
0x75, 0x10,                               /*81: jne    93 <op_lt+0x93> */
0x0f, 0xb6, 0xda,                         /*83: movzbl %dl,%ebx */
0xbf, 0x04, 0x00, 0x00, 0x00,             /*86: mov    $0x4,%edi */
0x83, 0xfb, 0x0e,                         /*8b: cmp    $0xe,%ebx */
0x74, 0x03,                               /*8e: je     93 <op_lt+0x93> */
0x0f, 0xb6, 0x3a,                         /*90: movzbl (%rdx),%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*93: movzbl %dil,%edi */
0x09, 0xf7,                               /*97: or     %esi,%edi */
0x81, 0xff, 0x02, 0x06, 0x00, 0x00,       /*99: cmp    $0x602,%edi */
0x7f, 0x13,                               /*9f: jg     b4 <op_lt+0xb4> */
0x81, 0xff, 0x03, 0x03, 0x00, 0x00,       /*a1: cmp    $0x303,%edi */
0x75, 0x1b,                               /*a7: jne    c4 <op_lt+0xc4> */
0xd1, 0xf9,                               /*a9: sar    %ecx */
0xd1, 0xfa,                               /*ab: sar    %edx */
0x39, 0xd1,                               /*ad: cmp    %edx,%ecx */
0x0f, 0x9c, 0xc1,                         /*af: setl   %cl */
0xeb, 0x41,                               /*b2: jmp    f5 <op_lt+0xf5> */
0x81, 0xff, 0x03, 0x06, 0x00, 0x00,       /*b4: cmp    $0x603,%edi */
0x75, 0x24,                               /*ba: jne    e0 <op_lt+0xe0> */
0xd1, 0xfa,                               /*bc: sar    %edx */
0xf2, 0x0f, 0x2a, 0xc2,                   /*be: cvtsi2sd %edx,%xmm0 */
0xeb, 0x29,                               /*c2: jmp    ed <op_lt+0xed> */
0x81, 0xff, 0x06, 0x03, 0x00, 0x00,       /*c4: cmp    $0x306,%edi */
0x75, 0x63,                               /*ca: jne    12f <op_lt+0x12f> */
0xd1, 0xf9,                               /*cc: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*ce: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x10, 0x4a, 0x18,             /*d2: movsd  0x18(%rdx),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*d7: ucomisd %xmm0,%xmm1 */
0x0f, 0x97, 0xc1,                         /*db: seta   %cl */
0xeb, 0x15,                               /*de: jmp    f5 <op_lt+0xf5> */
0x81, 0xff, 0x06, 0x06, 0x00, 0x00,       /*e0: cmp    $0x606,%edi */
0x75, 0x47,                               /*e6: jne    12f <op_lt+0x12f> */
0xf2, 0x0f, 0x10, 0x42, 0x18,             /*e8: movsd  0x18(%rdx),%xmm0 */
0x66, 0x0f, 0x2e, 0x41, 0x18,             /*ed: ucomisd 0x18(%rcx),%xmm0 */
0x0f, 0x97, 0xc1,                         /*f2: seta   %cl */
0x0f, 0xb6, 0xc9,                         /*f5: movzbl %cl,%ecx */
0x85, 0xc9,                               /*f8: test   %ecx,%ecx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fa: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*ff: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*102: movq   $0x0,(%rax,%rcx,8) */
0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00, /*10a: movl   $0x2,(%rax,%rcx,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*111: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*116: movslq %ecx,%rcx */
0x74, 0x0a,                               /*119: je     125 <op_lt+0x125> */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*11b: movq   $0x4,(%rax,%rcx,8) */
0xeb, 0x27,                               /*123: jmp    14c <op_lt+0x14c> */
0x48, 0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00,/*125: movq   $0x2,(%rax,%rcx,8) */
0xeb, 0x1d,                               /*12d: jmp    14c <op_lt+0x14c> */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*12f: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*134: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*139: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*13e: mov    $0x0,%r8d */
0x4c, 0x89, 0xf7,                         /*144: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*147: callq  14c <op_lt+0x14c> */
0x4c, 0x89, 0xf7,                         /*14c: mov    %r14,%rdi */
0x5b,                                     /*14f: pop    %rbx */
0x41, 0x5e,                               /*150: pop    %r14 */

};
static uint8_t op_lt__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};

static void op_lt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_lt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_lt_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_le__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x46, 0x18,                   /*6: mov    0x18(%r14),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*f: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*12: mov    (%rax,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*16: cmp    $0x7,%rcx */
0x73, 0x13,                               /*1a: jae    2f <op_le+0x2f> */
0xba, 0x55, 0x00, 0x00, 0x00,             /*1c: mov    $0x55,%edx */
0x0f, 0xa3, 0xca,                         /*21: bt     %ecx,%edx */
0x73, 0x09,                               /*24: jae    2f <op_le+0x2f> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*26: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*2d: jmp    49 <op_le+0x49> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*2f: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*34: test   $0x1,%cl */
0x75, 0x10,                               /*37: jne    49 <op_le+0x49> */
0x0f, 0xb6, 0xd1,                         /*39: movzbl %cl,%edx */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*3c: mov    $0x4,%esi */
0x83, 0xfa, 0x0e,                         /*41: cmp    $0xe,%edx */
0x74, 0x03,                               /*44: je     49 <op_le+0x49> */
0x0f, 0xb6, 0x31,                         /*46: movzbl (%rcx),%esi */
0xc1, 0xe6, 0x08,                         /*49: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*4c: and    $0xffff00,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*52: mov    $0x0,%edx */
0xff, 0xc2,                               /*57: inc    %edx */
0x48, 0x63, 0xd2,                         /*59: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*5c: mov    (%rax,%rdx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*60: cmp    $0x7,%rdx */
0x73, 0x13,                               /*64: jae    79 <op_le+0x79> */
0xbf, 0x55, 0x00, 0x00, 0x00,             /*66: mov    $0x55,%edi */
0x0f, 0xa3, 0xd7,                         /*6b: bt     %edx,%edi */
0x73, 0x09,                               /*6e: jae    79 <op_le+0x79> */
0x8b, 0x3c, 0x95, 0x00, 0x00, 0x00, 0x00, /*70: mov    0x0(,%rdx,4),%edi */
0xeb, 0x1a,                               /*77: jmp    93 <op_le+0x93> */
0xbf, 0x03, 0x00, 0x00, 0x00,             /*79: mov    $0x3,%edi */
0xf6, 0xc2, 0x01,                         /*7e: test   $0x1,%dl */
0x75, 0x10,                               /*81: jne    93 <op_le+0x93> */
0x0f, 0xb6, 0xda,                         /*83: movzbl %dl,%ebx */
0xbf, 0x04, 0x00, 0x00, 0x00,             /*86: mov    $0x4,%edi */
0x83, 0xfb, 0x0e,                         /*8b: cmp    $0xe,%ebx */
0x74, 0x03,                               /*8e: je     93 <op_le+0x93> */
0x0f, 0xb6, 0x3a,                         /*90: movzbl (%rdx),%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*93: movzbl %dil,%edi */
0x09, 0xf7,                               /*97: or     %esi,%edi */
0x81, 0xff, 0x02, 0x06, 0x00, 0x00,       /*99: cmp    $0x602,%edi */
0x7f, 0x13,                               /*9f: jg     b4 <op_le+0xb4> */
0x81, 0xff, 0x03, 0x03, 0x00, 0x00,       /*a1: cmp    $0x303,%edi */
0x75, 0x1b,                               /*a7: jne    c4 <op_le+0xc4> */
0xd1, 0xf9,                               /*a9: sar    %ecx */
0xd1, 0xfa,                               /*ab: sar    %edx */
0x39, 0xd1,                               /*ad: cmp    %edx,%ecx */
0x0f, 0x9e, 0xc1,                         /*af: setle  %cl */
0xeb, 0x41,                               /*b2: jmp    f5 <op_le+0xf5> */
0x81, 0xff, 0x03, 0x06, 0x00, 0x00,       /*b4: cmp    $0x603,%edi */
0x75, 0x24,                               /*ba: jne    e0 <op_le+0xe0> */
0xd1, 0xfa,                               /*bc: sar    %edx */
0xf2, 0x0f, 0x2a, 0xc2,                   /*be: cvtsi2sd %edx,%xmm0 */
0xeb, 0x29,                               /*c2: jmp    ed <op_le+0xed> */
0x81, 0xff, 0x06, 0x03, 0x00, 0x00,       /*c4: cmp    $0x306,%edi */
0x75, 0x63,                               /*ca: jne    12f <op_le+0x12f> */
0xd1, 0xf9,                               /*cc: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*ce: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x10, 0x4a, 0x18,             /*d2: movsd  0x18(%rdx),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*d7: ucomisd %xmm0,%xmm1 */
0x0f, 0x93, 0xc1,                         /*db: setae  %cl */
0xeb, 0x15,                               /*de: jmp    f5 <op_le+0xf5> */
0x81, 0xff, 0x06, 0x06, 0x00, 0x00,       /*e0: cmp    $0x606,%edi */
0x75, 0x47,                               /*e6: jne    12f <op_le+0x12f> */
0xf2, 0x0f, 0x10, 0x42, 0x18,             /*e8: movsd  0x18(%rdx),%xmm0 */
0x66, 0x0f, 0x2e, 0x41, 0x18,             /*ed: ucomisd 0x18(%rcx),%xmm0 */
0x0f, 0x93, 0xc1,                         /*f2: setae  %cl */
0x0f, 0xb6, 0xc9,                         /*f5: movzbl %cl,%ecx */
0x85, 0xc9,                               /*f8: test   %ecx,%ecx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fa: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*ff: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*102: movq   $0x0,(%rax,%rcx,8) */
0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00, /*10a: movl   $0x2,(%rax,%rcx,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*111: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*116: movslq %ecx,%rcx */
0x74, 0x0a,                               /*119: je     125 <op_le+0x125> */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*11b: movq   $0x4,(%rax,%rcx,8) */
0xeb, 0x27,                               /*123: jmp    14c <op_le+0x14c> */
0x48, 0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00,/*125: movq   $0x2,(%rax,%rcx,8) */
0xeb, 0x1d,                               /*12d: jmp    14c <op_le+0x14c> */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*12f: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*134: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*139: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*13e: mov    $0x0,%r8d */
0x4c, 0x89, 0xf7,                         /*144: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*147: callq  14c <op_le+0x14c> */
0x4c, 0x89, 0xf7,                         /*14c: mov    %r14,%rdi */
0x5b,                                     /*14f: pop    %rbx */
0x41, 0x5e,                               /*150: pop    %r14 */

};
static uint8_t op_le__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};

static void op_le_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_le_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_le_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_gt__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x46, 0x18,                   /*6: mov    0x18(%r14),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*f: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*12: mov    (%rax,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*16: cmp    $0x7,%rcx */
0x73, 0x13,                               /*1a: jae    2f <op_gt+0x2f> */
0xba, 0x55, 0x00, 0x00, 0x00,             /*1c: mov    $0x55,%edx */
0x0f, 0xa3, 0xca,                         /*21: bt     %ecx,%edx */
0x73, 0x09,                               /*24: jae    2f <op_gt+0x2f> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*26: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*2d: jmp    49 <op_gt+0x49> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*2f: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*34: test   $0x1,%cl */
0x75, 0x10,                               /*37: jne    49 <op_gt+0x49> */
0x0f, 0xb6, 0xd1,                         /*39: movzbl %cl,%edx */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*3c: mov    $0x4,%esi */
0x83, 0xfa, 0x0e,                         /*41: cmp    $0xe,%edx */
0x74, 0x03,                               /*44: je     49 <op_gt+0x49> */
0x0f, 0xb6, 0x31,                         /*46: movzbl (%rcx),%esi */
0xc1, 0xe6, 0x08,                         /*49: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*4c: and    $0xffff00,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*52: mov    $0x0,%edx */
0xff, 0xc2,                               /*57: inc    %edx */
0x48, 0x63, 0xd2,                         /*59: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*5c: mov    (%rax,%rdx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*60: cmp    $0x7,%rdx */
0x73, 0x13,                               /*64: jae    79 <op_gt+0x79> */
0xbf, 0x55, 0x00, 0x00, 0x00,             /*66: mov    $0x55,%edi */
0x0f, 0xa3, 0xd7,                         /*6b: bt     %edx,%edi */
0x73, 0x09,                               /*6e: jae    79 <op_gt+0x79> */
0x8b, 0x3c, 0x95, 0x00, 0x00, 0x00, 0x00, /*70: mov    0x0(,%rdx,4),%edi */
0xeb, 0x1a,                               /*77: jmp    93 <op_gt+0x93> */
0xbf, 0x03, 0x00, 0x00, 0x00,             /*79: mov    $0x3,%edi */
0xf6, 0xc2, 0x01,                         /*7e: test   $0x1,%dl */
0x75, 0x10,                               /*81: jne    93 <op_gt+0x93> */
0x0f, 0xb6, 0xda,                         /*83: movzbl %dl,%ebx */
0xbf, 0x04, 0x00, 0x00, 0x00,             /*86: mov    $0x4,%edi */
0x83, 0xfb, 0x0e,                         /*8b: cmp    $0xe,%ebx */
0x74, 0x03,                               /*8e: je     93 <op_gt+0x93> */
0x0f, 0xb6, 0x3a,                         /*90: movzbl (%rdx),%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*93: movzbl %dil,%edi */
0x09, 0xf7,                               /*97: or     %esi,%edi */
0x81, 0xff, 0x02, 0x06, 0x00, 0x00,       /*99: cmp    $0x602,%edi */
0x7f, 0x13,                               /*9f: jg     b4 <op_gt+0xb4> */
0x81, 0xff, 0x03, 0x03, 0x00, 0x00,       /*a1: cmp    $0x303,%edi */
0x75, 0x27,                               /*a7: jne    d0 <op_gt+0xd0> */
0xd1, 0xf9,                               /*a9: sar    %ecx */
0xd1, 0xfa,                               /*ab: sar    %edx */
0x39, 0xd1,                               /*ad: cmp    %edx,%ecx */
0x0f, 0x9f, 0xc1,                         /*af: setg   %cl */
0xeb, 0x41,                               /*b2: jmp    f5 <op_gt+0xf5> */
0x81, 0xff, 0x03, 0x06, 0x00, 0x00,       /*b4: cmp    $0x603,%edi */
0x75, 0x24,                               /*ba: jne    e0 <op_gt+0xe0> */
0xf2, 0x0f, 0x10, 0x41, 0x18,             /*bc: movsd  0x18(%rcx),%xmm0 */
0xd1, 0xfa,                               /*c1: sar    %edx */
0xf2, 0x0f, 0x2a, 0xca,                   /*c3: cvtsi2sd %edx,%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*c7: ucomisd %xmm1,%xmm0 */
0x0f, 0x97, 0xc1,                         /*cb: seta   %cl */
0xeb, 0x25,                               /*ce: jmp    f5 <op_gt+0xf5> */
0x81, 0xff, 0x06, 0x03, 0x00, 0x00,       /*d0: cmp    $0x306,%edi */
0x75, 0x57,                               /*d6: jne    12f <op_gt+0x12f> */
0xd1, 0xf9,                               /*d8: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*da: cvtsi2sd %ecx,%xmm0 */
0xeb, 0x0d,                               /*de: jmp    ed <op_gt+0xed> */
0x81, 0xff, 0x06, 0x06, 0x00, 0x00,       /*e0: cmp    $0x606,%edi */
0x75, 0x47,                               /*e6: jne    12f <op_gt+0x12f> */
0xf2, 0x0f, 0x10, 0x41, 0x18,             /*e8: movsd  0x18(%rcx),%xmm0 */
0x66, 0x0f, 0x2e, 0x42, 0x18,             /*ed: ucomisd 0x18(%rdx),%xmm0 */
0x0f, 0x97, 0xc1,                         /*f2: seta   %cl */
0x0f, 0xb6, 0xc9,                         /*f5: movzbl %cl,%ecx */
0x85, 0xc9,                               /*f8: test   %ecx,%ecx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fa: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*ff: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*102: movq   $0x0,(%rax,%rcx,8) */
0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00, /*10a: movl   $0x2,(%rax,%rcx,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*111: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*116: movslq %ecx,%rcx */
0x74, 0x0a,                               /*119: je     125 <op_gt+0x125> */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*11b: movq   $0x4,(%rax,%rcx,8) */
0xeb, 0x27,                               /*123: jmp    14c <op_gt+0x14c> */
0x48, 0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00,/*125: movq   $0x2,(%rax,%rcx,8) */
0xeb, 0x1d,                               /*12d: jmp    14c <op_gt+0x14c> */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*12f: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*134: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*139: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*13e: mov    $0x0,%r8d */
0x4c, 0x89, 0xf7,                         /*144: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*147: callq  14c <op_gt+0x14c> */
0x4c, 0x89, 0xf7,                         /*14c: mov    %r14,%rdi */
0x5b,                                     /*14f: pop    %rbx */
0x41, 0x5e,                               /*150: pop    %r14 */

};
static uint8_t op_gt__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};

static void op_gt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_gt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_gt_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_ge__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x46, 0x18,                   /*6: mov    0x18(%r14),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*f: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*12: mov    (%rax,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*16: cmp    $0x7,%rcx */
0x73, 0x13,                               /*1a: jae    2f <op_ge+0x2f> */
0xba, 0x55, 0x00, 0x00, 0x00,             /*1c: mov    $0x55,%edx */
0x0f, 0xa3, 0xca,                         /*21: bt     %ecx,%edx */
0x73, 0x09,                               /*24: jae    2f <op_ge+0x2f> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*26: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*2d: jmp    49 <op_ge+0x49> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*2f: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*34: test   $0x1,%cl */
0x75, 0x10,                               /*37: jne    49 <op_ge+0x49> */
0x0f, 0xb6, 0xd1,                         /*39: movzbl %cl,%edx */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*3c: mov    $0x4,%esi */
0x83, 0xfa, 0x0e,                         /*41: cmp    $0xe,%edx */
0x74, 0x03,                               /*44: je     49 <op_ge+0x49> */
0x0f, 0xb6, 0x31,                         /*46: movzbl (%rcx),%esi */
0xc1, 0xe6, 0x08,                         /*49: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*4c: and    $0xffff00,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*52: mov    $0x0,%edx */
0xff, 0xc2,                               /*57: inc    %edx */
0x48, 0x63, 0xd2,                         /*59: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*5c: mov    (%rax,%rdx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*60: cmp    $0x7,%rdx */
0x73, 0x13,                               /*64: jae    79 <op_ge+0x79> */
0xbf, 0x55, 0x00, 0x00, 0x00,             /*66: mov    $0x55,%edi */
0x0f, 0xa3, 0xd7,                         /*6b: bt     %edx,%edi */
0x73, 0x09,                               /*6e: jae    79 <op_ge+0x79> */
0x8b, 0x3c, 0x95, 0x00, 0x00, 0x00, 0x00, /*70: mov    0x0(,%rdx,4),%edi */
0xeb, 0x1a,                               /*77: jmp    93 <op_ge+0x93> */
0xbf, 0x03, 0x00, 0x00, 0x00,             /*79: mov    $0x3,%edi */
0xf6, 0xc2, 0x01,                         /*7e: test   $0x1,%dl */
0x75, 0x10,                               /*81: jne    93 <op_ge+0x93> */
0x0f, 0xb6, 0xda,                         /*83: movzbl %dl,%ebx */
0xbf, 0x04, 0x00, 0x00, 0x00,             /*86: mov    $0x4,%edi */
0x83, 0xfb, 0x0e,                         /*8b: cmp    $0xe,%ebx */
0x74, 0x03,                               /*8e: je     93 <op_ge+0x93> */
0x0f, 0xb6, 0x3a,                         /*90: movzbl (%rdx),%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*93: movzbl %dil,%edi */
0x09, 0xf7,                               /*97: or     %esi,%edi */
0x81, 0xff, 0x02, 0x06, 0x00, 0x00,       /*99: cmp    $0x602,%edi */
0x7f, 0x13,                               /*9f: jg     b4 <op_ge+0xb4> */
0x81, 0xff, 0x03, 0x03, 0x00, 0x00,       /*a1: cmp    $0x303,%edi */
0x75, 0x27,                               /*a7: jne    d0 <op_ge+0xd0> */
0xd1, 0xf9,                               /*a9: sar    %ecx */
0xd1, 0xfa,                               /*ab: sar    %edx */
0x39, 0xd1,                               /*ad: cmp    %edx,%ecx */
0x0f, 0x9d, 0xc1,                         /*af: setge  %cl */
0xeb, 0x41,                               /*b2: jmp    f5 <op_ge+0xf5> */
0x81, 0xff, 0x03, 0x06, 0x00, 0x00,       /*b4: cmp    $0x603,%edi */
0x75, 0x24,                               /*ba: jne    e0 <op_ge+0xe0> */
0xf2, 0x0f, 0x10, 0x41, 0x18,             /*bc: movsd  0x18(%rcx),%xmm0 */
0xd1, 0xfa,                               /*c1: sar    %edx */
0xf2, 0x0f, 0x2a, 0xca,                   /*c3: cvtsi2sd %edx,%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*c7: ucomisd %xmm1,%xmm0 */
0x0f, 0x93, 0xc1,                         /*cb: setae  %cl */
0xeb, 0x25,                               /*ce: jmp    f5 <op_ge+0xf5> */
0x81, 0xff, 0x06, 0x03, 0x00, 0x00,       /*d0: cmp    $0x306,%edi */
0x75, 0x57,                               /*d6: jne    12f <op_ge+0x12f> */
0xd1, 0xf9,                               /*d8: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*da: cvtsi2sd %ecx,%xmm0 */
0xeb, 0x0d,                               /*de: jmp    ed <op_ge+0xed> */
0x81, 0xff, 0x06, 0x06, 0x00, 0x00,       /*e0: cmp    $0x606,%edi */
0x75, 0x47,                               /*e6: jne    12f <op_ge+0x12f> */
0xf2, 0x0f, 0x10, 0x41, 0x18,             /*e8: movsd  0x18(%rcx),%xmm0 */
0x66, 0x0f, 0x2e, 0x42, 0x18,             /*ed: ucomisd 0x18(%rdx),%xmm0 */
0x0f, 0x93, 0xc1,                         /*f2: setae  %cl */
0x0f, 0xb6, 0xc9,                         /*f5: movzbl %cl,%ecx */
0x85, 0xc9,                               /*f8: test   %ecx,%ecx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fa: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*ff: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*102: movq   $0x0,(%rax,%rcx,8) */
0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00, /*10a: movl   $0x2,(%rax,%rcx,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*111: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*116: movslq %ecx,%rcx */
0x74, 0x0a,                               /*119: je     125 <op_ge+0x125> */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*11b: movq   $0x4,(%rax,%rcx,8) */
0xeb, 0x27,                               /*123: jmp    14c <op_ge+0x14c> */
0x48, 0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00,/*125: movq   $0x2,(%rax,%rcx,8) */
0xeb, 0x1d,                               /*12d: jmp    14c <op_ge+0x14c> */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*12f: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*134: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*139: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*13e: mov    $0x0,%r8d */
0x4c, 0x89, 0xf7,                         /*144: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*147: callq  14c <op_ge+0x14c> */
0x4c, 0x89, 0xf7,                         /*14c: mov    %r14,%rdi */
0x5b,                                     /*14f: pop    %rbx */
0x41, 0x5e,                               /*150: pop    %r14 */

};
static uint8_t op_ge__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};

static void op_ge_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_ge_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_ge_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_array__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x4c, 0x8b, 0x73, 0x18,                   /*6: mov    0x18(%rbx),%r14 */
0x48, 0x8b, 0x7b, 0x50,                   /*a: mov    0x50(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%eax */
0x49, 0x8d, 0x14, 0xc6,                   /*13: lea    (%r14,%rax,8),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_array+0x21> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%ecx */
0x49, 0x89, 0x04, 0xce,                   /*26: mov    %rax,(%r14,%rcx,8) */
0x8b, 0x43, 0x48,                         /*2a: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*2d: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*31: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*37: mov    %rbx,%rdi */
0x5b,                                     /*3a: pop    %rbx */
0x41, 0x5e,                               /*3b: pop    %r14 */

};
static uint8_t op_array__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_array_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_array_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_array_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_arycat__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0x4c, 0x8b, 0x7b, 0x18,                   /*8: mov    0x18(%rbx),%r15 */
0x4c, 0x8b, 0x73, 0x50,                   /*c: mov    0x50(%rbx),%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%eax */
0x49, 0x8b, 0x34, 0xc7,                   /*15: mov    (%r15,%rax,8),%rsi */
0x4c, 0x89, 0xf7,                         /*19: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_arycat+0x21> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%ecx */
0x49, 0x8b, 0x34, 0xcf,                   /*26: mov    (%r15,%rcx,8),%rsi */
0x4c, 0x89, 0xf7,                         /*2a: mov    %r14,%rdi */
0x48, 0x89, 0xc2,                         /*2d: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*30: callq  35 <op_arycat+0x35> */
0x8b, 0x43, 0x48,                         /*35: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*38: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*3c: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*42: mov    %rbx,%rdi */
0x5b,                                     /*45: pop    %rbx */
0x41, 0x5e,                               /*46: pop    %r14 */
0x41, 0x5f,                               /*48: pop    %r15 */

};
static uint8_t op_arycat__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_arycat_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_arycat_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_arycat_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_arypush__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*8: mov    0x50(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*11: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*1a: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e: callq  23 <op_arypush+0x23> */
0x48, 0x89, 0xdf,                         /*23: mov    %rbx,%rdi */
0x5b,                                     /*26: pop    %rbx */

};
static uint8_t op_arypush__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_arypush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_arypush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_arypush_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_aref__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x4c, 0x8b, 0x73, 0x18,                   /*6: mov    0x18(%rbx),%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%eax */
0x49, 0x8b, 0x34, 0xc6,                   /*f: mov    (%r14,%rax,8),%rsi */
0x48, 0x83, 0xfe, 0x06,                   /*13: cmp    $0x6,%rsi */
0x77, 0x0b,                               /*17: ja     24 <op_aref+0x24> */
0xb8, 0x55, 0x00, 0x00, 0x00,             /*19: mov    $0x55,%eax */
0x48, 0x0f, 0xa3, 0xf0,                   /*1e: bt     %rsi,%rax */
0x72, 0x30,                               /*22: jb     54 <op_aref+0x54> */
0x40, 0xf6, 0xc6, 0x01,                   /*24: test   $0x1,%sil */
0x75, 0x2a,                               /*28: jne    54 <op_aref+0x54> */
0x40, 0x0f, 0xb6, 0xc6,                   /*2a: movzbl %sil,%eax */
0x83, 0xf8, 0x0e,                         /*2e: cmp    $0xe,%eax */
0x74, 0x21,                               /*31: je     54 <op_aref+0x54> */
0x0f, 0xb6, 0x06,                         /*33: movzbl (%rsi),%eax */
0x83, 0xf8, 0x0e,                         /*36: cmp    $0xe,%eax */
0x75, 0x19,                               /*39: jne    54 <op_aref+0x54> */
0x48, 0x8b, 0x7b, 0x50,                   /*3b: mov    0x50(%rbx),%rdi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3f: mov    $0x0,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*44: callq  49 <op_aref+0x49> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*49: mov    $0x0,%ecx */
0x49, 0x89, 0x04, 0xce,                   /*4e: mov    %rax,(%r14,%rcx,8) */
0xeb, 0x37,                               /*52: jmp    8b <op_aref+0x8b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*54: mov    $0x0,%eax */
0x85, 0xc0,                               /*59: test   %eax,%eax */
0x75, 0x0b,                               /*5b: jne    68 <op_aref+0x68> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5d: mov    $0x0,%eax */
0x49, 0x89, 0x34, 0xc6,                   /*62: mov    %rsi,(%r14,%rax,8) */
0xeb, 0x23,                               /*66: jmp    8b <op_aref+0x8b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*68: mov    $0x0,%eax */
0x48, 0x98,                               /*6d: cltq */
0x49, 0xc7, 0x04, 0xc6, 0x00, 0x00, 0x00, 0x00,/*6f: movq   $0x0,(%r14,%rax,8) */
0x48, 0x8b, 0x4b, 0x18,                   /*77: mov    0x18(%rbx),%rcx */
0x83, 0x24, 0xc1, 0x01,                   /*7b: andl   $0x1,(%rcx,%rax,8) */
0x48, 0x8b, 0x4b, 0x18,                   /*7f: mov    0x18(%rbx),%rcx */
0x48, 0xc7, 0x04, 0xc1, 0x00, 0x00, 0x00, 0x00,/*83: movq   $0x0,(%rcx,%rax,8) */
0x48, 0x89, 0xdf,                         /*8b: mov    %rbx,%rdi */
0x5b,                                     /*8e: pop    %rbx */
0x41, 0x5e,                               /*8f: pop    %r14 */

};
static uint8_t op_aref__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_aref_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_aref_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_aref_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_aset__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*8: mov    0x50(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*11: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x8b, 0x0c, 0xc8,                   /*1a: mov    (%rax,%rcx,8),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1e: mov    $0x0,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*23: callq  28 <op_aset+0x28> */
0x48, 0x89, 0xdf,                         /*28: mov    %rbx,%rdi */
0x5b,                                     /*2b: pop    %rbx */

};
static uint8_t op_aset__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_aset_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_aset_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_aset_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_apost__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x54,                               /*5: push   %r12 */
0x53,                                     /*7: push   %rbx */
0x48, 0x89, 0xfb,                         /*8: mov    %rdi,%rbx */
0x4c, 0x8b, 0x63, 0x18,                   /*b: mov    0x18(%rbx),%r12 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%eax */
0x48, 0x98,                               /*14: cltq */
0x4d, 0x8b, 0x34, 0xc4,                   /*16: mov    (%r12,%rax,8),%r14 */
0x49, 0x83, 0xfe, 0x06,                   /*1a: cmp    $0x6,%r14 */
0x77, 0x0f,                               /*1e: ja     2f <op_apost+0x2f> */
0xb8, 0x55, 0x00, 0x00, 0x00,             /*20: mov    $0x55,%eax */
0x4c, 0x0f, 0xa3, 0xf0,                   /*25: bt     %r14,%rax */
0x0f, 0x82, 0xa5, 0x00, 0x00, 0x00,       /*29: jb     d4 <op_apost+0xd4> */
0x41, 0xf6, 0xc6, 0x01,                   /*2f: test   $0x1,%r14b */
0x0f, 0x85, 0x9b, 0x00, 0x00, 0x00,       /*33: jne    d4 <op_apost+0xd4> */
0x41, 0x0f, 0xb6, 0xc6,                   /*39: movzbl %r14b,%eax */
0x83, 0xf8, 0x0e,                         /*3d: cmp    $0xe,%eax */
0x0f, 0x84, 0x8e, 0x00, 0x00, 0x00,       /*40: je     d4 <op_apost+0xd4> */
0x41, 0x0f, 0xb6, 0x06,                   /*46: movzbl (%r14),%eax */
0x83, 0xf8, 0x0e,                         /*4a: cmp    $0xe,%eax */
0x0f, 0x85, 0x81, 0x00, 0x00, 0x00,       /*4d: jne    d4 <op_apost+0xd4> */
0x45, 0x8b, 0x7e, 0x18,                   /*53: mov    0x18(%r14),%r15d */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*57: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5c: mov    $0x0,%ecx */
0x01, 0xc1,                               /*61: add    %eax,%ecx */
0x48, 0x8b, 0x7b, 0x50,                   /*63: mov    0x50(%rbx),%rdi */
0x41, 0x39, 0xcf,                         /*67: cmp    %ecx,%r15d */
0x0f, 0x8e, 0xbd, 0x00, 0x00, 0x00,       /*6a: jle    12d <op_apost+0x12d> */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*70: mov    $0x0,%ebp */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*75: mov    $0x0,%esi */
0x48, 0x63, 0xc6,                         /*7a: movslq %esi,%rax */
0xf7, 0xde,                               /*7d: neg    %esi */
0x29, 0xee,                               /*7f: sub    %ebp,%esi */
0x44, 0x01, 0xfe,                         /*81: add    %r15d,%esi */
0x49, 0x8b, 0x4e, 0x28,                   /*84: mov    0x28(%r14),%rcx */
0x48, 0x8d, 0x14, 0xc1,                   /*88: lea    (%rcx,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8c: callq  91 <op_apost+0x91> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*91: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*96: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xcc,                   /*99: mov    %rax,(%r12,%rcx,8) */
0x85, 0xed,                               /*9d: test   %ebp,%ebp */
0x0f, 0x84, 0x43, 0x01, 0x00, 0x00,       /*9f: je     1e8 <op_apost+0x1e8> */
0xf7, 0xdd,                               /*a5: neg    %ebp */
0x48, 0x8d, 0x04, 0xcd, 0x08, 0x00, 0x00, 0x00,/*a7: lea    0x8(,%rcx,8),%rax */
0x90,                                     /*af: nop */
0x48, 0x8b, 0x4b, 0x18,                   /*b0: mov    0x18(%rbx),%rcx */
0x41, 0x8d, 0x14, 0x2f,                   /*b4: lea    (%r15,%rbp,1),%edx */
0x48, 0x63, 0xd2,                         /*b8: movslq %edx,%rdx */
0x49, 0x8b, 0x76, 0x28,                   /*bb: mov    0x28(%r14),%rsi */
0x48, 0x8b, 0x14, 0xd6,                   /*bf: mov    (%rsi,%rdx,8),%rdx */
0x48, 0x89, 0x14, 0x01,                   /*c3: mov    %rdx,(%rcx,%rax,1) */
0x48, 0x83, 0xc0, 0x08,                   /*c7: add    $0x8,%rax */
0xff, 0xc5,                               /*cb: inc    %ebp */
0x75, 0xe1,                               /*cd: jne    b0 <op_apost+0xb0> */
0xe9, 0x14, 0x01, 0x00, 0x00,             /*cf: jmpq   1e8 <op_apost+0x1e8> */
0x48, 0x8b, 0x7b, 0x50,                   /*d4: mov    0x50(%rbx),%rdi */
0x31, 0xf6,                               /*d8: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*da: callq  df <op_apost+0xdf> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*df: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*e4: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xcc,                   /*e7: mov    %rax,(%r12,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*eb: mov    $0x0,%eax */
0x85, 0xc0,                               /*f0: test   %eax,%eax */
0x0f, 0x84, 0xf0, 0x00, 0x00, 0x00,       /*f2: je     1e8 <op_apost+0x1e8> */
0x48, 0xff, 0xc1,                         /*f8: inc    %rcx */
0x0f, 0x1f, 0x44, 0x00, 0x00,             /*fb: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x53, 0x18,                   /*100: mov    0x18(%rbx),%rdx */
0x48, 0xc7, 0x04, 0xca, 0x00, 0x00, 0x00, 0x00,/*104: movq   $0x0,(%rdx,%rcx,8) */
0x48, 0x8b, 0x53, 0x18,                   /*10c: mov    0x18(%rbx),%rdx */
0x83, 0x24, 0xca, 0x01,                   /*110: andl   $0x1,(%rdx,%rcx,8) */
0xff, 0xc8,                               /*114: dec    %eax */
0x48, 0x8b, 0x53, 0x18,                   /*116: mov    0x18(%rbx),%rdx */
0x48, 0xc7, 0x04, 0xca, 0x00, 0x00, 0x00, 0x00,/*11a: movq   $0x0,(%rdx,%rcx,8) */
0x48, 0x8d, 0x49, 0x01,                   /*122: lea    0x1(%rcx),%rcx */
0x75, 0xd8,                               /*126: jne    100 <op_apost+0x100> */
0xe9, 0xbb, 0x00, 0x00, 0x00,             /*128: jmpq   1e8 <op_apost+0x1e8> */
0x31, 0xed,                               /*12d: xor    %ebp,%ebp */
0x31, 0xf6,                               /*12f: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*131: callq  136 <op_apost+0x136> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*136: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*13b: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xcc,                   /*13e: mov    %rax,(%r12,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*142: mov    $0x0,%eax */
0x41, 0x39, 0xc7,                         /*147: cmp    %eax,%r15d */
0x7e, 0x43,                               /*14a: jle    18f <op_apost+0x18f> */
0x41, 0x8d, 0x6f, 0xff,                   /*14c: lea    -0x1(%r15),%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*150: mov    $0x0,%eax */
0x29, 0xc5,                               /*155: sub    %eax,%ebp */
0x41, 0x29, 0xc7,                         /*157: sub    %eax,%r15d */
0x48, 0x98,                               /*15a: cltq */
0x48, 0xc1, 0xe0, 0x03,                   /*15c: shl    $0x3,%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*160: mov    $0x0,%ecx */
0xff, 0xc1,                               /*165: inc    %ecx */
0x48, 0x63, 0xc9,                         /*167: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x03,                   /*16a: shl    $0x3,%rcx */
0x66, 0x90,                               /*16e: xchg   %ax,%ax */
0x48, 0x8b, 0x53, 0x18,                   /*170: mov    0x18(%rbx),%rdx */
0x49, 0x8b, 0x76, 0x28,                   /*174: mov    0x28(%r14),%rsi */
0x48, 0x8b, 0x34, 0x06,                   /*178: mov    (%rsi,%rax,1),%rsi */
0x48, 0x89, 0x34, 0x0a,                   /*17c: mov    %rsi,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x08,                   /*180: add    $0x8,%rcx */
0x48, 0x83, 0xc0, 0x08,                   /*184: add    $0x8,%rax */
0x41, 0xff, 0xcf,                         /*188: dec    %r15d */
0x75, 0xe3,                               /*18b: jne    170 <op_apost+0x170> */
0xff, 0xc5,                               /*18d: inc    %ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*18f: mov    $0x0,%eax */
0x39, 0xc5,                               /*194: cmp    %eax,%ebp */
0x7d, 0x50,                               /*196: jge    1e8 <op_apost+0x1e8> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*198: mov    $0x0,%eax */
0x29, 0xe8,                               /*19d: sub    %ebp,%eax */
0x48, 0x63, 0xd5,                         /*19f: movslq %ebp,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a2: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1a7: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1a9: movslq %ecx,%rcx */
0x48, 0x01, 0xd1,                         /*1ac: add    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x03,                   /*1af: shl    $0x3,%rcx */
0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1b3: data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x53, 0x18,                   /*1c0: mov    0x18(%rbx),%rdx */
0x48, 0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00,/*1c4: movq   $0x0,(%rdx,%rcx,1) */
0x48, 0x8b, 0x53, 0x18,                   /*1cc: mov    0x18(%rbx),%rdx */
0x83, 0x24, 0x0a, 0x01,                   /*1d0: andl   $0x1,(%rdx,%rcx,1) */
0x48, 0x8b, 0x53, 0x18,                   /*1d4: mov    0x18(%rbx),%rdx */
0x48, 0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00,/*1d8: movq   $0x0,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x08,                   /*1e0: add    $0x8,%rcx */
0xff, 0xc8,                               /*1e4: dec    %eax */
0x75, 0xd8,                               /*1e6: jne    1c0 <op_apost+0x1c0> */
0x8b, 0x43, 0x48,                         /*1e8: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*1eb: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*1ef: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*1f5: mov    %rbx,%rdi */
0x5b,                                     /*1f8: pop    %rbx */
0x41, 0x5c,                               /*1f9: pop    %r12 */
0x41, 0x5e,                               /*1fb: pop    %r14 */
0x41, 0x5f,                               /*1fd: pop    %r15 */
0x5d,                                     /*1ff: pop    %rbp */

};
static uint8_t op_apost__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_apost_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_apost_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_apost_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_string__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*6: mov    0x50(%rbx),%rdi */
0x4c, 0x8b, 0x73, 0x18,                   /*a: mov    0x18(%rbx),%r14 */
0x48, 0x8b, 0x43, 0x20,                   /*e: mov    0x20(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*17: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1b: callq  20 <op_string+0x20> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%ecx */
0x49, 0x89, 0x04, 0xce,                   /*25: mov    %rax,(%r14,%rcx,8) */
0x8b, 0x43, 0x48,                         /*29: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*2c: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*30: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*36: mov    %rbx,%rdi */
0x5b,                                     /*39: pop    %rbx */
0x41, 0x5e,                               /*3a: pop    %r14 */

};
static uint8_t op_string__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_string_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_string_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_string_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_strcat__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*8: mov    0x50(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*11: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*1a: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e: callq  23 <op_strcat+0x23> */
0x48, 0x89, 0xdf,                         /*23: mov    %rbx,%rdi */
0x5b,                                     /*26: pop    %rbx */

};
static uint8_t op_strcat__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_strcat_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_strcat_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_strcat_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_hash__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x53,                                     /*5: push   %rbx */
0x48, 0x89, 0xfb,                         /*6: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*9: mov    $0x0,%eax */
0x89, 0x44, 0x24, 0x04,                   /*e: mov    %eax,0x4(%rsp) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%eax */
0x89, 0x04, 0x24,                         /*17: mov    %eax,(%rsp) */
0x8b, 0x44, 0x24, 0x04,                   /*1a: mov    0x4(%rsp),%eax */
0x8b, 0x0c, 0x24,                         /*1e: mov    (%rsp),%ecx */
0x44, 0x8d, 0x3c, 0x48,                   /*21: lea    (%rax,%rcx,2),%r15d */
0x48, 0x8b, 0x7b, 0x50,                   /*25: mov    0x50(%rbx),%rdi */
0x8b, 0x34, 0x24,                         /*29: mov    (%rsp),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2c: callq  31 <op_hash+0x31> */
0x49, 0x89, 0xc6,                         /*31: mov    %rax,%r14 */
0xeb, 0x36,                               /*34: jmp    6c <op_hash+0x6c> */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*36: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x7b, 0x50,                   /*40: mov    0x50(%rbx),%rdi */
0x48, 0x63, 0x44, 0x24, 0x04,             /*44: movslq 0x4(%rsp),%rax */
0x48, 0x8b, 0x4b, 0x18,                   /*49: mov    0x18(%rbx),%rcx */
0x48, 0x63, 0x74, 0x24, 0x04,             /*4d: movslq 0x4(%rsp),%rsi */
0x48, 0x8b, 0x6b, 0x18,                   /*52: mov    0x18(%rbx),%rbp */
0x48, 0x8b, 0x14, 0xc1,                   /*56: mov    (%rcx,%rax,8),%rdx */
0x48, 0x8b, 0x4c, 0xf5, 0x08,             /*5a: mov    0x8(%rbp,%rsi,8),%rcx */
0x4c, 0x89, 0xf6,                         /*5f: mov    %r14,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*62: callq  67 <op_hash+0x67> */
0x83, 0x44, 0x24, 0x04, 0x02,             /*67: addl   $0x2,0x4(%rsp) */
0x8b, 0x44, 0x24, 0x04,                   /*6c: mov    0x4(%rsp),%eax */
0x44, 0x39, 0xf8,                         /*70: cmp    %r15d,%eax */
0x7c, 0xcb,                               /*73: jl     40 <op_hash+0x40> */
0x48, 0x8b, 0x43, 0x18,                   /*75: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*79: mov    $0x0,%ecx */
0x4c, 0x89, 0x34, 0xc8,                   /*7e: mov    %r14,(%rax,%rcx,8) */
0x8b, 0x43, 0x48,                         /*82: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*85: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*89: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*8f: mov    %rbx,%rdi */
0x5b,                                     /*92: pop    %rbx */
0x41, 0x5e,                               /*93: pop    %r14 */
0x41, 0x5f,                               /*95: pop    %r15 */
0x5d,                                     /*97: pop    %rbp */

};
static uint8_t op_hash__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_hash_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_hash_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_hash_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_lambda__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*9: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*13: callq  18 <op_lambda+0x18> */
0x48, 0x89, 0xdf,                         /*18: mov    %rbx,%rdi */
0x5b,                                     /*1b: pop    %rbx */

};
static uint8_t op_lambda__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_lambda_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_lambda_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_lambda_set_args(op, GETARG_A(c),GETARG_b(c),GETARG_c(c),op_idx);
}


/* args: {} */
static uint8_t op_range__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x4c, 0x8b, 0x73, 0x18,                   /*6: mov    0x18(%rbx),%r14 */
0x48, 0x8b, 0x7b, 0x50,                   /*a: mov    0x50(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%eax */
0x48, 0x98,                               /*13: cltq */
0x49, 0x8b, 0x34, 0xc6,                   /*15: mov    (%r14,%rax,8),%rsi */
0xff, 0xc0,                               /*19: inc    %eax */
0x48, 0x98,                               /*1b: cltq */
0x49, 0x8b, 0x14, 0xc6,                   /*1d: mov    (%r14,%rax,8),%rdx */
0xb9, 0x01, 0x00, 0x00, 0x00,             /*21: mov    $0x1,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_range+0x2b> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2b: mov    $0x0,%ecx */
0x49, 0x89, 0x04, 0xce,                   /*30: mov    %rax,(%r14,%rcx,8) */
0x8b, 0x43, 0x48,                         /*34: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*37: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*3b: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*41: mov    %rbx,%rdi */
0x5b,                                     /*44: pop    %rbx */
0x41, 0x5e,                               /*45: pop    %r14 */

};
static uint8_t op_range__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_range_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_range_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_range_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_oclass__text[] = {
0x4c, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%r8 */
0x48, 0x8b, 0x47, 0x50,                   /*4: mov    0x50(%rdi),%rax */
0x48, 0x8b, 0x48, 0x40,                   /*8: mov    0x40(%rax),%rcx */
0x8b, 0x31,                               /*c: mov    (%rcx),%esi */
0x40, 0x0f, 0xb6, 0xc6,                   /*e: movzbl %sil,%eax */
0xba, 0x04, 0x00, 0x00, 0x00,             /*12: mov    $0x4,%edx */
0x83, 0xf8, 0x05,                         /*17: cmp    $0x5,%eax */
0x77, 0x15,                               /*1a: ja     31 <op_oclass+0x31> */
0xff, 0x24, 0xc5, 0x00, 0x00, 0x00, 0x00, /*1c: jmpq   *0x0(,%rax,8) */
0x48, 0x85, 0xc9,                         /*23: test   %rcx,%rcx */
0x0f, 0x95, 0xc0,                         /*26: setne  %al */
0x0f, 0xb6, 0xd0,                         /*29: movzbl %al,%edx */
0x48, 0x01, 0xd2,                         /*2c: add    %rdx,%rdx */
0xeb, 0x20,                               /*2f: jmp    51 <op_oclass+0x51> */
0x48, 0x85, 0xc9,                         /*31: test   %rcx,%rcx */
0x48, 0x89, 0xca,                         /*34: mov    %rcx,%rdx */
0x74, 0x18,                               /*37: je     51 <op_oclass+0x51> */
0x89, 0x31,                               /*39: mov    %esi,(%rcx) */
0xeb, 0x11,                               /*3b: jmp    4e <op_oclass+0x4e> */
0x48, 0x83, 0xc9, 0x01,                   /*3d: or     $0x1,%rcx */
0xeb, 0x0b,                               /*41: jmp    4e <op_oclass+0x4e> */
0x48, 0x81, 0xe1, 0x00, 0xff, 0xff, 0xff, /*43: and    $0xffffffffffffff00,%rcx */
0x48, 0x83, 0xc9, 0x0e,                   /*4a: or     $0xe,%rcx */
0x48, 0x89, 0xca,                         /*4e: mov    %rcx,%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%eax */
0x49, 0x89, 0x14, 0xc0,                   /*56: mov    %rdx,(%r8,%rax,8) */
0xeb, 0x07,                               /*5a: jmp    63 <A1313123456789101213141516171819202112456791011121314121234567891011121314123456789101112131445234623123445234645234645234611123456789123456789123451234567891011121345678912373456745686712371212+0x33> */
0xba, 0x06, 0x00, 0x00, 0x00,             /*5c: mov    $0x6,%edx */
0xeb, 0xee,                               /*61: jmp    51 <op_oclass+0x51> */

};
static uint8_t op_oclass__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_oclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_oclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_oclass_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_class__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*8: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%edx */
0x8b, 0x0c, 0x91,                         /*11: mov    (%rcx,%rdx,4),%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*19: movslq %edx,%rdx */
0x48, 0x8b, 0x34, 0xd0,                   /*1c: mov    (%rax,%rdx,8),%rsi */
0xff, 0xc2,                               /*20: inc    %edx */
0x48, 0x63, 0xd2,                         /*22: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*25: mov    (%rax,%rdx,8),%rdx */
0x48, 0x85, 0xf6,                         /*29: test   %rsi,%rsi */
0x75, 0x56,                               /*2c: jne    84 <op_class+0x84> */
0x48, 0x8b, 0x43, 0x50,                   /*2e: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*32: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*36: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x48,                   /*3a: mov    0x48(%rax),%rax */
0x44, 0x8b, 0x00,                         /*3e: mov    (%rax),%r8d */
0x41, 0x0f, 0xb6, 0xf8,                   /*41: movzbl %r8b,%edi */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*45: mov    $0x4,%esi */
0x83, 0xff, 0x05,                         /*4a: cmp    $0x5,%edi */
0x77, 0x15,                               /*4d: ja     64 <op_class+0x64> */
0xff, 0x24, 0xfd, 0x00, 0x00, 0x00, 0x00, /*4f: jmpq   *0x0(,%rdi,8) */
0x48, 0x85, 0xc0,                         /*56: test   %rax,%rax */
0x0f, 0x95, 0xc0,                         /*59: setne  %al */
0x0f, 0xb6, 0xf0,                         /*5c: movzbl %al,%esi */
0x48, 0x01, 0xf6,                         /*5f: add    %rsi,%rsi */
0xeb, 0x20,                               /*62: jmp    84 <op_class+0x84> */
0x48, 0x85, 0xc0,                         /*64: test   %rax,%rax */
0x48, 0x89, 0xc6,                         /*67: mov    %rax,%rsi */
0x74, 0x18,                               /*6a: je     84 <op_class+0x84> */
0x44, 0x89, 0x00,                         /*6c: mov    %r8d,(%rax) */
0xeb, 0x10,                               /*6f: jmp    81 <op_class+0x81> */
0x48, 0x83, 0xc8, 0x01,                   /*71: or     $0x1,%rax */
0xeb, 0x0a,                               /*75: jmp    81 <op_class+0x81> */
0x48, 0x25, 0x00, 0xff, 0xff, 0xff,       /*77: and    $0xffffffffffffff00,%rax */
0x48, 0x83, 0xc8, 0x0e,                   /*7d: or     $0xe,%rax */
0x48, 0x89, 0xc6,                         /*81: mov    %rax,%rsi */
0x48, 0x8b, 0x7b, 0x50,                   /*84: mov    0x50(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*88: callq  8d <op_class+0x8d> */
0x48, 0x8b, 0x4b, 0x18,                   /*8d: mov    0x18(%rbx),%rcx */
0x8b, 0x30,                               /*91: mov    (%rax),%esi */
0x40, 0x0f, 0xb6, 0xfe,                   /*93: movzbl %sil,%edi */
0xba, 0x04, 0x00, 0x00, 0x00,             /*97: mov    $0x4,%edx */
0x83, 0xff, 0x05,                         /*9c: cmp    $0x5,%edi */
0x77, 0x15,                               /*9f: ja     b6 <op_class+0xb6> */
0xff, 0x24, 0xfd, 0x00, 0x00, 0x00, 0x00, /*a1: jmpq   *0x0(,%rdi,8) */
0x48, 0x85, 0xc0,                         /*a8: test   %rax,%rax */
0x0f, 0x95, 0xc0,                         /*ab: setne  %al */
0x0f, 0xb6, 0xd0,                         /*ae: movzbl %al,%edx */
0x48, 0x01, 0xd2,                         /*b1: add    %rdx,%rdx */
0xeb, 0x1f,                               /*b4: jmp    d5 <op_class+0xd5> */
0x48, 0x85, 0xc0,                         /*b6: test   %rax,%rax */
0x48, 0x89, 0xc2,                         /*b9: mov    %rax,%rdx */
0x74, 0x17,                               /*bc: je     d5 <op_class+0xd5> */
0x89, 0x30,                               /*be: mov    %esi,(%rax) */
0xeb, 0x10,                               /*c0: jmp    d2 <op_class+0xd2> */
0x48, 0x83, 0xc8, 0x01,                   /*c2: or     $0x1,%rax */
0xeb, 0x0a,                               /*c6: jmp    d2 <op_class+0xd2> */
0x48, 0x25, 0x00, 0xff, 0xff, 0xff,       /*c8: and    $0xffffffffffffff00,%rax */
0x48, 0x83, 0xc8, 0x0e,                   /*ce: or     $0xe,%rax */
0x48, 0x89, 0xc2,                         /*d2: mov    %rax,%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*d5: mov    $0x0,%eax */
0x48, 0x98,                               /*da: cltq */
0x48, 0x89, 0x14, 0xc1,                   /*dc: mov    %rdx,(%rcx,%rax,8) */
0x8b, 0x43, 0x48,                         /*e0: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*e3: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*e7: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*ed: mov    %rbx,%rdi */
0x5b,                                     /*f0: pop    %rbx */
0xeb, 0x0e,                               /*f1: jmp    101 <Bx2424381231512315123151231512312123121312345456812123712345456812+0x99> */
0xba, 0x06, 0x00, 0x00, 0x00,             /*f3: mov    $0x6,%edx */
0xeb, 0xdb,                               /*f8: jmp    d5 <op_class+0xd5> */
0xbe, 0x06, 0x00, 0x00, 0x00,             /*fa: mov    $0x6,%esi */
0xeb, 0x83,                               /*ff: jmp    84 <op_class+0x84> */

};
static uint8_t op_class__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_class_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_class_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_class_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_module__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*8: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%edx */
0x8b, 0x14, 0x91,                         /*11: mov    (%rcx,%rdx,4),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*19: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*1c: mov    (%rax,%rcx,8),%rsi */
0x48, 0x85, 0xf6,                         /*20: test   %rsi,%rsi */
0x75, 0x53,                               /*23: jne    78 <op_module+0x78> */
0x48, 0x8b, 0x43, 0x50,                   /*25: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*29: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*2d: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x48,                   /*31: mov    0x48(%rax),%rax */
0x8b, 0x08,                               /*35: mov    (%rax),%ecx */
0x0f, 0xb6, 0xf9,                         /*37: movzbl %cl,%edi */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*3a: mov    $0x4,%esi */
0x83, 0xff, 0x05,                         /*3f: cmp    $0x5,%edi */
0x77, 0x15,                               /*42: ja     59 <op_module+0x59> */
0xff, 0x24, 0xfd, 0x00, 0x00, 0x00, 0x00, /*44: jmpq   *0x0(,%rdi,8) */
0x48, 0x85, 0xc0,                         /*4b: test   %rax,%rax */
0x0f, 0x95, 0xc0,                         /*4e: setne  %al */
0x0f, 0xb6, 0xf0,                         /*51: movzbl %al,%esi */
0x48, 0x01, 0xf6,                         /*54: add    %rsi,%rsi */
0xeb, 0x1f,                               /*57: jmp    78 <op_module+0x78> */
0x48, 0x85, 0xc0,                         /*59: test   %rax,%rax */
0x48, 0x89, 0xc6,                         /*5c: mov    %rax,%rsi */
0x74, 0x17,                               /*5f: je     78 <op_module+0x78> */
0x89, 0x08,                               /*61: mov    %ecx,(%rax) */
0xeb, 0x10,                               /*63: jmp    75 <op_module+0x75> */
0x48, 0x83, 0xc8, 0x01,                   /*65: or     $0x1,%rax */
0xeb, 0x0a,                               /*69: jmp    75 <op_module+0x75> */
0x48, 0x25, 0x00, 0xff, 0xff, 0xff,       /*6b: and    $0xffffffffffffff00,%rax */
0x48, 0x83, 0xc8, 0x0e,                   /*71: or     $0xe,%rax */
0x48, 0x89, 0xc6,                         /*75: mov    %rax,%rsi */
0x48, 0x8b, 0x7b, 0x50,                   /*78: mov    0x50(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c: callq  81 <op_module+0x81> */
0x48, 0x8b, 0x4b, 0x18,                   /*81: mov    0x18(%rbx),%rcx */
0x8b, 0x30,                               /*85: mov    (%rax),%esi */
0x40, 0x0f, 0xb6, 0xfe,                   /*87: movzbl %sil,%edi */
0xba, 0x04, 0x00, 0x00, 0x00,             /*8b: mov    $0x4,%edx */
0x83, 0xff, 0x05,                         /*90: cmp    $0x5,%edi */
0x77, 0x15,                               /*93: ja     aa <op_module+0xaa> */
0xff, 0x24, 0xfd, 0x00, 0x00, 0x00, 0x00, /*95: jmpq   *0x0(,%rdi,8) */
0x48, 0x85, 0xc0,                         /*9c: test   %rax,%rax */
0x0f, 0x95, 0xc0,                         /*9f: setne  %al */
0x0f, 0xb6, 0xd0,                         /*a2: movzbl %al,%edx */
0x48, 0x01, 0xd2,                         /*a5: add    %rdx,%rdx */
0xeb, 0x1f,                               /*a8: jmp    c9 <op_module+0xc9> */
0x48, 0x85, 0xc0,                         /*aa: test   %rax,%rax */
0x48, 0x89, 0xc2,                         /*ad: mov    %rax,%rdx */
0x74, 0x17,                               /*b0: je     c9 <op_module+0xc9> */
0x89, 0x30,                               /*b2: mov    %esi,(%rax) */
0xeb, 0x10,                               /*b4: jmp    c6 <op_module+0xc6> */
0x48, 0x83, 0xc8, 0x01,                   /*b6: or     $0x1,%rax */
0xeb, 0x0a,                               /*ba: jmp    c6 <op_module+0xc6> */
0x48, 0x25, 0x00, 0xff, 0xff, 0xff,       /*bc: and    $0xffffffffffffff00,%rax */
0x48, 0x83, 0xc8, 0x0e,                   /*c2: or     $0xe,%rax */
0x48, 0x89, 0xc2,                         /*c6: mov    %rax,%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c9: mov    $0x0,%eax */
0x48, 0x98,                               /*ce: cltq */
0x48, 0x89, 0x14, 0xc1,                   /*d0: mov    %rdx,(%rcx,%rax,8) */
0x8b, 0x43, 0x48,                         /*d4: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*d7: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*db: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*e1: mov    %rbx,%rdi */
0x5b,                                     /*e4: pop    %rbx */
0xeb, 0x0e,                               /*e5: jmp    f5 <Bx242438123151231512315123151231212312131234545681212371234545681212+0x8d> */
0xba, 0x06, 0x00, 0x00, 0x00,             /*e7: mov    $0x6,%edx */
0xeb, 0xdb,                               /*ec: jmp    c9 <op_module+0xc9> */
0xbe, 0x06, 0x00, 0x00, 0x00,             /*ee: mov    $0x6,%esi */
0xeb, 0x83,                               /*f3: jmp    78 <op_module+0x78> */

};
static uint8_t op_module__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_module_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_module_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_module_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_exec__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x54,                               /*4: push   %r12 */
0x53,                                     /*6: push   %rbx */
0x49, 0x89, 0xfe,                         /*7: mov    %rdi,%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%eax */
0x4c, 0x63, 0xe0,                         /*f: movslq %eax,%r12 */
0x49, 0x8b, 0x46, 0x18,                   /*12: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x7e, 0x50,                   /*16: mov    0x50(%r14),%rdi */
0x4e, 0x8b, 0x3c, 0xe0,                   /*1a: mov    (%rax,%r12,8),%r15 */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e: callq  23 <op_exec+0x23> */
0x48, 0x89, 0xc3,                         /*23: mov    %rax,%rbx */
0x49, 0x8b, 0x46, 0x10,                   /*26: mov    0x10(%r14),%rax */
0x48, 0x83, 0xc0, 0x04,                   /*2a: add    $0x4,%rax */
0x48, 0x89, 0x43, 0x30,                   /*2e: mov    %rax,0x30(%rbx) */
0x4a, 0x8d, 0x04, 0xe5, 0x00, 0x00, 0x00, 0x00,/*32: lea    0x0(,%r12,8),%rax */
0x44, 0x89, 0x63, 0x44,                   /*3a: mov    %r12d,0x44(%rbx) */
0xc7, 0x03, 0x00, 0x00, 0x00, 0x00,       /*3e: movl   $0x0,(%rbx) */
0x49, 0x8b, 0x4e, 0x50,                   /*44: mov    0x50(%r14),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*48: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*4c: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x4b, 0x10,                   /*50: mov    %rcx,0x10(%rbx) */
0xc7, 0x43, 0x40, 0x00, 0x00, 0x00, 0x00, /*54: movl   $0x0,0x40(%rbx) */
0x4c, 0x89, 0x7b, 0x48,                   /*5b: mov    %r15,0x48(%rbx) */
0x49, 0x8b, 0x4e, 0x50,                   /*5f: mov    0x50(%r14),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*63: mov    0x18(%rcx),%rcx */
0x48, 0x01, 0x41, 0x08,                   /*67: add    %rax,0x8(%rcx) */
0x49, 0x8b, 0x46, 0x08,                   /*6b: mov    0x8(%r14),%rax */
0x49, 0x8b, 0x7e, 0x50,                   /*6f: mov    0x50(%r14),%rdi */
0x48, 0x8b, 0x40, 0x20,                   /*73: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*77: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*7c: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*80: callq  85 <op_exec+0x85> */
0x49, 0x89, 0xc4,                         /*85: mov    %rax,%r12 */
0x48, 0x8b, 0x43, 0x48,                   /*88: mov    0x48(%rbx),%rax */
0x49, 0x89, 0x44, 0x24, 0x20,             /*8c: mov    %rax,0x20(%r12) */
0x4c, 0x89, 0x63, 0x08,                   /*91: mov    %r12,0x8(%rbx) */
0x41, 0xf6, 0x44, 0x24, 0x02, 0x04,       /*95: testb  $0x4,0x2(%r12) */
0x74, 0x40,                               /*9b: je     dd <op_exec+0xdd> */
0xc7, 0x43, 0x18, 0x00, 0x00, 0x00, 0x00, /*9d: movl   $0x0,0x18(%rbx) */
0x49, 0x8b, 0x7e, 0x50,                   /*a4: mov    0x50(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*a8: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*ac: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xfe,                         /*b0: mov    %r15,%rsi */
0x41, 0xff, 0x54, 0x24, 0x18,             /*b3: callq  *0x18(%r12) */
0x48, 0x89, 0x03,                         /*b8: mov    %rax,(%rbx) */
0x49, 0x8b, 0x7e, 0x50,                   /*bb: mov    0x50(%r14),%rdi */
0x41, 0x8b, 0x76, 0x48,                   /*bf: mov    0x48(%r14),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c3: callq  c8 <op_exec+0xc8> */
0x49, 0x8b, 0x46, 0x50,                   /*c8: mov    0x50(%r14),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*cc: cmpq   $0x0,0x28(%rax) */
0x74, 0x69,                               /*d1: je     13c <op_exec+0x13c> */
0x4c, 0x89, 0xf7,                         /*d3: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*d6: callq  db <op_exec+0xdb> */
0xeb, 0x7c,                               /*db: jmp    159 <op_exec+0x159> */
0x49, 0x8b, 0x44, 0x24, 0x18,             /*dd: mov    0x18(%r12),%rax */
0x49, 0x89, 0x46, 0x08,                   /*e2: mov    %rax,0x8(%r14) */
0x48, 0x8b, 0x48, 0x10,                   /*e6: mov    0x10(%rax),%rcx */
0x49, 0x89, 0x4e, 0x20,                   /*ea: mov    %rcx,0x20(%r14) */
0x48, 0x8b, 0x48, 0x18,                   /*ee: mov    0x18(%rax),%rcx */
0x49, 0x89, 0x4e, 0x28,                   /*f2: mov    %rcx,0x28(%r14) */
0x49, 0x8b, 0x7e, 0x50,                   /*f6: mov    0x50(%r14),%rdi */
0x0f, 0xb7, 0x70, 0x02,                   /*fa: movzwl 0x2(%rax),%esi */
0xba, 0x01, 0x00, 0x00, 0x00,             /*fe: mov    $0x1,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*103: callq  108 <op_exec+0x108> */
0x49, 0x8b, 0x46, 0x08,                   /*108: mov    0x8(%r14),%rax */
0x0f, 0xb7, 0x40, 0x02,                   /*10c: movzwl 0x2(%rax),%eax */
0x89, 0x43, 0x18,                         /*110: mov    %eax,0x18(%rbx) */
0x49, 0x8b, 0x7e, 0x50,                   /*113: mov    0x50(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*117: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*11b: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x18,                   /*11f: mov    %rax,0x18(%r14) */
0x49, 0x8b, 0x46, 0x08,                   /*123: mov    0x8(%r14),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*127: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x10,                   /*12b: mov    %rax,0x10(%r14) */
0x4c, 0x89, 0xe6,                         /*12f: mov    %r12,%rsi */
0x4c, 0x89, 0xf2,                         /*132: mov    %r14,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*135: callq  13a <op_exec+0x13a> */
0xeb, 0x1d,                               /*13a: jmp    159 <op_exec+0x159> */
0x48, 0x8b, 0x40, 0x18,                   /*13c: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*140: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*144: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*148: mov    %rcx,0x8(%rax) */
0x49, 0x89, 0x4e, 0x18,                   /*14c: mov    %rcx,0x18(%r14) */
0x49, 0x8b, 0x7e, 0x50,                   /*150: mov    0x50(%r14),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*154: callq  159 <op_exec+0x159> */
0x4c, 0x89, 0xf7,                         /*159: mov    %r14,%rdi */
0x5b,                                     /*15c: pop    %rbx */
0x41, 0x5c,                               /*15d: pop    %r12 */
0x41, 0x5e,                               /*15f: pop    %r14 */
0x41, 0x5f,                               /*161: pop    %r15 */

};
static uint8_t op_exec__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_exec_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_exec_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_exec_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_method__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x48, 0x98,                               /*9: cltq */
0x48, 0x8b, 0x4b, 0x18,                   /*b: mov    0x18(%rbx),%rcx */
0x4c, 0x8b, 0x43, 0x28,                   /*f: mov    0x28(%rbx),%r8 */
0x48, 0x8b, 0x34, 0xc1,                   /*13: mov    (%rcx,%rax,8),%rsi */
0x48, 0x8b, 0x7b, 0x50,                   /*17: mov    0x50(%rbx),%rdi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%edx */
0x41, 0x8b, 0x14, 0x90,                   /*20: mov    (%r8,%rdx,4),%edx */
0xff, 0xc0,                               /*24: inc    %eax */
0x48, 0x98,                               /*26: cltq */
0x48, 0x8b, 0x0c, 0xc1,                   /*28: mov    (%rcx,%rax,8),%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2c: callq  31 <op_method+0x31> */
0x8b, 0x43, 0x48,                         /*31: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*34: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*38: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*3e: mov    %rbx,%rdi */
0x5b,                                     /*41: pop    %rbx */

};
static uint8_t op_method__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_method_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_method_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_method_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_sclass__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x4c, 0x8b, 0x73, 0x18,                   /*6: mov    0x18(%rbx),%r14 */
0x48, 0x8b, 0x7b, 0x50,                   /*a: mov    0x50(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%eax */
0x49, 0x8b, 0x34, 0xc6,                   /*13: mov    (%r14,%rax,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*17: callq  1c <op_sclass+0x1c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%ecx */
0x49, 0x89, 0x04, 0xce,                   /*21: mov    %rax,(%r14,%rcx,8) */
0x8b, 0x43, 0x48,                         /*25: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*28: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*2c: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*32: mov    %rbx,%rdi */
0x5b,                                     /*35: pop    %rbx */
0x41, 0x5e,                               /*36: pop    %r14 */

};
static uint8_t op_sclass__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_sclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sclass_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_tclass__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0x49, 0x8b, 0x5e, 0x50,                   /*8: mov    0x50(%r14),%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*c: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*10: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x48, 0x48,                   /*14: mov    0x48(%rax),%rcx */
0x48, 0x85, 0xc9,                         /*18: test   %rcx,%rcx */
0x74, 0x22,                               /*1b: je     3f <op_tclass+0x3f> */
0x49, 0x8b, 0x46, 0x18,                   /*1d: mov    0x18(%r14),%rax */
0x8b, 0x31,                               /*21: mov    (%rcx),%esi */
0x40, 0x0f, 0xb6, 0xfe,                   /*23: movzbl %sil,%edi */
0xba, 0x04, 0x00, 0x00, 0x00,             /*27: mov    $0x4,%edx */
0x83, 0xff, 0x05,                         /*2c: cmp    $0x5,%edi */
0x77, 0x52,                               /*2f: ja     83 <op_tclass+0x83> */
0xff, 0x24, 0xfd, 0x00, 0x00, 0x00, 0x00, /*31: jmpq   *0x0(,%rdi,8) */
0xba, 0x02, 0x00, 0x00, 0x00,             /*38: mov    $0x2,%edx */
0xeb, 0x49,                               /*3d: jmp    88 <op_tclass+0x88> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3f: mov    0x0(%rip),%rsi        # 46 <op_tclass+0x46> */
0x48, 0x89, 0xdf,                         /*46: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*49: callq  4e <op_tclass+0x4e> */
0x49, 0x89, 0xc7,                         /*4e: mov    %rax,%r15 */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%esi */
0xba, 0x19, 0x00, 0x00, 0x00,             /*56: mov    $0x19,%edx */
0x48, 0x89, 0xdf,                         /*5b: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*5e: callq  63 <op_tclass+0x63> */
0x48, 0x89, 0xdf,                         /*63: mov    %rbx,%rdi */
0x4c, 0x89, 0xfe,                         /*66: mov    %r15,%rsi */
0x48, 0x89, 0xc2,                         /*69: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6c: callq  71 <op_tclass+0x71> */
0x49, 0x8b, 0x4e, 0x50,                   /*71: mov    0x50(%r14),%rcx */
0x48, 0x89, 0x41, 0x28,                   /*75: mov    %rax,0x28(%rcx) */
0x4c, 0x89, 0xf7,                         /*79: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c: callq  81 <op_tclass+0x81> */
0xeb, 0x0e,                               /*81: jmp    91 <op_tclass+0x91> */
0x89, 0x31,                               /*83: mov    %esi,(%rcx) */
0x48, 0x89, 0xca,                         /*85: mov    %rcx,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*88: mov    $0x0,%ecx */
0x48, 0x89, 0x14, 0xc8,                   /*8d: mov    %rdx,(%rax,%rcx,8) */
0x4c, 0x89, 0xf7,                         /*91: mov    %r14,%rdi */
0x5b,                                     /*94: pop    %rbx */
0x41, 0x5e,                               /*95: pop    %r14 */
0x41, 0x5f,                               /*97: pop    %r15 */
0xeb, 0x1a,                               /*99: jmp    b5 <A13131234567891012131415161718192021124567910111213141212345678910111213141234567891011121314452346231234452346452346452346111234567891234567891234512345678910111213456789123734567456867123712126723+0x65> */
0x48, 0x83, 0xc9, 0x01,                   /*9b: or     $0x1,%rcx */
0xeb, 0xe4,                               /*9f: jmp    85 <op_tclass+0x85> */
0x48, 0x81, 0xe1, 0x00, 0xff, 0xff, 0xff, /*a1: and    $0xffffffffffffff00,%rcx */
0x48, 0x83, 0xc9, 0x0e,                   /*a8: or     $0xe,%rcx */
0xeb, 0xd7,                               /*ac: jmp    85 <op_tclass+0x85> */
0xba, 0x06, 0x00, 0x00, 0x00,             /*ae: mov    $0x6,%edx */
0xeb, 0xd3,                               /*b3: jmp    88 <op_tclass+0x88> */

};
static uint8_t op_tclass__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x6e, 0x6f, 0x20, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x20,
0x6f, 0x72, 0x20, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_tclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_tclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_tclass_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_debug__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*9: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13: mov    $0x0,%ecx */
0x31, 0xc0,                               /*18: xor    %eax,%eax */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1a: callq  1f <op_debug+0x1f> */
0x48, 0x89, 0xdf,                         /*1f: mov    %rbx,%rdi */
0x5b,                                     /*22: pop    %rbx */

};
static uint8_t op_debug__rodata[] = {
0x4f, 0x50, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x20, 0x25, 0x64, 0x20, 0x25, 0x64, 0x20, 0x25,
0x64, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_debug_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_debug_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_debug_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_stop__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*4: callq  9 <op_stop+0x9> */
0x48, 0x89, 0xdf,                         /*9: mov    %rbx,%rdi */
0x5b,                                     /*c: pop    %rbx */

};
static uint8_t op_stop__rodata[] = {

};

static void op_stop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_stop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_stop_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_err__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x20,                   /*8: mov    0x20(%rbx),%rax */
0x4c, 0x8b, 0x73, 0x50,                   /*c: mov    0x50(%rbx),%r14 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*15: mov    (%rax,%rcx,8),%rsi */
0x4c, 0x89, 0xf7,                         /*19: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_err+0x21> */
0x49, 0x89, 0xc7,                         /*21: mov    %rax,%r15 */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*24: mov    0x0(%rip),%rsi        # 2b <op_err+0x2b> */
0x4c, 0x89, 0xf7,                         /*2b: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_err+0x33> */
0x4c, 0x89, 0xf7,                         /*33: mov    %r14,%rdi */
0x48, 0x89, 0xc6,                         /*36: mov    %rax,%rsi */
0x4c, 0x89, 0xfa,                         /*39: mov    %r15,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3c: callq  41 <op_err+0x41> */
0x48, 0x8b, 0x4b, 0x50,                   /*41: mov    0x50(%rbx),%rcx */
0x48, 0x89, 0x41, 0x28,                   /*45: mov    %rax,0x28(%rcx) */
0x48, 0x89, 0xdf,                         /*49: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*4c: callq  51 <op_err+0x51> */
0x48, 0x89, 0xdf,                         /*51: mov    %rbx,%rdi */
0x5b,                                     /*54: pop    %rbx */
0x41, 0x5e,                               /*55: pop    %r14 */
0x41, 0x5f,                               /*57: pop    %r15 */

};
static uint8_t op_err__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_err_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_err_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_err_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}

typedef void (*jit_args_func_t)(uint8_t *op, mrb_code c, uint32_t op_idx);
typedef void (*jit_link_func_t)(uint8_t *op, uint8_t *data);
static jit_args_func_t arg_funcs[78];
extern jit_link_func_t link_funcs[];
uint8_t* ops_text[78];
uint8_t* ops_rodata[78];
static char *op_names[78];

static size_t op_sizes_text[] = {
  sizeof(op_nop__text), /* 0 */
  sizeof(op_move__text), /* 22 */
  sizeof(op_loadl__text), /* 26 */
  sizeof(op_loadi__text), /* 47 */
  sizeof(op_loadsym__text), /* 45 */
  sizeof(op_loadnil__text), /* 37 */
  sizeof(op_loadself__text), /* 16 */
  sizeof(op_loadt__text), /* 45 */
  sizeof(op_loadf__text), /* 45 */
  sizeof(op_getglobal__text), /* 46 */
  sizeof(op_setglobal__text), /* 42 */
  sizeof(op_getspecial__text), /* 39 */
  sizeof(op_setspecial__text), /* 35 */
  sizeof(op_getiv__text), /* 46 */
  sizeof(op_setiv__text), /* 42 */
  sizeof(op_getcv__text), /* 86 */
  sizeof(op_setcv__text), /* 42 */
  sizeof(op_getconst__text), /* 94 */
  sizeof(op_setconst__text), /* 42 */
  sizeof(op_getmcnst__text), /* 109 */
  sizeof(op_setmcnst__text), /* 55 */
  sizeof(op_getupvar__text), /* 111 */
  sizeof(op_setupvar__text), /* 112 */
  sizeof(op_jmp__text), /* 0 */
  sizeof(op_jmpif__text), /* 19 */
  sizeof(op_jmpnot__text), /* 19 */
  sizeof(op_onerr__text), /* 151 */
  sizeof(op_rescue__text), /* 209 */
  sizeof(op_poperr__text), /* 35 */
  sizeof(op_raise__text), /* 34 */
  sizeof(op_epush__text), /* 169 */
  sizeof(op_epop__text), /* 99 */
  sizeof(op_send__text), /* 106 */
  sizeof(op_sendb__text), /* 51 */
  sizeof(op_fsend__text), /* 0 */
  sizeof(op_call__text), /* 419 */
  sizeof(op_super__text), /* 903 */
  sizeof(op_argary__text), /* 704 */
  sizeof(op_enter__text), /* 2125 */
  sizeof(op_enter_method_m__text), /* 483 */
  sizeof(op_karg__text), /* 0 */
  sizeof(op_kdict__text), /* 0 */
  sizeof(op_return__text), /* 38 */
  sizeof(op_break__text), /* 24 */
  sizeof(op_tailcall__text), /* 938 */
  sizeof(op_blkpush__text), /* 200 */
  sizeof(op_add__text), /* 368 */
  sizeof(op_addi__text), /* 227 */
  sizeof(op_sub__text), /* 321 */
  sizeof(op_subi__text), /* 221 */
  sizeof(op_mul__text), /* 362 */
  sizeof(op_div__text), /* 280 */
  sizeof(op_eq__text), /* 376 */
  sizeof(op_lt__text), /* 338 */
  sizeof(op_le__text), /* 338 */
  sizeof(op_gt__text), /* 338 */
  sizeof(op_ge__text), /* 338 */
  sizeof(op_array__text), /* 61 */
  sizeof(op_arycat__text), /* 74 */
  sizeof(op_arypush__text), /* 39 */
  sizeof(op_aref__text), /* 145 */
  sizeof(op_aset__text), /* 44 */
  sizeof(op_apost__text), /* 512 */
  sizeof(op_string__text), /* 60 */
  sizeof(op_strcat__text), /* 39 */
  sizeof(op_hash__text), /* 152 */
  sizeof(op_lambda__text), /* 28 */
  sizeof(op_range__text), /* 71 */
  sizeof(op_oclass__text), /* 99 */
  sizeof(op_class__text), /* 257 */
  sizeof(op_module__text), /* 245 */
  sizeof(op_exec__text), /* 355 */
  sizeof(op_method__text), /* 66 */
  sizeof(op_sclass__text), /* 56 */
  sizeof(op_tclass__text), /* 181 */
  sizeof(op_debug__text), /* 35 */
  sizeof(op_stop__text), /* 13 */
  sizeof(op_err__text), /* 89 */

};
static size_t op_sizes_rodata[] = {
  sizeof(op_nop__rodata), /* 0 */
  sizeof(op_move__rodata), /* 16 */
  sizeof(op_loadl__rodata), /* 16 */
  sizeof(op_loadi__rodata), /* 16 */
  sizeof(op_loadsym__rodata), /* 16 */
  sizeof(op_loadnil__rodata), /* 8 */
  sizeof(op_loadself__rodata), /* 8 */
  sizeof(op_loadt__rodata), /* 8 */
  sizeof(op_loadf__rodata), /* 8 */
  sizeof(op_getglobal__rodata), /* 16 */
  sizeof(op_setglobal__rodata), /* 16 */
  sizeof(op_getspecial__rodata), /* 16 */
  sizeof(op_setspecial__rodata), /* 16 */
  sizeof(op_getiv__rodata), /* 16 */
  sizeof(op_setiv__rodata), /* 16 */
  sizeof(op_getcv__rodata), /* 16 */
  sizeof(op_setcv__rodata), /* 16 */
  sizeof(op_getconst__rodata), /* 16 */
  sizeof(op_setconst__rodata), /* 16 */
  sizeof(op_getmcnst__rodata), /* 16 */
  sizeof(op_setmcnst__rodata), /* 16 */
  sizeof(op_getupvar__rodata), /* 24 */
  sizeof(op_setupvar__rodata), /* 24 */
  sizeof(op_jmp__rodata), /* 0 */
  sizeof(op_jmpif__rodata), /* 0 */
  sizeof(op_jmpnot__rodata), /* 0 */
  sizeof(op_onerr__rodata), /* 8 */
  sizeof(op_rescue__rodata), /* 56 */
  sizeof(op_poperr__rodata), /* 8 */
  sizeof(op_raise__rodata), /* 8 */
  sizeof(op_epush__rodata), /* 8 */
  sizeof(op_epop__rodata), /* 8 */
  sizeof(op_send__rodata), /* 24 */
  sizeof(op_sendb__rodata), /* 24 */
  sizeof(op_fsend__rodata), /* 0 */
  sizeof(op_call__rodata), /* 8 */
  sizeof(op_super__rodata), /* 62 */
  sizeof(op_argary__rodata), /* 47 */
  sizeof(op_enter__rodata), /* 99 */
  sizeof(op_enter_method_m__rodata), /* 60 */
  sizeof(op_karg__rodata), /* 0 */
  sizeof(op_kdict__rodata), /* 0 */
  sizeof(op_return__rodata), /* 8 */
  sizeof(op_break__rodata), /* 16 */
  sizeof(op_tailcall__rodata), /* 159 */
  sizeof(op_blkpush__rodata), /* 16 */
  sizeof(op_add__rodata), /* 44 */
  sizeof(op_addi__rodata), /* 24 */
  sizeof(op_sub__rodata), /* 44 */
  sizeof(op_subi__rodata), /* 24 */
  sizeof(op_mul__rodata), /* 44 */
  sizeof(op_div__rodata), /* 44 */
  sizeof(op_eq__rodata), /* 60 */
  sizeof(op_lt__rodata), /* 60 */
  sizeof(op_le__rodata), /* 60 */
  sizeof(op_gt__rodata), /* 60 */
  sizeof(op_ge__rodata), /* 60 */
  sizeof(op_array__rodata), /* 24 */
  sizeof(op_arycat__rodata), /* 16 */
  sizeof(op_arypush__rodata), /* 16 */
  sizeof(op_aref__rodata), /* 32 */
  sizeof(op_aset__rodata), /* 24 */
  sizeof(op_apost__rodata), /* 24 */
  sizeof(op_string__rodata), /* 16 */
  sizeof(op_strcat__rodata), /* 16 */
  sizeof(op_hash__rodata), /* 24 */
  sizeof(op_lambda__rodata), /* 24 */
  sizeof(op_range__rodata), /* 16 */
  sizeof(op_oclass__rodata), /* 56 */
  sizeof(op_class__rodata), /* 112 */
  sizeof(op_module__rodata), /* 112 */
  sizeof(op_exec__rodata), /* 16 */
  sizeof(op_method__rodata), /* 16 */
  sizeof(op_sclass__rodata), /* 16 */
  sizeof(op_tclass__rodata), /* 88 */
  sizeof(op_debug__rodata), /* 48 */
  sizeof(op_stop__rodata), /* 0 */
  sizeof(op_err__rodata), /* 8 */

};
static int8_t op_algn_text[] = {
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,

};
static int8_t op_algn_rodata[] = {
  -1,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  -1,
  -1,
  -1,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  -1,
  8,
  16,
  16,
  16,
  16,
  -1,
  -1,
  8,
  8,
  8,
  8,
  16,
  8,
  16,
  8,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  8,
  16,
  16,
  -1,
  8,

};

extern void init_linker();
void init_ops() {
  static int init = 0;
  if(init == 0) {
    init = 1;
    init_linker();
    ops_text[0] = op_nop__text;
    ops_rodata[0] = op_nop__rodata;
    op_names[0] = "op_nop";
    arg_funcs[0] = op_nop_set_args_from_code;
    ops_text[1] = op_move__text;
    ops_rodata[1] = op_move__rodata;
    op_names[1] = "op_move";
    arg_funcs[1] = op_move_set_args_from_code;
    ops_text[2] = op_loadl__text;
    ops_rodata[2] = op_loadl__rodata;
    op_names[2] = "op_loadl";
    arg_funcs[2] = op_loadl_set_args_from_code;
    ops_text[3] = op_loadi__text;
    ops_rodata[3] = op_loadi__rodata;
    op_names[3] = "op_loadi";
    arg_funcs[3] = op_loadi_set_args_from_code;
    ops_text[4] = op_loadsym__text;
    ops_rodata[4] = op_loadsym__rodata;
    op_names[4] = "op_loadsym";
    arg_funcs[4] = op_loadsym_set_args_from_code;
    ops_text[5] = op_loadnil__text;
    ops_rodata[5] = op_loadnil__rodata;
    op_names[5] = "op_loadnil";
    arg_funcs[5] = op_loadnil_set_args_from_code;
    ops_text[6] = op_loadself__text;
    ops_rodata[6] = op_loadself__rodata;
    op_names[6] = "op_loadself";
    arg_funcs[6] = op_loadself_set_args_from_code;
    ops_text[7] = op_loadt__text;
    ops_rodata[7] = op_loadt__rodata;
    op_names[7] = "op_loadt";
    arg_funcs[7] = op_loadt_set_args_from_code;
    ops_text[8] = op_loadf__text;
    ops_rodata[8] = op_loadf__rodata;
    op_names[8] = "op_loadf";
    arg_funcs[8] = op_loadf_set_args_from_code;
    ops_text[9] = op_getglobal__text;
    ops_rodata[9] = op_getglobal__rodata;
    op_names[9] = "op_getglobal";
    arg_funcs[9] = op_getglobal_set_args_from_code;
    ops_text[10] = op_setglobal__text;
    ops_rodata[10] = op_setglobal__rodata;
    op_names[10] = "op_setglobal";
    arg_funcs[10] = op_setglobal_set_args_from_code;
    ops_text[11] = op_getspecial__text;
    ops_rodata[11] = op_getspecial__rodata;
    op_names[11] = "op_getspecial";
    arg_funcs[11] = op_getspecial_set_args_from_code;
    ops_text[12] = op_setspecial__text;
    ops_rodata[12] = op_setspecial__rodata;
    op_names[12] = "op_setspecial";
    arg_funcs[12] = op_setspecial_set_args_from_code;
    ops_text[13] = op_getiv__text;
    ops_rodata[13] = op_getiv__rodata;
    op_names[13] = "op_getiv";
    arg_funcs[13] = op_getiv_set_args_from_code;
    ops_text[14] = op_setiv__text;
    ops_rodata[14] = op_setiv__rodata;
    op_names[14] = "op_setiv";
    arg_funcs[14] = op_setiv_set_args_from_code;
    ops_text[15] = op_getcv__text;
    ops_rodata[15] = op_getcv__rodata;
    op_names[15] = "op_getcv";
    arg_funcs[15] = op_getcv_set_args_from_code;
    ops_text[16] = op_setcv__text;
    ops_rodata[16] = op_setcv__rodata;
    op_names[16] = "op_setcv";
    arg_funcs[16] = op_setcv_set_args_from_code;
    ops_text[17] = op_getconst__text;
    ops_rodata[17] = op_getconst__rodata;
    op_names[17] = "op_getconst";
    arg_funcs[17] = op_getconst_set_args_from_code;
    ops_text[18] = op_setconst__text;
    ops_rodata[18] = op_setconst__rodata;
    op_names[18] = "op_setconst";
    arg_funcs[18] = op_setconst_set_args_from_code;
    ops_text[19] = op_getmcnst__text;
    ops_rodata[19] = op_getmcnst__rodata;
    op_names[19] = "op_getmcnst";
    arg_funcs[19] = op_getmcnst_set_args_from_code;
    ops_text[20] = op_setmcnst__text;
    ops_rodata[20] = op_setmcnst__rodata;
    op_names[20] = "op_setmcnst";
    arg_funcs[20] = op_setmcnst_set_args_from_code;
    ops_text[21] = op_getupvar__text;
    ops_rodata[21] = op_getupvar__rodata;
    op_names[21] = "op_getupvar";
    arg_funcs[21] = op_getupvar_set_args_from_code;
    ops_text[22] = op_setupvar__text;
    ops_rodata[22] = op_setupvar__rodata;
    op_names[22] = "op_setupvar";
    arg_funcs[22] = op_setupvar_set_args_from_code;
    ops_text[23] = op_jmp__text;
    ops_rodata[23] = op_jmp__rodata;
    op_names[23] = "op_jmp";
    arg_funcs[23] = op_jmp_set_args_from_code;
    ops_text[24] = op_jmpif__text;
    ops_rodata[24] = op_jmpif__rodata;
    op_names[24] = "op_jmpif";
    arg_funcs[24] = op_jmpif_set_args_from_code;
    ops_text[25] = op_jmpnot__text;
    ops_rodata[25] = op_jmpnot__rodata;
    op_names[25] = "op_jmpnot";
    arg_funcs[25] = op_jmpnot_set_args_from_code;
    ops_text[26] = op_onerr__text;
    ops_rodata[26] = op_onerr__rodata;
    op_names[26] = "op_onerr";
    arg_funcs[26] = op_onerr_set_args_from_code;
    ops_text[27] = op_rescue__text;
    ops_rodata[27] = op_rescue__rodata;
    op_names[27] = "op_rescue";
    arg_funcs[27] = op_rescue_set_args_from_code;
    ops_text[28] = op_poperr__text;
    ops_rodata[28] = op_poperr__rodata;
    op_names[28] = "op_poperr";
    arg_funcs[28] = op_poperr_set_args_from_code;
    ops_text[29] = op_raise__text;
    ops_rodata[29] = op_raise__rodata;
    op_names[29] = "op_raise";
    arg_funcs[29] = op_raise_set_args_from_code;
    ops_text[30] = op_epush__text;
    ops_rodata[30] = op_epush__rodata;
    op_names[30] = "op_epush";
    arg_funcs[30] = op_epush_set_args_from_code;
    ops_text[31] = op_epop__text;
    ops_rodata[31] = op_epop__rodata;
    op_names[31] = "op_epop";
    arg_funcs[31] = op_epop_set_args_from_code;
    ops_text[32] = op_send__text;
    ops_rodata[32] = op_send__rodata;
    op_names[32] = "op_send";
    arg_funcs[32] = op_send_set_args_from_code;
    ops_text[33] = op_sendb__text;
    ops_rodata[33] = op_sendb__rodata;
    op_names[33] = "op_sendb";
    arg_funcs[33] = op_sendb_set_args_from_code;
    ops_text[34] = op_fsend__text;
    ops_rodata[34] = op_fsend__rodata;
    op_names[34] = "op_fsend";
    arg_funcs[34] = op_fsend_set_args_from_code;
    ops_text[35] = op_call__text;
    ops_rodata[35] = op_call__rodata;
    op_names[35] = "op_call";
    arg_funcs[35] = op_call_set_args_from_code;
    ops_text[36] = op_super__text;
    ops_rodata[36] = op_super__rodata;
    op_names[36] = "op_super";
    arg_funcs[36] = op_super_set_args_from_code;
    ops_text[37] = op_argary__text;
    ops_rodata[37] = op_argary__rodata;
    op_names[37] = "op_argary";
    arg_funcs[37] = op_argary_set_args_from_code;
    ops_text[38] = op_enter__text;
    ops_rodata[38] = op_enter__rodata;
    op_names[38] = "op_enter";
    arg_funcs[38] = op_enter_set_args_from_code;
    ops_text[39] = op_enter_method_m__text;
    ops_rodata[39] = op_enter_method_m__rodata;
    op_names[39] = "op_enter_method_m";
    arg_funcs[39] = op_enter_method_m_set_args_from_code;
    ops_text[40] = op_karg__text;
    ops_rodata[40] = op_karg__rodata;
    op_names[40] = "op_karg";
    arg_funcs[40] = op_karg_set_args_from_code;
    ops_text[41] = op_kdict__text;
    ops_rodata[41] = op_kdict__rodata;
    op_names[41] = "op_kdict";
    arg_funcs[41] = op_kdict_set_args_from_code;
    ops_text[42] = op_return__text;
    ops_rodata[42] = op_return__rodata;
    op_names[42] = "op_return";
    arg_funcs[42] = op_return_set_args_from_code;
    ops_text[43] = op_break__text;
    ops_rodata[43] = op_break__rodata;
    op_names[43] = "op_break";
    arg_funcs[43] = op_break_set_args_from_code;
    ops_text[44] = op_tailcall__text;
    ops_rodata[44] = op_tailcall__rodata;
    op_names[44] = "op_tailcall";
    arg_funcs[44] = op_tailcall_set_args_from_code;
    ops_text[45] = op_blkpush__text;
    ops_rodata[45] = op_blkpush__rodata;
    op_names[45] = "op_blkpush";
    arg_funcs[45] = op_blkpush_set_args_from_code;
    ops_text[46] = op_add__text;
    ops_rodata[46] = op_add__rodata;
    op_names[46] = "op_add";
    arg_funcs[46] = op_add_set_args_from_code;
    ops_text[47] = op_addi__text;
    ops_rodata[47] = op_addi__rodata;
    op_names[47] = "op_addi";
    arg_funcs[47] = op_addi_set_args_from_code;
    ops_text[48] = op_sub__text;
    ops_rodata[48] = op_sub__rodata;
    op_names[48] = "op_sub";
    arg_funcs[48] = op_sub_set_args_from_code;
    ops_text[49] = op_subi__text;
    ops_rodata[49] = op_subi__rodata;
    op_names[49] = "op_subi";
    arg_funcs[49] = op_subi_set_args_from_code;
    ops_text[50] = op_mul__text;
    ops_rodata[50] = op_mul__rodata;
    op_names[50] = "op_mul";
    arg_funcs[50] = op_mul_set_args_from_code;
    ops_text[51] = op_div__text;
    ops_rodata[51] = op_div__rodata;
    op_names[51] = "op_div";
    arg_funcs[51] = op_div_set_args_from_code;
    ops_text[52] = op_eq__text;
    ops_rodata[52] = op_eq__rodata;
    op_names[52] = "op_eq";
    arg_funcs[52] = op_eq_set_args_from_code;
    ops_text[53] = op_lt__text;
    ops_rodata[53] = op_lt__rodata;
    op_names[53] = "op_lt";
    arg_funcs[53] = op_lt_set_args_from_code;
    ops_text[54] = op_le__text;
    ops_rodata[54] = op_le__rodata;
    op_names[54] = "op_le";
    arg_funcs[54] = op_le_set_args_from_code;
    ops_text[55] = op_gt__text;
    ops_rodata[55] = op_gt__rodata;
    op_names[55] = "op_gt";
    arg_funcs[55] = op_gt_set_args_from_code;
    ops_text[56] = op_ge__text;
    ops_rodata[56] = op_ge__rodata;
    op_names[56] = "op_ge";
    arg_funcs[56] = op_ge_set_args_from_code;
    ops_text[57] = op_array__text;
    ops_rodata[57] = op_array__rodata;
    op_names[57] = "op_array";
    arg_funcs[57] = op_array_set_args_from_code;
    ops_text[58] = op_arycat__text;
    ops_rodata[58] = op_arycat__rodata;
    op_names[58] = "op_arycat";
    arg_funcs[58] = op_arycat_set_args_from_code;
    ops_text[59] = op_arypush__text;
    ops_rodata[59] = op_arypush__rodata;
    op_names[59] = "op_arypush";
    arg_funcs[59] = op_arypush_set_args_from_code;
    ops_text[60] = op_aref__text;
    ops_rodata[60] = op_aref__rodata;
    op_names[60] = "op_aref";
    arg_funcs[60] = op_aref_set_args_from_code;
    ops_text[61] = op_aset__text;
    ops_rodata[61] = op_aset__rodata;
    op_names[61] = "op_aset";
    arg_funcs[61] = op_aset_set_args_from_code;
    ops_text[62] = op_apost__text;
    ops_rodata[62] = op_apost__rodata;
    op_names[62] = "op_apost";
    arg_funcs[62] = op_apost_set_args_from_code;
    ops_text[63] = op_string__text;
    ops_rodata[63] = op_string__rodata;
    op_names[63] = "op_string";
    arg_funcs[63] = op_string_set_args_from_code;
    ops_text[64] = op_strcat__text;
    ops_rodata[64] = op_strcat__rodata;
    op_names[64] = "op_strcat";
    arg_funcs[64] = op_strcat_set_args_from_code;
    ops_text[65] = op_hash__text;
    ops_rodata[65] = op_hash__rodata;
    op_names[65] = "op_hash";
    arg_funcs[65] = op_hash_set_args_from_code;
    ops_text[66] = op_lambda__text;
    ops_rodata[66] = op_lambda__rodata;
    op_names[66] = "op_lambda";
    arg_funcs[66] = op_lambda_set_args_from_code;
    ops_text[67] = op_range__text;
    ops_rodata[67] = op_range__rodata;
    op_names[67] = "op_range";
    arg_funcs[67] = op_range_set_args_from_code;
    ops_text[68] = op_oclass__text;
    ops_rodata[68] = op_oclass__rodata;
    op_names[68] = "op_oclass";
    arg_funcs[68] = op_oclass_set_args_from_code;
    ops_text[69] = op_class__text;
    ops_rodata[69] = op_class__rodata;
    op_names[69] = "op_class";
    arg_funcs[69] = op_class_set_args_from_code;
    ops_text[70] = op_module__text;
    ops_rodata[70] = op_module__rodata;
    op_names[70] = "op_module";
    arg_funcs[70] = op_module_set_args_from_code;
    ops_text[71] = op_exec__text;
    ops_rodata[71] = op_exec__rodata;
    op_names[71] = "op_exec";
    arg_funcs[71] = op_exec_set_args_from_code;
    ops_text[72] = op_method__text;
    ops_rodata[72] = op_method__rodata;
    op_names[72] = "op_method";
    arg_funcs[72] = op_method_set_args_from_code;
    ops_text[73] = op_sclass__text;
    ops_rodata[73] = op_sclass__rodata;
    op_names[73] = "op_sclass";
    arg_funcs[73] = op_sclass_set_args_from_code;
    ops_text[74] = op_tclass__text;
    ops_rodata[74] = op_tclass__rodata;
    op_names[74] = "op_tclass";
    arg_funcs[74] = op_tclass_set_args_from_code;
    ops_text[75] = op_debug__text;
    ops_rodata[75] = op_debug__rodata;
    op_names[75] = "op_debug";
    arg_funcs[75] = op_debug_set_args_from_code;
    ops_text[76] = op_stop__text;
    ops_rodata[76] = op_stop__rodata;
    op_names[76] = "op_stop";
    arg_funcs[76] = op_stop_set_args_from_code;
    ops_text[77] = op_err__text;
    ops_rodata[77] = op_err__rodata;
    op_names[77] = "op_err";
    arg_funcs[77] = op_err_set_args_from_code;
  }
}

uint8_t *jit_return(uint8_t *b) {
  *b++ = 0xc3;
  return b;
}
uint8_t *jit_jump(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 235;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *b++ = 233;
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_if(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 116;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31729;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_not(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 117;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31473;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
