
/* args: {} */
static uint8_t op_nop__text[] = {

};
static uint8_t op_nop__rodata[] = {

};

static void op_nop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_nop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_nop_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_move__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*11: movzwl %dx,%edx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*14: movsd  (%rax,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xd0,             /*19: movsd  %xmm0,(%rax,%rdx,8) */

};
static uint8_t op_move__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_move_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_move_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_move_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadl__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x20,                   /*4: mov    0x20(%rdi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*d: movzwl %dx,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%esi */
0x0f, 0xb7, 0xf6,                         /*15: movzwl %si,%esi */
0xf2, 0x0f, 0x10, 0x04, 0xd1,             /*18: movsd  (%rcx,%rdx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xf0,             /*1d: movsd  %xmm0,(%rax,%rsi,8) */

};
static uint8_t op_loadl__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_loadl_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadl_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadl_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadi__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x00, 0xf1, 0xff,/*c: movl   $0xfff10000,0x4(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*14: mov    0x18(%rdi),%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%edx */
0x0f, 0xbf, 0xd2,                         /*1d: movswl %dx,%edx */
0x89, 0x14, 0xc8,                         /*20: mov    %edx,(%rax,%rcx,8) */

};
static uint8_t op_loadi__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_loadi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadi_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadsym__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x40, 0xf1, 0xff,/*c: movl   $0xfff14000,0x4(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*14: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x57, 0x28,                   /*18: mov    0x28(%rdi),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%esi */
0x0f, 0xb7, 0xf6,                         /*21: movzwl %si,%esi */
0x8b, 0x14, 0xb2,                         /*24: mov    (%rdx,%rsi,4),%edx */
0x89, 0x14, 0xc8,                         /*27: mov    %edx,(%rax,%rcx,8) */

};
static uint8_t op_loadsym__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_loadsym_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadsym_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadsym_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_loadnil__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x40, 0xf0, 0xff,/*c: movl   $0xfff04000,0x4(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*14: mov    0x18(%rdi),%rax */
0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00, /*18: movl   $0x0,(%rax,%rcx,8) */

};
static uint8_t op_loadnil__rodata[] = {
0x00, 0x00,                               

};

static void op_loadnil_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadnil_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadnil_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadself__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0xf2, 0x0f, 0x10, 0x00,                   /*c: movsd  (%rax),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*10: movsd  %xmm0,(%rax,%rcx,8) */

};
static uint8_t op_loadself__rodata[] = {
0x00, 0x00,                               

};

static void op_loadself_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadself_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadself_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadt__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0xc0, 0xf0, 0xff,/*c: movl   $0xfff0c000,0x4(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*14: mov    0x18(%rdi),%rax */
0xc7, 0x04, 0xc8, 0x01, 0x00, 0x00, 0x00, /*18: movl   $0x1,(%rax,%rcx,8) */

};
static uint8_t op_loadt__rodata[] = {
0x00, 0x00,                               

};

static void op_loadt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadt_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_loadf__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*9: movzwl %cx,%ecx */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x40, 0xf0, 0xff,/*c: movl   $0xfff04000,0x4(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*14: mov    0x18(%rdi),%rax */
0xc7, 0x04, 0xc8, 0x01, 0x00, 0x00, 0x00, /*18: movl   $0x1,(%rax,%rcx,8) */

};
static uint8_t op_loadf__rodata[] = {
0x00, 0x00,                               

};

static void op_loadf_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_loadf_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_loadf_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_getglobal__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*d: movzwl %ax,%r14d */
0x48, 0x8b, 0x7b, 0x50,                   /*11: mov    0x50(%rbx),%rdi */
0x4c, 0x8b, 0x7b, 0x18,                   /*15: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x43, 0x28,                   /*19: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*22: movzwl %cx,%ecx */
0x8b, 0x34, 0x88,                         /*25: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*28: callq  2d <op_getglobal+0x2d> */
0x4b, 0x89, 0x04, 0xf7,                   /*2d: mov    %rax,(%r15,%r14,8) */
0x48, 0x89, 0xdf,                         /*31: mov    %rbx,%rdi */
0x5b,                                     /*34: pop    %rbx */
0x41, 0x5e,                               /*35: pop    %r14 */
0x41, 0x5f,                               /*37: pop    %r15 */

};
static uint8_t op_getglobal__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getglobal_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getglobal_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getglobal_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setglobal__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*4: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*15: movzwl %dx,%edx */
0x8b, 0x34, 0x91,                         /*18: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*20: movzwl %cx,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*23: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*27: callq  2c <op_setglobal+0x2c> */
0x48, 0x89, 0xdf,                         /*2c: mov    %rbx,%rdi */
0x5b,                                     /*2f: pop    %rbx */

};
static uint8_t op_setglobal__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setglobal_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setglobal_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setglobal_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getspecial__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*d: movzwl %ax,%r14d */
0x4c, 0x8b, 0x7b, 0x18,                   /*11: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x7b, 0x50,                   /*15: mov    0x50(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*19: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*1e: movzwl %ax,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*21: callq  26 <op_getspecial+0x26> */
0x4b, 0x89, 0x04, 0xf7,                   /*26: mov    %rax,(%r15,%r14,8) */
0x48, 0x89, 0xdf,                         /*2a: mov    %rbx,%rdi */
0x5b,                                     /*2d: pop    %rbx */
0x41, 0x5e,                               /*2e: pop    %r14 */
0x41, 0x5f,                               /*30: pop    %r15 */

};
static uint8_t op_getspecial__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getspecial_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getspecial_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getspecial_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setspecial__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*8: mov    0x50(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*11: movzwl %cx,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*14: mov    (%rax,%rcx,8),%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*1d: movzwl %ax,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*20: callq  25 <op_setspecial+0x25> */
0x48, 0x89, 0xdf,                         /*25: mov    %rbx,%rdi */
0x5b,                                     /*28: pop    %rbx */

};
static uint8_t op_setspecial__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setspecial_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setspecial_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setspecial_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getiv__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*d: movzwl %ax,%r14d */
0x48, 0x8b, 0x7b, 0x50,                   /*11: mov    0x50(%rbx),%rdi */
0x4c, 0x8b, 0x7b, 0x18,                   /*15: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x43, 0x28,                   /*19: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*22: movzwl %cx,%ecx */
0x8b, 0x34, 0x88,                         /*25: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*28: callq  2d <op_getiv+0x2d> */
0x4b, 0x89, 0x04, 0xf7,                   /*2d: mov    %rax,(%r15,%r14,8) */
0x48, 0x89, 0xdf,                         /*31: mov    %rbx,%rdi */
0x5b,                                     /*34: pop    %rbx */
0x41, 0x5e,                               /*35: pop    %r14 */
0x41, 0x5f,                               /*37: pop    %r15 */

};
static uint8_t op_getiv__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getiv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getiv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getiv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setiv__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*4: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*15: movzwl %dx,%edx */
0x8b, 0x34, 0x91,                         /*18: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*20: movzwl %cx,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*23: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*27: callq  2c <op_setiv+0x2c> */
0x48, 0x89, 0xdf,                         /*2c: mov    %rbx,%rdi */
0x5b,                                     /*2f: pop    %rbx */

};
static uint8_t op_setiv__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setiv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setiv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setiv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getcv__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*8: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x50,                   /*c: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*10: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*14: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*18: mov    %rax,0x38(%rcx) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*21: movzwl %ax,%r14d */
0x48, 0x8b, 0x7b, 0x50,                   /*25: mov    0x50(%rbx),%rdi */
0x4c, 0x8b, 0x7b, 0x18,                   /*29: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x43, 0x28,                   /*2d: mov    0x28(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*31: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*36: movzwl %cx,%ecx */
0x8b, 0x34, 0x88,                         /*39: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3c: callq  41 <op_getcv+0x41> */
0x4b, 0x89, 0x04, 0xf7,                   /*41: mov    %rax,(%r15,%r14,8) */
0x48, 0x8b, 0x43, 0x50,                   /*45: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*49: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*4d: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*51: movq   $0x0,0x38(%rax) */
0x48, 0x89, 0xdf,                         /*59: mov    %rbx,%rdi */
0x5b,                                     /*5c: pop    %rbx */
0x41, 0x5e,                               /*5d: pop    %r14 */
0x41, 0x5f,                               /*5f: pop    %r15 */

};
static uint8_t op_getcv__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getcv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getcv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getcv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setcv__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*4: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*15: movzwl %dx,%edx */
0x8b, 0x34, 0x91,                         /*18: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*20: movzwl %cx,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*23: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*27: callq  2c <op_setcv+0x2c> */
0x48, 0x89, 0xdf,                         /*2c: mov    %rbx,%rdi */
0x5b,                                     /*2f: pop    %rbx */

};
static uint8_t op_setcv__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setcv_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setcv_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setcv_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getconst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*4: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x50,                   /*8: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*c: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*10: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*14: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x43, 0x28,                   /*18: mov    0x28(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*1c: mov    0x50(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*25: movzwl %cx,%ecx */
0x8b, 0x34, 0x88,                         /*28: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2b: callq  30 <op_getconst+0x30> */
0x48, 0x8b, 0x4b, 0x50,                   /*30: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*34: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*38: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*3c: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x4b, 0x50,                   /*44: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*48: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*4c: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x4b, 0x18,                   /*50: mov    %rcx,0x18(%rbx) */
0xba, 0x00, 0x00, 0x00, 0x00,             /*54: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*59: movzwl %dx,%edx */
0x48, 0x89, 0x04, 0xd1,                   /*5c: mov    %rax,(%rcx,%rdx,8) */
0x48, 0x89, 0xdf,                         /*60: mov    %rbx,%rdi */
0x5b,                                     /*63: pop    %rbx */

};
static uint8_t op_getconst__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getconst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getconst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getconst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setconst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*4: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*15: movzwl %dx,%edx */
0x8b, 0x34, 0x91,                         /*18: mov    (%rcx,%rdx,4),%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*20: movzwl %cx,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*23: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*27: callq  2c <op_setconst+0x2c> */
0x48, 0x89, 0xdf,                         /*2c: mov    %rbx,%rdi */
0x5b,                                     /*2f: pop    %rbx */

};
static uint8_t op_setconst__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setconst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setconst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setconst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getmcnst__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x10,                   /*6: mov    0x10(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x50,                   /*a: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*e: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*12: mov    0x20(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*16: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x7b, 0x50,                   /*1a: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*1e: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*22: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*26: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*2b: movzwl %dx,%edx */
0x8b, 0x14, 0x91,                         /*2e: mov    (%rcx,%rdx,4),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*31: mov    $0x0,%ecx */
0x44, 0x0f, 0xb7, 0xf1,                   /*36: movzwl %cx,%r14d */
0x4a, 0x8b, 0x34, 0xf0,                   /*3a: mov    (%rax,%r14,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3e: callq  43 <op_getmcnst+0x43> */
0x48, 0x8b, 0x4b, 0x50,                   /*43: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*47: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*4b: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*4f: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x4b, 0x50,                   /*57: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*5b: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*5f: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x4b, 0x18,                   /*63: mov    %rcx,0x18(%rbx) */
0x4a, 0x89, 0x04, 0xf1,                   /*67: mov    %rax,(%rcx,%r14,8) */
0x48, 0x89, 0xdf,                         /*6b: mov    %rbx,%rdi */
0x5b,                                     /*6e: pop    %rbx */
0x41, 0x5e,                               /*6f: pop    %r14 */

};
static uint8_t op_getmcnst__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_getmcnst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getmcnst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getmcnst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_setmcnst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x7b, 0x50,                   /*4: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x43, 0x18,                   /*8: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*c: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*15: movzwl %dx,%edx */
0x8b, 0x14, 0x91,                         /*18: mov    (%rcx,%rdx,4),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xf1,                         /*20: movzwl %cx,%esi */
0xff, 0xc6,                               /*23: inc    %esi */
0x48, 0x63, 0xf6,                         /*25: movslq %esi,%rsi */
0x48, 0x8b, 0x34, 0xf0,                   /*28: mov    (%rax,%rsi,8),%rsi */
0x0f, 0xb7, 0xc9,                         /*2c: movzwl %cx,%ecx */
0x48, 0x8b, 0x0c, 0xc8,                   /*2f: mov    (%rax,%rcx,8),%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*33: callq  38 <op_setmcnst+0x38> */
0x48, 0x89, 0xdf,                         /*38: mov    %rbx,%rdi */
0x5b,                                     /*3b: pop    %rbx */

};
static uint8_t op_setmcnst__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_setmcnst_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setmcnst_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setmcnst_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_getupvar__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x50,                   /*4: mov    0x50(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*8: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*c: mov    0x20(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*10: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*14: mov    0x28(%rcx),%rcx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%esi */
0x48, 0x85, 0xc9,                         /*1d: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*20: sete   %dl */
0x40, 0x84, 0xf6,                         /*23: test   %sil,%sil */
0x74, 0x1b,                               /*26: je     43 <op_getupvar+0x43> */
0x40, 0x0f, 0xb6, 0xf6,                   /*28: movzbl %sil,%esi */
0xf7, 0xde,                               /*2c: neg    %esi */
0x66, 0x90,                               /*2e: xchg   %ax,%ax */
0xf6, 0xc2, 0x01,                         /*30: test   $0x1,%dl */
0x75, 0x12,                               /*33: jne    47 <op_getupvar+0x47> */
0x48, 0x8b, 0x49, 0x08,                   /*35: mov    0x8(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*39: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*3c: sete   %dl */
0xff, 0xc6,                               /*3f: inc    %esi */
0x75, 0xed,                               /*41: jne    30 <op_getupvar+0x30> */
0x84, 0xd2,                               /*43: test   %dl,%dl */
0x74, 0x18,                               /*45: je     5f <op_getupvar+0x5f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*47: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*4c: movzwl %cx,%ecx */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf0, 0xff,/*4f: movabs $0xfff0400000000000,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*59: mov    %rdx,(%rax,%rcx,8) */
0xeb, 0x1c,                               /*5d: jmp    7b <Bx242461312316112316123161231612312+0x77> */
0x48, 0x8b, 0x49, 0x18,                   /*5f: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*63: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*68: movzwl %dx,%edx */
0x48, 0x8b, 0x0c, 0xd1,                   /*6b: mov    (%rcx,%rdx,8),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6f: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*74: movzwl %dx,%edx */
0x48, 0x89, 0x0c, 0xd0,                   /*77: mov    %rcx,(%rax,%rdx,8) */

};
static uint8_t op_getupvar__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_getupvar_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_getupvar_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_getupvar_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_setupvar__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x50,                   /*4: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*8: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*c: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*10: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x70, 0x28,                   /*14: mov    0x28(%rax),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x48, 0x85, 0xf6,                         /*1d: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*20: sete   %al */
0x84, 0xc9,                               /*23: test   %cl,%cl */
0x74, 0x1b,                               /*25: je     42 <op_setupvar+0x42> */
0x0f, 0xb6, 0xc9,                         /*27: movzbl %cl,%ecx */
0xf7, 0xd9,                               /*2a: neg    %ecx */
0x0f, 0x1f, 0x40, 0x00,                   /*2c: nopl   0x0(%rax) */
0xa8, 0x01,                               /*30: test   $0x1,%al */
0x75, 0x3d,                               /*32: jne    71 <op_setupvar+0x71> */
0x48, 0x8b, 0x76, 0x08,                   /*34: mov    0x8(%rsi),%rsi */
0x48, 0x85, 0xf6,                         /*38: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*3b: sete   %al */
0xff, 0xc1,                               /*3e: inc    %ecx */
0x75, 0xee,                               /*40: jne    30 <op_setupvar+0x30> */
0x84, 0xc0,                               /*42: test   %al,%al */
0x75, 0x2b,                               /*44: jne    71 <op_setupvar+0x71> */
0x48, 0x8b, 0x43, 0x18,                   /*46: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4e, 0x18,                   /*4a: mov    0x18(%rsi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4e: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*53: movzwl %dx,%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*56: mov    $0x0,%edi */
0x0f, 0xb7, 0xff,                         /*5b: movzwl %di,%edi */
0xf2, 0x0f, 0x10, 0x04, 0xd0,             /*5e: movsd  (%rax,%rdx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xf9,             /*63: movsd  %xmm0,(%rcx,%rdi,8) */
0x48, 0x8b, 0x7b, 0x50,                   /*68: mov    0x50(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6c: callq  71 <op_setupvar+0x71> */
0x48, 0x89, 0xdf,                         /*71: mov    %rbx,%rdi */
0x5b,                                     /*74: pop    %rbx */

};
static uint8_t op_setupvar__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_setupvar_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_setupvar_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_setupvar_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_jmp__text[] = {

};
static uint8_t op_jmp__rodata[] = {

};

static void op_jmp_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_jmp_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmp_set_args(op, 0,GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_jmpif__text[] = {
0x50,                                     /*0: push   %rax */
0x48, 0x8b, 0x47, 0x18,                   /*1: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*a: movzwl %cx,%ecx */
0x8b, 0x44, 0xc8, 0x04,                   /*d: mov    0x4(%rax,%rcx,8),%eax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*11: cmp    $0xfff00001,%eax */
0x72, 0x0c,                               /*16: jb     24 <op_jmpif+0x24> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*18: and    $0xfc000,%eax */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*1d: cmp    $0x4000,%eax */
0x74, 0x0b,                               /*22: je     2f <op_jmpif+0x2f> */
0xc7, 0x04, 0x25, 0xab, 0x0f, 0x00, 0x00, 0xab, 0x0f, 0x00, 0x00,/*24: movl   $0xfab,0xfab */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2f: callq  34 <op_jmpif+0x34> */
0x58,                                     /*34: pop    %rax */
0xc3,                                     /*35: retq */

};
static uint8_t op_jmpif__rodata[] = {
0x00, 0x00,                               

};

static void op_jmpif_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_jmpif_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmpif_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_jmpnot__text[] = {
0x50,                                     /*0: push   %rax */
0x48, 0x8b, 0x47, 0x18,                   /*1: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*a: movzwl %cx,%ecx */
0x8b, 0x44, 0xc8, 0x04,                   /*d: mov    0x4(%rax,%rcx,8),%eax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*11: cmp    $0xfff00001,%eax */
0x72, 0x17,                               /*16: jb     2f <op_jmpnot+0x2f> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*18: and    $0xfc000,%eax */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*1d: cmp    $0x4000,%eax */
0x75, 0x0b,                               /*22: jne    2f <op_jmpnot+0x2f> */
0xc7, 0x04, 0x25, 0xab, 0x0f, 0x00, 0x00, 0xab, 0x0f, 0x00, 0x00,/*24: movl   $0xfab,0xfab */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2f: callq  34 <op_jmpnot+0x34> */
0x58,                                     /*34: pop    %rax */
0xc3,                                     /*35: retq */

};
static uint8_t op_jmpnot__rodata[] = {
0x00, 0x00,                               

};

static void op_jmpnot_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_jmpnot_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_jmpnot_set_args(op, GETARG_A(c),GETARG_sBx(c),0,op_idx);
}


/* args: {"op_idx"=>[[4, 0, 92..95]]} */
static uint8_t op_onerr__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x50,                   /*4: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x48, 0x18,                   /*8: mov    0x18(%rax),%rcx */
0x8b, 0x51, 0x40,                         /*c: mov    0x40(%rcx),%edx */
0x48, 0x8b, 0x71, 0x20,                   /*f: mov    0x20(%rcx),%rsi */
0x3b, 0x56, 0x1c,                         /*13: cmp    0x1c(%rsi),%edx */
0x7f, 0x39,                               /*16: jg     51 <op_onerr+0x51> */
0x8d, 0x04, 0x12,                         /*18: lea    (%rdx,%rdx,1),%eax */
0x85, 0xd2,                               /*1b: test   %edx,%edx */
0xba, 0x10, 0x00, 0x00, 0x00,             /*1d: mov    $0x10,%edx */
0x0f, 0x45, 0xd0,                         /*22: cmovne %eax,%edx */
0x89, 0x51, 0x40,                         /*25: mov    %edx,0x40(%rcx) */
0x48, 0x8b, 0x7b, 0x50,                   /*28: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*2c: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x38,                   /*30: mov    0x38(%rax),%rsi */
0x48, 0x63, 0x50, 0x40,                   /*34: movslq 0x40(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*38: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3c: callq  41 <op_onerr+0x41> */
0x48, 0x8b, 0x4b, 0x50,                   /*41: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*45: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*49: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x43, 0x50,                   /*4d: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x08,                   /*51: mov    0x8(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*55: mov    0x8(%rcx),%rcx */
0x48, 0x8d, 0x91, 0x00, 0x04, 0xde, 0x00, /*59: lea    0xde0400(%rcx),%rdx */
0x48, 0x89, 0x53, 0x10,                   /*60: mov    %rdx,0x10(%rbx) */
0xba, 0x00, 0x00, 0x00, 0x00,             /*64: mov    $0x0,%edx */
0x48, 0x0f, 0xbf, 0xd2,                   /*69: movswq %dx,%rdx */
0x48, 0x8d, 0x8c, 0x91, 0x00, 0x00, 0x78, 0x03,/*6d: lea    0x3780000(%rcx,%rdx,4),%rcx */
0x48, 0x8b, 0x40, 0x18,                   /*75: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*79: mov    0x20(%rax),%rax */
0x48, 0x63, 0x50, 0x1c,                   /*7d: movslq 0x1c(%rax),%rdx */
0x8d, 0x72, 0x01,                         /*81: lea    0x1(%rdx),%esi */
0x89, 0x70, 0x1c,                         /*84: mov    %esi,0x1c(%rax) */
0x48, 0x8b, 0x43, 0x50,                   /*87: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*8b: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x38,                   /*8f: mov    0x38(%rax),%rax */
0x48, 0x89, 0x0c, 0xd0,                   /*93: mov    %rcx,(%rax,%rdx,8) */
0x48, 0x89, 0xdf,                         /*97: mov    %rbx,%rdi */
0x5b,                                     /*9a: pop    %rbx */

};
static uint8_t op_onerr__rodata[] = {
0x00, 0x00,                               

};

static void op_onerr_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
  *((int32_t *)(op + 92)) = op_idx * 4 + 0;
}

static void op_onerr_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_onerr_set_args(op, 0,GETARG_sBx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_rescue__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x50,                   /*4: mov    0x50(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*8: mov    0x28(%rcx),%rcx */
0x8b, 0x09,                               /*c: mov    (%rcx),%ecx */
0xc1, 0xe1, 0x0e,                         /*e: shl    $0xe,%ecx */
0x81, 0xc1, 0x00, 0x40, 0x00, 0x00,       /*11: add    $0x4000,%ecx */
0x81, 0xc9, 0x00, 0x00, 0xf0, 0xff,       /*17: or     $0xfff00000,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*22: movzwl %dx,%edx */
0x89, 0x4c, 0xd0, 0x04,                   /*25: mov    %ecx,0x4(%rax,%rdx,8) */
0x48, 0x8b, 0x47, 0x50,                   /*29: mov    0x50(%rdi),%rax */
0x48, 0x8b, 0x40, 0x28,                   /*2d: mov    0x28(%rax),%rax */
0x0f, 0xb6, 0x08,                         /*31: movzbl (%rax),%ecx */
0x83, 0xf9, 0x05,                         /*34: cmp    $0x5,%ecx */
0x77, 0x17,                               /*37: ja     50 <op_rescue+0x50> */
0x83, 0xf9, 0x01,                         /*39: cmp    $0x1,%ecx */
0x74, 0x12,                               /*3c: je     50 <op_rescue+0x50> */
0x48, 0x8b, 0x4f, 0x18,                   /*3e: mov    0x18(%rdi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*42: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*47: movzwl %dx,%edx */
0x48, 0x89, 0x04, 0xd1,                   /*4a: mov    %rax,(%rcx,%rdx,8) */
0xeb, 0x27,                               /*4e: jmp    77 <op_rescue+0x77> */
0x48, 0x8b, 0x47, 0x18,                   /*50: mov    0x18(%rdi),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*54: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*59: movzwl %cx,%ecx */
0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00, /*5c: movl   $0x0,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x18,                   /*63: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x57, 0x50,                   /*67: mov    0x50(%rdi),%rdx */
0x48, 0x8b, 0x52, 0x28,                   /*6b: mov    0x28(%rdx),%rdx */
0x48, 0xc1, 0xea, 0x02,                   /*6f: shr    $0x2,%rdx */
0x48, 0x09, 0x14, 0xc8,                   /*73: or     %rdx,(%rax,%rcx,8) */
0x48, 0x8b, 0x47, 0x50,                   /*77: mov    0x50(%rdi),%rax */
0x48, 0xc7, 0x40, 0x28, 0x00, 0x00, 0x00, 0x00,/*7b: movq   $0x0,0x28(%rax) */

};
static uint8_t op_rescue__rodata[] = {
0x00, 0x00,                               

};

static void op_rescue_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_rescue_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_rescue_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_poperr__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x66, 0x85, 0xc0,                         /*5: test   %ax,%ax */
0x74, 0x29,                               /*8: je     33 <op_poperr+0x33> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*f: movzwl %ax,%eax */
0xf7, 0xd8,                               /*12: neg    %eax */
0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*14: data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x4f, 0x50,                   /*20: mov    0x50(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*24: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*28: mov    0x20(%rcx),%rcx */
0xff, 0x49, 0x1c,                         /*2c: decl   0x1c(%rcx) */
0xff, 0xc0,                               /*2f: inc    %eax */
0x75, 0xed,                               /*31: jne    20 <op_poperr+0x20> */

};
static uint8_t op_poperr__rodata[] = {
0x00, 0x00,                               

};

static void op_poperr_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_poperr_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_poperr_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_raise__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*9: movzwl %ax,%eax */
0x48, 0x8b, 0x4b, 0x18,                   /*c: mov    0x18(%rbx),%rcx */
0x48, 0x8b, 0x53, 0x50,                   /*10: mov    0x50(%rbx),%rdx */
0x48, 0x8b, 0x04, 0xc1,                   /*14: mov    (%rcx,%rax,8),%rax */
0x48, 0xc1, 0xe0, 0x02,                   /*18: shl    $0x2,%rax */
0x48, 0xb9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*1c: movabs $0xfffffffffffc,%rcx */
0x48, 0x21, 0xc1,                         /*26: and    %rax,%rcx */
0x48, 0x89, 0x4a, 0x28,                   /*29: mov    %rcx,0x28(%rdx) */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2d: callq  32 <op_raise+0x32> */
0x48, 0x89, 0xdf,                         /*32: mov    %rbx,%rdi */
0x5b,                                     /*35: pop    %rbx */

};
static uint8_t op_raise__rodata[] = {
0x00, 0x00,                               

};

static void op_raise_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_raise_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_raise_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_epush__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x89, 0xfb,                         /*3: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x08,                   /*6: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*a: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x40, 0x20,                   /*e: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*17: movzwl %cx,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*1a: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e: callq  23 <op_epush+0x23> */
0x49, 0x89, 0xc6,                         /*23: mov    %rax,%r14 */
0x48, 0x8b, 0x43, 0x50,                   /*26: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*2a: mov    0x18(%rax),%rax */
0x8b, 0x70, 0x50,                         /*2e: mov    0x50(%rax),%esi */
0x48, 0x8b, 0x48, 0x20,                   /*31: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*35: mov    0x20(%rcx),%edx */
0x39, 0xd6,                               /*38: cmp    %edx,%esi */
0x7f, 0x44,                               /*3a: jg     80 <op_epush+0x80> */
0x8d, 0x0c, 0x36,                         /*3c: lea    (%rsi,%rsi,1),%ecx */
0x85, 0xf6,                               /*3f: test   %esi,%esi */
0xba, 0x10, 0x00, 0x00, 0x00,             /*41: mov    $0x10,%edx */
0x0f, 0x45, 0xd1,                         /*46: cmovne %ecx,%edx */
0x89, 0x50, 0x50,                         /*49: mov    %edx,0x50(%rax) */
0x48, 0x8b, 0x7b, 0x50,                   /*4c: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*50: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*54: mov    0x48(%rax),%rsi */
0x48, 0x63, 0x50, 0x50,                   /*58: movslq 0x50(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*5c: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*60: callq  65 <op_epush+0x65> */
0x48, 0x8b, 0x4b, 0x50,                   /*65: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*69: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x48,                   /*6d: mov    %rax,0x48(%rcx) */
0x48, 0x8b, 0x43, 0x50,                   /*71: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*75: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*79: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*7d: mov    0x20(%rcx),%edx */
0x8d, 0x42, 0x01,                         /*80: lea    0x1(%rdx),%eax */
0x89, 0x41, 0x20,                         /*83: mov    %eax,0x20(%rcx) */
0x48, 0x63, 0xc2,                         /*86: movslq %edx,%rax */
0x48, 0x8b, 0x4b, 0x50,                   /*89: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*8d: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x48,                   /*91: mov    0x48(%rcx),%rcx */
0x4c, 0x89, 0x34, 0xc1,                   /*95: mov    %r14,(%rcx,%rax,8) */
0x8b, 0x43, 0x48,                         /*99: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*9c: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*a0: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*a6: mov    %rbx,%rdi */
0x5b,                                     /*a9: pop    %rbx */
0x41, 0x5e,                               /*aa: pop    %r14 */

};
static uint8_t op_epush__rodata[] = {
0x00, 0x00,                               

};

static void op_epush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_epush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_epush_set_args(op, 0,GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_epop__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x54,                               /*5: push   %r12 */
0x53,                                     /*7: push   %rbx */
0x49, 0x89, 0xff,                         /*8: mov    %rdi,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*b: mov    $0x0,%eax */
0xa9, 0xff, 0xff, 0x00, 0x00,             /*10: test   $0xffff,%eax */
0x7e, 0x51,                               /*15: jle    68 <op_epop+0x68> */
0x49, 0x8b, 0x47, 0x50,                   /*17: mov    0x50(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*1b: mov    0x18(%rax),%rax */
0x4c, 0x8b, 0x70, 0x20,                   /*1f: mov    0x20(%rax),%r14 */
0x41, 0x8b, 0x6e, 0x20,                   /*23: mov    0x20(%r14),%ebp */
0x31, 0xdb,                               /*27: xor    %ebx,%ebx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*29: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xe0,                   /*2e: movzwl %ax,%r12d */
0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*32: data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x41, 0x3b, 0x6e, 0xc8,                   /*40: cmp    -0x38(%r14),%ebp */
0x7e, 0x22,                               /*44: jle    68 <op_epop+0x68> */
0x49, 0x8b, 0x7f, 0x50,                   /*46: mov    0x50(%r15),%rdi */
0xff, 0xcd,                               /*4a: dec    %ebp */
0x89, 0xee,                               /*4c: mov    %ebp,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*4e: callq  53 <op_epop+0x53> */
0x41, 0x8b, 0x47, 0x48,                   /*53: mov    0x48(%r15),%eax */
0x49, 0x8b, 0x4f, 0x50,                   /*57: mov    0x50(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*5b: mov    %eax,0xdc(%rcx) */
0xff, 0xc3,                               /*61: inc    %ebx */
0x44, 0x39, 0xe3,                         /*63: cmp    %r12d,%ebx */
0x7c, 0xd8,                               /*66: jl     40 <op_epop+0x40> */
0x4c, 0x89, 0xff,                         /*68: mov    %r15,%rdi */
0x5b,                                     /*6b: pop    %rbx */
0x41, 0x5c,                               /*6c: pop    %r12 */
0x41, 0x5e,                               /*6e: pop    %r14 */
0x41, 0x5f,                               /*70: pop    %r15 */
0x5d,                                     /*72: pop    %rbp */

};
static uint8_t op_epop__rodata[] = {
0x00, 0x00,                               

};

static void op_epop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_epop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_epop_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {"op_idx"=>[[4, 0, 31..34]]} */
static uint8_t op_send__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x41, 0x56,                               /*4: push   %r14 */
0x53,                                     /*6: push   %rbx */
0x48, 0x83, 0xe4, 0xf0,                   /*7: and    $0xfffffffffffffff0,%rsp */
0x48, 0x89, 0xfb,                         /*b: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x08,                   /*e: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x50,                   /*12: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*16: mov    0x18(%rcx),%rcx */
0x4c, 0x8b, 0x71, 0x20,                   /*1a: mov    0x20(%rcx),%r14 */
0xb9, 0x00, 0x04, 0xde, 0x00,             /*1e: mov    $0xde0400,%ecx */
0x48, 0x03, 0x48, 0x08,                   /*23: add    0x8(%rax),%rcx */
0x48, 0x89, 0x4b, 0x10,                   /*27: mov    %rcx,0x10(%rbx) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*2b: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*30: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*33: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*38: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*3b: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*40: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*44: mov    $0x20,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*49: callq  4e <op_send+0x4e> */
0x48, 0x8b, 0x43, 0x50,                   /*4e: mov    0x50(%rbx),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*52: mov    0x18(%rax),%rax */
0x4c, 0x39, 0x70, 0x20,                   /*56: cmp    %r14,0x20(%rax) */
0x73, 0x0c,                               /*5a: jae    68 <op_send+0x68> */
0x48, 0x89, 0xdf,                         /*5c: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf0,                   /*5f: lea    -0x10(%rbp),%rsp */
0x5b,                                     /*63: pop    %rbx */
0x41, 0x5e,                               /*64: pop    %r14 */
0x5d,                                     /*66: pop    %rbp */
0xc3,                                     /*67: retq */
0x48, 0x89, 0xdf,                         /*68: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf0,                   /*6b: lea    -0x10(%rbp),%rsp */
0x5b,                                     /*6f: pop    %rbx */
0x41, 0x5e,                               /*70: pop    %r14 */
0x5d,                                     /*72: pop    %rbp */

};
static uint8_t op_send__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_send_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
  *((int32_t *)(op + 31)) = op_idx * 4 + 0;
}

static void op_send_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_send_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_sendb__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x53,                                     /*4: push   %rbx */
0x48, 0x83, 0xe4, 0xf0,                   /*5: and    $0xfffffffffffffff0,%rsp */
0x48, 0x83, 0xec, 0x10,                   /*9: sub    $0x10,%rsp */
0x48, 0x89, 0xfb,                         /*d: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*15: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*1d: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*25: movzbl %al,%r8d */
0xbe, 0x21, 0x00, 0x00, 0x00,             /*29: mov    $0x21,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_sendb+0x33> */
0x48, 0x89, 0xdf,                         /*33: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf8,                   /*36: lea    -0x8(%rbp),%rsp */
0x5b,                                     /*3a: pop    %rbx */
0x5d,                                     /*3b: pop    %rbp */

};
static uint8_t op_sendb__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_sendb_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sendb_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sendb_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_fsend__text[] = {

};
static uint8_t op_fsend__rodata[] = {

};

static void op_fsend_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_fsend_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_fsend_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_call__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xff,                         /*5: mov    %rdi,%r15 */
0x49, 0x8b, 0x47, 0x50,                   /*8: mov    0x50(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*c: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*10: mov    0x8(%rax),%rcx */
0x48, 0x8b, 0x40, 0x20,                   /*14: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x31,                         /*18: mov    (%rcx),%rsi */
0x48, 0x8d, 0x0c, 0xb5, 0x00, 0x00, 0x00, 0x00,/*1b: lea    0x0(,%rsi,4),%rcx */
0x48, 0xbb, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*23: movabs $0xfffffffffffc,%rbx */
0x48, 0x21, 0xcb,                         /*2d: and    %rcx,%rbx */
0x48, 0x8b, 0x4b, 0x20,                   /*30: mov    0x20(%rbx),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*34: mov    %rcx,0x48(%rax) */
0x48, 0x89, 0x58, 0x08,                   /*38: mov    %rbx,0x8(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*3c: mov    0x28(%rbx),%rcx */
0x48, 0x85, 0xc9,                         /*40: test   %rcx,%rcx */
0x74, 0x24,                               /*43: je     69 <op_call+0x69> */
0x8b, 0x51, 0x20,                         /*45: mov    0x20(%rcx),%edx */
0x85, 0xd2,                               /*48: test   %edx,%edx */
0x74, 0x06,                               /*4a: je     52 <op_call+0x52> */
0x89, 0x10,                               /*4c: mov    %edx,(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*4e: mov    0x28(%rbx),%rcx */
0x48, 0x83, 0x79, 0x18, 0x00,             /*52: cmpq   $0x0,0x18(%rcx) */
0x75, 0x10,                               /*57: jne    69 <op_call+0x69> */
0x49, 0x8b, 0x57, 0x50,                   /*59: mov    0x50(%r15),%rdx */
0x48, 0x8b, 0x52, 0x18,                   /*5d: mov    0x18(%rdx),%rdx */
0x48, 0x8b, 0x52, 0x08,                   /*61: mov    0x8(%rdx),%rdx */
0x48, 0x89, 0x51, 0x18,                   /*65: mov    %rdx,0x18(%rcx) */
0xf6, 0x43, 0x02, 0x04,                   /*69: testb  $0x4,0x2(%rbx) */
0x74, 0x2f,                               /*6d: je     9e <op_call+0x9e> */
0x49, 0x8b, 0x7f, 0x50,                   /*6f: mov    0x50(%r15),%rdi */
0xff, 0x53, 0x18,                         /*73: callq  *0x18(%rbx) */
0x49, 0x89, 0xc6,                         /*76: mov    %rax,%r14 */
0x49, 0x8b, 0x7f, 0x50,                   /*79: mov    0x50(%r15),%rdi */
0x41, 0x8b, 0x77, 0x48,                   /*7d: mov    0x48(%r15),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*81: callq  86 <op_call+0x86> */
0x49, 0x8b, 0x47, 0x50,                   /*86: mov    0x50(%r15),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*8a: cmpq   $0x0,0x28(%rax) */
0x74, 0x57,                               /*8f: je     e8 <op_call+0xe8> */
0x4c, 0x89, 0xff,                         /*91: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*94: callq  99 <op_call+0x99> */
0xe9, 0x1c, 0x01, 0x00, 0x00,             /*99: jmpq   1ba <op_call+0x1ba> */
0x49, 0x89, 0x1f,                         /*9e: mov    %rbx,(%r15) */
0x48, 0x8b, 0x4b, 0x18,                   /*a1: mov    0x18(%rbx),%rcx */
0x49, 0x89, 0x4f, 0x08,                   /*a5: mov    %rcx,0x8(%r15) */
0x48, 0x85, 0xc9,                         /*a9: test   %rcx,%rcx */
0x0f, 0x84, 0x8d, 0x00, 0x00, 0x00,       /*ac: je     13f <op_call+0x13f> */
0x48, 0x8b, 0x51, 0x10,                   /*b2: mov    0x10(%rcx),%rdx */
0x49, 0x89, 0x57, 0x20,                   /*b6: mov    %rdx,0x20(%r15) */
0x48, 0x8b, 0x51, 0x18,                   /*ba: mov    0x18(%rcx),%rdx */
0x49, 0x89, 0x57, 0x28,                   /*be: mov    %rdx,0x28(%r15) */
0x0f, 0xb7, 0x49, 0x02,                   /*c2: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*c6: mov    %ecx,0x18(%rax) */
0x8b, 0x50, 0x40,                         /*c9: mov    0x40(%rax),%edx */
0x49, 0x8b, 0x47, 0x08,                   /*cc: mov    0x8(%r15),%rax */
0x49, 0x8b, 0x7f, 0x50,                   /*d0: mov    0x50(%r15),%rdi */
0x0f, 0xb7, 0x70, 0x02,                   /*d4: movzwl 0x2(%rax),%esi */
0x85, 0xd2,                               /*d8: test   %edx,%edx */
0x0f, 0x88, 0x8c, 0x00, 0x00, 0x00,       /*da: js     16c <op_call+0x16c> */
0x83, 0xc2, 0x02,                         /*e0: add    $0x2,%edx */
0xe9, 0x94, 0x00, 0x00, 0x00,             /*e3: jmpq   17c <op_call+0x17c> */
0x48, 0x8b, 0x40, 0x18,                   /*e8: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*ec: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x51, 0x10,                   /*f0: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x50, 0x08,                   /*f4: mov    %rdx,0x8(%rax) */
0x49, 0x89, 0x57, 0x18,                   /*f8: mov    %rdx,0x18(%r15) */
0x48, 0x63, 0x41, 0x44,                   /*fc: movslq 0x44(%rcx),%rax */
0x4c, 0x89, 0x34, 0xc2,                   /*100: mov    %r14,(%rdx,%rax,8) */
0x48, 0x8b, 0x41, 0x30,                   /*104: mov    0x30(%rcx),%rax */
0x49, 0x89, 0x47, 0x10,                   /*108: mov    %rax,0x10(%r15) */
0x49, 0x8b, 0x7f, 0x50,                   /*10c: mov    0x50(%r15),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*110: callq  115 <op_call+0x115> */
0x49, 0x8b, 0x47, 0x50,                   /*115: mov    0x50(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*119: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*11d: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*121: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*125: mov    0x18(%rax),%rax */
0x49, 0x89, 0x47, 0x08,                   /*129: mov    %rax,0x8(%r15) */
0x48, 0x8b, 0x48, 0x10,                   /*12d: mov    0x10(%rax),%rcx */
0x49, 0x89, 0x4f, 0x20,                   /*131: mov    %rcx,0x20(%r15) */
0x48, 0x8b, 0x40, 0x18,                   /*135: mov    0x18(%rax),%rax */
0x49, 0x89, 0x47, 0x28,                   /*139: mov    %rax,0x28(%r15) */
0xeb, 0x7b,                               /*13d: jmp    1ba <op_call+0x1ba> */
0x49, 0x8b, 0x47, 0x50,                   /*13f: mov    0x50(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*143: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*147: mov    0x8(%rax),%rax */
0x48, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf0, 0xff,/*14b: movabs $0xfff0400000000000,%rcx */
0x48, 0x89, 0x08,                         /*155: mov    %rcx,(%rax) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*158: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*15d: movzwl %ax,%esi */
0x31, 0xd2,                               /*160: xor    %edx,%edx */
0x4c, 0x89, 0xff,                         /*162: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*165: callq  16a <op_call+0x16a> */
0xeb, 0x4e,                               /*16a: jmp    1ba <op_call+0x1ba> */
0x83, 0xfe, 0x03,                         /*16c: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*16f: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*174: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*177: mov    $0x3,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*17c: callq  181 <op_call+0x181> */
0x49, 0x8b, 0x47, 0x50,                   /*181: mov    0x50(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*185: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*189: mov    0x8(%rax),%rax */
0x49, 0x89, 0x47, 0x18,                   /*18d: mov    %rax,0x18(%r15) */
0x48, 0x8b, 0x4b, 0x28,                   /*191: mov    0x28(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*195: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x09,                         /*199: mov    (%rcx),%rcx */
0x48, 0x89, 0x08,                         /*19c: mov    %rcx,(%rax) */
0x49, 0x8b, 0x47, 0x08,                   /*19f: mov    0x8(%r15),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*1a3: mov    0x8(%rax),%rax */
0x49, 0x89, 0x47, 0x10,                   /*1a7: mov    %rax,0x10(%r15) */
0x49, 0x8b, 0x37,                         /*1ab: mov    (%r15),%rsi */
0x49, 0x8b, 0x7f, 0x50,                   /*1ae: mov    0x50(%r15),%rdi */
0x4c, 0x89, 0xfa,                         /*1b2: mov    %r15,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1b5: callq  1ba <op_call+0x1ba> */
0x4c, 0x89, 0xff,                         /*1ba: mov    %r15,%rdi */
0x5b,                                     /*1bd: pop    %rbx */
0x41, 0x5e,                               /*1be: pop    %r14 */
0x41, 0x5f,                               /*1c0: pop    %r15 */

};
static uint8_t op_call__rodata[] = {
0x00, 0x00,                               

};

static void op_call_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_call_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_call_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_super__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x89, 0xfb,                         /*a: mov    %rdi,%rbx */
0x48, 0x8b, 0x6b, 0x50,                   /*d: mov    0x50(%rbx),%rbp */
0x48, 0x8b, 0x45, 0x18,                   /*11: mov    0x18(%rbp),%rax */
0x4c, 0x8b, 0x68, 0x20,                   /*15: mov    0x20(%rax),%r13 */
0x45, 0x8b, 0x65, 0x00,                   /*19: mov    0x0(%r13),%r12d */
0x45, 0x85, 0xe4,                         /*1d: test   %r12d,%r12d */
0x74, 0x61,                               /*20: je     83 <op_super+0x83> */
0x48, 0x8b, 0x43, 0x18,                   /*22: mov    0x18(%rbx),%rax */
0x4c, 0x8b, 0x30,                         /*26: mov    (%rax),%r14 */
0x49, 0x8b, 0x45, 0x48,                   /*29: mov    0x48(%r13),%rax */
0x48, 0x8b, 0x48, 0x28,                   /*2d: mov    0x28(%rax),%rcx */
0x48, 0x89, 0x0c, 0x24,                   /*31: mov    %rcx,(%rsp) */
0x48, 0x8b, 0x03,                         /*35: mov    (%rbx),%rax */
0x48, 0x39, 0x48, 0x38,                   /*38: cmp    %rcx,0x38(%rax) */
0x75, 0x08,                               /*3c: jne    46 <op_super+0x46> */
0x31, 0xd2,                               /*3e: xor    %edx,%edx */
0x44, 0x39, 0x60, 0x30,                   /*40: cmp    %r12d,0x30(%rax) */
0x74, 0x33,                               /*44: je     79 <op_super+0x79> */
0x48, 0x39, 0x48, 0x48,                   /*46: cmp    %rcx,0x48(%rax) */
0x75, 0x0b,                               /*4a: jne    57 <op_super+0x57> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*4c: mov    $0x1,%edx */
0x44, 0x39, 0x60, 0x40,                   /*51: cmp    %r12d,0x40(%rax) */
0x74, 0x22,                               /*55: je     79 <op_super+0x79> */
0x48, 0x39, 0x48, 0x58,                   /*57: cmp    %rcx,0x58(%rax) */
0x75, 0x0b,                               /*5b: jne    68 <op_super+0x68> */
0xba, 0x02, 0x00, 0x00, 0x00,             /*5d: mov    $0x2,%edx */
0x44, 0x39, 0x60, 0x50,                   /*62: cmp    %r12d,0x50(%rax) */
0x74, 0x11,                               /*66: je     79 <op_super+0x79> */
0x48, 0x39, 0x48, 0x68,                   /*68: cmp    %rcx,0x68(%rax) */
0x75, 0x62,                               /*6c: jne    d0 <op_super+0xd0> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*6e: mov    $0x3,%edx */
0x44, 0x39, 0x60, 0x60,                   /*73: cmp    %r12d,0x60(%rax) */
0x75, 0x57,                               /*77: jne    d0 <op_super+0xd0> */
0x4c, 0x8b, 0xbc, 0xd0, 0x90, 0x00, 0x00, 0x00,/*79: mov    0x90(%rax,%rdx,8),%r15 */
0xeb, 0x5f,                               /*81: jmp    e2 <op_super+0xe2> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*83: mov    0x0(%rip),%rsi        # 8a <op_super+0x8a> */
0x48, 0x89, 0xef,                         /*8a: mov    %rbp,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8d: callq  92 <op_super+0x92> */
0x49, 0x89, 0xc6,                         /*92: mov    %rax,%r14 */
0x48, 0x8b, 0x7b, 0x50,                   /*95: mov    0x50(%rbx),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*99: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*9e: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a3: callq  a8 <op_super+0xa8> */
0x48, 0x89, 0xef,                         /*a8: mov    %rbp,%rdi */
0x4c, 0x89, 0xf6,                         /*ab: mov    %r14,%rsi */
0x48, 0x89, 0xc2,                         /*ae: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b1: callq  b6 <op_super+0xb6> */
0x48, 0xc1, 0xe0, 0x02,                   /*b6: shl    $0x2,%rax */
0x48, 0xb9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*ba: movabs $0xfffffffffffc,%rcx */
0x48, 0x21, 0xc1,                         /*c4: and    %rax,%rcx */
0x48, 0x89, 0x4d, 0x28,                   /*c7: mov    %rcx,0x28(%rbp) */
0xe9, 0x1d, 0x02, 0x00, 0x00,             /*cb: jmpq   2ed <op_super+0x2ed> */
0x48, 0x8d, 0x34, 0x24,                   /*d0: lea    (%rsp),%rsi */
0x48, 0x89, 0xef,                         /*d4: mov    %rbp,%rdi */
0x44, 0x89, 0xe2,                         /*d7: mov    %r12d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*da: callq  df <op_super+0xdf> */
0x49, 0x89, 0xc7,                         /*df: mov    %rax,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e2: mov    $0x0,%eax */
0x4d, 0x85, 0xff,                         /*e7: test   %r15,%r15 */
0x74, 0x08,                               /*ea: je     f4 <op_super+0xf4> */
0x0f, 0xb6, 0xe8,                         /*ec: movzbl %al,%ebp */
0xe9, 0x4a, 0x01, 0x00, 0x00,             /*ef: jmpq   23e <op_super+0x23e> */
0x48, 0x8b, 0x7b, 0x50,                   /*f4: mov    0x50(%rbx),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*f8: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*fd: mov    $0xe,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*102: callq  107 <op_super+0x107> */
0x41, 0x89, 0xc4,                         /*107: mov    %eax,%r12d */
0x48, 0x8b, 0x7b, 0x50,                   /*10a: mov    0x50(%rbx),%rdi */
0x48, 0x8d, 0x34, 0x24,                   /*10e: lea    (%rsp),%rsi */
0x44, 0x89, 0xe2,                         /*112: mov    %r12d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*115: callq  11a <op_super+0x11a> */
0x49, 0x89, 0xc7,                         /*11a: mov    %rax,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11d: mov    $0x0,%eax */
0x0f, 0xb6, 0xc0,                         /*122: movzbl %al,%eax */
0x83, 0xf8, 0x7f,                         /*125: cmp    $0x7f,%eax */
0x75, 0x3c,                               /*128: jne    166 <op_super+0x166> */
0x48, 0x8b, 0x43, 0x18,                   /*12a: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*12e: mov    0x50(%rbx),%rdi */
0x41, 0x8b, 0x4d, 0x00,                   /*132: mov    0x0(%r13),%ecx */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf1, 0xff,/*136: movabs $0xfff1400000000000,%rdx */
0x48, 0x09, 0xca,                         /*140: or     %rcx,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*143: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*148: movzwl %cx,%ecx */
0xff, 0xc1,                               /*14b: inc    %ecx */
0x48, 0x63, 0xc9,                         /*14d: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*150: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*154: callq  159 <op_super+0x159> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*159: mov    $0x0,%eax */
0x0f, 0xb6, 0xe8,                         /*15e: movzbl %al,%ebp */
0xe9, 0xd8, 0x00, 0x00, 0x00,             /*161: jmpq   23e <op_super+0x23e> */
0x48, 0x8b, 0x43, 0x18,                   /*166: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16a: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*16f: movzwl %cx,%ecx */
0x48, 0x8d, 0x51, 0x01,                   /*172: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*176: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*17a: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*17d: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*180: mov    $0x0,%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*185: movzbl %dil,%edi */
0xff, 0xc7,                               /*189: inc    %edi */
0x48, 0x63, 0xff,                         /*18b: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*18e: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*193: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*196: setge  %cl */
0x08, 0xd1,                               /*199: or     %dl,%cl */
0x74, 0x37,                               /*19b: je     1d4 <op_super+0x1d4> */
0x31, 0xc9,                               /*19d: xor    %ecx,%ecx */
0x84, 0xc9,                               /*19f: test   %cl,%cl */
0x75, 0x6d,                               /*1a1: jne    210 <op_super+0x210> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a3: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1a8: movzwl %cx,%ecx */
0x48, 0x8d, 0x44, 0xc8, 0x10,             /*1ab: lea    0x10(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b0: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*1b5: movzbl %cl,%ecx */
0xff, 0xc1,                               /*1b8: inc    %ecx */
0x48, 0xf7, 0xd9,                         /*1ba: neg    %rcx */
0x0f, 0x1f, 0x00,                         /*1bd: nopl   (%rax) */
0xf2, 0x0f, 0x10, 0x40, 0xf8,             /*1c0: movsd  -0x8(%rax),%xmm0 */
0xf2, 0x0f, 0x11, 0x00,                   /*1c5: movsd  %xmm0,(%rax) */
0x48, 0x8d, 0x40, 0x08,                   /*1c9: lea    0x8(%rax),%rax */
0x48, 0xff, 0xc1,                         /*1cd: inc    %rcx */
0x75, 0xee,                               /*1d0: jne    1c0 <op_super+0x1c0> */
0xeb, 0x3c,                               /*1d2: jmp    210 <op_super+0x210> */
0x31, 0xc9,                               /*1d4: xor    %ecx,%ecx */
0x84, 0xc9,                               /*1d6: test   %cl,%cl */
0x75, 0x36,                               /*1d8: jne    210 <op_super+0x210> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1da: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1df: movzwl %cx,%ecx */
0x48, 0x8d, 0x44, 0xc8, 0x08,             /*1e2: lea    0x8(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1e7: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*1ec: movzbl %cl,%ecx */
0xff, 0xc1,                               /*1ef: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1f1: movslq %ecx,%rcx */
0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1f4: data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x44, 0xc8, 0xf8,       /*200: movsd  -0x8(%rax,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*206: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*20b: dec    %rcx */
0x75, 0xf0,                               /*20e: jne    200 <op_super+0x200> */
0x48, 0x8b, 0x43, 0x18,                   /*210: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*214: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*219: movzwl %cx,%ecx */
0xff, 0xc1,                               /*21c: inc    %ecx */
0x48, 0x63, 0xc9,                         /*21e: movslq %ecx,%rcx */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x40, 0xf1, 0xff,/*221: movl   $0xfff14000,0x4(%rax,%rcx,8) */
0x41, 0x8b, 0x45, 0x00,                   /*229: mov    0x0(%r13),%eax */
0x48, 0x8b, 0x53, 0x18,                   /*22d: mov    0x18(%rbx),%rdx */
0x89, 0x04, 0xca,                         /*231: mov    %eax,(%rdx,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*234: mov    $0x0,%eax */
0x0f, 0xb6, 0xe8,                         /*239: movzbl %al,%ebp */
0xff, 0xc5,                               /*23c: inc    %ebp */
0x48, 0x8b, 0x7b, 0x50,                   /*23e: mov    0x50(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*242: callq  247 <op_super+0x247> */
0x44, 0x89, 0x20,                         /*247: mov    %r12d,(%rax) */
0x4c, 0x89, 0x78, 0x08,                   /*24a: mov    %r15,0x8(%rax) */
0x48, 0x8b, 0x4b, 0x50,                   /*24e: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*252: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*256: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x48, 0x10,                   /*25a: mov    %rcx,0x10(%rax) */
0x83, 0xfd, 0x7f,                         /*25e: cmp    $0x7f,%ebp */
0xb9, 0xff, 0xff, 0xff, 0xff,             /*261: mov    $0xffffffff,%ecx */
0x0f, 0x45, 0xcd,                         /*266: cmovne %ebp,%ecx */
0x89, 0x48, 0x40,                         /*269: mov    %ecx,0x40(%rax) */
0x48, 0x8b, 0x0c, 0x24,                   /*26c: mov    (%rsp),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*270: mov    %rcx,0x48(%rax) */
0x48, 0x8b, 0x4b, 0x10,                   /*274: mov    0x10(%rbx),%rcx */
0x48, 0x83, 0xc1, 0x04,                   /*278: add    $0x4,%rcx */
0x48, 0x89, 0x48, 0x30,                   /*27c: mov    %rcx,0x30(%rax) */
0x48, 0x8b, 0x4b, 0x50,                   /*280: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*284: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*288: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*28d: movzwl %dx,%edx */
0x48, 0xc1, 0xe2, 0x03,                   /*290: shl    $0x3,%rdx */
0x48, 0x01, 0x51, 0x08,                   /*294: add    %rdx,0x8(%rcx) */
0x48, 0x8b, 0x4b, 0x50,                   /*298: mov    0x50(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*29c: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*2a0: mov    0x8(%rcx),%rcx */
0x4c, 0x89, 0x31,                         /*2a4: mov    %r14,(%rcx) */
0x41, 0xf6, 0x47, 0x02, 0x04,             /*2a7: testb  $0x4,0x2(%r15) */
0x74, 0x4c,                               /*2ac: je     2fa <op_super+0x2fa> */
0x8d, 0x4d, 0x02,                         /*2ae: lea    0x2(%rbp),%ecx */
0x83, 0xfd, 0x7f,                         /*2b1: cmp    $0x7f,%ebp */
0xba, 0x03, 0x00, 0x00, 0x00,             /*2b4: mov    $0x3,%edx */
0x0f, 0x45, 0xd1,                         /*2b9: cmovne %ecx,%edx */
0x89, 0x50, 0x18,                         /*2bc: mov    %edx,0x18(%rax) */
0x48, 0x8b, 0x7b, 0x50,                   /*2bf: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*2c3: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x68, 0x08,                   /*2c7: mov    0x8(%rax),%rbp */
0x4c, 0x89, 0xf6,                         /*2cb: mov    %r14,%rsi */
0x41, 0xff, 0x57, 0x18,                   /*2ce: callq  *0x18(%r15) */
0x48, 0x89, 0x45, 0x00,                   /*2d2: mov    %rax,0x0(%rbp) */
0x48, 0x8b, 0x7b, 0x50,                   /*2d6: mov    0x50(%rbx),%rdi */
0x8b, 0x73, 0x48,                         /*2da: mov    0x48(%rbx),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2dd: callq  2e2 <op_super+0x2e2> */
0x48, 0x8b, 0x43, 0x50,                   /*2e2: mov    0x50(%rbx),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*2e6: cmpq   $0x0,0x28(%rax) */
0x74, 0x5e,                               /*2eb: je     34b <op_super+0x34b> */
0x48, 0x89, 0xdf,                         /*2ed: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2f0: callq  2f5 <op_super+0x2f5> */
0xe9, 0xa2, 0x00, 0x00, 0x00,             /*2f5: jmpq   39c <op_super+0x39c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2fa: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*2ff: movzwl %cx,%ecx */
0x89, 0x48, 0x44,                         /*302: mov    %ecx,0x44(%rax) */
0x4c, 0x89, 0x78, 0x08,                   /*305: mov    %r15,0x8(%rax) */
0x49, 0x8b, 0x4f, 0x18,                   /*309: mov    0x18(%r15),%rcx */
0x48, 0x89, 0x4b, 0x08,                   /*30d: mov    %rcx,0x8(%rbx) */
0x48, 0x8b, 0x51, 0x10,                   /*311: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x53, 0x20,                   /*315: mov    %rdx,0x20(%rbx) */
0x48, 0x8b, 0x51, 0x18,                   /*319: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x53, 0x28,                   /*31d: mov    %rdx,0x28(%rbx) */
0x0f, 0xb7, 0x49, 0x02,                   /*321: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*325: mov    %ecx,0x18(%rax) */
0x48, 0x8b, 0x4b, 0x08,                   /*328: mov    0x8(%rbx),%rcx */
0x48, 0x8b, 0x7b, 0x50,                   /*32c: mov    0x50(%rbx),%rdi */
0x0f, 0xb7, 0x71, 0x02,                   /*330: movzwl 0x2(%rcx),%esi */
0x83, 0xfd, 0x7f,                         /*334: cmp    $0x7f,%ebp */
0x75, 0x31,                               /*337: jne    36a <op_super+0x36a> */
0x83, 0xfe, 0x03,                         /*339: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*33c: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*341: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*344: mov    $0x3,%edx */
0xeb, 0x25,                               /*349: jmp    370 <op_super+0x370> */
0x48, 0x8b, 0x40, 0x18,                   /*34b: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*34f: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*353: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*357: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x4b, 0x18,                   /*35b: mov    %rcx,0x18(%rbx) */
0x48, 0x8b, 0x7b, 0x50,                   /*35f: mov    0x50(%rbx),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*363: callq  368 <op_super+0x368> */
0xeb, 0x32,                               /*368: jmp    39c <op_super+0x39c> */
0x8b, 0x50, 0x40,                         /*36a: mov    0x40(%rax),%edx */
0x83, 0xc2, 0x02,                         /*36d: add    $0x2,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*370: callq  375 <op_super+0x375> */
0x48, 0x8b, 0x7b, 0x50,                   /*375: mov    0x50(%rbx),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*379: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*37d: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x18,                   /*381: mov    %rax,0x18(%rbx) */
0x48, 0x8b, 0x43, 0x08,                   /*385: mov    0x8(%rbx),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*389: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x10,                   /*38d: mov    %rax,0x10(%rbx) */
0x4c, 0x89, 0xfe,                         /*391: mov    %r15,%rsi */
0x48, 0x89, 0xda,                         /*394: mov    %rbx,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*397: callq  39c <op_super+0x39c> */
0x48, 0x89, 0xdf,                         /*39c: mov    %rbx,%rdi */
0x5b,                                     /*39f: pop    %rbx */
0x41, 0x5c,                               /*3a0: pop    %r12 */
0x41, 0x5d,                               /*3a2: pop    %r13 */
0x41, 0x5e,                               /*3a4: pop    %r14 */
0x41, 0x5f,                               /*3a6: pop    %r15 */
0x5d,                                     /*3a8: pop    %rbp */

};
static uint8_t op_super__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x6f, 0x75, 0x74,
0x73, 0x69, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x00, 0x6d,
0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x00,

};

static void op_super_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_super_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_super_set_args(op, GETARG_A(c),0,GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_argary__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x48,                   /*a: sub    $0x48,%rsp */
0x49, 0x89, 0xff,                         /*e: mov    %rdi,%r15 */
0x49, 0xbc, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*11: movabs $0xfffffffffffc,%r12 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*20: movzwl %ax,%eax */
0x89, 0x44, 0x24, 0x44,                   /*23: mov    %eax,0x44(%rsp) */
0x44, 0x8b, 0x6c, 0x24, 0x44,             /*27: mov    0x44(%rsp),%r13d */
0x44, 0x8b, 0x74, 0x24, 0x44,             /*2c: mov    0x44(%rsp),%r14d */
0x8b, 0x5c, 0x24, 0x44,                   /*31: mov    0x44(%rsp),%ebx */
0x8b, 0x74, 0x24, 0x44,                   /*35: mov    0x44(%rsp),%esi */
0x83, 0xe6, 0x0f,                         /*39: and    $0xf,%esi */
0x0f, 0x84, 0x90, 0x00, 0x00, 0x00,       /*3c: je     d2 <op_argary+0xd2> */
0x49, 0x8b, 0x6f, 0x50,                   /*42: mov    0x50(%r15),%rbp */
0x48, 0x8b, 0x45, 0x18,                   /*46: mov    0x18(%rbp),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*4a: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*4e: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x28,                   /*52: mov    0x28(%rax),%rax */
0x48, 0x85, 0xc0,                         /*56: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*59: sete   %cl */
0x83, 0xfe, 0x01,                         /*5c: cmp    $0x1,%esi */
0x74, 0x22,                               /*5f: je     83 <op_argary+0x83> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*61: mov    $0x1,%edx */
0x29, 0xf2,                               /*66: sub    %esi,%edx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*68: nopl   0x0(%rax,%rax,1) */
0xf6, 0xc1, 0x01,                         /*70: test   $0x1,%cl */
0x75, 0x12,                               /*73: jne    87 <op_argary+0x87> */
0x48, 0x8b, 0x40, 0x08,                   /*75: mov    0x8(%rax),%rax */
0x48, 0x85, 0xc0,                         /*79: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*7c: sete   %cl */
0xff, 0xc2,                               /*7f: inc    %edx */
0x75, 0xed,                               /*81: jne    70 <op_argary+0x70> */
0x84, 0xc9,                               /*83: test   %cl,%cl */
0x74, 0x51,                               /*85: je     d8 <op_argary+0xd8> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*87: mov    0x0(%rip),%rsi        # 8e <op_argary+0x8e> */
0x48, 0x89, 0xef,                         /*8e: mov    %rbp,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*91: callq  96 <op_argary+0x96> */
0x48, 0x89, 0xc3,                         /*96: mov    %rax,%rbx */
0x49, 0x8b, 0x7f, 0x50,                   /*99: mov    0x50(%r15),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*9d: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*a2: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a7: callq  ac <op_argary+0xac> */
0x48, 0x89, 0xef,                         /*ac: mov    %rbp,%rdi */
0x48, 0x89, 0xde,                         /*af: mov    %rbx,%rsi */
0x48, 0x89, 0xc2,                         /*b2: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b5: callq  ba <op_argary+0xba> */
0x48, 0xc1, 0xe0, 0x02,                   /*ba: shl    $0x2,%rax */
0x4c, 0x21, 0xe0,                         /*be: and    %r12,%rax */
0x48, 0x89, 0x45, 0x28,                   /*c1: mov    %rax,0x28(%rbp) */
0x4c, 0x89, 0xff,                         /*c5: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c8: callq  cd <op_argary+0xcd> */
0xe9, 0x2f, 0x02, 0x00, 0x00,             /*cd: jmpq   301 <op_argary+0x301> */
0x49, 0x8d, 0x47, 0x18,                   /*d2: lea    0x18(%r15),%rax */
0xeb, 0x04,                               /*d6: jmp    dc <op_argary+0xdc> */
0x48, 0x83, 0xc0, 0x18,                   /*d8: add    $0x18,%rax */
0x41, 0xc1, 0xed, 0x0a,                   /*dc: shr    $0xa,%r13d */
0x44, 0x89, 0xe9,                         /*e0: mov    %r13d,%ecx */
0x83, 0xe1, 0x3f,                         /*e3: and    $0x3f,%ecx */
0x41, 0xc1, 0xee, 0x09,                   /*e6: shr    $0x9,%r14d */
0x41, 0x83, 0xe6, 0x01,                   /*ea: and    $0x1,%r14d */
0xc1, 0xeb, 0x04,                         /*ee: shr    $0x4,%ebx */
0x89, 0xda,                               /*f1: mov    %ebx,%edx */
0x83, 0xe2, 0x1f,                         /*f3: and    $0x1f,%edx */
0x4c, 0x8b, 0x00,                         /*f6: mov    (%rax),%r8 */
0x49, 0x8d, 0x68, 0x08,                   /*f9: lea    0x8(%r8),%rbp */
0x45, 0x85, 0xf6,                         /*fd: test   %r14d,%r14d */
0x74, 0x48,                               /*100: je     14a <op_argary+0x14a> */
0x89, 0xce,                               /*102: mov    %ecx,%esi */
0x41, 0x8b, 0x44, 0xf0, 0x0c,             /*104: mov    0xc(%r8,%rsi,8),%eax */
0x45, 0x31, 0xe4,                         /*109: xor    %r12d,%r12d */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*10c: cmp    $0xfff00001,%eax */
0x72, 0x76,                               /*111: jb     189 <op_argary+0x189> */
0x44, 0x89, 0x74, 0x24, 0x38,             /*113: mov    %r14d,0x38(%rsp) */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*118: and    $0xfc000,%eax */
0x3d, 0x00, 0xc0, 0x03, 0x00,             /*11d: cmp    $0x3c000,%eax */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*122: mov    $0x0,%r9d */
0x75, 0x67,                               /*128: jne    191 <op_argary+0x191> */
0x49, 0x8b, 0x44, 0xf0, 0x08,             /*12a: mov    0x8(%r8,%rsi,8),%rax */
0x48, 0xc1, 0xe0, 0x02,                   /*12f: shl    $0x2,%rax */
0x48, 0xbf, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*133: movabs $0xfffffffffffc,%rdi */
0x48, 0x21, 0xf8,                         /*13d: and    %rdi,%rax */
0x4c, 0x8b, 0x60, 0x28,                   /*140: mov    0x28(%rax),%r12 */
0x44, 0x8b, 0x48, 0x18,                   /*144: mov    0x18(%rax),%r9d */
0xeb, 0x47,                               /*148: jmp    191 <op_argary+0x191> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14a: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*14f: movzwl %ax,%eax */
0x48, 0x89, 0x44, 0x24, 0x38,             /*152: mov    %rax,0x38(%rsp) */
0x4d, 0x8b, 0x6f, 0x18,                   /*157: mov    0x18(%r15),%r13 */
0x49, 0x8b, 0x7f, 0x50,                   /*15b: mov    0x50(%r15),%rdi */
0x49, 0x89, 0xd4,                         /*15f: mov    %rdx,%r12 */
0x41, 0x8d, 0x34, 0x0c,                   /*162: lea    (%r12,%rcx,1),%esi */
0x48, 0x89, 0xea,                         /*166: mov    %rbp,%rdx */
0x4c, 0x89, 0xc5,                         /*169: mov    %r8,%rbp */
0x48, 0x89, 0xcb,                         /*16c: mov    %rcx,%rbx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*16f: callq  174 <op_argary+0x174> */
0x48, 0x89, 0xdf,                         /*174: mov    %rbx,%rdi */
0x49, 0x89, 0xe9,                         /*177: mov    %rbp,%r9 */
0x48, 0x8b, 0x4c, 0x24, 0x38,             /*17a: mov    0x38(%rsp),%rcx */
0x49, 0x89, 0x44, 0xcd, 0x00,             /*17f: mov    %rax,0x0(%r13,%rcx,8) */
0xe9, 0x43, 0x01, 0x00, 0x00,             /*184: jmpq   2cc <op_argary+0x2cc> */
0x44, 0x89, 0x74, 0x24, 0x38,             /*189: mov    %r14d,0x38(%rsp) */
0x45, 0x31, 0xc9,                         /*18e: xor    %r9d,%r9d */
0x4c, 0x89, 0x4c, 0x24, 0x10,             /*191: mov    %r9,0x10(%rsp) */
0x48, 0x89, 0x74, 0x24, 0x20,             /*196: mov    %rsi,0x20(%rsp) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*19b: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*1a0: movzwl %ax,%eax */
0x48, 0x89, 0x44, 0x24, 0x08,             /*1a3: mov    %rax,0x8(%rsp) */
0x4d, 0x89, 0xfe,                         /*1a8: mov    %r15,%r14 */
0x49, 0x8b, 0x46, 0x18,                   /*1ab: mov    0x18(%r14),%rax */
0x48, 0x89, 0x04, 0x24,                   /*1af: mov    %rax,(%rsp) */
0x49, 0x8b, 0x7e, 0x50,                   /*1b3: mov    0x50(%r14),%rdi */
0x8d, 0x34, 0x0a,                         /*1b7: lea    (%rdx,%rcx,1),%esi */
0x48, 0x89, 0x54, 0x24, 0x28,             /*1ba: mov    %rdx,0x28(%rsp) */
0x44, 0x01, 0xce,                         /*1bf: add    %r9d,%esi */
0x89, 0x74, 0x24, 0x1c,                   /*1c2: mov    %esi,0x1c(%rsp) */
0x4c, 0x89, 0x44, 0x24, 0x30,             /*1c6: mov    %r8,0x30(%rsp) */
0x49, 0x89, 0xcf,                         /*1cb: mov    %rcx,%r15 */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1ce: callq  1d3 <op_argary+0x1d3> */
0x4c, 0x89, 0xff,                         /*1d3: mov    %r15,%rdi */
0x4c, 0x8b, 0x4c, 0x24, 0x30,             /*1d6: mov    0x30(%rsp),%r9 */
0x48, 0x8b, 0x4c, 0x24, 0x08,             /*1db: mov    0x8(%rsp),%rcx */
0x48, 0x8b, 0x14, 0x24,                   /*1e0: mov    (%rsp),%rdx */
0x48, 0x89, 0x04, 0xca,                   /*1e4: mov    %rax,(%rdx,%rcx,8) */
0x49, 0x8b, 0x46, 0x18,                   /*1e8: mov    0x18(%r14),%rax */
0x4d, 0x89, 0xf0,                         /*1ec: mov    %r14,%r8 */
0x48, 0x8b, 0x04, 0xc8,                   /*1ef: mov    (%rax,%rcx,8),%rax */
0x48, 0xc1, 0xe0, 0x02,                   /*1f3: shl    $0x2,%rax */
0x48, 0xb9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*1f7: movabs $0xfffffffffffc,%rcx */
0x48, 0x21, 0xc8,                         /*201: and    %rcx,%rax */
0x85, 0xff,                               /*204: test   %edi,%edi */
0x74, 0x36,                               /*206: je     23e <op_argary+0x23e> */
0x48, 0x8b, 0x48, 0x28,                   /*208: mov    0x28(%rax),%rcx */
0x49, 0x83, 0xe5, 0x3f,                   /*20c: and    $0x3f,%r13 */
0x49, 0xf7, 0xdd,                         /*210: neg    %r13 */
0x4c, 0x89, 0xca,                         /*213: mov    %r9,%rdx */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*216: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xee,                         /*220: mov    %rbp,%rsi */
0x48, 0x83, 0xc2, 0x10,                   /*223: add    $0x10,%rdx */
0xf2, 0x0f, 0x10, 0x06,                   /*227: movsd  (%rsi),%xmm0 */
0xf2, 0x0f, 0x11, 0x01,                   /*22b: movsd  %xmm0,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*22f: add    $0x8,%rcx */
0x49, 0xff, 0xc5,                         /*233: inc    %r13 */
0x48, 0x89, 0xd5,                         /*236: mov    %rdx,%rbp */
0x48, 0x89, 0xf2,                         /*239: mov    %rsi,%rdx */
0x75, 0xe2,                               /*23c: jne    220 <op_argary+0x220> */
0x48, 0x8b, 0x6c, 0x24, 0x10,             /*23e: mov    0x10(%rsp),%rbp */
0x85, 0xed,                               /*243: test   %ebp,%ebp */
0x44, 0x8b, 0x74, 0x24, 0x38,             /*245: mov    0x38(%rsp),%r14d */
0x4c, 0x8b, 0x54, 0x24, 0x20,             /*24a: mov    0x20(%rsp),%r10 */
0x7e, 0x36,                               /*24f: jle    287 <op_argary+0x287> */
0x4a, 0x8d, 0x0c, 0xd5, 0x00, 0x00, 0x00, 0x00,/*251: lea    0x0(,%r10,8),%rcx */
0x48, 0x03, 0x48, 0x28,                   /*259: add    0x28(%rax),%rcx */
0x48, 0x63, 0xd5,                         /*25d: movslq %ebp,%rdx */
0x48, 0xf7, 0xda,                         /*260: neg    %rdx */
0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*263: data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0xf2, 0x41, 0x0f, 0x10, 0x04, 0x24,       /*270: movsd  (%r12),%xmm0 */
0x49, 0x83, 0xc4, 0x08,                   /*276: add    $0x8,%r12 */
0xf2, 0x0f, 0x11, 0x01,                   /*27a: movsd  %xmm0,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*27e: add    $0x8,%rcx */
0x48, 0xff, 0xc2,                         /*282: inc    %rdx */
0x75, 0xe9,                               /*285: jne    270 <op_argary+0x270> */
0x4c, 0x8b, 0x64, 0x24, 0x28,             /*287: mov    0x28(%rsp),%r12 */
0x45, 0x85, 0xe4,                         /*28c: test   %r12d,%r12d */
0x4d, 0x89, 0xc7,                         /*28f: mov    %r8,%r15 */
0x74, 0x31,                               /*292: je     2c5 <op_argary+0x2c5> */
0x4b, 0x8d, 0x4c, 0xd1, 0x10,             /*294: lea    0x10(%r9,%r10,8),%rcx */
0x48, 0x63, 0xd5,                         /*299: movslq %ebp,%rdx */
0x4c, 0x01, 0xd2,                         /*29c: add    %r10,%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*29f: shl    $0x3,%rdx */
0x48, 0x03, 0x50, 0x28,                   /*2a3: add    0x28(%rax),%rdx */
0x48, 0x83, 0xe3, 0x1f,                   /*2a7: and    $0x1f,%rbx */
0x48, 0xf7, 0xdb,                         /*2ab: neg    %rbx */
0x66, 0x90,                               /*2ae: xchg   %ax,%ax */
0xf2, 0x0f, 0x10, 0x01,                   /*2b0: movsd  (%rcx),%xmm0 */
0x48, 0x83, 0xc1, 0x08,                   /*2b4: add    $0x8,%rcx */
0xf2, 0x0f, 0x11, 0x02,                   /*2b8: movsd  %xmm0,(%rdx) */
0x48, 0x83, 0xc2, 0x08,                   /*2bc: add    $0x8,%rdx */
0x48, 0xff, 0xc3,                         /*2c0: inc    %rbx */
0x75, 0xeb,                               /*2c3: jne    2b0 <op_argary+0x2b0> */
0x8b, 0x4c, 0x24, 0x1c,                   /*2c5: mov    0x1c(%rsp),%ecx */
0x89, 0x48, 0x18,                         /*2c9: mov    %ecx,0x18(%rax) */
0x49, 0x8b, 0x47, 0x18,                   /*2cc: mov    0x18(%r15),%rax */
0x44, 0x01, 0xf7,                         /*2d0: add    %r14d,%edi */
0x41, 0x8d, 0x4c, 0x3c, 0x01,             /*2d3: lea    0x1(%r12,%rdi,1),%ecx */
0x48, 0x63, 0xc9,                         /*2d8: movslq %ecx,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2db: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*2e0: movzwl %dx,%edx */
0xff, 0xc2,                               /*2e3: inc    %edx */
0x48, 0x63, 0xd2,                         /*2e5: movslq %edx,%rdx */
0xf2, 0x41, 0x0f, 0x10, 0x04, 0xc9,       /*2e8: movsd  (%r9,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xd0,             /*2ee: movsd  %xmm0,(%rax,%rdx,8) */
0x41, 0x8b, 0x47, 0x48,                   /*2f3: mov    0x48(%r15),%eax */
0x49, 0x8b, 0x4f, 0x50,                   /*2f7: mov    0x50(%r15),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*2fb: mov    %eax,0xdc(%rcx) */
0x4c, 0x89, 0xff,                         /*301: mov    %r15,%rdi */
0x48, 0x83, 0xc4, 0x48,                   /*304: add    $0x48,%rsp */
0x5b,                                     /*308: pop    %rbx */
0x41, 0x5c,                               /*309: pop    %r12 */
0x41, 0x5d,                               /*30b: pop    %r13 */
0x41, 0x5e,                               /*30d: pop    %r14 */
0x41, 0x5f,                               /*30f: pop    %r15 */
0x5d,                                     /*311: pop    %rbp */

};
static uint8_t op_argary__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x20, 0x6f, 0x75, 0x74,
0x73, 0x69, 0x64, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x00,

};

static void op_argary_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_argary_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_argary_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_enter__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*a: sub    $0x18,%rsp */
0x49, 0x89, 0xff,                         /*e: mov    %rdi,%r15 */
0x4d, 0x8b, 0x6f, 0x18,                   /*11: mov    0x18(%r15),%r13 */
0x49, 0x8b, 0x7f, 0x50,                   /*15: mov    0x50(%r15),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*19: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1d: mov    0x20(%rax),%rax */
0x48, 0x63, 0x58, 0x40,                   /*21: movslq 0x40(%rax),%rbx */
0x48, 0x85, 0xdb,                         /*25: test   %rbx,%rbx */
0x48, 0x8d, 0x43, 0x01,                   /*28: lea    0x1(%rbx),%rax */
0xb9, 0x02, 0x00, 0x00, 0x00,             /*2c: mov    $0x2,%ecx */
0x48, 0x0f, 0x49, 0xc8,                   /*31: cmovns %rax,%rcx */
0x4d, 0x8d, 0x64, 0xcd, 0x00,             /*35: lea    0x0(%r13,%rcx,8),%r12 */
0x41, 0x8b, 0x44, 0xcd, 0x04,             /*3a: mov    0x4(%r13,%rcx,8),%eax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*3f: cmp    $0xfff00001,%eax */
0x72, 0x1a,                               /*44: jb     60 <op_enter+0x60> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*46: and    $0xfc000,%eax */
0x3d, 0x00, 0x80, 0x03, 0x00,             /*4b: cmp    $0x38000,%eax */
0x74, 0x2b,                               /*50: je     7d <op_enter+0x7d> */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*52: cmp    $0x4000,%eax */
0x75, 0x07,                               /*57: jne    60 <op_enter+0x60> */
0x41, 0x83, 0x3c, 0x24, 0x00,             /*59: cmpl   $0x0,(%r12) */
0x74, 0x1d,                               /*5e: je     7d <op_enter+0x7d> */
0x49, 0x8b, 0x34, 0x24,                   /*60: mov    (%r12),%rsi */
0xba, 0x0d, 0x00, 0x00, 0x00,             /*64: mov    $0xd,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*69: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*6e: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*74: callq  79 <op_enter+0x79> */
0x49, 0x89, 0x04, 0x24,                   /*79: mov    %rax,(%r12) */
0x49, 0x83, 0xc5, 0x08,                   /*7d: add    $0x8,%r13 */
0x48, 0xbd, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*81: movabs $0xfffffffffffc,%rbp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*8b: mov    $0x0,%edi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*90: mov    $0x0,%edx */
0x31, 0xc0,                               /*95: xor    %eax,%eax */
0x4c, 0x89, 0xe6,                         /*97: mov    %r12,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*9a: callq  9f <op_enter+0x9f> */
0x85, 0xdb,                               /*9f: test   %ebx,%ebx */
0x4d, 0x89, 0xee,                         /*a1: mov    %r13,%r14 */
0x79, 0x23,                               /*a4: jns    c9 <op_enter+0xc9> */
0x49, 0x8b, 0x47, 0x18,                   /*a6: mov    0x18(%r15),%rax */
0x49, 0x8b, 0x7f, 0x50,                   /*aa: mov    0x50(%r15),%rdi */
0x48, 0x8b, 0x70, 0x08,                   /*ae: mov    0x8(%rax),%rsi */
0x48, 0x8d, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00,/*b2: lea    0x0(,%rsi,4),%rax */
0x48, 0x21, 0xe8,                         /*ba: and    %rbp,%rax */
0x4c, 0x8b, 0x70, 0x28,                   /*bd: mov    0x28(%rax),%r14 */
0x8b, 0x58, 0x18,                         /*c1: mov    0x18(%rax),%ebx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c4: callq  c9 <op_enter+0xc9> */
0x49, 0x8b, 0x7f, 0x50,                   /*c9: mov    0x50(%r15),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*cd: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*d1: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*d5: mov    0x8(%rax),%rcx */
0x48, 0x85, 0xc9,                         /*d9: test   %rcx,%rcx */
0x0f, 0x84, 0x83, 0x00, 0x00, 0x00,       /*dc: je     165 <op_enter+0x165> */
0xf6, 0x41, 0x02, 0x08,                   /*e2: testb  $0x8,0x2(%rcx) */
0x74, 0x7d,                               /*e6: je     165 <op_enter+0x165> */
0x85, 0xdb,                               /*e8: test   %ebx,%ebx */
0x0f, 0x88, 0xf5, 0x00, 0x00, 0x00,       /*ea: js     1e5 <op_enter+0x1e5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*f0: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*f5: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*fa: shr    $0x7,%esi */
0x83, 0xe6, 0x1f,                         /*fd: and    $0x1f,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*100: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*105: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*108: and    $0x1f,%ecx */
0x44, 0x8d, 0x04, 0x31,                   /*10b: lea    (%rcx,%rsi,1),%r8d */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*10f: mov    $0x0,%ebp */
0xc1, 0xed, 0x0d,                         /*114: shr    $0xd,%ebp */
0x83, 0xe5, 0x1f,                         /*117: and    $0x1f,%ebp */
0x01, 0xcd,                               /*11a: add    %ecx,%ebp */
0xc1, 0xea, 0x0c,                         /*11c: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*11f: and    $0x1,%edx */
0x0f, 0x94, 0xc1,                         /*122: sete   %cl */
0x01, 0xea,                               /*125: add    %ebp,%edx */
0x01, 0xf2,                               /*127: add    %esi,%edx */
0x39, 0xd3,                               /*129: cmp    %edx,%ebx */
0x0f, 0x9f, 0xc2,                         /*12b: setg   %dl */
0x44, 0x39, 0xc3,                         /*12e: cmp    %r8d,%ebx */
0x7c, 0x08,                               /*131: jl     13b <op_enter+0x13b> */
0x20, 0xca,                               /*133: and    %cl,%dl */
0x0f, 0x84, 0xaa, 0x00, 0x00, 0x00,       /*135: je     1e5 <op_enter+0x1e5> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*13b: mov    $0x0,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*140: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*145: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*148: and    $0x1f,%eax */
0xc1, 0xee, 0x12,                         /*14b: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*14e: and    $0x1f,%esi */
0x01, 0xc6,                               /*151: add    %eax,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*153: callq  158 <op_enter+0x158> */
0x4c, 0x89, 0xff,                         /*158: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*15b: callq  160 <op_enter+0x160> */
0xe9, 0xfa, 0x06, 0x00, 0x00,             /*160: jmpq   85f <op_enter+0x85f> */
0x83, 0xfb, 0x01,                         /*165: cmp    $0x1,%ebx */
0x75, 0x7b,                               /*168: jne    1e5 <op_enter+0x1e5> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16a: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*16f: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*174: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*177: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*17a: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*17f: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*182: and    $0x1f,%esi */
0x01, 0xd6,                               /*185: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*187: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*18c: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*18f: and    $0x1,%edx */
0x01, 0xf2,                               /*192: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*194: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*197: and    $0x1f,%ecx */
0x01, 0xd1,                               /*19a: add    %edx,%ecx */
0x83, 0xf9, 0x02,                         /*19c: cmp    $0x2,%ecx */
0x7c, 0x44,                               /*19f: jl     1e5 <op_enter+0x1e5> */
0x41, 0x8b, 0x4e, 0x04,                   /*1a1: mov    0x4(%r14),%ecx */
0xbb, 0x01, 0x00, 0x00, 0x00,             /*1a5: mov    $0x1,%ebx */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*1aa: cmp    $0xfff00001,%ecx */
0x72, 0x33,                               /*1b0: jb     1e5 <op_enter+0x1e5> */
0x81, 0xe1, 0x00, 0xc0, 0x0f, 0x00,       /*1b2: and    $0xfc000,%ecx */
0x81, 0xf9, 0x00, 0xc0, 0x03, 0x00,       /*1b8: cmp    $0x3c000,%ecx */
0x75, 0x25,                               /*1be: jne    1e5 <op_enter+0x1e5> */
0x49, 0x8b, 0x36,                         /*1c0: mov    (%r14),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c3: callq  1c8 <op_enter+0x1c8> */
0x49, 0x8b, 0x06,                         /*1c8: mov    (%r14),%rax */
0x48, 0xc1, 0xe0, 0x02,                   /*1cb: shl    $0x2,%rax */
0x48, 0x21, 0xe8,                         /*1cf: and    %rbp,%rax */
0x8b, 0x58, 0x18,                         /*1d2: mov    0x18(%rax),%ebx */
0x4c, 0x8b, 0x70, 0x28,                   /*1d5: mov    0x28(%rax),%r14 */
0x49, 0x8b, 0x47, 0x50,                   /*1d9: mov    0x50(%r15),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*1dd: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1e1: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1e5: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1ea: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*1ef: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*1f2: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1f5: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*1fa: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*1fd: and    $0x1f,%esi */
0x01, 0xd6,                               /*200: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*202: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*207: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*20a: and    $0x1,%edx */
0x01, 0xf2,                               /*20d: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*20f: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*212: and    $0x1f,%ecx */
0x01, 0xd1,                               /*215: add    %edx,%ecx */
0x89, 0x48, 0x40,                         /*217: mov    %ecx,0x40(%rax) */
0x39, 0xcb,                               /*21a: cmp    %ecx,%ebx */
0x0f, 0x8d, 0xe4, 0x00, 0x00, 0x00,       /*21c: jge    306 <op_enter+0x306> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*222: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*227: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*22c: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*22f: and    $0x1f,%eax */
0xc1, 0xe9, 0x12,                         /*232: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*235: and    $0x1f,%ecx */
0x01, 0xc1,                               /*238: add    %eax,%ecx */
0x39, 0xcb,                               /*23a: cmp    %ecx,%ebx */
0x7d, 0x14,                               /*23c: jge    252 <op_enter+0x252> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*23e: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*243: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*246: and    $0x1f,%ecx */
0x31, 0xd2,                               /*249: xor    %edx,%edx */
0x89, 0xd8,                               /*24b: mov    %ebx,%eax */
0x29, 0xc8,                               /*24d: sub    %ecx,%eax */
0x0f, 0x4e, 0xc2,                         /*24f: cmovle %edx,%eax */
0x49, 0x8b, 0x4f, 0x18,                   /*252: mov    0x18(%r15),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*256: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*25b: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*260: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*263: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*266: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*26b: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*26e: and    $0x1f,%edi */
0x01, 0xf7,                               /*271: add    %esi,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*273: mov    $0x0,%esi */
0xc1, 0xee, 0x0c,                         /*278: shr    $0xc,%esi */
0x83, 0xe6, 0x01,                         /*27b: and    $0x1,%esi */
0x01, 0xfe,                               /*27e: add    %edi,%esi */
0xc1, 0xea, 0x07,                         /*280: shr    $0x7,%edx */
0x83, 0xe2, 0x1f,                         /*283: and    $0x1f,%edx */
0x8d, 0x54, 0x32, 0x01,                   /*286: lea    0x1(%rdx,%rsi,1),%edx */
0x48, 0x63, 0xd2,                         /*28a: movslq %edx,%rdx */
0xf2, 0x41, 0x0f, 0x10, 0x04, 0x24,       /*28d: movsd  (%r12),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xd1,             /*293: movsd  %xmm0,(%rcx,%rdx,8) */
0x8d, 0x4b, 0x01,                         /*298: lea    0x1(%rbx),%ecx */
0x48, 0x63, 0xc9,                         /*29b: movslq %ecx,%rcx */
0x49, 0x8b, 0x57, 0x18,                   /*29e: mov    0x18(%r15),%rdx */
0xc7, 0x44, 0xca, 0x04, 0x00, 0x40, 0xf0, 0xff,/*2a2: movl   $0xfff04000,0x4(%rdx,%rcx,8) */
0x49, 0x8b, 0x57, 0x18,                   /*2aa: mov    0x18(%r15),%rdx */
0xc7, 0x04, 0xca, 0x00, 0x00, 0x00, 0x00, /*2ae: movl   $0x0,(%rdx,%rcx,8) */
0x4d, 0x39, 0xf5,                         /*2b5: cmp    %r14,%r13 */
0x0f, 0x84, 0x60, 0x01, 0x00, 0x00,       /*2b8: je     41e <op_enter+0x41e> */
0x49, 0x8b, 0x4f, 0x18,                   /*2be: mov    0x18(%r15),%rcx */
0x48, 0x8d, 0x69, 0x08,                   /*2c2: lea    0x8(%rcx),%rbp */
0x4c, 0x39, 0xf5,                         /*2c6: cmp    %r14,%rbp */
0x0f, 0x86, 0x17, 0x01, 0x00, 0x00,       /*2c9: jbe    3e6 <op_enter+0x3e6> */
0x89, 0xde,                               /*2cf: mov    %ebx,%esi */
0x29, 0xc6,                               /*2d1: sub    %eax,%esi */
0x48, 0x63, 0xf6,                         /*2d3: movslq %esi,%rsi */
0x49, 0x8d, 0x3c, 0xf6,                   /*2d6: lea    (%r14,%rsi,8),%rdi */
0x48, 0x39, 0xfd,                         /*2da: cmp    %rdi,%rbp */
0x0f, 0x83, 0x03, 0x01, 0x00, 0x00,       /*2dd: jae    3e6 <op_enter+0x3e6> */
0x39, 0xc3,                               /*2e3: cmp    %eax,%ebx */
0x0f, 0x84, 0x33, 0x01, 0x00, 0x00,       /*2e5: je     41e <op_enter+0x41e> */
0x0f, 0x1f, 0x44, 0x00, 0x00,             /*2eb: nopl   0x0(%rax,%rax,1) */
0xf2, 0x41, 0x0f, 0x10, 0x44, 0xf6, 0xf8, /*2f0: movsd  -0x8(%r14,%rsi,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xf1,             /*2f7: movsd  %xmm0,(%rcx,%rsi,8) */
0x48, 0xff, 0xce,                         /*2fc: dec    %rsi */
0x75, 0xef,                               /*2ff: jne    2f0 <op_enter+0x2f0> */
0xe9, 0x18, 0x01, 0x00, 0x00,             /*301: jmpq   41e <op_enter+0x41e> */
0x4d, 0x39, 0xf5,                         /*306: cmp    %r14,%r13 */
0x0f, 0x84, 0x2f, 0x02, 0x00, 0x00,       /*309: je     53e <op_enter+0x53e> */
0x49, 0x8b, 0x47, 0x18,                   /*30f: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*313: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*318: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*31d: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*320: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*323: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*328: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*32b: and    $0x1f,%esi */
0x01, 0xd6,                               /*32e: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*330: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*335: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*338: and    $0x1,%edx */
0x01, 0xf2,                               /*33b: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*33d: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*340: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*343: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*347: movslq %ecx,%rcx */
0xf2, 0x41, 0x0f, 0x10, 0x04, 0x24,       /*34a: movsd  (%r12),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*350: movsd  %xmm0,(%rax,%rcx,8) */
0x49, 0x8b, 0x47, 0x18,                   /*355: mov    0x18(%r15),%rax */
0x48, 0x8d, 0x48, 0x08,                   /*359: lea    0x8(%rax),%rcx */
0x4c, 0x39, 0xf1,                         /*35d: cmp    %r14,%rcx */
0x0f, 0x86, 0x6e, 0x01, 0x00, 0x00,       /*360: jbe    4d4 <op_enter+0x4d4> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*366: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*36b: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*370: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*373: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*376: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*379: and    $0x1f,%edx */
0x01, 0xf2,                               /*37c: add    %esi,%edx */
0x48, 0x63, 0xd2,                         /*37e: movslq %edx,%rdx */
0x49, 0x8d, 0x14, 0xd6,                   /*381: lea    (%r14,%rdx,8),%rdx */
0x48, 0x39, 0xd1,                         /*385: cmp    %rdx,%rcx */
0x0f, 0x83, 0x46, 0x01, 0x00, 0x00,       /*388: jae    4d4 <op_enter+0x4d4> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*38e: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*393: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*398: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*39b: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*39e: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*3a1: and    $0x1f,%ecx */
0x01, 0xd1,                               /*3a4: add    %edx,%ecx */
0x0f, 0x84, 0x92, 0x01, 0x00, 0x00,       /*3a6: je     53e <op_enter+0x53e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3ac: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3b1: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*3b6: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*3b9: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*3bc: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*3bf: and    $0x1f,%ecx */
0x01, 0xd1,                               /*3c2: add    %edx,%ecx */
0x48, 0x63, 0xc9,                         /*3c4: movslq %ecx,%rcx */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*3c7: nopw   0x0(%rax,%rax,1) */
0xf2, 0x41, 0x0f, 0x10, 0x44, 0xce, 0xf8, /*3d0: movsd  -0x8(%r14,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*3d7: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*3dc: dec    %rcx */
0x75, 0xef,                               /*3df: jne    3d0 <op_enter+0x3d0> */
0xe9, 0x58, 0x01, 0x00, 0x00,             /*3e1: jmpq   53e <op_enter+0x53e> */
0x4c, 0x39, 0xf5,                         /*3e6: cmp    %r14,%rbp */
0x74, 0x33,                               /*3e9: je     41e <op_enter+0x41e> */
0x89, 0xde,                               /*3eb: mov    %ebx,%esi */
0x29, 0xc6,                               /*3ed: sub    %eax,%esi */
0x74, 0x2d,                               /*3ef: je     41e <op_enter+0x41e> */
0x48, 0x63, 0xf6,                         /*3f1: movslq %esi,%rsi */
0x48, 0xf7, 0xde,                         /*3f4: neg    %rsi */
0x4c, 0x89, 0xf7,                         /*3f7: mov    %r14,%rdi */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*3fa: nopw   0x0(%rax,%rax,1) */
0x48, 0x89, 0xea,                         /*400: mov    %rbp,%rdx */
0x48, 0x83, 0xc1, 0x10,                   /*403: add    $0x10,%rcx */
0xf2, 0x0f, 0x10, 0x07,                   /*407: movsd  (%rdi),%xmm0 */
0x48, 0x83, 0xc7, 0x08,                   /*40b: add    $0x8,%rdi */
0xf2, 0x0f, 0x11, 0x02,                   /*40f: movsd  %xmm0,(%rdx) */
0x48, 0xff, 0xc6,                         /*413: inc    %rsi */
0x48, 0x89, 0xcd,                         /*416: mov    %rcx,%rbp */
0x48, 0x89, 0xd1,                         /*419: mov    %rdx,%rcx */
0x75, 0xe2,                               /*41c: jne    400 <op_enter+0x400> */
0x85, 0xc0,                               /*41e: test   %eax,%eax */
0x0f, 0x84, 0xcf, 0x02, 0x00, 0x00,       /*420: je     6f5 <op_enter+0x6f5> */
0x4d, 0x8b, 0x47, 0x18,                   /*426: mov    0x18(%r15),%r8 */
0xba, 0x00, 0x00, 0x00, 0x00,             /*42a: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*42f: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*434: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*437: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*43a: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*43f: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*442: and    $0x1f,%edi */
0x01, 0xf7,                               /*445: add    %esi,%edi */
0xc1, 0xea, 0x0c,                         /*447: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*44a: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*44d: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x63, 0xd2,                         /*451: movslq %edx,%rdx */
0x49, 0x8d, 0x14, 0xd0,                   /*454: lea    (%r8,%rdx,8),%rdx */
0x89, 0xde,                               /*458: mov    %ebx,%esi */
0x29, 0xc6,                               /*45a: sub    %eax,%esi */
0x48, 0x63, 0xee,                         /*45c: movslq %esi,%rbp */
0x49, 0x8d, 0x3c, 0xee,                   /*45f: lea    (%r14,%rbp,8),%rdi */
0x48, 0x39, 0xfa,                         /*463: cmp    %rdi,%rdx */
0x0f, 0x86, 0x68, 0x02, 0x00, 0x00,       /*466: jbe    6d4 <op_enter+0x6d4> */
0x48, 0x63, 0xf0,                         /*46c: movslq %eax,%rsi */
0x48, 0x8d, 0x4c, 0x35, 0x00,             /*46f: lea    0x0(%rbp,%rsi,1),%rcx */
0x49, 0x8d, 0x0c, 0xce,                   /*474: lea    (%r14,%rcx,8),%rcx */
0x48, 0x39, 0xca,                         /*478: cmp    %rcx,%rdx */
0x0f, 0x83, 0x53, 0x02, 0x00, 0x00,       /*47b: jae    6d4 <op_enter+0x6d4> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*481: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*486: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*48b: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*48e: and    $0x1f,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*491: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*496: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*499: and    $0x1f,%edx */
0x01, 0xca,                               /*49c: add    %ecx,%edx */
0xc1, 0xe8, 0x0c,                         /*49e: shr    $0xc,%eax */
0x83, 0xe0, 0x01,                         /*4a1: and    $0x1,%eax */
0x8d, 0x44, 0x10, 0x01,                   /*4a4: lea    0x1(%rax,%rdx,1),%eax */
0x49, 0x8d, 0x44, 0xc0, 0xf8,             /*4a8: lea    -0x8(%r8,%rax,8),%rax */
0x49, 0x8d, 0x4c, 0xee, 0xf8,             /*4ad: lea    -0x8(%r14,%rbp,8),%rcx */
0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*4b2: data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x04, 0xf1,             /*4c0: movsd  (%rcx,%rsi,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xf0,             /*4c5: movsd  %xmm0,(%rax,%rsi,8) */
0x48, 0xff, 0xce,                         /*4ca: dec    %rsi */
0x75, 0xf1,                               /*4cd: jne    4c0 <op_enter+0x4c0> */
0xe9, 0x21, 0x02, 0x00, 0x00,             /*4cf: jmpq   6f5 <op_enter+0x6f5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4d4: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4d9: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*4de: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*4e1: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*4e4: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*4e7: and    $0x1f,%edx */
0x01, 0xf2,                               /*4ea: add    %esi,%edx */
0x4c, 0x39, 0xf1,                         /*4ec: cmp    %r14,%rcx */
0x74, 0x4d,                               /*4ef: je     53e <op_enter+0x53e> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4f1: mov    $0x0,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*4f6: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*4fb: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*4fe: and    $0x1f,%edi */
0xc1, 0xee, 0x12,                         /*501: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*504: and    $0x1f,%esi */
0x01, 0xfe,                               /*507: add    %edi,%esi */
0x74, 0x33,                               /*509: je     53e <op_enter+0x53e> */
0x48, 0xf7, 0xda,                         /*50b: neg    %rdx */
0x4c, 0x89, 0xf6,                         /*50e: mov    %r14,%rsi */
0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*511: data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xcf,                         /*520: mov    %rcx,%rdi */
0x48, 0x83, 0xc0, 0x10,                   /*523: add    $0x10,%rax */
0xf2, 0x0f, 0x10, 0x06,                   /*527: movsd  (%rsi),%xmm0 */
0x48, 0x83, 0xc6, 0x08,                   /*52b: add    $0x8,%rsi */
0xf2, 0x0f, 0x11, 0x07,                   /*52f: movsd  %xmm0,(%rdi) */
0x48, 0xff, 0xc2,                         /*533: inc    %rdx */
0x48, 0x89, 0xc1,                         /*536: mov    %rax,%rcx */
0x48, 0x89, 0xf8,                         /*539: mov    %rdi,%rax */
0x75, 0xe2,                               /*53c: jne    520 <op_enter+0x520> */
0x4c, 0x89, 0x74, 0x24, 0x10,             /*53e: mov    %r14,0x10(%rsp) */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*543: mov    $0x0,%ebp */
0x0f, 0xba, 0xe5, 0x0c,                   /*548: bt     $0xc,%ebp */
0x72, 0x15,                               /*54c: jb     563 <op_enter+0x563> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*54e: mov    $0x0,%eax */
0xc1, 0xe8, 0x0d,                         /*553: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*556: and    $0x1f,%eax */
0xc1, 0xed, 0x12,                         /*559: shr    $0x12,%ebp */
0x83, 0xe5, 0x1f,                         /*55c: and    $0x1f,%ebp */
0x01, 0xc5,                               /*55f: add    %eax,%ebp */
0xeb, 0x6f,                               /*561: jmp    5d2 <op_enter+0x5d2> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*563: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*568: mov    $0x0,%eax */
0xc1, 0xe8, 0x0d,                         /*56d: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*570: and    $0x1f,%eax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*573: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*578: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*57b: and    $0x1f,%edx */
0x41, 0x89, 0xd6,                         /*57e: mov    %edx,%r14d */
0x41, 0xf7, 0xde,                         /*581: neg    %r14d */
0x41, 0x29, 0xc6,                         /*584: sub    %eax,%r14d */
0xc1, 0xe9, 0x07,                         /*587: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*58a: and    $0x1f,%ecx */
0x41, 0x29, 0xce,                         /*58d: sub    %ecx,%r14d */
0x42, 0x8d, 0x34, 0x33,                   /*590: lea    (%rbx,%r14,1),%esi */
0x8d, 0x2c, 0x02,                         /*594: lea    (%rdx,%rax,1),%ebp */
0x8d, 0x4c, 0x02, 0x01,                   /*597: lea    0x1(%rdx,%rax,1),%ecx */
0x4c, 0x89, 0x2c, 0x24,                   /*59b: mov    %r13,(%rsp) */
0x4c, 0x63, 0xe9,                         /*59f: movslq %ecx,%r13 */
0x4c, 0x89, 0x64, 0x24, 0x08,             /*5a2: mov    %r12,0x8(%rsp) */
0x4d, 0x8b, 0x67, 0x18,                   /*5a7: mov    0x18(%r15),%r12 */
0x49, 0x8b, 0x7f, 0x50,                   /*5ab: mov    0x50(%r15),%rdi */
0x48, 0x01, 0xc2,                         /*5af: add    %rax,%rdx */
0x48, 0x8b, 0x44, 0x24, 0x10,             /*5b2: mov    0x10(%rsp),%rax */
0x48, 0x8d, 0x14, 0xd0,                   /*5b7: lea    (%rax,%rdx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*5bb: callq  5c0 <op_enter+0x5c0> */
0x4b, 0x89, 0x04, 0xec,                   /*5c0: mov    %rax,(%r12,%r13,8) */
0x4c, 0x8b, 0x2c, 0x24,                   /*5c4: mov    (%rsp),%r13 */
0x4c, 0x8b, 0x64, 0x24, 0x08,             /*5c8: mov    0x8(%rsp),%r12 */
0x44, 0x01, 0xf5,                         /*5cd: add    %r14d,%ebp */
0x01, 0xdd,                               /*5d0: add    %ebx,%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5d2: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5d7: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*5dc: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*5df: and    $0x1f,%ecx */
0x29, 0xcb,                               /*5e2: sub    %ecx,%ebx */
0xc1, 0xe8, 0x12,                         /*5e4: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*5e7: and    $0x1f,%eax */
0x39, 0xc3,                               /*5ea: cmp    %eax,%ebx */
0x48, 0x8b, 0x5c, 0x24, 0x10,             /*5ec: mov    0x10(%rsp),%rbx */
0x0f, 0x8e, 0xde, 0x01, 0x00, 0x00,       /*5f1: jle    7d5 <op_enter+0x7d5> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5f7: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*5fc: shr    $0x7,%eax */
0xa8, 0x1f,                               /*5ff: test   $0x1f,%al */
0x0f, 0x84, 0xce, 0x01, 0x00, 0x00,       /*601: je     7d5 <op_enter+0x7d5> */
0x49, 0x8b, 0x47, 0x18,                   /*607: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*60b: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*610: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*615: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*618: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*61b: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*620: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*623: and    $0x1f,%esi */
0x01, 0xd6,                               /*626: add    %edx,%esi */
0xc1, 0xe9, 0x0c,                         /*628: shr    $0xc,%ecx */
0x83, 0xe1, 0x01,                         /*62b: and    $0x1,%ecx */
0x8d, 0x4c, 0x31, 0x01,                   /*62e: lea    0x1(%rcx,%rsi,1),%ecx */
0x48, 0x63, 0xc9,                         /*632: movslq %ecx,%rcx */
0x48, 0x8d, 0x0c, 0xc8,                   /*635: lea    (%rax,%rcx,8),%rcx */
0x48, 0x63, 0xf5,                         /*639: movslq %ebp,%rsi */
0x48, 0x8d, 0x14, 0xf3,                   /*63c: lea    (%rbx,%rsi,8),%rdx */
0x48, 0x39, 0xd1,                         /*640: cmp    %rdx,%rcx */
0x0f, 0x86, 0x4e, 0x01, 0x00, 0x00,       /*643: jbe    797 <op_enter+0x797> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*649: mov    $0x0,%edi */
0xc1, 0xef, 0x07,                         /*64e: shr    $0x7,%edi */
0x83, 0xe7, 0x1f,                         /*651: and    $0x1f,%edi */
0x48, 0x01, 0xf7,                         /*654: add    %rsi,%rdi */
0x48, 0x8d, 0x3c, 0xfb,                   /*657: lea    (%rbx,%rdi,8),%rdi */
0x48, 0x39, 0xf9,                         /*65b: cmp    %rdi,%rcx */
0x0f, 0x83, 0x33, 0x01, 0x00, 0x00,       /*65e: jae    797 <op_enter+0x797> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*664: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*669: shr    $0x7,%ecx */
0xf6, 0xc1, 0x1f,                         /*66c: test   $0x1f,%cl */
0x0f, 0x84, 0x60, 0x01, 0x00, 0x00,       /*66f: je     7d5 <op_enter+0x7d5> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*675: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*67a: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*67f: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*682: and    $0x1f,%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*685: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*68a: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*68d: and    $0x1f,%edi */
0x01, 0xd7,                               /*690: add    %edx,%edi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*692: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*697: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*69a: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*69d: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x8d, 0x44, 0xd0, 0xf8,             /*6a1: lea    -0x8(%rax,%rdx,8),%rax */
0x48, 0x8d, 0x54, 0xf3, 0xf8,             /*6a6: lea    -0x8(%rbx,%rsi,8),%rdx */
0xc1, 0xe9, 0x07,                         /*6ab: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*6ae: and    $0x1f,%ecx */
0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*6b1: data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x04, 0xca,             /*6c0: movsd  (%rdx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*6c5: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*6ca: dec    %rcx */
0x75, 0xf1,                               /*6cd: jne    6c0 <op_enter+0x6c0> */
0xe9, 0x01, 0x01, 0x00, 0x00,             /*6cf: jmpq   7d5 <op_enter+0x7d5> */
0x48, 0x39, 0xfa,                         /*6d4: cmp    %rdi,%rdx */
0x74, 0x1c,                               /*6d7: je     6f5 <op_enter+0x6f5> */
0x48, 0x98,                               /*6d9: cltq */
0x48, 0xf7, 0xd8,                         /*6db: neg    %rax */
0x66, 0x90,                               /*6de: xchg   %ax,%ax */
0xf2, 0x0f, 0x10, 0x07,                   /*6e0: movsd  (%rdi),%xmm0 */
0x48, 0x83, 0xc7, 0x08,                   /*6e4: add    $0x8,%rdi */
0xf2, 0x0f, 0x11, 0x02,                   /*6e8: movsd  %xmm0,(%rdx) */
0x48, 0x83, 0xc2, 0x08,                   /*6ec: add    $0x8,%rdx */
0x48, 0xff, 0xc0,                         /*6f0: inc    %rax */
0x75, 0xeb,                               /*6f3: jne    6e0 <op_enter+0x6e0> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*6f5: mov    $0x0,%eax */
0x0f, 0xba, 0xe0, 0x0c,                   /*6fa: bt     $0xc,%eax */
0x73, 0x31,                               /*6fe: jae    731 <op_enter+0x731> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*700: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*705: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*70a: shr    $0xd,%ecx */
0x83, 0xe1, 0x1f,                         /*70d: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*710: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*713: and    $0x1f,%eax */
0x8d, 0x44, 0x08, 0x01,                   /*716: lea    0x1(%rax,%rcx,1),%eax */
0x4c, 0x63, 0xf0,                         /*71a: movslq %eax,%r14 */
0x49, 0x8b, 0x6f, 0x18,                   /*71d: mov    0x18(%r15),%rbp */
0x49, 0x8b, 0x7f, 0x50,                   /*721: mov    0x50(%r15),%rdi */
0x31, 0xf6,                               /*725: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*727: callq  72c <op_enter+0x72c> */
0x4a, 0x89, 0x44, 0xf5, 0x00,             /*72c: mov    %rax,0x0(%rbp,%r14,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*731: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*736: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*73b: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*73e: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*741: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*744: and    $0x1f,%eax */
0x01, 0xc8,                               /*747: add    %ecx,%eax */
0x39, 0xc3,                               /*749: cmp    %eax,%ebx */
0x49, 0x8b, 0x47, 0x08,                   /*74b: mov    0x8(%r15),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*74f: mov    0xa8(%rax),%rcx */
0x0f, 0x8c, 0xf2, 0x00, 0x00, 0x00,       /*756: jl     84e <op_enter+0x84e> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*75c: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*761: shr    $0xd,%edx */
0xf6, 0xc2, 0x1f,                         /*764: test   $0x1f,%dl */
0x0f, 0x84, 0xe1, 0x00, 0x00, 0x00,       /*767: je     84e <op_enter+0x84e> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*76d: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*772: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*777: shr    $0x7,%esi */
0x83, 0xe6, 0x1f,                         /*77a: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*77d: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*780: and    $0x1f,%edx */
0xf7, 0xda,                               /*783: neg    %edx */
0x29, 0xf2,                               /*785: sub    %esi,%edx */
0x8d, 0x54, 0x1a, 0x01,                   /*787: lea    0x1(%rdx,%rbx,1),%edx */
0x48, 0x63, 0xd2,                         /*78b: movslq %edx,%rdx */
0x48, 0x8d, 0x0c, 0x91,                   /*78e: lea    (%rcx,%rdx,4),%rcx */
0xe9, 0xbb, 0x00, 0x00, 0x00,             /*792: jmpq   852 <op_enter+0x852> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*797: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*79c: shr    $0x7,%eax */
0x48, 0x39, 0xd1,                         /*79f: cmp    %rdx,%rcx */
0x74, 0x31,                               /*7a2: je     7d5 <op_enter+0x7d5> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*7a4: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*7a9: shr    $0x7,%esi */
0x40, 0xf6, 0xc6, 0x1f,                   /*7ac: test   $0x1f,%sil */
0x74, 0x23,                               /*7b0: je     7d5 <op_enter+0x7d5> */
0x48, 0x83, 0xe0, 0x1f,                   /*7b2: and    $0x1f,%rax */
0x48, 0xf7, 0xd8,                         /*7b6: neg    %rax */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*7b9: nopl   0x0(%rax) */
0xf2, 0x0f, 0x10, 0x02,                   /*7c0: movsd  (%rdx),%xmm0 */
0x48, 0x83, 0xc2, 0x08,                   /*7c4: add    $0x8,%rdx */
0xf2, 0x0f, 0x11, 0x01,                   /*7c8: movsd  %xmm0,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*7cc: add    $0x8,%rcx */
0x48, 0xff, 0xc0,                         /*7d0: inc    %rax */
0x75, 0xeb,                               /*7d3: jne    7c0 <op_enter+0x7c0> */
0x49, 0x39, 0xdd,                         /*7d5: cmp    %rbx,%r13 */
0x75, 0x46,                               /*7d8: jne    820 <op_enter+0x820> */
0x49, 0x8b, 0x47, 0x18,                   /*7da: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7de: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7e3: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*7e8: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*7eb: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*7ee: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*7f3: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*7f6: and    $0x1f,%esi */
0x01, 0xd6,                               /*7f9: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7fb: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*800: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*803: and    $0x1,%edx */
0x01, 0xf2,                               /*806: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*808: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*80b: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*80e: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*812: movslq %ecx,%rcx */
0xf2, 0x41, 0x0f, 0x10, 0x04, 0x24,       /*815: movsd  (%r12),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*81b: movsd  %xmm0,(%rax,%rcx,8) */
0x49, 0x8b, 0x47, 0x08,                   /*820: mov    0x8(%r15),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*824: mov    0xa8(%rax),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*82b: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*830: shr    $0xd,%edx */
0xf6, 0xc2, 0x1f,                         /*833: test   $0x1f,%dl */
0x7e, 0x16,                               /*836: jle    84e <op_enter+0x84e> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*838: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*83d: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*840: and    $0x1f,%edx */
0xff, 0xc2,                               /*843: inc    %edx */
0x48, 0x63, 0xd2,                         /*845: movslq %edx,%rdx */
0x48, 0x8d, 0x0c, 0x91,                   /*848: lea    (%rcx,%rdx,4),%rcx */
0xeb, 0x04,                               /*84c: jmp    852 <op_enter+0x852> */
0x48, 0x83, 0xc1, 0x04,                   /*84e: add    $0x4,%rcx */
0x0f, 0xb7, 0x31,                         /*852: movzwl (%rcx),%esi */
0x48, 0x03, 0xb0, 0xc0, 0x00, 0x00, 0x00, /*855: add    0xc0(%rax),%rsi */
0x4c, 0x89, 0xff,                         /*85c: mov    %r15,%rdi */
0x4c, 0x89, 0xff,                         /*85f: mov    %r15,%rdi */
0x48, 0x83, 0xc4, 0x18,                   /*862: add    $0x18,%rsp */
0x5b,                                     /*866: pop    %rbx */
0x41, 0x5c,                               /*867: pop    %r12 */
0x41, 0x5d,                               /*869: pop    %r13 */
0x41, 0x5e,                               /*86b: pop    %r14 */
0x41, 0x5f,                               /*86d: pop    %r15 */
0x5d,                                     /*86f: pop    %rbp */
0xff, 0xe6,                               /*870: jmpq   *%rsi */

};
static uint8_t op_enter__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x50, 0x72, 0x6f, 0x63, 0x00, 0x74, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x63,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x6f, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x20, 0x25, 0x70, 0x20, 0x28, 0x25, 0x64,
0x29, 0x0a, 0x00,                         

};

static void op_enter_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_enter_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_enter_set_args(op, GETARG_Ax(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_enter_method_m__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x55,                               /*4: push   %r13 */
0x41, 0x54,                               /*6: push   %r12 */
0x53,                                     /*8: push   %rbx */
0x49, 0x89, 0xfe,                         /*9: mov    %rdi,%r14 */
0x4d, 0x8b, 0x7e, 0x18,                   /*c: mov    0x18(%r14),%r15 */
0x49, 0x8b, 0x7e, 0x50,                   /*10: mov    0x50(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*14: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*18: mov    0x20(%rax),%rax */
0x48, 0x63, 0x58, 0x40,                   /*1c: movslq 0x40(%rax),%rbx */
0x48, 0x8d, 0x43, 0x01,                   /*20: lea    0x1(%rbx),%rax */
0x48, 0x85, 0xdb,                         /*24: test   %rbx,%rbx */
0x41, 0xbc, 0x02, 0x00, 0x00, 0x00,       /*27: mov    $0x2,%r12d */
0x4c, 0x0f, 0x49, 0xe0,                   /*2d: cmovns %rax,%r12 */
0x43, 0x8b, 0x44, 0xe7, 0x04,             /*31: mov    0x4(%r15,%r12,8),%eax */
0xb1, 0x01,                               /*36: mov    $0x1,%cl */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*38: cmp    $0xfff00001,%eax */
0x72, 0x1f,                               /*3d: jb     5e <op_enter_method_m+0x5e> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*3f: and    $0xfc000,%eax */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*44: cmp    $0x4000,%eax */
0x75, 0x07,                               /*49: jne    52 <op_enter_method_m+0x52> */
0x43, 0x83, 0x3c, 0xe7, 0x00,             /*4b: cmpl   $0x0,(%r15,%r12,8) */
0x74, 0x0a,                               /*50: je     5c <op_enter_method_m+0x5c> */
0x3d, 0x00, 0x80, 0x03, 0x00,             /*52: cmp    $0x38000,%eax */
0x0f, 0x95, 0xc1,                         /*57: setne  %cl */
0xeb, 0x02,                               /*5a: jmp    5e <op_enter_method_m+0x5e> */
0x31, 0xc9,                               /*5c: xor    %ecx,%ecx */
0x84, 0xc9,                               /*5e: test   %cl,%cl */
0x74, 0x1d,                               /*60: je     7f <op_enter_method_m+0x7f> */
0x4b, 0x8b, 0x34, 0xe7,                   /*62: mov    (%r15,%r12,8),%rsi */
0xba, 0x0d, 0x00, 0x00, 0x00,             /*66: mov    $0xd,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*6b: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*70: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*76: callq  7b <op_enter_method_m+0x7b> */
0x4b, 0x89, 0x04, 0xe7,                   /*7b: mov    %rax,(%r15,%r12,8) */
0x4d, 0x8d, 0x6f, 0x08,                   /*7f: lea    0x8(%r15),%r13 */
0x85, 0xdb,                               /*83: test   %ebx,%ebx */
0x78, 0x33,                               /*85: js     ba <op_enter_method_m+0xba> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*87: mov    $0x0,%eax */
0xc1, 0xe8, 0x12,                         /*8c: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*8f: and    $0x1f,%eax */
0x39, 0xc3,                               /*92: cmp    %eax,%ebx */
0x4c, 0x89, 0xeb,                         /*94: mov    %r13,%rbx */
0x7d, 0x47,                               /*97: jge    e0 <op_enter_method_m+0xe0> */
0x49, 0x8b, 0x7e, 0x50,                   /*99: mov    0x50(%r14),%rdi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*9d: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*a2: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*a5: and    $0x1f,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a8: callq  ad <op_enter_method_m+0xad> */
0x4c, 0x89, 0xf7,                         /*ad: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b0: callq  b5 <op_enter_method_m+0xb5> */
0xe9, 0x0d, 0x01, 0x00, 0x00,             /*b5: jmpq   1c7 <op_enter_method_m+0x1c7> */
0x49, 0x8b, 0x46, 0x18,                   /*ba: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x7e, 0x50,                   /*be: mov    0x50(%r14),%rdi */
0x48, 0x8b, 0x70, 0x08,                   /*c2: mov    0x8(%rax),%rsi */
0x48, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00,/*c6: movabs $0x3fffffffffff,%rax */
0x48, 0x21, 0xf0,                         /*d0: and    %rsi,%rax */
0x48, 0x8b, 0x1c, 0x85, 0x28, 0x00, 0x00, 0x00,/*d3: mov    0x28(,%rax,4),%rbx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*db: callq  e0 <op_enter_method_m+0xe0> */
0x49, 0x8b, 0x46, 0x50,                   /*e0: mov    0x50(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*e4: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*e8: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ec: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*f1: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*f4: and    $0x1f,%ecx */
0x89, 0x48, 0x40,                         /*f7: mov    %ecx,0x40(%rax) */
0x49, 0x8b, 0x46, 0x18,                   /*fa: mov    0x18(%r14),%rax */
0xff, 0xc1,                               /*fe: inc    %ecx */
0x48, 0x63, 0xc9,                         /*100: movslq %ecx,%rcx */
0xf2, 0x43, 0x0f, 0x10, 0x04, 0xe7,       /*103: movsd  (%r15,%r12,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*109: movsd  %xmm0,(%rax,%rcx,8) */
0x49, 0x39, 0xdd,                         /*10e: cmp    %rbx,%r13 */
0x0f, 0x84, 0x97, 0x00, 0x00, 0x00,       /*111: je     1ae <op_enter_method_m+0x1ae> */
0x49, 0x8b, 0x46, 0x18,                   /*117: mov    0x18(%r14),%rax */
0x48, 0x8d, 0x48, 0x08,                   /*11b: lea    0x8(%rax),%rcx */
0x48, 0x39, 0xd9,                         /*11f: cmp    %rbx,%rcx */
0x76, 0x3e,                               /*122: jbe    162 <op_enter_method_m+0x162> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*124: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*129: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*12c: and    $0x1f,%edx */
0x48, 0x8d, 0x14, 0xd3,                   /*12f: lea    (%rbx,%rdx,8),%rdx */
0x48, 0x39, 0xd1,                         /*133: cmp    %rdx,%rcx */
0x73, 0x2a,                               /*136: jae    162 <op_enter_method_m+0x162> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*138: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*13d: shr    $0x12,%ecx */
0xf6, 0xc1, 0x1f,                         /*140: test   $0x1f,%cl */
0x74, 0x69,                               /*143: je     1ae <op_enter_method_m+0x1ae> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*145: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*14a: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*14d: and    $0x1f,%ecx */
0xf2, 0x0f, 0x10, 0x44, 0xcb, 0xf8,       /*150: movsd  -0x8(%rbx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*156: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*15b: dec    %rcx */
0x75, 0xf0,                               /*15e: jne    150 <op_enter_method_m+0x150> */
0xeb, 0x4c,                               /*160: jmp    1ae <op_enter_method_m+0x1ae> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*162: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*167: shr    $0x12,%edx */
0x48, 0x39, 0xd9,                         /*16a: cmp    %rbx,%rcx */
0x74, 0x3f,                               /*16d: je     1ae <op_enter_method_m+0x1ae> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*16f: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*174: shr    $0x12,%esi */
0x40, 0xf6, 0xc6, 0x1f,                   /*177: test   $0x1f,%sil */
0x74, 0x31,                               /*17b: je     1ae <op_enter_method_m+0x1ae> */
0x48, 0x83, 0xe2, 0x1f,                   /*17d: and    $0x1f,%rdx */
0x48, 0xf7, 0xda,                         /*181: neg    %rdx */
0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*184: data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xce,                         /*190: mov    %rcx,%rsi */
0x48, 0x83, 0xc0, 0x10,                   /*193: add    $0x10,%rax */
0xf2, 0x0f, 0x10, 0x03,                   /*197: movsd  (%rbx),%xmm0 */
0x48, 0x83, 0xc3, 0x08,                   /*19b: add    $0x8,%rbx */
0xf2, 0x0f, 0x11, 0x06,                   /*19f: movsd  %xmm0,(%rsi) */
0x48, 0xff, 0xc2,                         /*1a3: inc    %rdx */
0x48, 0x89, 0xc1,                         /*1a6: mov    %rax,%rcx */
0x48, 0x89, 0xf0,                         /*1a9: mov    %rsi,%rax */
0x75, 0xe2,                               /*1ac: jne    190 <op_enter_method_m+0x190> */
0x49, 0x8b, 0x46, 0x08,                   /*1ae: mov    0x8(%r14),%rax */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*1b2: mov    0xa8(%rax),%rcx */
0x0f, 0xb7, 0x71, 0x04,                   /*1b9: movzwl 0x4(%rcx),%esi */
0x48, 0x03, 0xb0, 0xc0, 0x00, 0x00, 0x00, /*1bd: add    0xc0(%rax),%rsi */
0x4c, 0x89, 0xf7,                         /*1c4: mov    %r14,%rdi */
0x4c, 0x89, 0xf7,                         /*1c7: mov    %r14,%rdi */
0x5b,                                     /*1ca: pop    %rbx */
0x41, 0x5c,                               /*1cb: pop    %r12 */
0x41, 0x5d,                               /*1cd: pop    %r13 */
0x41, 0x5e,                               /*1cf: pop    %r14 */
0x41, 0x5f,                               /*1d1: pop    %r15 */
0xff, 0xe6,                               /*1d3: jmpq   *%rsi */

};
static uint8_t op_enter_method_m__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x50, 0x72, 0x6f, 0x63, 0x00, 0x74, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x63,
0x00,                                     

};

static void op_enter_method_m_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_enter_method_m_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_enter_method_m_set_args(op, GETARG_Ax(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_karg__text[] = {

};
static uint8_t op_karg__rodata[] = {

};

static void op_karg_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_karg_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_karg_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_kdict__text[] = {

};
static uint8_t op_kdict__rodata[] = {

};

static void op_kdict_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_kdict_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_kdict_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_return__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x53,                                     /*4: push   %rbx */
0x48, 0x83, 0xe4, 0xf0,                   /*5: and    $0xfffffffffffffff0,%rsp */
0x48, 0x83, 0xec, 0x10,                   /*9: sub    $0x10,%rsp */
0x48, 0x89, 0xfb,                         /*d: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*15: movzwl %ax,%esi */
0x31, 0xd2,                               /*18: xor    %edx,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1a: callq  1f <op_return+0x1f> */
0x48, 0x89, 0xdf,                         /*1f: mov    %rbx,%rdi */
0x48, 0x8d, 0x65, 0xf8,                   /*22: lea    -0x8(%rbp),%rsp */
0x5b,                                     /*26: pop    %rbx */
0x5d,                                     /*27: pop    %rbp */
0xc3,                                     /*28: retq */

};
static uint8_t op_return__rodata[] = {
0x00, 0x00,                               

};

static void op_return_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_return_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_return_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_break__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*9: movzwl %ax,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*11: movzwl %ax,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14: callq  19 <op_break+0x19> */
0x48, 0x89, 0xdf,                         /*19: mov    %rbx,%rdi */
0x5b,                                     /*1c: pop    %rbx */
0xc3,                                     /*1d: retq */

};
static uint8_t op_break__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_break_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_break_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_break_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_tailcall__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*a: sub    $0x18,%rsp */
0x49, 0x89, 0xff,                         /*e: mov    %rdi,%r15 */
0x4d, 0x8b, 0x77, 0x50,                   /*11: mov    0x50(%r15),%r14 */
0x49, 0x8b, 0x47, 0x18,                   /*15: mov    0x18(%r15),%rax */
0x49, 0x8b, 0x4f, 0x28,                   /*19: mov    0x28(%r15),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*22: movzwl %dx,%edx */
0x44, 0x8b, 0x24, 0x91,                   /*25: mov    (%rcx,%rdx,4),%r12d */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*29: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*2e: movzwl %cx,%ecx */
0x48, 0x8b, 0x1c, 0xc8,                   /*31: mov    (%rax,%rcx,8),%rbx */
0x48, 0x89, 0xd8,                         /*35: mov    %rbx,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*38: shr    $0x20,%rax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*3c: cmp    $0xfff00001,%eax */
0x72, 0x30,                               /*41: jb     73 <op_tailcall+0x73> */
0x48, 0x89, 0xd9,                         /*43: mov    %rbx,%rcx */
0x48, 0xc1, 0xe9, 0x2e,                   /*46: shr    $0x2e,%rcx */
0x83, 0xe1, 0x3f,                         /*4a: and    $0x3f,%ecx */
0x31, 0xc0,                               /*4d: xor    %eax,%eax */
0x83, 0xf9, 0x14,                         /*4f: cmp    $0x14,%ecx */
0x7f, 0x25,                               /*52: jg     79 <op_tailcall+0x79> */
0xff, 0xc9,                               /*54: dec    %ecx */
0x83, 0xf9, 0x07,                         /*56: cmp    $0x7,%ecx */
0x77, 0x23,                               /*59: ja     7e <op_tailcall+0x7e> */
0xff, 0x24, 0xcd, 0x00, 0x00, 0x00, 0x00, /*5b: jmpq   *0x0(,%rcx,8) */
0x85, 0xdb,                               /*62: test   %ebx,%ebx */
0x0f, 0x84, 0x80, 0x03, 0x00, 0x00,       /*64: je     3ea <op_tailcall+0x3ea> */
0x49, 0x8b, 0x86, 0x90, 0x00, 0x00, 0x00, /*6a: mov    0x90(%r14),%rax */
0xeb, 0x20,                               /*71: jmp    93 <op_tailcall+0x93> */
0x49, 0x8b, 0x46, 0x78,                   /*73: mov    0x78(%r14),%rax */
0xeb, 0x1a,                               /*77: jmp    93 <op_tailcall+0x93> */
0x83, 0xf9, 0x15,                         /*79: cmp    $0x15,%ecx */
0x74, 0x15,                               /*7c: je     93 <op_tailcall+0x93> */
0x48, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00,/*7e: movabs $0x3fffffffffff,%rax */
0x48, 0x21, 0xd8,                         /*88: and    %rbx,%rax */
0x48, 0x8b, 0x04, 0x85, 0x08, 0x00, 0x00, 0x00,/*8b: mov    0x8(,%rax,4),%rax */
0x48, 0x89, 0x44, 0x24, 0x10,             /*93: mov    %rax,0x10(%rsp) */
0x49, 0x8b, 0x0f,                         /*98: mov    (%r15),%rcx */
0x48, 0x39, 0x41, 0x38,                   /*9b: cmp    %rax,0x38(%rcx) */
0x75, 0x08,                               /*9f: jne    a9 <op_tailcall+0xa9> */
0x31, 0xd2,                               /*a1: xor    %edx,%edx */
0x44, 0x39, 0x61, 0x30,                   /*a3: cmp    %r12d,0x30(%rcx) */
0x74, 0x33,                               /*a7: je     dc <op_tailcall+0xdc> */
0x48, 0x39, 0x41, 0x48,                   /*a9: cmp    %rax,0x48(%rcx) */
0x75, 0x0b,                               /*ad: jne    ba <op_tailcall+0xba> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*af: mov    $0x1,%edx */
0x44, 0x39, 0x61, 0x40,                   /*b4: cmp    %r12d,0x40(%rcx) */
0x74, 0x22,                               /*b8: je     dc <op_tailcall+0xdc> */
0x48, 0x39, 0x41, 0x58,                   /*ba: cmp    %rax,0x58(%rcx) */
0x75, 0x0b,                               /*be: jne    cb <op_tailcall+0xcb> */
0xba, 0x02, 0x00, 0x00, 0x00,             /*c0: mov    $0x2,%edx */
0x44, 0x39, 0x61, 0x50,                   /*c5: cmp    %r12d,0x50(%rcx) */
0x74, 0x11,                               /*c9: je     dc <op_tailcall+0xdc> */
0x48, 0x39, 0x41, 0x68,                   /*cb: cmp    %rax,0x68(%rcx) */
0x75, 0x15,                               /*cf: jne    e6 <op_tailcall+0xe6> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*d1: mov    $0x3,%edx */
0x44, 0x39, 0x61, 0x60,                   /*d6: cmp    %r12d,0x60(%rcx) */
0x75, 0x0a,                               /*da: jne    e6 <op_tailcall+0xe6> */
0x4c, 0x8b, 0xac, 0xd1, 0x90, 0x00, 0x00, 0x00,/*dc: mov    0x90(%rcx,%rdx,8),%r13 */
0xeb, 0x13,                               /*e4: jmp    f9 <op_tailcall+0xf9> */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*e6: lea    0x10(%rsp),%rsi */
0x4c, 0x89, 0xf7,                         /*eb: mov    %r14,%rdi */
0x44, 0x89, 0xe2,                         /*ee: mov    %r12d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*f1: callq  f6 <op_tailcall+0xf6> */
0x49, 0x89, 0xc5,                         /*f6: mov    %rax,%r13 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f9: mov    $0x0,%eax */
0x4d, 0x85, 0xed,                         /*fe: test   %r13,%r13 */
0x74, 0x0d,                               /*101: je     110 <op_tailcall+0x110> */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*103: mov    %rbx,0x8(%rsp) */
0x0f, 0xb6, 0xc8,                         /*108: movzbl %al,%ecx */
0xe9, 0x3f, 0x01, 0x00, 0x00,             /*10b: jmpq   24f <op_tailcall+0x24f> */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*110: mov    %rbx,0x8(%rsp) */
0x48, 0xbd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf1, 0xff,/*115: movabs $0xfff1400000000000,%rbp */
0x4c, 0x09, 0xe5,                         /*11f: or     %r12,%rbp */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*122: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*127: mov    $0xe,%edx */
0x4c, 0x89, 0xf7,                         /*12c: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*12f: callq  134 <op_tailcall+0x134> */
0x41, 0x89, 0xc4,                         /*134: mov    %eax,%r12d */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*137: lea    0x10(%rsp),%rsi */
0x4c, 0x89, 0xf7,                         /*13c: mov    %r14,%rdi */
0x44, 0x89, 0xe2,                         /*13f: mov    %r12d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*142: callq  147 <op_tailcall+0x147> */
0x49, 0x89, 0xc5,                         /*147: mov    %rax,%r13 */
0x49, 0x8b, 0x47, 0x18,                   /*14a: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*14e: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*153: movzbl %cl,%ecx */
0x83, 0xf9, 0x7f,                         /*156: cmp    $0x7f,%ecx */
0x75, 0x29,                               /*159: jne    184 <op_tailcall+0x184> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*160: movzwl %cx,%ecx */
0xff, 0xc1,                               /*163: inc    %ecx */
0x48, 0x63, 0xc9,                         /*165: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*168: mov    (%rax,%rcx,8),%rsi */
0x4c, 0x89, 0xf7,                         /*16c: mov    %r14,%rdi */
0x48, 0x89, 0xea,                         /*16f: mov    %rbp,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*172: callq  177 <op_tailcall+0x177> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*177: mov    $0x0,%eax */
0x0f, 0xb6, 0xc8,                         /*17c: movzbl %al,%ecx */
0xe9, 0xcb, 0x00, 0x00, 0x00,             /*17f: jmpq   24f <op_tailcall+0x24f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*184: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*189: movzwl %cx,%ecx */
0x48, 0x8d, 0x51, 0x01,                   /*18c: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*190: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*194: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*197: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*19a: mov    $0x0,%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*19f: movzbl %dil,%edi */
0xff, 0xc7,                               /*1a3: inc    %edi */
0x48, 0x63, 0xff,                         /*1a5: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*1a8: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*1ad: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*1b0: setge  %cl */
0x08, 0xd1,                               /*1b3: or     %dl,%cl */
0x74, 0x3d,                               /*1b5: je     1f4 <op_tailcall+0x1f4> */
0x31, 0xc9,                               /*1b7: xor    %ecx,%ecx */
0x84, 0xc9,                               /*1b9: test   %cl,%cl */
0x75, 0x73,                               /*1bb: jne    230 <op_tailcall+0x230> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1bd: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1c2: movzwl %cx,%ecx */
0x48, 0x8d, 0x44, 0xc8, 0x10,             /*1c5: lea    0x10(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1ca: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*1cf: movzbl %cl,%ecx */
0xff, 0xc1,                               /*1d2: inc    %ecx */
0x48, 0xf7, 0xd9,                         /*1d4: neg    %rcx */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1d7: nopw   0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x40, 0xf8,             /*1e0: movsd  -0x8(%rax),%xmm0 */
0xf2, 0x0f, 0x11, 0x00,                   /*1e5: movsd  %xmm0,(%rax) */
0x48, 0x8d, 0x40, 0x08,                   /*1e9: lea    0x8(%rax),%rax */
0x48, 0xff, 0xc1,                         /*1ed: inc    %rcx */
0x75, 0xee,                               /*1f0: jne    1e0 <op_tailcall+0x1e0> */
0xeb, 0x3c,                               /*1f2: jmp    230 <op_tailcall+0x230> */
0x31, 0xc9,                               /*1f4: xor    %ecx,%ecx */
0x84, 0xc9,                               /*1f6: test   %cl,%cl */
0x75, 0x36,                               /*1f8: jne    230 <op_tailcall+0x230> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1fa: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1ff: movzwl %cx,%ecx */
0x48, 0x8d, 0x44, 0xc8, 0x08,             /*202: lea    0x8(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*207: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*20c: movzbl %cl,%ecx */
0xff, 0xc1,                               /*20f: inc    %ecx */
0x48, 0x63, 0xc9,                         /*211: movslq %ecx,%rcx */
0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*214: data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x44, 0xc8, 0xf8,       /*220: movsd  -0x8(%rax,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*226: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*22b: dec    %rcx */
0x75, 0xf0,                               /*22e: jne    220 <op_tailcall+0x220> */
0x49, 0x8b, 0x47, 0x18,                   /*230: mov    0x18(%r15),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*234: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*239: movzwl %cx,%ecx */
0xff, 0xc1,                               /*23c: inc    %ecx */
0x48, 0x63, 0xc9,                         /*23e: movslq %ecx,%rcx */
0x48, 0x89, 0x2c, 0xc8,                   /*241: mov    %rbp,(%rax,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*245: mov    $0x0,%eax */
0x0f, 0xb6, 0xc8,                         /*24a: movzbl %al,%ecx */
0xff, 0xc1,                               /*24d: inc    %ecx */
0x49, 0x8b, 0x46, 0x18,                   /*24f: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*253: mov    0x20(%rax),%rax */
0x44, 0x89, 0x20,                         /*257: mov    %r12d,(%rax) */
0x48, 0x8b, 0x54, 0x24, 0x10,             /*25a: mov    0x10(%rsp),%rdx */
0x48, 0x89, 0x50, 0x48,                   /*25f: mov    %rdx,0x48(%rax) */
0x83, 0xf9, 0x7f,                         /*263: cmp    $0x7f,%ecx */
0xbe, 0xff, 0xff, 0xff, 0xff,             /*266: mov    $0xffffffff,%esi */
0x0f, 0x45, 0xf1,                         /*26b: cmovne %ecx,%esi */
0x89, 0x70, 0x40,                         /*26e: mov    %esi,0x40(%rax) */
0x49, 0x8b, 0x4e, 0x18,                   /*271: mov    0x18(%r14),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*275: mov    0x8(%rcx),%rcx */
0x49, 0x8b, 0x7f, 0x18,                   /*279: mov    0x18(%r15),%rdi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*27d: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*282: movzwl %dx,%edx */
0x48, 0x8d, 0x14, 0xd7,                   /*285: lea    (%rdi,%rdx,8),%rdx */
0xff, 0xc6,                               /*289: inc    %esi */
0x48, 0x39, 0xd1,                         /*28b: cmp    %rdx,%rcx */
0x76, 0x42,                               /*28e: jbe    2d2 <op_tailcall+0x2d2> */
0x48, 0x63, 0xee,                         /*290: movslq %esi,%rbp */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*293: mov    $0x0,%ebx */
0x0f, 0xb7, 0xdb,                         /*298: movzwl %bx,%ebx */
0x48, 0x01, 0xeb,                         /*29b: add    %rbp,%rbx */
0x48, 0x8d, 0x1c, 0xdf,                   /*29e: lea    (%rdi,%rbx,8),%rbx */
0x48, 0x39, 0xd9,                         /*2a2: cmp    %rbx,%rcx */
0x73, 0x2b,                               /*2a5: jae    2d2 <op_tailcall+0x2d2> */
0x85, 0xf6,                               /*2a7: test   %esi,%esi */
0x74, 0x5a,                               /*2a9: je     305 <op_tailcall+0x305> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2ab: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*2b0: movzwl %dx,%edx */
0x48, 0x8d, 0x54, 0xd7, 0xf8,             /*2b3: lea    -0x8(%rdi,%rdx,8),%rdx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*2b8: nopl   0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x04, 0xea,             /*2c0: movsd  (%rdx,%rbp,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x44, 0xe9, 0xf8,       /*2c5: movsd  %xmm0,-0x8(%rcx,%rbp,8) */
0x48, 0xff, 0xcd,                         /*2cb: dec    %rbp */
0x75, 0xf0,                               /*2ce: jne    2c0 <op_tailcall+0x2c0> */
0xeb, 0x33,                               /*2d0: jmp    305 <op_tailcall+0x305> */
0x48, 0x39, 0xd1,                         /*2d2: cmp    %rdx,%rcx */
0x74, 0x2e,                               /*2d5: je     305 <op_tailcall+0x305> */
0x85, 0xf6,                               /*2d7: test   %esi,%esi */
0x74, 0x2a,                               /*2d9: je     305 <op_tailcall+0x305> */
0x48, 0x63, 0xf6,                         /*2db: movslq %esi,%rsi */
0x48, 0xf7, 0xde,                         /*2de: neg    %rsi */
0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*2e1: data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x02,                   /*2f0: movsd  (%rdx),%xmm0 */
0x48, 0x83, 0xc2, 0x08,                   /*2f4: add    $0x8,%rdx */
0xf2, 0x0f, 0x11, 0x01,                   /*2f8: movsd  %xmm0,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*2fc: add    $0x8,%rcx */
0x48, 0xff, 0xc6,                         /*300: inc    %rsi */
0x75, 0xeb,                               /*303: jne    2f0 <op_tailcall+0x2f0> */
0x41, 0xf6, 0x45, 0x02, 0x04,             /*305: testb  $0x4,0x2(%r13) */
0x74, 0x37,                               /*30a: je     343 <op_tailcall+0x343> */
0x49, 0x8b, 0x46, 0x18,                   /*30c: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*310: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xf7,                         /*314: mov    %r14,%rdi */
0x48, 0x8b, 0x74, 0x24, 0x08,             /*317: mov    0x8(%rsp),%rsi */
0x41, 0xff, 0x55, 0x18,                   /*31c: callq  *0x18(%r13) */
0x48, 0x89, 0x03,                         /*320: mov    %rax,(%rbx) */
0x41, 0x8b, 0x77, 0x48,                   /*323: mov    0x48(%r15),%esi */
0x4c, 0x89, 0xf7,                         /*327: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*32a: callq  32f <op_tailcall+0x32f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*32f: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*334: movzwl %ax,%esi */
0x31, 0xd2,                               /*337: xor    %edx,%edx */
0x4c, 0x89, 0xff,                         /*339: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*33c: callq  341 <op_tailcall+0x341> */
0xeb, 0x67,                               /*341: jmp    3aa <op_tailcall+0x3aa> */
0x49, 0x8b, 0x4d, 0x18,                   /*343: mov    0x18(%r13),%rcx */
0x49, 0x89, 0x4f, 0x08,                   /*347: mov    %rcx,0x8(%r15) */
0x48, 0x8b, 0x51, 0x10,                   /*34b: mov    0x10(%rcx),%rdx */
0x49, 0x89, 0x57, 0x20,                   /*34f: mov    %rdx,0x20(%r15) */
0x48, 0x8b, 0x51, 0x18,                   /*353: mov    0x18(%rcx),%rdx */
0x49, 0x89, 0x57, 0x28,                   /*357: mov    %rdx,0x28(%r15) */
0x8b, 0x50, 0x40,                         /*35b: mov    0x40(%rax),%edx */
0x0f, 0xb7, 0x71, 0x02,                   /*35e: movzwl 0x2(%rcx),%esi */
0x85, 0xd2,                               /*362: test   %edx,%edx */
0x78, 0x05,                               /*364: js     36b <op_tailcall+0x36b> */
0x83, 0xc2, 0x02,                         /*366: add    $0x2,%edx */
0xeb, 0x10,                               /*369: jmp    37b <op_tailcall+0x37b> */
0x83, 0xfe, 0x03,                         /*36b: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*36e: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*373: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*376: mov    $0x3,%edx */
0x4c, 0x89, 0xf7,                         /*37b: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*37e: callq  383 <op_tailcall+0x383> */
0x49, 0x8b, 0x46, 0x18,                   /*383: mov    0x18(%r14),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*387: mov    0x8(%rax),%rax */
0x49, 0x89, 0x47, 0x18,                   /*38b: mov    %rax,0x18(%r15) */
0x49, 0x8b, 0x47, 0x08,                   /*38f: mov    0x8(%r15),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*393: mov    0x8(%rax),%rax */
0x49, 0x89, 0x47, 0x10,                   /*397: mov    %rax,0x10(%r15) */
0x49, 0x8b, 0x7f, 0x50,                   /*39b: mov    0x50(%r15),%rdi */
0x4c, 0x89, 0xee,                         /*39f: mov    %r13,%rsi */
0x4c, 0x89, 0xfa,                         /*3a2: mov    %r15,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3a5: callq  3aa <op_tailcall+0x3aa> */
0x4c, 0x89, 0xff,                         /*3aa: mov    %r15,%rdi */
0x48, 0x83, 0xc4, 0x18,                   /*3ad: add    $0x18,%rsp */
0x5b,                                     /*3b1: pop    %rbx */
0x41, 0x5c,                               /*3b2: pop    %r12 */
0x41, 0x5d,                               /*3b4: pop    %r13 */
0x41, 0x5e,                               /*3b6: pop    %r14 */
0x41, 0x5f,                               /*3b8: pop    %r15 */
0x5d,                                     /*3ba: pop    %rbp */
0xeb, 0x39,                               /*3bb: jmp    3f6 <_str_const_method_missing23+0x3b0> */
0x49, 0x8b, 0x86, 0x88, 0x00, 0x00, 0x00, /*3bd: mov    0x88(%r14),%rax */
0xe9, 0xca, 0xfc, 0xff, 0xff,             /*3c4: jmpq   93 <op_tailcall+0x93> */
0x49, 0x8b, 0x86, 0x80, 0x00, 0x00, 0x00, /*3c9: mov    0x80(%r14),%rax */
0xe9, 0xbe, 0xfc, 0xff, 0xff,             /*3d0: jmpq   93 <op_tailcall+0x93> */
0x49, 0x8b, 0x86, 0xa0, 0x00, 0x00, 0x00, /*3d5: mov    0xa0(%r14),%rax */
0xe9, 0xb2, 0xfc, 0xff, 0xff,             /*3dc: jmpq   93 <op_tailcall+0x93> */
0x49, 0x8b, 0x46, 0x40,                   /*3e1: mov    0x40(%r14),%rax */
0xe9, 0xa9, 0xfc, 0xff, 0xff,             /*3e5: jmpq   93 <op_tailcall+0x93> */
0x49, 0x8b, 0x86, 0x98, 0x00, 0x00, 0x00, /*3ea: mov    0x98(%r14),%rax */
0xe9, 0x9d, 0xfc, 0xff, 0xff,             /*3f1: jmpq   93 <op_tailcall+0x93> */

};
static uint8_t op_tailcall__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x73,
0x73, 0x69, 0x6e, 0x67, 0x00,             

};

static void op_tailcall_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_tailcall_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_tailcall_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_blkpush__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x7e, 0x50,                   /*6: mov    0x50(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*f: movzwl %ax,%eax */
0x89, 0x44, 0x24, 0x04,                   /*12: mov    %eax,0x4(%rsp) */
0x44, 0x8b, 0x4c, 0x24, 0x04,             /*16: mov    0x4(%rsp),%r9d */
0x8b, 0x44, 0x24, 0x04,                   /*1b: mov    0x4(%rsp),%eax */
0x44, 0x8b, 0x44, 0x24, 0x04,             /*1f: mov    0x4(%rsp),%r8d */
0x8b, 0x54, 0x24, 0x04,                   /*24: mov    0x4(%rsp),%edx */
0x83, 0xe2, 0x0f,                         /*28: and    $0xf,%edx */
0x74, 0x5e,                               /*2b: je     8b <op_blkpush+0x8b> */
0x49, 0x8b, 0x4e, 0x50,                   /*2d: mov    0x50(%r14),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*31: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*35: mov    0x20(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*39: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x71, 0x28,                   /*3d: mov    0x28(%rcx),%rsi */
0x48, 0x85, 0xf6,                         /*41: test   %rsi,%rsi */
0x0f, 0x94, 0xc3,                         /*44: sete   %bl */
0x83, 0xfa, 0x01,                         /*47: cmp    $0x1,%edx */
0x74, 0x27,                               /*4a: je     73 <op_blkpush+0x73> */
0xb9, 0x01, 0x00, 0x00, 0x00,             /*4c: mov    $0x1,%ecx */
0x29, 0xd1,                               /*51: sub    %edx,%ecx */
0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*53: data16 data16 data16 nopw %cs:0x0(%rax,%rax,1) */
0xf6, 0xc3, 0x01,                         /*60: test   $0x1,%bl */
0x75, 0x12,                               /*63: jne    77 <op_blkpush+0x77> */
0x48, 0x8b, 0x76, 0x08,                   /*65: mov    0x8(%rsi),%rsi */
0x48, 0x85, 0xf6,                         /*69: test   %rsi,%rsi */
0x0f, 0x94, 0xc3,                         /*6c: sete   %bl */
0xff, 0xc1,                               /*6f: inc    %ecx */
0x75, 0xed,                               /*71: jne    60 <op_blkpush+0x60> */
0x84, 0xdb,                               /*73: test   %bl,%bl */
0x74, 0x1d,                               /*75: je     94 <op_blkpush+0x94> */
0xbe, 0x02, 0x00, 0x00, 0x00,             /*77: mov    $0x2,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c: callq  81 <op_blkpush+0x81> */
0x4c, 0x89, 0xf7,                         /*81: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*84: callq  89 <op_blkpush+0x89> */
0xeb, 0x49,                               /*89: jmp    d4 <op_blkpush+0xd4> */
0x49, 0x8d, 0x4e, 0x18,                   /*8b: lea    0x18(%r14),%rcx */
0x48, 0x89, 0xce,                         /*8f: mov    %rcx,%rsi */
0xeb, 0x08,                               /*92: jmp    9c <op_blkpush+0x9c> */
0x48, 0x83, 0xc6, 0x18,                   /*94: add    $0x18,%rsi */
0x49, 0x8d, 0x4e, 0x18,                   /*98: lea    0x18(%r14),%rcx */
0x41, 0xc1, 0xe9, 0x0a,                   /*9c: shr    $0xa,%r9d */
0x41, 0x83, 0xe1, 0x3f,                   /*a0: and    $0x3f,%r9d */
0xc1, 0xe8, 0x09,                         /*a4: shr    $0x9,%eax */
0x83, 0xe0, 0x01,                         /*a7: and    $0x1,%eax */
0x41, 0xc1, 0xe8, 0x04,                   /*aa: shr    $0x4,%r8d */
0x41, 0x83, 0xe0, 0x1f,                   /*ae: and    $0x1f,%r8d */
0x48, 0x8b, 0x16,                         /*b2: mov    (%rsi),%rdx */
0x48, 0x8b, 0x09,                         /*b5: mov    (%rcx),%rcx */
0x44, 0x01, 0xc8,                         /*b8: add    %r9d,%eax */
0x41, 0x8d, 0x44, 0x00, 0x01,             /*bb: lea    0x1(%r8,%rax,1),%eax */
0x48, 0x98,                               /*c0: cltq */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*c2: mov    $0x0,%esi */
0x0f, 0xb7, 0xf6,                         /*c7: movzwl %si,%esi */
0xf2, 0x0f, 0x10, 0x04, 0xc2,             /*ca: movsd  (%rdx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xf1,             /*cf: movsd  %xmm0,(%rcx,%rsi,8) */
0x4c, 0x89, 0xf7,                         /*d4: mov    %r14,%rdi */
0x5b,                                     /*d7: pop    %rbx */
0x41, 0x5e,                               /*d8: pop    %r14 */

};
static uint8_t op_blkpush__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_blkpush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_blkpush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_blkpush_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_add__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x54,                               /*4: push   %r12 */
0x53,                                     /*6: push   %rbx */
0x49, 0x89, 0xff,                         /*7: mov    %rdi,%r15 */
0x49, 0x8b, 0x5f, 0x18,                   /*a: mov    0x18(%r15),%rbx */
0x4d, 0x8b, 0x77, 0x50,                   /*e: mov    0x50(%r15),%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*17: movzwl %ax,%eax */
0x8b, 0x4c, 0xc3, 0x04,                   /*1a: mov    0x4(%rbx,%rax,8),%ecx */
0xb8, 0x00, 0x06, 0x00, 0x00,             /*1e: mov    $0x600,%eax */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*23: cmp    $0xfff00001,%ecx */
0x72, 0x17,                               /*29: jb     42 <op_add+0x42> */
0xc1, 0xe9, 0x06,                         /*2b: shr    $0x6,%ecx */
0x81, 0xe1, 0x00, 0x3f, 0x00, 0x00,       /*2e: and    $0x3f00,%ecx */
0x81, 0xc1, 0x00, 0xff, 0xff, 0x00,       /*34: add    $0xffff00,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*3a: and    $0xffff00,%ecx */
0x89, 0xc8,                               /*40: mov    %ecx,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*42: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*47: movzwl %cx,%ecx */
0xff, 0xc1,                               /*4a: inc    %ecx */
0x48, 0x63, 0xc9,                         /*4c: movslq %ecx,%rcx */
0x8b, 0x54, 0xcb, 0x04,                   /*4f: mov    0x4(%rbx,%rcx,8),%edx */
0xb9, 0x06, 0x00, 0x00, 0x00,             /*53: mov    $0x6,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*58: cmp    $0xfff00001,%edx */
0x72, 0x0f,                               /*5e: jb     6f <op_add+0x6f> */
0xc1, 0xea, 0x0e,                         /*60: shr    $0xe,%edx */
0x83, 0xe2, 0x3f,                         /*63: and    $0x3f,%edx */
0x81, 0xc2, 0xff, 0x00, 0x00, 0x00,       /*66: add    $0xff,%edx */
0x0f, 0xb6, 0xca,                         /*6c: movzbl %dl,%ecx */
0x09, 0xc1,                               /*6f: or     %eax,%ecx */
0x81, 0xf9, 0x0f, 0x10, 0x00, 0x00,       /*71: cmp    $0x100f,%ecx */
0x7f, 0x3e,                               /*77: jg     b7 <op_add+0xb7> */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*79: cmp    $0x602,%ecx */
0x7f, 0x6b,                               /*7f: jg     ec <op_add+0xec> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*81: cmp    $0x303,%ecx */
0x0f, 0x85, 0x8a, 0x00, 0x00, 0x00,       /*87: jne    117 <op_add+0x117> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8d: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*92: movzwl %ax,%eax */
0x8b, 0x0c, 0xc3,                         /*95: mov    (%rbx,%rax,8),%ecx */
0x8b, 0x54, 0xc3, 0x08,                   /*98: mov    0x8(%rbx,%rax,8),%edx */
0x89, 0xc8,                               /*9c: mov    %ecx,%eax */
0x01, 0xd0,                               /*9e: add    %edx,%eax */
0x0f, 0x81, 0xd9, 0x00, 0x00, 0x00,       /*a0: jno    17f <op_add+0x17f> */
0xf2, 0x0f, 0x2a, 0xc9,                   /*a6: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x2a, 0xc2,                   /*aa: cvtsi2sd %edx,%xmm0 */
0xf2, 0x0f, 0x58, 0xc1,                   /*ae: addsd  %xmm1,%xmm0 */
0xe9, 0x81, 0x00, 0x00, 0x00,             /*b2: jmpq   138 <op_add+0x138> */
0x81, 0xf9, 0x10, 0x10, 0x00, 0x00,       /*b7: cmp    $0x1010,%ecx */
0x0f, 0x85, 0xb2, 0x00, 0x00, 0x00,       /*bd: jne    175 <op_add+0x175> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c3: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xe0,                   /*c8: movzwl %ax,%r12d */
0x4a, 0x8b, 0x34, 0xe3,                   /*cc: mov    (%rbx,%r12,8),%rsi */
0x0f, 0xb7, 0xc0,                         /*d0: movzwl %ax,%eax */
0xff, 0xc0,                               /*d3: inc    %eax */
0x48, 0x98,                               /*d5: cltq */
0x48, 0x8b, 0x14, 0xc3,                   /*d7: mov    (%rbx,%rax,8),%rdx */
0x4c, 0x89, 0xf7,                         /*db: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*de: callq  e3 <op_add+0xe3> */
0x4a, 0x89, 0x04, 0xe3,                   /*e3: mov    %rax,(%rbx,%r12,8) */
0xe9, 0xb6, 0x00, 0x00, 0x00,             /*e7: jmpq   1a2 <op_add+0x1a2> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*ec: cmp    $0x603,%ecx */
0x75, 0x59,                               /*f2: jne    14d <op_add+0x14d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f4: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*f9: movzwl %ax,%ecx */
0x0f, 0xb7, 0xc0,                         /*fc: movzwl %ax,%eax */
0xff, 0xc0,                               /*ff: inc    %eax */
0x48, 0x98,                               /*101: cltq */
0xf2, 0x0f, 0x2a, 0x04, 0xc3,             /*103: cvtsi2sdl (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x58, 0x04, 0xcb,             /*108: addsd  (%rbx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xcb,             /*10d: movsd  %xmm0,(%rbx,%rcx,8) */
0xe9, 0x8b, 0x00, 0x00, 0x00,             /*112: jmpq   1a2 <op_add+0x1a2> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*117: cmp    $0x306,%ecx */
0x75, 0x56,                               /*11d: jne    175 <op_add+0x175> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11f: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*124: movzwl %ax,%ecx */
0x0f, 0xb7, 0xc0,                         /*127: movzwl %ax,%eax */
0xff, 0xc0,                               /*12a: inc    %eax */
0x48, 0x98,                               /*12c: cltq */
0xf2, 0x0f, 0x2a, 0x04, 0xcb,             /*12e: cvtsi2sdl (%rbx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x58, 0x04, 0xc3,             /*133: addsd  (%rbx,%rax,8),%xmm0 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*138: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*13d: movzwl %ax,%eax */
0x66, 0x0f, 0x2e, 0xc0,                   /*140: ucomisd %xmm0,%xmm0 */
0x7a, 0x4e,                               /*144: jp     194 <op_add+0x194> */
0xf2, 0x0f, 0x11, 0x04, 0xc3,             /*146: movsd  %xmm0,(%rbx,%rax,8) */
0xeb, 0x55,                               /*14b: jmp    1a2 <op_add+0x1a2> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*14d: cmp    $0x606,%ecx */
0x75, 0x20,                               /*153: jne    175 <op_add+0x175> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*155: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*15a: movzwl %ax,%ecx */
0xf2, 0x0f, 0x10, 0x04, 0xcb,             /*15d: movsd  (%rbx,%rcx,8),%xmm0 */
0x0f, 0xb7, 0xc0,                         /*162: movzwl %ax,%eax */
0xff, 0xc0,                               /*165: inc    %eax */
0x48, 0x98,                               /*167: cltq */
0xf2, 0x0f, 0x58, 0x04, 0xc3,             /*169: addsd  (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xcb,             /*16e: movsd  %xmm0,(%rbx,%rcx,8) */
0xeb, 0x2d,                               /*173: jmp    1a2 <op_add+0x1a2> */
0x4c, 0x89, 0xff,                         /*175: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*178: callq  17d <op_add+0x17d> */
0xeb, 0x2e,                               /*17d: jmp    1ad <op_add+0x1ad> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17f: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*184: movzwl %cx,%ecx */
0xc7, 0x44, 0xcb, 0x04, 0x00, 0x00, 0xf1, 0xff,/*187: movl   $0xfff10000,0x4(%rbx,%rcx,8) */
0x89, 0x04, 0xcb,                         /*18f: mov    %eax,(%rbx,%rcx,8) */
0xeb, 0x0e,                               /*192: jmp    1a2 <op_add+0x1a2> */
0x48, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*194: movabs $0x7ff8000000000000,%rcx */
0x48, 0x89, 0x0c, 0xc3,                   /*19e: mov    %rcx,(%rbx,%rax,8) */
0x41, 0x8b, 0x47, 0x48,                   /*1a2: mov    0x48(%r15),%eax */
0x41, 0x89, 0x86, 0xdc, 0x00, 0x00, 0x00, /*1a6: mov    %eax,0xdc(%r14) */
0x4c, 0x89, 0xff,                         /*1ad: mov    %r15,%rdi */
0x5b,                                     /*1b0: pop    %rbx */
0x41, 0x5c,                               /*1b1: pop    %r12 */
0x41, 0x5e,                               /*1b3: pop    %r14 */
0x41, 0x5f,                               /*1b5: pop    %r15 */

};
static uint8_t op_add__rodata[] = {
0x00, 0x00,                               

};

static void op_add_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_add_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_add_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_addi__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*d: movzwl %cx,%ecx */
0x8b, 0x4c, 0xc8, 0x04,                   /*10: mov    0x4(%rax,%rcx,8),%ecx */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*14: cmp    $0xfff00001,%ecx */
0x72, 0x0b,                               /*1a: jb     27 <op_addi+0x27> */
0xc1, 0xe9, 0x0e,                         /*1c: shr    $0xe,%ecx */
0x83, 0xe1, 0x3f,                         /*1f: and    $0x3f,%ecx */
0x83, 0xf9, 0x07,                         /*22: cmp    $0x7,%ecx */
0x75, 0x27,                               /*25: jne    4e <op_addi+0x4e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*27: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*2c: movzwl %cx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2f: mov    $0x0,%edx */
0x0f, 0xb6, 0xd2,                         /*34: movzbl %dl,%edx */
0xf2, 0x0f, 0x2a, 0xc2,                   /*37: cvtsi2sd %edx,%xmm0 */
0xf2, 0x0f, 0x58, 0x04, 0xc8,             /*3b: addsd  (%rax,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*40: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0x89, 0xdf,                         /*45: mov    %rbx,%rdi */
0x5b,                                     /*48: pop    %rbx */
0xe9, 0xb0, 0x00, 0x00, 0x00,             /*49: jmpq   fe <Bx24246131231611231612316123161231212312+0xfa> */
0x83, 0xf9, 0x04,                         /*4e: cmp    $0x4,%ecx */
0x75, 0x40,                               /*51: jne    93 <op_addi+0x93> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*53: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*58: movzwl %cx,%ecx */
0x8b, 0x14, 0xc8,                         /*5b: mov    (%rax,%rcx,8),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5e: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*63: movzbl %cl,%ecx */
0x01, 0xd1,                               /*66: add    %edx,%ecx */
0x71, 0x69,                               /*68: jno    d3 <op_addi+0xd3> */
0xf2, 0x0f, 0x2a, 0xca,                   /*6a: cvtsi2sd %edx,%xmm1 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*6e: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*73: movzbl %cl,%ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*76: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x58, 0xc1,                   /*7a: addsd  %xmm1,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7e: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*83: movzwl %cx,%ecx */
0x66, 0x0f, 0x2e, 0xc0,                   /*86: ucomisd %xmm0,%xmm0 */
0x7a, 0x5f,                               /*8a: jp     eb <op_addi+0xeb> */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*8c: movsd  %xmm0,(%rax,%rcx,8) */
0xeb, 0xb2,                               /*91: jmp    45 <op_addi+0x45> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*93: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*98: movzwl %cx,%edx */
0xc7, 0x44, 0xd0, 0x0c, 0x00, 0x00, 0xf1, 0xff,/*9b: movl   $0xfff10000,0xc(%rax,%rdx,8) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*a3: mov    $0x0,%esi */
0x40, 0x0f, 0xb6, 0xf6,                   /*a8: movzbl %sil,%esi */
0x89, 0x74, 0xd0, 0x08,                   /*ac: mov    %esi,0x8(%rax,%rdx,8) */
0x0f, 0xb7, 0xd1,                         /*b0: movzwl %cx,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*b3: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*b8: movzwl %ax,%ecx */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*bb: mov    $0x20,%esi */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*c0: mov    $0x1,%r8d */
0x48, 0x89, 0xdf,                         /*c6: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c9: callq  ce <op_addi+0xce> */
0xe9, 0x72, 0xff, 0xff, 0xff,             /*ce: jmpq   45 <op_addi+0x45> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*d3: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*d8: movzwl %dx,%edx */
0xc7, 0x44, 0xd0, 0x04, 0x00, 0x00, 0xf1, 0xff,/*db: movl   $0xfff10000,0x4(%rax,%rdx,8) */
0x89, 0x0c, 0xd0,                         /*e3: mov    %ecx,(%rax,%rdx,8) */
0xe9, 0x5a, 0xff, 0xff, 0xff,             /*e6: jmpq   45 <op_addi+0x45> */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*eb: movabs $0x7ff8000000000000,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*f5: mov    %rdx,(%rax,%rcx,8) */
0xe9, 0x47, 0xff, 0xff, 0xff,             /*f9: jmpq   45 <op_addi+0x45> */

};
static uint8_t op_addi__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_addi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_addi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_addi_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_sub__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*d: movzwl %cx,%ecx */
0x8b, 0x54, 0xc8, 0x04,                   /*10: mov    0x4(%rax,%rcx,8),%edx */
0xb9, 0x00, 0x06, 0x00, 0x00,             /*14: mov    $0x600,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*19: cmp    $0xfff00001,%edx */
0x72, 0x17,                               /*1f: jb     38 <op_sub+0x38> */
0xc1, 0xea, 0x06,                         /*21: shr    $0x6,%edx */
0x81, 0xe2, 0x00, 0x3f, 0x00, 0x00,       /*24: and    $0x3f00,%edx */
0x81, 0xc2, 0x00, 0xff, 0xff, 0x00,       /*2a: add    $0xffff00,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*30: and    $0xffff00,%edx */
0x89, 0xd1,                               /*36: mov    %edx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*38: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*3d: movzwl %dx,%edx */
0xff, 0xc2,                               /*40: inc    %edx */
0x48, 0x63, 0xd2,                         /*42: movslq %edx,%rdx */
0x8b, 0x74, 0xd0, 0x04,                   /*45: mov    0x4(%rax,%rdx,8),%esi */
0xba, 0x06, 0x00, 0x00, 0x00,             /*49: mov    $0x6,%edx */
0x81, 0xfe, 0x01, 0x00, 0xf0, 0xff,       /*4e: cmp    $0xfff00001,%esi */
0x72, 0x10,                               /*54: jb     66 <op_sub+0x66> */
0xc1, 0xee, 0x0e,                         /*56: shr    $0xe,%esi */
0x83, 0xe6, 0x3f,                         /*59: and    $0x3f,%esi */
0x81, 0xc6, 0xff, 0x00, 0x00, 0x00,       /*5c: add    $0xff,%esi */
0x40, 0x0f, 0xb6, 0xd6,                   /*62: movzbl %sil,%edx */
0x09, 0xca,                               /*66: or     %ecx,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*68: cmp    $0x602,%edx */
0x7f, 0x36,                               /*6e: jg     a6 <op_sub+0xa6> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*70: cmp    $0x303,%edx */
0x75, 0x5e,                               /*76: jne    d6 <op_sub+0xd6> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*78: mov    $0x0,%edx */
0x0f, 0xb7, 0xca,                         /*7d: movzwl %dx,%ecx */
0x8b, 0x0c, 0xc8,                         /*80: mov    (%rax,%rcx,8),%ecx */
0x0f, 0xb7, 0xd2,                         /*83: movzwl %dx,%edx */
0xff, 0xc2,                               /*86: inc    %edx */
0x48, 0x63, 0xd2,                         /*88: movslq %edx,%rdx */
0x8b, 0x34, 0xd0,                         /*8b: mov    (%rax,%rdx,8),%esi */
0x89, 0xca,                               /*8e: mov    %ecx,%edx */
0x29, 0xf2,                               /*90: sub    %esi,%edx */
0x0f, 0x81, 0xa8, 0x00, 0x00, 0x00,       /*92: jno    140 <op_sub+0x140> */
0xf2, 0x0f, 0x2a, 0xc1,                   /*98: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x2a, 0xce,                   /*9c: cvtsi2sd %esi,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*a0: subsd  %xmm1,%xmm0 */
0xeb, 0x52,                               /*a4: jmp    f8 <op_sub+0xf8> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*a6: cmp    $0x603,%edx */
0x75, 0x5f,                               /*ac: jne    10d <op_sub+0x10d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ae: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*b3: movzwl %cx,%edx */
0xf2, 0x0f, 0x10, 0x04, 0xd0,             /*b6: movsd  (%rax,%rdx,8),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*bb: movzwl %cx,%ecx */
0xff, 0xc1,                               /*be: inc    %ecx */
0x48, 0x63, 0xc9,                         /*c0: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0xc8,             /*c3: cvtsi2sdl (%rax,%rcx,8),%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*c8: subsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xd0,             /*cc: movsd  %xmm0,(%rax,%rdx,8) */
0xe9, 0x8d, 0x00, 0x00, 0x00,             /*d1: jmpq   163 <op_sub+0x163> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*d6: cmp    $0x306,%edx */
0x75, 0x58,                               /*dc: jne    136 <op_sub+0x136> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*de: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*e3: movzwl %cx,%edx */
0x0f, 0xb7, 0xc9,                         /*e6: movzwl %cx,%ecx */
0xff, 0xc1,                               /*e9: inc    %ecx */
0x48, 0x63, 0xc9,                         /*eb: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xd0,             /*ee: cvtsi2sdl (%rax,%rdx,8),%xmm0 */
0xf2, 0x0f, 0x5c, 0x04, 0xc8,             /*f3: subsd  (%rax,%rcx,8),%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f8: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*fd: movzwl %cx,%ecx */
0x66, 0x0f, 0x2e, 0xc0,                   /*100: ucomisd %xmm0,%xmm0 */
0x7a, 0x4f,                               /*104: jp     155 <op_sub+0x155> */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*106: movsd  %xmm0,(%rax,%rcx,8) */
0xeb, 0x56,                               /*10b: jmp    163 <op_sub+0x163> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*10d: cmp    $0x606,%edx */
0x75, 0x21,                               /*113: jne    136 <op_sub+0x136> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*115: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*11a: movzwl %cx,%edx */
0xf2, 0x0f, 0x10, 0x04, 0xd0,             /*11d: movsd  (%rax,%rdx,8),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*122: movzwl %cx,%ecx */
0xff, 0xc1,                               /*125: inc    %ecx */
0x48, 0x63, 0xc9,                         /*127: movslq %ecx,%rcx */
0xf2, 0x0f, 0x5c, 0x04, 0xc8,             /*12a: subsd  (%rax,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xd0,             /*12f: movsd  %xmm0,(%rax,%rdx,8) */
0xeb, 0x2d,                               /*134: jmp    163 <op_sub+0x163> */
0x48, 0x89, 0xdf,                         /*136: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*139: callq  13e <op_sub+0x13e> */
0xeb, 0x23,                               /*13e: jmp    163 <op_sub+0x163> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*140: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*145: movzwl %cx,%ecx */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x00, 0xf1, 0xff,/*148: movl   $0xfff10000,0x4(%rax,%rcx,8) */
0x89, 0x14, 0xc8,                         /*150: mov    %edx,(%rax,%rcx,8) */
0xeb, 0x0e,                               /*153: jmp    163 <op_sub+0x163> */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*155: movabs $0x7ff8000000000000,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*15f: mov    %rdx,(%rax,%rcx,8) */
0x48, 0x89, 0xdf,                         /*163: mov    %rbx,%rdi */
0x5b,                                     /*166: pop    %rbx */

};
static uint8_t op_sub__rodata[] = {
0x00, 0x00,                               

};

static void op_sub_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sub_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sub_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_subi__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*d: movzwl %cx,%ecx */
0x8b, 0x4c, 0xc8, 0x04,                   /*10: mov    0x4(%rax,%rcx,8),%ecx */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*14: cmp    $0xfff00001,%ecx */
0x72, 0x0b,                               /*1a: jb     27 <op_subi+0x27> */
0xc1, 0xe9, 0x0e,                         /*1c: shr    $0xe,%ecx */
0x83, 0xe1, 0x3f,                         /*1f: and    $0x3f,%ecx */
0x83, 0xf9, 0x07,                         /*22: cmp    $0x7,%ecx */
0x75, 0x2b,                               /*25: jne    52 <op_subi+0x52> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*27: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*2c: movzwl %cx,%ecx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*2f: movsd  (%rax,%rcx,8),%xmm0 */
0xba, 0x00, 0x00, 0x00, 0x00,             /*34: mov    $0x0,%edx */
0x0f, 0xb6, 0xd2,                         /*39: movzbl %dl,%edx */
0xf2, 0x0f, 0x2a, 0xca,                   /*3c: cvtsi2sd %edx,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*40: subsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*44: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0x89, 0xdf,                         /*49: mov    %rbx,%rdi */
0x5b,                                     /*4c: pop    %rbx */
0xe9, 0xb2, 0x00, 0x00, 0x00,             /*4d: jmpq   104 <Bx24246131231611231612316123161231212312+0x100> */
0x83, 0xf9, 0x04,                         /*52: cmp    $0x4,%ecx */
0x75, 0x42,                               /*55: jne    99 <op_subi+0x99> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*57: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*5c: movzwl %cx,%ecx */
0x8b, 0x0c, 0xc8,                         /*5f: mov    (%rax,%rcx,8),%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*62: mov    $0x0,%edx */
0x0f, 0xb6, 0xf2,                         /*67: movzbl %dl,%esi */
0x89, 0xca,                               /*6a: mov    %ecx,%edx */
0x29, 0xf2,                               /*6c: sub    %esi,%edx */
0x71, 0x69,                               /*6e: jno    d9 <op_subi+0xd9> */
0xf2, 0x0f, 0x2a, 0xc1,                   /*70: cvtsi2sd %ecx,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*74: mov    $0x0,%ecx */
0x0f, 0xb6, 0xc9,                         /*79: movzbl %cl,%ecx */
0xf2, 0x0f, 0x2a, 0xc9,                   /*7c: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*80: subsd  %xmm1,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*84: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*89: movzwl %cx,%ecx */
0x66, 0x0f, 0x2e, 0xc0,                   /*8c: ucomisd %xmm0,%xmm0 */
0x7a, 0x5f,                               /*90: jp     f1 <op_subi+0xf1> */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*92: movsd  %xmm0,(%rax,%rcx,8) */
0xeb, 0xb0,                               /*97: jmp    49 <op_subi+0x49> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*99: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*9e: movzwl %cx,%edx */
0xc7, 0x44, 0xd0, 0x0c, 0x00, 0x00, 0xf1, 0xff,/*a1: movl   $0xfff10000,0xc(%rax,%rdx,8) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*a9: mov    $0x0,%esi */
0x40, 0x0f, 0xb6, 0xf6,                   /*ae: movzbl %sil,%esi */
0x89, 0x74, 0xd0, 0x08,                   /*b2: mov    %esi,0x8(%rax,%rdx,8) */
0x0f, 0xb7, 0xd1,                         /*b6: movzwl %cx,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*b9: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*be: movzwl %ax,%ecx */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*c1: mov    $0x20,%esi */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*c6: mov    $0x1,%r8d */
0x48, 0x89, 0xdf,                         /*cc: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*cf: callq  d4 <op_subi+0xd4> */
0xe9, 0x70, 0xff, 0xff, 0xff,             /*d4: jmpq   49 <op_subi+0x49> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*d9: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*de: movzwl %cx,%ecx */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x00, 0xf1, 0xff,/*e1: movl   $0xfff10000,0x4(%rax,%rcx,8) */
0x89, 0x14, 0xc8,                         /*e9: mov    %edx,(%rax,%rcx,8) */
0xe9, 0x58, 0xff, 0xff, 0xff,             /*ec: jmpq   49 <op_subi+0x49> */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*f1: movabs $0x7ff8000000000000,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*fb: mov    %rdx,(%rax,%rcx,8) */
0xe9, 0x45, 0xff, 0xff, 0xff,             /*ff: jmpq   49 <op_subi+0x49> */

};
static uint8_t op_subi__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_subi_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_subi_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_subi_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_mul__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x5e, 0x18,                   /*6: mov    0x18(%r14),%rbx */
0x49, 0x8b, 0x7e, 0x50,                   /*a: mov    0x50(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*13: movzwl %ax,%eax */
0x8b, 0x4c, 0xc3, 0x04,                   /*16: mov    0x4(%rbx,%rax,8),%ecx */
0xb8, 0x00, 0x06, 0x00, 0x00,             /*1a: mov    $0x600,%eax */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*1f: cmp    $0xfff00001,%ecx */
0x72, 0x17,                               /*25: jb     3e <op_mul+0x3e> */
0xc1, 0xe9, 0x06,                         /*27: shr    $0x6,%ecx */
0x81, 0xe1, 0x00, 0x3f, 0x00, 0x00,       /*2a: and    $0x3f00,%ecx */
0x81, 0xc1, 0x00, 0xff, 0xff, 0x00,       /*30: add    $0xffff00,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*36: and    $0xffff00,%ecx */
0x89, 0xc8,                               /*3c: mov    %ecx,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3e: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*43: movzwl %cx,%ecx */
0xff, 0xc1,                               /*46: inc    %ecx */
0x48, 0x63, 0xc9,                         /*48: movslq %ecx,%rcx */
0x8b, 0x54, 0xcb, 0x04,                   /*4b: mov    0x4(%rbx,%rcx,8),%edx */
0xb9, 0x06, 0x00, 0x00, 0x00,             /*4f: mov    $0x6,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*54: cmp    $0xfff00001,%edx */
0x72, 0x0f,                               /*5a: jb     6b <op_mul+0x6b> */
0xc1, 0xea, 0x0e,                         /*5c: shr    $0xe,%edx */
0x83, 0xe2, 0x3f,                         /*5f: and    $0x3f,%edx */
0x81, 0xc2, 0xff, 0x00, 0x00, 0x00,       /*62: add    $0xff,%edx */
0x0f, 0xb6, 0xca,                         /*68: movzbl %dl,%ecx */
0x09, 0xc1,                               /*6b: or     %eax,%ecx */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*6d: cmp    $0x602,%ecx */
0x7f, 0x6a,                               /*73: jg     df <op_mul+0xdf> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*75: cmp    $0x303,%ecx */
0x0f, 0x85, 0x89, 0x00, 0x00, 0x00,       /*7b: jne    10a <op_mul+0x10a> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*81: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*86: movzwl %ax,%ecx */
0x48, 0x8b, 0x34, 0xcb,                   /*89: mov    (%rbx,%rcx,8),%rsi */
0x0f, 0xb7, 0xc0,                         /*8d: movzwl %ax,%eax */
0xff, 0xc0,                               /*90: inc    %eax */
0x48, 0x98,                               /*92: cltq */
0x48, 0x8b, 0x14, 0xc3,                   /*94: mov    (%rbx,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*98: callq  9d <op_mul+0x9d> */
0x48, 0x89, 0xc1,                         /*9d: mov    %rax,%rcx */
0x48, 0xc1, 0xe9, 0x20,                   /*a0: shr    $0x20,%rcx */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*a4: cmp    $0xfff00001,%ecx */
0x72, 0x13,                               /*aa: jb     bf <op_mul+0xbf> */
0x48, 0x89, 0xc1,                         /*ac: mov    %rax,%rcx */
0x48, 0xc1, 0xe9, 0x2e,                   /*af: shr    $0x2e,%rcx */
0x83, 0xe1, 0x3f,                         /*b3: and    $0x3f,%ecx */
0x83, 0xf9, 0x07,                         /*b6: cmp    $0x7,%ecx */
0x0f, 0x85, 0xcb, 0x00, 0x00, 0x00,       /*b9: jne    18a <op_mul+0x18a> */
0x66, 0x48, 0x0f, 0x6e, 0xc0,             /*bf: movq   %rax,%xmm0 */
0x66, 0x0f, 0x2e, 0xc0,                   /*c4: ucomisd %xmm0,%xmm0 */
0x0f, 0x8a, 0xa4, 0x00, 0x00, 0x00,       /*c8: jp     172 <op_mul+0x172> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ce: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*d3: movzwl %cx,%ecx */
0x48, 0x89, 0x04, 0xcb,                   /*d6: mov    %rax,(%rbx,%rcx,8) */
0xe9, 0xc3, 0x00, 0x00, 0x00,             /*da: jmpq   1a2 <op_mul+0x1a2> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*df: cmp    $0x603,%ecx */
0x75, 0x59,                               /*e5: jne    140 <op_mul+0x140> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e7: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*ec: movzwl %ax,%ecx */
0x0f, 0xb7, 0xc0,                         /*ef: movzwl %ax,%eax */
0xff, 0xc0,                               /*f2: inc    %eax */
0x48, 0x98,                               /*f4: cltq */
0xf2, 0x0f, 0x2a, 0x04, 0xc3,             /*f6: cvtsi2sdl (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x59, 0x04, 0xcb,             /*fb: mulsd  (%rbx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xcb,             /*100: movsd  %xmm0,(%rbx,%rcx,8) */
0xe9, 0x98, 0x00, 0x00, 0x00,             /*105: jmpq   1a2 <op_mul+0x1a2> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*10a: cmp    $0x306,%ecx */
0x75, 0x56,                               /*110: jne    168 <op_mul+0x168> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*112: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*117: movzwl %ax,%ecx */
0x0f, 0xb7, 0xc0,                         /*11a: movzwl %ax,%eax */
0xff, 0xc0,                               /*11d: inc    %eax */
0x48, 0x98,                               /*11f: cltq */
0xf2, 0x0f, 0x2a, 0x04, 0xcb,             /*121: cvtsi2sdl (%rbx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x59, 0x04, 0xc3,             /*126: mulsd  (%rbx,%rax,8),%xmm0 */
0x66, 0x0f, 0x2e, 0xc0,                   /*12b: ucomisd %xmm0,%xmm0 */
0x7a, 0x41,                               /*12f: jp     172 <op_mul+0x172> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*131: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*136: movzwl %ax,%eax */
0xf2, 0x0f, 0x11, 0x04, 0xc3,             /*139: movsd  %xmm0,(%rbx,%rax,8) */
0xeb, 0x62,                               /*13e: jmp    1a2 <op_mul+0x1a2> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*140: cmp    $0x606,%ecx */
0x75, 0x20,                               /*146: jne    168 <op_mul+0x168> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*148: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*14d: movzwl %ax,%ecx */
0xf2, 0x0f, 0x10, 0x04, 0xcb,             /*150: movsd  (%rbx,%rcx,8),%xmm0 */
0x0f, 0xb7, 0xc0,                         /*155: movzwl %ax,%eax */
0xff, 0xc0,                               /*158: inc    %eax */
0x48, 0x98,                               /*15a: cltq */
0xf2, 0x0f, 0x59, 0x04, 0xc3,             /*15c: mulsd  (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xcb,             /*161: movsd  %xmm0,(%rbx,%rcx,8) */
0xeb, 0x3a,                               /*166: jmp    1a2 <op_mul+0x1a2> */
0x4c, 0x89, 0xf7,                         /*168: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*16b: callq  170 <op_mul+0x170> */
0xeb, 0x30,                               /*170: jmp    1a2 <op_mul+0x1a2> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*172: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*177: movzwl %ax,%eax */
0x48, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*17a: movabs $0x7ff8000000000000,%rcx */
0x48, 0x89, 0x0c, 0xc3,                   /*184: mov    %rcx,(%rbx,%rax,8) */
0xeb, 0x18,                               /*188: jmp    1a2 <op_mul+0x1a2> */
0x83, 0xf9, 0x04,                         /*18a: cmp    $0x4,%ecx */
0x75, 0x13,                               /*18d: jne    1a2 <op_mul+0x1a2> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18f: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*194: movzwl %cx,%ecx */
0xc7, 0x44, 0xcb, 0x04, 0x00, 0x00, 0xf1, 0xff,/*197: movl   $0xfff10000,0x4(%rbx,%rcx,8) */
0x89, 0x04, 0xcb,                         /*19f: mov    %eax,(%rbx,%rcx,8) */
0x4c, 0x89, 0xf7,                         /*1a2: mov    %r14,%rdi */
0x5b,                                     /*1a5: pop    %rbx */
0x41, 0x5e,                               /*1a6: pop    %r14 */

};
static uint8_t op_mul__rodata[] = {
0x00, 0x00,                               

};

static void op_mul_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_mul_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_mul_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_div__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x5e, 0x18,                   /*6: mov    0x18(%r14),%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*f: movzwl %ax,%eax */
0x8b, 0x4c, 0xc3, 0x04,                   /*12: mov    0x4(%rbx,%rax,8),%ecx */
0xb8, 0x00, 0x06, 0x00, 0x00,             /*16: mov    $0x600,%eax */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*1b: cmp    $0xfff00001,%ecx */
0x72, 0x17,                               /*21: jb     3a <op_div+0x3a> */
0xc1, 0xe9, 0x06,                         /*23: shr    $0x6,%ecx */
0x81, 0xe1, 0x00, 0x3f, 0x00, 0x00,       /*26: and    $0x3f00,%ecx */
0x81, 0xc1, 0x00, 0xff, 0xff, 0x00,       /*2c: add    $0xffff00,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*32: and    $0xffff00,%ecx */
0x89, 0xc8,                               /*38: mov    %ecx,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3a: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*3f: movzwl %cx,%ecx */
0xff, 0xc1,                               /*42: inc    %ecx */
0x48, 0x63, 0xc9,                         /*44: movslq %ecx,%rcx */
0x8b, 0x54, 0xcb, 0x04,                   /*47: mov    0x4(%rbx,%rcx,8),%edx */
0xb9, 0x06, 0x00, 0x00, 0x00,             /*4b: mov    $0x6,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*50: cmp    $0xfff00001,%edx */
0x72, 0x0f,                               /*56: jb     67 <op_div+0x67> */
0xc1, 0xea, 0x0e,                         /*58: shr    $0xe,%edx */
0x83, 0xe2, 0x3f,                         /*5b: and    $0x3f,%edx */
0x81, 0xc2, 0xff, 0x00, 0x00, 0x00,       /*5e: add    $0xff,%edx */
0x0f, 0xb6, 0xca,                         /*64: movzbl %dl,%ecx */
0x09, 0xc1,                               /*67: or     %eax,%ecx */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*69: cmp    $0x602,%ecx */
0x7f, 0x27,                               /*6f: jg     98 <op_div+0x98> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*71: cmp    $0x303,%ecx */
0x75, 0x46,                               /*77: jne    bf <op_div+0xbf> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*79: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*7e: movzwl %ax,%ecx */
0x0f, 0xb7, 0xc0,                         /*81: movzwl %ax,%eax */
0xff, 0xc0,                               /*84: inc    %eax */
0x48, 0x98,                               /*86: cltq */
0xf2, 0x0f, 0x2a, 0x04, 0xcb,             /*88: cvtsi2sdl (%rbx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x2a, 0x0c, 0xc3,             /*8d: cvtsi2sdl (%rbx,%rax,8),%xmm1 */
0xf2, 0x0f, 0x5e, 0xc1,                   /*92: divsd  %xmm1,%xmm0 */
0xeb, 0x48,                               /*96: jmp    e0 <op_div+0xe0> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*98: cmp    $0x603,%ecx */
0x75, 0x55,                               /*9e: jne    f5 <op_div+0xf5> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a0: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*a5: movzwl %ax,%ecx */
0xf2, 0x0f, 0x10, 0x04, 0xcb,             /*a8: movsd  (%rbx,%rcx,8),%xmm0 */
0x0f, 0xb7, 0xc0,                         /*ad: movzwl %ax,%eax */
0xff, 0xc0,                               /*b0: inc    %eax */
0x48, 0x98,                               /*b2: cltq */
0xf2, 0x0f, 0x2a, 0x0c, 0xc3,             /*b4: cvtsi2sdl (%rbx,%rax,8),%xmm1 */
0xf2, 0x0f, 0x5e, 0xc1,                   /*b9: divsd  %xmm1,%xmm0 */
0xeb, 0x57,                               /*bd: jmp    116 <op_div+0x116> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*bf: cmp    $0x306,%ecx */
0x75, 0x56,                               /*c5: jne    11d <op_div+0x11d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c7: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*cc: movzwl %ax,%ecx */
0x0f, 0xb7, 0xc0,                         /*cf: movzwl %ax,%eax */
0xff, 0xc0,                               /*d2: inc    %eax */
0x48, 0x98,                               /*d4: cltq */
0xf2, 0x0f, 0x2a, 0x04, 0xcb,             /*d6: cvtsi2sdl (%rbx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x5e, 0x04, 0xc3,             /*db: divsd  (%rbx,%rax,8),%xmm0 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e0: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*e5: movzwl %ax,%eax */
0x66, 0x0f, 0x2e, 0xc0,                   /*e8: ucomisd %xmm0,%xmm0 */
0x7a, 0x39,                               /*ec: jp     127 <op_div+0x127> */
0xf2, 0x0f, 0x11, 0x04, 0xc3,             /*ee: movsd  %xmm0,(%rbx,%rax,8) */
0xeb, 0x40,                               /*f3: jmp    135 <op_div+0x135> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*f5: cmp    $0x606,%ecx */
0x75, 0x20,                               /*fb: jne    11d <op_div+0x11d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*fd: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*102: movzwl %ax,%ecx */
0xf2, 0x0f, 0x10, 0x04, 0xcb,             /*105: movsd  (%rbx,%rcx,8),%xmm0 */
0x0f, 0xb7, 0xc0,                         /*10a: movzwl %ax,%eax */
0xff, 0xc0,                               /*10d: inc    %eax */
0x48, 0x98,                               /*10f: cltq */
0xf2, 0x0f, 0x5e, 0x04, 0xc3,             /*111: divsd  (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xcb,             /*116: movsd  %xmm0,(%rbx,%rcx,8) */
0xeb, 0x18,                               /*11b: jmp    135 <op_div+0x135> */
0x4c, 0x89, 0xf7,                         /*11d: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*120: callq  125 <op_div+0x125> */
0xeb, 0x51,                               /*125: jmp    178 <op_div+0x178> */
0x48, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*127: movabs $0x7ff8000000000000,%rcx */
0x48, 0x89, 0x0c, 0xc3,                   /*131: mov    %rcx,(%rbx,%rax,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*135: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*13a: movzwl %ax,%eax */
0xf2, 0x0f, 0x10, 0x04, 0xc3,             /*13d: movsd  (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x24,             /*142: movsd  %xmm0,(%rsp) */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*147: callq  14c <op_div+0x14c> */
0x85, 0xc0,                               /*14c: test   %eax,%eax */
0x74, 0x28,                               /*14e: je     178 <op_div+0x178> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*150: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*155: movzwl %ax,%eax */
0xf2, 0x0f, 0x10, 0x04, 0x24,             /*158: movsd  (%rsp),%xmm0 */
0x66, 0x0f, 0x2e, 0xc0,                   /*15d: ucomisd %xmm0,%xmm0 */
0x66, 0x48, 0x0f, 0x7e, 0xc1,             /*161: movq   %xmm0,%rcx */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*166: movabs $0x7ff8000000000000,%rdx */
0x48, 0x0f, 0x4b, 0xd1,                   /*170: cmovnp %rcx,%rdx */
0x48, 0x89, 0x14, 0xc3,                   /*174: mov    %rdx,(%rbx,%rax,8) */
0x4c, 0x89, 0xf7,                         /*178: mov    %r14,%rdi */
0x5b,                                     /*17b: pop    %rbx */
0x41, 0x5e,                               /*17c: pop    %r14 */

};
static uint8_t op_div__rodata[] = {
0x00, 0x00,                               

};

static void op_div_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_div_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_div_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_eq__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x49, 0x89, 0xfe,                         /*3: mov    %rdi,%r14 */
0x49, 0x8b, 0x5e, 0x18,                   /*6: mov    0x18(%r14),%rbx */
0x49, 0x8b, 0x7e, 0x50,                   /*a: mov    0x50(%r14),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*13: movzwl %ax,%eax */
0x48, 0x8b, 0x34, 0xc3,                   /*16: mov    (%rbx,%rax,8),%rsi */
0x48, 0x8b, 0x54, 0xc3, 0x08,             /*1a: mov    0x8(%rbx,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1f: callq  24 <op_eq+0x24> */
0x84, 0xc0,                               /*24: test   %al,%al */
0x0f, 0x85, 0xf5, 0x00, 0x00, 0x00,       /*26: jne    121 <op_eq+0x121> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*2c: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*31: movzwl %ax,%eax */
0x8b, 0x4c, 0xc3, 0x04,                   /*34: mov    0x4(%rbx,%rax,8),%ecx */
0xb8, 0x00, 0x06, 0x00, 0x00,             /*38: mov    $0x600,%eax */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*3d: cmp    $0xfff00001,%ecx */
0x72, 0x17,                               /*43: jb     5c <op_eq+0x5c> */
0xc1, 0xe9, 0x06,                         /*45: shr    $0x6,%ecx */
0x81, 0xe1, 0x00, 0x3f, 0x00, 0x00,       /*48: and    $0x3f00,%ecx */
0x81, 0xc1, 0x00, 0xff, 0xff, 0x00,       /*4e: add    $0xffff00,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*54: and    $0xffff00,%ecx */
0x89, 0xc8,                               /*5a: mov    %ecx,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5c: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*61: movzwl %cx,%ecx */
0xff, 0xc1,                               /*64: inc    %ecx */
0x48, 0x63, 0xc9,                         /*66: movslq %ecx,%rcx */
0x8b, 0x54, 0xcb, 0x04,                   /*69: mov    0x4(%rbx,%rcx,8),%edx */
0xb9, 0x06, 0x00, 0x00, 0x00,             /*6d: mov    $0x6,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*72: cmp    $0xfff00001,%edx */
0x72, 0x0f,                               /*78: jb     89 <op_eq+0x89> */
0xc1, 0xea, 0x0e,                         /*7a: shr    $0xe,%edx */
0x83, 0xe2, 0x3f,                         /*7d: and    $0x3f,%edx */
0x81, 0xc2, 0xff, 0x00, 0x00, 0x00,       /*80: add    $0xff,%edx */
0x0f, 0xb6, 0xca,                         /*86: movzbl %dl,%ecx */
0x09, 0xc1,                               /*89: or     %eax,%ecx */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*8b: cmp    $0x602,%ecx */
0x7f, 0x25,                               /*91: jg     b8 <op_eq+0xb8> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*93: cmp    $0x303,%ecx */
0x75, 0x41,                               /*99: jne    dc <op_eq+0xdc> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*9b: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*a0: movzwl %ax,%ecx */
0x8b, 0x0c, 0xcb,                         /*a3: mov    (%rbx,%rcx,8),%ecx */
0x0f, 0xb7, 0xc0,                         /*a6: movzwl %ax,%eax */
0xff, 0xc0,                               /*a9: inc    %eax */
0x48, 0x98,                               /*ab: cltq */
0x3b, 0x0c, 0xc3,                         /*ad: cmp    (%rbx,%rax,8),%ecx */
0x0f, 0x94, 0xc0,                         /*b0: sete   %al */
0x0f, 0xb6, 0xc0,                         /*b3: movzbl %al,%eax */
0xeb, 0x65,                               /*b6: jmp    11d <op_eq+0x11d> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*b8: cmp    $0x603,%ecx */
0x75, 0x33,                               /*be: jne    f3 <op_eq+0xf3> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c0: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*c5: movzwl %ax,%ecx */
0x0f, 0xb7, 0xc0,                         /*c8: movzwl %ax,%eax */
0xff, 0xc0,                               /*cb: inc    %eax */
0x48, 0x98,                               /*cd: cltq */
0xf2, 0x0f, 0x2a, 0x04, 0xc3,             /*cf: cvtsi2sdl (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0xc2, 0x04, 0xcb, 0x00,       /*d4: cmpeqsd (%rbx,%rcx,8),%xmm0 */
0xeb, 0x39,                               /*da: jmp    115 <op_eq+0x115> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*dc: cmp    $0x306,%ecx */
0x75, 0x6f,                               /*e2: jne    153 <op_eq+0x153> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e4: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*e9: movzwl %ax,%ecx */
0xf2, 0x0f, 0x2a, 0x04, 0xcb,             /*ec: cvtsi2sdl (%rbx,%rcx,8),%xmm0 */
0xeb, 0x15,                               /*f1: jmp    108 <op_eq+0x108> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*f3: cmp    $0x606,%ecx */
0x75, 0x58,                               /*f9: jne    153 <op_eq+0x153> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*fb: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*100: movzwl %ax,%ecx */
0xf2, 0x0f, 0x10, 0x04, 0xcb,             /*103: movsd  (%rbx,%rcx,8),%xmm0 */
0x0f, 0xb7, 0xc0,                         /*108: movzwl %ax,%eax */
0xff, 0xc0,                               /*10b: inc    %eax */
0x48, 0x98,                               /*10d: cltq */
0xf2, 0x0f, 0xc2, 0x04, 0xc3, 0x00,       /*10f: cmpeqsd (%rbx,%rax,8),%xmm0 */
0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*115: movq   %xmm0,%rax */
0x83, 0xe0, 0x01,                         /*11a: and    $0x1,%eax */
0x85, 0xc0,                               /*11d: test   %eax,%eax */
0x74, 0x1e,                               /*11f: je     13f <op_eq+0x13f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*121: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*126: movzwl %ax,%eax */
0x48, 0xb9, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf0, 0xff,/*129: movabs $0xfff0c00000000001,%rcx */
0x48, 0x89, 0x0c, 0xc3,                   /*133: mov    %rcx,(%rbx,%rax,8) */
0x4c, 0x89, 0xf7,                         /*137: mov    %r14,%rdi */
0x5b,                                     /*13a: pop    %rbx */
0x41, 0x5e,                               /*13b: pop    %r14 */
0xeb, 0x3c,                               /*13d: jmp    17b <C+0x177> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*13f: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*144: movzwl %ax,%eax */
0x48, 0xb9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf0, 0xff,/*147: movabs $0xfff0400000000001,%rcx */
0xeb, 0xe0,                               /*151: jmp    133 <op_eq+0x133> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*153: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*158: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*15b: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*160: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*163: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*168: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*16c: mov    $0x20,%esi */
0x4c, 0x89, 0xf7,                         /*171: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*174: callq  179 <op_eq+0x179> */
0xeb, 0xbc,                               /*179: jmp    137 <op_eq+0x137> */

};
static uint8_t op_eq__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_eq_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_eq_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_eq_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_lt__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*d: movzwl %cx,%ecx */
0x8b, 0x54, 0xc8, 0x04,                   /*10: mov    0x4(%rax,%rcx,8),%edx */
0xb9, 0x00, 0x06, 0x00, 0x00,             /*14: mov    $0x600,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*19: cmp    $0xfff00001,%edx */
0x72, 0x17,                               /*1f: jb     38 <op_lt+0x38> */
0xc1, 0xea, 0x06,                         /*21: shr    $0x6,%edx */
0x81, 0xe2, 0x00, 0x3f, 0x00, 0x00,       /*24: and    $0x3f00,%edx */
0x81, 0xc2, 0x00, 0xff, 0xff, 0x00,       /*2a: add    $0xffff00,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*30: and    $0xffff00,%edx */
0x89, 0xd1,                               /*36: mov    %edx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*38: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*3d: movzwl %dx,%edx */
0xff, 0xc2,                               /*40: inc    %edx */
0x48, 0x63, 0xd2,                         /*42: movslq %edx,%rdx */
0x8b, 0x74, 0xd0, 0x04,                   /*45: mov    0x4(%rax,%rdx,8),%esi */
0xba, 0x06, 0x00, 0x00, 0x00,             /*49: mov    $0x6,%edx */
0x81, 0xfe, 0x01, 0x00, 0xf0, 0xff,       /*4e: cmp    $0xfff00001,%esi */
0x72, 0x10,                               /*54: jb     66 <op_lt+0x66> */
0xc1, 0xee, 0x0e,                         /*56: shr    $0xe,%esi */
0x83, 0xe6, 0x3f,                         /*59: and    $0x3f,%esi */
0x81, 0xc6, 0xff, 0x00, 0x00, 0x00,       /*5c: add    $0xff,%esi */
0x40, 0x0f, 0xb6, 0xd6,                   /*62: movzbl %sil,%edx */
0x09, 0xca,                               /*66: or     %ecx,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*68: cmp    $0x602,%edx */
0x7f, 0x23,                               /*6e: jg     93 <op_lt+0x93> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*70: cmp    $0x303,%edx */
0x75, 0x3a,                               /*76: jne    b2 <op_lt+0xb2> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*78: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*7d: movzwl %cx,%edx */
0x8b, 0x14, 0xd0,                         /*80: mov    (%rax,%rdx,8),%edx */
0x0f, 0xb7, 0xc9,                         /*83: movzwl %cx,%ecx */
0xff, 0xc1,                               /*86: inc    %ecx */
0x48, 0x63, 0xc9,                         /*88: movslq %ecx,%rcx */
0x3b, 0x14, 0xc8,                         /*8b: cmp    (%rax,%rcx,8),%edx */
0x0f, 0x9c, 0xc1,                         /*8e: setl   %cl */
0xeb, 0x6f,                               /*91: jmp    102 <op_lt+0x102> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*93: cmp    $0x603,%edx */
0x75, 0x42,                               /*99: jne    dd <op_lt+0xdd> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*9b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*a0: movzwl %cx,%edx */
0x0f, 0xb7, 0xc9,                         /*a3: movzwl %cx,%ecx */
0xff, 0xc1,                               /*a6: inc    %ecx */
0x48, 0x63, 0xc9,                         /*a8: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xc8,             /*ab: cvtsi2sdl (%rax,%rcx,8),%xmm0 */
0xeb, 0x48,                               /*b0: jmp    fa <op_lt+0xfa> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*b2: cmp    $0x306,%edx */
0x75, 0x7b,                               /*b8: jne    135 <op_lt+0x135> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ba: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*bf: movzwl %cx,%edx */
0xf2, 0x0f, 0x2a, 0x04, 0xd0,             /*c2: cvtsi2sdl (%rax,%rdx,8),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*c7: movzwl %cx,%ecx */
0xff, 0xc1,                               /*ca: inc    %ecx */
0x48, 0x63, 0xc9,                         /*cc: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x0c, 0xc8,             /*cf: movsd  (%rax,%rcx,8),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*d4: ucomisd %xmm0,%xmm1 */
0x0f, 0x97, 0xc1,                         /*d8: seta   %cl */
0xeb, 0x25,                               /*db: jmp    102 <op_lt+0x102> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*dd: cmp    $0x606,%edx */
0x75, 0x50,                               /*e3: jne    135 <op_lt+0x135> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e5: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*ea: movzwl %cx,%edx */
0x0f, 0xb7, 0xc9,                         /*ed: movzwl %cx,%ecx */
0xff, 0xc1,                               /*f0: inc    %ecx */
0x48, 0x63, 0xc9,                         /*f2: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*f5: movsd  (%rax,%rcx,8),%xmm0 */
0x66, 0x0f, 0x2e, 0x04, 0xd0,             /*fa: ucomisd (%rax,%rdx,8),%xmm0 */
0x0f, 0x97, 0xc1,                         /*ff: seta   %cl */
0x0f, 0xb6, 0xc9,                         /*102: movzbl %cl,%ecx */
0x85, 0xc9,                               /*105: test   %ecx,%ecx */
0x74, 0x14,                               /*107: je     11d <op_lt+0x11d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*109: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*10e: movzwl %cx,%ecx */
0x48, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf0, 0xff,/*111: movabs $0xfff0c00000000001,%rdx */
0xeb, 0x12,                               /*11b: jmp    12f <op_lt+0x12f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11d: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*122: movzwl %cx,%ecx */
0x48, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf0, 0xff,/*125: movabs $0xfff0400000000001,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*12f: mov    %rdx,(%rax,%rcx,8) */
0xeb, 0x26,                               /*133: jmp    15b <op_lt+0x15b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*135: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*13a: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*13d: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*142: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*145: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*14a: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*14e: mov    $0x20,%esi */
0x48, 0x89, 0xdf,                         /*153: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*156: callq  15b <op_lt+0x15b> */
0x48, 0x89, 0xdf,                         /*15b: mov    %rbx,%rdi */
0x5b,                                     /*15e: pop    %rbx */

};
static uint8_t op_lt__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_lt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_lt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_lt_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_le__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*d: movzwl %cx,%ecx */
0x8b, 0x54, 0xc8, 0x04,                   /*10: mov    0x4(%rax,%rcx,8),%edx */
0xb9, 0x00, 0x06, 0x00, 0x00,             /*14: mov    $0x600,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*19: cmp    $0xfff00001,%edx */
0x72, 0x17,                               /*1f: jb     38 <op_le+0x38> */
0xc1, 0xea, 0x06,                         /*21: shr    $0x6,%edx */
0x81, 0xe2, 0x00, 0x3f, 0x00, 0x00,       /*24: and    $0x3f00,%edx */
0x81, 0xc2, 0x00, 0xff, 0xff, 0x00,       /*2a: add    $0xffff00,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*30: and    $0xffff00,%edx */
0x89, 0xd1,                               /*36: mov    %edx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*38: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*3d: movzwl %dx,%edx */
0xff, 0xc2,                               /*40: inc    %edx */
0x48, 0x63, 0xd2,                         /*42: movslq %edx,%rdx */
0x8b, 0x74, 0xd0, 0x04,                   /*45: mov    0x4(%rax,%rdx,8),%esi */
0xba, 0x06, 0x00, 0x00, 0x00,             /*49: mov    $0x6,%edx */
0x81, 0xfe, 0x01, 0x00, 0xf0, 0xff,       /*4e: cmp    $0xfff00001,%esi */
0x72, 0x10,                               /*54: jb     66 <op_le+0x66> */
0xc1, 0xee, 0x0e,                         /*56: shr    $0xe,%esi */
0x83, 0xe6, 0x3f,                         /*59: and    $0x3f,%esi */
0x81, 0xc6, 0xff, 0x00, 0x00, 0x00,       /*5c: add    $0xff,%esi */
0x40, 0x0f, 0xb6, 0xd6,                   /*62: movzbl %sil,%edx */
0x09, 0xca,                               /*66: or     %ecx,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*68: cmp    $0x602,%edx */
0x7f, 0x23,                               /*6e: jg     93 <op_le+0x93> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*70: cmp    $0x303,%edx */
0x75, 0x3a,                               /*76: jne    b2 <op_le+0xb2> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*78: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*7d: movzwl %cx,%edx */
0x8b, 0x14, 0xd0,                         /*80: mov    (%rax,%rdx,8),%edx */
0x0f, 0xb7, 0xc9,                         /*83: movzwl %cx,%ecx */
0xff, 0xc1,                               /*86: inc    %ecx */
0x48, 0x63, 0xc9,                         /*88: movslq %ecx,%rcx */
0x3b, 0x14, 0xc8,                         /*8b: cmp    (%rax,%rcx,8),%edx */
0x0f, 0x9e, 0xc1,                         /*8e: setle  %cl */
0xeb, 0x6f,                               /*91: jmp    102 <op_le+0x102> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*93: cmp    $0x603,%edx */
0x75, 0x42,                               /*99: jne    dd <op_le+0xdd> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*9b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*a0: movzwl %cx,%edx */
0x0f, 0xb7, 0xc9,                         /*a3: movzwl %cx,%ecx */
0xff, 0xc1,                               /*a6: inc    %ecx */
0x48, 0x63, 0xc9,                         /*a8: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xc8,             /*ab: cvtsi2sdl (%rax,%rcx,8),%xmm0 */
0xeb, 0x48,                               /*b0: jmp    fa <op_le+0xfa> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*b2: cmp    $0x306,%edx */
0x75, 0x7b,                               /*b8: jne    135 <op_le+0x135> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ba: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*bf: movzwl %cx,%edx */
0xf2, 0x0f, 0x2a, 0x04, 0xd0,             /*c2: cvtsi2sdl (%rax,%rdx,8),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*c7: movzwl %cx,%ecx */
0xff, 0xc1,                               /*ca: inc    %ecx */
0x48, 0x63, 0xc9,                         /*cc: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x0c, 0xc8,             /*cf: movsd  (%rax,%rcx,8),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*d4: ucomisd %xmm0,%xmm1 */
0x0f, 0x93, 0xc1,                         /*d8: setae  %cl */
0xeb, 0x25,                               /*db: jmp    102 <op_le+0x102> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*dd: cmp    $0x606,%edx */
0x75, 0x50,                               /*e3: jne    135 <op_le+0x135> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e5: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*ea: movzwl %cx,%edx */
0x0f, 0xb7, 0xc9,                         /*ed: movzwl %cx,%ecx */
0xff, 0xc1,                               /*f0: inc    %ecx */
0x48, 0x63, 0xc9,                         /*f2: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*f5: movsd  (%rax,%rcx,8),%xmm0 */
0x66, 0x0f, 0x2e, 0x04, 0xd0,             /*fa: ucomisd (%rax,%rdx,8),%xmm0 */
0x0f, 0x93, 0xc1,                         /*ff: setae  %cl */
0x0f, 0xb6, 0xc9,                         /*102: movzbl %cl,%ecx */
0x85, 0xc9,                               /*105: test   %ecx,%ecx */
0x74, 0x14,                               /*107: je     11d <op_le+0x11d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*109: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*10e: movzwl %cx,%ecx */
0x48, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf0, 0xff,/*111: movabs $0xfff0c00000000001,%rdx */
0xeb, 0x12,                               /*11b: jmp    12f <op_le+0x12f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11d: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*122: movzwl %cx,%ecx */
0x48, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf0, 0xff,/*125: movabs $0xfff0400000000001,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*12f: mov    %rdx,(%rax,%rcx,8) */
0xeb, 0x26,                               /*133: jmp    15b <op_le+0x15b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*135: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*13a: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*13d: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*142: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*145: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*14a: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*14e: mov    $0x20,%esi */
0x48, 0x89, 0xdf,                         /*153: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*156: callq  15b <op_le+0x15b> */
0x48, 0x89, 0xdf,                         /*15b: mov    %rbx,%rdi */
0x5b,                                     /*15e: pop    %rbx */

};
static uint8_t op_le__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_le_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_le_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_le_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_gt__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*d: movzwl %cx,%ecx */
0x8b, 0x54, 0xc8, 0x04,                   /*10: mov    0x4(%rax,%rcx,8),%edx */
0xb9, 0x00, 0x06, 0x00, 0x00,             /*14: mov    $0x600,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*19: cmp    $0xfff00001,%edx */
0x72, 0x17,                               /*1f: jb     38 <op_gt+0x38> */
0xc1, 0xea, 0x06,                         /*21: shr    $0x6,%edx */
0x81, 0xe2, 0x00, 0x3f, 0x00, 0x00,       /*24: and    $0x3f00,%edx */
0x81, 0xc2, 0x00, 0xff, 0xff, 0x00,       /*2a: add    $0xffff00,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*30: and    $0xffff00,%edx */
0x89, 0xd1,                               /*36: mov    %edx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*38: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*3d: movzwl %dx,%edx */
0xff, 0xc2,                               /*40: inc    %edx */
0x48, 0x63, 0xd2,                         /*42: movslq %edx,%rdx */
0x8b, 0x74, 0xd0, 0x04,                   /*45: mov    0x4(%rax,%rdx,8),%esi */
0xba, 0x06, 0x00, 0x00, 0x00,             /*49: mov    $0x6,%edx */
0x81, 0xfe, 0x01, 0x00, 0xf0, 0xff,       /*4e: cmp    $0xfff00001,%esi */
0x72, 0x10,                               /*54: jb     66 <op_gt+0x66> */
0xc1, 0xee, 0x0e,                         /*56: shr    $0xe,%esi */
0x83, 0xe6, 0x3f,                         /*59: and    $0x3f,%esi */
0x81, 0xc6, 0xff, 0x00, 0x00, 0x00,       /*5c: add    $0xff,%esi */
0x40, 0x0f, 0xb6, 0xd6,                   /*62: movzbl %sil,%edx */
0x09, 0xca,                               /*66: or     %ecx,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*68: cmp    $0x602,%edx */
0x7f, 0x23,                               /*6e: jg     93 <op_gt+0x93> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*70: cmp    $0x303,%edx */
0x75, 0x46,                               /*76: jne    be <op_gt+0xbe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*78: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*7d: movzwl %cx,%edx */
0x8b, 0x14, 0xd0,                         /*80: mov    (%rax,%rdx,8),%edx */
0x0f, 0xb7, 0xc9,                         /*83: movzwl %cx,%ecx */
0xff, 0xc1,                               /*86: inc    %ecx */
0x48, 0x63, 0xc9,                         /*88: movslq %ecx,%rcx */
0x3b, 0x14, 0xc8,                         /*8b: cmp    (%rax,%rcx,8),%edx */
0x0f, 0x9f, 0xc1,                         /*8e: setg   %cl */
0xeb, 0x67,                               /*91: jmp    fa <op_gt+0xfa> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*93: cmp    $0x603,%edx */
0x75, 0x3a,                               /*99: jne    d5 <op_gt+0xd5> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*9b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*a0: movzwl %cx,%edx */
0xf2, 0x0f, 0x10, 0x04, 0xd0,             /*a3: movsd  (%rax,%rdx,8),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*a8: movzwl %cx,%ecx */
0xff, 0xc1,                               /*ab: inc    %ecx */
0x48, 0x63, 0xc9,                         /*ad: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0xc8,             /*b0: cvtsi2sdl (%rax,%rcx,8),%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*b5: ucomisd %xmm1,%xmm0 */
0x0f, 0x97, 0xc1,                         /*b9: seta   %cl */
0xeb, 0x3c,                               /*bc: jmp    fa <op_gt+0xfa> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*be: cmp    $0x306,%edx */
0x75, 0x67,                               /*c4: jne    12d <op_gt+0x12d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c6: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*cb: movzwl %cx,%edx */
0xf2, 0x0f, 0x2a, 0x04, 0xd0,             /*ce: cvtsi2sdl (%rax,%rdx,8),%xmm0 */
0xeb, 0x15,                               /*d3: jmp    ea <op_gt+0xea> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*d5: cmp    $0x606,%edx */
0x75, 0x50,                               /*db: jne    12d <op_gt+0x12d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*dd: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*e2: movzwl %cx,%edx */
0xf2, 0x0f, 0x10, 0x04, 0xd0,             /*e5: movsd  (%rax,%rdx,8),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*ea: movzwl %cx,%ecx */
0xff, 0xc1,                               /*ed: inc    %ecx */
0x48, 0x63, 0xc9,                         /*ef: movslq %ecx,%rcx */
0x66, 0x0f, 0x2e, 0x04, 0xc8,             /*f2: ucomisd (%rax,%rcx,8),%xmm0 */
0x0f, 0x97, 0xc1,                         /*f7: seta   %cl */
0x0f, 0xb6, 0xc9,                         /*fa: movzbl %cl,%ecx */
0x85, 0xc9,                               /*fd: test   %ecx,%ecx */
0x74, 0x14,                               /*ff: je     115 <op_gt+0x115> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*101: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*106: movzwl %cx,%ecx */
0x48, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf0, 0xff,/*109: movabs $0xfff0c00000000001,%rdx */
0xeb, 0x12,                               /*113: jmp    127 <op_gt+0x127> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*115: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*11a: movzwl %cx,%ecx */
0x48, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf0, 0xff,/*11d: movabs $0xfff0400000000001,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*127: mov    %rdx,(%rax,%rcx,8) */
0xeb, 0x26,                               /*12b: jmp    153 <op_gt+0x153> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12d: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*132: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*135: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*13a: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*13d: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*142: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*146: mov    $0x20,%esi */
0x48, 0x89, 0xdf,                         /*14b: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14e: callq  153 <op_gt+0x153> */
0x48, 0x89, 0xdf,                         /*153: mov    %rbx,%rdi */
0x5b,                                     /*156: pop    %rbx */

};
static uint8_t op_gt__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_gt_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_gt_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_gt_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_ge__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*d: movzwl %cx,%ecx */
0x8b, 0x54, 0xc8, 0x04,                   /*10: mov    0x4(%rax,%rcx,8),%edx */
0xb9, 0x00, 0x06, 0x00, 0x00,             /*14: mov    $0x600,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*19: cmp    $0xfff00001,%edx */
0x72, 0x17,                               /*1f: jb     38 <op_ge+0x38> */
0xc1, 0xea, 0x06,                         /*21: shr    $0x6,%edx */
0x81, 0xe2, 0x00, 0x3f, 0x00, 0x00,       /*24: and    $0x3f00,%edx */
0x81, 0xc2, 0x00, 0xff, 0xff, 0x00,       /*2a: add    $0xffff00,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*30: and    $0xffff00,%edx */
0x89, 0xd1,                               /*36: mov    %edx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*38: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*3d: movzwl %dx,%edx */
0xff, 0xc2,                               /*40: inc    %edx */
0x48, 0x63, 0xd2,                         /*42: movslq %edx,%rdx */
0x8b, 0x74, 0xd0, 0x04,                   /*45: mov    0x4(%rax,%rdx,8),%esi */
0xba, 0x06, 0x00, 0x00, 0x00,             /*49: mov    $0x6,%edx */
0x81, 0xfe, 0x01, 0x00, 0xf0, 0xff,       /*4e: cmp    $0xfff00001,%esi */
0x72, 0x10,                               /*54: jb     66 <op_ge+0x66> */
0xc1, 0xee, 0x0e,                         /*56: shr    $0xe,%esi */
0x83, 0xe6, 0x3f,                         /*59: and    $0x3f,%esi */
0x81, 0xc6, 0xff, 0x00, 0x00, 0x00,       /*5c: add    $0xff,%esi */
0x40, 0x0f, 0xb6, 0xd6,                   /*62: movzbl %sil,%edx */
0x09, 0xca,                               /*66: or     %ecx,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*68: cmp    $0x602,%edx */
0x7f, 0x23,                               /*6e: jg     93 <op_ge+0x93> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*70: cmp    $0x303,%edx */
0x75, 0x46,                               /*76: jne    be <op_ge+0xbe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*78: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*7d: movzwl %cx,%edx */
0x8b, 0x14, 0xd0,                         /*80: mov    (%rax,%rdx,8),%edx */
0x0f, 0xb7, 0xc9,                         /*83: movzwl %cx,%ecx */
0xff, 0xc1,                               /*86: inc    %ecx */
0x48, 0x63, 0xc9,                         /*88: movslq %ecx,%rcx */
0x3b, 0x14, 0xc8,                         /*8b: cmp    (%rax,%rcx,8),%edx */
0x0f, 0x9d, 0xc1,                         /*8e: setge  %cl */
0xeb, 0x67,                               /*91: jmp    fa <op_ge+0xfa> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*93: cmp    $0x603,%edx */
0x75, 0x3a,                               /*99: jne    d5 <op_ge+0xd5> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*9b: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*a0: movzwl %cx,%edx */
0xf2, 0x0f, 0x10, 0x04, 0xd0,             /*a3: movsd  (%rax,%rdx,8),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*a8: movzwl %cx,%ecx */
0xff, 0xc1,                               /*ab: inc    %ecx */
0x48, 0x63, 0xc9,                         /*ad: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0xc8,             /*b0: cvtsi2sdl (%rax,%rcx,8),%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*b5: ucomisd %xmm1,%xmm0 */
0x0f, 0x93, 0xc1,                         /*b9: setae  %cl */
0xeb, 0x3c,                               /*bc: jmp    fa <op_ge+0xfa> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*be: cmp    $0x306,%edx */
0x75, 0x67,                               /*c4: jne    12d <op_ge+0x12d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c6: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*cb: movzwl %cx,%edx */
0xf2, 0x0f, 0x2a, 0x04, 0xd0,             /*ce: cvtsi2sdl (%rax,%rdx,8),%xmm0 */
0xeb, 0x15,                               /*d3: jmp    ea <op_ge+0xea> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*d5: cmp    $0x606,%edx */
0x75, 0x50,                               /*db: jne    12d <op_ge+0x12d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*dd: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*e2: movzwl %cx,%edx */
0xf2, 0x0f, 0x10, 0x04, 0xd0,             /*e5: movsd  (%rax,%rdx,8),%xmm0 */
0x0f, 0xb7, 0xc9,                         /*ea: movzwl %cx,%ecx */
0xff, 0xc1,                               /*ed: inc    %ecx */
0x48, 0x63, 0xc9,                         /*ef: movslq %ecx,%rcx */
0x66, 0x0f, 0x2e, 0x04, 0xc8,             /*f2: ucomisd (%rax,%rcx,8),%xmm0 */
0x0f, 0x93, 0xc1,                         /*f7: setae  %cl */
0x0f, 0xb6, 0xc9,                         /*fa: movzbl %cl,%ecx */
0x85, 0xc9,                               /*fd: test   %ecx,%ecx */
0x74, 0x14,                               /*ff: je     115 <op_ge+0x115> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*101: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*106: movzwl %cx,%ecx */
0x48, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf0, 0xff,/*109: movabs $0xfff0c00000000001,%rdx */
0xeb, 0x12,                               /*113: jmp    127 <op_ge+0x127> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*115: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*11a: movzwl %cx,%ecx */
0x48, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf0, 0xff,/*11d: movabs $0xfff0400000000001,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*127: mov    %rdx,(%rax,%rcx,8) */
0xeb, 0x26,                               /*12b: jmp    153 <op_ge+0x153> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12d: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*132: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*135: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*13a: movzwl %ax,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*13d: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*142: movzbl %al,%r8d */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*146: mov    $0x20,%esi */
0x48, 0x89, 0xdf,                         /*14b: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14e: callq  153 <op_ge+0x153> */
0x48, 0x89, 0xdf,                         /*153: mov    %rbx,%rdi */
0x5b,                                     /*156: pop    %rbx */

};
static uint8_t op_ge__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_ge_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_ge_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_ge_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_array__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*d: movzwl %ax,%r14d */
0x4c, 0x8b, 0x7b, 0x18,                   /*11: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x7b, 0x50,                   /*15: mov    0x50(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*19: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*1e: movzwl %ax,%eax */
0x49, 0x8d, 0x14, 0xc7,                   /*21: lea    (%r15,%rax,8),%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*25: mov    $0x0,%eax */
0x0f, 0xb6, 0xf0,                         /*2a: movzbl %al,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2d: callq  32 <op_array+0x32> */
0x4b, 0x89, 0x04, 0xf7,                   /*32: mov    %rax,(%r15,%r14,8) */
0x8b, 0x43, 0x48,                         /*36: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*39: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*3d: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*43: mov    %rbx,%rdi */
0x5b,                                     /*46: pop    %rbx */
0x41, 0x5e,                               /*47: pop    %r14 */
0x41, 0x5f,                               /*49: pop    %r15 */

};
static uint8_t op_array__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_array_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_array_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_array_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_arycat__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0x4c, 0x8b, 0x7b, 0x18,                   /*8: mov    0x18(%rbx),%r15 */
0x4c, 0x8b, 0x73, 0x50,                   /*c: mov    0x50(%rbx),%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*15: movzwl %ax,%eax */
0x49, 0x8b, 0x34, 0xc7,                   /*18: mov    (%r15,%rax,8),%rsi */
0x4c, 0x89, 0xf7,                         /*1c: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1f: callq  24 <op_arycat+0x24> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*24: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*29: movzwl %cx,%ecx */
0x49, 0x8b, 0x34, 0xcf,                   /*2c: mov    (%r15,%rcx,8),%rsi */
0x4c, 0x89, 0xf7,                         /*30: mov    %r14,%rdi */
0x48, 0x89, 0xc2,                         /*33: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*36: callq  3b <op_arycat+0x3b> */
0x8b, 0x43, 0x48,                         /*3b: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*3e: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*42: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*48: mov    %rbx,%rdi */
0x5b,                                     /*4b: pop    %rbx */
0x41, 0x5e,                               /*4c: pop    %r14 */
0x41, 0x5f,                               /*4e: pop    %r15 */

};
static uint8_t op_arycat__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_arycat_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_arycat_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_arycat_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_arypush__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*8: mov    0x50(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*11: movzwl %cx,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*14: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1d: movzwl %cx,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*20: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*24: callq  29 <op_arypush+0x29> */
0x48, 0x89, 0xdf,                         /*29: mov    %rbx,%rdi */
0x5b,                                     /*2c: pop    %rbx */

};
static uint8_t op_arypush__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_arypush_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_arypush_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_arypush_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_aref__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0x4c, 0x8b, 0x73, 0x18,                   /*8: mov    0x18(%rbx),%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*11: movzwl %ax,%eax */
0x49, 0x8b, 0x34, 0xc6,                   /*14: mov    (%r14,%rax,8),%rsi */
0x48, 0x89, 0xf0,                         /*18: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*1b: shr    $0x20,%rax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*1f: cmp    $0xfff00001,%eax */
0x72, 0x2c,                               /*24: jb     52 <op_aref+0x52> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*26: and    $0xfc000,%eax */
0x3d, 0x00, 0xc0, 0x03, 0x00,             /*2b: cmp    $0x3c000,%eax */
0x75, 0x20,                               /*30: jne    52 <op_aref+0x52> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*32: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf8,                   /*37: movzwl %ax,%r15d */
0x48, 0x8b, 0x7b, 0x50,                   /*3b: mov    0x50(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*3f: mov    $0x0,%eax */
0x0f, 0xb6, 0xd0,                         /*44: movzbl %al,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*47: callq  4c <op_aref+0x4c> */
0x4b, 0x89, 0x04, 0xfe,                   /*4c: mov    %rax,(%r14,%r15,8) */
0xeb, 0x33,                               /*50: jmp    85 <op_aref+0x85> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*52: mov    $0x0,%eax */
0x84, 0xc0,                               /*57: test   %al,%al */
0x75, 0x0e,                               /*59: jne    69 <op_aref+0x69> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5b: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*60: movzwl %ax,%eax */
0x49, 0x89, 0x34, 0xc6,                   /*63: mov    %rsi,(%r14,%rax,8) */
0xeb, 0x1c,                               /*67: jmp    85 <op_aref+0x85> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*69: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*6e: movzwl %ax,%eax */
0x41, 0xc7, 0x44, 0xc6, 0x04, 0x00, 0x40, 0xf0, 0xff,/*71: movl   $0xfff04000,0x4(%r14,%rax,8) */
0x48, 0x8b, 0x4b, 0x18,                   /*7a: mov    0x18(%rbx),%rcx */
0xc7, 0x04, 0xc1, 0x00, 0x00, 0x00, 0x00, /*7e: movl   $0x0,(%rcx,%rax,8) */
0x48, 0x89, 0xdf,                         /*85: mov    %rbx,%rdi */
0x5b,                                     /*88: pop    %rbx */
0x41, 0x5e,                               /*89: pop    %r14 */
0x41, 0x5f,                               /*8b: pop    %r15 */

};
static uint8_t op_aref__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_aref_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_aref_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_aref_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_aset__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*8: mov    0x50(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*11: movzwl %cx,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*14: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1d: movzwl %cx,%ecx */
0x48, 0x8b, 0x0c, 0xc8,                   /*20: mov    (%rax,%rcx,8),%rcx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*24: mov    $0x0,%eax */
0x0f, 0xb6, 0xd0,                         /*29: movzbl %al,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2c: callq  31 <op_aset+0x31> */
0x48, 0x89, 0xdf,                         /*31: mov    %rbx,%rdi */
0x5b,                                     /*34: pop    %rbx */

};
static uint8_t op_aset__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_aset_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_aset_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_aset_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_apost__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x89, 0xfb,                         /*a: mov    %rdi,%rbx */
0x4c, 0x8b, 0x63, 0x18,                   /*d: mov    0x18(%rbx),%r12 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*16: movzwl %ax,%eax */
0x49, 0x8b, 0x04, 0xc4,                   /*19: mov    (%r12,%rax,8),%rax */
0x48, 0x89, 0xc1,                         /*1d: mov    %rax,%rcx */
0x48, 0xc1, 0xe9, 0x20,                   /*20: shr    $0x20,%rcx */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*24: cmp    $0xfff00001,%ecx */
0x0f, 0x82, 0xb6, 0x00, 0x00, 0x00,       /*2a: jb     e6 <op_apost+0xe6> */
0x81, 0xe1, 0x00, 0xc0, 0x0f, 0x00,       /*30: and    $0xfc000,%ecx */
0x81, 0xf9, 0x00, 0xc0, 0x03, 0x00,       /*36: cmp    $0x3c000,%ecx */
0x0f, 0x85, 0xa4, 0x00, 0x00, 0x00,       /*3c: jne    e6 <op_apost+0xe6> */
0x48, 0xc1, 0xe0, 0x02,                   /*42: shl    $0x2,%rax */
0x49, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*46: movabs $0xfffffffffffc,%r14 */
0x49, 0x21, 0xc6,                         /*50: and    %rax,%r14 */
0x45, 0x8b, 0x7e, 0x18,                   /*53: mov    0x18(%r14),%r15d */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*57: mov    $0x0,%eax */
0x0f, 0xb6, 0xc0,                         /*5c: movzbl %al,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5f: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*64: movzwl %cx,%ecx */
0x01, 0xc1,                               /*67: add    %eax,%ecx */
0x48, 0x8b, 0x7b, 0x50,                   /*69: mov    0x50(%rbx),%rdi */
0x41, 0x39, 0xcf,                         /*6d: cmp    %ecx,%r15d */
0x0f, 0x8e, 0xce, 0x00, 0x00, 0x00,       /*70: jle    144 <op_apost+0x144> */
0x41, 0xbd, 0x00, 0x00, 0x00, 0x00,       /*76: mov    $0x0,%r13d */
0x41, 0x0f, 0xb6, 0xed,                   /*7c: movzbl %r13b,%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*80: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*85: movzwl %ax,%esi */
0xf7, 0xde,                               /*88: neg    %esi */
0x29, 0xee,                               /*8a: sub    %ebp,%esi */
0x44, 0x01, 0xfe,                         /*8c: add    %r15d,%esi */
0x49, 0x8b, 0x4e, 0x28,                   /*8f: mov    0x28(%r14),%rcx */
0x0f, 0xb7, 0xc0,                         /*93: movzwl %ax,%eax */
0x48, 0x8d, 0x14, 0xc1,                   /*96: lea    (%rcx,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*9a: callq  9f <op_apost+0x9f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*9f: mov    $0x0,%ecx */
0x0f, 0xb7, 0xd1,                         /*a4: movzwl %cx,%edx */
0x49, 0x89, 0x04, 0xd4,                   /*a7: mov    %rax,(%r12,%rdx,8) */
0x0f, 0xb7, 0xc1,                         /*ab: movzwl %cx,%eax */
0xff, 0xc0,                               /*ae: inc    %eax */
0x45, 0x84, 0xed,                         /*b0: test   %r13b,%r13b */
0x0f, 0x84, 0x46, 0x01, 0x00, 0x00,       /*b3: je     1ff <op_apost+0x1ff> */
0xf7, 0xdd,                               /*b9: neg    %ebp */
0x48, 0xc1, 0xe0, 0x03,                   /*bb: shl    $0x3,%rax */
0x90,                                     /*bf: nop */
0x48, 0x8b, 0x4b, 0x18,                   /*c0: mov    0x18(%rbx),%rcx */
0x41, 0x8d, 0x14, 0x2f,                   /*c4: lea    (%r15,%rbp,1),%edx */
0x48, 0x63, 0xd2,                         /*c8: movslq %edx,%rdx */
0x49, 0x8b, 0x76, 0x28,                   /*cb: mov    0x28(%r14),%rsi */
0xf2, 0x0f, 0x10, 0x04, 0xd6,             /*cf: movsd  (%rsi,%rdx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x01,             /*d4: movsd  %xmm0,(%rcx,%rax,1) */
0x48, 0x83, 0xc0, 0x08,                   /*d9: add    $0x8,%rax */
0xff, 0xc5,                               /*dd: inc    %ebp */
0x75, 0xdf,                               /*df: jne    c0 <op_apost+0xc0> */
0xe9, 0x19, 0x01, 0x00, 0x00,             /*e1: jmpq   1ff <op_apost+0x1ff> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*e6: mov    $0x0,%r14d */
0x41, 0x0f, 0xb7, 0xee,                   /*ec: movzwl %r14w,%ebp */
0x48, 0x8b, 0x7b, 0x50,                   /*f0: mov    0x50(%rbx),%rdi */
0x31, 0xf6,                               /*f4: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*f6: callq  fb <op_apost+0xfb> */
0x49, 0x89, 0x04, 0xec,                   /*fb: mov    %rax,(%r12,%rbp,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ff: mov    $0x0,%ecx */
0x41, 0x0f, 0xb7, 0xc6,                   /*104: movzwl %r14w,%eax */
0xff, 0xc0,                               /*108: inc    %eax */
0x84, 0xc9,                               /*10a: test   %cl,%cl */
0x0f, 0x84, 0xed, 0x00, 0x00, 0x00,       /*10c: je     1ff <op_apost+0x1ff> */
0x0f, 0xb6, 0xc9,                         /*112: movzbl %cl,%ecx */
0xf7, 0xd9,                               /*115: neg    %ecx */
0x48, 0xc1, 0xe0, 0x03,                   /*117: shl    $0x3,%rax */
0x0f, 0x1f, 0x44, 0x00, 0x00,             /*11b: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x53, 0x18,                   /*120: mov    0x18(%rbx),%rdx */
0xc7, 0x44, 0x02, 0x04, 0x00, 0x40, 0xf0, 0xff,/*124: movl   $0xfff04000,0x4(%rdx,%rax,1) */
0x48, 0x8b, 0x53, 0x18,                   /*12c: mov    0x18(%rbx),%rdx */
0xc7, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, /*130: movl   $0x0,(%rdx,%rax,1) */
0x48, 0x83, 0xc0, 0x08,                   /*137: add    $0x8,%rax */
0xff, 0xc1,                               /*13b: inc    %ecx */
0x75, 0xe1,                               /*13d: jne    120 <op_apost+0x120> */
0xe9, 0xbb, 0x00, 0x00, 0x00,             /*13f: jmpq   1ff <op_apost+0x1ff> */
0x31, 0xed,                               /*144: xor    %ebp,%ebp */
0x31, 0xf6,                               /*146: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*148: callq  14d <op_apost+0x14d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*14d: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*152: movzwl %cx,%ecx */
0x49, 0x89, 0x04, 0xcc,                   /*155: mov    %rax,(%r12,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*159: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*15e: movzwl %ax,%eax */
0x41, 0x39, 0xc7,                         /*161: cmp    %eax,%r15d */
0x7e, 0x4a,                               /*164: jle    1b0 <op_apost+0x1b0> */
0x41, 0x8d, 0x6f, 0xff,                   /*166: lea    -0x1(%r15),%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*16a: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*16f: movzwl %ax,%ecx */
0x29, 0xcd,                               /*172: sub    %ecx,%ebp */
0x0f, 0xb7, 0xc0,                         /*174: movzwl %ax,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*177: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*17c: movzwl %cx,%ecx */
0xff, 0xc1,                               /*17f: inc    %ecx */
0x48, 0xc1, 0xe1, 0x03,                   /*181: shl    $0x3,%rcx */
0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*185: data16 nopw %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x53, 0x18,                   /*190: mov    0x18(%rbx),%rdx */
0x49, 0x8b, 0x76, 0x28,                   /*194: mov    0x28(%r14),%rsi */
0xf2, 0x0f, 0x10, 0x04, 0xc6,             /*198: movsd  (%rsi,%rax,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0a,             /*19d: movsd  %xmm0,(%rdx,%rcx,1) */
0x48, 0xff, 0xc0,                         /*1a2: inc    %rax */
0x48, 0x83, 0xc1, 0x08,                   /*1a5: add    $0x8,%rcx */
0x41, 0x39, 0xc7,                         /*1a9: cmp    %eax,%r15d */
0x75, 0xe2,                               /*1ac: jne    190 <op_apost+0x190> */
0xff, 0xc5,                               /*1ae: inc    %ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1b0: mov    $0x0,%eax */
0x0f, 0xb6, 0xc0,                         /*1b5: movzbl %al,%eax */
0x39, 0xc5,                               /*1b8: cmp    %eax,%ebp */
0x7d, 0x43,                               /*1ba: jge    1ff <op_apost+0x1ff> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1bc: mov    $0x0,%eax */
0x0f, 0xb6, 0xc0,                         /*1c1: movzbl %al,%eax */
0x29, 0xe8,                               /*1c4: sub    %ebp,%eax */
0x48, 0x63, 0xd5,                         /*1c6: movslq %ebp,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1c9: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1ce: movzwl %cx,%ecx */
0xff, 0xc1,                               /*1d1: inc    %ecx */
0x48, 0x01, 0xd1,                         /*1d3: add    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x03,                   /*1d6: shl    $0x3,%rcx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*1da: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x53, 0x18,                   /*1e0: mov    0x18(%rbx),%rdx */
0xc7, 0x44, 0x0a, 0x04, 0x00, 0x40, 0xf0, 0xff,/*1e4: movl   $0xfff04000,0x4(%rdx,%rcx,1) */
0x48, 0x8b, 0x53, 0x18,                   /*1ec: mov    0x18(%rbx),%rdx */
0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, /*1f0: movl   $0x0,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x08,                   /*1f7: add    $0x8,%rcx */
0xff, 0xc8,                               /*1fb: dec    %eax */
0x75, 0xe1,                               /*1fd: jne    1e0 <op_apost+0x1e0> */
0x8b, 0x43, 0x48,                         /*1ff: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*202: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*206: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*20c: mov    %rbx,%rdi */
0x5b,                                     /*20f: pop    %rbx */
0x41, 0x5c,                               /*210: pop    %r12 */
0x41, 0x5d,                               /*212: pop    %r13 */
0x41, 0x5e,                               /*214: pop    %r14 */
0x41, 0x5f,                               /*216: pop    %r15 */
0x5d,                                     /*218: pop    %rbp */

};
static uint8_t op_apost__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00,             

};

static void op_apost_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_apost_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_apost_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_string__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*d: movzwl %ax,%r14d */
0x48, 0x8b, 0x7b, 0x50,                   /*11: mov    0x50(%rbx),%rdi */
0x4c, 0x8b, 0x7b, 0x18,                   /*15: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x43, 0x20,                   /*19: mov    0x20(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*22: movzwl %cx,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*25: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*29: callq  2e <op_string+0x2e> */
0x4b, 0x89, 0x04, 0xf7,                   /*2e: mov    %rax,(%r15,%r14,8) */
0x8b, 0x43, 0x48,                         /*32: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*35: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*39: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*3f: mov    %rbx,%rdi */
0x5b,                                     /*42: pop    %rbx */
0x41, 0x5e,                               /*43: pop    %r14 */
0x41, 0x5f,                               /*45: pop    %r15 */

};
static uint8_t op_string__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_string_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_string_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_string_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_strcat__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x7b, 0x50,                   /*8: mov    0x50(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*11: movzwl %cx,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*14: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1d: movzwl %cx,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*20: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*24: callq  29 <op_strcat+0x29> */
0x48, 0x89, 0xdf,                         /*29: mov    %rbx,%rdi */
0x5b,                                     /*2c: pop    %rbx */

};
static uint8_t op_strcat__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_strcat_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_strcat_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_strcat_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_hash__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x53,                                     /*5: push   %rbx */
0x48, 0x89, 0xfb,                         /*6: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*9: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*e: movzwl %ax,%eax */
0x89, 0x44, 0x24, 0x04,                   /*11: mov    %eax,0x4(%rsp) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%eax */
0x0f, 0xb6, 0xc0,                         /*1a: movzbl %al,%eax */
0x89, 0x04, 0x24,                         /*1d: mov    %eax,(%rsp) */
0x8b, 0x44, 0x24, 0x04,                   /*20: mov    0x4(%rsp),%eax */
0x8b, 0x0c, 0x24,                         /*24: mov    (%rsp),%ecx */
0x44, 0x8d, 0x3c, 0x48,                   /*27: lea    (%rax,%rcx,2),%r15d */
0x48, 0x8b, 0x7b, 0x50,                   /*2b: mov    0x50(%rbx),%rdi */
0x8b, 0x34, 0x24,                         /*2f: mov    (%rsp),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*32: callq  37 <op_hash+0x37> */
0x49, 0x89, 0xc6,                         /*37: mov    %rax,%r14 */
0xeb, 0x30,                               /*3a: jmp    6c <op_hash+0x6c> */
0x0f, 0x1f, 0x40, 0x00,                   /*3c: nopl   0x0(%rax) */
0x48, 0x8b, 0x7b, 0x50,                   /*40: mov    0x50(%rbx),%rdi */
0x48, 0x63, 0x44, 0x24, 0x04,             /*44: movslq 0x4(%rsp),%rax */
0x48, 0x8b, 0x4b, 0x18,                   /*49: mov    0x18(%rbx),%rcx */
0x48, 0x63, 0x74, 0x24, 0x04,             /*4d: movslq 0x4(%rsp),%rsi */
0x48, 0x8b, 0x6b, 0x18,                   /*52: mov    0x18(%rbx),%rbp */
0x48, 0x8b, 0x14, 0xc1,                   /*56: mov    (%rcx,%rax,8),%rdx */
0x48, 0x8b, 0x4c, 0xf5, 0x08,             /*5a: mov    0x8(%rbp,%rsi,8),%rcx */
0x4c, 0x89, 0xf6,                         /*5f: mov    %r14,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*62: callq  67 <op_hash+0x67> */
0x83, 0x44, 0x24, 0x04, 0x02,             /*67: addl   $0x2,0x4(%rsp) */
0x8b, 0x44, 0x24, 0x04,                   /*6c: mov    0x4(%rsp),%eax */
0x44, 0x39, 0xf8,                         /*70: cmp    %r15d,%eax */
0x7c, 0xcb,                               /*73: jl     40 <op_hash+0x40> */
0x48, 0x8b, 0x43, 0x18,                   /*75: mov    0x18(%rbx),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*79: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*7e: movzwl %cx,%ecx */
0x4c, 0x89, 0x34, 0xc8,                   /*81: mov    %r14,(%rax,%rcx,8) */
0x8b, 0x43, 0x48,                         /*85: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*88: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*8c: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*92: mov    %rbx,%rdi */
0x5b,                                     /*95: pop    %rbx */
0x41, 0x5e,                               /*96: pop    %r14 */
0x41, 0x5f,                               /*98: pop    %r15 */
0x5d,                                     /*9a: pop    %rbp */

};
static uint8_t op_hash__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_hash_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_hash_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_hash_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_lambda__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*9: movzwl %ax,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*11: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*19: movzwl %ax,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_lambda+0x21> */
0x48, 0x89, 0xdf,                         /*21: mov    %rbx,%rdi */
0x5b,                                     /*24: pop    %rbx */

};
static uint8_t op_lambda__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_lambda_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_lambda_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_lambda_set_args(op, GETARG_A(c),GETARG_b(c),GETARG_c(c),op_idx);
}


/* args: {} */
static uint8_t op_range__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*d: movzwl %ax,%r14d */
0x4c, 0x8b, 0x7b, 0x18,                   /*11: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x7b, 0x50,                   /*15: mov    0x50(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*19: mov    $0x0,%eax */
0x0f, 0xb7, 0xc8,                         /*1e: movzwl %ax,%ecx */
0x49, 0x8b, 0x34, 0xcf,                   /*21: mov    (%r15,%rcx,8),%rsi */
0x0f, 0xb7, 0xc0,                         /*25: movzwl %ax,%eax */
0xff, 0xc0,                               /*28: inc    %eax */
0x48, 0x98,                               /*2a: cltq */
0x49, 0x8b, 0x14, 0xc7,                   /*2c: mov    (%r15,%rax,8),%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*30: mov    $0x0,%eax */
0x84, 0xc0,                               /*35: test   %al,%al */
0x0f, 0x95, 0xc0,                         /*37: setne  %al */
0x0f, 0xb6, 0xc8,                         /*3a: movzbl %al,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3d: callq  42 <op_range+0x42> */
0x4b, 0x89, 0x04, 0xf7,                   /*42: mov    %rax,(%r15,%r14,8) */
0x8b, 0x43, 0x48,                         /*46: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*49: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*4d: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*53: mov    %rbx,%rdi */
0x5b,                                     /*56: pop    %rbx */
0x41, 0x5e,                               /*57: pop    %r14 */
0x41, 0x5f,                               /*59: pop    %r15 */

};
static uint8_t op_range__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       

};

static void op_range_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_range_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_range_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_oclass__text[] = {
0x48, 0x8b, 0x47, 0x18,                   /*0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x4f, 0x50,                   /*4: mov    0x50(%rdi),%rcx */
0x48, 0x8b, 0x49, 0x40,                   /*8: mov    0x40(%rcx),%rcx */
0x8b, 0x11,                               /*c: mov    (%rcx),%edx */
0x0f, 0xb6, 0xf2,                         /*e: movzbl %dl,%esi */
0x83, 0xfe, 0x05,                         /*11: cmp    $0x5,%esi */
0x77, 0x05,                               /*14: ja     1b <op_oclass+0x1b> */
0x83, 0xfe, 0x01,                         /*16: cmp    $0x1,%esi */
0x75, 0x1a,                               /*19: jne    35 <op_oclass+0x35> */
0xc1, 0xe2, 0x0e,                         /*1b: shl    $0xe,%edx */
0x81, 0xc2, 0x00, 0x40, 0x00, 0x00,       /*1e: add    $0x4000,%edx */
0x81, 0xca, 0x00, 0x00, 0xf0, 0xff,       /*24: or     $0xfff00000,%edx */
0x48, 0xc1, 0xe2, 0x20,                   /*2a: shl    $0x20,%rdx */
0x48, 0xc1, 0xe9, 0x02,                   /*2e: shr    $0x2,%rcx */
0x48, 0x09, 0xd1,                         /*32: or     %rdx,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*35: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*3a: movzwl %dx,%edx */
0x48, 0x89, 0x0c, 0xd0,                   /*3d: mov    %rcx,(%rax,%rdx,8) */

};
static uint8_t op_oclass__rodata[] = {
0x00, 0x00,                               

};

static void op_oclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_oclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_oclass_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_class__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*8: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*11: movzwl %dx,%edx */
0x8b, 0x0c, 0x91,                         /*14: mov    (%rcx,%rdx,4),%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%edx */
0x0f, 0xb7, 0xf2,                         /*1c: movzwl %dx,%esi */
0x48, 0x8b, 0x34, 0xf0,                   /*1f: mov    (%rax,%rsi,8),%rsi */
0x0f, 0xb7, 0xd2,                         /*23: movzwl %dx,%edx */
0xff, 0xc2,                               /*26: inc    %edx */
0x48, 0x63, 0xd2,                         /*28: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*2b: mov    (%rax,%rdx,8),%rdx */
0x48, 0x8b, 0x7b, 0x50,                   /*2f: mov    0x50(%rbx),%rdi */
0x85, 0xf6,                               /*33: test   %esi,%esi */
0x75, 0x50,                               /*35: jne    87 <op_class+0x87> */
0x48, 0x89, 0xf0,                         /*37: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*3a: shr    $0x20,%rax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*3e: cmp    $0xfff00001,%eax */
0x72, 0x42,                               /*43: jb     87 <op_class+0x87> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*45: and    $0xfc000,%eax */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*4a: cmp    $0x4000,%eax */
0x75, 0x36,                               /*4f: jne    87 <op_class+0x87> */
0x48, 0x8b, 0x47, 0x18,                   /*51: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*55: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*59: mov    0x48(%rax),%rsi */
0x8b, 0x06,                               /*5d: mov    (%rsi),%eax */
0x44, 0x0f, 0xb6, 0xc0,                   /*5f: movzbl %al,%r8d */
0x41, 0x83, 0xf8, 0x05,                   /*63: cmp    $0x5,%r8d */
0x77, 0x06,                               /*67: ja     6f <op_class+0x6f> */
0x41, 0x83, 0xf8, 0x01,                   /*69: cmp    $0x1,%r8d */
0x75, 0x18,                               /*6d: jne    87 <op_class+0x87> */
0xc1, 0xe0, 0x0e,                         /*6f: shl    $0xe,%eax */
0x05, 0x00, 0x40, 0x00, 0x00,             /*72: add    $0x4000,%eax */
0x0d, 0x00, 0x00, 0xf0, 0xff,             /*77: or     $0xfff00000,%eax */
0x48, 0xc1, 0xe0, 0x20,                   /*7c: shl    $0x20,%rax */
0x48, 0xc1, 0xee, 0x02,                   /*80: shr    $0x2,%rsi */
0x48, 0x09, 0xc6,                         /*84: or     %rax,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*87: callq  8c <op_class+0x8c> */
0x48, 0x8b, 0x4b, 0x18,                   /*8c: mov    0x18(%rbx),%rcx */
0x8b, 0x10,                               /*90: mov    (%rax),%edx */
0x0f, 0xb6, 0xf2,                         /*92: movzbl %dl,%esi */
0x83, 0xfe, 0x05,                         /*95: cmp    $0x5,%esi */
0x77, 0x05,                               /*98: ja     9f <op_class+0x9f> */
0x83, 0xfe, 0x01,                         /*9a: cmp    $0x1,%esi */
0x75, 0x1a,                               /*9d: jne    b9 <op_class+0xb9> */
0xc1, 0xe2, 0x0e,                         /*9f: shl    $0xe,%edx */
0x81, 0xc2, 0x00, 0x40, 0x00, 0x00,       /*a2: add    $0x4000,%edx */
0x81, 0xca, 0x00, 0x00, 0xf0, 0xff,       /*a8: or     $0xfff00000,%edx */
0x48, 0xc1, 0xe2, 0x20,                   /*ae: shl    $0x20,%rdx */
0x48, 0xc1, 0xe8, 0x02,                   /*b2: shr    $0x2,%rax */
0x48, 0x09, 0xd0,                         /*b6: or     %rdx,%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*b9: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*be: movzwl %dx,%edx */
0x48, 0x89, 0x04, 0xd1,                   /*c1: mov    %rax,(%rcx,%rdx,8) */
0x8b, 0x43, 0x48,                         /*c5: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*c8: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*cc: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*d2: mov    %rbx,%rdi */
0x5b,                                     /*d5: pop    %rbx */

};
static uint8_t op_class__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_class_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_class_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_class_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_module__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*4: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x4b, 0x28,                   /*8: mov    0x28(%rbx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*11: movzwl %dx,%edx */
0x8b, 0x14, 0x91,                         /*14: mov    (%rcx,%rdx,4),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*1c: movzwl %cx,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*1f: mov    (%rax,%rcx,8),%rsi */
0x48, 0x8b, 0x7b, 0x50,                   /*23: mov    0x50(%rbx),%rdi */
0x85, 0xf6,                               /*27: test   %esi,%esi */
0x75, 0x4d,                               /*29: jne    78 <op_module+0x78> */
0x48, 0x89, 0xf0,                         /*2b: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*2e: shr    $0x20,%rax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*32: cmp    $0xfff00001,%eax */
0x72, 0x3f,                               /*37: jb     78 <op_module+0x78> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*39: and    $0xfc000,%eax */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*3e: cmp    $0x4000,%eax */
0x75, 0x33,                               /*43: jne    78 <op_module+0x78> */
0x48, 0x8b, 0x47, 0x18,                   /*45: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*49: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*4d: mov    0x48(%rax),%rsi */
0x8b, 0x06,                               /*51: mov    (%rsi),%eax */
0x0f, 0xb6, 0xc8,                         /*53: movzbl %al,%ecx */
0x83, 0xf9, 0x05,                         /*56: cmp    $0x5,%ecx */
0x77, 0x05,                               /*59: ja     60 <op_module+0x60> */
0x83, 0xf9, 0x01,                         /*5b: cmp    $0x1,%ecx */
0x75, 0x18,                               /*5e: jne    78 <op_module+0x78> */
0xc1, 0xe0, 0x0e,                         /*60: shl    $0xe,%eax */
0x05, 0x00, 0x40, 0x00, 0x00,             /*63: add    $0x4000,%eax */
0x0d, 0x00, 0x00, 0xf0, 0xff,             /*68: or     $0xfff00000,%eax */
0x48, 0xc1, 0xe0, 0x20,                   /*6d: shl    $0x20,%rax */
0x48, 0xc1, 0xee, 0x02,                   /*71: shr    $0x2,%rsi */
0x48, 0x09, 0xc6,                         /*75: or     %rax,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*78: callq  7d <op_module+0x7d> */
0x48, 0x8b, 0x4b, 0x18,                   /*7d: mov    0x18(%rbx),%rcx */
0x8b, 0x10,                               /*81: mov    (%rax),%edx */
0x0f, 0xb6, 0xf2,                         /*83: movzbl %dl,%esi */
0x83, 0xfe, 0x05,                         /*86: cmp    $0x5,%esi */
0x77, 0x05,                               /*89: ja     90 <op_module+0x90> */
0x83, 0xfe, 0x01,                         /*8b: cmp    $0x1,%esi */
0x75, 0x1a,                               /*8e: jne    aa <op_module+0xaa> */
0xc1, 0xe2, 0x0e,                         /*90: shl    $0xe,%edx */
0x81, 0xc2, 0x00, 0x40, 0x00, 0x00,       /*93: add    $0x4000,%edx */
0x81, 0xca, 0x00, 0x00, 0xf0, 0xff,       /*99: or     $0xfff00000,%edx */
0x48, 0xc1, 0xe2, 0x20,                   /*9f: shl    $0x20,%rdx */
0x48, 0xc1, 0xe8, 0x02,                   /*a3: shr    $0x2,%rax */
0x48, 0x09, 0xd0,                         /*a7: or     %rdx,%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*aa: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*af: movzwl %dx,%edx */
0x48, 0x89, 0x04, 0xd1,                   /*b2: mov    %rax,(%rcx,%rdx,8) */
0x8b, 0x43, 0x48,                         /*b6: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*b9: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*bd: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*c3: mov    %rbx,%rdi */
0x5b,                                     /*c6: pop    %rbx */

};
static uint8_t op_module__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_module_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_module_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_module_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_exec__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x55,                               /*4: push   %r13 */
0x41, 0x54,                               /*6: push   %r12 */
0x53,                                     /*8: push   %rbx */
0x49, 0x89, 0xfe,                         /*9: mov    %rdi,%r14 */
0x41, 0xbd, 0x00, 0x00, 0x00, 0x00,       /*c: mov    $0x0,%r13d */
0x45, 0x0f, 0xb7, 0xe5,                   /*12: movzwl %r13w,%r12d */
0x49, 0x8b, 0x46, 0x18,                   /*16: mov    0x18(%r14),%rax */
0x49, 0x8b, 0x7e, 0x50,                   /*1a: mov    0x50(%r14),%rdi */
0x4e, 0x8b, 0x3c, 0xe0,                   /*1e: mov    (%rax,%r12,8),%r15 */
0x49, 0xc1, 0xe4, 0x03,                   /*22: shl    $0x3,%r12 */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_exec+0x2b> */
0x48, 0x89, 0xc3,                         /*2b: mov    %rax,%rbx */
0x49, 0x8b, 0x46, 0x10,                   /*2e: mov    0x10(%r14),%rax */
0x48, 0x83, 0xc0, 0x04,                   /*32: add    $0x4,%rax */
0x48, 0x89, 0x43, 0x30,                   /*36: mov    %rax,0x30(%rbx) */
0x41, 0x0f, 0xb7, 0xc5,                   /*3a: movzwl %r13w,%eax */
0x89, 0x43, 0x44,                         /*3e: mov    %eax,0x44(%rbx) */
0xc7, 0x03, 0x00, 0x00, 0x00, 0x00,       /*41: movl   $0x0,(%rbx) */
0x49, 0x8b, 0x46, 0x50,                   /*47: mov    0x50(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*4b: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*4f: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x10,                   /*53: mov    %rax,0x10(%rbx) */
0xc7, 0x43, 0x40, 0x00, 0x00, 0x00, 0x00, /*57: movl   $0x0,0x40(%rbx) */
0x4a, 0x8d, 0x04, 0xbd, 0x00, 0x00, 0x00, 0x00,/*5e: lea    0x0(,%r15,4),%rax */
0x48, 0xb9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*66: movabs $0xfffffffffffc,%rcx */
0x48, 0x21, 0xc1,                         /*70: and    %rax,%rcx */
0x48, 0x89, 0x4b, 0x48,                   /*73: mov    %rcx,0x48(%rbx) */
0x49, 0x8b, 0x46, 0x50,                   /*77: mov    0x50(%r14),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*7b: mov    0x18(%rax),%rax */
0x4c, 0x01, 0x60, 0x08,                   /*7f: add    %r12,0x8(%rax) */
0x49, 0x8b, 0x46, 0x08,                   /*83: mov    0x8(%r14),%rax */
0x49, 0x8b, 0x7e, 0x50,                   /*87: mov    0x50(%r14),%rdi */
0x48, 0x8b, 0x40, 0x20,                   /*8b: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8f: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*94: movzwl %cx,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*97: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*9b: callq  a0 <op_exec+0xa0> */
0x49, 0x89, 0xc4,                         /*a0: mov    %rax,%r12 */
0x48, 0x8b, 0x43, 0x48,                   /*a3: mov    0x48(%rbx),%rax */
0x49, 0x89, 0x44, 0x24, 0x20,             /*a7: mov    %rax,0x20(%r12) */
0x4c, 0x89, 0x63, 0x08,                   /*ac: mov    %r12,0x8(%rbx) */
0x41, 0xf6, 0x44, 0x24, 0x02, 0x04,       /*b0: testb  $0x4,0x2(%r12) */
0x74, 0x40,                               /*b6: je     f8 <op_exec+0xf8> */
0xc7, 0x43, 0x18, 0x00, 0x00, 0x00, 0x00, /*b8: movl   $0x0,0x18(%rbx) */
0x49, 0x8b, 0x7e, 0x50,                   /*bf: mov    0x50(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*c3: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*c7: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xfe,                         /*cb: mov    %r15,%rsi */
0x41, 0xff, 0x54, 0x24, 0x18,             /*ce: callq  *0x18(%r12) */
0x48, 0x89, 0x03,                         /*d3: mov    %rax,(%rbx) */
0x49, 0x8b, 0x7e, 0x50,                   /*d6: mov    0x50(%r14),%rdi */
0x41, 0x8b, 0x76, 0x48,                   /*da: mov    0x48(%r14),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*de: callq  e3 <op_exec+0xe3> */
0x49, 0x8b, 0x46, 0x50,                   /*e3: mov    0x50(%r14),%rax */
0x48, 0x83, 0x78, 0x28, 0x00,             /*e7: cmpq   $0x0,0x28(%rax) */
0x74, 0x69,                               /*ec: je     157 <op_exec+0x157> */
0x4c, 0x89, 0xf7,                         /*ee: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*f1: callq  f6 <op_exec+0xf6> */
0xeb, 0x7c,                               /*f6: jmp    174 <op_exec+0x174> */
0x49, 0x8b, 0x44, 0x24, 0x18,             /*f8: mov    0x18(%r12),%rax */
0x49, 0x89, 0x46, 0x08,                   /*fd: mov    %rax,0x8(%r14) */
0x48, 0x8b, 0x48, 0x10,                   /*101: mov    0x10(%rax),%rcx */
0x49, 0x89, 0x4e, 0x20,                   /*105: mov    %rcx,0x20(%r14) */
0x48, 0x8b, 0x48, 0x18,                   /*109: mov    0x18(%rax),%rcx */
0x49, 0x89, 0x4e, 0x28,                   /*10d: mov    %rcx,0x28(%r14) */
0x49, 0x8b, 0x7e, 0x50,                   /*111: mov    0x50(%r14),%rdi */
0x0f, 0xb7, 0x70, 0x02,                   /*115: movzwl 0x2(%rax),%esi */
0xba, 0x01, 0x00, 0x00, 0x00,             /*119: mov    $0x1,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*11e: callq  123 <op_exec+0x123> */
0x49, 0x8b, 0x46, 0x08,                   /*123: mov    0x8(%r14),%rax */
0x0f, 0xb7, 0x40, 0x02,                   /*127: movzwl 0x2(%rax),%eax */
0x89, 0x43, 0x18,                         /*12b: mov    %eax,0x18(%rbx) */
0x49, 0x8b, 0x7e, 0x50,                   /*12e: mov    0x50(%r14),%rdi */
0x48, 0x8b, 0x47, 0x18,                   /*132: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*136: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x18,                   /*13a: mov    %rax,0x18(%r14) */
0x49, 0x8b, 0x46, 0x08,                   /*13e: mov    0x8(%r14),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*142: mov    0x8(%rax),%rax */
0x49, 0x89, 0x46, 0x10,                   /*146: mov    %rax,0x10(%r14) */
0x4c, 0x89, 0xe6,                         /*14a: mov    %r12,%rsi */
0x4c, 0x89, 0xf2,                         /*14d: mov    %r14,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*150: callq  155 <op_exec+0x155> */
0xeb, 0x1d,                               /*155: jmp    174 <op_exec+0x174> */
0x48, 0x8b, 0x40, 0x18,                   /*157: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*15b: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*15f: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*163: mov    %rcx,0x8(%rax) */
0x49, 0x89, 0x4e, 0x18,                   /*167: mov    %rcx,0x18(%r14) */
0x49, 0x8b, 0x7e, 0x50,                   /*16b: mov    0x50(%r14),%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*16f: callq  174 <op_exec+0x174> */
0x4c, 0x89, 0xf7,                         /*174: mov    %r14,%rdi */
0x5b,                                     /*177: pop    %rbx */
0x41, 0x5c,                               /*178: pop    %r12 */
0x41, 0x5d,                               /*17a: pop    %r13 */
0x41, 0x5e,                               /*17c: pop    %r14 */
0x41, 0x5f,                               /*17e: pop    %r15 */

};
static uint8_t op_exec__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_exec_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_exec_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_exec_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}


/* args: {} */
static uint8_t op_method__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*4: mov    $0x0,%r8d */
0x41, 0x0f, 0xb7, 0xc8,                   /*a: movzwl %r8w,%ecx */
0x48, 0x8b, 0x43, 0x18,                   /*e: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x53, 0x28,                   /*12: mov    0x28(%rbx),%rdx */
0x48, 0x8b, 0x0c, 0xc8,                   /*16: mov    (%rax,%rcx,8),%rcx */
0x48, 0xc1, 0xe1, 0x02,                   /*1a: shl    $0x2,%rcx */
0x48, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*1e: movabs $0xfffffffffffc,%rsi */
0x48, 0x21, 0xce,                         /*28: and    %rcx,%rsi */
0x48, 0x8b, 0x7b, 0x50,                   /*2b: mov    0x50(%rbx),%rdi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2f: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*34: movzwl %cx,%ecx */
0x8b, 0x14, 0x8a,                         /*37: mov    (%rdx,%rcx,4),%edx */
0x41, 0x0f, 0xb7, 0xc8,                   /*3a: movzwl %r8w,%ecx */
0xff, 0xc1,                               /*3e: inc    %ecx */
0x48, 0x63, 0xc9,                         /*40: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*43: mov    (%rax,%rcx,8),%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*47: callq  4c <op_method+0x4c> */
0x8b, 0x43, 0x48,                         /*4c: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*4f: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*53: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*59: mov    %rbx,%rdi */
0x5b,                                     /*5c: pop    %rbx */

};
static uint8_t op_method__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_method_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_method_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_method_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_sclass__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x48, 0x89, 0xfb,                         /*5: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x44, 0x0f, 0xb7, 0xf0,                   /*d: movzwl %ax,%r14d */
0x4c, 0x8b, 0x7b, 0x18,                   /*11: mov    0x18(%rbx),%r15 */
0x48, 0x8b, 0x7b, 0x50,                   /*15: mov    0x50(%rbx),%rdi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*19: mov    $0x0,%eax */
0x0f, 0xb7, 0xc0,                         /*1e: movzwl %ax,%eax */
0x49, 0x8b, 0x34, 0xc7,                   /*21: mov    (%r15,%rax,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*25: callq  2a <op_sclass+0x2a> */
0x4b, 0x89, 0x04, 0xf7,                   /*2a: mov    %rax,(%r15,%r14,8) */
0x8b, 0x43, 0x48,                         /*2e: mov    0x48(%rbx),%eax */
0x48, 0x8b, 0x4b, 0x50,                   /*31: mov    0x50(%rbx),%rcx */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*35: mov    %eax,0xdc(%rcx) */
0x48, 0x89, 0xdf,                         /*3b: mov    %rbx,%rdi */
0x5b,                                     /*3e: pop    %rbx */
0x41, 0x5e,                               /*3f: pop    %r14 */
0x41, 0x5f,                               /*41: pop    %r15 */

};
static uint8_t op_sclass__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_sclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_sclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_sclass_set_args(op, GETARG_A(c),GETARG_B(c),0,op_idx);
}


/* args: {} */
static uint8_t op_tclass__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0x49, 0x8b, 0x5e, 0x50,                   /*8: mov    0x50(%r14),%rbx */
0x48, 0x8b, 0x43, 0x18,                   /*c: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*10: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x48,                   /*14: mov    0x48(%rax),%rax */
0x48, 0x85, 0xc0,                         /*18: test   %rax,%rax */
0x74, 0x3b,                               /*1b: je     58 <op_tclass+0x58> */
0x49, 0x8b, 0x4e, 0x18,                   /*1d: mov    0x18(%r14),%rcx */
0x8b, 0x10,                               /*21: mov    (%rax),%edx */
0x0f, 0xb6, 0xf2,                         /*23: movzbl %dl,%esi */
0x83, 0xfe, 0x05,                         /*26: cmp    $0x5,%esi */
0x77, 0x05,                               /*29: ja     30 <op_tclass+0x30> */
0x83, 0xfe, 0x01,                         /*2b: cmp    $0x1,%esi */
0x75, 0x1a,                               /*2e: jne    4a <op_tclass+0x4a> */
0xc1, 0xe2, 0x0e,                         /*30: shl    $0xe,%edx */
0x81, 0xc2, 0x00, 0x40, 0x00, 0x00,       /*33: add    $0x4000,%edx */
0x81, 0xca, 0x00, 0x00, 0xf0, 0xff,       /*39: or     $0xfff00000,%edx */
0x48, 0xc1, 0xe2, 0x20,                   /*3f: shl    $0x20,%rdx */
0x48, 0xc1, 0xe8, 0x02,                   /*43: shr    $0x2,%rax */
0x48, 0x09, 0xd0,                         /*47: or     %rdx,%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4a: mov    $0x0,%edx */
0x0f, 0xb7, 0xd2,                         /*4f: movzwl %dx,%edx */
0x48, 0x89, 0x04, 0xd1,                   /*52: mov    %rax,(%rcx,%rdx,8) */
0xeb, 0x53,                               /*56: jmp    ab <op_tclass+0xab> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*58: mov    0x0(%rip),%rsi        # 5f <op_tclass+0x5f> */
0x48, 0x89, 0xdf,                         /*5f: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*62: callq  67 <op_tclass+0x67> */
0x49, 0x89, 0xc7,                         /*67: mov    %rax,%r15 */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*6a: mov    $0x0,%esi */
0xba, 0x19, 0x00, 0x00, 0x00,             /*6f: mov    $0x19,%edx */
0x48, 0x89, 0xdf,                         /*74: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*77: callq  7c <op_tclass+0x7c> */
0x48, 0x89, 0xdf,                         /*7c: mov    %rbx,%rdi */
0x4c, 0x89, 0xfe,                         /*7f: mov    %r15,%rsi */
0x48, 0x89, 0xc2,                         /*82: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*85: callq  8a <op_tclass+0x8a> */
0x48, 0xc1, 0xe0, 0x02,                   /*8a: shl    $0x2,%rax */
0x48, 0xb9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*8e: movabs $0xfffffffffffc,%rcx */
0x48, 0x21, 0xc1,                         /*98: and    %rax,%rcx */
0x49, 0x8b, 0x46, 0x50,                   /*9b: mov    0x50(%r14),%rax */
0x48, 0x89, 0x48, 0x28,                   /*9f: mov    %rcx,0x28(%rax) */
0x4c, 0x89, 0xf7,                         /*a3: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a6: callq  ab <op_tclass+0xab> */
0x4c, 0x89, 0xf7,                         /*ab: mov    %r14,%rdi */
0x5b,                                     /*ae: pop    %rbx */
0x41, 0x5e,                               /*af: pop    %r14 */
0x41, 0x5f,                               /*b1: pop    %r15 */

};
static uint8_t op_tclass__rodata[] = {
0x6e, 0x6f, 0x20, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x20,
0x6f, 0x72, 0x20, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x00, 0x00, 0x00,

};

static void op_tclass_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_tclass_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_tclass_set_args(op, GETARG_A(c),0,0,op_idx);
}


/* args: {} */
static uint8_t op_debug__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4: mov    $0x0,%eax */
0x0f, 0xb7, 0xf0,                         /*9: movzwl %ax,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%eax */
0x0f, 0xb7, 0xd0,                         /*11: movzwl %ax,%edx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%eax */
0x0f, 0xb6, 0xc8,                         /*19: movzbl %al,%ecx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%edi */
0x31, 0xc0,                               /*21: xor    %eax,%eax */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*23: callq  28 <op_debug+0x28> */
0x48, 0x89, 0xdf,                         /*28: mov    %rbx,%rdi */
0x5b,                                     /*2b: pop    %rbx */

};
static uint8_t op_debug__rodata[] = {
0x4f, 0x50, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x20, 0x25, 0x64, 0x20, 0x25, 0x64, 0x20, 0x25,
0x64, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};

static void op_debug_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_debug_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_debug_set_args(op, GETARG_A(c),GETARG_B(c),GETARG_C(c),op_idx);
}


/* args: {} */
static uint8_t op_stop__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x89, 0xfb,                         /*1: mov    %rdi,%rbx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*4: callq  9 <op_stop+0x9> */
0x48, 0x89, 0xdf,                         /*9: mov    %rbx,%rdi */
0x5b,                                     /*c: pop    %rbx */

};
static uint8_t op_stop__rodata[] = {

};

static void op_stop_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_stop_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_stop_set_args(op, 0,0,0,op_idx);
}


/* args: {} */
static uint8_t op_err__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x49, 0x89, 0xfe,                         /*5: mov    %rdi,%r14 */
0x49, 0x8b, 0x46, 0x20,                   /*8: mov    0x20(%r14),%rax */
0x49, 0x8b, 0x5e, 0x50,                   /*c: mov    0x50(%r14),%rbx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%ecx */
0x0f, 0xb7, 0xc9,                         /*15: movzwl %cx,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*18: mov    (%rax,%rcx,8),%rsi */
0x48, 0x89, 0xdf,                         /*1c: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1f: callq  24 <op_err+0x24> */
0x49, 0x89, 0xc7,                         /*24: mov    %rax,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*27: mov    $0x0,%eax */
0x66, 0x85, 0xc0,                         /*2c: test   %ax,%ax */
0x75, 0x09,                               /*2f: jne    3a <op_err+0x3a> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*31: mov    0x0(%rip),%rsi        # 38 <op_err+0x38> */
0xeb, 0x07,                               /*38: jmp    41 <op_err+0x41> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3a: mov    0x0(%rip),%rsi        # 41 <op_err+0x41> */
0x48, 0x89, 0xdf,                         /*41: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*44: callq  49 <op_err+0x49> */
0x48, 0x89, 0xdf,                         /*49: mov    %rbx,%rdi */
0x48, 0x89, 0xc6,                         /*4c: mov    %rax,%rsi */
0x4c, 0x89, 0xfa,                         /*4f: mov    %r15,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*52: callq  57 <op_err+0x57> */
0x48, 0xc1, 0xe0, 0x02,                   /*57: shl    $0x2,%rax */
0x48, 0xb9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*5b: movabs $0xfffffffffffc,%rcx */
0x48, 0x21, 0xc1,                         /*65: and    %rax,%rcx */
0x49, 0x8b, 0x46, 0x50,                   /*68: mov    0x50(%r14),%rax */
0x48, 0x89, 0x48, 0x28,                   /*6c: mov    %rcx,0x28(%rax) */
0x4c, 0x89, 0xf7,                         /*70: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*73: callq  78 <op_err+0x78> */
0x4c, 0x89, 0xf7,                         /*78: mov    %r14,%rdi */
0x5b,                                     /*7b: pop    %rbx */
0x41, 0x5e,                               /*7c: pop    %r14 */
0x41, 0x5f,                               /*7e: pop    %r15 */

};
static uint8_t op_err__rodata[] = {
0x00, 0x00, 0x00, 0x00,                   

};

static void op_err_set_args(uint8_t *op, uint32_t a, int32_t b, uint8_t c, uint32_t op_idx) {
}

static void op_err_set_args_from_code(uint8_t *op, mrb_code c, uint32_t op_idx) {
  op_err_set_args(op, GETARG_A(c),GETARG_Bx(c),0,op_idx);
}

typedef void (*jit_args_func_t)(uint8_t *op, mrb_code c, uint32_t op_idx);
typedef void (*jit_link_func_t)(uint8_t *op, uint8_t *data);
static jit_args_func_t arg_funcs[78];
extern jit_link_func_t link_funcs[];
uint8_t* ops_text[78];
uint8_t* ops_rodata[78];
static char *op_names[78];

static size_t op_sizes_text[] = {
  sizeof(op_nop__text), /* 0 */
  sizeof(op_move__text), /* 30 */
  sizeof(op_loadl__text), /* 34 */
  sizeof(op_loadi__text), /* 35 */
  sizeof(op_loadsym__text), /* 42 */
  sizeof(op_loadnil__text), /* 31 */
  sizeof(op_loadself__text), /* 21 */
  sizeof(op_loadt__text), /* 31 */
  sizeof(op_loadf__text), /* 31 */
  sizeof(op_getglobal__text), /* 57 */
  sizeof(op_setglobal__text), /* 48 */
  sizeof(op_getspecial__text), /* 50 */
  sizeof(op_setspecial__text), /* 41 */
  sizeof(op_getiv__text), /* 57 */
  sizeof(op_setiv__text), /* 48 */
  sizeof(op_getcv__text), /* 97 */
  sizeof(op_setcv__text), /* 48 */
  sizeof(op_getconst__text), /* 100 */
  sizeof(op_setconst__text), /* 48 */
  sizeof(op_getmcnst__text), /* 113 */
  sizeof(op_setmcnst__text), /* 60 */
  sizeof(op_getupvar__text), /* 123 */
  sizeof(op_setupvar__text), /* 117 */
  sizeof(op_jmp__text), /* 0 */
  sizeof(op_jmpif__text), /* 54 */
  sizeof(op_jmpnot__text), /* 54 */
  sizeof(op_onerr__text), /* 155 */
  sizeof(op_rescue__text), /* 131 */
  sizeof(op_poperr__text), /* 51 */
  sizeof(op_raise__text), /* 54 */
  sizeof(op_epush__text), /* 172 */
  sizeof(op_epop__text), /* 115 */
  sizeof(op_send__text), /* 115 */
  sizeof(op_sendb__text), /* 60 */
  sizeof(op_fsend__text), /* 0 */
  sizeof(op_call__text), /* 450 */
  sizeof(op_super__text), /* 937 */
  sizeof(op_argary__text), /* 786 */
  sizeof(op_enter__text), /* 2162 */
  sizeof(op_enter_method_m__text), /* 469 */
  sizeof(op_karg__text), /* 0 */
  sizeof(op_kdict__text), /* 0 */
  sizeof(op_return__text), /* 41 */
  sizeof(op_break__text), /* 30 */
  sizeof(op_tailcall__text), /* 1014 */
  sizeof(op_blkpush__text), /* 218 */
  sizeof(op_add__text), /* 439 */
  sizeof(op_addi__text), /* 254 */
  sizeof(op_sub__text), /* 359 */
  sizeof(op_subi__text), /* 260 */
  sizeof(op_mul__text), /* 424 */
  sizeof(op_div__text), /* 382 */
  sizeof(op_eq__text), /* 379 */
  sizeof(op_lt__text), /* 351 */
  sizeof(op_le__text), /* 351 */
  sizeof(op_gt__text), /* 343 */
  sizeof(op_ge__text), /* 343 */
  sizeof(op_array__text), /* 75 */
  sizeof(op_arycat__text), /* 80 */
  sizeof(op_arypush__text), /* 45 */
  sizeof(op_aref__text), /* 141 */
  sizeof(op_aset__text), /* 53 */
  sizeof(op_apost__text), /* 537 */
  sizeof(op_string__text), /* 71 */
  sizeof(op_strcat__text), /* 45 */
  sizeof(op_hash__text), /* 155 */
  sizeof(op_lambda__text), /* 37 */
  sizeof(op_range__text), /* 91 */
  sizeof(op_oclass__text), /* 65 */
  sizeof(op_class__text), /* 214 */
  sizeof(op_module__text), /* 199 */
  sizeof(op_exec__text), /* 384 */
  sizeof(op_method__text), /* 93 */
  sizeof(op_sclass__text), /* 67 */
  sizeof(op_tclass__text), /* 179 */
  sizeof(op_debug__text), /* 44 */
  sizeof(op_stop__text), /* 13 */
  sizeof(op_err__text), /* 128 */

};
static size_t op_sizes_rodata[] = {
  sizeof(op_nop__rodata), /* 0 */
  sizeof(op_move__rodata), /* 4 */
  sizeof(op_loadl__rodata), /* 4 */
  sizeof(op_loadi__rodata), /* 4 */
  sizeof(op_loadsym__rodata), /* 4 */
  sizeof(op_loadnil__rodata), /* 2 */
  sizeof(op_loadself__rodata), /* 2 */
  sizeof(op_loadt__rodata), /* 2 */
  sizeof(op_loadf__rodata), /* 2 */
  sizeof(op_getglobal__rodata), /* 4 */
  sizeof(op_setglobal__rodata), /* 4 */
  sizeof(op_getspecial__rodata), /* 4 */
  sizeof(op_setspecial__rodata), /* 4 */
  sizeof(op_getiv__rodata), /* 4 */
  sizeof(op_setiv__rodata), /* 4 */
  sizeof(op_getcv__rodata), /* 4 */
  sizeof(op_setcv__rodata), /* 4 */
  sizeof(op_getconst__rodata), /* 4 */
  sizeof(op_setconst__rodata), /* 4 */
  sizeof(op_getmcnst__rodata), /* 4 */
  sizeof(op_setmcnst__rodata), /* 4 */
  sizeof(op_getupvar__rodata), /* 6 */
  sizeof(op_setupvar__rodata), /* 6 */
  sizeof(op_jmp__rodata), /* 0 */
  sizeof(op_jmpif__rodata), /* 2 */
  sizeof(op_jmpnot__rodata), /* 2 */
  sizeof(op_onerr__rodata), /* 2 */
  sizeof(op_rescue__rodata), /* 2 */
  sizeof(op_poperr__rodata), /* 2 */
  sizeof(op_raise__rodata), /* 2 */
  sizeof(op_epush__rodata), /* 2 */
  sizeof(op_epop__rodata), /* 2 */
  sizeof(op_send__rodata), /* 5 */
  sizeof(op_sendb__rodata), /* 5 */
  sizeof(op_fsend__rodata), /* 0 */
  sizeof(op_call__rodata), /* 2 */
  sizeof(op_super__rodata), /* 62 */
  sizeof(op_argary__rodata), /* 47 */
  sizeof(op_enter__rodata), /* 51 */
  sizeof(op_enter_method_m__rodata), /* 17 */
  sizeof(op_karg__rodata), /* 0 */
  sizeof(op_kdict__rodata), /* 0 */
  sizeof(op_return__rodata), /* 2 */
  sizeof(op_break__rodata), /* 4 */
  sizeof(op_tailcall__rodata), /* 85 */
  sizeof(op_blkpush__rodata), /* 4 */
  sizeof(op_add__rodata), /* 2 */
  sizeof(op_addi__rodata), /* 6 */
  sizeof(op_sub__rodata), /* 2 */
  sizeof(op_subi__rodata), /* 6 */
  sizeof(op_mul__rodata), /* 2 */
  sizeof(op_div__rodata), /* 2 */
  sizeof(op_eq__rodata), /* 5 */
  sizeof(op_lt__rodata), /* 5 */
  sizeof(op_le__rodata), /* 5 */
  sizeof(op_gt__rodata), /* 5 */
  sizeof(op_ge__rodata), /* 5 */
  sizeof(op_array__rodata), /* 6 */
  sizeof(op_arycat__rodata), /* 4 */
  sizeof(op_arypush__rodata), /* 4 */
  sizeof(op_aref__rodata), /* 6 */
  sizeof(op_aset__rodata), /* 6 */
  sizeof(op_apost__rodata), /* 5 */
  sizeof(op_string__rodata), /* 4 */
  sizeof(op_strcat__rodata), /* 4 */
  sizeof(op_hash__rodata), /* 6 */
  sizeof(op_lambda__rodata), /* 6 */
  sizeof(op_range__rodata), /* 6 */
  sizeof(op_oclass__rodata), /* 2 */
  sizeof(op_class__rodata), /* 4 */
  sizeof(op_module__rodata), /* 4 */
  sizeof(op_exec__rodata), /* 4 */
  sizeof(op_method__rodata), /* 4 */
  sizeof(op_sclass__rodata), /* 4 */
  sizeof(op_tclass__rodata), /* 28 */
  sizeof(op_debug__rodata), /* 25 */
  sizeof(op_stop__rodata), /* 0 */
  sizeof(op_err__rodata), /* 4 */

};
static int8_t op_algn_text[] = {
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,

};
static int8_t op_algn_rodata[] = {
  -1,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  -1,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  -1,
  2,
  16,
  16,
  16,
  4,
  -1,
  -1,
  2,
  2,
  8,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  16,
  16,
  -1,
  2,

};

extern void init_linker();
void init_ops() {
  static int init = 0;
  if(init == 0) {
    init = 1;
    init_linker();
    ops_text[0] = op_nop__text;
    ops_rodata[0] = op_nop__rodata;
    op_names[0] = "op_nop";
    arg_funcs[0] = op_nop_set_args_from_code;
    ops_text[1] = op_move__text;
    ops_rodata[1] = op_move__rodata;
    op_names[1] = "op_move";
    arg_funcs[1] = op_move_set_args_from_code;
    ops_text[2] = op_loadl__text;
    ops_rodata[2] = op_loadl__rodata;
    op_names[2] = "op_loadl";
    arg_funcs[2] = op_loadl_set_args_from_code;
    ops_text[3] = op_loadi__text;
    ops_rodata[3] = op_loadi__rodata;
    op_names[3] = "op_loadi";
    arg_funcs[3] = op_loadi_set_args_from_code;
    ops_text[4] = op_loadsym__text;
    ops_rodata[4] = op_loadsym__rodata;
    op_names[4] = "op_loadsym";
    arg_funcs[4] = op_loadsym_set_args_from_code;
    ops_text[5] = op_loadnil__text;
    ops_rodata[5] = op_loadnil__rodata;
    op_names[5] = "op_loadnil";
    arg_funcs[5] = op_loadnil_set_args_from_code;
    ops_text[6] = op_loadself__text;
    ops_rodata[6] = op_loadself__rodata;
    op_names[6] = "op_loadself";
    arg_funcs[6] = op_loadself_set_args_from_code;
    ops_text[7] = op_loadt__text;
    ops_rodata[7] = op_loadt__rodata;
    op_names[7] = "op_loadt";
    arg_funcs[7] = op_loadt_set_args_from_code;
    ops_text[8] = op_loadf__text;
    ops_rodata[8] = op_loadf__rodata;
    op_names[8] = "op_loadf";
    arg_funcs[8] = op_loadf_set_args_from_code;
    ops_text[9] = op_getglobal__text;
    ops_rodata[9] = op_getglobal__rodata;
    op_names[9] = "op_getglobal";
    arg_funcs[9] = op_getglobal_set_args_from_code;
    ops_text[10] = op_setglobal__text;
    ops_rodata[10] = op_setglobal__rodata;
    op_names[10] = "op_setglobal";
    arg_funcs[10] = op_setglobal_set_args_from_code;
    ops_text[11] = op_getspecial__text;
    ops_rodata[11] = op_getspecial__rodata;
    op_names[11] = "op_getspecial";
    arg_funcs[11] = op_getspecial_set_args_from_code;
    ops_text[12] = op_setspecial__text;
    ops_rodata[12] = op_setspecial__rodata;
    op_names[12] = "op_setspecial";
    arg_funcs[12] = op_setspecial_set_args_from_code;
    ops_text[13] = op_getiv__text;
    ops_rodata[13] = op_getiv__rodata;
    op_names[13] = "op_getiv";
    arg_funcs[13] = op_getiv_set_args_from_code;
    ops_text[14] = op_setiv__text;
    ops_rodata[14] = op_setiv__rodata;
    op_names[14] = "op_setiv";
    arg_funcs[14] = op_setiv_set_args_from_code;
    ops_text[15] = op_getcv__text;
    ops_rodata[15] = op_getcv__rodata;
    op_names[15] = "op_getcv";
    arg_funcs[15] = op_getcv_set_args_from_code;
    ops_text[16] = op_setcv__text;
    ops_rodata[16] = op_setcv__rodata;
    op_names[16] = "op_setcv";
    arg_funcs[16] = op_setcv_set_args_from_code;
    ops_text[17] = op_getconst__text;
    ops_rodata[17] = op_getconst__rodata;
    op_names[17] = "op_getconst";
    arg_funcs[17] = op_getconst_set_args_from_code;
    ops_text[18] = op_setconst__text;
    ops_rodata[18] = op_setconst__rodata;
    op_names[18] = "op_setconst";
    arg_funcs[18] = op_setconst_set_args_from_code;
    ops_text[19] = op_getmcnst__text;
    ops_rodata[19] = op_getmcnst__rodata;
    op_names[19] = "op_getmcnst";
    arg_funcs[19] = op_getmcnst_set_args_from_code;
    ops_text[20] = op_setmcnst__text;
    ops_rodata[20] = op_setmcnst__rodata;
    op_names[20] = "op_setmcnst";
    arg_funcs[20] = op_setmcnst_set_args_from_code;
    ops_text[21] = op_getupvar__text;
    ops_rodata[21] = op_getupvar__rodata;
    op_names[21] = "op_getupvar";
    arg_funcs[21] = op_getupvar_set_args_from_code;
    ops_text[22] = op_setupvar__text;
    ops_rodata[22] = op_setupvar__rodata;
    op_names[22] = "op_setupvar";
    arg_funcs[22] = op_setupvar_set_args_from_code;
    ops_text[23] = op_jmp__text;
    ops_rodata[23] = op_jmp__rodata;
    op_names[23] = "op_jmp";
    arg_funcs[23] = op_jmp_set_args_from_code;
    ops_text[24] = op_jmpif__text;
    ops_rodata[24] = op_jmpif__rodata;
    op_names[24] = "op_jmpif";
    arg_funcs[24] = op_jmpif_set_args_from_code;
    ops_text[25] = op_jmpnot__text;
    ops_rodata[25] = op_jmpnot__rodata;
    op_names[25] = "op_jmpnot";
    arg_funcs[25] = op_jmpnot_set_args_from_code;
    ops_text[26] = op_onerr__text;
    ops_rodata[26] = op_onerr__rodata;
    op_names[26] = "op_onerr";
    arg_funcs[26] = op_onerr_set_args_from_code;
    ops_text[27] = op_rescue__text;
    ops_rodata[27] = op_rescue__rodata;
    op_names[27] = "op_rescue";
    arg_funcs[27] = op_rescue_set_args_from_code;
    ops_text[28] = op_poperr__text;
    ops_rodata[28] = op_poperr__rodata;
    op_names[28] = "op_poperr";
    arg_funcs[28] = op_poperr_set_args_from_code;
    ops_text[29] = op_raise__text;
    ops_rodata[29] = op_raise__rodata;
    op_names[29] = "op_raise";
    arg_funcs[29] = op_raise_set_args_from_code;
    ops_text[30] = op_epush__text;
    ops_rodata[30] = op_epush__rodata;
    op_names[30] = "op_epush";
    arg_funcs[30] = op_epush_set_args_from_code;
    ops_text[31] = op_epop__text;
    ops_rodata[31] = op_epop__rodata;
    op_names[31] = "op_epop";
    arg_funcs[31] = op_epop_set_args_from_code;
    ops_text[32] = op_send__text;
    ops_rodata[32] = op_send__rodata;
    op_names[32] = "op_send";
    arg_funcs[32] = op_send_set_args_from_code;
    ops_text[33] = op_sendb__text;
    ops_rodata[33] = op_sendb__rodata;
    op_names[33] = "op_sendb";
    arg_funcs[33] = op_sendb_set_args_from_code;
    ops_text[34] = op_fsend__text;
    ops_rodata[34] = op_fsend__rodata;
    op_names[34] = "op_fsend";
    arg_funcs[34] = op_fsend_set_args_from_code;
    ops_text[35] = op_call__text;
    ops_rodata[35] = op_call__rodata;
    op_names[35] = "op_call";
    arg_funcs[35] = op_call_set_args_from_code;
    ops_text[36] = op_super__text;
    ops_rodata[36] = op_super__rodata;
    op_names[36] = "op_super";
    arg_funcs[36] = op_super_set_args_from_code;
    ops_text[37] = op_argary__text;
    ops_rodata[37] = op_argary__rodata;
    op_names[37] = "op_argary";
    arg_funcs[37] = op_argary_set_args_from_code;
    ops_text[38] = op_enter__text;
    ops_rodata[38] = op_enter__rodata;
    op_names[38] = "op_enter";
    arg_funcs[38] = op_enter_set_args_from_code;
    ops_text[39] = op_enter_method_m__text;
    ops_rodata[39] = op_enter_method_m__rodata;
    op_names[39] = "op_enter_method_m";
    arg_funcs[39] = op_enter_method_m_set_args_from_code;
    ops_text[40] = op_karg__text;
    ops_rodata[40] = op_karg__rodata;
    op_names[40] = "op_karg";
    arg_funcs[40] = op_karg_set_args_from_code;
    ops_text[41] = op_kdict__text;
    ops_rodata[41] = op_kdict__rodata;
    op_names[41] = "op_kdict";
    arg_funcs[41] = op_kdict_set_args_from_code;
    ops_text[42] = op_return__text;
    ops_rodata[42] = op_return__rodata;
    op_names[42] = "op_return";
    arg_funcs[42] = op_return_set_args_from_code;
    ops_text[43] = op_break__text;
    ops_rodata[43] = op_break__rodata;
    op_names[43] = "op_break";
    arg_funcs[43] = op_break_set_args_from_code;
    ops_text[44] = op_tailcall__text;
    ops_rodata[44] = op_tailcall__rodata;
    op_names[44] = "op_tailcall";
    arg_funcs[44] = op_tailcall_set_args_from_code;
    ops_text[45] = op_blkpush__text;
    ops_rodata[45] = op_blkpush__rodata;
    op_names[45] = "op_blkpush";
    arg_funcs[45] = op_blkpush_set_args_from_code;
    ops_text[46] = op_add__text;
    ops_rodata[46] = op_add__rodata;
    op_names[46] = "op_add";
    arg_funcs[46] = op_add_set_args_from_code;
    ops_text[47] = op_addi__text;
    ops_rodata[47] = op_addi__rodata;
    op_names[47] = "op_addi";
    arg_funcs[47] = op_addi_set_args_from_code;
    ops_text[48] = op_sub__text;
    ops_rodata[48] = op_sub__rodata;
    op_names[48] = "op_sub";
    arg_funcs[48] = op_sub_set_args_from_code;
    ops_text[49] = op_subi__text;
    ops_rodata[49] = op_subi__rodata;
    op_names[49] = "op_subi";
    arg_funcs[49] = op_subi_set_args_from_code;
    ops_text[50] = op_mul__text;
    ops_rodata[50] = op_mul__rodata;
    op_names[50] = "op_mul";
    arg_funcs[50] = op_mul_set_args_from_code;
    ops_text[51] = op_div__text;
    ops_rodata[51] = op_div__rodata;
    op_names[51] = "op_div";
    arg_funcs[51] = op_div_set_args_from_code;
    ops_text[52] = op_eq__text;
    ops_rodata[52] = op_eq__rodata;
    op_names[52] = "op_eq";
    arg_funcs[52] = op_eq_set_args_from_code;
    ops_text[53] = op_lt__text;
    ops_rodata[53] = op_lt__rodata;
    op_names[53] = "op_lt";
    arg_funcs[53] = op_lt_set_args_from_code;
    ops_text[54] = op_le__text;
    ops_rodata[54] = op_le__rodata;
    op_names[54] = "op_le";
    arg_funcs[54] = op_le_set_args_from_code;
    ops_text[55] = op_gt__text;
    ops_rodata[55] = op_gt__rodata;
    op_names[55] = "op_gt";
    arg_funcs[55] = op_gt_set_args_from_code;
    ops_text[56] = op_ge__text;
    ops_rodata[56] = op_ge__rodata;
    op_names[56] = "op_ge";
    arg_funcs[56] = op_ge_set_args_from_code;
    ops_text[57] = op_array__text;
    ops_rodata[57] = op_array__rodata;
    op_names[57] = "op_array";
    arg_funcs[57] = op_array_set_args_from_code;
    ops_text[58] = op_arycat__text;
    ops_rodata[58] = op_arycat__rodata;
    op_names[58] = "op_arycat";
    arg_funcs[58] = op_arycat_set_args_from_code;
    ops_text[59] = op_arypush__text;
    ops_rodata[59] = op_arypush__rodata;
    op_names[59] = "op_arypush";
    arg_funcs[59] = op_arypush_set_args_from_code;
    ops_text[60] = op_aref__text;
    ops_rodata[60] = op_aref__rodata;
    op_names[60] = "op_aref";
    arg_funcs[60] = op_aref_set_args_from_code;
    ops_text[61] = op_aset__text;
    ops_rodata[61] = op_aset__rodata;
    op_names[61] = "op_aset";
    arg_funcs[61] = op_aset_set_args_from_code;
    ops_text[62] = op_apost__text;
    ops_rodata[62] = op_apost__rodata;
    op_names[62] = "op_apost";
    arg_funcs[62] = op_apost_set_args_from_code;
    ops_text[63] = op_string__text;
    ops_rodata[63] = op_string__rodata;
    op_names[63] = "op_string";
    arg_funcs[63] = op_string_set_args_from_code;
    ops_text[64] = op_strcat__text;
    ops_rodata[64] = op_strcat__rodata;
    op_names[64] = "op_strcat";
    arg_funcs[64] = op_strcat_set_args_from_code;
    ops_text[65] = op_hash__text;
    ops_rodata[65] = op_hash__rodata;
    op_names[65] = "op_hash";
    arg_funcs[65] = op_hash_set_args_from_code;
    ops_text[66] = op_lambda__text;
    ops_rodata[66] = op_lambda__rodata;
    op_names[66] = "op_lambda";
    arg_funcs[66] = op_lambda_set_args_from_code;
    ops_text[67] = op_range__text;
    ops_rodata[67] = op_range__rodata;
    op_names[67] = "op_range";
    arg_funcs[67] = op_range_set_args_from_code;
    ops_text[68] = op_oclass__text;
    ops_rodata[68] = op_oclass__rodata;
    op_names[68] = "op_oclass";
    arg_funcs[68] = op_oclass_set_args_from_code;
    ops_text[69] = op_class__text;
    ops_rodata[69] = op_class__rodata;
    op_names[69] = "op_class";
    arg_funcs[69] = op_class_set_args_from_code;
    ops_text[70] = op_module__text;
    ops_rodata[70] = op_module__rodata;
    op_names[70] = "op_module";
    arg_funcs[70] = op_module_set_args_from_code;
    ops_text[71] = op_exec__text;
    ops_rodata[71] = op_exec__rodata;
    op_names[71] = "op_exec";
    arg_funcs[71] = op_exec_set_args_from_code;
    ops_text[72] = op_method__text;
    ops_rodata[72] = op_method__rodata;
    op_names[72] = "op_method";
    arg_funcs[72] = op_method_set_args_from_code;
    ops_text[73] = op_sclass__text;
    ops_rodata[73] = op_sclass__rodata;
    op_names[73] = "op_sclass";
    arg_funcs[73] = op_sclass_set_args_from_code;
    ops_text[74] = op_tclass__text;
    ops_rodata[74] = op_tclass__rodata;
    op_names[74] = "op_tclass";
    arg_funcs[74] = op_tclass_set_args_from_code;
    ops_text[75] = op_debug__text;
    ops_rodata[75] = op_debug__rodata;
    op_names[75] = "op_debug";
    arg_funcs[75] = op_debug_set_args_from_code;
    ops_text[76] = op_stop__text;
    ops_rodata[76] = op_stop__rodata;
    op_names[76] = "op_stop";
    arg_funcs[76] = op_stop_set_args_from_code;
    ops_text[77] = op_err__text;
    ops_rodata[77] = op_err__rodata;
    op_names[77] = "op_err";
    arg_funcs[77] = op_err_set_args_from_code;
  }
}

uint8_t *jit_return(uint8_t *b) {
  *b++ = 0xc3;
  return b;
}
uint8_t *jit_jump(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 235;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *b++ = 233;
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_if(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 116;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31729;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_not(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 117;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31473;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
