
static uint8_t op_nop__text[] = {

};
static uint8_t op_nop__rodata[] = {

};


static uint8_t op_move__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_move+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*15: shl    $0x4,%rdx */
0x48, 0x8b, 0x34, 0x10,                   /*19: mov    (%rax,%rdx,1),%rsi */
0x48, 0x8b, 0x54, 0x10, 0x08,             /*1d: mov    0x8(%rax,%rdx,1),%rdx */
0x48, 0x89, 0x54, 0x08, 0x08,             /*22: mov    %rdx,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x34, 0x08,                   /*27: mov    %rsi,(%rax,%rcx,1) */

};
static uint8_t op_move__rodata[] = {

};


static uint8_t op_loadl__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadl+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rdx        # 17 <op_loadl+0x17> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*1c: shl    $0x4,%rsi */
0x48, 0x8b, 0x3c, 0x32,                   /*20: mov    (%rdx,%rsi,1),%rdi */
0x48, 0x8b, 0x54, 0x32, 0x08,             /*24: mov    0x8(%rdx,%rsi,1),%rdx */
0x48, 0x89, 0x54, 0x08, 0x08,             /*29: mov    %rdx,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x3c, 0x08,                   /*2e: mov    %rdi,(%rax,%rcx,1) */

};
static uint8_t op_loadl__rodata[] = {

};


static uint8_t op_loadi__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadi+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x03, 0x00, 0x00, 0x00,/*10: movl   $0x3,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rax        # 1f <op_loadi+0x1f> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%edx */
0x89, 0x14, 0x08,                         /*24: mov    %edx,(%rax,%rcx,1) */

};
static uint8_t op_loadi__rodata[] = {

};


static uint8_t op_loadsym__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadsym+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x04, 0x00, 0x00, 0x00,/*10: movl   $0x4,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rax        # 1f <op_loadsym+0x1f> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%edx */
0x8b, 0x04, 0x90,                         /*24: mov    (%rax,%rdx,4),%eax */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*27: mov    0x0(%rip),%rdx        # 2e <op_loadsym+0x2e> */
0x89, 0x04, 0x0a,                         /*2e: mov    %eax,(%rdx,%rcx,1) */

};
static uint8_t op_loadsym__rodata[] = {

};


static uint8_t op_loadnil__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadnil+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,/*10: movl   $0x0,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rax        # 1f <op_loadnil+0x1f> */
0xc7, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, /*1f: movl   $0x0,(%rax,%rcx,1) */

};
static uint8_t op_loadnil__rodata[] = {

};


static uint8_t op_loadself__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadself+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0x48, 0x8b, 0x10,                         /*10: mov    (%rax),%rdx */
0x48, 0x8b, 0x70, 0x08,                   /*13: mov    0x8(%rax),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*17: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*1c: mov    %rdx,(%rax,%rcx,1) */

};
static uint8_t op_loadself__rodata[] = {

};


static uint8_t op_loadt__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadt+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x02, 0x00, 0x00, 0x00,/*10: movl   $0x2,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rax        # 1f <op_loadt+0x1f> */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*1f: movl   $0x1,(%rax,%rcx,1) */

};
static uint8_t op_loadt__rodata[] = {

};


static uint8_t op_loadf__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadf+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,/*10: movl   $0x0,0x8(%rax,%rcx,1) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rax        # 1f <op_loadf+0x1f> */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*1f: movl   $0x1,(%rax,%rcx,1) */

};
static uint8_t op_loadf__rodata[] = {

};


static uint8_t op_getglobal__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%r14        # a <op_getglobal+0xa> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*f: shl    $0x4,%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rdi        # 1a <op_getglobal+0x1a> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1a: mov    0x0(%rip),%rax        # 21 <op_getglobal+0x21> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*26: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*29: callq  2e <op_getglobal+0x2e> */
0x49, 0x89, 0x04, 0x1e,                   /*2e: mov    %rax,(%r14,%rbx,1) */
0x41, 0x89, 0x54, 0x1e, 0x08,             /*32: mov    %edx,0x8(%r14,%rbx,1) */
0x5b,                                     /*37: pop    %rbx */
0x41, 0x5e,                               /*38: pop    %r14 */

};
static uint8_t op_getglobal__rodata[] = {

};


static uint8_t op_setglobal__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setglobal+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setglobal+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setglobal+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*22: shl    $0x4,%rcx */
0x48, 0x8b, 0x14, 0x08,                   /*26: mov    (%rax,%rcx,1),%rdx */
0x8b, 0x4c, 0x08, 0x08,                   /*2a: mov    0x8(%rax,%rcx,1),%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_setglobal+0x33> */

};
static uint8_t op_setglobal__rodata[] = {

};


static uint8_t op_getspecial__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%r14        # a <op_getspecial+0xa> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*f: shl    $0x4,%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rdi        # 1a <op_getspecial+0x1a> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1f: callq  24 <op_getspecial+0x24> */
0x49, 0x89, 0x04, 0x1e,                   /*24: mov    %rax,(%r14,%rbx,1) */
0x41, 0x89, 0x54, 0x1e, 0x08,             /*28: mov    %edx,0x8(%r14,%rbx,1) */
0x5b,                                     /*2d: pop    %rbx */
0x41, 0x5e,                               /*2e: pop    %r14 */

};
static uint8_t op_getspecial__rodata[] = {

};


static uint8_t op_setspecial__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setspecial+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setspecial+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*13: shl    $0x4,%rcx */
0x48, 0x8b, 0x14, 0x08,                   /*17: mov    (%rax,%rcx,1),%rdx */
0x8b, 0x4c, 0x08, 0x08,                   /*1b: mov    0x8(%rax,%rcx,1),%ecx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*24: callq  29 <op_setspecial+0x29> */

};
static uint8_t op_setspecial__rodata[] = {

};


static uint8_t op_getiv__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%r14        # a <op_getiv+0xa> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*f: shl    $0x4,%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rdi        # 1a <op_getiv+0x1a> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1a: mov    0x0(%rip),%rax        # 21 <op_getiv+0x21> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*26: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*29: callq  2e <op_getiv+0x2e> */
0x49, 0x89, 0x04, 0x1e,                   /*2e: mov    %rax,(%r14,%rbx,1) */
0x41, 0x89, 0x54, 0x1e, 0x08,             /*32: mov    %edx,0x8(%r14,%rbx,1) */
0x5b,                                     /*37: pop    %rbx */
0x41, 0x5e,                               /*38: pop    %r14 */

};
static uint8_t op_getiv__rodata[] = {

};


static uint8_t op_setiv__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setiv+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setiv+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setiv+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*22: shl    $0x4,%rcx */
0x48, 0x8b, 0x14, 0x08,                   /*26: mov    (%rax,%rcx,1),%rdx */
0x8b, 0x4c, 0x08, 0x08,                   /*2a: mov    0x8(%rax,%rcx,1),%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_setiv+0x33> */

};
static uint8_t op_setiv__rodata[] = {

};


static uint8_t op_getcv__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rax        # a <op_getcv+0xa> */
0x48, 0x8b, 0x40, 0x18,                   /*a: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*e: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*12: movq   $0x0,0x38(%rax) */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*1a: mov    0x0(%rip),%r14        # 21 <op_getcv+0x21> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*26: shl    $0x4,%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*2a: mov    0x0(%rip),%rdi        # 31 <op_getcv+0x31> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*31: mov    0x0(%rip),%rax        # 38 <op_getcv+0x38> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*38: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*3d: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*40: callq  45 <op_getcv+0x45> */
0x49, 0x89, 0x04, 0x1e,                   /*45: mov    %rax,(%r14,%rbx,1) */
0x41, 0x89, 0x54, 0x1e, 0x08,             /*49: mov    %edx,0x8(%r14,%rbx,1) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*4e: mov    0x0(%rip),%rax        # 55 <op_getcv+0x55> */
0x48, 0x8b, 0x40, 0x18,                   /*55: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*59: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*5d: movq   $0x0,0x38(%rax) */
0x5b,                                     /*65: pop    %rbx */
0x41, 0x5e,                               /*66: pop    %r14 */

};
static uint8_t op_getcv__rodata[] = {

};


static uint8_t op_setcv__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setcv+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setcv+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setcv+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*22: shl    $0x4,%rcx */
0x48, 0x8b, 0x14, 0x08,                   /*26: mov    (%rax,%rcx,1),%rdx */
0x8b, 0x4c, 0x08, 0x08,                   /*2a: mov    0x8(%rax,%rcx,1),%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_setcv+0x33> */

};
static uint8_t op_setcv__rodata[] = {

};


static uint8_t op_getconst__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_getconst+0x7> */
0x48, 0x8b, 0x40, 0x18,                   /*7: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*b: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*f: movq   $0x0,0x38(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*17: mov    0x0(%rip),%rdi        # 1e <op_getconst+0x1e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1e: mov    0x0(%rip),%rax        # 25 <op_getconst+0x25> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*25: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*2a: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2d: callq  32 <op_getconst+0x32> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*32: mov    0x0(%rip),%rcx        # 39 <op_getconst+0x39> */
0x48, 0x8b, 0x49, 0x18,                   /*39: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*3d: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*41: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*49: mov    0x0(%rip),%rcx        # 50 <op_getconst+0x50> */
0x48, 0x8b, 0x49, 0x18,                   /*50: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*54: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*58: mov    %rcx,0x0(%rip)        # 5f <op_getconst+0x5f> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5f: mov    $0x0,%esi */
0x48, 0xc1, 0xe6, 0x04,                   /*64: shl    $0x4,%rsi */
0x48, 0x89, 0x04, 0x31,                   /*68: mov    %rax,(%rcx,%rsi,1) */
0x89, 0x54, 0x31, 0x08,                   /*6c: mov    %edx,0x8(%rcx,%rsi,1) */

};
static uint8_t op_getconst__rodata[] = {

};


static uint8_t op_setconst__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setconst+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setconst+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setconst+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*22: shl    $0x4,%rcx */
0x48, 0x8b, 0x14, 0x08,                   /*26: mov    (%rax,%rcx,1),%rdx */
0x8b, 0x4c, 0x08, 0x08,                   /*2a: mov    0x8(%rax,%rcx,1),%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_setconst+0x33> */

};
static uint8_t op_setconst__rodata[] = {

};


static uint8_t op_getmcnst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rax        # 8 <op_getmcnst+0x8> */
0x48, 0x8b, 0x40, 0x18,                   /*8: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*c: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*10: movq   $0x0,0x38(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rdi        # 1f <op_getmcnst+0x1f> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1f: mov    0x0(%rip),%rax        # 26 <op_getmcnst+0x26> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*26: mov    $0x0,%ecx */
0x48, 0x63, 0xd9,                         /*2b: movslq %ecx,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*2e: shl    $0x4,%rbx */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*32: mov    0x0(%rip),%rcx        # 39 <op_getmcnst+0x39> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*39: mov    $0x0,%edx */
0x8b, 0x0c, 0x91,                         /*3e: mov    (%rcx,%rdx,4),%ecx */
0x48, 0x8b, 0x34, 0x18,                   /*41: mov    (%rax,%rbx,1),%rsi */
0x8b, 0x54, 0x18, 0x08,                   /*45: mov    0x8(%rax,%rbx,1),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*49: callq  4e <op_getmcnst+0x4e> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*4e: mov    0x0(%rip),%rcx        # 55 <op_getmcnst+0x55> */
0x48, 0x8b, 0x49, 0x18,                   /*55: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*59: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*5d: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*65: mov    0x0(%rip),%rcx        # 6c <op_getmcnst+0x6c> */
0x48, 0x8b, 0x49, 0x18,                   /*6c: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*70: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*74: mov    %rcx,0x0(%rip)        # 7b <op_getmcnst+0x7b> */
0x48, 0x89, 0x04, 0x19,                   /*7b: mov    %rax,(%rcx,%rbx,1) */
0x89, 0x54, 0x19, 0x08,                   /*7f: mov    %edx,0x8(%rcx,%rbx,1) */
0x5b,                                     /*83: pop    %rbx */

};
static uint8_t op_getmcnst__rodata[] = {

};


static uint8_t op_setmcnst__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setmcnst+0x7> */
0x4c, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%r9        # e <op_setmcnst+0xe> */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*e: mov    $0x0,%r8d */
0x41, 0x8d, 0x48, 0x01,                   /*14: lea    0x1(%r8),%ecx */
0x48, 0x63, 0xd1,                         /*18: movslq %ecx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*1b: shl    $0x4,%rdx */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1f: mov    0x0(%rip),%rcx        # 26 <op_setmcnst+0x26> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*26: mov    $0x0,%esi */
0x8b, 0x0c, 0xb1,                         /*2b: mov    (%rcx,%rsi,4),%ecx */
0x49, 0x63, 0xc0,                         /*2e: movslq %r8d,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*31: shl    $0x4,%rax */
0x49, 0x8b, 0x34, 0x11,                   /*35: mov    (%r9,%rdx,1),%rsi */
0x41, 0x8b, 0x54, 0x11, 0x08,             /*39: mov    0x8(%r9,%rdx,1),%edx */
0x4d, 0x8b, 0x04, 0x01,                   /*3e: mov    (%r9,%rax,1),%r8 */
0x45, 0x8b, 0x4c, 0x01, 0x08,             /*42: mov    0x8(%r9,%rax,1),%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*47: callq  4c <op_setmcnst+0x4c> */

};
static uint8_t op_setmcnst__rodata[] = {

};


static uint8_t op_getupvar__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*5: shl    $0x4,%rax */
0x48, 0x03, 0x05, 0x00, 0x00, 0x00, 0x00, /*9: add    0x0(%rip),%rax        # 10 <op_getupvar+0x10> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rcx        # 17 <op_getupvar+0x17> */
0x48, 0x8b, 0x49, 0x18,                   /*17: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*1b: mov    0x20(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*1f: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*23: mov    0x28(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*27: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*2a: sete   %dl */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2d: mov    $0x0,%esi */
0x85, 0xf6,                               /*32: test   %esi,%esi */
0x74, 0x1d,                               /*34: je     53 <op_getupvar+0x53> */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*36: nopw   %cs:0x0(%rax,%rax,1) */
0xf6, 0xc2, 0x01,                         /*40: test   $0x1,%dl */
0x75, 0x12,                               /*43: jne    57 <op_getupvar+0x57> */
0x48, 0x8b, 0x49, 0x08,                   /*45: mov    0x8(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*49: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*4c: sete   %dl */
0xff, 0xce,                               /*4f: dec    %esi */
0x75, 0xed,                               /*51: jne    40 <op_getupvar+0x40> */
0x84, 0xd2,                               /*53: test   %dl,%dl */
0x74, 0x10,                               /*55: je     67 <op_getupvar+0x67> */
0x48, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, /*57: movq   $0x0,(%rax) */
0xc7, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00, /*5e: movl   $0x0,0x8(%rax) */
0xeb, 0x20,                               /*65: jmp    87 <op_getupvar+0x87> */
0x48, 0x8b, 0x49, 0x18,                   /*67: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6b: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*70: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*73: shl    $0x4,%rdx */
0x48, 0x8b, 0x34, 0x11,                   /*77: mov    (%rcx,%rdx,1),%rsi */
0x48, 0x8b, 0x4c, 0x11, 0x08,             /*7b: mov    0x8(%rcx,%rdx,1),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*80: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x30,                         /*84: mov    %rsi,(%rax) */

};
static uint8_t op_getupvar__rodata[] = {

};


static uint8_t op_setupvar__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_setupvar+0x7> */
0x48, 0x8b, 0x40, 0x18,                   /*7: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*b: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*f: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x70, 0x28,                   /*13: mov    0x28(%rax),%rsi */
0x48, 0x85, 0xf6,                         /*17: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*1a: sete   %al */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x85, 0xc9,                               /*22: test   %ecx,%ecx */
0x74, 0x1c,                               /*24: je     42 <op_setupvar+0x42> */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*26: nopw   %cs:0x0(%rax,%rax,1) */
0xa8, 0x01,                               /*30: test   $0x1,%al */
0x75, 0x50,                               /*32: jne    84 <op_setupvar+0x84> */
0x48, 0x8b, 0x76, 0x08,                   /*34: mov    0x8(%rsi),%rsi */
0x48, 0x85, 0xf6,                         /*38: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*3b: sete   %al */
0xff, 0xc9,                               /*3e: dec    %ecx */
0x75, 0xee,                               /*40: jne    30 <op_setupvar+0x30> */
0x84, 0xc0,                               /*42: test   %al,%al */
0x75, 0x3e,                               /*44: jne    84 <op_setupvar+0x84> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*46: mov    0x0(%rip),%rax        # 4d <op_setupvar+0x4d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4d: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*52: shl    $0x4,%rcx */
0x48, 0x8b, 0x56, 0x18,                   /*56: mov    0x18(%rsi),%rdx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*5a: mov    $0x0,%edi */
0x48, 0x63, 0xff,                         /*5f: movslq %edi,%rdi */
0x48, 0xc1, 0xe7, 0x04,                   /*62: shl    $0x4,%rdi */
0x4c, 0x8b, 0x04, 0x08,                   /*66: mov    (%rax,%rcx,1),%r8 */
0x48, 0x8b, 0x44, 0x08, 0x08,             /*6a: mov    0x8(%rax,%rcx,1),%rax */
0x48, 0x89, 0x44, 0x3a, 0x08,             /*6f: mov    %rax,0x8(%rdx,%rdi,1) */
0x4c, 0x89, 0x04, 0x3a,                   /*74: mov    %r8,(%rdx,%rdi,1) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*78: mov    0x0(%rip),%rdi        # 7f <op_setupvar+0x7f> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7f: callq  84 <op_setupvar+0x84> */

};
static uint8_t op_setupvar__rodata[] = {

};


static uint8_t op_jmp__text[] = {

};
static uint8_t op_jmp__rodata[] = {

};


static uint8_t op_jmpif__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_jmpif+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0x83, 0x7c, 0x08, 0x08, 0x00,             /*10: cmpl   $0x0,0x8(%rax,%rcx,1) */

};
static uint8_t op_jmpif__rodata[] = {

};


static uint8_t op_jmpnot__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_jmpnot+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0x83, 0x7c, 0x08, 0x08, 0x00,             /*10: cmpl   $0x0,0x8(%rax,%rcx,1) */

};
static uint8_t op_jmpnot__rodata[] = {

};


static uint8_t op_onerr__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_onerr+0x7> */
0x48, 0x8b, 0x40, 0x18,                   /*7: mov    0x18(%rax),%rax */
0x8b, 0x70, 0x40,                         /*b: mov    0x40(%rax),%esi */
0x48, 0x8b, 0x48, 0x20,                   /*e: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x1c,                         /*12: mov    0x1c(%rcx),%edx */
0x39, 0xd6,                               /*15: cmp    %edx,%esi */
0x7f, 0x4d,                               /*17: jg     66 <op_onerr+0x66> */
0x8d, 0x0c, 0x36,                         /*19: lea    (%rsi,%rsi,1),%ecx */
0x85, 0xf6,                               /*1c: test   %esi,%esi */
0xba, 0x10, 0x00, 0x00, 0x00,             /*1e: mov    $0x10,%edx */
0x0f, 0x45, 0xd1,                         /*23: cmovne %ecx,%edx */
0x89, 0x50, 0x40,                         /*26: mov    %edx,0x40(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*29: mov    0x0(%rip),%rdi        # 30 <op_onerr+0x30> */
0x48, 0x8b, 0x47, 0x18,                   /*30: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x38,                   /*34: mov    0x38(%rax),%rsi */
0x48, 0x63, 0x50, 0x40,                   /*38: movslq 0x40(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*3c: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*40: callq  45 <op_onerr+0x45> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*45: mov    0x0(%rip),%rcx        # 4c <op_onerr+0x4c> */
0x48, 0x8b, 0x49, 0x18,                   /*4c: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*50: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*54: mov    0x0(%rip),%rax        # 5b <op_onerr+0x5b> */
0x48, 0x8b, 0x40, 0x18,                   /*5b: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*5f: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x1c,                         /*63: mov    0x1c(%rcx),%edx */
0x8d, 0x42, 0x01,                         /*66: lea    0x1(%rdx),%eax */
0x89, 0x41, 0x1c,                         /*69: mov    %eax,0x1c(%rcx) */
0x48, 0x63, 0xc2,                         /*6c: movslq %edx,%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*6f: mov    0x0(%rip),%rcx        # 76 <op_onerr+0x76> */
0x48, 0x8b, 0x49, 0x18,                   /*76: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x38,                   /*7a: mov    0x38(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7e: mov    $0x0,%edx */
0x48, 0x8d, 0x14, 0x95, 0x00, 0x00, 0x00, 0x00,/*83: lea    0x0(,%rdx,4),%rdx */
0x48, 0x89, 0x14, 0xc1,                   /*8b: mov    %rdx,(%rcx,%rax,8) */

};
static uint8_t op_onerr__rodata[] = {

};


static uint8_t op_rescue__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_rescue+0x7> */
0x48, 0x8b, 0x40, 0x28,                   /*7: mov    0x28(%rax),%rax */
0x0f, 0xb6, 0x00,                         /*b: movzbl (%rax),%eax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rcx        # 15 <op_rescue+0x15> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*1a: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*1d: shl    $0x4,%rdx */
0x89, 0x44, 0x11, 0x08,                   /*21: mov    %eax,0x8(%rcx,%rdx,1) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*25: mov    0x0(%rip),%rax        # 2c <op_rescue+0x2c> */
0x48, 0x8b, 0x40, 0x28,                   /*2c: mov    0x28(%rax),%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*30: mov    0x0(%rip),%rcx        # 37 <op_rescue+0x37> */
0x48, 0x89, 0x04, 0x11,                   /*37: mov    %rax,(%rcx,%rdx,1) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*3b: mov    0x0(%rip),%rax        # 42 <op_rescue+0x42> */
0x48, 0xc7, 0x40, 0x28, 0x00, 0x00, 0x00, 0x00,/*42: movq   $0x0,0x28(%rax) */

};
static uint8_t op_rescue__rodata[] = {

};


static uint8_t op_poperr__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x85, 0xc0,                               /*5: test   %eax,%eax */
0x74, 0x1d,                               /*7: je     26 <op_poperr+0x26> */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*9: nopl   0x0(%rax) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rcx        # 17 <op_poperr+0x17> */
0x48, 0x8b, 0x49, 0x18,                   /*17: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*1b: mov    0x20(%rcx),%rcx */
0xff, 0x49, 0x1c,                         /*1f: decl   0x1c(%rcx) */
0xff, 0xc8,                               /*22: dec    %eax */
0x75, 0xea,                               /*24: jne    10 <op_poperr+0x10> */

};
static uint8_t op_poperr__rodata[] = {

};


static uint8_t op_raise__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_raise+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*1a: shl    $0x4,%rcx */
0x48, 0x8b, 0x04, 0x08,                   /*1e: mov    (%rax,%rcx,1),%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*22: mov    0x0(%rip),%rcx        # 29 <op_raise+0x29> */
0x48, 0x89, 0x41, 0x28,                   /*29: mov    %rax,0x28(%rcx) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*2d: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*32: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*37: callq  3c <op_raise+0x3c> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*3c: mov    0x0(%rip),%rdi        # 43 <op_raise+0x43> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*43: mov    0x0(%rip),%rsi        # 4a <op_raise+0x4a> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*4a: mov    0x0(%rip),%rcx        # 51 <op_raise+0x51> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*56: jmpq   5b <op_raise+0x5b> */

};
static uint8_t op_raise__rodata[] = {

};


static uint8_t op_epush__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rdi        # 8 <op_epush+0x8> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*8: mov    0x0(%rip),%rax        # f <op_epush+0xf> */
0x48, 0x8b, 0x40, 0x20,                   /*f: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*18: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_epush+0x21> */
0x48, 0x89, 0xc3,                         /*21: mov    %rax,%rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*24: mov    0x0(%rip),%rax        # 2b <op_epush+0x2b> */
0x48, 0x8b, 0x40, 0x18,                   /*2b: mov    0x18(%rax),%rax */
0x8b, 0x70, 0x50,                         /*2f: mov    0x50(%rax),%esi */
0x48, 0x8b, 0x48, 0x20,                   /*32: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*36: mov    0x20(%rcx),%edx */
0x39, 0xd6,                               /*39: cmp    %edx,%esi */
0x7f, 0x4d,                               /*3b: jg     8a <op_epush+0x8a> */
0x8d, 0x0c, 0x36,                         /*3d: lea    (%rsi,%rsi,1),%ecx */
0x85, 0xf6,                               /*40: test   %esi,%esi */
0xba, 0x10, 0x00, 0x00, 0x00,             /*42: mov    $0x10,%edx */
0x0f, 0x45, 0xd1,                         /*47: cmovne %ecx,%edx */
0x89, 0x50, 0x50,                         /*4a: mov    %edx,0x50(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*4d: mov    0x0(%rip),%rdi        # 54 <op_epush+0x54> */
0x48, 0x8b, 0x47, 0x18,                   /*54: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*58: mov    0x48(%rax),%rsi */
0x48, 0x63, 0x50, 0x50,                   /*5c: movslq 0x50(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*60: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*64: callq  69 <op_epush+0x69> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*69: mov    0x0(%rip),%rcx        # 70 <op_epush+0x70> */
0x48, 0x8b, 0x49, 0x18,                   /*70: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x48,                   /*74: mov    %rax,0x48(%rcx) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*78: mov    0x0(%rip),%rax        # 7f <op_epush+0x7f> */
0x48, 0x8b, 0x40, 0x18,                   /*7f: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*83: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*87: mov    0x20(%rcx),%edx */
0x8d, 0x42, 0x01,                         /*8a: lea    0x1(%rdx),%eax */
0x89, 0x41, 0x20,                         /*8d: mov    %eax,0x20(%rcx) */
0x48, 0x63, 0xc2,                         /*90: movslq %edx,%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*93: mov    0x0(%rip),%rcx        # 9a <op_epush+0x9a> */
0x48, 0x8b, 0x49, 0x18,                   /*9a: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x48,                   /*9e: mov    0x48(%rcx),%rcx */
0x48, 0x89, 0x1c, 0xc1,                   /*a2: mov    %rbx,(%rcx,%rax,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*a6: mov    0x0(%rip),%eax        # ac <op_epush+0xac> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*ac: mov    0x0(%rip),%rcx        # b3 <op_epush+0xb3> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*b3: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*b9: pop    %rbx */

};
static uint8_t op_epush__rodata[] = {

};


static uint8_t op_epop__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x53,                                     /*5: push   %rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*6: mov    $0x0,%eax */
0x85, 0xc0,                               /*b: test   %eax,%eax */
0x7e, 0x51,                               /*d: jle    60 <op_epop+0x60> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rax        # 16 <op_epop+0x16> */
0x48, 0x8b, 0x40, 0x18,                   /*16: mov    0x18(%rax),%rax */
0x4c, 0x8b, 0x70, 0x20,                   /*1a: mov    0x20(%rax),%r14 */
0x41, 0x8b, 0x5e, 0x20,                   /*1e: mov    0x20(%r14),%ebx */
0x31, 0xed,                               /*22: xor    %ebp,%ebp */
0x41, 0xbf, 0x00, 0x00, 0x00, 0x00,       /*24: mov    $0x0,%r15d */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*2a: nopw   0x0(%rax,%rax,1) */
0x41, 0x3b, 0x5e, 0xd0,                   /*30: cmp    -0x30(%r14),%ebx */
0x7e, 0x2a,                               /*34: jle    60 <op_epop+0x60> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*36: mov    0x0(%rip),%rdi        # 3d <op_epop+0x3d> */
0xff, 0xcb,                               /*3d: dec    %ebx */
0x89, 0xde,                               /*3f: mov    %ebx,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*41: callq  46 <op_epop+0x46> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*46: mov    0x0(%rip),%eax        # 4c <op_epop+0x4c> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*4c: mov    0x0(%rip),%rcx        # 53 <op_epop+0x53> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*53: mov    %eax,0xdc(%rcx) */
0xff, 0xc5,                               /*59: inc    %ebp */
0x44, 0x39, 0xfd,                         /*5b: cmp    %r15d,%ebp */
0x7c, 0xd0,                               /*5e: jl     30 <op_epop+0x30> */
0x5b,                                     /*60: pop    %rbx */
0x41, 0x5e,                               /*61: pop    %r14 */
0x41, 0x5f,                               /*63: pop    %r15 */
0x5d,                                     /*65: pop    %rbp */

};
static uint8_t op_epop__rodata[] = {

};


static uint8_t op_send__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*13: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*22: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*28: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_send+0x33> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*33: mov    0x0(%rip),%rdi        # 3a <op_send+0x3a> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3a: mov    0x0(%rip),%rsi        # 41 <op_send+0x41> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*41: mov    0x0(%rip),%rcx        # 48 <op_send+0x48> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*48: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*4d: jmpq   52 <op_send+0x52> */

};
static uint8_t op_send__rodata[] = {

};


static uint8_t op_sendb__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%edi */
0xbe, 0x21, 0x00, 0x00, 0x00,             /*13: mov    $0x21,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*22: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*28: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_sendb+0x33> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*33: mov    0x0(%rip),%rdi        # 3a <op_sendb+0x3a> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3a: mov    0x0(%rip),%rsi        # 41 <op_sendb+0x41> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*41: mov    0x0(%rip),%rcx        # 48 <op_sendb+0x48> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*48: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*4d: jmpq   52 <op_sendb+0x52> */

};
static uint8_t op_sendb__rodata[] = {

};


static uint8_t op_fsend__text[] = {

};
static uint8_t op_fsend__rodata[] = {

};


static uint8_t op_call__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x53,                                     /*f: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rax        # 17 <op_call+0x17> */
0x48, 0x8b, 0x40, 0x18,                   /*17: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*1b: mov    0x8(%rax),%rcx */
0x48, 0x8b, 0x40, 0x20,                   /*1f: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x19,                         /*23: mov    (%rcx),%rbx */
0x8b, 0x51, 0x08,                         /*26: mov    0x8(%rcx),%edx */
0x48, 0x8b, 0x4b, 0x20,                   /*29: mov    0x20(%rbx),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*2d: mov    %rcx,0x48(%rax) */
0x48, 0x89, 0x58, 0x08,                   /*31: mov    %rbx,0x8(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*35: mov    0x28(%rbx),%rcx */
0x48, 0x85, 0xc9,                         /*39: test   %rcx,%rcx */
0x74, 0x27,                               /*3c: je     65 <op_call+0x65> */
0x8b, 0x71, 0x20,                         /*3e: mov    0x20(%rcx),%esi */
0x85, 0xf6,                               /*41: test   %esi,%esi */
0x74, 0x06,                               /*43: je     4b <op_call+0x4b> */
0x89, 0x30,                               /*45: mov    %esi,(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*47: mov    0x28(%rbx),%rcx */
0x48, 0x83, 0x79, 0x18, 0x00,             /*4b: cmpq   $0x0,0x18(%rcx) */
0x75, 0x13,                               /*50: jne    65 <op_call+0x65> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*52: mov    0x0(%rip),%rsi        # 59 <op_call+0x59> */
0x48, 0x8b, 0x76, 0x18,                   /*59: mov    0x18(%rsi),%rsi */
0x48, 0x8b, 0x76, 0x08,                   /*5d: mov    0x8(%rsi),%rsi */
0x48, 0x89, 0x71, 0x18,                   /*61: mov    %rsi,0x18(%rcx) */
0xf6, 0x43, 0x02, 0x04,                   /*65: testb  $0x4,0x2(%rbx) */
0x75, 0x53,                               /*69: jne    be <op_call+0xbe> */
0x48, 0x89, 0x1d, 0x00, 0x00, 0x00, 0x00, /*6b: mov    %rbx,0x0(%rip)        # 72 <op_call+0x72> */
0x48, 0x8b, 0x4b, 0x18,                   /*72: mov    0x18(%rbx),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*76: mov    %rcx,0x0(%rip)        # 7d <op_call+0x7d> */
0x48, 0x85, 0xc9,                         /*7d: test   %rcx,%rcx */
0x0f, 0x85, 0xe5, 0x00, 0x00, 0x00,       /*80: jne    16b <op_call+0x16b> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*86: mov    0x0(%rip),%rax        # 8d <op_call+0x8d> */
0x48, 0x8b, 0x40, 0x18,                   /*8d: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*91: mov    0x8(%rax),%rax */
0x48, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, /*95: movq   $0x0,(%rax) */
0xc7, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00, /*9c: movl   $0x0,0x8(%rax) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*a3: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*a8: mov    $0x0,%esi */
0x31, 0xd2,                               /*ad: xor    %edx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*af: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b4: callq  b9 <op_call+0xb9> */
0xe9, 0x6b, 0x01, 0x00, 0x00,             /*b9: jmpq   229 <op_call+0x229> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*be: mov    0x0(%rip),%rdi        # c5 <op_call+0xc5> */
0x48, 0x89, 0xde,                         /*c5: mov    %rbx,%rsi */
0xff, 0x53, 0x18,                         /*c8: callq  *0x18(%rbx) */
0x48, 0x89, 0xc3,                         /*cb: mov    %rax,%rbx */
0x89, 0xd5,                               /*ce: mov    %edx,%ebp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*d0: mov    0x0(%rip),%rdi        # d7 <op_call+0xd7> */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*d7: mov    0x0(%rip),%esi        # dd <op_call+0xdd> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*dd: callq  e2 <op_call+0xe2> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e2: mov    0x0(%rip),%rax        # e9 <op_call+0xe9> */
0x48, 0x83, 0x78, 0x28, 0x00,             /*e9: cmpq   $0x0,0x28(%rax) */
0x0f, 0x85, 0xbf, 0x00, 0x00, 0x00,       /*ee: jne    1b3 <op_call+0x1b3> */
0x48, 0x8b, 0x40, 0x18,                   /*f4: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*f8: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x51, 0x10,                   /*fc: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x50, 0x08,                   /*100: mov    %rdx,0x8(%rax) */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*104: mov    %rdx,0x0(%rip)        # 10b <op_call+0x10b> */
0x48, 0x63, 0x41, 0x44,                   /*10b: movslq 0x44(%rcx),%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*10f: shl    $0x4,%rax */
0x48, 0x89, 0x1c, 0x02,                   /*113: mov    %rbx,(%rdx,%rax,1) */
0x89, 0x6c, 0x02, 0x08,                   /*117: mov    %ebp,0x8(%rdx,%rax,1) */
0x48, 0x8b, 0x41, 0x30,                   /*11b: mov    0x30(%rcx),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*11f: mov    %rax,0x0(%rip)        # 126 <op_call+0x126> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*126: mov    0x0(%rip),%rdi        # 12d <op_call+0x12d> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*12d: callq  132 <op_call+0x132> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*132: mov    0x0(%rip),%rax        # 139 <op_call+0x139> */
0x48, 0x8b, 0x40, 0x18,                   /*139: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*13d: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*141: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*145: mov    0x18(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*149: mov    %rax,0x0(%rip)        # 150 <op_call+0x150> */
0x48, 0x8b, 0x48, 0x10,                   /*150: mov    0x10(%rax),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*154: mov    %rcx,0x0(%rip)        # 15b <op_call+0x15b> */
0x48, 0x8b, 0x40, 0x18,                   /*15b: mov    0x18(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*15f: mov    %rax,0x0(%rip)        # 166 <op_call+0x166> */
0xe9, 0xbe, 0x00, 0x00, 0x00,             /*166: jmpq   229 <op_call+0x229> */
0x48, 0x8b, 0x51, 0x10,                   /*16b: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*16f: mov    %rdx,0x0(%rip)        # 176 <op_call+0x176> */
0x48, 0x8b, 0x51, 0x18,                   /*176: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*17a: mov    %rdx,0x0(%rip)        # 181 <op_call+0x181> */
0x0f, 0xb7, 0x49, 0x02,                   /*181: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*185: mov    %ecx,0x18(%rax) */
0x8b, 0x50, 0x40,                         /*188: mov    0x40(%rax),%edx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*18b: mov    0x0(%rip),%rdi        # 192 <op_call+0x192> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*192: mov    0x0(%rip),%rax        # 199 <op_call+0x199> */
0x0f, 0xb7, 0x70, 0x02,                   /*199: movzwl 0x2(%rax),%esi */
0x85, 0xd2,                               /*19d: test   %edx,%edx */
0x79, 0x42,                               /*19f: jns    1e3 <op_call+0x1e3> */
0x83, 0xfe, 0x03,                         /*1a1: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*1a4: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*1a9: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*1ac: mov    $0x3,%edx */
0xeb, 0x33,                               /*1b1: jmp    1e6 <op_call+0x1e6> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*1b3: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1b8: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1bd: callq  1c2 <op_call+0x1c2> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1c2: mov    0x0(%rip),%rdi        # 1c9 <op_call+0x1c9> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*1c9: mov    0x0(%rip),%rsi        # 1d0 <op_call+0x1d0> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1d0: mov    0x0(%rip),%rcx        # 1d7 <op_call+0x1d7> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1d7: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*1dc: jmpq   1e1 <op_call+0x1e1> */
0xeb, 0x46,                               /*1e1: jmp    229 <op_call+0x229> */
0x83, 0xc2, 0x02,                         /*1e3: add    $0x2,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e6: callq  1eb <op_call+0x1eb> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1eb: mov    0x0(%rip),%rax        # 1f2 <op_call+0x1f2> */
0x48, 0x8b, 0x40, 0x18,                   /*1f2: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*1f6: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*1fa: mov    %rax,0x0(%rip)        # 201 <op_call+0x201> */
0x48, 0x8b, 0x4b, 0x28,                   /*201: mov    0x28(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*205: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x11,                         /*209: mov    (%rcx),%rdx */
0x48, 0x8b, 0x49, 0x08,                   /*20c: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*210: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x10,                         /*214: mov    %rdx,(%rax) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*217: mov    0x0(%rip),%rax        # 21e <op_call+0x21e> */
0x48, 0x8b, 0x40, 0x08,                   /*21e: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*222: mov    %rax,0x0(%rip)        # 229 <op_call+0x229> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*229: mov    0x0(%rip),%rdi        # 230 <op_call+0x230> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*230: mov    0x0(%rip),%rsi        # 237 <op_call+0x237> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*237: mov    0x0(%rip),%rcx        # 23e <op_call+0x23e> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*23e: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*243: jmpq   248 <op_call+0x248> */

};
static uint8_t op_call__rodata[] = {

};


static uint8_t op_super__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x55,                               /*13: push   %r13 */
0x41, 0x54,                               /*15: push   %r12 */
0x53,                                     /*17: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*18: sub    $0x18,%rsp */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1c: mov    0x0(%rip),%rbx        # 23 <op_super+0x23> */
0x48, 0x8b, 0x43, 0x18,                   /*23: mov    0x18(%rbx),%rax */
0x4c, 0x8b, 0x68, 0x20,                   /*27: mov    0x20(%rax),%r13 */
0x41, 0x8b, 0x6d, 0x00,                   /*2b: mov    0x0(%r13),%ebp */
0x85, 0xed,                               /*2f: test   %ebp,%ebp */
0x0f, 0x84, 0xbf, 0x00, 0x00, 0x00,       /*31: je     f6 <op_super+0xf6> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*37: mov    0x0(%rip),%rax        # 3e <op_super+0x3e> */
0x48, 0x8b, 0x08,                         /*3e: mov    (%rax),%rcx */
0x48, 0x89, 0x4c, 0x24, 0x08,             /*41: mov    %rcx,0x8(%rsp) */
0x4c, 0x8b, 0x60, 0x08,                   /*46: mov    0x8(%rax),%r12 */
0x4c, 0x89, 0x24, 0x24,                   /*4a: mov    %r12,(%rsp) */
0x49, 0xc1, 0xec, 0x20,                   /*4e: shr    $0x20,%r12 */
0x49, 0x8b, 0x45, 0x48,                   /*52: mov    0x48(%r13),%rax */
0x48, 0x8b, 0x70, 0x28,                   /*56: mov    0x28(%rax),%rsi */
0x48, 0x89, 0x74, 0x24, 0x10,             /*5a: mov    %rsi,0x10(%rsp) */
0x48, 0x8d, 0x54, 0x24, 0x10,             /*5f: lea    0x10(%rsp),%rdx */
0x48, 0x89, 0xdf,                         /*64: mov    %rbx,%rdi */
0x89, 0xe9,                               /*67: mov    %ebp,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*69: callq  6e <op_super+0x6e> */
0x49, 0x89, 0xc7,                         /*6e: mov    %rax,%r15 */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*71: mov    $0x0,%r14d */
0x4d, 0x85, 0xff,                         /*77: test   %r15,%r15 */
0x0f, 0x85, 0xbc, 0x01, 0x00, 0x00,       /*7a: jne    23c <op_super+0x23c> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*80: mov    0x0(%rip),%rdi        # 87 <op_super+0x87> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*87: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*8c: mov    $0xe,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*91: callq  96 <op_super+0x96> */
0x89, 0xc5,                               /*96: mov    %eax,%ebp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*98: mov    0x0(%rip),%rdi        # 9f <op_super+0x9f> */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*9f: lea    0x10(%rsp),%rsi */
0x89, 0xea,                               /*a4: mov    %ebp,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a6: callq  ab <op_super+0xab> */
0x49, 0x89, 0xc7,                         /*ab: mov    %rax,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ae: mov    $0x0,%eax */
0x83, 0xf8, 0x7f,                         /*b3: cmp    $0x7f,%eax */
0x75, 0x7d,                               /*b6: jne    135 <op_super+0x135> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*b8: mov    0x0(%rip),%rdi        # bf <op_super+0xbf> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*bf: mov    0x0(%rip),%rax        # c6 <op_super+0xc6> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c6: mov    $0x0,%ecx */
0xff, 0xc1,                               /*cb: inc    %ecx */
0x48, 0x63, 0xd1,                         /*cd: movslq %ecx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*d0: shl    $0x4,%rdx */
0x41, 0x8b, 0x4d, 0x00,                   /*d4: mov    0x0(%r13),%ecx */
0x48, 0x8b, 0x34, 0x10,                   /*d8: mov    (%rax,%rdx,1),%rsi */
0x8b, 0x54, 0x10, 0x08,                   /*dc: mov    0x8(%rax,%rdx,1),%edx */
0x41, 0xb8, 0x04, 0x00, 0x00, 0x00,       /*e0: mov    $0x4,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e6: callq  eb <op_super+0xeb> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*eb: mov    $0x0,%r14d */
0xe9, 0x46, 0x01, 0x00, 0x00,             /*f1: jmpq   23c <op_super+0x23c> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*f6: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*fb: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*fe: callq  103 <op_super+0x103> */
0x48, 0x89, 0xc5,                         /*103: mov    %rax,%rbp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*106: mov    0x0(%rip),%rdi        # 10d <op_super+0x10d> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*10d: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*112: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*117: callq  11c <op_super+0x11c> */
0x89, 0xd1,                               /*11c: mov    %edx,%ecx */
0x48, 0x89, 0xdf,                         /*11e: mov    %rbx,%rdi */
0x48, 0x89, 0xee,                         /*121: mov    %rbp,%rsi */
0x48, 0x89, 0xc2,                         /*124: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*127: callq  12c <op_super+0x12c> */
0x48, 0x89, 0x43, 0x28,                   /*12c: mov    %rax,0x28(%rbx) */
0xe9, 0xed, 0x01, 0x00, 0x00,             /*130: jmpq   322 <op_super+0x322> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*135: mov    0x0(%rip),%rax        # 13c <op_super+0x13c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*141: movslq %ecx,%rcx */
0x48, 0x8d, 0x51, 0x01,                   /*144: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*148: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*14c: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*14f: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*152: mov    $0x0,%edi */
0xff, 0xc7,                               /*157: inc    %edi */
0x48, 0x63, 0xff,                         /*159: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*15c: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*161: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*164: setge  %cl */
0x08, 0xd1,                               /*167: or     %dl,%cl */
0x74, 0x4f,                               /*169: je     1ba <op_super+0x1ba> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16b: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*170: cmp    $0xffffffff,%ecx */
0x0f, 0x84, 0x8f, 0x00, 0x00, 0x00,       /*173: je     208 <op_super+0x208> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*179: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*17e: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*181: shl    $0x4,%rcx */
0x48, 0x8d, 0x44, 0x01, 0x20,             /*185: lea    0x20(%rcx,%rax,1),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18a: mov    $0x0,%ecx */
0xff, 0xc1,                               /*18f: inc    %ecx */
0x48, 0x63, 0xc9,                         /*191: movslq %ecx,%rcx */
0x48, 0xf7, 0xd9,                         /*194: neg    %rcx */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*197: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x50, 0xf0,                   /*1a0: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*1a4: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*1a8: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*1ac: mov    %rdx,(%rax) */
0x48, 0x83, 0xc0, 0x10,                   /*1af: add    $0x10,%rax */
0x48, 0xff, 0xc1,                         /*1b3: inc    %rcx */
0x75, 0xe8,                               /*1b6: jne    1a0 <op_super+0x1a0> */
0xeb, 0x4e,                               /*1b8: jmp    208 <op_super+0x208> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1ba: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*1bf: cmp    $0xffffffff,%ecx */
0x74, 0x44,                               /*1c2: je     208 <op_super+0x208> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1c4: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*1c9: movslq %ecx,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1cc: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1d1: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1d3: movslq %ecx,%rcx */
0x48, 0x01, 0xca,                         /*1d6: add    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*1d9: shl    $0x4,%rdx */
0x48, 0x8d, 0x44, 0x02, 0x10,             /*1dd: lea    0x10(%rdx,%rax,1),%rax */
0x48, 0xf7, 0xd9,                         /*1e2: neg    %rcx */
0x90,                                     /*1e5: nop */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1e6: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x50, 0xf0,                   /*1f0: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*1f4: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*1f8: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*1fc: mov    %rdx,(%rax) */
0x48, 0x8d, 0x40, 0xf0,                   /*1ff: lea    -0x10(%rax),%rax */
0x48, 0xff, 0xc1,                         /*203: inc    %rcx */
0x75, 0xe8,                               /*206: jne    1f0 <op_super+0x1f0> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*208: mov    0x0(%rip),%rax        # 20f <op_super+0x20f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*20f: mov    $0x0,%ecx */
0xff, 0xc1,                               /*214: inc    %ecx */
0x48, 0x63, 0xc9,                         /*216: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*219: shl    $0x4,%rcx */
0xc7, 0x44, 0x08, 0x08, 0x04, 0x00, 0x00, 0x00,/*21d: movl   $0x4,0x8(%rax,%rcx,1) */
0x41, 0x8b, 0x45, 0x00,                   /*225: mov    0x0(%r13),%eax */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*229: mov    0x0(%rip),%rdx        # 230 <op_super+0x230> */
0x89, 0x04, 0x0a,                         /*230: mov    %eax,(%rdx,%rcx,1) */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*233: mov    $0x0,%r14d */
0x41, 0xff, 0xc6,                         /*239: inc    %r14d */
0x48, 0x8b, 0x5c, 0x24, 0x08,             /*23c: mov    0x8(%rsp),%rbx */
0x4c, 0x8b, 0x2c, 0x24,                   /*241: mov    (%rsp),%r13 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*245: mov    0x0(%rip),%rdi        # 24c <op_super+0x24c> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*24c: callq  251 <op_super+0x251> */
0x89, 0x28,                               /*251: mov    %ebp,(%rax) */
0x4c, 0x89, 0x78, 0x08,                   /*253: mov    %r15,0x8(%rax) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*257: mov    0x0(%rip),%rcx        # 25e <op_super+0x25e> */
0x48, 0x8b, 0x49, 0x18,                   /*25e: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*262: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x48, 0x10,                   /*266: mov    %rcx,0x10(%rax) */
0x41, 0x83, 0xfe, 0x7f,                   /*26a: cmp    $0x7f,%r14d */
0xb9, 0xff, 0xff, 0xff, 0xff,             /*26e: mov    $0xffffffff,%ecx */
0x41, 0x0f, 0x45, 0xce,                   /*273: cmovne %r14d,%ecx */
0x89, 0x48, 0x40,                         /*277: mov    %ecx,0x40(%rax) */
0x48, 0x8b, 0x4c, 0x24, 0x10,             /*27a: mov    0x10(%rsp),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*27f: mov    %rcx,0x48(%rax) */
0x48, 0xc7, 0x40, 0x30, 0x00, 0x00, 0x00, 0x00,/*283: movq   $0x0,0x30(%rax) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*28b: mov    0x0(%rip),%rcx        # 292 <op_super+0x292> */
0x48, 0x8b, 0x49, 0x18,                   /*292: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*296: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*29b: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*29e: shl    $0x4,%rdx */
0x48, 0x01, 0x51, 0x08,                   /*2a2: add    %rdx,0x8(%rcx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*2a6: mov    0x0(%rip),%rcx        # 2ad <op_super+0x2ad> */
0x48, 0x8b, 0x49, 0x18,                   /*2ad: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*2b1: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x19,                         /*2b5: mov    %rbx,(%rcx) */
0x44, 0x89, 0x69, 0x08,                   /*2b8: mov    %r13d,0x8(%rcx) */
0x44, 0x89, 0x61, 0x0c,                   /*2bc: mov    %r12d,0xc(%rcx) */
0x41, 0xf6, 0x47, 0x02, 0x04,             /*2c0: testb  $0x4,0x2(%r15) */
0x0f, 0x84, 0x80, 0x00, 0x00, 0x00,       /*2c5: je     34b <op_super+0x34b> */
0x41, 0x8d, 0x4e, 0x02,                   /*2cb: lea    0x2(%r14),%ecx */
0x41, 0x83, 0xfe, 0x7f,                   /*2cf: cmp    $0x7f,%r14d */
0xba, 0x03, 0x00, 0x00, 0x00,             /*2d3: mov    $0x3,%edx */
0x0f, 0x45, 0xd1,                         /*2d8: cmovne %ecx,%edx */
0x89, 0x50, 0x18,                         /*2db: mov    %edx,0x18(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*2de: mov    0x0(%rip),%rdi        # 2e5 <op_super+0x2e5> */
0x48, 0x8b, 0x47, 0x18,                   /*2e5: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x68, 0x08,                   /*2e9: mov    0x8(%rax),%rbp */
0x48, 0x89, 0xde,                         /*2ed: mov    %rbx,%rsi */
0x44, 0x89, 0xea,                         /*2f0: mov    %r13d,%edx */
0x41, 0xff, 0x57, 0x18,                   /*2f3: callq  *0x18(%r15) */
0x48, 0x89, 0x45, 0x00,                   /*2f7: mov    %rax,0x0(%rbp) */
0x89, 0x55, 0x08,                         /*2fb: mov    %edx,0x8(%rbp) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*2fe: mov    0x0(%rip),%rdi        # 305 <op_super+0x305> */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*305: mov    0x0(%rip),%esi        # 30b <op_super+0x30b> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*30b: callq  310 <op_super+0x310> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*310: mov    0x0(%rip),%rax        # 317 <op_super+0x317> */
0x48, 0x83, 0x78, 0x28, 0x00,             /*317: cmpq   $0x0,0x28(%rax) */
0x0f, 0x84, 0x87, 0x00, 0x00, 0x00,       /*31c: je     3a9 <op_super+0x3a9> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*322: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*327: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*32c: callq  331 <op_super+0x331> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*331: mov    0x0(%rip),%rdi        # 338 <op_super+0x338> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*338: mov    0x0(%rip),%rsi        # 33f <op_super+0x33f> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*33f: mov    0x0(%rip),%rcx        # 346 <op_super+0x346> */
0xe9, 0xba, 0x00, 0x00, 0x00,             /*346: jmpq   405 <op_super+0x405> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*34b: mov    $0x0,%ecx */
0x89, 0x48, 0x44,                         /*350: mov    %ecx,0x44(%rax) */
0x4c, 0x89, 0x78, 0x08,                   /*353: mov    %r15,0x8(%rax) */
0x49, 0x8b, 0x4f, 0x18,                   /*357: mov    0x18(%r15),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*35b: mov    %rcx,0x0(%rip)        # 362 <op_super+0x362> */
0x48, 0x8b, 0x51, 0x10,                   /*362: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*366: mov    %rdx,0x0(%rip)        # 36d <op_super+0x36d> */
0x48, 0x8b, 0x51, 0x18,                   /*36d: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*371: mov    %rdx,0x0(%rip)        # 378 <op_super+0x378> */
0x0f, 0xb7, 0x49, 0x02,                   /*378: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*37c: mov    %ecx,0x18(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*37f: mov    0x0(%rip),%rdi        # 386 <op_super+0x386> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*386: mov    0x0(%rip),%rcx        # 38d <op_super+0x38d> */
0x0f, 0xb7, 0x71, 0x02,                   /*38d: movzwl 0x2(%rcx),%esi */
0x41, 0x83, 0xfe, 0x7f,                   /*391: cmp    $0x7f,%r14d */
0x75, 0x37,                               /*395: jne    3ce <op_super+0x3ce> */
0x83, 0xfe, 0x03,                         /*397: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*39a: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*39f: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*3a2: mov    $0x3,%edx */
0xeb, 0x2b,                               /*3a7: jmp    3d4 <op_super+0x3d4> */
0x48, 0x8b, 0x40, 0x18,                   /*3a9: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*3ad: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*3b1: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*3b5: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*3b9: mov    %rcx,0x0(%rip)        # 3c0 <op_super+0x3c0> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*3c0: mov    0x0(%rip),%rdi        # 3c7 <op_super+0x3c7> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3c7: callq  3cc <op_super+0x3cc> */
0xeb, 0x41,                               /*3cc: jmp    40f <op_super+0x40f> */
0x8b, 0x50, 0x40,                         /*3ce: mov    0x40(%rax),%edx */
0x83, 0xc2, 0x02,                         /*3d1: add    $0x2,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3d4: callq  3d9 <op_super+0x3d9> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*3d9: mov    0x0(%rip),%rdi        # 3e0 <op_super+0x3e0> */
0x48, 0x8b, 0x47, 0x18,                   /*3e0: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3e4: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*3e8: mov    %rax,0x0(%rip)        # 3ef <op_super+0x3ef> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3ef: mov    0x0(%rip),%rsi        # 3f6 <op_super+0x3f6> */
0x48, 0x8b, 0x46, 0x08,                   /*3f6: mov    0x8(%rsi),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*3fa: mov    %rax,0x0(%rip)        # 401 <op_super+0x401> */
0x48, 0x8b, 0x4e, 0x08,                   /*401: mov    0x8(%rsi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*405: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*40a: jmpq   40f <op_super+0x40f> */
0x48, 0x83, 0xc4, 0x18,                   /*40f: add    $0x18,%rsp */
0x5b,                                     /*413: pop    %rbx */
0x41, 0x5c,                               /*414: pop    %r12 */
0x41, 0x5d,                               /*416: pop    %r13 */
0x41, 0x5e,                               /*418: pop    %r14 */
0x41, 0x5f,                               /*41a: pop    %r15 */
0x5d,                                     /*41c: pop    %rbp */

};
static uint8_t op_super__rodata[] = {

};


static uint8_t op_argary__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x55,                               /*13: push   %r13 */
0x41, 0x54,                               /*15: push   %r12 */
0x53,                                     /*17: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*18: sub    $0x18,%rsp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%ecx */
0xf6, 0xc1, 0x0f,                         /*26: test   $0xf,%cl */
0x0f, 0x84, 0xb9, 0x00, 0x00, 0x00,       /*29: je     e8 <op_argary+0xe8> */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*2f: mov    0x0(%rip),%rbx        # 36 <op_argary+0x36> */
0x48, 0x8b, 0x43, 0x18,                   /*36: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*3a: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3e: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x28,                   /*42: mov    0x28(%rax),%rax */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*46: mov    $0x0,%esi */
0x83, 0xe6, 0x0f,                         /*4b: and    $0xf,%esi */
0x48, 0x85, 0xc0,                         /*4e: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*51: sete   %cl */
0x83, 0xfe, 0x01,                         /*54: cmp    $0x1,%esi */
0x74, 0x1a,                               /*57: je     73 <op_argary+0x73> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*59: mov    $0x1,%edx */
0x29, 0xf2,                               /*5e: sub    %esi,%edx */
0xf6, 0xc1, 0x01,                         /*60: test   $0x1,%cl */
0x75, 0x12,                               /*63: jne    77 <op_argary+0x77> */
0x48, 0x8b, 0x40, 0x08,                   /*65: mov    0x8(%rax),%rax */
0x48, 0x85, 0xc0,                         /*69: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*6c: sete   %cl */
0xff, 0xc2,                               /*6f: inc    %edx */
0x75, 0xed,                               /*71: jne    60 <op_argary+0x60> */
0x84, 0xc9,                               /*73: test   %cl,%cl */
0x74, 0x6d,                               /*75: je     e4 <op_argary+0xe4> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*77: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*7c: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7f: callq  84 <op_argary+0x84> */
0x49, 0x89, 0xc6,                         /*84: mov    %rax,%r14 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*87: mov    0x0(%rip),%rdi        # 8e <op_argary+0x8e> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*8e: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*93: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*98: callq  9d <op_argary+0x9d> */
0x89, 0xd1,                               /*9d: mov    %edx,%ecx */
0x48, 0x89, 0xdf,                         /*9f: mov    %rbx,%rdi */
0x4c, 0x89, 0xf6,                         /*a2: mov    %r14,%rsi */
0x48, 0x89, 0xc2,                         /*a5: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a8: callq  ad <op_argary+0xad> */
0x48, 0x89, 0x43, 0x28,                   /*ad: mov    %rax,0x28(%rbx) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*b1: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*b6: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*bb: callq  c0 <op_argary+0xc0> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*c0: mov    0x0(%rip),%rdi        # c7 <op_argary+0xc7> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*c7: mov    0x0(%rip),%rsi        # ce <op_argary+0xce> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*ce: mov    0x0(%rip),%rcx        # d5 <op_argary+0xd5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*d5: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*da: jmpq   df <op_argary+0xdf> */
0xe9, 0x52, 0x02, 0x00, 0x00,             /*df: jmpq   336 <op_argary+0x336> */
0x48, 0x83, 0xc0, 0x18,                   /*e4: add    $0x18,%rax */
0x4c, 0x8b, 0x38,                         /*e8: mov    (%rax),%r15 */
0x4d, 0x8d, 0x6f, 0x10,                   /*eb: lea    0x10(%r15),%r13 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ef: mov    $0x0,%eax */
0x0f, 0xba, 0xe0, 0x09,                   /*f4: bt     $0x9,%eax */
0x72, 0x48,                               /*f8: jb     142 <op_argary+0x142> */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*fa: mov    0x0(%rip),%r14        # 101 <op_argary+0x101> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*101: mov    $0x0,%eax */
0x48, 0x63, 0xd8,                         /*106: movslq %eax,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*109: shl    $0x4,%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*10d: mov    0x0(%rip),%rdi        # 114 <op_argary+0x114> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*114: mov    $0x0,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*119: mov    $0x0,%eax */
0xc1, 0xe8, 0x04,                         /*11e: shr    $0x4,%eax */
0x83, 0xe0, 0x1f,                         /*121: and    $0x1f,%eax */
0xc1, 0xee, 0x0a,                         /*124: shr    $0xa,%esi */
0x83, 0xe6, 0x3f,                         /*127: and    $0x3f,%esi */
0x01, 0xc6,                               /*12a: add    %eax,%esi */
0x4c, 0x89, 0xea,                         /*12c: mov    %r13,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*12f: callq  134 <op_argary+0x134> */
0x49, 0x89, 0x04, 0x1e,                   /*134: mov    %rax,(%r14,%rbx,1) */
0x41, 0x89, 0x54, 0x1e, 0x08,             /*138: mov    %edx,0x8(%r14,%rbx,1) */
0xe9, 0x8d, 0x01, 0x00, 0x00,             /*13d: jmpq   2cf <op_argary+0x2cf> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*142: mov    $0x0,%eax */
0xc1, 0xe8, 0x0a,                         /*147: shr    $0xa,%eax */
0x83, 0xe0, 0x3f,                         /*14a: and    $0x3f,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*14d: shl    $0x4,%rax */
0x31, 0xdb,                               /*151: xor    %ebx,%ebx */
0x42, 0x83, 0x7c, 0x38, 0x18, 0x0e,       /*153: cmpl   $0xe,0x18(%rax,%r15,1) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*159: mov    $0x0,%ecx */
0x75, 0x1b,                               /*15e: jne    17b <op_argary+0x17b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*160: mov    $0x0,%eax */
0xc1, 0xe8, 0x0a,                         /*165: shr    $0xa,%eax */
0x83, 0xe0, 0x3f,                         /*168: and    $0x3f,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*16b: shl    $0x4,%rax */
0x4a, 0x8b, 0x44, 0x38, 0x10,             /*16f: mov    0x10(%rax,%r15,1),%rax */
0x48, 0x8b, 0x58, 0x28,                   /*174: mov    0x28(%rax),%rbx */
0x8b, 0x48, 0x18,                         /*178: mov    0x18(%rax),%ecx */
0x48, 0x89, 0x4c, 0x24, 0x08,             /*17b: mov    %rcx,0x8(%rsp) */
0x48, 0x8b, 0x2d, 0x00, 0x00, 0x00, 0x00, /*180: mov    0x0(%rip),%rbp        # 187 <op_argary+0x187> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*187: mov    $0x0,%eax */
0x4c, 0x63, 0xe0,                         /*18c: movslq %eax,%r12 */
0x49, 0xc1, 0xe4, 0x04,                   /*18f: shl    $0x4,%r12 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*193: mov    0x0(%rip),%rdi        # 19a <op_argary+0x19a> */
0x4c, 0x89, 0x7c, 0x24, 0x10,             /*19a: mov    %r15,0x10(%rsp) */
0x41, 0xbf, 0x00, 0x00, 0x00, 0x00,       /*19f: mov    $0x0,%r15d */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*1a5: mov    $0x0,%r14d */
0x41, 0xc1, 0xee, 0x04,                   /*1ab: shr    $0x4,%r14d */
0x41, 0x83, 0xe6, 0x1f,                   /*1af: and    $0x1f,%r14d */
0x41, 0xc1, 0xef, 0x0a,                   /*1b3: shr    $0xa,%r15d */
0x41, 0x83, 0xe7, 0x3f,                   /*1b7: and    $0x3f,%r15d */
0x45, 0x01, 0xfe,                         /*1bb: add    %r15d,%r14d */
0x41, 0x01, 0xce,                         /*1be: add    %ecx,%r14d */
0x44, 0x89, 0xf6,                         /*1c1: mov    %r14d,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c4: callq  1c9 <op_argary+0x1c9> */
0x4a, 0x89, 0x44, 0x25, 0x00,             /*1c9: mov    %rax,0x0(%rbp,%r12,1) */
0x42, 0x89, 0x54, 0x25, 0x08,             /*1ce: mov    %edx,0x8(%rbp,%r12,1) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1d3: mov    0x0(%rip),%rax        # 1da <op_argary+0x1da> */
0x4e, 0x8b, 0x04, 0x20,                   /*1da: mov    (%rax,%r12,1),%r8 */
0x45, 0x85, 0xff,                         /*1de: test   %r15d,%r15d */
0x4c, 0x8b, 0x7c, 0x24, 0x10,             /*1e1: mov    0x10(%rsp),%r15 */
0x7e, 0x3c,                               /*1e6: jle    224 <op_argary+0x224> */
0x49, 0x8b, 0x48, 0x28,                   /*1e8: mov    0x28(%r8),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1ec: mov    $0x0,%edx */
0xc1, 0xea, 0x0a,                         /*1f1: shr    $0xa,%edx */
0x48, 0x83, 0xe2, 0x3f,                   /*1f4: and    $0x3f,%rdx */
0x48, 0xf7, 0xda,                         /*1f8: neg    %rdx */
0x4c, 0x89, 0xfe,                         /*1fb: mov    %r15,%rsi */
0x66, 0x90,                               /*1fe: xchg   %ax,%ax */
0x4c, 0x89, 0xef,                         /*200: mov    %r13,%rdi */
0x48, 0x83, 0xc6, 0x20,                   /*203: add    $0x20,%rsi */
0x48, 0x8b, 0x2f,                         /*207: mov    (%rdi),%rbp */
0x48, 0x8b, 0x47, 0x08,                   /*20a: mov    0x8(%rdi),%rax */
0x48, 0x89, 0x41, 0x08,                   /*20e: mov    %rax,0x8(%rcx) */
0x48, 0x89, 0x29,                         /*212: mov    %rbp,(%rcx) */
0x48, 0x8d, 0x49, 0x10,                   /*215: lea    0x10(%rcx),%rcx */
0x48, 0xff, 0xc2,                         /*219: inc    %rdx */
0x49, 0x89, 0xf5,                         /*21c: mov    %rsi,%r13 */
0x48, 0x89, 0xfe,                         /*21f: mov    %rdi,%rsi */
0x75, 0xdc,                               /*222: jne    200 <op_argary+0x200> */
0x48, 0x8b, 0x7c, 0x24, 0x08,             /*224: mov    0x8(%rsp),%rdi */
0x85, 0xff,                               /*229: test   %edi,%edi */
0x7e, 0x3e,                               /*22b: jle    26b <op_argary+0x26b> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*22d: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0a,                         /*232: shr    $0xa,%ecx */
0x83, 0xe1, 0x3f,                         /*235: and    $0x3f,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*238: shl    $0x4,%rcx */
0x49, 0x03, 0x48, 0x28,                   /*23c: add    0x28(%r8),%rcx */
0x48, 0x63, 0xd7,                         /*240: movslq %edi,%rdx */
0x48, 0xf7, 0xda,                         /*243: neg    %rdx */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*246: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x03,                         /*250: mov    (%rbx),%rax */
0x48, 0x8b, 0x73, 0x08,                   /*253: mov    0x8(%rbx),%rsi */
0x48, 0x8d, 0x5b, 0x10,                   /*257: lea    0x10(%rbx),%rbx */
0x48, 0x89, 0x71, 0x08,                   /*25b: mov    %rsi,0x8(%rcx) */
0x48, 0x89, 0x01,                         /*25f: mov    %rax,(%rcx) */
0x48, 0x8d, 0x49, 0x10,                   /*262: lea    0x10(%rcx),%rcx */
0x48, 0xff, 0xc2,                         /*266: inc    %rdx */
0x75, 0xe5,                               /*269: jne    250 <op_argary+0x250> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*26b: mov    $0x0,%eax */
0xc1, 0xe8, 0x04,                         /*270: shr    $0x4,%eax */
0xa8, 0x1f,                               /*273: test   $0x1f,%al */
0x7e, 0x54,                               /*275: jle    2cb <op_argary+0x2cb> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*277: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*27c: mov    $0x0,%eax */
0xc1, 0xe8, 0x0a,                         /*281: shr    $0xa,%eax */
0x83, 0xe0, 0x3f,                         /*284: and    $0x3f,%eax */
0x48, 0x89, 0xc2,                         /*287: mov    %rax,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*28a: shl    $0x4,%rdx */
0x4a, 0x8d, 0x54, 0x3a, 0x20,             /*28e: lea    0x20(%rdx,%r15,1),%rdx */
0x48, 0x63, 0xf7,                         /*293: movslq %edi,%rsi */
0x48, 0x01, 0xc6,                         /*296: add    %rax,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*299: shl    $0x4,%rsi */
0x49, 0x03, 0x70, 0x28,                   /*29d: add    0x28(%r8),%rsi */
0xc1, 0xe9, 0x04,                         /*2a1: shr    $0x4,%ecx */
0x48, 0x83, 0xe1, 0x1f,                   /*2a4: and    $0x1f,%rcx */
0x48, 0xf7, 0xd9,                         /*2a8: neg    %rcx */
0x0f, 0x1f, 0x44, 0x00, 0x00,             /*2ab: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x02,                         /*2b0: mov    (%rdx),%rax */
0x48, 0x8b, 0x7a, 0x08,                   /*2b3: mov    0x8(%rdx),%rdi */
0x48, 0x8d, 0x52, 0x10,                   /*2b7: lea    0x10(%rdx),%rdx */
0x48, 0x89, 0x7e, 0x08,                   /*2bb: mov    %rdi,0x8(%rsi) */
0x48, 0x89, 0x06,                         /*2bf: mov    %rax,(%rsi) */
0x48, 0x8d, 0x76, 0x10,                   /*2c2: lea    0x10(%rsi),%rsi */
0x48, 0xff, 0xc1,                         /*2c6: inc    %rcx */
0x75, 0xe5,                               /*2c9: jne    2b0 <op_argary+0x2b0> */
0x45, 0x89, 0x70, 0x18,                   /*2cb: mov    %r14d,0x18(%r8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*2cf: mov    0x0(%rip),%rax        # 2d6 <op_argary+0x2d6> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2d6: mov    $0x0,%ecx */
0xff, 0xc1,                               /*2db: inc    %ecx */
0x48, 0x63, 0xc9,                         /*2dd: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*2e0: shl    $0x4,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2e4: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2e9: mov    $0x0,%esi */
0xc1, 0xee, 0x09,                         /*2ee: shr    $0x9,%esi */
0x83, 0xe6, 0x01,                         /*2f1: and    $0x1,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*2f4: mov    $0x0,%edi */
0xc1, 0xef, 0x0a,                         /*2f9: shr    $0xa,%edi */
0x83, 0xe7, 0x3f,                         /*2fc: and    $0x3f,%edi */
0x01, 0xf7,                               /*2ff: add    %esi,%edi */
0xc1, 0xea, 0x04,                         /*301: shr    $0x4,%edx */
0x83, 0xe2, 0x1f,                         /*304: and    $0x1f,%edx */
0x01, 0xfa,                               /*307: add    %edi,%edx */
0x48, 0x63, 0xd2,                         /*309: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*30c: shl    $0x4,%rdx */
0x4a, 0x8b, 0x74, 0x3a, 0x10,             /*310: mov    0x10(%rdx,%r15,1),%rsi */
0x4a, 0x8b, 0x54, 0x3a, 0x18,             /*315: mov    0x18(%rdx,%r15,1),%rdx */
0x48, 0x89, 0x54, 0x08, 0x08,             /*31a: mov    %rdx,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x34, 0x08,                   /*31f: mov    %rsi,(%rax,%rcx,1) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*323: mov    0x0(%rip),%eax        # 329 <op_argary+0x329> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*329: mov    0x0(%rip),%rcx        # 330 <op_argary+0x330> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*330: mov    %eax,0xdc(%rcx) */
0x48, 0x83, 0xc4, 0x18,                   /*336: add    $0x18,%rsp */
0x5b,                                     /*33a: pop    %rbx */
0x41, 0x5c,                               /*33b: pop    %r12 */
0x41, 0x5d,                               /*33d: pop    %r13 */
0x41, 0x5e,                               /*33f: pop    %r14 */
0x41, 0x5f,                               /*341: pop    %r15 */
0x5d,                                     /*343: pop    %rbp */

};
static uint8_t op_argary__rodata[] = {

};


static uint8_t op_enter__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x55,                               /*13: push   %r13 */
0x41, 0x54,                               /*15: push   %r12 */
0x53,                                     /*17: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*18: sub    $0x18,%rsp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1c: mov    0x0(%rip),%rdi        # 23 <op_enter+0x23> */
0x48, 0x8b, 0x47, 0x18,                   /*23: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*27: mov    0x20(%rax),%rax */
0x4c, 0x63, 0x68, 0x40,                   /*2b: movslq 0x40(%rax),%r13 */
0x4c, 0x8b, 0x25, 0x00, 0x00, 0x00, 0x00, /*2f: mov    0x0(%rip),%r12        # 36 <op_enter+0x36> */
0x4d, 0x85, 0xed,                         /*36: test   %r13,%r13 */
0x49, 0x8d, 0x4d, 0x01,                   /*39: lea    0x1(%r13),%rcx */
0xb8, 0x02, 0x00, 0x00, 0x00,             /*3d: mov    $0x2,%eax */
0x48, 0x0f, 0x49, 0xc1,                   /*42: cmovns %rcx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*46: shl    $0x4,%rax */
0x4d, 0x8d, 0x3c, 0x04,                   /*4a: lea    (%r12,%rax,1),%r15 */
0x41, 0x8b, 0x54, 0x04, 0x08,             /*4e: mov    0x8(%r12,%rax,1),%edx */
0x83, 0xfa, 0x0d,                         /*53: cmp    $0xd,%edx */
0x74, 0x2d,                               /*56: je     85 <op_enter+0x85> */
0x85, 0xd2,                               /*58: test   %edx,%edx */
0x75, 0x06,                               /*5a: jne    62 <op_enter+0x62> */
0x41, 0x83, 0x3f, 0x00,                   /*5c: cmpl   $0x0,(%r15) */
0x74, 0x23,                               /*60: je     85 <op_enter+0x85> */
0x49, 0x8d, 0x5c, 0x04, 0x08,             /*62: lea    0x8(%r12,%rax,1),%rbx */
0x49, 0x8b, 0x37,                         /*67: mov    (%r15),%rsi */
0xb9, 0x0d, 0x00, 0x00, 0x00,             /*6a: mov    $0xd,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*6f: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*75: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7b: callq  80 <op_enter+0x80> */
0x49, 0x89, 0x07,                         /*80: mov    %rax,(%r15) */
0x89, 0x13,                               /*83: mov    %edx,(%rbx) */
0x49, 0x83, 0xc4, 0x10,                   /*85: add    $0x10,%r12 */
0x45, 0x85, 0xed,                         /*89: test   %r13d,%r13d */
0x4d, 0x89, 0xe6,                         /*8c: mov    %r12,%r14 */
0x79, 0x22,                               /*8f: jns    b3 <op_enter+0xb3> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*91: mov    0x0(%rip),%rax        # 98 <op_enter+0x98> */
0x48, 0x8b, 0x70, 0x10,                   /*98: mov    0x10(%rax),%rsi */
0x4c, 0x8b, 0x76, 0x28,                   /*9c: mov    0x28(%rsi),%r14 */
0x44, 0x8b, 0x6e, 0x18,                   /*a0: mov    0x18(%rsi),%r13d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*a4: mov    0x0(%rip),%rdi        # ab <op_enter+0xab> */
0x8b, 0x50, 0x18,                         /*ab: mov    0x18(%rax),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ae: callq  b3 <op_enter+0xb3> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*b3: mov    0x0(%rip),%rdi        # ba <op_enter+0xba> */
0x48, 0x8b, 0x47, 0x18,                   /*ba: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*be: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*c2: mov    0x8(%rax),%rcx */
0x48, 0x85, 0xc9,                         /*c6: test   %rcx,%rcx */
0x0f, 0x84, 0xae, 0x00, 0x00, 0x00,       /*c9: je     17d <op_enter+0x17d> */
0xf6, 0x41, 0x02, 0x08,                   /*cf: testb  $0x8,0x2(%rcx) */
0x0f, 0x84, 0xa4, 0x00, 0x00, 0x00,       /*d3: je     17d <op_enter+0x17d> */
0x45, 0x85, 0xed,                         /*d9: test   %r13d,%r13d */
0x0f, 0x88, 0x0c, 0x01, 0x00, 0x00,       /*dc: js     1ee <op_enter+0x1ee> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*e2: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*e7: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*ec: shr    $0x7,%esi */
0x83, 0xe6, 0x1f,                         /*ef: and    $0x1f,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f2: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*f7: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*fa: and    $0x1f,%ecx */
0x8d, 0x2c, 0x31,                         /*fd: lea    (%rcx,%rsi,1),%ebp */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*100: mov    $0x0,%ebx */
0xc1, 0xeb, 0x0d,                         /*105: shr    $0xd,%ebx */
0x83, 0xe3, 0x1f,                         /*108: and    $0x1f,%ebx */
0x01, 0xcb,                               /*10b: add    %ecx,%ebx */
0xc1, 0xea, 0x0c,                         /*10d: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*110: and    $0x1,%edx */
0x0f, 0x94, 0xc1,                         /*113: sete   %cl */
0x01, 0xda,                               /*116: add    %ebx,%edx */
0x01, 0xf2,                               /*118: add    %esi,%edx */
0x41, 0x39, 0xd5,                         /*11a: cmp    %edx,%r13d */
0x0f, 0x9f, 0xc2,                         /*11d: setg   %dl */
0x41, 0x39, 0xed,                         /*120: cmp    %ebp,%r13d */
0x7c, 0x08,                               /*123: jl     12d <op_enter+0x12d> */
0x20, 0xca,                               /*125: and    %cl,%dl */
0x0f, 0x84, 0xc1, 0x00, 0x00, 0x00,       /*127: je     1ee <op_enter+0x1ee> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*12d: mov    $0x0,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*132: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*137: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*13a: and    $0x1f,%eax */
0xc1, 0xee, 0x12,                         /*13d: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*140: and    $0x1f,%esi */
0x01, 0xc6,                               /*143: add    %eax,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*145: callq  14a <op_enter+0x14a> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*14a: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*14f: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*154: callq  159 <op_enter+0x159> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*159: mov    0x0(%rip),%rdi        # 160 <op_enter+0x160> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*160: mov    0x0(%rip),%rsi        # 167 <op_enter+0x167> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*167: mov    0x0(%rip),%rcx        # 16e <op_enter+0x16e> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*16e: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*173: jmpq   178 <op_enter+0x178> */
0xe9, 0xe6, 0x07, 0x00, 0x00,             /*178: jmpq   963 <op_enter+0x963> */
0x41, 0x83, 0xfd, 0x01,                   /*17d: cmp    $0x1,%r13d */
0x75, 0x6b,                               /*181: jne    1ee <op_enter+0x1ee> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*183: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*188: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*18d: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*190: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*193: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*198: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*19b: and    $0x1f,%esi */
0x01, 0xd6,                               /*19e: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1a0: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*1a5: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*1a8: and    $0x1,%edx */
0x01, 0xf2,                               /*1ab: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*1ad: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*1b0: and    $0x1f,%ecx */
0x01, 0xd1,                               /*1b3: add    %edx,%ecx */
0x83, 0xf9, 0x02,                         /*1b5: cmp    $0x2,%ecx */
0x7c, 0x34,                               /*1b8: jl     1ee <op_enter+0x1ee> */
0x41, 0xbd, 0x01, 0x00, 0x00, 0x00,       /*1ba: mov    $0x1,%r13d */
0x41, 0x83, 0x7e, 0x08, 0x0e,             /*1c0: cmpl   $0xe,0x8(%r14) */
0x75, 0x27,                               /*1c5: jne    1ee <op_enter+0x1ee> */
0x49, 0x8b, 0x36,                         /*1c7: mov    (%r14),%rsi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*1ca: mov    $0xe,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1cf: callq  1d4 <op_enter+0x1d4> */
0x49, 0x8b, 0x06,                         /*1d4: mov    (%r14),%rax */
0x44, 0x8b, 0x68, 0x18,                   /*1d7: mov    0x18(%rax),%r13d */
0x4c, 0x8b, 0x70, 0x28,                   /*1db: mov    0x28(%rax),%r14 */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1df: mov    0x0(%rip),%rax        # 1e6 <op_enter+0x1e6> */
0x48, 0x8b, 0x40, 0x18,                   /*1e6: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1ea: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1ee: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1f3: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*1f8: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*1fb: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1fe: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*203: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*206: and    $0x1f,%esi */
0x01, 0xd6,                               /*209: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*20b: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*210: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*213: and    $0x1,%edx */
0x01, 0xf2,                               /*216: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*218: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*21b: and    $0x1f,%ecx */
0x01, 0xd1,                               /*21e: add    %edx,%ecx */
0x89, 0x48, 0x40,                         /*220: mov    %ecx,0x40(%rax) */
0x41, 0x39, 0xcd,                         /*223: cmp    %ecx,%r13d */
0x0f, 0x8d, 0x24, 0x01, 0x00, 0x00,       /*226: jge    350 <op_enter+0x350> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*22c: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*231: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*236: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*239: and    $0x1f,%eax */
0xc1, 0xe9, 0x12,                         /*23c: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*23f: and    $0x1f,%ecx */
0x01, 0xc1,                               /*242: add    %eax,%ecx */
0x41, 0x39, 0xcd,                         /*244: cmp    %ecx,%r13d */
0x7d, 0x15,                               /*247: jge    25e <op_enter+0x25e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*249: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*24e: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*251: and    $0x1f,%ecx */
0x31, 0xd2,                               /*254: xor    %edx,%edx */
0x44, 0x89, 0xe8,                         /*256: mov    %r13d,%eax */
0x29, 0xc8,                               /*259: sub    %ecx,%eax */
0x0f, 0x4e, 0xc2,                         /*25b: cmovle %edx,%eax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*25e: mov    0x0(%rip),%rcx        # 265 <op_enter+0x265> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*265: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*26a: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*26f: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*272: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*275: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*27a: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*27d: and    $0x1f,%edi */
0x01, 0xf7,                               /*280: add    %esi,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*282: mov    $0x0,%esi */
0xc1, 0xee, 0x0c,                         /*287: shr    $0xc,%esi */
0x83, 0xe6, 0x01,                         /*28a: and    $0x1,%esi */
0x01, 0xfe,                               /*28d: add    %edi,%esi */
0xc1, 0xea, 0x07,                         /*28f: shr    $0x7,%edx */
0x83, 0xe2, 0x1f,                         /*292: and    $0x1f,%edx */
0x8d, 0x54, 0x32, 0x01,                   /*295: lea    0x1(%rdx,%rsi,1),%edx */
0x48, 0x63, 0xd2,                         /*299: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*29c: shl    $0x4,%rdx */
0x49, 0x8b, 0x37,                         /*2a0: mov    (%r15),%rsi */
0x49, 0x8b, 0x7f, 0x08,                   /*2a3: mov    0x8(%r15),%rdi */
0x48, 0x89, 0x7c, 0x11, 0x08,             /*2a7: mov    %rdi,0x8(%rcx,%rdx,1) */
0x48, 0x89, 0x34, 0x11,                   /*2ac: mov    %rsi,(%rcx,%rdx,1) */
0x41, 0x8d, 0x4d, 0x01,                   /*2b0: lea    0x1(%r13),%ecx */
0x48, 0x63, 0xc9,                         /*2b4: movslq %ecx,%rcx */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*2b7: mov    0x0(%rip),%rdx        # 2be <op_enter+0x2be> */
0x48, 0xc1, 0xe1, 0x04,                   /*2be: shl    $0x4,%rcx */
0xc7, 0x44, 0x0a, 0x08, 0x00, 0x00, 0x00, 0x00,/*2c2: movl   $0x0,0x8(%rdx,%rcx,1) */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*2ca: mov    0x0(%rip),%rdx        # 2d1 <op_enter+0x2d1> */
0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, /*2d1: movl   $0x0,(%rdx,%rcx,1) */
0x4d, 0x39, 0xf4,                         /*2d8: cmp    %r14,%r12 */
0x0f, 0x84, 0xc3, 0x01, 0x00, 0x00,       /*2db: je     4a4 <op_enter+0x4a4> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*2e1: mov    0x0(%rip),%rcx        # 2e8 <op_enter+0x2e8> */
0x48, 0x8d, 0x69, 0x10,                   /*2e8: lea    0x10(%rcx),%rbp */
0x4c, 0x39, 0xf5,                         /*2ec: cmp    %r14,%rbp */
0x0f, 0x86, 0x6b, 0x01, 0x00, 0x00,       /*2ef: jbe    460 <op_enter+0x460> */
0x44, 0x89, 0xee,                         /*2f5: mov    %r13d,%esi */
0x29, 0xc6,                               /*2f8: sub    %eax,%esi */
0x48, 0x63, 0xf6,                         /*2fa: movslq %esi,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*2fd: shl    $0x4,%rsi */
0x4c, 0x01, 0xf6,                         /*301: add    %r14,%rsi */
0x48, 0x39, 0xf5,                         /*304: cmp    %rsi,%rbp */
0x0f, 0x83, 0x53, 0x01, 0x00, 0x00,       /*307: jae    460 <op_enter+0x460> */
0x44, 0x89, 0xea,                         /*30d: mov    %r13d,%edx */
0x29, 0xc2,                               /*310: sub    %eax,%edx */
0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00,       /*312: je     4a4 <op_enter+0x4a4> */
0x48, 0x63, 0xd2,                         /*318: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*31b: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*31e: shl    $0x4,%rsi */
0x48, 0x01, 0xf1,                         /*322: add    %rsi,%rcx */
0x4a, 0x8d, 0x74, 0x36, 0xf0,             /*325: lea    -0x10(%rsi,%r14,1),%rsi */
0x48, 0xf7, 0xda,                         /*32a: neg    %rdx */
0x0f, 0x1f, 0x00,                         /*32d: nopl   (%rax) */
0x48, 0x8b, 0x3e,                         /*330: mov    (%rsi),%rdi */
0x48, 0x8b, 0x6e, 0x08,                   /*333: mov    0x8(%rsi),%rbp */
0x48, 0x89, 0x69, 0x08,                   /*337: mov    %rbp,0x8(%rcx) */
0x48, 0x89, 0x39,                         /*33b: mov    %rdi,(%rcx) */
0x48, 0x83, 0xc1, 0xf0,                   /*33e: add    $0xfffffffffffffff0,%rcx */
0x48, 0x83, 0xc6, 0xf0,                   /*342: add    $0xfffffffffffffff0,%rsi */
0x48, 0xff, 0xc2,                         /*346: inc    %rdx */
0x75, 0xe5,                               /*349: jne    330 <op_enter+0x330> */
0xe9, 0x54, 0x01, 0x00, 0x00,             /*34b: jmpq   4a4 <op_enter+0x4a4> */
0x4d, 0x39, 0xf4,                         /*350: cmp    %r14,%r12 */
0x0f, 0x84, 0x7b, 0x02, 0x00, 0x00,       /*353: je     5d4 <op_enter+0x5d4> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*359: mov    0x0(%rip),%rax        # 360 <op_enter+0x360> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*360: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*365: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*36a: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*36d: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*370: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*375: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*378: and    $0x1f,%esi */
0x01, 0xd6,                               /*37b: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*37d: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*382: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*385: and    $0x1,%edx */
0x01, 0xf2,                               /*388: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*38a: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*38d: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*390: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*394: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*397: shl    $0x4,%rcx */
0x49, 0x8b, 0x17,                         /*39b: mov    (%r15),%rdx */
0x49, 0x8b, 0x77, 0x08,                   /*39e: mov    0x8(%r15),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*3a2: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*3a7: mov    %rdx,(%rax,%rcx,1) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*3ab: mov    0x0(%rip),%rax        # 3b2 <op_enter+0x3b2> */
0x48, 0x8d, 0x48, 0x10,                   /*3b2: lea    0x10(%rax),%rcx */
0x4c, 0x39, 0xf1,                         /*3b6: cmp    %r14,%rcx */
0x0f, 0x86, 0xb1, 0x01, 0x00, 0x00,       /*3b9: jbe    570 <op_enter+0x570> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3bf: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*3c4: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*3c9: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*3cc: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*3cf: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*3d2: and    $0x1f,%edx */
0x01, 0xf2,                               /*3d5: add    %esi,%edx */
0x48, 0x63, 0xd2,                         /*3d7: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*3da: shl    $0x4,%rdx */
0x4c, 0x01, 0xf2,                         /*3de: add    %r14,%rdx */
0x48, 0x39, 0xd1,                         /*3e1: cmp    %rdx,%rcx */
0x0f, 0x83, 0x86, 0x01, 0x00, 0x00,       /*3e4: jae    570 <op_enter+0x570> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3ea: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3ef: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*3f4: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*3f7: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*3fa: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*3fd: and    $0x1f,%ecx */
0x01, 0xd1,                               /*400: add    %edx,%ecx */
0x0f, 0x84, 0xcc, 0x01, 0x00, 0x00,       /*402: je     5d4 <op_enter+0x5d4> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*408: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*40d: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*412: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*415: and    $0x1f,%edx */
0xc1, 0xe9, 0x0d,                         /*418: shr    $0xd,%ecx */
0x83, 0xe1, 0x1f,                         /*41b: and    $0x1f,%ecx */
0x01, 0xd1,                               /*41e: add    %edx,%ecx */
0x48, 0x89, 0xca,                         /*420: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*423: shl    $0x4,%rdx */
0x48, 0x01, 0xd0,                         /*427: add    %rdx,%rax */
0x4a, 0x8d, 0x54, 0x32, 0xf0,             /*42a: lea    -0x10(%rdx,%r14,1),%rdx */
0x48, 0xf7, 0xd9,                         /*42f: neg    %rcx */
0x0f, 0x1f, 0x40, 0x00,                   /*432: nopl   0x0(%rax) */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*436: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x32,                         /*440: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*443: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x78, 0x08,                   /*447: mov    %rdi,0x8(%rax) */
0x48, 0x89, 0x30,                         /*44b: mov    %rsi,(%rax) */
0x48, 0x83, 0xc0, 0xf0,                   /*44e: add    $0xfffffffffffffff0,%rax */
0x48, 0x83, 0xc2, 0xf0,                   /*452: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc1,                         /*456: inc    %rcx */
0x75, 0xe5,                               /*459: jne    440 <op_enter+0x440> */
0xe9, 0x74, 0x01, 0x00, 0x00,             /*45b: jmpq   5d4 <op_enter+0x5d4> */
0x4c, 0x39, 0xf5,                         /*460: cmp    %r14,%rbp */
0x74, 0x3f,                               /*463: je     4a4 <op_enter+0x4a4> */
0x44, 0x89, 0xee,                         /*465: mov    %r13d,%esi */
0x29, 0xc6,                               /*468: sub    %eax,%esi */
0x74, 0x38,                               /*46a: je     4a4 <op_enter+0x4a4> */
0x48, 0x63, 0xf6,                         /*46c: movslq %esi,%rsi */
0x48, 0xf7, 0xde,                         /*46f: neg    %rsi */
0x4c, 0x89, 0xf7,                         /*472: mov    %r14,%rdi */
0x90,                                     /*475: nop */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*476: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xea,                         /*480: mov    %rbp,%rdx */
0x48, 0x83, 0xc1, 0x20,                   /*483: add    $0x20,%rcx */
0x48, 0x8b, 0x2f,                         /*487: mov    (%rdi),%rbp */
0x48, 0x8b, 0x5f, 0x08,                   /*48a: mov    0x8(%rdi),%rbx */
0x48, 0x8d, 0x7f, 0x10,                   /*48e: lea    0x10(%rdi),%rdi */
0x48, 0x89, 0x5a, 0x08,                   /*492: mov    %rbx,0x8(%rdx) */
0x48, 0x89, 0x2a,                         /*496: mov    %rbp,(%rdx) */
0x48, 0xff, 0xc6,                         /*499: inc    %rsi */
0x48, 0x89, 0xcd,                         /*49c: mov    %rcx,%rbp */
0x48, 0x89, 0xd1,                         /*49f: mov    %rdx,%rcx */
0x75, 0xdc,                               /*4a2: jne    480 <op_enter+0x480> */
0x85, 0xc0,                               /*4a4: test   %eax,%eax */
0x0f, 0x84, 0x0f, 0x03, 0x00, 0x00,       /*4a6: je     7bb <op_enter+0x7bb> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*4ac: mov    0x0(%rip),%rcx        # 4b3 <op_enter+0x4b3> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4b3: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4b8: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*4bd: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*4c0: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*4c3: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*4c8: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*4cb: and    $0x1f,%edi */
0x01, 0xf7,                               /*4ce: add    %esi,%edi */
0xc1, 0xea, 0x0c,                         /*4d0: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*4d3: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*4d6: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x63, 0xd2,                         /*4da: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*4dd: shl    $0x4,%rdx */
0x48, 0x01, 0xca,                         /*4e1: add    %rcx,%rdx */
0x44, 0x89, 0xee,                         /*4e4: mov    %r13d,%esi */
0x29, 0xc6,                               /*4e7: sub    %eax,%esi */
0x48, 0x63, 0xf6,                         /*4e9: movslq %esi,%rsi */
0x48, 0x89, 0xf7,                         /*4ec: mov    %rsi,%rdi */
0x48, 0xc1, 0xe7, 0x04,                   /*4ef: shl    $0x4,%rdi */
0x4c, 0x01, 0xf7,                         /*4f3: add    %r14,%rdi */
0x48, 0x98,                               /*4f6: cltq */
0x48, 0x39, 0xfa,                         /*4f8: cmp    %rdi,%rdx */
0x0f, 0x86, 0x8f, 0x02, 0x00, 0x00,       /*4fb: jbe    790 <op_enter+0x790> */
0x48, 0x01, 0xc6,                         /*501: add    %rax,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*504: shl    $0x4,%rsi */
0x49, 0x8d, 0x2c, 0x36,                   /*508: lea    (%r14,%rsi,1),%rbp */
0x48, 0x39, 0xea,                         /*50c: cmp    %rbp,%rdx */
0x0f, 0x83, 0x7b, 0x02, 0x00, 0x00,       /*50f: jae    790 <op_enter+0x790> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*515: mov    $0x0,%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*51a: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*51f: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*522: and    $0x1f,%edi */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*525: mov    $0x0,%ebp */
0xc1, 0xed, 0x0d,                         /*52a: shr    $0xd,%ebp */
0x83, 0xe5, 0x1f,                         /*52d: and    $0x1f,%ebp */
0x01, 0xfd,                               /*530: add    %edi,%ebp */
0xc1, 0xea, 0x0c,                         /*532: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*535: and    $0x1,%edx */
0x8d, 0x54, 0x2a, 0x01,                   /*538: lea    0x1(%rdx,%rbp,1),%edx */
0x48, 0x01, 0xc2,                         /*53c: add    %rax,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*53f: shl    $0x4,%rdx */
0x48, 0x8d, 0x4c, 0x0a, 0xf0,             /*543: lea    -0x10(%rdx,%rcx,1),%rcx */
0x4a, 0x8d, 0x54, 0x36, 0xf0,             /*548: lea    -0x10(%rsi,%r14,1),%rdx */
0x48, 0xf7, 0xd8,                         /*54d: neg    %rax */
0x48, 0x8b, 0x32,                         /*550: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*553: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x79, 0x08,                   /*557: mov    %rdi,0x8(%rcx) */
0x48, 0x89, 0x31,                         /*55b: mov    %rsi,(%rcx) */
0x48, 0x83, 0xc1, 0xf0,                   /*55e: add    $0xfffffffffffffff0,%rcx */
0x48, 0x83, 0xc2, 0xf0,                   /*562: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc0,                         /*566: inc    %rax */
0x75, 0xe5,                               /*569: jne    550 <op_enter+0x550> */
0xe9, 0x4b, 0x02, 0x00, 0x00,             /*56b: jmpq   7bb <op_enter+0x7bb> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*570: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*575: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*57a: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*57d: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*580: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*583: and    $0x1f,%edx */
0x01, 0xf2,                               /*586: add    %esi,%edx */
0x4c, 0x39, 0xf1,                         /*588: cmp    %r14,%rcx */
0x74, 0x47,                               /*58b: je     5d4 <op_enter+0x5d4> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*58d: mov    $0x0,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*592: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*597: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*59a: and    $0x1f,%edi */
0xc1, 0xee, 0x12,                         /*59d: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*5a0: and    $0x1f,%esi */
0x01, 0xfe,                               /*5a3: add    %edi,%esi */
0x74, 0x2d,                               /*5a5: je     5d4 <op_enter+0x5d4> */
0x48, 0xf7, 0xda,                         /*5a7: neg    %rdx */
0x4c, 0x89, 0xf6,                         /*5aa: mov    %r14,%rsi */
0x0f, 0x1f, 0x00,                         /*5ad: nopl   (%rax) */
0x48, 0x89, 0xcf,                         /*5b0: mov    %rcx,%rdi */
0x48, 0x83, 0xc0, 0x20,                   /*5b3: add    $0x20,%rax */
0x48, 0x8b, 0x0e,                         /*5b7: mov    (%rsi),%rcx */
0x48, 0x8b, 0x6e, 0x08,                   /*5ba: mov    0x8(%rsi),%rbp */
0x48, 0x8d, 0x76, 0x10,                   /*5be: lea    0x10(%rsi),%rsi */
0x48, 0x89, 0x6f, 0x08,                   /*5c2: mov    %rbp,0x8(%rdi) */
0x48, 0x89, 0x0f,                         /*5c6: mov    %rcx,(%rdi) */
0x48, 0xff, 0xc2,                         /*5c9: inc    %rdx */
0x48, 0x89, 0xc1,                         /*5cc: mov    %rax,%rcx */
0x48, 0x89, 0xf8,                         /*5cf: mov    %rdi,%rax */
0x75, 0xdc,                               /*5d2: jne    5b0 <op_enter+0x5b0> */
0x4c, 0x89, 0x74, 0x24, 0x10,             /*5d4: mov    %r14,0x10(%rsp) */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*5d9: mov    $0x0,%ebx */
0x0f, 0xba, 0xe3, 0x0c,                   /*5de: bt     $0xc,%ebx */
0x72, 0x15,                               /*5e2: jb     5f9 <op_enter+0x5f9> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5e4: mov    $0x0,%eax */
0xc1, 0xe8, 0x0d,                         /*5e9: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*5ec: and    $0x1f,%eax */
0xc1, 0xeb, 0x12,                         /*5ef: shr    $0x12,%ebx */
0x83, 0xe3, 0x1f,                         /*5f2: and    $0x1f,%ebx */
0x01, 0xc3,                               /*5f5: add    %eax,%ebx */
0xeb, 0x73,                               /*5f7: jmp    66c <op_enter+0x66c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5f9: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5fe: mov    $0x0,%eax */
0xc1, 0xe8, 0x0d,                         /*603: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*606: and    $0x1f,%eax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*609: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*60e: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*611: and    $0x1f,%edx */
0x89, 0xd5,                               /*614: mov    %edx,%ebp */
0xf7, 0xdd,                               /*616: neg    %ebp */
0x29, 0xc5,                               /*618: sub    %eax,%ebp */
0xc1, 0xe9, 0x07,                         /*61a: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*61d: and    $0x1f,%ecx */
0x29, 0xcd,                               /*620: sub    %ecx,%ebp */
0x41, 0x8d, 0x74, 0x2d, 0x00,             /*622: lea    0x0(%r13,%rbp,1),%esi */
0x4c, 0x89, 0x7c, 0x24, 0x08,             /*627: mov    %r15,0x8(%rsp) */
0x4c, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*62c: mov    0x0(%rip),%r15        # 633 <op_enter+0x633> */
0x8d, 0x1c, 0x02,                         /*633: lea    (%rdx,%rax,1),%ebx */
0x8d, 0x4c, 0x02, 0x01,                   /*636: lea    0x1(%rdx,%rax,1),%ecx */
0x4c, 0x63, 0xf1,                         /*63a: movslq %ecx,%r14 */
0x49, 0xc1, 0xe6, 0x04,                   /*63d: shl    $0x4,%r14 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*641: mov    0x0(%rip),%rdi        # 648 <op_enter+0x648> */
0x48, 0x01, 0xc2,                         /*648: add    %rax,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*64b: shl    $0x4,%rdx */
0x48, 0x03, 0x54, 0x24, 0x10,             /*64f: add    0x10(%rsp),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*654: callq  659 <op_enter+0x659> */
0x4b, 0x89, 0x04, 0x37,                   /*659: mov    %rax,(%r15,%r14,1) */
0x43, 0x89, 0x54, 0x37, 0x08,             /*65d: mov    %edx,0x8(%r15,%r14,1) */
0x4c, 0x8b, 0x7c, 0x24, 0x08,             /*662: mov    0x8(%rsp),%r15 */
0x01, 0xeb,                               /*667: add    %ebp,%ebx */
0x44, 0x01, 0xeb,                         /*669: add    %r13d,%ebx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*66c: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*671: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*676: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*679: and    $0x1f,%ecx */
0x41, 0x29, 0xcd,                         /*67c: sub    %ecx,%r13d */
0xc1, 0xe8, 0x12,                         /*67f: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*682: and    $0x1f,%eax */
0x41, 0x39, 0xc5,                         /*685: cmp    %eax,%r13d */
0x48, 0x8b, 0x6c, 0x24, 0x10,             /*688: mov    0x10(%rsp),%rbp */
0x0f, 0x8e, 0x18, 0x02, 0x00, 0x00,       /*68d: jle    8ab <op_enter+0x8ab> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*693: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*698: shr    $0x7,%eax */
0xa8, 0x1f,                               /*69b: test   $0x1f,%al */
0x0f, 0x84, 0x08, 0x02, 0x00, 0x00,       /*69d: je     8ab <op_enter+0x8ab> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*6a3: mov    0x0(%rip),%rax        # 6aa <op_enter+0x6aa> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*6aa: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6af: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*6b4: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*6b7: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*6ba: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*6bf: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*6c2: and    $0x1f,%esi */
0x01, 0xd6,                               /*6c5: add    %edx,%esi */
0xc1, 0xe9, 0x0c,                         /*6c7: shr    $0xc,%ecx */
0x83, 0xe1, 0x01,                         /*6ca: and    $0x1,%ecx */
0x8d, 0x4c, 0x31, 0x01,                   /*6cd: lea    0x1(%rcx,%rsi,1),%ecx */
0x48, 0x63, 0xc9,                         /*6d1: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*6d4: shl    $0x4,%rcx */
0x48, 0x01, 0xc1,                         /*6d8: add    %rax,%rcx */
0x48, 0x63, 0xd3,                         /*6db: movslq %ebx,%rdx */
0x48, 0x89, 0xd6,                         /*6de: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*6e1: shl    $0x4,%rsi */
0x48, 0x01, 0xee,                         /*6e5: add    %rbp,%rsi */
0x48, 0x39, 0xf1,                         /*6e8: cmp    %rsi,%rcx */
0x0f, 0x86, 0x7b, 0x01, 0x00, 0x00,       /*6eb: jbe    86c <op_enter+0x86c> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*6f1: mov    $0x0,%edi */
0xc1, 0xef, 0x07,                         /*6f6: shr    $0x7,%edi */
0x83, 0xe7, 0x1f,                         /*6f9: and    $0x1f,%edi */
0x48, 0x01, 0xd7,                         /*6fc: add    %rdx,%rdi */
0x48, 0xc1, 0xe7, 0x04,                   /*6ff: shl    $0x4,%rdi */
0x48, 0x01, 0xef,                         /*703: add    %rbp,%rdi */
0x48, 0x39, 0xf9,                         /*706: cmp    %rdi,%rcx */
0x0f, 0x83, 0x5d, 0x01, 0x00, 0x00,       /*709: jae    86c <op_enter+0x86c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*70f: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*714: shr    $0x7,%ecx */
0xf6, 0xc1, 0x1f,                         /*717: test   $0x1f,%cl */
0x0f, 0x84, 0x8b, 0x01, 0x00, 0x00,       /*71a: je     8ab <op_enter+0x8ab> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*720: mov    $0x0,%ecx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*725: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*72a: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*72d: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*730: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*735: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*738: and    $0x1f,%edi */
0x01, 0xf7,                               /*73b: add    %esi,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*73d: mov    $0x0,%esi */
0xc1, 0xee, 0x0c,                         /*742: shr    $0xc,%esi */
0x83, 0xe6, 0x01,                         /*745: and    $0x1,%esi */
0x8d, 0x74, 0x3e, 0x01,                   /*748: lea    0x1(%rsi,%rdi,1),%esi */
0xc1, 0xe9, 0x07,                         /*74c: shr    $0x7,%ecx */
0x48, 0x83, 0xe1, 0x1f,                   /*74f: and    $0x1f,%rcx */
0x48, 0x01, 0xce,                         /*753: add    %rcx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*756: shl    $0x4,%rsi */
0x48, 0x8d, 0x44, 0x06, 0xf0,             /*75a: lea    -0x10(%rsi,%rax,1),%rax */
0x48, 0x01, 0xca,                         /*75f: add    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*762: shl    $0x4,%rdx */
0x48, 0x8d, 0x54, 0x2a, 0xf0,             /*766: lea    -0x10(%rdx,%rbp,1),%rdx */
0x48, 0xf7, 0xd9,                         /*76b: neg    %rcx */
0x66, 0x90,                               /*76e: xchg   %ax,%ax */
0x48, 0x8b, 0x32,                         /*770: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*773: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x78, 0x08,                   /*777: mov    %rdi,0x8(%rax) */
0x48, 0x89, 0x30,                         /*77b: mov    %rsi,(%rax) */
0x48, 0x83, 0xc0, 0xf0,                   /*77e: add    $0xfffffffffffffff0,%rax */
0x48, 0x83, 0xc2, 0xf0,                   /*782: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc1,                         /*786: inc    %rcx */
0x75, 0xe5,                               /*789: jne    770 <op_enter+0x770> */
0xe9, 0x1b, 0x01, 0x00, 0x00,             /*78b: jmpq   8ab <op_enter+0x8ab> */
0x48, 0x39, 0xfa,                         /*790: cmp    %rdi,%rdx */
0x74, 0x26,                               /*793: je     7bb <op_enter+0x7bb> */
0x48, 0xf7, 0xd8,                         /*795: neg    %rax */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*798: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x0f,                         /*7a0: mov    (%rdi),%rcx */
0x48, 0x8b, 0x77, 0x08,                   /*7a3: mov    0x8(%rdi),%rsi */
0x48, 0x8d, 0x7f, 0x10,                   /*7a7: lea    0x10(%rdi),%rdi */
0x48, 0x89, 0x72, 0x08,                   /*7ab: mov    %rsi,0x8(%rdx) */
0x48, 0x89, 0x0a,                         /*7af: mov    %rcx,(%rdx) */
0x48, 0x8d, 0x52, 0x10,                   /*7b2: lea    0x10(%rdx),%rdx */
0x48, 0xff, 0xc0,                         /*7b6: inc    %rax */
0x75, 0xe5,                               /*7b9: jne    7a0 <op_enter+0x7a0> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7bb: mov    $0x0,%eax */
0x0f, 0xba, 0xe0, 0x0c,                   /*7c0: bt     $0xc,%eax */
0x73, 0x3e,                               /*7c4: jae    804 <op_enter+0x804> */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*7c6: mov    0x0(%rip),%rbx        # 7cd <op_enter+0x7cd> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7cd: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7d2: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*7d7: shr    $0xd,%ecx */
0x83, 0xe1, 0x1f,                         /*7da: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*7dd: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*7e0: and    $0x1f,%eax */
0x8d, 0x44, 0x08, 0x01,                   /*7e3: lea    0x1(%rax,%rcx,1),%eax */
0x48, 0x63, 0xe8,                         /*7e7: movslq %eax,%rbp */
0x48, 0xc1, 0xe5, 0x04,                   /*7ea: shl    $0x4,%rbp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*7ee: mov    0x0(%rip),%rdi        # 7f5 <op_enter+0x7f5> */
0x31, 0xf6,                               /*7f5: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7f7: callq  7fc <op_enter+0x7fc> */
0x48, 0x89, 0x04, 0x2b,                   /*7fc: mov    %rax,(%rbx,%rbp,1) */
0x89, 0x54, 0x2b, 0x08,                   /*800: mov    %edx,0x8(%rbx,%rbp,1) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*804: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*809: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*80e: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*811: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*814: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*817: and    $0x1f,%eax */
0x01, 0xc8,                               /*81a: add    %ecx,%eax */
0x41, 0x39, 0xc5,                         /*81c: cmp    %eax,%r13d */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*81f: mov    $0x0,%eax */
0x0f, 0x8c, 0x09, 0x01, 0x00, 0x00,       /*824: jl     933 <op_enter+0x933> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*82a: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*82f: shr    $0xd,%ecx */
0xf6, 0xc1, 0x1f,                         /*832: test   $0x1f,%cl */
0x0f, 0x84, 0xf8, 0x00, 0x00, 0x00,       /*835: je     933 <op_enter+0x933> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*83b: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*840: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*845: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*848: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*84b: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*84e: and    $0x1f,%eax */
0xf7, 0xd8,                               /*851: neg    %eax */
0x29, 0xc8,                               /*853: sub    %ecx,%eax */
0x41, 0x01, 0xc5,                         /*855: add    %eax,%r13d */
0x49, 0x63, 0xc5,                         /*858: movslq %r13d,%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*85b: mov    0x0(%rip),%rcx        # 862 <op_enter+0x862> */
0x0f, 0xb7, 0x44, 0x41, 0x70,             /*862: movzwl 0x70(%rcx,%rax,2),%eax */
0xe9, 0xbf, 0x00, 0x00, 0x00,             /*867: jmpq   92b <op_enter+0x92b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*86c: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*871: shr    $0x7,%eax */
0x48, 0x39, 0xf1,                         /*874: cmp    %rsi,%rcx */
0x74, 0x32,                               /*877: je     8ab <op_enter+0x8ab> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*879: mov    $0x0,%edx */
0xc1, 0xea, 0x07,                         /*87e: shr    $0x7,%edx */
0xf6, 0xc2, 0x1f,                         /*881: test   $0x1f,%dl */
0x74, 0x25,                               /*884: je     8ab <op_enter+0x8ab> */
0x48, 0x83, 0xe0, 0x1f,                   /*886: and    $0x1f,%rax */
0x48, 0xf7, 0xd8,                         /*88a: neg    %rax */
0x0f, 0x1f, 0x00,                         /*88d: nopl   (%rax) */
0x48, 0x8b, 0x16,                         /*890: mov    (%rsi),%rdx */
0x48, 0x8b, 0x7e, 0x08,                   /*893: mov    0x8(%rsi),%rdi */
0x48, 0x8d, 0x76, 0x10,                   /*897: lea    0x10(%rsi),%rsi */
0x48, 0x89, 0x79, 0x08,                   /*89b: mov    %rdi,0x8(%rcx) */
0x48, 0x89, 0x11,                         /*89f: mov    %rdx,(%rcx) */
0x48, 0x8d, 0x49, 0x10,                   /*8a2: lea    0x10(%rcx),%rcx */
0x48, 0xff, 0xc0,                         /*8a6: inc    %rax */
0x75, 0xe5,                               /*8a9: jne    890 <op_enter+0x890> */
0x49, 0x39, 0xec,                         /*8ab: cmp    %rbp,%r12 */
0x75, 0x52,                               /*8ae: jne    902 <op_enter+0x902> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*8b0: mov    0x0(%rip),%rax        # 8b7 <op_enter+0x8b7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8b7: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8bc: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*8c1: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*8c4: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*8c7: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*8cc: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*8cf: and    $0x1f,%esi */
0x01, 0xd6,                               /*8d2: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8d4: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*8d9: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*8dc: and    $0x1,%edx */
0x01, 0xf2,                               /*8df: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*8e1: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*8e4: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*8e7: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*8eb: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*8ee: shl    $0x4,%rcx */
0x49, 0x8b, 0x17,                         /*8f2: mov    (%r15),%rdx */
0x49, 0x8b, 0x77, 0x08,                   /*8f5: mov    0x8(%r15),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*8f9: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*8fe: mov    %rdx,(%rax,%rcx,1) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*902: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*907: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*90c: shr    $0xd,%ecx */
0xf6, 0xc1, 0x1f,                         /*90f: test   $0x1f,%cl */
0x7e, 0x1f,                               /*912: jle    933 <op_enter+0x933> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*914: mov    0x0(%rip),%rax        # 91b <op_enter+0x91b> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*91b: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*920: shr    $0xd,%ecx */
0x83, 0xe1, 0x1f,                         /*923: and    $0x1f,%ecx */
0x0f, 0xb7, 0x44, 0x48, 0x70,             /*926: movzwl 0x70(%rax,%rcx,2),%eax */
0x48, 0x8d, 0x04, 0x85, 0x00, 0x00, 0x00, 0x00,/*92b: lea    0x0(,%rax,4),%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*933: mov    0x0(%rip),%rcx        # 93a <op_enter+0x93a> */
0x48, 0x2b, 0x41, 0x08,                   /*93a: sub    0x8(%rcx),%rax */
0x48, 0x8b, 0x91, 0xa8, 0x00, 0x00, 0x00, /*93e: mov    0xa8(%rcx),%rdx */
0x48, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00,/*945: movabs $0x3fffffffc,%rsi */
0x48, 0x21, 0xc6,                         /*94f: and    %rax,%rsi */
0x8b, 0x04, 0x32,                         /*952: mov    (%rdx,%rsi,1),%eax */
0x48, 0x03, 0x81, 0xc0, 0x00, 0x00, 0x00, /*955: add    0xc0(%rcx),%rax */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*95c: mov    $0x0,%edi */
0xff, 0xd0,                               /*961: callq  *%rax */
0x48, 0x83, 0xc4, 0x18,                   /*963: add    $0x18,%rsp */
0x5b,                                     /*967: pop    %rbx */
0x41, 0x5c,                               /*968: pop    %r12 */
0x41, 0x5d,                               /*96a: pop    %r13 */
0x41, 0x5e,                               /*96c: pop    %r14 */
0x41, 0x5f,                               /*96e: pop    %r15 */
0x5d,                                     /*970: pop    %rbp */

};
static uint8_t op_enter__rodata[] = {

};


static uint8_t op_enter_method_m__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x57,                               /*e: push   %r15 */
0x41, 0x56,                               /*10: push   %r14 */
0x41, 0x54,                               /*12: push   %r12 */
0x53,                                     /*14: push   %rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*15: mov    0x0(%rip),%rdi        # 1c <op_enter_method_m+0x1c> */
0x48, 0x8b, 0x47, 0x18,                   /*1c: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*20: mov    0x20(%rax),%rax */
0x48, 0x63, 0x58, 0x40,                   /*24: movslq 0x40(%rax),%rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*28: mov    0x0(%rip),%r14        # 2f <op_enter_method_m+0x2f> */
0x48, 0x8d, 0x4b, 0x01,                   /*2f: lea    0x1(%rbx),%rcx */
0x48, 0x85, 0xdb,                         /*33: test   %rbx,%rbx */
0xb8, 0x02, 0x00, 0x00, 0x00,             /*36: mov    $0x2,%eax */
0x48, 0x0f, 0x49, 0xc1,                   /*3b: cmovns %rcx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*3f: shl    $0x4,%rax */
0x4d, 0x8d, 0x3c, 0x06,                   /*43: lea    (%r14,%rax,1),%r15 */
0x41, 0x8b, 0x54, 0x06, 0x08,             /*47: mov    0x8(%r14,%rax,1),%edx */
0x85, 0xd2,                               /*4c: test   %edx,%edx */
0x75, 0x0a,                               /*4e: jne    5a <op_enter_method_m+0x5a> */
0x41, 0x83, 0x3f, 0x00,                   /*50: cmpl   $0x0,(%r15) */
0x0f, 0x84, 0xe2, 0x01, 0x00, 0x00,       /*54: je     23c <op_enter_method_m+0x23c> */
0x83, 0xfa, 0x0d,                         /*5a: cmp    $0xd,%edx */
0x0f, 0x95, 0xc1,                         /*5d: setne  %cl */
0x84, 0xc9,                               /*60: test   %cl,%cl */
0x74, 0x25,                               /*62: je     89 <op_enter_method_m+0x89> */
0x4d, 0x8d, 0x64, 0x06, 0x08,             /*64: lea    0x8(%r14,%rax,1),%r12 */
0x49, 0x8b, 0x37,                         /*69: mov    (%r15),%rsi */
0xb9, 0x0d, 0x00, 0x00, 0x00,             /*6c: mov    $0xd,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*71: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*77: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7d: callq  82 <op_enter_method_m+0x82> */
0x49, 0x89, 0x07,                         /*82: mov    %rax,(%r15) */
0x41, 0x89, 0x14, 0x24,                   /*85: mov    %edx,(%r12) */
0x49, 0x83, 0xc6, 0x10,                   /*89: add    $0x10,%r14 */
0x85, 0xdb,                               /*8d: test   %ebx,%ebx */
0x78, 0x5c,                               /*8f: js     ed <op_enter_method_m+0xed> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*91: mov    $0x0,%eax */
0xc1, 0xe8, 0x12,                         /*96: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*99: and    $0x1f,%eax */
0x39, 0xc3,                               /*9c: cmp    %eax,%ebx */
0x4c, 0x89, 0xf3,                         /*9e: mov    %r14,%rbx */
0x7d, 0x68,                               /*a1: jge    10b <op_enter_method_m+0x10b> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*a3: mov    0x0(%rip),%rdi        # aa <op_enter_method_m+0xaa> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*aa: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*af: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*b2: and    $0x1f,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b5: callq  ba <op_enter_method_m+0xba> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*ba: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*bf: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c4: callq  c9 <op_enter_method_m+0xc9> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*c9: mov    0x0(%rip),%rdi        # d0 <op_enter_method_m+0xd0> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*d0: mov    0x0(%rip),%rsi        # d7 <op_enter_method_m+0xd7> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*d7: mov    0x0(%rip),%rcx        # de <op_enter_method_m+0xde> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*de: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*e3: jmpq   e8 <op_enter_method_m+0xe8> */
0xe9, 0x46, 0x01, 0x00, 0x00,             /*e8: jmpq   233 <op_enter_method_m+0x233> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*ed: mov    0x0(%rip),%rax        # f4 <op_enter_method_m+0xf4> */
0x48, 0x8b, 0x70, 0x10,                   /*f4: mov    0x10(%rax),%rsi */
0x48, 0x8b, 0x5e, 0x28,                   /*f8: mov    0x28(%rsi),%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*fc: mov    0x0(%rip),%rdi        # 103 <op_enter_method_m+0x103> */
0x8b, 0x50, 0x18,                         /*103: mov    0x18(%rax),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*106: callq  10b <op_enter_method_m+0x10b> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*10b: mov    0x0(%rip),%rax        # 112 <op_enter_method_m+0x112> */
0x48, 0x8b, 0x40, 0x18,                   /*112: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*116: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11a: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*11f: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*122: and    $0x1f,%ecx */
0x89, 0x48, 0x40,                         /*125: mov    %ecx,0x40(%rax) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*128: mov    0x0(%rip),%rax        # 12f <op_enter_method_m+0x12f> */
0xff, 0xc1,                               /*12f: inc    %ecx */
0x48, 0x63, 0xc9,                         /*131: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*134: shl    $0x4,%rcx */
0x49, 0x8b, 0x17,                         /*138: mov    (%r15),%rdx */
0x49, 0x8b, 0x77, 0x08,                   /*13b: mov    0x8(%r15),%rsi */
0x48, 0x89, 0x74, 0x08, 0x08,             /*13f: mov    %rsi,0x8(%rax,%rcx,1) */
0x48, 0x89, 0x14, 0x08,                   /*144: mov    %rdx,(%rax,%rcx,1) */
0x49, 0x39, 0xde,                         /*148: cmp    %rbx,%r14 */
0x0f, 0x84, 0xc3, 0x00, 0x00, 0x00,       /*14b: je     214 <op_enter_method_m+0x214> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*151: mov    0x0(%rip),%rax        # 158 <op_enter_method_m+0x158> */
0x48, 0x8d, 0x48, 0x10,                   /*158: lea    0x10(%rax),%rcx */
0x48, 0x39, 0xd9,                         /*15c: cmp    %rbx,%rcx */
0x76, 0x6c,                               /*15f: jbe    1cd <op_enter_method_m+0x1cd> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*161: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*166: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*169: and    $0x1f,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*16c: shl    $0x4,%rdx */
0x48, 0x01, 0xda,                         /*170: add    %rbx,%rdx */
0x48, 0x39, 0xd1,                         /*173: cmp    %rdx,%rcx */
0x73, 0x55,                               /*176: jae    1cd <op_enter_method_m+0x1cd> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*178: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*17d: shr    $0x12,%ecx */
0xf6, 0xc1, 0x1f,                         /*180: test   $0x1f,%cl */
0x0f, 0x84, 0x8b, 0x00, 0x00, 0x00,       /*183: je     214 <op_enter_method_m+0x214> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*189: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*18e: shr    $0x12,%ecx */
0x48, 0x83, 0xe1, 0x1f,                   /*191: and    $0x1f,%rcx */
0x48, 0x89, 0xca,                         /*195: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*198: shl    $0x4,%rdx */
0x48, 0x01, 0xd0,                         /*19c: add    %rdx,%rax */
0x48, 0x8d, 0x54, 0x1a, 0xf0,             /*19f: lea    -0x10(%rdx,%rbx,1),%rdx */
0x48, 0xf7, 0xd9,                         /*1a4: neg    %rcx */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1a7: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x32,                         /*1b0: mov    (%rdx),%rsi */
0x48, 0x8b, 0x7a, 0x08,                   /*1b3: mov    0x8(%rdx),%rdi */
0x48, 0x89, 0x78, 0x08,                   /*1b7: mov    %rdi,0x8(%rax) */
0x48, 0x89, 0x30,                         /*1bb: mov    %rsi,(%rax) */
0x48, 0x83, 0xc0, 0xf0,                   /*1be: add    $0xfffffffffffffff0,%rax */
0x48, 0x83, 0xc2, 0xf0,                   /*1c2: add    $0xfffffffffffffff0,%rdx */
0x48, 0xff, 0xc1,                         /*1c6: inc    %rcx */
0x75, 0xe5,                               /*1c9: jne    1b0 <op_enter_method_m+0x1b0> */
0xeb, 0x47,                               /*1cb: jmp    214 <op_enter_method_m+0x214> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1cd: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*1d2: shr    $0x12,%edx */
0x48, 0x39, 0xd9,                         /*1d5: cmp    %rbx,%rcx */
0x74, 0x3a,                               /*1d8: je     214 <op_enter_method_m+0x214> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1da: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*1df: shr    $0x12,%esi */
0x40, 0xf6, 0xc6, 0x1f,                   /*1e2: test   $0x1f,%sil */
0x74, 0x2c,                               /*1e6: je     214 <op_enter_method_m+0x214> */
0x48, 0x83, 0xe2, 0x1f,                   /*1e8: and    $0x1f,%rdx */
0x48, 0xf7, 0xda,                         /*1ec: neg    %rdx */
0x90,                                     /*1ef: nop */
0x48, 0x89, 0xce,                         /*1f0: mov    %rcx,%rsi */
0x48, 0x83, 0xc0, 0x20,                   /*1f3: add    $0x20,%rax */
0x48, 0x8b, 0x0b,                         /*1f7: mov    (%rbx),%rcx */
0x48, 0x8b, 0x7b, 0x08,                   /*1fa: mov    0x8(%rbx),%rdi */
0x48, 0x8d, 0x5b, 0x10,                   /*1fe: lea    0x10(%rbx),%rbx */
0x48, 0x89, 0x7e, 0x08,                   /*202: mov    %rdi,0x8(%rsi) */
0x48, 0x89, 0x0e,                         /*206: mov    %rcx,(%rsi) */
0x48, 0xff, 0xc2,                         /*209: inc    %rdx */
0x48, 0x89, 0xc1,                         /*20c: mov    %rax,%rcx */
0x48, 0x89, 0xf0,                         /*20f: mov    %rsi,%rax */
0x75, 0xdc,                               /*212: jne    1f0 <op_enter_method_m+0x1f0> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*214: mov    0x0(%rip),%rax        # 21b <op_enter_method_m+0x21b> */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*21b: mov    0xa8(%rax),%rcx */
0x8b, 0x49, 0x04,                         /*222: mov    0x4(%rcx),%ecx */
0x48, 0x03, 0x88, 0xc0, 0x00, 0x00, 0x00, /*225: add    0xc0(%rax),%rcx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*22c: mov    $0x0,%edi */
0xff, 0xd1,                               /*231: callq  *%rcx */
0x5b,                                     /*233: pop    %rbx */
0x41, 0x5c,                               /*234: pop    %r12 */
0x41, 0x5e,                               /*236: pop    %r14 */
0x41, 0x5f,                               /*238: pop    %r15 */
0xeb, 0x07,                               /*23a: jmp    243 <op_enter_method_m+0x243> */
0x31, 0xc9,                               /*23c: xor    %ecx,%ecx */
0xe9, 0x1d, 0xfe, 0xff, 0xff,             /*23e: jmpq   60 <op_enter_method_m+0x60> */

};
static uint8_t op_enter_method_m__rodata[] = {

};


static uint8_t op_karg__text[] = {

};
static uint8_t op_karg__rodata[] = {

};


static uint8_t op_kdict__text[] = {

};
static uint8_t op_kdict__rodata[] = {

};


static uint8_t op_return__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x48, 0x83, 0xe4, 0xf0,                   /*4: and    $0xfffffffffffffff0,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%esi */
0x31, 0xd2,                               /*12: xor    %edx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*19: callq  1e <op_return+0x1e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1e: mov    0x0(%rip),%rax        # 25 <op_return+0x25> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*25: mov    0x0(%rip),%rcx        # 2c <op_return+0x2c> */
0x48, 0x2b, 0x41, 0x08,                   /*2c: sub    0x8(%rcx),%rax */
0x48, 0x8b, 0x91, 0xa8, 0x00, 0x00, 0x00, /*30: mov    0xa8(%rcx),%rdx */
0x48, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00,/*37: movabs $0x3fffffffc,%rsi */
0x48, 0x21, 0xc6,                         /*41: and    %rax,%rsi */
0x8b, 0x04, 0x32,                         /*44: mov    (%rdx,%rsi,1),%eax */
0x48, 0x03, 0x81, 0xc0, 0x00, 0x00, 0x00, /*47: add    0xc0(%rcx),%rax */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*4e: mov    $0x0,%edi */
0xff, 0xe0,                               /*53: jmpq   *%rax */

};
static uint8_t op_return__rodata[] = {

};


static uint8_t op_break__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x48, 0x83, 0xe4, 0xf0,                   /*4: and    $0xfffffffffffffff0,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_break+0x21> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*21: mov    0x0(%rip),%rax        # 28 <op_break+0x28> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*28: mov    0x0(%rip),%rcx        # 2f <op_break+0x2f> */
0x48, 0x2b, 0x41, 0x08,                   /*2f: sub    0x8(%rcx),%rax */
0x48, 0x8b, 0x91, 0xa8, 0x00, 0x00, 0x00, /*33: mov    0xa8(%rcx),%rdx */
0x48, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00,/*3a: movabs $0x3fffffffc,%rsi */
0x48, 0x21, 0xc6,                         /*44: and    %rax,%rsi */
0x8b, 0x04, 0x32,                         /*47: mov    (%rdx,%rsi,1),%eax */
0x48, 0x03, 0x81, 0xc0, 0x00, 0x00, 0x00, /*4a: add    0xc0(%rcx),%rax */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%edi */
0xff, 0xe0,                               /*56: jmpq   *%rax */

};
static uint8_t op_break__rodata[] = {

};


static uint8_t op_tailcall__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x55,                               /*13: push   %r13 */
0x41, 0x54,                               /*15: push   %r12 */
0x53,                                     /*17: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*18: sub    $0x18,%rsp */
0x4c, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1c: mov    0x0(%rip),%r15        # 23 <op_tailcall+0x23> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*23: mov    0x0(%rip),%rax        # 2a <op_tailcall+0x2a> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2a: mov    $0x0,%ecx */
0x44, 0x8b, 0x24, 0x88,                   /*2f: mov    (%rax,%rcx,4),%r12d */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*33: mov    0x0(%rip),%rax        # 3a <op_tailcall+0x3a> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3a: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*3f: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*42: shl    $0x4,%rcx */
0x48, 0x8b, 0x1c, 0x08,                   /*46: mov    (%rax,%rcx,1),%rbx */
0x8b, 0x6c, 0x08, 0x08,                   /*4a: mov    0x8(%rax,%rcx,1),%ebp */
0x31, 0xf6,                               /*4e: xor    %esi,%esi */
0x83, 0xfd, 0x13,                         /*50: cmp    $0x13,%ebp */
0x7f, 0x1f,                               /*53: jg     74 <op_tailcall+0x74> */
0x89, 0xe8,                               /*55: mov    %ebp,%eax */
0x83, 0xfd, 0x07,                         /*57: cmp    $0x7,%ebp */
0x77, 0x1d,                               /*5a: ja     79 <op_tailcall+0x79> */
0xff, 0x24, 0xc5, 0x00, 0x00, 0x00, 0x00, /*5c: jmpq   *0x0(,%rax,8) */
0x85, 0xdb,                               /*63: test   %ebx,%ebx */
0x0f, 0x84, 0x26, 0x03, 0x00, 0x00,       /*65: je     391 <op_tailcall+0x391> */
0x49, 0x8b, 0xb7, 0x90, 0x00, 0x00, 0x00, /*6b: mov    0x90(%r15),%rsi */
0xeb, 0x09,                               /*72: jmp    7d <op_tailcall+0x7d> */
0x83, 0xfd, 0x14,                         /*74: cmp    $0x14,%ebp */
0x74, 0x04,                               /*77: je     7d <op_tailcall+0x7d> */
0x48, 0x8b, 0x73, 0x08,                   /*79: mov    0x8(%rbx),%rsi */
0x48, 0x89, 0x74, 0x24, 0x10,             /*7d: mov    %rsi,0x10(%rsp) */
0x48, 0x8d, 0x54, 0x24, 0x10,             /*82: lea    0x10(%rsp),%rdx */
0x4c, 0x89, 0xff,                         /*87: mov    %r15,%rdi */
0x44, 0x89, 0xe1,                         /*8a: mov    %r12d,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8d: callq  92 <op_tailcall+0x92> */
0x49, 0x89, 0xc6,                         /*92: mov    %rax,%r14 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*95: mov    $0x0,%ecx */
0x4d, 0x85, 0xf6,                         /*9a: test   %r14,%r14 */
0x74, 0x11,                               /*9d: je     b0 <op_tailcall+0xb0> */
0x89, 0x6c, 0x24, 0x04,                   /*9f: mov    %ebp,0x4(%rsp) */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*a3: mov    %rbx,0x8(%rsp) */
0x45, 0x89, 0xe5,                         /*a8: mov    %r12d,%r13d */
0xe9, 0x70, 0x01, 0x00, 0x00,             /*ab: jmpq   220 <op_tailcall+0x220> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*b0: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*b5: mov    $0xe,%edx */
0x4c, 0x89, 0xff,                         /*ba: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*bd: callq  c2 <op_tailcall+0xc2> */
0x41, 0x89, 0xc5,                         /*c2: mov    %eax,%r13d */
0x48, 0x8d, 0x74, 0x24, 0x10,             /*c5: lea    0x10(%rsp),%rsi */
0x4c, 0x89, 0xff,                         /*ca: mov    %r15,%rdi */
0x44, 0x89, 0xea,                         /*cd: mov    %r13d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*d0: callq  d5 <op_tailcall+0xd5> */
0x49, 0x89, 0xc6,                         /*d5: mov    %rax,%r14 */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*d8: mov    0x0(%rip),%rax        # df <op_tailcall+0xdf> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*df: mov    $0x0,%ecx */
0x83, 0xf9, 0x7f,                         /*e4: cmp    $0x7f,%ecx */
0x75, 0x3a,                               /*e7: jne    123 <op_tailcall+0x123> */
0x89, 0x6c, 0x24, 0x04,                   /*e9: mov    %ebp,0x4(%rsp) */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*ed: mov    %rbx,0x8(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f2: mov    $0x0,%ecx */
0xff, 0xc1,                               /*f7: inc    %ecx */
0x48, 0x63, 0xc9,                         /*f9: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*fc: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x08,                   /*100: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*104: mov    0x8(%rax,%rcx,1),%edx */
0x41, 0xb8, 0x04, 0x00, 0x00, 0x00,       /*108: mov    $0x4,%r8d */
0x4c, 0x89, 0xff,                         /*10e: mov    %r15,%rdi */
0x4c, 0x89, 0xe1,                         /*111: mov    %r12,%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*114: callq  119 <op_tailcall+0x119> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*119: mov    $0x0,%ecx */
0xe9, 0xfd, 0x00, 0x00, 0x00,             /*11e: jmpq   220 <op_tailcall+0x220> */
0x89, 0x6c, 0x24, 0x04,                   /*123: mov    %ebp,0x4(%rsp) */
0x48, 0x89, 0x5c, 0x24, 0x08,             /*127: mov    %rbx,0x8(%rsp) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*131: movslq %ecx,%rcx */
0x48, 0x8d, 0x51, 0x01,                   /*134: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*138: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*13c: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*13f: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*142: mov    $0x0,%edi */
0xff, 0xc7,                               /*147: inc    %edi */
0x48, 0x63, 0xff,                         /*149: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*14c: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*151: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*154: setge  %cl */
0x08, 0xd1,                               /*157: or     %dl,%cl */
0x74, 0x4f,                               /*159: je     1aa <op_tailcall+0x1aa> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15b: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*160: cmp    $0xffffffff,%ecx */
0x0f, 0x84, 0x8f, 0x00, 0x00, 0x00,       /*163: je     1f8 <op_tailcall+0x1f8> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*169: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*16e: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*171: shl    $0x4,%rcx */
0x48, 0x8d, 0x44, 0x01, 0x20,             /*175: lea    0x20(%rcx,%rax,1),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17a: mov    $0x0,%ecx */
0xff, 0xc1,                               /*17f: inc    %ecx */
0x48, 0x63, 0xc9,                         /*181: movslq %ecx,%rcx */
0x48, 0xf7, 0xd9,                         /*184: neg    %rcx */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*187: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x50, 0xf0,                   /*190: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*194: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*198: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*19c: mov    %rdx,(%rax) */
0x48, 0x83, 0xc0, 0x10,                   /*19f: add    $0x10,%rax */
0x48, 0xff, 0xc1,                         /*1a3: inc    %rcx */
0x75, 0xe8,                               /*1a6: jne    190 <op_tailcall+0x190> */
0xeb, 0x4e,                               /*1a8: jmp    1f8 <op_tailcall+0x1f8> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1aa: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*1af: cmp    $0xffffffff,%ecx */
0x74, 0x44,                               /*1b2: je     1f8 <op_tailcall+0x1f8> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b4: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*1b9: movslq %ecx,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1bc: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1c1: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1c3: movslq %ecx,%rcx */
0x48, 0x01, 0xca,                         /*1c6: add    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*1c9: shl    $0x4,%rdx */
0x48, 0x8d, 0x44, 0x02, 0x10,             /*1cd: lea    0x10(%rdx,%rax,1),%rax */
0x48, 0xf7, 0xd9,                         /*1d2: neg    %rcx */
0x90,                                     /*1d5: nop */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1d6: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x50, 0xf0,                   /*1e0: mov    -0x10(%rax),%rdx */
0x48, 0x8b, 0x70, 0xf8,                   /*1e4: mov    -0x8(%rax),%rsi */
0x48, 0x89, 0x70, 0x08,                   /*1e8: mov    %rsi,0x8(%rax) */
0x48, 0x89, 0x10,                         /*1ec: mov    %rdx,(%rax) */
0x48, 0x8d, 0x40, 0xf0,                   /*1ef: lea    -0x10(%rax),%rax */
0x48, 0xff, 0xc1,                         /*1f3: inc    %rcx */
0x75, 0xe8,                               /*1f6: jne    1e0 <op_tailcall+0x1e0> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1f8: mov    0x0(%rip),%rax        # 1ff <op_tailcall+0x1ff> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1ff: mov    $0x0,%ecx */
0xff, 0xc1,                               /*204: inc    %ecx */
0x48, 0x63, 0xc9,                         /*206: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*209: shl    $0x4,%rcx */
0x4c, 0x89, 0x24, 0x08,                   /*20d: mov    %r12,(%rax,%rcx,1) */
0xc7, 0x44, 0x08, 0x08, 0x04, 0x00, 0x00, 0x00,/*211: movl   $0x4,0x8(%rax,%rcx,1) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*219: mov    $0x0,%ecx */
0xff, 0xc1,                               /*21e: inc    %ecx */
0x49, 0x8b, 0x47, 0x18,                   /*220: mov    0x18(%r15),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*224: mov    0x20(%rax),%rax */
0x44, 0x89, 0x28,                         /*228: mov    %r13d,(%rax) */
0x48, 0x8b, 0x54, 0x24, 0x10,             /*22b: mov    0x10(%rsp),%rdx */
0x48, 0x89, 0x50, 0x48,                   /*230: mov    %rdx,0x48(%rax) */
0x83, 0xf9, 0x7f,                         /*234: cmp    $0x7f,%ecx */
0xbd, 0xff, 0xff, 0xff, 0xff,             /*237: mov    $0xffffffff,%ebp */
0x0f, 0x45, 0xe9,                         /*23c: cmovne %ecx,%ebp */
0x89, 0x68, 0x40,                         /*23f: mov    %ebp,0x40(%rax) */
0x49, 0x8b, 0x4f, 0x18,                   /*242: mov    0x18(%r15),%rcx */
0x48, 0x8b, 0x51, 0x08,                   /*246: mov    0x8(%rcx),%rdx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*24a: mov    0x0(%rip),%rdi        # 251 <op_tailcall+0x251> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*251: mov    $0x0,%ecx */
0x48, 0x63, 0xf1,                         /*256: movslq %ecx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*259: shl    $0x4,%rsi */
0x48, 0x01, 0xfe,                         /*25d: add    %rdi,%rsi */
0xff, 0xc5,                               /*260: inc    %ebp */
0x48, 0x63, 0xcd,                         /*262: movslq %ebp,%rcx */
0x48, 0x39, 0xf2,                         /*265: cmp    %rsi,%rdx */
0x76, 0x63,                               /*268: jbe    2cd <op_tailcall+0x2cd> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*26a: mov    $0x0,%ebx */
0x48, 0x63, 0xdb,                         /*26f: movslq %ebx,%rbx */
0x48, 0x01, 0xcb,                         /*272: add    %rcx,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*275: shl    $0x4,%rbx */
0x48, 0x01, 0xfb,                         /*279: add    %rdi,%rbx */
0x48, 0x39, 0xda,                         /*27c: cmp    %rbx,%rdx */
0x73, 0x4c,                               /*27f: jae    2cd <op_tailcall+0x2cd> */
0x85, 0xed,                               /*281: test   %ebp,%ebp */
0x74, 0x76,                               /*283: je     2fb <op_tailcall+0x2fb> */
0x48, 0x89, 0xce,                         /*285: mov    %rcx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*288: shl    $0x4,%rsi */
0x48, 0x8d, 0x54, 0x16, 0xf0,             /*28c: lea    -0x10(%rsi,%rdx,1),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*291: mov    $0x0,%esi */
0x48, 0x63, 0xf6,                         /*296: movslq %esi,%rsi */
0x48, 0x01, 0xce,                         /*299: add    %rcx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*29c: shl    $0x4,%rsi */
0x48, 0x8d, 0x74, 0x3e, 0xf0,             /*2a0: lea    -0x10(%rsi,%rdi,1),%rsi */
0x48, 0xf7, 0xd9,                         /*2a5: neg    %rcx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*2a8: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x3e,                         /*2b0: mov    (%rsi),%rdi */
0x48, 0x8b, 0x6e, 0x08,                   /*2b3: mov    0x8(%rsi),%rbp */
0x48, 0x89, 0x6a, 0x08,                   /*2b7: mov    %rbp,0x8(%rdx) */
0x48, 0x89, 0x3a,                         /*2bb: mov    %rdi,(%rdx) */
0x48, 0x83, 0xc2, 0xf0,                   /*2be: add    $0xfffffffffffffff0,%rdx */
0x48, 0x83, 0xc6, 0xf0,                   /*2c2: add    $0xfffffffffffffff0,%rsi */
0x48, 0xff, 0xc1,                         /*2c6: inc    %rcx */
0x75, 0xe5,                               /*2c9: jne    2b0 <op_tailcall+0x2b0> */
0xeb, 0x2e,                               /*2cb: jmp    2fb <op_tailcall+0x2fb> */
0x48, 0x39, 0xf2,                         /*2cd: cmp    %rsi,%rdx */
0x74, 0x29,                               /*2d0: je     2fb <op_tailcall+0x2fb> */
0x85, 0xed,                               /*2d2: test   %ebp,%ebp */
0x74, 0x25,                               /*2d4: je     2fb <op_tailcall+0x2fb> */
0x48, 0xf7, 0xd9,                         /*2d6: neg    %rcx */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*2d9: nopl   0x0(%rax) */
0x48, 0x8b, 0x3e,                         /*2e0: mov    (%rsi),%rdi */
0x48, 0x8b, 0x6e, 0x08,                   /*2e3: mov    0x8(%rsi),%rbp */
0x48, 0x8d, 0x76, 0x10,                   /*2e7: lea    0x10(%rsi),%rsi */
0x48, 0x89, 0x6a, 0x08,                   /*2eb: mov    %rbp,0x8(%rdx) */
0x48, 0x89, 0x3a,                         /*2ef: mov    %rdi,(%rdx) */
0x48, 0x8d, 0x52, 0x10,                   /*2f2: lea    0x10(%rdx),%rdx */
0x48, 0xff, 0xc1,                         /*2f6: inc    %rcx */
0x75, 0xe5,                               /*2f9: jne    2e0 <op_tailcall+0x2e0> */
0x41, 0xf6, 0x46, 0x02, 0x04,             /*2fb: testb  $0x4,0x2(%r14) */
0x0f, 0x84, 0x97, 0x00, 0x00, 0x00,       /*300: je     39d <op_tailcall+0x39d> */
0x49, 0x8b, 0x47, 0x18,                   /*306: mov    0x18(%r15),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*30a: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xff,                         /*30e: mov    %r15,%rdi */
0x48, 0x8b, 0x74, 0x24, 0x08,             /*311: mov    0x8(%rsp),%rsi */
0x8b, 0x54, 0x24, 0x04,                   /*316: mov    0x4(%rsp),%edx */
0x41, 0xff, 0x56, 0x18,                   /*31a: callq  *0x18(%r14) */
0x48, 0x89, 0x03,                         /*31e: mov    %rax,(%rbx) */
0x89, 0x53, 0x08,                         /*321: mov    %edx,0x8(%rbx) */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*324: mov    0x0(%rip),%esi        # 32a <op_tailcall+0x32a> */
0x4c, 0x89, 0xff,                         /*32a: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*32d: callq  332 <op_tailcall+0x332> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*332: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*337: mov    $0x0,%esi */
0x31, 0xd2,                               /*33c: xor    %edx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*33e: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*343: callq  348 <op_tailcall+0x348> */
0x48, 0x83, 0xc4, 0x18,                   /*348: add    $0x18,%rsp */
0x5b,                                     /*34c: pop    %rbx */
0x41, 0x5c,                               /*34d: pop    %r12 */
0x41, 0x5d,                               /*34f: pop    %r13 */
0x41, 0x5e,                               /*351: pop    %r14 */
0x41, 0x5f,                               /*353: pop    %r15 */
0x5d,                                     /*355: pop    %rbp */
0xe9, 0xbd, 0x00, 0x00, 0x00,             /*356: jmpq   418 <op_tailcall+0x418> */
0x49, 0x8b, 0xb7, 0x88, 0x00, 0x00, 0x00, /*35b: mov    0x88(%r15),%rsi */
0xe9, 0x16, 0xfd, 0xff, 0xff,             /*362: jmpq   7d <op_tailcall+0x7d> */
0x49, 0x8b, 0xb7, 0x80, 0x00, 0x00, 0x00, /*367: mov    0x80(%r15),%rsi */
0xe9, 0x0a, 0xfd, 0xff, 0xff,             /*36e: jmpq   7d <op_tailcall+0x7d> */
0x49, 0x8b, 0xb7, 0xa0, 0x00, 0x00, 0x00, /*373: mov    0xa0(%r15),%rsi */
0xe9, 0xfe, 0xfc, 0xff, 0xff,             /*37a: jmpq   7d <op_tailcall+0x7d> */
0x49, 0x8b, 0x77, 0x78,                   /*37f: mov    0x78(%r15),%rsi */
0xe9, 0xf5, 0xfc, 0xff, 0xff,             /*383: jmpq   7d <op_tailcall+0x7d> */
0x49, 0x8b, 0x77, 0x40,                   /*388: mov    0x40(%r15),%rsi */
0xe9, 0xec, 0xfc, 0xff, 0xff,             /*38c: jmpq   7d <op_tailcall+0x7d> */
0x49, 0x8b, 0xb7, 0x98, 0x00, 0x00, 0x00, /*391: mov    0x98(%r15),%rsi */
0xe9, 0xe0, 0xfc, 0xff, 0xff,             /*398: jmpq   7d <op_tailcall+0x7d> */
0x49, 0x8b, 0x4e, 0x18,                   /*39d: mov    0x18(%r14),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*3a1: mov    %rcx,0x0(%rip)        # 3a8 <op_tailcall+0x3a8> */
0x48, 0x8b, 0x51, 0x10,                   /*3a8: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*3ac: mov    %rdx,0x0(%rip)        # 3b3 <op_tailcall+0x3b3> */
0x48, 0x8b, 0x51, 0x18,                   /*3b3: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*3b7: mov    %rdx,0x0(%rip)        # 3be <op_tailcall+0x3be> */
0x8b, 0x50, 0x40,                         /*3be: mov    0x40(%rax),%edx */
0x0f, 0xb7, 0x71, 0x02,                   /*3c1: movzwl 0x2(%rcx),%esi */
0x85, 0xd2,                               /*3c5: test   %edx,%edx */
0x79, 0x12,                               /*3c7: jns    3db <op_tailcall+0x3db> */
0x83, 0xfe, 0x03,                         /*3c9: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*3cc: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*3d1: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*3d4: mov    $0x3,%edx */
0xeb, 0x03,                               /*3d9: jmp    3de <op_tailcall+0x3de> */
0x83, 0xc2, 0x02,                         /*3db: add    $0x2,%edx */
0x4c, 0x89, 0xff,                         /*3de: mov    %r15,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3e1: callq  3e6 <op_tailcall+0x3e6> */
0x49, 0x8b, 0x47, 0x18,                   /*3e6: mov    0x18(%r15),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3ea: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*3ee: mov    %rax,0x0(%rip)        # 3f5 <op_tailcall+0x3f5> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3f5: mov    0x0(%rip),%rsi        # 3fc <op_tailcall+0x3fc> */
0x48, 0x8b, 0x4e, 0x08,                   /*3fc: mov    0x8(%rsi),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*400: mov    %rcx,0x0(%rip)        # 407 <op_tailcall+0x407> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*407: mov    0x0(%rip),%rdi        # 40e <op_tailcall+0x40e> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*40e: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*413: jmpq   418 <op_tailcall+0x418> */

};
static uint8_t op_tailcall__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};


static uint8_t op_blkpush__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x48, 0x89, 0xe5,                         /*f: mov    %rsp,%rbp */
0x48, 0x83, 0xe4, 0xf0,                   /*12: and    $0xfffffffffffffff0,%rsp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0xf6, 0xc1, 0x0f,                         /*20: test   $0xf,%cl */
0x0f, 0x84, 0x8c, 0x00, 0x00, 0x00,       /*23: je     b5 <op_blkpush+0xb5> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*29: mov    0x0(%rip),%rdi        # 30 <op_blkpush+0x30> */
0x48, 0x8b, 0x47, 0x18,                   /*30: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*34: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*38: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x28,                   /*3c: mov    0x28(%rax),%rax */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*40: mov    $0x0,%esi */
0x83, 0xe6, 0x0f,                         /*45: and    $0xf,%esi */
0x48, 0x85, 0xc0,                         /*48: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*4b: sete   %cl */
0x83, 0xfe, 0x01,                         /*4e: cmp    $0x1,%esi */
0x74, 0x20,                               /*51: je     73 <op_blkpush+0x73> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*53: mov    $0x1,%edx */
0x29, 0xf2,                               /*58: sub    %esi,%edx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*5a: nopw   0x0(%rax,%rax,1) */
0xf6, 0xc1, 0x01,                         /*60: test   $0x1,%cl */
0x75, 0x12,                               /*63: jne    77 <op_blkpush+0x77> */
0x48, 0x8b, 0x40, 0x08,                   /*65: mov    0x8(%rax),%rax */
0x48, 0x85, 0xc0,                         /*69: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*6c: sete   %cl */
0xff, 0xc2,                               /*6f: inc    %edx */
0x75, 0xed,                               /*71: jne    60 <op_blkpush+0x60> */
0x84, 0xc9,                               /*73: test   %cl,%cl */
0x74, 0x3a,                               /*75: je     b1 <op_blkpush+0xb1> */
0xbe, 0x02, 0x00, 0x00, 0x00,             /*77: mov    $0x2,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c: callq  81 <op_blkpush+0x81> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*81: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*86: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8b: callq  90 <op_blkpush+0x90> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*90: mov    0x0(%rip),%rdi        # 97 <op_blkpush+0x97> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*97: mov    0x0(%rip),%rsi        # 9e <op_blkpush+0x9e> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*9e: mov    0x0(%rip),%rcx        # a5 <op_blkpush+0xa5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a5: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*aa: jmpq   af <op_blkpush+0xaf> */
0xeb, 0x59,                               /*af: jmp    10a <op_blkpush+0x10a> */
0x48, 0x83, 0xc0, 0x18,                   /*b1: add    $0x18,%rax */
0x48, 0x8b, 0x00,                         /*b5: mov    (%rax),%rax */
0x4c, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*b8: mov    0x0(%rip),%r8        # bf <op_blkpush+0xbf> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*bf: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*c4: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*c7: shl    $0x4,%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*cb: mov    $0x0,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*d0: mov    $0x0,%edi */
0xc1, 0xef, 0x09,                         /*d5: shr    $0x9,%edi */
0x83, 0xe7, 0x01,                         /*d8: and    $0x1,%edi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*db: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0a,                         /*e0: shr    $0xa,%ecx */
0x83, 0xe1, 0x3f,                         /*e3: and    $0x3f,%ecx */
0x01, 0xf9,                               /*e6: add    %edi,%ecx */
0xc1, 0xee, 0x04,                         /*e8: shr    $0x4,%esi */
0x83, 0xe6, 0x1f,                         /*eb: and    $0x1f,%esi */
0x01, 0xce,                               /*ee: add    %ecx,%esi */
0x48, 0x63, 0xce,                         /*f0: movslq %esi,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f3: shl    $0x4,%rcx */
0x48, 0x8b, 0x74, 0x01, 0x10,             /*f7: mov    0x10(%rcx,%rax,1),%rsi */
0x48, 0x8b, 0x44, 0x01, 0x18,             /*fc: mov    0x18(%rcx,%rax,1),%rax */
0x49, 0x89, 0x44, 0x10, 0x08,             /*101: mov    %rax,0x8(%r8,%rdx,1) */
0x49, 0x89, 0x34, 0x10,                   /*106: mov    %rsi,(%r8,%rdx,1) */
0x48, 0x89, 0xec,                         /*10a: mov    %rbp,%rsp */
0x5d,                                     /*10d: pop    %rbp */

};
static uint8_t op_blkpush__rodata[] = {

};


static uint8_t op_add__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x57,                               /*e: push   %r15 */
0x41, 0x56,                               /*10: push   %r14 */
0x41, 0x54,                               /*12: push   %r12 */
0x53,                                     /*14: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*15: mov    0x0(%rip),%r14        # 1c <op_add+0x1c> */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1c: mov    0x0(%rip),%rbx        # 23 <op_add+0x23> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*23: mov    $0x0,%eax */
0x48, 0x98,                               /*28: cltq */
0x48, 0x89, 0xc1,                         /*2a: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*2d: shl    $0x4,%rcx */
0x4c, 0x8d, 0x7c, 0x0b, 0x08,             /*31: lea    0x8(%rbx,%rcx,1),%r15 */
0x8b, 0x54, 0x0b, 0x08,                   /*36: mov    0x8(%rbx,%rcx,1),%edx */
0x89, 0xd1,                               /*3a: mov    %edx,%ecx */
0xc1, 0xe1, 0x08,                         /*3c: shl    $0x8,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*3f: and    $0xffff00,%ecx */
0xff, 0xc0,                               /*45: inc    %eax */
0x48, 0x98,                               /*47: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*49: shl    $0x4,%rax */
0x44, 0x8b, 0x44, 0x03, 0x08,             /*4d: mov    0x8(%rbx,%rax,1),%r8d */
0x41, 0x0f, 0xb6, 0xc0,                   /*52: movzbl %r8b,%eax */
0x09, 0xc8,                               /*56: or     %ecx,%eax */
0x3d, 0x0f, 0x10, 0x00, 0x00,             /*58: cmp    $0x100f,%eax */
0x7f, 0x52,                               /*5d: jg     b1 <op_add+0xb1> */
0x3d, 0x02, 0x06, 0x00, 0x00,             /*5f: cmp    $0x602,%eax */
0x0f, 0x8f, 0x84, 0x00, 0x00, 0x00,       /*64: jg     ee <op_add+0xee> */
0x3d, 0x03, 0x03, 0x00, 0x00,             /*6a: cmp    $0x303,%eax */
0x0f, 0x85, 0xaa, 0x00, 0x00, 0x00,       /*6f: jne    11f <op_add+0x11f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*75: mov    $0x0,%eax */
0x48, 0x63, 0xc8,                         /*7a: movslq %eax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*7d: shl    $0x4,%rcx */
0x8b, 0x14, 0x0b,                         /*81: mov    (%rbx,%rcx,1),%edx */
0x8b, 0x74, 0x0b, 0x10,                   /*84: mov    0x10(%rbx,%rcx,1),%esi */
0x89, 0xd0,                               /*88: mov    %edx,%eax */
0x01, 0xf0,                               /*8a: add    %esi,%eax */
0x0f, 0x81, 0x39, 0x01, 0x00, 0x00,       /*8c: jno    1cb <op_add+0x1cb> */
0x48, 0x01, 0xcb,                         /*92: add    %rcx,%rbx */
0x41, 0xc7, 0x07, 0x06, 0x00, 0x00, 0x00, /*95: movl   $0x6,(%r15) */
0xf2, 0x0f, 0x2a, 0xc2,                   /*9c: cvtsi2sd %edx,%xmm0 */
0xf2, 0x0f, 0x2a, 0xce,                   /*a0: cvtsi2sd %esi,%xmm1 */
0xf2, 0x0f, 0x58, 0xc8,                   /*a4: addsd  %xmm0,%xmm1 */
0xf2, 0x0f, 0x11, 0x0b,                   /*a8: movsd  %xmm1,(%rbx) */
0xe9, 0x30, 0x01, 0x00, 0x00,             /*ac: jmpq   1e1 <op_add+0x1e1> */
0x3d, 0x10, 0x10, 0x00, 0x00,             /*b1: cmp    $0x1010,%eax */
0x0f, 0x85, 0xc9, 0x00, 0x00, 0x00,       /*b6: jne    185 <op_add+0x185> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*bc: mov    $0x0,%eax */
0x48, 0x98,                               /*c1: cltq */
0x49, 0x89, 0xc4,                         /*c3: mov    %rax,%r12 */
0x49, 0xc1, 0xe4, 0x04,                   /*c6: shl    $0x4,%r12 */
0xff, 0xc0,                               /*ca: inc    %eax */
0x48, 0x98,                               /*cc: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*ce: shl    $0x4,%rax */
0x4a, 0x8b, 0x34, 0x23,                   /*d2: mov    (%rbx,%r12,1),%rsi */
0x48, 0x8b, 0x0c, 0x03,                   /*d6: mov    (%rbx,%rax,1),%rcx */
0x4c, 0x89, 0xf7,                         /*da: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*dd: callq  e2 <op_add+0xe2> */
0x4a, 0x89, 0x04, 0x23,                   /*e2: mov    %rax,(%rbx,%r12,1) */
0x41, 0x89, 0x17,                         /*e6: mov    %edx,(%r15) */
0xe9, 0xf3, 0x00, 0x00, 0x00,             /*e9: jmpq   1e1 <op_add+0x1e1> */
0x3d, 0x03, 0x06, 0x00, 0x00,             /*ee: cmp    $0x603,%eax */
0x75, 0x62,                               /*f3: jne    157 <op_add+0x157> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f5: mov    $0x0,%eax */
0x48, 0x98,                               /*fa: cltq */
0x48, 0x89, 0xc1,                         /*fc: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*ff: shl    $0x4,%rcx */
0xff, 0xc0,                               /*103: inc    %eax */
0x48, 0x98,                               /*105: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*107: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x03,             /*10b: cvtsi2sdl (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x58, 0x04, 0x0b,             /*110: addsd  (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*115: movsd  %xmm0,(%rbx,%rcx,1) */
0xe9, 0xc2, 0x00, 0x00, 0x00,             /*11a: jmpq   1e1 <op_add+0x1e1> */
0x3d, 0x06, 0x03, 0x00, 0x00,             /*11f: cmp    $0x306,%eax */
0x75, 0x5f,                               /*124: jne    185 <op_add+0x185> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*126: mov    $0x0,%eax */
0x48, 0x98,                               /*12b: cltq */
0x48, 0x89, 0xc1,                         /*12d: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*130: shl    $0x4,%rcx */
0xff, 0xc0,                               /*134: inc    %eax */
0x48, 0x98,                               /*136: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*138: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x0b,             /*13c: cvtsi2sdl (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x58, 0x04, 0x03,             /*141: addsd  (%rbx,%rax,1),%xmm0 */
0x41, 0xc7, 0x07, 0x06, 0x00, 0x00, 0x00, /*146: movl   $0x6,(%r15) */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*14d: movsd  %xmm0,(%rbx,%rcx,1) */
0xe9, 0x8a, 0x00, 0x00, 0x00,             /*152: jmpq   1e1 <op_add+0x1e1> */
0x3d, 0x06, 0x06, 0x00, 0x00,             /*157: cmp    $0x606,%eax */
0x75, 0x27,                               /*15c: jne    185 <op_add+0x185> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*15e: mov    $0x0,%eax */
0x48, 0x98,                               /*163: cltq */
0x48, 0x89, 0xc1,                         /*165: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*168: shl    $0x4,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0x0b,             /*16c: movsd  (%rbx,%rcx,1),%xmm0 */
0xff, 0xc0,                               /*171: inc    %eax */
0x48, 0x98,                               /*173: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*175: shl    $0x4,%rax */
0xf2, 0x0f, 0x58, 0x04, 0x03,             /*179: addsd  (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*17e: movsd  %xmm0,(%rbx,%rcx,1) */
0xeb, 0x5c,                               /*183: jmp    1e1 <op_add+0x1e1> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*185: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*18a: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18f: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*194: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*199: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*19f: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1a5: callq  1aa <op_add+0x1aa> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1aa: mov    0x0(%rip),%rdi        # 1b1 <op_add+0x1b1> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*1b1: mov    0x0(%rip),%rsi        # 1b8 <op_add+0x1b8> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1b8: mov    0x0(%rip),%rcx        # 1bf <op_add+0x1bf> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1bf: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*1c4: jmpq   1c9 <op_add+0x1c9> */
0xeb, 0x23,                               /*1c9: jmp    1ee <op_add+0x1ee> */
0x41, 0xc7, 0x07, 0x03, 0x00, 0x00, 0x00, /*1cb: movl   $0x3,(%r15) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d2: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1d7: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*1da: shl    $0x4,%rcx */
0x89, 0x04, 0x0b,                         /*1de: mov    %eax,(%rbx,%rcx,1) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*1e1: mov    0x0(%rip),%eax        # 1e7 <op_add+0x1e7> */
0x41, 0x89, 0x86, 0xdc, 0x00, 0x00, 0x00, /*1e7: mov    %eax,0xdc(%r14) */
0x5b,                                     /*1ee: pop    %rbx */
0x41, 0x5c,                               /*1ef: pop    %r12 */
0x41, 0x5e,                               /*1f1: pop    %r14 */
0x41, 0x5f,                               /*1f3: pop    %r15 */

};
static uint8_t op_add__rodata[] = {

};


static uint8_t op_addi__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rcx        # 15 <op_addi+0x15> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*1a: movslq %eax,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*1d: shl    $0x4,%rdx */
0x48, 0x8d, 0x04, 0x11,                   /*21: lea    (%rcx,%rdx,1),%rax */
0x8b, 0x74, 0x11, 0x08,                   /*25: mov    0x8(%rcx,%rdx,1),%esi */
0x83, 0xfe, 0x06,                         /*29: cmp    $0x6,%esi */
0x75, 0x17,                               /*2c: jne    45 <op_addi+0x45> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2e: mov    $0x0,%ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*33: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x58, 0x00,                   /*37: addsd  (%rax),%xmm0 */
0xf2, 0x0f, 0x11, 0x00,                   /*3b: movsd  %xmm0,(%rax) */
0x58,                                     /*3f: pop    %rax */
0xe9, 0xa1, 0x00, 0x00, 0x00,             /*40: jmpq   e6 <op_addi+0xe6> */
0x83, 0xfe, 0x03,                         /*45: cmp    $0x3,%esi */
0x75, 0x32,                               /*48: jne    7c <op_addi+0x7c> */
0x48, 0x8d, 0x4c, 0x11, 0x08,             /*4a: lea    0x8(%rcx,%rdx,1),%rcx */
0x8b, 0x10,                               /*4f: mov    (%rax),%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%esi */
0x01, 0xd6,                               /*56: add    %edx,%esi */
0x0f, 0x81, 0x80, 0x00, 0x00, 0x00,       /*58: jno    de <op_addi+0xde> */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*5e: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x2a, 0xc2,                   /*64: cvtsi2sd %edx,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*68: mov    $0x0,%ecx */
0xf2, 0x0f, 0x2a, 0xc9,                   /*6d: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x58, 0xc8,                   /*71: addsd  %xmm0,%xmm1 */
0xf2, 0x0f, 0x11, 0x08,                   /*75: movsd  %xmm1,(%rax) */
0x58,                                     /*79: pop    %rax */
0xeb, 0x6a,                               /*7a: jmp    e6 <op_addi+0xe6> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7c: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*81: movslq %eax,%rdx */
0x48, 0x89, 0xd0,                         /*84: mov    %rdx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*87: shl    $0x4,%rax */
0xc7, 0x44, 0x08, 0x18, 0x03, 0x00, 0x00, 0x00,/*8b: movl   $0x3,0x18(%rax,%rcx,1) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*93: mov    $0x0,%esi */
0x89, 0x74, 0x08, 0x10,                   /*98: mov    %esi,0x10(%rax,%rcx,1) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*9c: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*a1: mov    $0x20,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a6: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*ab: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*b1: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b7: callq  bc <op_addi+0xbc> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*bc: mov    0x0(%rip),%rdi        # c3 <op_addi+0xc3> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*c3: mov    0x0(%rip),%rsi        # ca <op_addi+0xca> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*ca: mov    0x0(%rip),%rcx        # d1 <op_addi+0xd1> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*d1: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*d6: jmpq   db <op_addi+0xdb> */
0x58,                                     /*db: pop    %rax */
0xeb, 0x08,                               /*dc: jmp    e6 <op_addi+0xe6> */
0xc7, 0x01, 0x03, 0x00, 0x00, 0x00,       /*de: movl   $0x3,(%rcx) */
0x89, 0x30,                               /*e4: mov    %esi,(%rax) */

};
static uint8_t op_addi__rodata[] = {

};


static uint8_t op_sub__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_sub+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*1a: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*1d: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*20: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*24: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*28: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*2b: and    $0xffff00,%esi */
0xff, 0xc2,                               /*31: inc    %edx */
0x48, 0x63, 0xd2,                         /*33: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*36: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*3a: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*3f: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*41: cmp    $0x602,%edx */
0x7f, 0x63,                               /*47: jg     ac <op_sub+0xac> */
0x4c, 0x8d, 0x44, 0x08, 0x08,             /*49: lea    0x8(%rax,%rcx,1),%r8 */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*4e: cmp    $0x303,%edx */
0x0f, 0x85, 0x8b, 0x00, 0x00, 0x00,       /*54: jne    e5 <op_sub+0xe5> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5a: mov    $0x0,%ecx */
0x48, 0x63, 0xf1,                         /*5f: movslq %ecx,%rsi */
0x48, 0x89, 0xf2,                         /*62: mov    %rsi,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*65: shl    $0x4,%rdx */
0x8b, 0x0c, 0x10,                         /*69: mov    (%rax,%rdx,1),%ecx */
0xff, 0xc6,                               /*6c: inc    %esi */
0x48, 0x63, 0xf6,                         /*6e: movslq %esi,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*71: shl    $0x4,%rsi */
0x8b, 0x3c, 0x30,                         /*75: mov    (%rax,%rsi,1),%edi */
0x89, 0xce,                               /*78: mov    %ecx,%esi */
0x29, 0xfe,                               /*7a: sub    %edi,%esi */
0x0f, 0x81, 0x18, 0x01, 0x00, 0x00,       /*7c: jno    19a <op_sub+0x19a> */
0x41, 0xc7, 0x00, 0x06, 0x00, 0x00, 0x00, /*82: movl   $0x6,(%r8) */
0xf2, 0x0f, 0x2a, 0xc1,                   /*89: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x2a, 0xcf,                   /*8d: cvtsi2sd %edi,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*91: subsd  %xmm1,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*95: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*9a: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*9d: shl    $0x4,%rcx */
0xf2, 0x0f, 0x11, 0x04, 0x08,             /*a1: movsd  %xmm0,(%rax,%rcx,1) */
0x58,                                     /*a6: pop    %rax */
0xe9, 0xfa, 0x00, 0x00, 0x00,             /*a7: jmpq   1a6 <op_sub+0x1a6> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*ac: cmp    $0x603,%edx */
0x75, 0x6d,                               /*b2: jne    121 <op_sub+0x121> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*b4: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*b9: movslq %ecx,%rcx */
0x48, 0x89, 0xca,                         /*bc: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*bf: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*c3: movsd  (%rax,%rdx,1),%xmm0 */
0xff, 0xc1,                               /*c8: inc    %ecx */
0x48, 0x63, 0xc9,                         /*ca: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*cd: shl    $0x4,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0x08,             /*d1: cvtsi2sdl (%rax,%rcx,1),%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*d6: subsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*da: movsd  %xmm0,(%rax,%rdx,1) */
0x58,                                     /*df: pop    %rax */
0xe9, 0xc1, 0x00, 0x00, 0x00,             /*e0: jmpq   1a6 <op_sub+0x1a6> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*e5: cmp    $0x306,%edx */
0x75, 0x66,                               /*eb: jne    153 <op_sub+0x153> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ed: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*f2: movslq %ecx,%rcx */
0x48, 0x89, 0xca,                         /*f5: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*f8: shl    $0x4,%rdx */
0xff, 0xc1,                               /*fc: inc    %ecx */
0x48, 0x63, 0xc9,                         /*fe: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*101: shl    $0x4,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0x10,             /*105: cvtsi2sdl (%rax,%rdx,1),%xmm0 */
0xf2, 0x0f, 0x5c, 0x04, 0x08,             /*10a: subsd  (%rax,%rcx,1),%xmm0 */
0x41, 0xc7, 0x00, 0x06, 0x00, 0x00, 0x00, /*10f: movl   $0x6,(%r8) */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*116: movsd  %xmm0,(%rax,%rdx,1) */
0x58,                                     /*11b: pop    %rax */
0xe9, 0x85, 0x00, 0x00, 0x00,             /*11c: jmpq   1a6 <op_sub+0x1a6> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*121: cmp    $0x606,%edx */
0x75, 0x2a,                               /*127: jne    153 <op_sub+0x153> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*129: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*12e: movslq %ecx,%rcx */
0x48, 0x89, 0xca,                         /*131: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*134: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*138: movsd  (%rax,%rdx,1),%xmm0 */
0xff, 0xc1,                               /*13d: inc    %ecx */
0x48, 0x63, 0xc9,                         /*13f: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*142: shl    $0x4,%rcx */
0xf2, 0x0f, 0x5c, 0x04, 0x08,             /*146: subsd  (%rax,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*14b: movsd  %xmm0,(%rax,%rdx,1) */
0x58,                                     /*150: pop    %rax */
0xeb, 0x53,                               /*151: jmp    1a6 <op_sub+0x1a6> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*153: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*158: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15d: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*162: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*167: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*16d: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*173: callq  178 <op_sub+0x178> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*178: mov    0x0(%rip),%rdi        # 17f <op_sub+0x17f> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*17f: mov    0x0(%rip),%rsi        # 186 <op_sub+0x186> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*186: mov    0x0(%rip),%rcx        # 18d <op_sub+0x18d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18d: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*192: jmpq   197 <op_sub+0x197> */
0x58,                                     /*197: pop    %rax */
0xeb, 0x0c,                               /*198: jmp    1a6 <op_sub+0x1a6> */
0x48, 0x01, 0xd0,                         /*19a: add    %rdx,%rax */
0x41, 0xc7, 0x00, 0x03, 0x00, 0x00, 0x00, /*19d: movl   $0x3,(%r8) */
0x89, 0x30,                               /*1a4: mov    %esi,(%rax) */

};
static uint8_t op_sub__rodata[] = {

};


static uint8_t op_subi__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rcx        # 15 <op_subi+0x15> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*1a: movslq %eax,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*1d: shl    $0x4,%rdx */
0x48, 0x8d, 0x04, 0x11,                   /*21: lea    (%rcx,%rdx,1),%rax */
0x8b, 0x74, 0x11, 0x08,                   /*25: mov    0x8(%rcx,%rdx,1),%esi */
0x83, 0xfe, 0x06,                         /*29: cmp    $0x6,%esi */
0x75, 0x06,                               /*2c: jne    34 <op_subi+0x34> */
0xf2, 0x0f, 0x10, 0x00,                   /*2e: movsd  (%rax),%xmm0 */
0xeb, 0x25,                               /*32: jmp    59 <op_subi+0x59> */
0x83, 0xfe, 0x03,                         /*34: cmp    $0x3,%esi */
0x75, 0x34,                               /*37: jne    6d <op_subi+0x6d> */
0x48, 0x8d, 0x4c, 0x11, 0x08,             /*39: lea    0x8(%rcx,%rdx,1),%rcx */
0x8b, 0x10,                               /*3e: mov    (%rax),%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*40: mov    $0x0,%edi */
0x89, 0xd6,                               /*45: mov    %edx,%esi */
0x29, 0xfe,                               /*47: sub    %edi,%esi */
0x0f, 0x81, 0x80, 0x00, 0x00, 0x00,       /*49: jno    cf <op_subi+0xcf> */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*4f: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x2a, 0xc2,                   /*55: cvtsi2sd %edx,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*59: mov    $0x0,%ecx */
0xf2, 0x0f, 0x2a, 0xc9,                   /*5e: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*62: subsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x00,                   /*66: movsd  %xmm0,(%rax) */
0x58,                                     /*6a: pop    %rax */
0xeb, 0x6a,                               /*6b: jmp    d7 <op_subi+0xd7> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*6d: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*72: movslq %eax,%rdx */
0x48, 0x89, 0xd0,                         /*75: mov    %rdx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*78: shl    $0x4,%rax */
0xc7, 0x44, 0x08, 0x18, 0x03, 0x00, 0x00, 0x00,/*7c: movl   $0x3,0x18(%rax,%rcx,1) */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*84: mov    $0x0,%esi */
0x89, 0x74, 0x08, 0x10,                   /*89: mov    %esi,0x10(%rax,%rcx,1) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*8d: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*92: mov    $0x20,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*97: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*9c: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*a2: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a8: callq  ad <op_subi+0xad> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*ad: mov    0x0(%rip),%rdi        # b4 <op_subi+0xb4> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*b4: mov    0x0(%rip),%rsi        # bb <op_subi+0xbb> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*bb: mov    0x0(%rip),%rcx        # c2 <op_subi+0xc2> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*c2: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*c7: jmpq   cc <op_subi+0xcc> */
0x58,                                     /*cc: pop    %rax */
0xeb, 0x08,                               /*cd: jmp    d7 <op_subi+0xd7> */
0xc7, 0x01, 0x03, 0x00, 0x00, 0x00,       /*cf: movl   $0x3,(%rcx) */
0x89, 0x30,                               /*d5: mov    %esi,(%rax) */

};
static uint8_t op_subi__rodata[] = {

};


static uint8_t op_mul__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x56,                               /*e: push   %r14 */
0x53,                                     /*10: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*11: mov    0x0(%rip),%rbx        # 18 <op_mul+0x18> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%eax */
0x48, 0x63, 0xc8,                         /*1d: movslq %eax,%rcx */
0x48, 0x89, 0xc8,                         /*20: mov    %rcx,%rax */
0x48, 0xc1, 0xe0, 0x04,                   /*23: shl    $0x4,%rax */
0x8b, 0x54, 0x03, 0x08,                   /*27: mov    0x8(%rbx,%rax,1),%edx */
0x89, 0xd6,                               /*2b: mov    %edx,%esi */
0xc1, 0xe6, 0x08,                         /*2d: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*30: and    $0xffff00,%esi */
0xff, 0xc1,                               /*36: inc    %ecx */
0x48, 0x63, 0xc9,                         /*38: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*3b: shl    $0x4,%rcx */
0x44, 0x8b, 0x44, 0x0b, 0x08,             /*3f: mov    0x8(%rbx,%rcx,1),%r8d */
0x41, 0x0f, 0xb6, 0xc8,                   /*44: movzbl %r8b,%ecx */
0x09, 0xf1,                               /*48: or     %esi,%ecx */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*4a: cmp    $0x602,%ecx */
0x7f, 0x60,                               /*50: jg     b2 <op_mul+0xb2> */
0x4c, 0x8d, 0x74, 0x03, 0x08,             /*52: lea    0x8(%rbx,%rax,1),%r14 */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*57: cmp    $0x303,%ecx */
0x0f, 0x85, 0x81, 0x00, 0x00, 0x00,       /*5d: jne    e4 <op_mul+0xe4> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*63: mov    0x0(%rip),%rdi        # 6a <op_mul+0x6a> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*6a: mov    $0x0,%eax */
0x48, 0x98,                               /*6f: cltq */
0x48, 0x89, 0xc1,                         /*71: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*74: shl    $0x4,%rcx */
0xff, 0xc0,                               /*78: inc    %eax */
0x48, 0x98,                               /*7a: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*7c: shl    $0x4,%rax */
0x48, 0x8b, 0x34, 0x0b,                   /*80: mov    (%rbx,%rcx,1),%rsi */
0x48, 0x8b, 0x0c, 0x03,                   /*84: mov    (%rbx,%rax,1),%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*88: callq  8d <op_mul+0x8d> */
0x83, 0xfa, 0x06,                         /*8d: cmp    $0x6,%edx */
0x0f, 0x85, 0xfc, 0x00, 0x00, 0x00,       /*90: jne    192 <op_mul+0x192> */
0x41, 0xc7, 0x06, 0x06, 0x00, 0x00, 0x00, /*96: movl   $0x6,(%r14) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*9d: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*a2: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*a5: shl    $0x4,%rcx */
0x48, 0x89, 0x04, 0x0b,                   /*a9: mov    %rax,(%rbx,%rcx,1) */
0xe9, 0xfb, 0x00, 0x00, 0x00,             /*ad: jmpq   1ad <op_mul+0x1ad> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*b2: cmp    $0x603,%ecx */
0x75, 0x63,                               /*b8: jne    11d <op_mul+0x11d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ba: mov    $0x0,%eax */
0x48, 0x98,                               /*bf: cltq */
0x48, 0x89, 0xc1,                         /*c1: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*c4: shl    $0x4,%rcx */
0xff, 0xc0,                               /*c8: inc    %eax */
0x48, 0x98,                               /*ca: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*cc: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x03,             /*d0: cvtsi2sdl (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x59, 0x04, 0x0b,             /*d5: mulsd  (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*da: movsd  %xmm0,(%rbx,%rcx,1) */
0xe9, 0xc9, 0x00, 0x00, 0x00,             /*df: jmpq   1ad <op_mul+0x1ad> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*e4: cmp    $0x306,%ecx */
0x75, 0x60,                               /*ea: jne    14c <op_mul+0x14c> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ec: mov    $0x0,%eax */
0x48, 0x98,                               /*f1: cltq */
0x48, 0x89, 0xc1,                         /*f3: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*f6: shl    $0x4,%rcx */
0xff, 0xc0,                               /*fa: inc    %eax */
0x48, 0x98,                               /*fc: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*fe: shl    $0x4,%rax */
0xf2, 0x0f, 0x2a, 0x04, 0x0b,             /*102: cvtsi2sdl (%rbx,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x59, 0x04, 0x03,             /*107: mulsd  (%rbx,%rax,1),%xmm0 */
0x41, 0xc7, 0x06, 0x06, 0x00, 0x00, 0x00, /*10c: movl   $0x6,(%r14) */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*113: movsd  %xmm0,(%rbx,%rcx,1) */
0xe9, 0x90, 0x00, 0x00, 0x00,             /*118: jmpq   1ad <op_mul+0x1ad> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*11d: cmp    $0x606,%ecx */
0x75, 0x27,                               /*123: jne    14c <op_mul+0x14c> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*125: mov    $0x0,%eax */
0x48, 0x98,                               /*12a: cltq */
0x48, 0x89, 0xc1,                         /*12c: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*12f: shl    $0x4,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0x0b,             /*133: movsd  (%rbx,%rcx,1),%xmm0 */
0xff, 0xc0,                               /*138: inc    %eax */
0x48, 0x98,                               /*13a: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*13c: shl    $0x4,%rax */
0xf2, 0x0f, 0x59, 0x04, 0x03,             /*140: mulsd  (%rbx,%rax,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0b,             /*145: movsd  %xmm0,(%rbx,%rcx,1) */
0xeb, 0x61,                               /*14a: jmp    1ad <op_mul+0x1ad> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*14c: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*151: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*156: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15b: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*160: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*166: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*16c: callq  171 <op_mul+0x171> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*171: mov    0x0(%rip),%rdi        # 178 <op_mul+0x178> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*178: mov    0x0(%rip),%rsi        # 17f <op_mul+0x17f> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*17f: mov    0x0(%rip),%rcx        # 186 <op_mul+0x186> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*186: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*18b: jmpq   190 <op_mul+0x190> */
0xeb, 0x1b,                               /*190: jmp    1ad <op_mul+0x1ad> */
0x83, 0xfa, 0x03,                         /*192: cmp    $0x3,%edx */
0x75, 0x16,                               /*195: jne    1ad <op_mul+0x1ad> */
0x41, 0xc7, 0x06, 0x03, 0x00, 0x00, 0x00, /*197: movl   $0x3,(%r14) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*19e: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a3: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*1a6: shl    $0x4,%rcx */
0x89, 0x04, 0x0b,                         /*1aa: mov    %eax,(%rbx,%rcx,1) */
0x5b,                                     /*1ad: pop    %rbx */
0x41, 0x5e,                               /*1ae: pop    %r14 */

};
static uint8_t op_mul__rodata[] = {

};


static uint8_t op_div__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_div+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*1a: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*1d: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*20: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*24: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*28: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*2b: and    $0xffff00,%esi */
0xff, 0xc2,                               /*31: inc    %edx */
0x48, 0x63, 0xd2,                         /*33: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*36: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*3a: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*3f: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*41: cmp    $0x602,%edx */
0x7f, 0x44,                               /*47: jg     8d <op_div+0x8d> */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*49: lea    0x8(%rax,%rcx,1),%rcx */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*4e: cmp    $0x303,%edx */
0x75, 0x70,                               /*54: jne    c6 <op_div+0xc6> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*56: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*5b: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*5e: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*61: shl    $0x4,%rsi */
0xff, 0xc2,                               /*65: inc    %edx */
0x48, 0x63, 0xd2,                         /*67: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*6a: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*6e: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xf2, 0x0f, 0x2a, 0x0c, 0x10,             /*73: cvtsi2sdl (%rax,%rdx,1),%xmm1 */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*78: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x5e, 0xc1,                   /*7e: divsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x30,             /*82: movsd  %xmm0,(%rax,%rsi,1) */
0x58,                                     /*87: pop    %rax */
0xe9, 0xe7, 0x00, 0x00, 0x00,             /*88: jmpq   174 <op_div+0x174> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*8d: cmp    $0x603,%edx */
0x75, 0x69,                               /*93: jne    fe <op_div+0xfe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*95: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*9a: movslq %ecx,%rcx */
0x48, 0x89, 0xca,                         /*9d: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*a0: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*a4: movsd  (%rax,%rdx,1),%xmm0 */
0xff, 0xc1,                               /*a9: inc    %ecx */
0x48, 0x63, 0xc9,                         /*ab: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*ae: shl    $0x4,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0x08,             /*b2: cvtsi2sdl (%rax,%rcx,1),%xmm1 */
0xf2, 0x0f, 0x5e, 0xc1,                   /*b7: divsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*bb: movsd  %xmm0,(%rax,%rdx,1) */
0x58,                                     /*c0: pop    %rax */
0xe9, 0xae, 0x00, 0x00, 0x00,             /*c1: jmpq   174 <op_div+0x174> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*c6: cmp    $0x306,%edx */
0x75, 0x62,                               /*cc: jne    130 <op_div+0x130> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*ce: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*d3: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*d6: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*d9: shl    $0x4,%rsi */
0xff, 0xc2,                               /*dd: inc    %edx */
0x48, 0x63, 0xd2,                         /*df: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*e2: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*e6: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xf2, 0x0f, 0x5e, 0x04, 0x10,             /*eb: divsd  (%rax,%rdx,1),%xmm0 */
0xc7, 0x01, 0x06, 0x00, 0x00, 0x00,       /*f0: movl   $0x6,(%rcx) */
0xf2, 0x0f, 0x11, 0x04, 0x30,             /*f6: movsd  %xmm0,(%rax,%rsi,1) */
0x58,                                     /*fb: pop    %rax */
0xeb, 0x76,                               /*fc: jmp    174 <op_div+0x174> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*fe: cmp    $0x606,%edx */
0x75, 0x2a,                               /*104: jne    130 <op_div+0x130> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*106: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*10b: movslq %ecx,%rcx */
0x48, 0x89, 0xca,                         /*10e: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*111: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*115: movsd  (%rax,%rdx,1),%xmm0 */
0xff, 0xc1,                               /*11a: inc    %ecx */
0x48, 0x63, 0xc9,                         /*11c: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*11f: shl    $0x4,%rcx */
0xf2, 0x0f, 0x5e, 0x04, 0x08,             /*123: divsd  (%rax,%rcx,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x10,             /*128: movsd  %xmm0,(%rax,%rdx,1) */
0x58,                                     /*12d: pop    %rax */
0xeb, 0x44,                               /*12e: jmp    174 <op_div+0x174> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*130: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*135: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*13a: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13f: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*144: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*14a: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*150: callq  155 <op_div+0x155> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*155: mov    0x0(%rip),%rdi        # 15c <op_div+0x15c> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*15c: mov    0x0(%rip),%rsi        # 163 <op_div+0x163> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*163: mov    0x0(%rip),%rcx        # 16a <op_div+0x16a> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*16a: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*16f: jmpq   174 <op_div+0x174> */

};
static uint8_t op_div__rodata[] = {

};


static uint8_t op_eq__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x57,                               /*e: push   %r15 */
0x41, 0x56,                               /*10: push   %r14 */
0x53,                                     /*12: push   %rbx */
0x4c, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%r15        # 1a <op_eq+0x1a> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1a: mov    0x0(%rip),%rdi        # 21 <op_eq+0x21> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%eax */
0x48, 0x98,                               /*26: cltq */
0x48, 0x89, 0xc1,                         /*28: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*2b: shl    $0x4,%rcx */
0xff, 0xc0,                               /*2f: inc    %eax */
0x48, 0x63, 0xd8,                         /*31: movslq %eax,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*34: shl    $0x4,%rbx */
0x49, 0x8b, 0x34, 0x0f,                   /*38: mov    (%r15,%rcx,1),%rsi */
0x4d, 0x8d, 0x74, 0x0f, 0x08,             /*3c: lea    0x8(%r15,%rcx,1),%r14 */
0x41, 0x8b, 0x54, 0x0f, 0x08,             /*41: mov    0x8(%r15,%rcx,1),%edx */
0x49, 0x8b, 0x0c, 0x1f,                   /*46: mov    (%r15,%rbx,1),%rcx */
0x45, 0x8b, 0x44, 0x1f, 0x08,             /*4a: mov    0x8(%r15,%rbx,1),%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*4f: callq  54 <op_eq+0x54> */
0x84, 0xc0,                               /*54: test   %al,%al */
0x0f, 0x85, 0xc9, 0x00, 0x00, 0x00,       /*56: jne    125 <op_eq+0x125> */
0x49, 0x8d, 0x44, 0x1f, 0x08,             /*5c: lea    0x8(%r15,%rbx,1),%rax */
0x41, 0x8b, 0x0e,                         /*61: mov    (%r14),%ecx */
0xc1, 0xe1, 0x08,                         /*64: shl    $0x8,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*67: and    $0xffff00,%ecx */
0x0f, 0xb6, 0x00,                         /*6d: movzbl (%rax),%eax */
0x09, 0xc8,                               /*70: or     %ecx,%eax */
0x3d, 0x02, 0x06, 0x00, 0x00,             /*72: cmp    $0x602,%eax */
0x7f, 0x2d,                               /*77: jg     a6 <op_eq+0xa6> */
0x3d, 0x03, 0x03, 0x00, 0x00,             /*79: cmp    $0x303,%eax */
0x75, 0x52,                               /*7e: jne    d2 <op_eq+0xd2> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*80: mov    $0x0,%eax */
0x48, 0x98,                               /*85: cltq */
0x48, 0x89, 0xc1,                         /*87: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*8a: shl    $0x4,%rcx */
0x41, 0x8b, 0x0c, 0x0f,                   /*8e: mov    (%r15,%rcx,1),%ecx */
0xff, 0xc0,                               /*92: inc    %eax */
0x48, 0x98,                               /*94: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*96: shl    $0x4,%rax */
0x41, 0x3b, 0x0c, 0x07,                   /*9a: cmp    (%r15,%rax,1),%ecx */
0x0f, 0x94, 0xc0,                         /*9e: sete   %al */
0x0f, 0xb6, 0xc0,                         /*a1: movzbl %al,%eax */
0xeb, 0x7b,                               /*a4: jmp    121 <op_eq+0x121> */
0x3d, 0x03, 0x06, 0x00, 0x00,             /*a6: cmp    $0x603,%eax */
0x75, 0x42,                               /*ab: jne    ef <op_eq+0xef> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ad: mov    $0x0,%eax */
0x48, 0x98,                               /*b2: cltq */
0x48, 0x89, 0xc1,                         /*b4: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*b7: shl    $0x4,%rcx */
0xff, 0xc0,                               /*bb: inc    %eax */
0x48, 0x98,                               /*bd: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*bf: shl    $0x4,%rax */
0xf2, 0x41, 0x0f, 0x2a, 0x04, 0x07,       /*c3: cvtsi2sdl (%r15,%rax,1),%xmm0 */
0xf2, 0x41, 0x0f, 0xc2, 0x04, 0x0f, 0x00, /*c9: cmpeqsd (%r15,%rcx,1),%xmm0 */
0xeb, 0x47,                               /*d0: jmp    119 <op_eq+0x119> */
0x3d, 0x06, 0x03, 0x00, 0x00,             /*d2: cmp    $0x306,%eax */
0x75, 0x76,                               /*d7: jne    14f <op_eq+0x14f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*d9: mov    $0x0,%eax */
0x48, 0x98,                               /*de: cltq */
0x48, 0x89, 0xc1,                         /*e0: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*e3: shl    $0x4,%rcx */
0xf2, 0x41, 0x0f, 0x2a, 0x04, 0x0f,       /*e7: cvtsi2sdl (%r15,%rcx,1),%xmm0 */
0xeb, 0x1b,                               /*ed: jmp    10a <op_eq+0x10a> */
0x3d, 0x06, 0x06, 0x00, 0x00,             /*ef: cmp    $0x606,%eax */
0x75, 0x59,                               /*f4: jne    14f <op_eq+0x14f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f6: mov    $0x0,%eax */
0x48, 0x98,                               /*fb: cltq */
0x48, 0x89, 0xc1,                         /*fd: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*100: shl    $0x4,%rcx */
0xf2, 0x41, 0x0f, 0x10, 0x04, 0x0f,       /*104: movsd  (%r15,%rcx,1),%xmm0 */
0xff, 0xc0,                               /*10a: inc    %eax */
0x48, 0x98,                               /*10c: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*10e: shl    $0x4,%rax */
0xf2, 0x41, 0x0f, 0xc2, 0x04, 0x07, 0x00, /*112: cmpeqsd (%r15,%rax,1),%xmm0 */
0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*119: movq   %xmm0,%rax */
0x83, 0xe0, 0x01,                         /*11e: and    $0x1,%eax */
0x85, 0xc0,                               /*121: test   %eax,%eax */
0x74, 0x21,                               /*123: je     146 <op_eq+0x146> */
0x41, 0xc7, 0x06, 0x02, 0x00, 0x00, 0x00, /*125: movl   $0x2,(%r14) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12c: mov    $0x0,%eax */
0x48, 0x98,                               /*131: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*133: shl    $0x4,%rax */
0x41, 0xc7, 0x04, 0x07, 0x01, 0x00, 0x00, 0x00,/*137: movl   $0x1,(%r15,%rax,1) */
0x5b,                                     /*13f: pop    %rbx */
0x41, 0x5e,                               /*140: pop    %r14 */
0x41, 0x5f,                               /*142: pop    %r15 */
0xeb, 0x4f,                               /*144: jmp    195 <op_eq+0x195> */
0x41, 0xc7, 0x06, 0x00, 0x00, 0x00, 0x00, /*146: movl   $0x0,(%r14) */
0xeb, 0xdd,                               /*14d: jmp    12c <op_eq+0x12c> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*14f: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*154: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*159: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15e: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*163: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*169: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*16f: callq  174 <op_eq+0x174> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*174: mov    0x0(%rip),%rdi        # 17b <op_eq+0x17b> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*17b: mov    0x0(%rip),%rsi        # 182 <op_eq+0x182> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*182: mov    0x0(%rip),%rcx        # 189 <op_eq+0x189> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*189: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*18e: jmpq   193 <op_eq+0x193> */
0xeb, 0xaa,                               /*193: jmp    13f <op_eq+0x13f> */

};
static uint8_t op_eq__rodata[] = {

};


static uint8_t op_lt__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_lt+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*1a: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*1d: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*20: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*24: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*28: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*2b: and    $0xffff00,%esi */
0xff, 0xc2,                               /*31: inc    %edx */
0x48, 0x63, 0xd2,                         /*33: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*36: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*3a: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*3f: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*41: cmp    $0x602,%edx */
0x7f, 0x2e,                               /*47: jg     77 <op_lt+0x77> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*49: cmp    $0x303,%edx */
0x75, 0x4d,                               /*4f: jne    9e <op_lt+0x9e> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*56: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*59: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*5c: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*60: mov    (%rax,%rsi,1),%esi */
0xff, 0xc2,                               /*63: inc    %edx */
0x48, 0x63, 0xd2,                         /*65: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*68: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*6c: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9c, 0xc2,                         /*6f: setl   %dl */
0xe9, 0x8b, 0x00, 0x00, 0x00,             /*72: jmpq   102 <op_lt+0x102> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*77: cmp    $0x603,%edx */
0x75, 0x56,                               /*7d: jne    d5 <op_lt+0xd5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7f: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*84: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*87: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*8a: shl    $0x4,%rsi */
0xff, 0xc2,                               /*8e: inc    %edx */
0x48, 0x63, 0xd2,                         /*90: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*93: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x10,             /*97: cvtsi2sdl (%rax,%rdx,1),%xmm0 */
0xeb, 0x5c,                               /*9c: jmp    fa <op_lt+0xfa> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*9e: cmp    $0x306,%edx */
0x0f, 0x85, 0x88, 0x00, 0x00, 0x00,       /*a4: jne    132 <op_lt+0x132> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*aa: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*af: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*b2: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*b5: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*b9: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*be: inc    %edx */
0x48, 0x63, 0xd2,                         /*c0: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*c3: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x0c, 0x10,             /*c7: movsd  (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*cc: ucomisd %xmm0,%xmm1 */
0x0f, 0x97, 0xc2,                         /*d0: seta   %dl */
0xeb, 0x2d,                               /*d3: jmp    102 <op_lt+0x102> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*d5: cmp    $0x606,%edx */
0x75, 0x55,                               /*db: jne    132 <op_lt+0x132> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*dd: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*e2: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*e5: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*e8: shl    $0x4,%rsi */
0xff, 0xc2,                               /*ec: inc    %edx */
0x48, 0x63, 0xd2,                         /*ee: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*f1: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*f5: movsd  (%rax,%rdx,1),%xmm0 */
0x66, 0x0f, 0x2e, 0x04, 0x30,             /*fa: ucomisd (%rax,%rsi,1),%xmm0 */
0x0f, 0x97, 0xc2,                         /*ff: seta   %dl */
0x0f, 0xb6, 0xd2,                         /*102: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*105: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*10a: test   %edx,%edx */
0x74, 0x08,                               /*10c: je     116 <op_lt+0x116> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*10e: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*114: jmp    11c <op_lt+0x11c> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*116: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*121: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*124: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*128: movl   $0x1,(%rax,%rcx,1) */
0x58,                                     /*12f: pop    %rax */
0xeb, 0x44,                               /*130: jmp    176 <op_lt+0x176> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*132: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*137: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*13c: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*141: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*146: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*14c: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*152: callq  157 <op_lt+0x157> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*157: mov    0x0(%rip),%rdi        # 15e <op_lt+0x15e> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*15e: mov    0x0(%rip),%rsi        # 165 <op_lt+0x165> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*165: mov    0x0(%rip),%rcx        # 16c <op_lt+0x16c> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*16c: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*171: jmpq   176 <op_lt+0x176> */

};
static uint8_t op_lt__rodata[] = {

};


static uint8_t op_le__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_le+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*1a: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*1d: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*20: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*24: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*28: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*2b: and    $0xffff00,%esi */
0xff, 0xc2,                               /*31: inc    %edx */
0x48, 0x63, 0xd2,                         /*33: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*36: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*3a: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*3f: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*41: cmp    $0x602,%edx */
0x7f, 0x2e,                               /*47: jg     77 <op_le+0x77> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*49: cmp    $0x303,%edx */
0x75, 0x4d,                               /*4f: jne    9e <op_le+0x9e> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*56: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*59: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*5c: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*60: mov    (%rax,%rsi,1),%esi */
0xff, 0xc2,                               /*63: inc    %edx */
0x48, 0x63, 0xd2,                         /*65: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*68: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*6c: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9e, 0xc2,                         /*6f: setle  %dl */
0xe9, 0x8b, 0x00, 0x00, 0x00,             /*72: jmpq   102 <op_le+0x102> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*77: cmp    $0x603,%edx */
0x75, 0x56,                               /*7d: jne    d5 <op_le+0xd5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7f: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*84: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*87: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*8a: shl    $0x4,%rsi */
0xff, 0xc2,                               /*8e: inc    %edx */
0x48, 0x63, 0xd2,                         /*90: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*93: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0x10,             /*97: cvtsi2sdl (%rax,%rdx,1),%xmm0 */
0xeb, 0x5c,                               /*9c: jmp    fa <op_le+0xfa> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*9e: cmp    $0x306,%edx */
0x0f, 0x85, 0x88, 0x00, 0x00, 0x00,       /*a4: jne    132 <op_le+0x132> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*aa: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*af: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*b2: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*b5: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*b9: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*be: inc    %edx */
0x48, 0x63, 0xd2,                         /*c0: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*c3: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x0c, 0x10,             /*c7: movsd  (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*cc: ucomisd %xmm0,%xmm1 */
0x0f, 0x93, 0xc2,                         /*d0: setae  %dl */
0xeb, 0x2d,                               /*d3: jmp    102 <op_le+0x102> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*d5: cmp    $0x606,%edx */
0x75, 0x55,                               /*db: jne    132 <op_le+0x132> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*dd: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*e2: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*e5: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*e8: shl    $0x4,%rsi */
0xff, 0xc2,                               /*ec: inc    %edx */
0x48, 0x63, 0xd2,                         /*ee: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*f1: shl    $0x4,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0x10,             /*f5: movsd  (%rax,%rdx,1),%xmm0 */
0x66, 0x0f, 0x2e, 0x04, 0x30,             /*fa: ucomisd (%rax,%rsi,1),%xmm0 */
0x0f, 0x93, 0xc2,                         /*ff: setae  %dl */
0x0f, 0xb6, 0xd2,                         /*102: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*105: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*10a: test   %edx,%edx */
0x74, 0x08,                               /*10c: je     116 <op_le+0x116> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*10e: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*114: jmp    11c <op_le+0x11c> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*116: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*121: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*124: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*128: movl   $0x1,(%rax,%rcx,1) */
0x58,                                     /*12f: pop    %rax */
0xeb, 0x44,                               /*130: jmp    176 <op_le+0x176> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*132: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*137: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*13c: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*141: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*146: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*14c: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*152: callq  157 <op_le+0x157> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*157: mov    0x0(%rip),%rdi        # 15e <op_le+0x15e> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*15e: mov    0x0(%rip),%rsi        # 165 <op_le+0x165> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*165: mov    0x0(%rip),%rcx        # 16c <op_le+0x16c> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*16c: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*171: jmpq   176 <op_le+0x176> */

};
static uint8_t op_le__rodata[] = {

};


static uint8_t op_gt__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_gt+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*1a: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*1d: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*20: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*24: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*28: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*2b: and    $0xffff00,%esi */
0xff, 0xc2,                               /*31: inc    %edx */
0x48, 0x63, 0xd2,                         /*33: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*36: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*3a: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*3f: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*41: cmp    $0x602,%edx */
0x7f, 0x2b,                               /*47: jg     74 <op_gt+0x74> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*49: cmp    $0x303,%edx */
0x75, 0x56,                               /*4f: jne    a7 <op_gt+0xa7> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*56: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*59: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*5c: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*60: mov    (%rax,%rsi,1),%esi */
0xff, 0xc2,                               /*63: inc    %edx */
0x48, 0x63, 0xd2,                         /*65: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*68: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*6c: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9f, 0xc2,                         /*6f: setg   %dl */
0xeb, 0x7e,                               /*72: jmp    f2 <op_gt+0xf2> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*74: cmp    $0x603,%edx */
0x75, 0x49,                               /*7a: jne    c5 <op_gt+0xc5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7c: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*81: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*84: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*87: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*8b: movsd  (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*90: inc    %edx */
0x48, 0x63, 0xd2,                         /*92: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*95: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x0c, 0x10,             /*99: cvtsi2sdl (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*9e: ucomisd %xmm1,%xmm0 */
0x0f, 0x97, 0xc2,                         /*a2: seta   %dl */
0xeb, 0x4b,                               /*a5: jmp    f2 <op_gt+0xf2> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*a7: cmp    $0x306,%edx */
0x75, 0x73,                               /*ad: jne    122 <op_gt+0x122> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*af: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*b4: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*b7: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*ba: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*be: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xeb, 0x1c,                               /*c3: jmp    e1 <op_gt+0xe1> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*c5: cmp    $0x606,%edx */
0x75, 0x55,                               /*cb: jne    122 <op_gt+0x122> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*cd: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*d2: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*d5: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*d8: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*dc: movsd  (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*e1: inc    %edx */
0x48, 0x63, 0xd2,                         /*e3: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*e6: shl    $0x4,%rdx */
0x66, 0x0f, 0x2e, 0x04, 0x10,             /*ea: ucomisd (%rax,%rdx,1),%xmm0 */
0x0f, 0x97, 0xc2,                         /*ef: seta   %dl */
0x0f, 0xb6, 0xd2,                         /*f2: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*f5: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*fa: test   %edx,%edx */
0x74, 0x08,                               /*fc: je     106 <op_gt+0x106> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*fe: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*104: jmp    10c <op_gt+0x10c> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*106: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*111: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*114: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*118: movl   $0x1,(%rax,%rcx,1) */
0x58,                                     /*11f: pop    %rax */
0xeb, 0x44,                               /*120: jmp    166 <op_gt+0x166> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*122: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*127: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*12c: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*131: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*136: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*13c: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*142: callq  147 <op_gt+0x147> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*147: mov    0x0(%rip),%rdi        # 14e <op_gt+0x14e> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*14e: mov    0x0(%rip),%rsi        # 155 <op_gt+0x155> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*155: mov    0x0(%rip),%rcx        # 15c <op_gt+0x15c> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15c: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*161: jmpq   166 <op_gt+0x166> */

};
static uint8_t op_gt__rodata[] = {

};


static uint8_t op_ge__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_ge+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*1a: movslq %ecx,%rdx */
0x48, 0x89, 0xd1,                         /*1d: mov    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*20: shl    $0x4,%rcx */
0x8b, 0x74, 0x08, 0x08,                   /*24: mov    0x8(%rax,%rcx,1),%esi */
0xc1, 0xe6, 0x08,                         /*28: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*2b: and    $0xffff00,%esi */
0xff, 0xc2,                               /*31: inc    %edx */
0x48, 0x63, 0xd2,                         /*33: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*36: shl    $0x4,%rdx */
0x0f, 0xb6, 0x54, 0x10, 0x08,             /*3a: movzbl 0x8(%rax,%rdx,1),%edx */
0x09, 0xf2,                               /*3f: or     %esi,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*41: cmp    $0x602,%edx */
0x7f, 0x2b,                               /*47: jg     74 <op_ge+0x74> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*49: cmp    $0x303,%edx */
0x75, 0x56,                               /*4f: jne    a7 <op_ge+0xa7> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*56: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*59: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*5c: shl    $0x4,%rsi */
0x8b, 0x34, 0x30,                         /*60: mov    (%rax,%rsi,1),%esi */
0xff, 0xc2,                               /*63: inc    %edx */
0x48, 0x63, 0xd2,                         /*65: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*68: shl    $0x4,%rdx */
0x3b, 0x34, 0x10,                         /*6c: cmp    (%rax,%rdx,1),%esi */
0x0f, 0x9d, 0xc2,                         /*6f: setge  %dl */
0xeb, 0x7e,                               /*72: jmp    f2 <op_ge+0xf2> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*74: cmp    $0x603,%edx */
0x75, 0x49,                               /*7a: jne    c5 <op_ge+0xc5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7c: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*81: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*84: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*87: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*8b: movsd  (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*90: inc    %edx */
0x48, 0x63, 0xd2,                         /*92: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*95: shl    $0x4,%rdx */
0xf2, 0x0f, 0x2a, 0x0c, 0x10,             /*99: cvtsi2sdl (%rax,%rdx,1),%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*9e: ucomisd %xmm1,%xmm0 */
0x0f, 0x93, 0xc2,                         /*a2: setae  %dl */
0xeb, 0x4b,                               /*a5: jmp    f2 <op_ge+0xf2> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*a7: cmp    $0x306,%edx */
0x75, 0x73,                               /*ad: jne    122 <op_ge+0x122> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*af: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*b4: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*b7: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*ba: shl    $0x4,%rsi */
0xf2, 0x0f, 0x2a, 0x04, 0x30,             /*be: cvtsi2sdl (%rax,%rsi,1),%xmm0 */
0xeb, 0x1c,                               /*c3: jmp    e1 <op_ge+0xe1> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*c5: cmp    $0x606,%edx */
0x75, 0x55,                               /*cb: jne    122 <op_ge+0x122> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*cd: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*d2: movslq %edx,%rdx */
0x48, 0x89, 0xd6,                         /*d5: mov    %rdx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*d8: shl    $0x4,%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x30,             /*dc: movsd  (%rax,%rsi,1),%xmm0 */
0xff, 0xc2,                               /*e1: inc    %edx */
0x48, 0x63, 0xd2,                         /*e3: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*e6: shl    $0x4,%rdx */
0x66, 0x0f, 0x2e, 0x04, 0x10,             /*ea: ucomisd (%rax,%rdx,1),%xmm0 */
0x0f, 0x93, 0xc2,                         /*ef: setae  %dl */
0x0f, 0xb6, 0xd2,                         /*f2: movzbl %dl,%edx */
0x48, 0x8d, 0x4c, 0x08, 0x08,             /*f5: lea    0x8(%rax,%rcx,1),%rcx */
0x85, 0xd2,                               /*fa: test   %edx,%edx */
0x74, 0x08,                               /*fc: je     106 <op_ge+0x106> */
0xc7, 0x01, 0x02, 0x00, 0x00, 0x00,       /*fe: movl   $0x2,(%rcx) */
0xeb, 0x06,                               /*104: jmp    10c <op_ge+0x10c> */
0xc7, 0x01, 0x00, 0x00, 0x00, 0x00,       /*106: movl   $0x0,(%rcx) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*111: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*114: shl    $0x4,%rcx */
0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*118: movl   $0x1,(%rax,%rcx,1) */
0x58,                                     /*11f: pop    %rax */
0xeb, 0x44,                               /*120: jmp    166 <op_ge+0x166> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*122: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*127: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*12c: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*131: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*136: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*13c: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*142: callq  147 <op_ge+0x147> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*147: mov    0x0(%rip),%rdi        # 14e <op_ge+0x14e> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*14e: mov    0x0(%rip),%rsi        # 155 <op_ge+0x155> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*155: mov    0x0(%rip),%rcx        # 15c <op_ge+0x15c> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15c: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*161: jmpq   166 <op_ge+0x166> */

};
static uint8_t op_ge__rodata[] = {

};


static uint8_t op_array__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%r14        # a <op_array+0xa> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*f: shl    $0x4,%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rdi        # 1a <op_array+0x1a> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*1f: shl    $0x4,%rdx */
0x4c, 0x01, 0xf2,                         /*23: add    %r14,%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*26: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2b: callq  30 <op_array+0x30> */
0x49, 0x89, 0x04, 0x1e,                   /*30: mov    %rax,(%r14,%rbx,1) */
0x41, 0x89, 0x54, 0x1e, 0x08,             /*34: mov    %edx,0x8(%r14,%rbx,1) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*39: mov    0x0(%rip),%eax        # 3f <op_array+0x3f> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*3f: mov    0x0(%rip),%rcx        # 46 <op_array+0x46> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*46: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*4c: pop    %rbx */
0x41, 0x5e,                               /*4d: pop    %r14 */

};
static uint8_t op_array__rodata[] = {

};


static uint8_t op_arycat__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x53,                                     /*4: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*5: mov    0x0(%rip),%r14        # c <op_arycat+0xc> */
0x4c, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*c: mov    0x0(%rip),%r15        # 13 <op_arycat+0x13> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*13: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*18: shl    $0x4,%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*21: shl    $0x4,%rax */
0x49, 0x8b, 0x34, 0x07,                   /*25: mov    (%r15,%rax,1),%rsi */
0x41, 0x8b, 0x54, 0x07, 0x08,             /*29: mov    0x8(%r15,%rax,1),%edx */
0x4c, 0x89, 0xf7,                         /*2e: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*31: callq  36 <op_arycat+0x36> */
0x41, 0x89, 0xd0,                         /*36: mov    %edx,%r8d */
0x49, 0x8b, 0x34, 0x1f,                   /*39: mov    (%r15,%rbx,1),%rsi */
0x41, 0x8b, 0x54, 0x1f, 0x08,             /*3d: mov    0x8(%r15,%rbx,1),%edx */
0x4c, 0x89, 0xf7,                         /*42: mov    %r14,%rdi */
0x48, 0x89, 0xc1,                         /*45: mov    %rax,%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*48: callq  4d <op_arycat+0x4d> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*4d: mov    0x0(%rip),%eax        # 53 <op_arycat+0x53> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*53: mov    0x0(%rip),%rcx        # 5a <op_arycat+0x5a> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*5a: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*60: pop    %rbx */
0x41, 0x5e,                               /*61: pop    %r14 */
0x41, 0x5f,                               /*63: pop    %r15 */

};
static uint8_t op_arycat__rodata[] = {

};


static uint8_t op_arypush__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_arypush+0x7> */
0x4c, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%r8        # e <op_arypush+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*13: shl    $0x4,%rcx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*1c: shl    $0x4,%rax */
0x49, 0x8b, 0x34, 0x08,                   /*20: mov    (%r8,%rcx,1),%rsi */
0x41, 0x8b, 0x54, 0x08, 0x08,             /*24: mov    0x8(%r8,%rcx,1),%edx */
0x49, 0x8b, 0x0c, 0x00,                   /*29: mov    (%r8,%rax,1),%rcx */
0x45, 0x8b, 0x44, 0x00, 0x08,             /*2d: mov    0x8(%r8,%rax,1),%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*32: callq  37 <op_arypush+0x37> */

};
static uint8_t op_arypush__rodata[] = {

};


static uint8_t op_aref__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rbx        # a <op_aref+0xa> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*f: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x0b,                   /*13: mov    (%rbx,%rcx,1),%rsi */
0x8b, 0x44, 0x0b, 0x08,                   /*17: mov    0x8(%rbx,%rcx,1),%eax */
0x83, 0xf8, 0x0e,                         /*1b: cmp    $0xe,%eax */
0x75, 0x2b,                               /*1e: jne    4b <op_aref+0x4b> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*20: mov    $0x0,%r14d */
0x49, 0xc1, 0xe6, 0x04,                   /*26: shl    $0x4,%r14 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*2a: mov    0x0(%rip),%rdi        # 31 <op_aref+0x31> */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*31: mov    $0xe,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*36: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3b: callq  40 <op_aref+0x40> */
0x4a, 0x89, 0x04, 0x33,                   /*40: mov    %rax,(%rbx,%r14,1) */
0x42, 0x89, 0x54, 0x33, 0x08,             /*44: mov    %edx,0x8(%rbx,%r14,1) */
0xeb, 0x45,                               /*49: jmp    90 <op_aref+0x90> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4b: mov    $0x0,%edx */
0x85, 0xd2,                               /*50: test   %edx,%edx */
0x75, 0x1b,                               /*52: jne    6f <op_aref+0x6f> */
0x8b, 0x4c, 0x0b, 0x0c,                   /*54: mov    0xc(%rbx,%rcx,1),%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*58: mov    $0x0,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*5d: shl    $0x4,%rdx */
0x48, 0x89, 0x34, 0x13,                   /*61: mov    %rsi,(%rbx,%rdx,1) */
0x89, 0x44, 0x13, 0x08,                   /*65: mov    %eax,0x8(%rbx,%rdx,1) */
0x89, 0x4c, 0x13, 0x0c,                   /*69: mov    %ecx,0xc(%rbx,%rdx,1) */
0xeb, 0x21,                               /*6d: jmp    90 <op_aref+0x90> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*6f: mov    $0x0,%eax */
0x48, 0x98,                               /*74: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*76: shl    $0x4,%rax */
0xc7, 0x44, 0x03, 0x08, 0x00, 0x00, 0x00, 0x00,/*7a: movl   $0x0,0x8(%rbx,%rax,1) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*82: mov    0x0(%rip),%rcx        # 89 <op_aref+0x89> */
0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*89: movl   $0x0,(%rcx,%rax,1) */
0x5b,                                     /*90: pop    %rbx */
0x41, 0x5e,                               /*91: pop    %r14 */

};
static uint8_t op_aref__rodata[] = {

};


static uint8_t op_aset__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_aset+0x7> */
0x4c, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%r9        # e <op_aset+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*13: shl    $0x4,%rcx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*1c: shl    $0x4,%rax */
0x49, 0x8b, 0x34, 0x09,                   /*20: mov    (%r9,%rcx,1),%rsi */
0x41, 0x8b, 0x54, 0x09, 0x08,             /*24: mov    0x8(%r9,%rcx,1),%edx */
0x4d, 0x8b, 0x04, 0x01,                   /*29: mov    (%r9,%rax,1),%r8 */
0x45, 0x8b, 0x4c, 0x01, 0x08,             /*2d: mov    0x8(%r9,%rax,1),%r9d */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*32: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*37: callq  3c <op_aset+0x3c> */

};
static uint8_t op_aset__rodata[] = {

};


static uint8_t op_apost__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*a: mov    0x0(%rip),%rax        # 11 <op_apost+0x11> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*16: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*19: shl    $0x4,%rcx */
0x4c, 0x8d, 0x2c, 0x08,                   /*1d: lea    (%rax,%rcx,1),%r13 */
0x4c, 0x8d, 0x64, 0x08, 0x08,             /*21: lea    0x8(%rax,%rcx,1),%r12 */
0x83, 0x7c, 0x08, 0x08, 0x0e,             /*26: cmpl   $0xe,0x8(%rax,%rcx,1) */
0x0f, 0x85, 0xa3, 0x00, 0x00, 0x00,       /*2b: jne    d4 <op_apost+0xd4> */
0x4c, 0x8b, 0x34, 0x08,                   /*31: mov    (%rax,%rcx,1),%r14 */
0x41, 0x8b, 0x5e, 0x18,                   /*35: mov    0x18(%r14),%ebx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*39: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3e: mov    $0x0,%ecx */
0x01, 0xc1,                               /*43: add    %eax,%ecx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*45: mov    0x0(%rip),%rdi        # 4c <op_apost+0x4c> */
0x39, 0xcb,                               /*4c: cmp    %ecx,%ebx */
0x0f, 0x8e, 0xe7, 0x00, 0x00, 0x00,       /*4e: jle    13b <op_apost+0x13b> */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*54: mov    $0x0,%ebp */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*59: mov    $0x0,%esi */
0x48, 0x63, 0xd6,                         /*5e: movslq %esi,%rdx */
0xf7, 0xde,                               /*61: neg    %esi */
0x29, 0xee,                               /*63: sub    %ebp,%esi */
0x01, 0xde,                               /*65: add    %ebx,%esi */
0x48, 0xc1, 0xe2, 0x04,                   /*67: shl    $0x4,%rdx */
0x49, 0x03, 0x56, 0x28,                   /*6b: add    0x28(%r14),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6f: callq  74 <op_apost+0x74> */
0x49, 0x89, 0x45, 0x00,                   /*74: mov    %rax,0x0(%r13) */
0x41, 0x89, 0x14, 0x24,                   /*78: mov    %edx,(%r12) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7c: mov    $0x0,%eax */
0x85, 0xed,                               /*81: test   %ebp,%ebp */
0x0f, 0x84, 0x7c, 0x01, 0x00, 0x00,       /*83: je     205 <op_apost+0x205> */
0xf7, 0xdd,                               /*89: neg    %ebp */
0x48, 0x98,                               /*8b: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*8d: shl    $0x4,%rax */
0x48, 0x83, 0xc0, 0x10,                   /*91: add    $0x10,%rax */
0x90,                                     /*95: nop */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*96: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*a0: mov    0x0(%rip),%rcx        # a7 <op_apost+0xa7> */
0x8d, 0x14, 0x2b,                         /*a7: lea    (%rbx,%rbp,1),%edx */
0x48, 0x63, 0xd2,                         /*aa: movslq %edx,%rdx */
0x49, 0x8b, 0x76, 0x28,                   /*ad: mov    0x28(%r14),%rsi */
0x48, 0xc1, 0xe2, 0x04,                   /*b1: shl    $0x4,%rdx */
0x48, 0x8b, 0x3c, 0x16,                   /*b5: mov    (%rsi,%rdx,1),%rdi */
0x48, 0x8b, 0x54, 0x16, 0x08,             /*b9: mov    0x8(%rsi,%rdx,1),%rdx */
0x48, 0x89, 0x54, 0x01, 0x08,             /*be: mov    %rdx,0x8(%rcx,%rax,1) */
0x48, 0x89, 0x3c, 0x01,                   /*c3: mov    %rdi,(%rcx,%rax,1) */
0x48, 0x83, 0xc0, 0x10,                   /*c7: add    $0x10,%rax */
0xff, 0xc5,                               /*cb: inc    %ebp */
0x75, 0xd1,                               /*cd: jne    a0 <op_apost+0xa0> */
0xe9, 0x31, 0x01, 0x00, 0x00,             /*cf: jmpq   205 <op_apost+0x205> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*d4: mov    0x0(%rip),%rdi        # db <op_apost+0xdb> */
0x31, 0xf6,                               /*db: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*dd: callq  e2 <op_apost+0xe2> */
0x49, 0x89, 0x45, 0x00,                   /*e2: mov    %rax,0x0(%r13) */
0x41, 0x89, 0x14, 0x24,                   /*e6: mov    %edx,(%r12) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ea: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ef: mov    $0x0,%eax */
0x85, 0xc0,                               /*f4: test   %eax,%eax */
0x0f, 0x84, 0x09, 0x01, 0x00, 0x00,       /*f6: je     205 <op_apost+0x205> */
0x48, 0x63, 0xc9,                         /*fc: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*ff: shl    $0x4,%rcx */
0x0f, 0x1f, 0x00,                         /*103: nopl   (%rax) */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*106: nopw   %cs:0x0(%rax,%rax,1) */
0xff, 0xc8,                               /*110: dec    %eax */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*112: mov    0x0(%rip),%rdx        # 119 <op_apost+0x119> */
0xc7, 0x44, 0x0a, 0x18, 0x00, 0x00, 0x00, 0x00,/*119: movl   $0x0,0x18(%rdx,%rcx,1) */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*121: mov    0x0(%rip),%rdx        # 128 <op_apost+0x128> */
0xc7, 0x44, 0x0a, 0x10, 0x00, 0x00, 0x00, 0x00,/*128: movl   $0x0,0x10(%rdx,%rcx,1) */
0x48, 0x8d, 0x49, 0x10,                   /*130: lea    0x10(%rcx),%rcx */
0x75, 0xda,                               /*134: jne    110 <op_apost+0x110> */
0xe9, 0xca, 0x00, 0x00, 0x00,             /*136: jmpq   205 <op_apost+0x205> */
0x45, 0x31, 0xff,                         /*13b: xor    %r15d,%r15d */
0x31, 0xf6,                               /*13e: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*140: callq  145 <op_apost+0x145> */
0x49, 0x89, 0x45, 0x00,                   /*145: mov    %rax,0x0(%r13) */
0x41, 0x89, 0x14, 0x24,                   /*149: mov    %edx,(%r12) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14d: mov    $0x0,%eax */
0x39, 0xc3,                               /*152: cmp    %eax,%ebx */
0x7e, 0x56,                               /*154: jle    1ac <op_apost+0x1ac> */
0x44, 0x8d, 0x7b, 0xff,                   /*156: lea    -0x1(%rbx),%r15d */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*15a: mov    $0x0,%eax */
0x41, 0x29, 0xc7,                         /*15f: sub    %eax,%r15d */
0x29, 0xc3,                               /*162: sub    %eax,%ebx */
0x48, 0x98,                               /*164: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*166: shl    $0x4,%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16a: mov    $0x0,%ecx */
0xff, 0xc1,                               /*16f: inc    %ecx */
0x48, 0x63, 0xc9,                         /*171: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*174: shl    $0x4,%rcx */
0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*178: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*180: mov    0x0(%rip),%rdx        # 187 <op_apost+0x187> */
0x49, 0x8b, 0x76, 0x28,                   /*187: mov    0x28(%r14),%rsi */
0x48, 0x8b, 0x3c, 0x06,                   /*18b: mov    (%rsi,%rax,1),%rdi */
0x48, 0x8b, 0x74, 0x06, 0x08,             /*18f: mov    0x8(%rsi,%rax,1),%rsi */
0x48, 0x89, 0x74, 0x0a, 0x08,             /*194: mov    %rsi,0x8(%rdx,%rcx,1) */
0x48, 0x89, 0x3c, 0x0a,                   /*199: mov    %rdi,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x10,                   /*19d: add    $0x10,%rcx */
0x48, 0x83, 0xc0, 0x10,                   /*1a1: add    $0x10,%rax */
0xff, 0xcb,                               /*1a5: dec    %ebx */
0x75, 0xd7,                               /*1a7: jne    180 <op_apost+0x180> */
0x41, 0xff, 0xc7,                         /*1a9: inc    %r15d */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1ac: mov    $0x0,%eax */
0x41, 0x39, 0xc7,                         /*1b1: cmp    %eax,%r15d */
0x7d, 0x4f,                               /*1b4: jge    205 <op_apost+0x205> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1b6: mov    $0x0,%eax */
0x44, 0x29, 0xf8,                         /*1bb: sub    %r15d,%eax */
0x49, 0x63, 0xd7,                         /*1be: movslq %r15d,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1c1: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1c6: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1c8: movslq %ecx,%rcx */
0x48, 0x01, 0xd1,                         /*1cb: add    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*1ce: shl    $0x4,%rcx */
0x0f, 0x1f, 0x40, 0x00,                   /*1d2: nopl   0x0(%rax) */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1d6: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*1e0: mov    0x0(%rip),%rdx        # 1e7 <op_apost+0x1e7> */
0xc7, 0x44, 0x0a, 0x08, 0x00, 0x00, 0x00, 0x00,/*1e7: movl   $0x0,0x8(%rdx,%rcx,1) */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*1ef: mov    0x0(%rip),%rdx        # 1f6 <op_apost+0x1f6> */
0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, /*1f6: movl   $0x0,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x10,                   /*1fd: add    $0x10,%rcx */
0xff, 0xc8,                               /*201: dec    %eax */
0x75, 0xdb,                               /*203: jne    1e0 <op_apost+0x1e0> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*205: mov    0x0(%rip),%eax        # 20b <op_apost+0x20b> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*20b: mov    0x0(%rip),%rcx        # 212 <op_apost+0x212> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*212: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*218: pop    %rbx */
0x41, 0x5c,                               /*219: pop    %r12 */
0x41, 0x5d,                               /*21b: pop    %r13 */
0x41, 0x5e,                               /*21d: pop    %r14 */
0x41, 0x5f,                               /*21f: pop    %r15 */
0x5d,                                     /*221: pop    %rbp */

};
static uint8_t op_apost__rodata[] = {

};


static uint8_t op_string__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%r14        # a <op_string+0xa> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*f: shl    $0x4,%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rdi        # 1a <op_string+0x1a> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1a: mov    0x0(%rip),%rax        # 21 <op_string+0x21> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*26: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x08,                   /*2a: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*2e: mov    0x8(%rax,%rcx,1),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*32: callq  37 <op_string+0x37> */
0x49, 0x89, 0x04, 0x1e,                   /*37: mov    %rax,(%r14,%rbx,1) */
0x41, 0x89, 0x54, 0x1e, 0x08,             /*3b: mov    %edx,0x8(%r14,%rbx,1) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*40: mov    0x0(%rip),%eax        # 46 <op_string+0x46> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*46: mov    0x0(%rip),%rcx        # 4d <op_string+0x4d> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*4d: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*53: pop    %rbx */
0x41, 0x5e,                               /*54: pop    %r14 */

};
static uint8_t op_string__rodata[] = {

};


static uint8_t op_strcat__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_strcat+0x7> */
0x4c, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%r8        # e <op_strcat+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*13: shl    $0x4,%rcx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*1c: shl    $0x4,%rax */
0x49, 0x8b, 0x34, 0x08,                   /*20: mov    (%r8,%rcx,1),%rsi */
0x41, 0x8b, 0x54, 0x08, 0x08,             /*24: mov    0x8(%r8,%rcx,1),%edx */
0x49, 0x8b, 0x0c, 0x00,                   /*29: mov    (%r8,%rax,1),%rcx */
0x45, 0x8b, 0x44, 0x00, 0x08,             /*2d: mov    0x8(%r8,%rax,1),%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*32: callq  37 <op_strcat+0x37> */

};
static uint8_t op_strcat__rodata[] = {

};


static uint8_t op_hash__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x41, 0x55,                               /*5: push   %r13 */
0x41, 0x54,                               /*7: push   %r12 */
0x53,                                     /*9: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*a: sub    $0x18,%rsp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rdi        # 15 <op_hash+0x15> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ebx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1f: callq  24 <op_hash+0x24> */
0x49, 0x89, 0xc6,                         /*24: mov    %rax,%r14 */
0x41, 0x89, 0xd7,                         /*27: mov    %edx,%r15d */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*2a: mov    $0x0,%eax */
0x8d, 0x0c, 0x58,                         /*2f: lea    (%rax,%rbx,2),%ecx */
0x39, 0xc8,                               /*32: cmp    %ecx,%eax */
0x7d, 0x6f,                               /*34: jge    a5 <op_hash+0xa5> */
0x4c, 0x63, 0xe0,                         /*36: movslq %eax,%r12 */
0x4c, 0x89, 0xe3,                         /*39: mov    %r12,%rbx */
0x48, 0xc1, 0xe3, 0x04,                   /*3c: shl    $0x4,%rbx */
0x48, 0x83, 0xcb, 0x08,                   /*40: or     $0x8,%rbx */
0x41, 0x8d, 0x44, 0x24, 0x01,             /*44: lea    0x1(%r12),%eax */
0x48, 0x63, 0xe8,                         /*49: movslq %eax,%rbp */
0x48, 0xc1, 0xe5, 0x04,                   /*4c: shl    $0x4,%rbp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*50: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*55: mov    $0x0,%ecx */
0x8d, 0x04, 0x41,                         /*5a: lea    (%rcx,%rax,2),%eax */
0x4c, 0x63, 0xe8,                         /*5d: movslq %eax,%r13 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*60: mov    0x0(%rip),%rdi        # 67 <op_hash+0x67> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*67: mov    0x0(%rip),%rax        # 6e <op_hash+0x6e> */
0x48, 0x8b, 0x4c, 0x18, 0xf8,             /*6e: mov    -0x8(%rax,%rbx,1),%rcx */
0x44, 0x8b, 0x04, 0x18,                   /*73: mov    (%rax,%rbx,1),%r8d */
0x48, 0x8b, 0x14, 0x28,                   /*77: mov    (%rax,%rbp,1),%rdx */
0x48, 0x8b, 0x44, 0x28, 0x08,             /*7b: mov    0x8(%rax,%rbp,1),%rax */
0x48, 0x89, 0x44, 0x24, 0x08,             /*80: mov    %rax,0x8(%rsp) */
0x48, 0x89, 0x14, 0x24,                   /*85: mov    %rdx,(%rsp) */
0x4c, 0x89, 0xf6,                         /*89: mov    %r14,%rsi */
0x44, 0x89, 0xfa,                         /*8c: mov    %r15d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8f: callq  94 <op_hash+0x94> */
0x49, 0x83, 0xc4, 0x02,                   /*94: add    $0x2,%r12 */
0x48, 0x83, 0xc3, 0x20,                   /*98: add    $0x20,%rbx */
0x48, 0x83, 0xc5, 0x20,                   /*9c: add    $0x20,%rbp */
0x4d, 0x39, 0xec,                         /*a0: cmp    %r13,%r12 */
0x7c, 0xbb,                               /*a3: jl     60 <op_hash+0x60> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*a5: mov    0x0(%rip),%rax        # ac <op_hash+0xac> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ac: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*b1: shl    $0x4,%rcx */
0x4c, 0x89, 0x34, 0x08,                   /*b5: mov    %r14,(%rax,%rcx,1) */
0x44, 0x89, 0x7c, 0x08, 0x08,             /*b9: mov    %r15d,0x8(%rax,%rcx,1) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*be: mov    0x0(%rip),%eax        # c4 <op_hash+0xc4> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*c4: mov    0x0(%rip),%rcx        # cb <op_hash+0xcb> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*cb: mov    %eax,0xdc(%rcx) */
0x48, 0x83, 0xc4, 0x18,                   /*d1: add    $0x18,%rsp */
0x5b,                                     /*d5: pop    %rbx */
0x41, 0x5c,                               /*d6: pop    %r12 */
0x41, 0x5d,                               /*d8: pop    %r13 */
0x41, 0x5e,                               /*da: pop    %r14 */
0x41, 0x5f,                               /*dc: pop    %r15 */
0x5d,                                     /*de: pop    %rbp */

};
static uint8_t op_hash__rodata[] = {

};


static uint8_t op_lambda__text[] = {
0xbf, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14: callq  19 <op_lambda+0x19> */

};
static uint8_t op_lambda__rodata[] = {

};


static uint8_t op_range__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rbx        # a <op_range+0xa> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*a: mov    $0x0,%r14d */
0x49, 0xc1, 0xe6, 0x04,                   /*10: shl    $0x4,%r14 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*14: mov    0x0(%rip),%rdi        # 1b <op_range+0x1b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%eax */
0x48, 0x98,                               /*20: cltq */
0x48, 0x89, 0xc1,                         /*22: mov    %rax,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*25: shl    $0x4,%rcx */
0xff, 0xc0,                               /*29: inc    %eax */
0x48, 0x98,                               /*2b: cltq */
0x48, 0xc1, 0xe0, 0x04,                   /*2d: shl    $0x4,%rax */
0x48, 0x8b, 0x34, 0x0b,                   /*31: mov    (%rbx,%rcx,1),%rsi */
0x8b, 0x54, 0x0b, 0x08,                   /*35: mov    0x8(%rbx,%rcx,1),%edx */
0x48, 0x8b, 0x0c, 0x03,                   /*39: mov    (%rbx,%rax,1),%rcx */
0x44, 0x8b, 0x44, 0x03, 0x08,             /*3d: mov    0x8(%rbx,%rax,1),%r8d */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*42: mov    $0x0,%eax */
0x44, 0x0f, 0xb6, 0xc8,                   /*47: movzbl %al,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*4b: callq  50 <op_range+0x50> */
0x4a, 0x89, 0x04, 0x33,                   /*50: mov    %rax,(%rbx,%r14,1) */
0x42, 0x89, 0x54, 0x33, 0x08,             /*54: mov    %edx,0x8(%rbx,%r14,1) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*59: mov    0x0(%rip),%eax        # 5f <op_range+0x5f> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*5f: mov    0x0(%rip),%rcx        # 66 <op_range+0x66> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*66: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*6c: pop    %rbx */
0x41, 0x5e,                               /*6d: pop    %r14 */

};
static uint8_t op_range__rodata[] = {

};


static uint8_t op_oclass__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_oclass+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*c: shl    $0x4,%rcx */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rdx        # 17 <op_oclass+0x17> */
0x48, 0x8b, 0x52, 0x40,                   /*17: mov    0x40(%rdx),%rdx */
0x0f, 0xb6, 0x32,                         /*1b: movzbl (%rdx),%esi */
0x48, 0x89, 0x14, 0x08,                   /*1e: mov    %rdx,(%rax,%rcx,1) */
0x89, 0x74, 0x08, 0x08,                   /*22: mov    %esi,0x8(%rax,%rcx,1) */

};
static uint8_t op_oclass__rodata[] = {

};


static uint8_t op_class__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_class+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x44, 0x8b, 0x0c, 0x88,                   /*c: mov    (%rax,%rcx,4),%r9d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rdi        # 17 <op_class+0x17> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%eax */
0x48, 0x63, 0xc8,                         /*1c: movslq %eax,%rcx */
0x48, 0x89, 0xca,                         /*1f: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*22: shl    $0x4,%rdx */
0x4c, 0x8b, 0x14, 0x17,                   /*26: mov    (%rdi,%rdx,1),%r10 */
0x4c, 0x89, 0xd0,                         /*2a: mov    %r10,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*2d: shr    $0x20,%rax */
0x8b, 0x54, 0x17, 0x08,                   /*31: mov    0x8(%rdi,%rdx,1),%edx */
0xff, 0xc1,                               /*35: inc    %ecx */
0x48, 0x63, 0xf1,                         /*37: movslq %ecx,%rsi */
0x48, 0xc1, 0xe6, 0x04,                   /*3a: shl    $0x4,%rsi */
0x48, 0x8b, 0x0c, 0x37,                   /*3e: mov    (%rdi,%rsi,1),%rcx */
0x44, 0x8b, 0x44, 0x37, 0x08,             /*42: mov    0x8(%rdi,%rsi,1),%r8d */
0x85, 0xd2,                               /*47: test   %edx,%edx */
0x75, 0x25,                               /*49: jne    70 <op_class+0x70> */
0x31, 0xd2,                               /*4b: xor    %edx,%edx */
0x45, 0x85, 0xd2,                         /*4d: test   %r10d,%r10d */
0x75, 0x1e,                               /*50: jne    70 <op_class+0x70> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*52: mov    0x0(%rip),%rax        # 59 <op_class+0x59> */
0x48, 0x8b, 0x40, 0x18,                   /*59: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*5d: mov    0x20(%rax),%rax */
0x4c, 0x8b, 0x50, 0x48,                   /*61: mov    0x48(%rax),%r10 */
0x41, 0x0f, 0xb6, 0x12,                   /*65: movzbl (%r10),%edx */
0x4c, 0x89, 0xd0,                         /*69: mov    %r10,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*6c: shr    $0x20,%rax */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*70: mov    0x0(%rip),%rdi        # 77 <op_class+0x77> */
0x48, 0xc1, 0xe0, 0x20,                   /*77: shl    $0x20,%rax */
0x44, 0x89, 0xd6,                         /*7b: mov    %r10d,%esi */
0x48, 0x09, 0xc6,                         /*7e: or     %rax,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*81: callq  86 <op_class+0x86> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*86: mov    0x0(%rip),%rcx        # 8d <op_class+0x8d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8d: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*92: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*95: shl    $0x4,%rdx */
0x0f, 0xb6, 0x30,                         /*99: movzbl (%rax),%esi */
0x48, 0x89, 0x04, 0x11,                   /*9c: mov    %rax,(%rcx,%rdx,1) */
0x89, 0x74, 0x11, 0x08,                   /*a0: mov    %esi,0x8(%rcx,%rdx,1) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*a4: mov    0x0(%rip),%eax        # aa <op_class+0xaa> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*aa: mov    0x0(%rip),%rcx        # b1 <op_class+0xb1> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*b1: mov    %eax,0xdc(%rcx) */

};
static uint8_t op_class__rodata[] = {

};


static uint8_t op_module__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_module+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x8b, 0x0c, 0x88,                         /*c: mov    (%rax,%rcx,4),%ecx */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rdx        # 16 <op_module+0x16> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%eax */
0x48, 0x63, 0xf8,                         /*1b: movslq %eax,%rdi */
0x48, 0xc1, 0xe7, 0x04,                   /*1e: shl    $0x4,%rdi */
0x48, 0x8b, 0x34, 0x3a,                   /*22: mov    (%rdx,%rdi,1),%rsi */
0x48, 0x89, 0xf0,                         /*26: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*29: shr    $0x20,%rax */
0x8b, 0x54, 0x3a, 0x08,                   /*2d: mov    0x8(%rdx,%rdi,1),%edx */
0x85, 0xd2,                               /*31: test   %edx,%edx */
0x75, 0x23,                               /*33: jne    58 <op_module+0x58> */
0x31, 0xd2,                               /*35: xor    %edx,%edx */
0x85, 0xf6,                               /*37: test   %esi,%esi */
0x75, 0x1d,                               /*39: jne    58 <op_module+0x58> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*3b: mov    0x0(%rip),%rax        # 42 <op_module+0x42> */
0x48, 0x8b, 0x40, 0x18,                   /*42: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*46: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*4a: mov    0x48(%rax),%rsi */
0x0f, 0xb6, 0x16,                         /*4e: movzbl (%rsi),%edx */
0x48, 0x89, 0xf0,                         /*51: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*54: shr    $0x20,%rax */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*58: mov    0x0(%rip),%rdi        # 5f <op_module+0x5f> */
0x48, 0xc1, 0xe0, 0x20,                   /*5f: shl    $0x20,%rax */
0x89, 0xf6,                               /*63: mov    %esi,%esi */
0x48, 0x09, 0xc6,                         /*65: or     %rax,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*68: callq  6d <op_module+0x6d> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*6d: mov    0x0(%rip),%rcx        # 74 <op_module+0x74> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*74: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*79: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*7c: shl    $0x4,%rdx */
0x0f, 0xb6, 0x30,                         /*80: movzbl (%rax),%esi */
0x48, 0x89, 0x04, 0x11,                   /*83: mov    %rax,(%rcx,%rdx,1) */
0x89, 0x74, 0x11, 0x08,                   /*87: mov    %esi,0x8(%rcx,%rdx,1) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*8b: mov    0x0(%rip),%eax        # 91 <op_module+0x91> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*91: mov    0x0(%rip),%rcx        # 98 <op_module+0x98> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*98: mov    %eax,0xdc(%rcx) */

};
static uint8_t op_module__rodata[] = {

};


static uint8_t op_exec__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x54,                               /*13: push   %r12 */
0x53,                                     /*15: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_exec+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x4c, 0x63, 0xe1,                         /*22: movslq %ecx,%r12 */
0x4c, 0x89, 0xe5,                         /*25: mov    %r12,%rbp */
0x48, 0xc1, 0xe5, 0x04,                   /*28: shl    $0x4,%rbp */
0x4c, 0x8b, 0x34, 0x28,                   /*2c: mov    (%rax,%rbp,1),%r14 */
0x44, 0x8b, 0x7c, 0x28, 0x08,             /*30: mov    0x8(%rax,%rbp,1),%r15d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*35: mov    0x0(%rip),%rdi        # 3c <op_exec+0x3c> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3c: callq  41 <op_exec+0x41> */
0x48, 0x89, 0xc3,                         /*41: mov    %rax,%rbx */
0x48, 0xc7, 0x43, 0x30, 0x00, 0x00, 0x00, 0x00,/*44: movq   $0x0,0x30(%rbx) */
0x44, 0x89, 0x63, 0x44,                   /*4c: mov    %r12d,0x44(%rbx) */
0xc7, 0x03, 0x00, 0x00, 0x00, 0x00,       /*50: movl   $0x0,(%rbx) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*56: mov    0x0(%rip),%rax        # 5d <op_exec+0x5d> */
0x48, 0x8b, 0x40, 0x18,                   /*5d: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*61: mov    0x8(%rax),%rax */
0x48, 0x89, 0x43, 0x10,                   /*65: mov    %rax,0x10(%rbx) */
0xc7, 0x43, 0x40, 0x00, 0x00, 0x00, 0x00, /*69: movl   $0x0,0x40(%rbx) */
0x4c, 0x89, 0x73, 0x48,                   /*70: mov    %r14,0x48(%rbx) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*74: mov    0x0(%rip),%rax        # 7b <op_exec+0x7b> */
0x48, 0x8b, 0x40, 0x18,                   /*7b: mov    0x18(%rax),%rax */
0x48, 0x01, 0x68, 0x08,                   /*7f: add    %rbp,0x8(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*83: mov    0x0(%rip),%rdi        # 8a <op_exec+0x8a> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*8a: mov    0x0(%rip),%rax        # 91 <op_exec+0x91> */
0x48, 0x8b, 0x40, 0x20,                   /*91: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*95: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*9a: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*9e: callq  a3 <op_exec+0xa3> */
0x48, 0x8b, 0x4b, 0x48,                   /*a3: mov    0x48(%rbx),%rcx */
0x48, 0x89, 0x48, 0x20,                   /*a7: mov    %rcx,0x20(%rax) */
0x48, 0x89, 0x43, 0x08,                   /*ab: mov    %rax,0x8(%rbx) */
0xf6, 0x40, 0x02, 0x04,                   /*af: testb  $0x4,0x2(%rax) */
0x0f, 0x84, 0xa5, 0x00, 0x00, 0x00,       /*b3: je     15e <op_exec+0x15e> */
0xc7, 0x43, 0x18, 0x00, 0x00, 0x00, 0x00, /*b9: movl   $0x0,0x18(%rbx) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*c0: mov    0x0(%rip),%rdi        # c7 <op_exec+0xc7> */
0x48, 0x8b, 0x4f, 0x18,                   /*c7: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x59, 0x08,                   /*cb: mov    0x8(%rcx),%rbx */
0x4c, 0x89, 0xf6,                         /*cf: mov    %r14,%rsi */
0x44, 0x89, 0xfa,                         /*d2: mov    %r15d,%edx */
0xff, 0x50, 0x18,                         /*d5: callq  *0x18(%rax) */
0x48, 0x89, 0x03,                         /*d8: mov    %rax,(%rbx) */
0x89, 0x53, 0x08,                         /*db: mov    %edx,0x8(%rbx) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*de: mov    0x0(%rip),%rdi        # e5 <op_exec+0xe5> */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*e5: mov    0x0(%rip),%esi        # eb <op_exec+0xeb> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*eb: callq  f0 <op_exec+0xf0> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f0: mov    0x0(%rip),%rax        # f7 <op_exec+0xf7> */
0x48, 0x83, 0x78, 0x28, 0x00,             /*f7: cmpq   $0x0,0x28(%rax) */
0x74, 0x30,                               /*fc: je     12e <op_exec+0x12e> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*fe: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*103: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*108: callq  10d <op_exec+0x10d> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*10d: mov    0x0(%rip),%rdi        # 114 <op_exec+0x114> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*114: mov    0x0(%rip),%rsi        # 11b <op_exec+0x11b> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*11b: mov    0x0(%rip),%rcx        # 122 <op_exec+0x122> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*122: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*127: jmpq   12c <op_exec+0x12c> */
0xeb, 0x23,                               /*12c: jmp    151 <op_exec+0x151> */
0x48, 0x8b, 0x40, 0x18,                   /*12e: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*132: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*136: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*13a: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*13e: mov    %rcx,0x0(%rip)        # 145 <op_exec+0x145> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*145: mov    0x0(%rip),%rdi        # 14c <op_exec+0x14c> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14c: callq  151 <op_exec+0x151> */
0x5b,                                     /*151: pop    %rbx */
0x41, 0x5c,                               /*152: pop    %r12 */
0x41, 0x5e,                               /*154: pop    %r14 */
0x41, 0x5f,                               /*156: pop    %r15 */
0x5d,                                     /*158: pop    %rbp */
0xe9, 0xa6, 0x00, 0x00, 0x00,             /*159: jmpq   204 <op_exec+0x204> */
0x48, 0x8b, 0x40, 0x18,                   /*15e: mov    0x18(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*162: mov    %rax,0x0(%rip)        # 169 <op_exec+0x169> */
0x48, 0x8b, 0x48, 0x10,                   /*169: mov    0x10(%rax),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*16d: mov    %rcx,0x0(%rip)        # 174 <op_exec+0x174> */
0x48, 0x8b, 0x48, 0x18,                   /*174: mov    0x18(%rax),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*178: mov    %rcx,0x0(%rip)        # 17f <op_exec+0x17f> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*17f: mov    0x0(%rip),%rdi        # 186 <op_exec+0x186> */
0x0f, 0xb7, 0x70, 0x02,                   /*186: movzwl 0x2(%rax),%esi */
0xba, 0x01, 0x00, 0x00, 0x00,             /*18a: mov    $0x1,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*18f: callq  194 <op_exec+0x194> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*194: mov    0x0(%rip),%rax        # 19b <op_exec+0x19b> */
0x0f, 0xb7, 0x40, 0x02,                   /*19b: movzwl 0x2(%rax),%eax */
0x89, 0x43, 0x18,                         /*19f: mov    %eax,0x18(%rbx) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1a2: mov    0x0(%rip),%rax        # 1a9 <op_exec+0x1a9> */
0x48, 0x8b, 0x40, 0x18,                   /*1a9: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*1ad: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*1b1: mov    %rax,0x0(%rip)        # 1b8 <op_exec+0x1b8> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1b8: mov    0x0(%rip),%rax        # 1bf <op_exec+0x1bf> */
0x48, 0x8b, 0x50, 0x08,                   /*1bf: mov    0x8(%rax),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*1c3: mov    %rdx,0x0(%rip)        # 1ca <op_exec+0x1ca> */
0x48, 0x8b, 0x4b, 0x30,                   /*1ca: mov    0x30(%rbx),%rcx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*1ce: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1d3: mov    $0x0,%esi */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*1d8: mov    $0x0,%r8d */
0x31, 0xc0,                               /*1de: xor    %eax,%eax */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e0: callq  1e5 <op_exec+0x1e5> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1e5: mov    0x0(%rip),%rdi        # 1ec <op_exec+0x1ec> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*1ec: mov    0x0(%rip),%rsi        # 1f3 <op_exec+0x1f3> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1f3: mov    0x0(%rip),%rcx        # 1fa <op_exec+0x1fa> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1fa: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*1ff: jmpq   204 <op_exec+0x204> */

};
static uint8_t op_exec__rodata[] = {

};


static uint8_t op_method__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_method+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*c: movslq %ecx,%rcx */
0x48, 0x89, 0xca,                         /*f: mov    %rcx,%rdx */
0x48, 0xc1, 0xe2, 0x04,                   /*12: shl    $0x4,%rdx */
0x48, 0x8b, 0x34, 0x10,                   /*16: mov    (%rax,%rdx,1),%rsi */
0xff, 0xc1,                               /*1a: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1c: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x04,                   /*1f: shl    $0x4,%rcx */
0x48, 0x8b, 0x0c, 0x08,                   /*23: mov    (%rax,%rcx,1),%rcx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*27: mov    0x0(%rip),%rdi        # 2e <op_method+0x2e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*2e: mov    0x0(%rip),%rax        # 35 <op_method+0x35> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*35: mov    $0x0,%edx */
0x8b, 0x14, 0x90,                         /*3a: mov    (%rax,%rdx,4),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3d: callq  42 <op_method+0x42> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*42: mov    0x0(%rip),%eax        # 48 <op_method+0x48> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*48: mov    0x0(%rip),%rcx        # 4f <op_method+0x4f> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*4f: mov    %eax,0xdc(%rcx) */

};
static uint8_t op_method__rodata[] = {

};


static uint8_t op_sclass__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%r14        # a <op_sclass+0xa> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%ebx */
0x48, 0xc1, 0xe3, 0x04,                   /*f: shl    $0x4,%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rdi        # 1a <op_sclass+0x1a> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%eax */
0x48, 0xc1, 0xe0, 0x04,                   /*1f: shl    $0x4,%rax */
0x49, 0x8b, 0x34, 0x06,                   /*23: mov    (%r14,%rax,1),%rsi */
0x41, 0x8b, 0x54, 0x06, 0x08,             /*27: mov    0x8(%r14,%rax,1),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2c: callq  31 <op_sclass+0x31> */
0x49, 0x89, 0x04, 0x1e,                   /*31: mov    %rax,(%r14,%rbx,1) */
0x41, 0x89, 0x54, 0x1e, 0x08,             /*35: mov    %edx,0x8(%r14,%rbx,1) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*3a: mov    0x0(%rip),%eax        # 40 <op_sclass+0x40> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*40: mov    0x0(%rip),%rcx        # 47 <op_sclass+0x47> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*47: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*4d: pop    %rbx */
0x41, 0x5e,                               /*4e: pop    %r14 */

};
static uint8_t op_sclass__rodata[] = {

};


static uint8_t op_tclass__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x56,                               /*e: push   %r14 */
0x53,                                     /*10: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*11: mov    0x0(%rip),%rbx        # 18 <op_tclass+0x18> */
0x48, 0x8b, 0x43, 0x18,                   /*18: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1c: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x48,                   /*20: mov    0x48(%rax),%rax */
0x48, 0x85, 0xc0,                         /*24: test   %rax,%rax */
0x74, 0x1d,                               /*27: je     46 <op_tclass+0x46> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*29: mov    0x0(%rip),%rcx        # 30 <op_tclass+0x30> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*30: mov    $0x0,%edx */
0x48, 0xc1, 0xe2, 0x04,                   /*35: shl    $0x4,%rdx */
0x0f, 0xb6, 0x30,                         /*39: movzbl (%rax),%esi */
0x48, 0x89, 0x04, 0x11,                   /*3c: mov    %rax,(%rcx,%rdx,1) */
0x89, 0x74, 0x11, 0x08,                   /*40: mov    %esi,0x8(%rcx,%rdx,1) */
0xeb, 0x6b,                               /*44: jmp    b1 <op_tclass+0xb1> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*46: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*4b: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*4e: callq  53 <op_tclass+0x53> */
0x49, 0x89, 0xc6,                         /*53: mov    %rax,%r14 */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*56: mov    $0x0,%esi */
0xba, 0x19, 0x00, 0x00, 0x00,             /*5b: mov    $0x19,%edx */
0x48, 0x89, 0xdf,                         /*60: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*63: callq  68 <op_tclass+0x68> */
0x89, 0xd1,                               /*68: mov    %edx,%ecx */
0x48, 0x89, 0xdf,                         /*6a: mov    %rbx,%rdi */
0x4c, 0x89, 0xf6,                         /*6d: mov    %r14,%rsi */
0x48, 0x89, 0xc2,                         /*70: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*73: callq  78 <op_tclass+0x78> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*78: mov    0x0(%rip),%rcx        # 7f <op_tclass+0x7f> */
0x48, 0x89, 0x41, 0x28,                   /*7f: mov    %rax,0x28(%rcx) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*83: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*88: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8d: callq  92 <op_tclass+0x92> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*92: mov    0x0(%rip),%rdi        # 99 <op_tclass+0x99> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*99: mov    0x0(%rip),%rsi        # a0 <op_tclass+0xa0> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*a0: mov    0x0(%rip),%rcx        # a7 <op_tclass+0xa7> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a7: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*ac: jmpq   b1 <op_tclass+0xb1> */
0x5b,                                     /*b1: pop    %rbx */
0x41, 0x5e,                               /*b2: pop    %r14 */

};
static uint8_t op_tclass__rodata[] = {

};


static uint8_t op_debug__text[] = {
0xbf, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%ecx */
0x31, 0xc0,                               /*14: xor    %eax,%eax */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*16: callq  1b <op_debug+0x1b> */

};
static uint8_t op_debug__rodata[] = {

};


static uint8_t op_stop__text[] = {
0xbf, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%edi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*5: callq  a <op_stop+0xa> */

};
static uint8_t op_stop__rodata[] = {

};


static uint8_t op_err__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x56,                               /*f: push   %r14 */
0x53,                                     /*11: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*12: mov    0x0(%rip),%rbx        # 19 <op_err+0x19> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*19: mov    0x0(%rip),%rax        # 20 <op_err+0x20> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%ecx */
0x48, 0xc1, 0xe1, 0x04,                   /*25: shl    $0x4,%rcx */
0x48, 0x8b, 0x34, 0x08,                   /*29: mov    (%rax,%rcx,1),%rsi */
0x8b, 0x54, 0x08, 0x08,                   /*2d: mov    0x8(%rax,%rcx,1),%edx */
0x48, 0x89, 0xdf,                         /*31: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*34: callq  39 <op_err+0x39> */
0x49, 0x89, 0xc6,                         /*39: mov    %rax,%r14 */
0x89, 0xd5,                               /*3c: mov    %edx,%ebp */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*3e: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*43: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*46: callq  4b <op_err+0x4b> */
0x48, 0x89, 0xdf,                         /*4b: mov    %rbx,%rdi */
0x48, 0x89, 0xc6,                         /*4e: mov    %rax,%rsi */
0x4c, 0x89, 0xf2,                         /*51: mov    %r14,%rdx */
0x89, 0xe9,                               /*54: mov    %ebp,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*56: callq  5b <op_err+0x5b> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*5b: mov    0x0(%rip),%rcx        # 62 <op_err+0x62> */
0x48, 0x89, 0x41, 0x28,                   /*62: mov    %rax,0x28(%rcx) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*66: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*6b: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*70: callq  75 <op_err+0x75> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*75: mov    0x0(%rip),%rdi        # 7c <op_err+0x7c> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*7c: mov    0x0(%rip),%rsi        # 83 <op_err+0x83> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*83: mov    0x0(%rip),%rcx        # 8a <op_err+0x8a> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8a: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*8f: jmpq   94 <op_err+0x94> */
0x5b,                                     /*94: pop    %rbx */
0x41, 0x5e,                               /*95: pop    %r14 */
0x5d,                                     /*97: pop    %rbp */

};
static uint8_t op_err__rodata[] = {

};

typedef void (*jit_link_func_t)(uint8_t *text, uint8_t *rodata, mrb_code *pc);
extern jit_link_func_t link_funcs[];
const uint8_t* ops_text[78];
const uint8_t* ops_rodata[78];
const char *op_names[78];

static size_t op_sizes_text[] = {
  sizeof(op_nop__text), /* 0 */
  sizeof(op_move__text), /* 43 */
  sizeof(op_loadl__text), /* 50 */
  sizeof(op_loadi__text), /* 39 */
  sizeof(op_loadsym__text), /* 49 */
  sizeof(op_loadnil__text), /* 38 */
  sizeof(op_loadself__text), /* 32 */
  sizeof(op_loadt__text), /* 38 */
  sizeof(op_loadf__text), /* 38 */
  sizeof(op_getglobal__text), /* 58 */
  sizeof(op_setglobal__text), /* 51 */
  sizeof(op_getspecial__text), /* 48 */
  sizeof(op_setspecial__text), /* 41 */
  sizeof(op_getiv__text), /* 58 */
  sizeof(op_setiv__text), /* 51 */
  sizeof(op_getcv__text), /* 104 */
  sizeof(op_setcv__text), /* 51 */
  sizeof(op_getconst__text), /* 112 */
  sizeof(op_setconst__text), /* 51 */
  sizeof(op_getmcnst__text), /* 132 */
  sizeof(op_setmcnst__text), /* 76 */
  sizeof(op_getupvar__text), /* 135 */
  sizeof(op_setupvar__text), /* 132 */
  sizeof(op_jmp__text), /* 0 */
  sizeof(op_jmpif__text), /* 21 */
  sizeof(op_jmpnot__text), /* 21 */
  sizeof(op_onerr__text), /* 143 */
  sizeof(op_rescue__text), /* 74 */
  sizeof(op_poperr__text), /* 38 */
  sizeof(op_raise__text), /* 91 */
  sizeof(op_epush__text), /* 186 */
  sizeof(op_epop__text), /* 102 */
  sizeof(op_send__text), /* 82 */
  sizeof(op_sendb__text), /* 82 */
  sizeof(op_fsend__text), /* 0 */
  sizeof(op_call__text), /* 584 */
  sizeof(op_super__text), /* 1053 */
  sizeof(op_argary__text), /* 836 */
  sizeof(op_enter__text), /* 2417 */
  sizeof(op_enter_method_m__text), /* 579 */
  sizeof(op_karg__text), /* 0 */
  sizeof(op_kdict__text), /* 0 */
  sizeof(op_return__text), /* 85 */
  sizeof(op_break__text), /* 88 */
  sizeof(op_tailcall__text), /* 1048 */
  sizeof(op_blkpush__text), /* 270 */
  sizeof(op_add__text), /* 501 */
  sizeof(op_addi__text), /* 230 */
  sizeof(op_sub__text), /* 422 */
  sizeof(op_subi__text), /* 215 */
  sizeof(op_mul__text), /* 432 */
  sizeof(op_div__text), /* 372 */
  sizeof(op_eq__text), /* 405 */
  sizeof(op_lt__text), /* 374 */
  sizeof(op_le__text), /* 374 */
  sizeof(op_gt__text), /* 358 */
  sizeof(op_ge__text), /* 358 */
  sizeof(op_array__text), /* 79 */
  sizeof(op_arycat__text), /* 101 */
  sizeof(op_arypush__text), /* 55 */
  sizeof(op_aref__text), /* 147 */
  sizeof(op_aset__text), /* 60 */
  sizeof(op_apost__text), /* 546 */
  sizeof(op_string__text), /* 86 */
  sizeof(op_strcat__text), /* 55 */
  sizeof(op_hash__text), /* 223 */
  sizeof(op_lambda__text), /* 25 */
  sizeof(op_range__text), /* 111 */
  sizeof(op_oclass__text), /* 38 */
  sizeof(op_class__text), /* 183 */
  sizeof(op_module__text), /* 158 */
  sizeof(op_exec__text), /* 516 */
  sizeof(op_method__text), /* 85 */
  sizeof(op_sclass__text), /* 80 */
  sizeof(op_tclass__text), /* 180 */
  sizeof(op_debug__text), /* 27 */
  sizeof(op_stop__text), /* 10 */
  sizeof(op_err__text), /* 152 */

};
static size_t op_sizes_rodata[] = {
  sizeof(op_nop__rodata), /* 0 */
  sizeof(op_move__rodata), /* 0 */
  sizeof(op_loadl__rodata), /* 0 */
  sizeof(op_loadi__rodata), /* 0 */
  sizeof(op_loadsym__rodata), /* 0 */
  sizeof(op_loadnil__rodata), /* 0 */
  sizeof(op_loadself__rodata), /* 0 */
  sizeof(op_loadt__rodata), /* 0 */
  sizeof(op_loadf__rodata), /* 0 */
  sizeof(op_getglobal__rodata), /* 0 */
  sizeof(op_setglobal__rodata), /* 0 */
  sizeof(op_getspecial__rodata), /* 0 */
  sizeof(op_setspecial__rodata), /* 0 */
  sizeof(op_getiv__rodata), /* 0 */
  sizeof(op_setiv__rodata), /* 0 */
  sizeof(op_getcv__rodata), /* 0 */
  sizeof(op_setcv__rodata), /* 0 */
  sizeof(op_getconst__rodata), /* 0 */
  sizeof(op_setconst__rodata), /* 0 */
  sizeof(op_getmcnst__rodata), /* 0 */
  sizeof(op_setmcnst__rodata), /* 0 */
  sizeof(op_getupvar__rodata), /* 0 */
  sizeof(op_setupvar__rodata), /* 0 */
  sizeof(op_jmp__rodata), /* 0 */
  sizeof(op_jmpif__rodata), /* 0 */
  sizeof(op_jmpnot__rodata), /* 0 */
  sizeof(op_onerr__rodata), /* 0 */
  sizeof(op_rescue__rodata), /* 0 */
  sizeof(op_poperr__rodata), /* 0 */
  sizeof(op_raise__rodata), /* 0 */
  sizeof(op_epush__rodata), /* 0 */
  sizeof(op_epop__rodata), /* 0 */
  sizeof(op_send__rodata), /* 0 */
  sizeof(op_sendb__rodata), /* 0 */
  sizeof(op_fsend__rodata), /* 0 */
  sizeof(op_call__rodata), /* 0 */
  sizeof(op_super__rodata), /* 0 */
  sizeof(op_argary__rodata), /* 0 */
  sizeof(op_enter__rodata), /* 0 */
  sizeof(op_enter_method_m__rodata), /* 0 */
  sizeof(op_karg__rodata), /* 0 */
  sizeof(op_kdict__rodata), /* 0 */
  sizeof(op_return__rodata), /* 0 */
  sizeof(op_break__rodata), /* 0 */
  sizeof(op_tailcall__rodata), /* 64 */
  sizeof(op_blkpush__rodata), /* 0 */
  sizeof(op_add__rodata), /* 0 */
  sizeof(op_addi__rodata), /* 0 */
  sizeof(op_sub__rodata), /* 0 */
  sizeof(op_subi__rodata), /* 0 */
  sizeof(op_mul__rodata), /* 0 */
  sizeof(op_div__rodata), /* 0 */
  sizeof(op_eq__rodata), /* 0 */
  sizeof(op_lt__rodata), /* 0 */
  sizeof(op_le__rodata), /* 0 */
  sizeof(op_gt__rodata), /* 0 */
  sizeof(op_ge__rodata), /* 0 */
  sizeof(op_array__rodata), /* 0 */
  sizeof(op_arycat__rodata), /* 0 */
  sizeof(op_arypush__rodata), /* 0 */
  sizeof(op_aref__rodata), /* 0 */
  sizeof(op_aset__rodata), /* 0 */
  sizeof(op_apost__rodata), /* 0 */
  sizeof(op_string__rodata), /* 0 */
  sizeof(op_strcat__rodata), /* 0 */
  sizeof(op_hash__rodata), /* 0 */
  sizeof(op_lambda__rodata), /* 0 */
  sizeof(op_range__rodata), /* 0 */
  sizeof(op_oclass__rodata), /* 0 */
  sizeof(op_class__rodata), /* 0 */
  sizeof(op_module__rodata), /* 0 */
  sizeof(op_exec__rodata), /* 0 */
  sizeof(op_method__rodata), /* 0 */
  sizeof(op_sclass__rodata), /* 0 */
  sizeof(op_tclass__rodata), /* 0 */
  sizeof(op_debug__rodata), /* 0 */
  sizeof(op_stop__rodata), /* 0 */
  sizeof(op_err__rodata), /* 0 */

};
static int8_t op_algn_text[] = {
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,

};
static int8_t op_algn_rodata[] = {
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  8,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,

};

extern void init_linker();
void init_ops() {
  static int init = 0;
  if(init == 0) {
    init = 1;
    init_linker();
    ops_text[0] = op_nop__text;
    ops_rodata[0] = op_nop__rodata;
    op_names[0] = "op_nop";
    ops_text[1] = op_move__text;
    ops_rodata[1] = op_move__rodata;
    op_names[1] = "op_move";
    ops_text[2] = op_loadl__text;
    ops_rodata[2] = op_loadl__rodata;
    op_names[2] = "op_loadl";
    ops_text[3] = op_loadi__text;
    ops_rodata[3] = op_loadi__rodata;
    op_names[3] = "op_loadi";
    ops_text[4] = op_loadsym__text;
    ops_rodata[4] = op_loadsym__rodata;
    op_names[4] = "op_loadsym";
    ops_text[5] = op_loadnil__text;
    ops_rodata[5] = op_loadnil__rodata;
    op_names[5] = "op_loadnil";
    ops_text[6] = op_loadself__text;
    ops_rodata[6] = op_loadself__rodata;
    op_names[6] = "op_loadself";
    ops_text[7] = op_loadt__text;
    ops_rodata[7] = op_loadt__rodata;
    op_names[7] = "op_loadt";
    ops_text[8] = op_loadf__text;
    ops_rodata[8] = op_loadf__rodata;
    op_names[8] = "op_loadf";
    ops_text[9] = op_getglobal__text;
    ops_rodata[9] = op_getglobal__rodata;
    op_names[9] = "op_getglobal";
    ops_text[10] = op_setglobal__text;
    ops_rodata[10] = op_setglobal__rodata;
    op_names[10] = "op_setglobal";
    ops_text[11] = op_getspecial__text;
    ops_rodata[11] = op_getspecial__rodata;
    op_names[11] = "op_getspecial";
    ops_text[12] = op_setspecial__text;
    ops_rodata[12] = op_setspecial__rodata;
    op_names[12] = "op_setspecial";
    ops_text[13] = op_getiv__text;
    ops_rodata[13] = op_getiv__rodata;
    op_names[13] = "op_getiv";
    ops_text[14] = op_setiv__text;
    ops_rodata[14] = op_setiv__rodata;
    op_names[14] = "op_setiv";
    ops_text[15] = op_getcv__text;
    ops_rodata[15] = op_getcv__rodata;
    op_names[15] = "op_getcv";
    ops_text[16] = op_setcv__text;
    ops_rodata[16] = op_setcv__rodata;
    op_names[16] = "op_setcv";
    ops_text[17] = op_getconst__text;
    ops_rodata[17] = op_getconst__rodata;
    op_names[17] = "op_getconst";
    ops_text[18] = op_setconst__text;
    ops_rodata[18] = op_setconst__rodata;
    op_names[18] = "op_setconst";
    ops_text[19] = op_getmcnst__text;
    ops_rodata[19] = op_getmcnst__rodata;
    op_names[19] = "op_getmcnst";
    ops_text[20] = op_setmcnst__text;
    ops_rodata[20] = op_setmcnst__rodata;
    op_names[20] = "op_setmcnst";
    ops_text[21] = op_getupvar__text;
    ops_rodata[21] = op_getupvar__rodata;
    op_names[21] = "op_getupvar";
    ops_text[22] = op_setupvar__text;
    ops_rodata[22] = op_setupvar__rodata;
    op_names[22] = "op_setupvar";
    ops_text[23] = op_jmp__text;
    ops_rodata[23] = op_jmp__rodata;
    op_names[23] = "op_jmp";
    ops_text[24] = op_jmpif__text;
    ops_rodata[24] = op_jmpif__rodata;
    op_names[24] = "op_jmpif";
    ops_text[25] = op_jmpnot__text;
    ops_rodata[25] = op_jmpnot__rodata;
    op_names[25] = "op_jmpnot";
    ops_text[26] = op_onerr__text;
    ops_rodata[26] = op_onerr__rodata;
    op_names[26] = "op_onerr";
    ops_text[27] = op_rescue__text;
    ops_rodata[27] = op_rescue__rodata;
    op_names[27] = "op_rescue";
    ops_text[28] = op_poperr__text;
    ops_rodata[28] = op_poperr__rodata;
    op_names[28] = "op_poperr";
    ops_text[29] = op_raise__text;
    ops_rodata[29] = op_raise__rodata;
    op_names[29] = "op_raise";
    ops_text[30] = op_epush__text;
    ops_rodata[30] = op_epush__rodata;
    op_names[30] = "op_epush";
    ops_text[31] = op_epop__text;
    ops_rodata[31] = op_epop__rodata;
    op_names[31] = "op_epop";
    ops_text[32] = op_send__text;
    ops_rodata[32] = op_send__rodata;
    op_names[32] = "op_send";
    ops_text[33] = op_sendb__text;
    ops_rodata[33] = op_sendb__rodata;
    op_names[33] = "op_sendb";
    ops_text[34] = op_fsend__text;
    ops_rodata[34] = op_fsend__rodata;
    op_names[34] = "op_fsend";
    ops_text[35] = op_call__text;
    ops_rodata[35] = op_call__rodata;
    op_names[35] = "op_call";
    ops_text[36] = op_super__text;
    ops_rodata[36] = op_super__rodata;
    op_names[36] = "op_super";
    ops_text[37] = op_argary__text;
    ops_rodata[37] = op_argary__rodata;
    op_names[37] = "op_argary";
    ops_text[38] = op_enter__text;
    ops_rodata[38] = op_enter__rodata;
    op_names[38] = "op_enter";
    ops_text[39] = op_enter_method_m__text;
    ops_rodata[39] = op_enter_method_m__rodata;
    op_names[39] = "op_enter_method_m";
    ops_text[40] = op_karg__text;
    ops_rodata[40] = op_karg__rodata;
    op_names[40] = "op_karg";
    ops_text[41] = op_kdict__text;
    ops_rodata[41] = op_kdict__rodata;
    op_names[41] = "op_kdict";
    ops_text[42] = op_return__text;
    ops_rodata[42] = op_return__rodata;
    op_names[42] = "op_return";
    ops_text[43] = op_break__text;
    ops_rodata[43] = op_break__rodata;
    op_names[43] = "op_break";
    ops_text[44] = op_tailcall__text;
    ops_rodata[44] = op_tailcall__rodata;
    op_names[44] = "op_tailcall";
    ops_text[45] = op_blkpush__text;
    ops_rodata[45] = op_blkpush__rodata;
    op_names[45] = "op_blkpush";
    ops_text[46] = op_add__text;
    ops_rodata[46] = op_add__rodata;
    op_names[46] = "op_add";
    ops_text[47] = op_addi__text;
    ops_rodata[47] = op_addi__rodata;
    op_names[47] = "op_addi";
    ops_text[48] = op_sub__text;
    ops_rodata[48] = op_sub__rodata;
    op_names[48] = "op_sub";
    ops_text[49] = op_subi__text;
    ops_rodata[49] = op_subi__rodata;
    op_names[49] = "op_subi";
    ops_text[50] = op_mul__text;
    ops_rodata[50] = op_mul__rodata;
    op_names[50] = "op_mul";
    ops_text[51] = op_div__text;
    ops_rodata[51] = op_div__rodata;
    op_names[51] = "op_div";
    ops_text[52] = op_eq__text;
    ops_rodata[52] = op_eq__rodata;
    op_names[52] = "op_eq";
    ops_text[53] = op_lt__text;
    ops_rodata[53] = op_lt__rodata;
    op_names[53] = "op_lt";
    ops_text[54] = op_le__text;
    ops_rodata[54] = op_le__rodata;
    op_names[54] = "op_le";
    ops_text[55] = op_gt__text;
    ops_rodata[55] = op_gt__rodata;
    op_names[55] = "op_gt";
    ops_text[56] = op_ge__text;
    ops_rodata[56] = op_ge__rodata;
    op_names[56] = "op_ge";
    ops_text[57] = op_array__text;
    ops_rodata[57] = op_array__rodata;
    op_names[57] = "op_array";
    ops_text[58] = op_arycat__text;
    ops_rodata[58] = op_arycat__rodata;
    op_names[58] = "op_arycat";
    ops_text[59] = op_arypush__text;
    ops_rodata[59] = op_arypush__rodata;
    op_names[59] = "op_arypush";
    ops_text[60] = op_aref__text;
    ops_rodata[60] = op_aref__rodata;
    op_names[60] = "op_aref";
    ops_text[61] = op_aset__text;
    ops_rodata[61] = op_aset__rodata;
    op_names[61] = "op_aset";
    ops_text[62] = op_apost__text;
    ops_rodata[62] = op_apost__rodata;
    op_names[62] = "op_apost";
    ops_text[63] = op_string__text;
    ops_rodata[63] = op_string__rodata;
    op_names[63] = "op_string";
    ops_text[64] = op_strcat__text;
    ops_rodata[64] = op_strcat__rodata;
    op_names[64] = "op_strcat";
    ops_text[65] = op_hash__text;
    ops_rodata[65] = op_hash__rodata;
    op_names[65] = "op_hash";
    ops_text[66] = op_lambda__text;
    ops_rodata[66] = op_lambda__rodata;
    op_names[66] = "op_lambda";
    ops_text[67] = op_range__text;
    ops_rodata[67] = op_range__rodata;
    op_names[67] = "op_range";
    ops_text[68] = op_oclass__text;
    ops_rodata[68] = op_oclass__rodata;
    op_names[68] = "op_oclass";
    ops_text[69] = op_class__text;
    ops_rodata[69] = op_class__rodata;
    op_names[69] = "op_class";
    ops_text[70] = op_module__text;
    ops_rodata[70] = op_module__rodata;
    op_names[70] = "op_module";
    ops_text[71] = op_exec__text;
    ops_rodata[71] = op_exec__rodata;
    op_names[71] = "op_exec";
    ops_text[72] = op_method__text;
    ops_rodata[72] = op_method__rodata;
    op_names[72] = "op_method";
    ops_text[73] = op_sclass__text;
    ops_rodata[73] = op_sclass__rodata;
    op_names[73] = "op_sclass";
    ops_text[74] = op_tclass__text;
    ops_rodata[74] = op_tclass__rodata;
    op_names[74] = "op_tclass";
    ops_text[75] = op_debug__text;
    ops_rodata[75] = op_debug__rodata;
    op_names[75] = "op_debug";
    ops_text[76] = op_stop__text;
    ops_rodata[76] = op_stop__rodata;
    op_names[76] = "op_stop";
    ops_text[77] = op_err__text;
    ops_rodata[77] = op_err__rodata;
    op_names[77] = "op_err";
  }
}

uint8_t *jit_return(uint8_t *b) {
  *b++ = 0xc3;
  return b;
}
uint8_t *jit_jump(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 235;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *b++ = 233;
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_if(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 116;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31729;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_not(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 117;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31473;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
