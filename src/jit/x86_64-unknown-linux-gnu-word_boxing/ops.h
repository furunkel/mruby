
static uint8_t op_nop__text[] = {

};
static uint8_t op_nop__rodata[] = {

};


static uint8_t op_move__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_move+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%edx */
0x48, 0x8b, 0x0c, 0xc8,                   /*11: mov    (%rax,%rcx,8),%rcx */
0x48, 0x89, 0x0c, 0xd0,                   /*15: mov    %rcx,(%rax,%rdx,8) */

};
static uint8_t op_move__rodata[] = {

};


static uint8_t op_loadl__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadl+0x7> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rcx        # e <op_loadl+0xe> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*13: mov    $0x0,%esi */
0x48, 0x8b, 0x0c, 0xd1,                   /*18: mov    (%rcx,%rdx,8),%rcx */
0x48, 0x89, 0x0c, 0xf0,                   /*1c: mov    %rcx,(%rax,%rsi,8) */

};
static uint8_t op_loadl__rodata[] = {

};


static uint8_t op_loadi__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadi+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x83, 0x0c, 0xc8, 0x01,                   /*c: orl    $0x1,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rax        # 17 <op_loadi+0x17> */
0x8b, 0x14, 0xc8,                         /*17: mov    (%rax,%rcx,8),%edx */
0x83, 0xe2, 0x01,                         /*1a: and    $0x1,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%esi */
0x01, 0xf6,                               /*22: add    %esi,%esi */
0x09, 0xd6,                               /*24: or     %edx,%esi */
0x89, 0x34, 0xc8,                         /*26: mov    %esi,(%rax,%rcx,8) */

};
static uint8_t op_loadi__rodata[] = {

};


static uint8_t op_loadsym__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadsym+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0xc6, 0x04, 0xc8, 0x0e,                   /*c: movb   $0xe,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rax        # 17 <op_loadsym+0x17> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%edx */
0x8b, 0x04, 0x90,                         /*1c: mov    (%rax,%rdx,4),%eax */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*1f: mov    0x0(%rip),%rdx        # 26 <op_loadsym+0x26> */
0x89, 0x44, 0xca, 0x04,                   /*26: mov    %eax,0x4(%rdx,%rcx,8) */

};
static uint8_t op_loadsym__rodata[] = {

};


static uint8_t op_loadnil__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadnil+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*c: movq   $0x0,(%rax,%rcx,8) */

};
static uint8_t op_loadnil__rodata[] = {

};


static uint8_t op_loadself__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadself+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0x8b, 0x10,                         /*c: mov    (%rax),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*f: mov    %rdx,(%rax,%rcx,8) */

};
static uint8_t op_loadself__rodata[] = {

};


static uint8_t op_loadt__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadt+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*c: movq   $0x4,(%rax,%rcx,8) */

};
static uint8_t op_loadt__rodata[] = {

};


static uint8_t op_loadf__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadf+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00,/*c: movq   $0x2,(%rax,%rcx,8) */

};
static uint8_t op_loadf__rodata[] = {

};


static uint8_t op_getglobal__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rbx        # 8 <op_getglobal+0x8> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*8: mov    0x0(%rip),%rdi        # f <op_getglobal+0xf> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rax        # 16 <op_getglobal+0x16> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*1b: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e: callq  23 <op_getglobal+0x23> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*23: mov    $0x0,%ecx */
0x48, 0x89, 0x04, 0xcb,                   /*28: mov    %rax,(%rbx,%rcx,8) */
0x5b,                                     /*2c: pop    %rbx */

};
static uint8_t op_getglobal__rodata[] = {

};


static uint8_t op_setglobal__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setglobal+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setglobal+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setglobal+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*22: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_setglobal+0x2b> */

};
static uint8_t op_setglobal__rodata[] = {

};


static uint8_t op_getspecial__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rbx        # 8 <op_getspecial+0x8> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*8: mov    0x0(%rip),%rdi        # f <op_getspecial+0xf> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14: callq  19 <op_getspecial+0x19> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*19: mov    $0x0,%ecx */
0x48, 0x89, 0x04, 0xcb,                   /*1e: mov    %rax,(%rbx,%rcx,8) */
0x5b,                                     /*22: pop    %rbx */

};
static uint8_t op_getspecial__rodata[] = {

};


static uint8_t op_setspecial__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setspecial+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setspecial+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*13: mov    (%rax,%rcx,8),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_setspecial+0x21> */

};
static uint8_t op_setspecial__rodata[] = {

};


static uint8_t op_getiv__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rbx        # 8 <op_getiv+0x8> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*8: mov    0x0(%rip),%rdi        # f <op_getiv+0xf> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rax        # 16 <op_getiv+0x16> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*1b: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e: callq  23 <op_getiv+0x23> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*23: mov    $0x0,%ecx */
0x48, 0x89, 0x04, 0xcb,                   /*28: mov    %rax,(%rbx,%rcx,8) */
0x5b,                                     /*2c: pop    %rbx */

};
static uint8_t op_getiv__rodata[] = {

};


static uint8_t op_setiv__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setiv+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setiv+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setiv+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*22: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_setiv+0x2b> */

};
static uint8_t op_setiv__rodata[] = {

};


static uint8_t op_getcv__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rax        # 8 <op_getcv+0x8> */
0x48, 0x8b, 0x40, 0x18,                   /*8: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*c: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*10: movq   $0x0,0x38(%rax) */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rbx        # 1f <op_getcv+0x1f> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1f: mov    0x0(%rip),%rdi        # 26 <op_getcv+0x26> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*26: mov    0x0(%rip),%rax        # 2d <op_getcv+0x2d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2d: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*32: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*35: callq  3a <op_getcv+0x3a> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3a: mov    $0x0,%ecx */
0x48, 0x89, 0x04, 0xcb,                   /*3f: mov    %rax,(%rbx,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*43: mov    0x0(%rip),%rax        # 4a <op_getcv+0x4a> */
0x48, 0x8b, 0x40, 0x18,                   /*4a: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*4e: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*52: movq   $0x0,0x38(%rax) */
0x5b,                                     /*5a: pop    %rbx */

};
static uint8_t op_getcv__rodata[] = {

};


static uint8_t op_setcv__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setcv+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setcv+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setcv+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*22: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_setcv+0x2b> */

};
static uint8_t op_setcv__rodata[] = {

};


static uint8_t op_getconst__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_getconst+0x7> */
0x48, 0x8b, 0x40, 0x18,                   /*7: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*b: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*f: movq   $0x0,0x38(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*17: mov    0x0(%rip),%rdi        # 1e <op_getconst+0x1e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1e: mov    0x0(%rip),%rax        # 25 <op_getconst+0x25> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*25: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*2a: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2d: callq  32 <op_getconst+0x32> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*32: mov    0x0(%rip),%rcx        # 39 <op_getconst+0x39> */
0x48, 0x8b, 0x49, 0x18,                   /*39: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*3d: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*41: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*49: mov    0x0(%rip),%rcx        # 50 <op_getconst+0x50> */
0x48, 0x8b, 0x49, 0x18,                   /*50: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*54: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*58: mov    %rcx,0x0(%rip)        # 5f <op_getconst+0x5f> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5f: mov    $0x0,%edx */
0x48, 0x89, 0x04, 0xd1,                   /*64: mov    %rax,(%rcx,%rdx,8) */

};
static uint8_t op_getconst__rodata[] = {

};


static uint8_t op_setconst__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setconst+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setconst+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setconst+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*22: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_setconst+0x2b> */

};
static uint8_t op_setconst__rodata[] = {

};


static uint8_t op_getmcnst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rax        # 8 <op_getmcnst+0x8> */
0x48, 0x8b, 0x40, 0x18,                   /*8: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*c: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*10: movq   $0x0,0x38(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rdi        # 1f <op_getmcnst+0x1f> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1f: mov    0x0(%rip),%rax        # 26 <op_getmcnst+0x26> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*26: mov    0x0(%rip),%rcx        # 2d <op_getmcnst+0x2d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2d: mov    $0x0,%edx */
0x8b, 0x14, 0x91,                         /*32: mov    (%rcx,%rdx,4),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*35: mov    $0x0,%ecx */
0x48, 0x63, 0xd9,                         /*3a: movslq %ecx,%rbx */
0x48, 0x8b, 0x34, 0xd8,                   /*3d: mov    (%rax,%rbx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*41: callq  46 <op_getmcnst+0x46> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*46: mov    0x0(%rip),%rcx        # 4d <op_getmcnst+0x4d> */
0x48, 0x8b, 0x49, 0x18,                   /*4d: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*51: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*55: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*5d: mov    0x0(%rip),%rcx        # 64 <op_getmcnst+0x64> */
0x48, 0x8b, 0x49, 0x18,                   /*64: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*68: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*6c: mov    %rcx,0x0(%rip)        # 73 <op_getmcnst+0x73> */
0x48, 0x89, 0x04, 0xd9,                   /*73: mov    %rax,(%rcx,%rbx,8) */
0x5b,                                     /*77: pop    %rbx */

};
static uint8_t op_getmcnst__rodata[] = {

};


static uint8_t op_setmcnst__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setmcnst+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setmcnst+0xe> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rcx        # 15 <op_setmcnst+0x15> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%edx */
0x8b, 0x14, 0x91,                         /*1a: mov    (%rcx,%rdx,4),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x8d, 0x71, 0x01,                         /*22: lea    0x1(%rcx),%esi */
0x48, 0x63, 0xf6,                         /*25: movslq %esi,%rsi */
0x48, 0x8b, 0x34, 0xf0,                   /*28: mov    (%rax,%rsi,8),%rsi */
0x48, 0x63, 0xc9,                         /*2c: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*2f: mov    (%rax,%rcx,8),%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*33: callq  38 <op_setmcnst+0x38> */

};
static uint8_t op_setmcnst__rodata[] = {

};


static uint8_t op_getupvar__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_getupvar+0x7> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rcx        # e <op_getupvar+0xe> */
0x48, 0x8b, 0x49, 0x18,                   /*e: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*12: mov    0x20(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*16: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*1a: mov    0x28(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*1e: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*21: sete   %dl */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*24: mov    $0x0,%esi */
0x85, 0xf6,                               /*29: test   %esi,%esi */
0x74, 0x16,                               /*2b: je     43 <op_getupvar+0x43> */
0x0f, 0x1f, 0x00,                         /*2d: nopl   (%rax) */
0xf6, 0xc2, 0x01,                         /*30: test   $0x1,%dl */
0x75, 0x12,                               /*33: jne    47 <op_getupvar+0x47> */
0x48, 0x8b, 0x49, 0x08,                   /*35: mov    0x8(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*39: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*3c: sete   %dl */
0xff, 0xce,                               /*3f: dec    %esi */
0x75, 0xed,                               /*41: jne    30 <op_getupvar+0x30> */
0x84, 0xd2,                               /*43: test   %dl,%dl */
0x74, 0x0f,                               /*45: je     56 <op_getupvar+0x56> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*47: mov    $0x0,%ecx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*4c: movq   $0x0,(%rax,%rcx,8) */
0xeb, 0x19,                               /*54: jmp    6f <op_getupvar+0x6f> */
0x48, 0x8b, 0x49, 0x18,                   /*56: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5a: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*5f: movslq %edx,%rdx */
0x48, 0x8b, 0x0c, 0xd1,                   /*62: mov    (%rcx,%rdx,8),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*66: mov    $0x0,%edx */
0x48, 0x89, 0x0c, 0xd0,                   /*6b: mov    %rcx,(%rax,%rdx,8) */

};
static uint8_t op_getupvar__rodata[] = {

};


static uint8_t op_setupvar__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_setupvar+0x7> */
0x48, 0x8b, 0x40, 0x18,                   /*7: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*b: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*f: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x70, 0x28,                   /*13: mov    0x28(%rax),%rsi */
0x48, 0x85, 0xf6,                         /*17: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*1a: sete   %al */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x85, 0xc9,                               /*22: test   %ecx,%ecx */
0x74, 0x1c,                               /*24: je     42 <op_setupvar+0x42> */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*26: nopw   %cs:0x0(%rax,%rax,1) */
0xa8, 0x01,                               /*30: test   $0x1,%al */
0x75, 0x3e,                               /*32: jne    72 <op_setupvar+0x72> */
0x48, 0x8b, 0x76, 0x08,                   /*34: mov    0x8(%rsi),%rsi */
0x48, 0x85, 0xf6,                         /*38: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*3b: sete   %al */
0xff, 0xc9,                               /*3e: dec    %ecx */
0x75, 0xee,                               /*40: jne    30 <op_setupvar+0x30> */
0x84, 0xc0,                               /*42: test   %al,%al */
0x75, 0x2c,                               /*44: jne    72 <op_setupvar+0x72> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*46: mov    0x0(%rip),%rax        # 4d <op_setupvar+0x4d> */
0x48, 0x8b, 0x4e, 0x18,                   /*4d: mov    0x18(%rsi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*56: mov    $0x0,%edi */
0x48, 0x63, 0xff,                         /*5b: movslq %edi,%rdi */
0x48, 0x8b, 0x04, 0xd0,                   /*5e: mov    (%rax,%rdx,8),%rax */
0x48, 0x89, 0x04, 0xf9,                   /*62: mov    %rax,(%rcx,%rdi,8) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*66: mov    0x0(%rip),%rdi        # 6d <op_setupvar+0x6d> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6d: callq  72 <op_setupvar+0x72> */

};
static uint8_t op_setupvar__rodata[] = {

};


static uint8_t op_jmp__text[] = {

};
static uint8_t op_jmp__rodata[] = {

};


static uint8_t op_jmpif__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_jmpif+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0x8b, 0x04, 0xc8,                   /*c: mov    (%rax,%rcx,8),%rax */
0x48, 0x83, 0xc8, 0x02,                   /*10: or     $0x2,%rax */
0x48, 0x83, 0xf8, 0x02,                   /*14: cmp    $0x2,%rax */

};
static uint8_t op_jmpif__rodata[] = {

};


static uint8_t op_jmpnot__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_jmpnot+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0x8b, 0x04, 0xc8,                   /*c: mov    (%rax,%rcx,8),%rax */
0x48, 0x83, 0xc8, 0x02,                   /*10: or     $0x2,%rax */
0x48, 0x83, 0xf8, 0x02,                   /*14: cmp    $0x2,%rax */

};
static uint8_t op_jmpnot__rodata[] = {

};


static uint8_t op_onerr__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_onerr+0x7> */
0x48, 0x8b, 0x40, 0x18,                   /*7: mov    0x18(%rax),%rax */
0x8b, 0x70, 0x40,                         /*b: mov    0x40(%rax),%esi */
0x48, 0x8b, 0x48, 0x20,                   /*e: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x1c,                         /*12: mov    0x1c(%rcx),%edx */
0x39, 0xd6,                               /*15: cmp    %edx,%esi */
0x7f, 0x4d,                               /*17: jg     66 <op_onerr+0x66> */
0x8d, 0x0c, 0x36,                         /*19: lea    (%rsi,%rsi,1),%ecx */
0x85, 0xf6,                               /*1c: test   %esi,%esi */
0xba, 0x10, 0x00, 0x00, 0x00,             /*1e: mov    $0x10,%edx */
0x0f, 0x45, 0xd1,                         /*23: cmovne %ecx,%edx */
0x89, 0x50, 0x40,                         /*26: mov    %edx,0x40(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*29: mov    0x0(%rip),%rdi        # 30 <op_onerr+0x30> */
0x48, 0x8b, 0x47, 0x18,                   /*30: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x38,                   /*34: mov    0x38(%rax),%rsi */
0x48, 0x63, 0x50, 0x40,                   /*38: movslq 0x40(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*3c: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*40: callq  45 <op_onerr+0x45> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*45: mov    0x0(%rip),%rcx        # 4c <op_onerr+0x4c> */
0x48, 0x8b, 0x49, 0x18,                   /*4c: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*50: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*54: mov    0x0(%rip),%rax        # 5b <op_onerr+0x5b> */
0x48, 0x8b, 0x40, 0x18,                   /*5b: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*5f: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x1c,                         /*63: mov    0x1c(%rcx),%edx */
0x8d, 0x42, 0x01,                         /*66: lea    0x1(%rdx),%eax */
0x89, 0x41, 0x1c,                         /*69: mov    %eax,0x1c(%rcx) */
0x48, 0x63, 0xc2,                         /*6c: movslq %edx,%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*6f: mov    0x0(%rip),%rcx        # 76 <op_onerr+0x76> */
0x48, 0x8b, 0x49, 0x18,                   /*76: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x38,                   /*7a: mov    0x38(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7e: mov    $0x0,%edx */
0x48, 0x8d, 0x14, 0x95, 0x00, 0x00, 0x00, 0x00,/*83: lea    0x0(,%rdx,4),%rdx */
0x48, 0x89, 0x14, 0xc1,                   /*8b: mov    %rdx,(%rcx,%rax,8) */

};
static uint8_t op_onerr__rodata[] = {

};


static uint8_t op_rescue__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_rescue+0x7> */
0x48, 0x8b, 0x40, 0x28,                   /*7: mov    0x28(%rax),%rax */
0x8b, 0x08,                               /*b: mov    (%rax),%ecx */
0x0f, 0xb6, 0xd1,                         /*d: movzbl %cl,%edx */
0x0f, 0xb6, 0xc9,                         /*10: movzbl %cl,%ecx */
0x83, 0xfa, 0x05,                         /*13: cmp    $0x5,%edx */
0x77, 0x2b,                               /*16: ja     43 <op_rescue+0x43> */
0xff, 0x24, 0xcd, 0x00, 0x00, 0x00, 0x00, /*18: jmpq   *0x0(,%rcx,8) */
0x48, 0x85, 0xc0,                         /*1f: test   %rax,%rax */
0x0f, 0x95, 0xc0,                         /*22: setne  %al */
0x0f, 0xb6, 0xc0,                         /*25: movzbl %al,%eax */
0x48, 0x01, 0xc0,                         /*28: add    %rax,%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*2b: mov    0x0(%rip),%rcx        # 32 <op_rescue+0x32> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*32: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*37: movslq %edx,%rdx */
0x48, 0x89, 0x04, 0xd1,                   /*3a: mov    %rax,(%rcx,%rdx,8) */
0xe9, 0xc2, 0x00, 0x00, 0x00,             /*3e: jmpq   105 <op_rescue+0x105> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*43: mov    0x0(%rip),%rax        # 4a <op_rescue+0x4a> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4a: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*4f: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00,/*52: movq   $0x0,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*5a: mov    0x0(%rip),%rax        # 61 <op_rescue+0x61> */
0x48, 0x8b, 0x40, 0x28,                   /*61: mov    0x28(%rax),%rax */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*65: mov    0x0(%rip),%rdx        # 6c <op_rescue+0x6c> */
0x48, 0x89, 0x04, 0xca,                   /*6c: mov    %rax,(%rdx,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*70: mov    0x0(%rip),%rax        # 77 <op_rescue+0x77> */
0x48, 0x8b, 0x04, 0xc8,                   /*77: mov    (%rax,%rcx,8),%rax */
0x48, 0x85, 0xc0,                         /*7b: test   %rax,%rax */
0x0f, 0x84, 0x81, 0x00, 0x00, 0x00,       /*7e: je     105 <op_rescue+0x105> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*84: mov    0x0(%rip),%rcx        # 8b <op_rescue+0x8b> */
0x48, 0x8b, 0x49, 0x28,                   /*8b: mov    0x28(%rcx),%rcx */
0x8a, 0x09,                               /*8f: mov    (%rcx),%cl */
0x88, 0x08,                               /*91: mov    %cl,(%rax) */
0xeb, 0x70,                               /*93: jmp    105 <op_rescue+0x105> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*95: mov    0x0(%rip),%rax        # 9c <op_rescue+0x9c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*9c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*a1: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*a4: movq   $0x4,(%rax,%rcx,8) */
0xeb, 0x57,                               /*ac: jmp    105 <op_rescue+0x105> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*ae: mov    0x0(%rip),%rax        # b5 <op_rescue+0xb5> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*b5: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*ba: movslq %ecx,%rcx */
0x83, 0x0c, 0xc8, 0x01,                   /*bd: orl    $0x1,(%rax,%rcx,8) */
0xeb, 0x13,                               /*c1: jmp    d6 <op_rescue+0xd6> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*c3: mov    0x0(%rip),%rax        # ca <op_rescue+0xca> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ca: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*cf: movslq %ecx,%rcx */
0xc6, 0x04, 0xc8, 0x0e,                   /*d2: movb   $0xe,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*d6: mov    0x0(%rip),%rax        # dd <op_rescue+0xdd> */
0x48, 0x8b, 0x40, 0x28,                   /*dd: mov    0x28(%rax),%rax */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*e1: mov    0x0(%rip),%rdx        # e8 <op_rescue+0xe8> */
0x48, 0x89, 0x04, 0xca,                   /*e8: mov    %rax,(%rdx,%rcx,8) */
0xeb, 0x17,                               /*ec: jmp    105 <op_rescue+0x105> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*ee: mov    0x0(%rip),%rax        # f5 <op_rescue+0xf5> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f5: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*fa: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x06, 0x00, 0x00, 0x00,/*fd: movq   $0x6,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*105: mov    0x0(%rip),%rax        # 10c <op_rescue+0x10c> */
0x48, 0xc7, 0x40, 0x28, 0x00, 0x00, 0x00, 0x00,/*10c: movq   $0x0,0x28(%rax) */

};
static uint8_t op_rescue__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};


static uint8_t op_poperr__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x85, 0xc0,                               /*5: test   %eax,%eax */
0x74, 0x1d,                               /*7: je     26 <op_poperr+0x26> */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*9: nopl   0x0(%rax) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rcx        # 17 <op_poperr+0x17> */
0x48, 0x8b, 0x49, 0x18,                   /*17: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*1b: mov    0x20(%rcx),%rcx */
0xff, 0x49, 0x1c,                         /*1f: decl   0x1c(%rcx) */
0xff, 0xc8,                               /*22: dec    %eax */
0x75, 0xea,                               /*24: jne    10 <op_poperr+0x10> */

};
static uint8_t op_poperr__rodata[] = {

};


static uint8_t op_raise__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_raise+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x8b, 0x04, 0xc8,                   /*1a: mov    (%rax,%rcx,8),%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1e: mov    0x0(%rip),%rcx        # 25 <op_raise+0x25> */
0x48, 0x89, 0x41, 0x28,                   /*25: mov    %rax,0x28(%rcx) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*29: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2e: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*33: callq  38 <op_raise+0x38> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*38: mov    0x0(%rip),%rdi        # 3f <op_raise+0x3f> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3f: mov    0x0(%rip),%rsi        # 46 <op_raise+0x46> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*46: mov    0x0(%rip),%rcx        # 4d <op_raise+0x4d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4d: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*52: jmpq   57 <op_raise+0x57> */

};
static uint8_t op_raise__rodata[] = {

};


static uint8_t op_epush__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rdi        # 8 <op_epush+0x8> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*8: mov    0x0(%rip),%rax        # f <op_epush+0xf> */
0x48, 0x8b, 0x40, 0x20,                   /*f: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*18: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_epush+0x21> */
0x48, 0x89, 0xc3,                         /*21: mov    %rax,%rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*24: mov    0x0(%rip),%rax        # 2b <op_epush+0x2b> */
0x48, 0x8b, 0x40, 0x18,                   /*2b: mov    0x18(%rax),%rax */
0x8b, 0x70, 0x50,                         /*2f: mov    0x50(%rax),%esi */
0x48, 0x8b, 0x48, 0x20,                   /*32: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*36: mov    0x20(%rcx),%edx */
0x39, 0xd6,                               /*39: cmp    %edx,%esi */
0x7f, 0x4d,                               /*3b: jg     8a <op_epush+0x8a> */
0x8d, 0x0c, 0x36,                         /*3d: lea    (%rsi,%rsi,1),%ecx */
0x85, 0xf6,                               /*40: test   %esi,%esi */
0xba, 0x10, 0x00, 0x00, 0x00,             /*42: mov    $0x10,%edx */
0x0f, 0x45, 0xd1,                         /*47: cmovne %ecx,%edx */
0x89, 0x50, 0x50,                         /*4a: mov    %edx,0x50(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*4d: mov    0x0(%rip),%rdi        # 54 <op_epush+0x54> */
0x48, 0x8b, 0x47, 0x18,                   /*54: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*58: mov    0x48(%rax),%rsi */
0x48, 0x63, 0x50, 0x50,                   /*5c: movslq 0x50(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*60: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*64: callq  69 <op_epush+0x69> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*69: mov    0x0(%rip),%rcx        # 70 <op_epush+0x70> */
0x48, 0x8b, 0x49, 0x18,                   /*70: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x48,                   /*74: mov    %rax,0x48(%rcx) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*78: mov    0x0(%rip),%rax        # 7f <op_epush+0x7f> */
0x48, 0x8b, 0x40, 0x18,                   /*7f: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*83: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*87: mov    0x20(%rcx),%edx */
0x8d, 0x42, 0x01,                         /*8a: lea    0x1(%rdx),%eax */
0x89, 0x41, 0x20,                         /*8d: mov    %eax,0x20(%rcx) */
0x48, 0x63, 0xc2,                         /*90: movslq %edx,%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*93: mov    0x0(%rip),%rcx        # 9a <op_epush+0x9a> */
0x48, 0x8b, 0x49, 0x18,                   /*9a: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x48,                   /*9e: mov    0x48(%rcx),%rcx */
0x48, 0x89, 0x1c, 0xc1,                   /*a2: mov    %rbx,(%rcx,%rax,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*a6: mov    0x0(%rip),%eax        # ac <op_epush+0xac> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*ac: mov    0x0(%rip),%rcx        # b3 <op_epush+0xb3> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*b3: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*b9: pop    %rbx */

};
static uint8_t op_epush__rodata[] = {

};


static uint8_t op_epop__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x53,                                     /*5: push   %rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*6: mov    $0x0,%eax */
0x85, 0xc0,                               /*b: test   %eax,%eax */
0x7e, 0x51,                               /*d: jle    60 <op_epop+0x60> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rax        # 16 <op_epop+0x16> */
0x48, 0x8b, 0x40, 0x18,                   /*16: mov    0x18(%rax),%rax */
0x4c, 0x8b, 0x70, 0x20,                   /*1a: mov    0x20(%rax),%r14 */
0x41, 0x8b, 0x5e, 0x20,                   /*1e: mov    0x20(%r14),%ebx */
0x31, 0xed,                               /*22: xor    %ebp,%ebp */
0x41, 0xbf, 0x00, 0x00, 0x00, 0x00,       /*24: mov    $0x0,%r15d */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*2a: nopw   0x0(%rax,%rax,1) */
0x41, 0x3b, 0x5e, 0xd0,                   /*30: cmp    -0x30(%r14),%ebx */
0x7e, 0x2a,                               /*34: jle    60 <op_epop+0x60> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*36: mov    0x0(%rip),%rdi        # 3d <op_epop+0x3d> */
0xff, 0xcb,                               /*3d: dec    %ebx */
0x89, 0xde,                               /*3f: mov    %ebx,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*41: callq  46 <op_epop+0x46> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*46: mov    0x0(%rip),%eax        # 4c <op_epop+0x4c> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*4c: mov    0x0(%rip),%rcx        # 53 <op_epop+0x53> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*53: mov    %eax,0xdc(%rcx) */
0xff, 0xc5,                               /*59: inc    %ebp */
0x44, 0x39, 0xfd,                         /*5b: cmp    %r15d,%ebp */
0x7c, 0xd0,                               /*5e: jl     30 <op_epop+0x30> */
0x5b,                                     /*60: pop    %rbx */
0x41, 0x5e,                               /*61: pop    %r14 */
0x41, 0x5f,                               /*63: pop    %r15 */
0x5d,                                     /*65: pop    %rbp */

};
static uint8_t op_epop__rodata[] = {

};


static uint8_t op_send__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*13: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*22: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*28: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_send+0x33> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*33: mov    0x0(%rip),%rdi        # 3a <op_send+0x3a> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3a: mov    0x0(%rip),%rsi        # 41 <op_send+0x41> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*41: mov    0x0(%rip),%rcx        # 48 <op_send+0x48> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*48: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*4d: jmpq   52 <op_send+0x52> */

};
static uint8_t op_send__rodata[] = {

};


static uint8_t op_sendb__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%edi */
0xbe, 0x21, 0x00, 0x00, 0x00,             /*13: mov    $0x21,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*22: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*28: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_sendb+0x33> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*33: mov    0x0(%rip),%rdi        # 3a <op_sendb+0x3a> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3a: mov    0x0(%rip),%rsi        # 41 <op_sendb+0x41> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*41: mov    0x0(%rip),%rcx        # 48 <op_sendb+0x48> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*48: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*4d: jmpq   52 <op_sendb+0x52> */

};
static uint8_t op_sendb__rodata[] = {

};


static uint8_t op_fsend__text[] = {

};
static uint8_t op_fsend__rodata[] = {

};


static uint8_t op_call__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x53,                                     /*e: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rax        # 16 <op_call+0x16> */
0x48, 0x8b, 0x40, 0x18,                   /*16: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*1a: mov    0x8(%rax),%rcx */
0x48, 0x8b, 0x40, 0x20,                   /*1e: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x19,                         /*22: mov    (%rcx),%rbx */
0x48, 0x8b, 0x4b, 0x20,                   /*25: mov    0x20(%rbx),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*29: mov    %rcx,0x48(%rax) */
0x48, 0x89, 0x58, 0x08,                   /*2d: mov    %rbx,0x8(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*31: mov    0x28(%rbx),%rcx */
0x48, 0x85, 0xc9,                         /*35: test   %rcx,%rcx */
0x74, 0x27,                               /*38: je     61 <op_call+0x61> */
0x8b, 0x51, 0x20,                         /*3a: mov    0x20(%rcx),%edx */
0x85, 0xd2,                               /*3d: test   %edx,%edx */
0x74, 0x06,                               /*3f: je     47 <op_call+0x47> */
0x89, 0x10,                               /*41: mov    %edx,(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*43: mov    0x28(%rbx),%rcx */
0x48, 0x83, 0x79, 0x18, 0x00,             /*47: cmpq   $0x0,0x18(%rcx) */
0x75, 0x13,                               /*4c: jne    61 <op_call+0x61> */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*4e: mov    0x0(%rip),%rdx        # 55 <op_call+0x55> */
0x48, 0x8b, 0x52, 0x18,                   /*55: mov    0x18(%rdx),%rdx */
0x48, 0x8b, 0x52, 0x08,                   /*59: mov    0x8(%rdx),%rdx */
0x48, 0x89, 0x51, 0x18,                   /*5d: mov    %rdx,0x18(%rcx) */
0xf6, 0x43, 0x02, 0x04,                   /*61: testb  $0x4,0x2(%rbx) */
0x75, 0x4c,                               /*65: jne    b3 <op_call+0xb3> */
0x48, 0x89, 0x1d, 0x00, 0x00, 0x00, 0x00, /*67: mov    %rbx,0x0(%rip)        # 6e <op_call+0x6e> */
0x48, 0x8b, 0x4b, 0x18,                   /*6e: mov    0x18(%rbx),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*72: mov    %rcx,0x0(%rip)        # 79 <op_call+0x79> */
0x48, 0x85, 0xc9,                         /*79: test   %rcx,%rcx */
0x0f, 0x85, 0xd4, 0x00, 0x00, 0x00,       /*7c: jne    156 <op_call+0x156> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*82: mov    0x0(%rip),%rax        # 89 <op_call+0x89> */
0x48, 0x8b, 0x40, 0x18,                   /*89: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*8d: mov    0x8(%rax),%rax */
0x48, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, /*91: movq   $0x0,(%rax) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*98: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*9d: mov    $0x0,%esi */
0x31, 0xd2,                               /*a2: xor    %edx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a4: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a9: callq  ae <op_call+0xae> */
0xe9, 0x59, 0x01, 0x00, 0x00,             /*ae: jmpq   20c <op_call+0x20c> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*b3: mov    0x0(%rip),%rdi        # ba <op_call+0xba> */
0x48, 0x89, 0xde,                         /*ba: mov    %rbx,%rsi */
0xff, 0x53, 0x18,                         /*bd: callq  *0x18(%rbx) */
0x48, 0x89, 0xc3,                         /*c0: mov    %rax,%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*c3: mov    0x0(%rip),%rdi        # ca <op_call+0xca> */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*ca: mov    0x0(%rip),%esi        # d0 <op_call+0xd0> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*d0: callq  d5 <op_call+0xd5> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*d5: mov    0x0(%rip),%rax        # dc <op_call+0xdc> */
0x48, 0x83, 0x78, 0x28, 0x00,             /*dc: cmpq   $0x0,0x28(%rax) */
0x0f, 0x85, 0xb7, 0x00, 0x00, 0x00,       /*e1: jne    19e <op_call+0x19e> */
0x48, 0x8b, 0x40, 0x18,                   /*e7: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*eb: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x51, 0x10,                   /*ef: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x50, 0x08,                   /*f3: mov    %rdx,0x8(%rax) */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*f7: mov    %rdx,0x0(%rip)        # fe <op_call+0xfe> */
0x48, 0x63, 0x41, 0x44,                   /*fe: movslq 0x44(%rcx),%rax */
0x48, 0x89, 0x1c, 0xc2,                   /*102: mov    %rbx,(%rdx,%rax,8) */
0x48, 0x8b, 0x41, 0x30,                   /*106: mov    0x30(%rcx),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*10a: mov    %rax,0x0(%rip)        # 111 <op_call+0x111> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*111: mov    0x0(%rip),%rdi        # 118 <op_call+0x118> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*118: callq  11d <op_call+0x11d> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*11d: mov    0x0(%rip),%rax        # 124 <op_call+0x124> */
0x48, 0x8b, 0x40, 0x18,                   /*124: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*128: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*12c: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*130: mov    0x18(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*134: mov    %rax,0x0(%rip)        # 13b <op_call+0x13b> */
0x48, 0x8b, 0x48, 0x10,                   /*13b: mov    0x10(%rax),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*13f: mov    %rcx,0x0(%rip)        # 146 <op_call+0x146> */
0x48, 0x8b, 0x40, 0x18,                   /*146: mov    0x18(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*14a: mov    %rax,0x0(%rip)        # 151 <op_call+0x151> */
0xe9, 0xb6, 0x00, 0x00, 0x00,             /*151: jmpq   20c <op_call+0x20c> */
0x48, 0x8b, 0x51, 0x10,                   /*156: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*15a: mov    %rdx,0x0(%rip)        # 161 <op_call+0x161> */
0x48, 0x8b, 0x51, 0x18,                   /*161: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*165: mov    %rdx,0x0(%rip)        # 16c <op_call+0x16c> */
0x0f, 0xb7, 0x49, 0x02,                   /*16c: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*170: mov    %ecx,0x18(%rax) */
0x8b, 0x50, 0x40,                         /*173: mov    0x40(%rax),%edx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*176: mov    0x0(%rip),%rdi        # 17d <op_call+0x17d> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*17d: mov    0x0(%rip),%rax        # 184 <op_call+0x184> */
0x0f, 0xb7, 0x70, 0x02,                   /*184: movzwl 0x2(%rax),%esi */
0x85, 0xd2,                               /*188: test   %edx,%edx */
0x79, 0x42,                               /*18a: jns    1ce <op_call+0x1ce> */
0x83, 0xfe, 0x03,                         /*18c: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*18f: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*194: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*197: mov    $0x3,%edx */
0xeb, 0x33,                               /*19c: jmp    1d1 <op_call+0x1d1> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*19e: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1a3: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1a8: callq  1ad <op_call+0x1ad> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1ad: mov    0x0(%rip),%rdi        # 1b4 <op_call+0x1b4> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*1b4: mov    0x0(%rip),%rsi        # 1bb <op_call+0x1bb> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1bb: mov    0x0(%rip),%rcx        # 1c2 <op_call+0x1c2> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1c2: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*1c7: jmpq   1cc <op_call+0x1cc> */
0xeb, 0x3e,                               /*1cc: jmp    20c <op_call+0x20c> */
0x83, 0xc2, 0x02,                         /*1ce: add    $0x2,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1d1: callq  1d6 <op_call+0x1d6> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1d6: mov    0x0(%rip),%rax        # 1dd <op_call+0x1dd> */
0x48, 0x8b, 0x40, 0x18,                   /*1dd: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*1e1: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*1e5: mov    %rax,0x0(%rip)        # 1ec <op_call+0x1ec> */
0x48, 0x8b, 0x4b, 0x28,                   /*1ec: mov    0x28(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*1f0: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x09,                         /*1f4: mov    (%rcx),%rcx */
0x48, 0x89, 0x08,                         /*1f7: mov    %rcx,(%rax) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1fa: mov    0x0(%rip),%rax        # 201 <op_call+0x201> */
0x48, 0x8b, 0x40, 0x08,                   /*201: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*205: mov    %rax,0x0(%rip)        # 20c <op_call+0x20c> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*20c: mov    0x0(%rip),%rdi        # 213 <op_call+0x213> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*213: mov    0x0(%rip),%rsi        # 21a <op_call+0x21a> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*21a: mov    0x0(%rip),%rcx        # 221 <op_call+0x221> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*221: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*226: jmpq   22b <op_call+0x22b> */

};
static uint8_t op_call__rodata[] = {

};


static uint8_t op_super__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x54,                               /*13: push   %r12 */
0x53,                                     /*15: push   %rbx */
0x48, 0x83, 0xec, 0x10,                   /*16: sub    $0x10,%rsp */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1a: mov    0x0(%rip),%rbx        # 21 <op_super+0x21> */
0x48, 0x8b, 0x43, 0x18,                   /*21: mov    0x18(%rbx),%rax */
0x4c, 0x8b, 0x78, 0x20,                   /*25: mov    0x20(%rax),%r15 */
0x41, 0x8b, 0x2f,                         /*29: mov    (%r15),%ebp */
0x85, 0xed,                               /*2c: test   %ebp,%ebp */
0x0f, 0x84, 0xa5, 0x00, 0x00, 0x00,       /*2e: je     d9 <op_super+0xd9> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*34: mov    0x0(%rip),%rax        # 3b <op_super+0x3b> */
0x4c, 0x8b, 0x30,                         /*3b: mov    (%rax),%r14 */
0x49, 0x8b, 0x47, 0x48,                   /*3e: mov    0x48(%r15),%rax */
0x48, 0x8b, 0x70, 0x28,                   /*42: mov    0x28(%rax),%rsi */
0x48, 0x89, 0x74, 0x24, 0x08,             /*46: mov    %rsi,0x8(%rsp) */
0x48, 0x8d, 0x54, 0x24, 0x08,             /*4b: lea    0x8(%rsp),%rdx */
0x48, 0x89, 0xdf,                         /*50: mov    %rbx,%rdi */
0x89, 0xe9,                               /*53: mov    %ebp,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*55: callq  5a <op_super+0x5a> */
0x49, 0x89, 0xc4,                         /*5a: mov    %rax,%r12 */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*5d: mov    $0x0,%ebx */
0x4d, 0x85, 0xe4,                         /*62: test   %r12,%r12 */
0x0f, 0x85, 0x7d, 0x01, 0x00, 0x00,       /*65: jne    1e8 <op_super+0x1e8> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*6b: mov    0x0(%rip),%rdi        # 72 <op_super+0x72> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*72: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*77: mov    $0xe,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c: callq  81 <op_super+0x81> */
0x89, 0xc5,                               /*81: mov    %eax,%ebp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*83: mov    0x0(%rip),%rdi        # 8a <op_super+0x8a> */
0x48, 0x8d, 0x74, 0x24, 0x08,             /*8a: lea    0x8(%rsp),%rsi */
0x89, 0xea,                               /*8f: mov    %ebp,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*91: callq  96 <op_super+0x96> */
0x49, 0x89, 0xc4,                         /*96: mov    %rax,%r12 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*99: mov    $0x0,%eax */
0x83, 0xf8, 0x7f,                         /*9e: cmp    $0x7f,%eax */
0x75, 0x73,                               /*a1: jne    116 <op_super+0x116> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*a3: mov    0x0(%rip),%rdi        # aa <op_super+0xaa> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*aa: mov    0x0(%rip),%rax        # b1 <op_super+0xb1> */
0x41, 0x8b, 0x17,                         /*b1: mov    (%r15),%edx */
0x48, 0xc1, 0xe2, 0x20,                   /*b4: shl    $0x20,%rdx */
0x48, 0x83, 0xca, 0x0e,                   /*b8: or     $0xe,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*bc: mov    $0x0,%ecx */
0xff, 0xc1,                               /*c1: inc    %ecx */
0x48, 0x63, 0xc9,                         /*c3: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*c6: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ca: callq  cf <op_super+0xcf> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*cf: mov    $0x0,%ebx */
0xe9, 0x0f, 0x01, 0x00, 0x00,             /*d4: jmpq   1e8 <op_super+0x1e8> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*d9: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*de: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e1: callq  e6 <op_super+0xe6> */
0x48, 0x89, 0xc5,                         /*e6: mov    %rax,%rbp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*e9: mov    0x0(%rip),%rdi        # f0 <op_super+0xf0> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*f0: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*f5: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*fa: callq  ff <op_super+0xff> */
0x48, 0x89, 0xdf,                         /*ff: mov    %rbx,%rdi */
0x48, 0x89, 0xee,                         /*102: mov    %rbp,%rsi */
0x48, 0x89, 0xc2,                         /*105: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*108: callq  10d <op_super+0x10d> */
0x48, 0x89, 0x43, 0x28,                   /*10d: mov    %rax,0x28(%rbx) */
0xe9, 0x9a, 0x01, 0x00, 0x00,             /*111: jmpq   2b0 <op_super+0x2b0> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*116: mov    0x0(%rip),%rax        # 11d <op_super+0x11d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11d: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*122: movslq %ecx,%rcx */
0x48, 0x8d, 0x51, 0x01,                   /*125: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*129: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*12d: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*130: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*133: mov    $0x0,%edi */
0xff, 0xc7,                               /*138: inc    %edi */
0x48, 0x63, 0xff,                         /*13a: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*13d: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*142: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*145: setge  %cl */
0x08, 0xd1,                               /*148: or     %dl,%cl */
0x74, 0x36,                               /*14a: je     182 <op_super+0x182> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*14c: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*151: cmp    $0xffffffff,%ecx */
0x74, 0x68,                               /*154: je     1be <op_super+0x1be> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*156: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*15b: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x10,             /*15e: lea    0x10(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*163: mov    $0x0,%ecx */
0xff, 0xc1,                               /*168: inc    %ecx */
0x48, 0x63, 0xc9,                         /*16a: movslq %ecx,%rcx */
0x48, 0xf7, 0xd9,                         /*16d: neg    %rcx */
0x48, 0x8b, 0x50, 0xf8,                   /*170: mov    -0x8(%rax),%rdx */
0x48, 0x89, 0x10,                         /*174: mov    %rdx,(%rax) */
0x48, 0x8d, 0x40, 0x08,                   /*177: lea    0x8(%rax),%rax */
0x48, 0xff, 0xc1,                         /*17b: inc    %rcx */
0x75, 0xf0,                               /*17e: jne    170 <op_super+0x170> */
0xeb, 0x3c,                               /*180: jmp    1be <op_super+0x1be> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*182: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*187: cmp    $0xffffffff,%ecx */
0x74, 0x32,                               /*18a: je     1be <op_super+0x1be> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*191: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x08,             /*194: lea    0x8(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*199: mov    $0x0,%ecx */
0xff, 0xc1,                               /*19e: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1a0: movslq %ecx,%rcx */
0x0f, 0x1f, 0x00,                         /*1a3: nopl   (%rax) */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1a6: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x54, 0xc8, 0xf8,             /*1b0: mov    -0x8(%rax,%rcx,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*1b5: mov    %rdx,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*1b9: dec    %rcx */
0x75, 0xf2,                               /*1bc: jne    1b0 <op_super+0x1b0> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1be: mov    0x0(%rip),%rax        # 1c5 <op_super+0x1c5> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1c5: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1ca: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1cc: movslq %ecx,%rcx */
0xc6, 0x04, 0xc8, 0x0e,                   /*1cf: movb   $0xe,(%rax,%rcx,8) */
0x41, 0x8b, 0x07,                         /*1d3: mov    (%r15),%eax */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*1d6: mov    0x0(%rip),%rdx        # 1dd <op_super+0x1dd> */
0x89, 0x44, 0xca, 0x04,                   /*1dd: mov    %eax,0x4(%rdx,%rcx,8) */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*1e1: mov    $0x0,%ebx */
0xff, 0xc3,                               /*1e6: inc    %ebx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1e8: mov    0x0(%rip),%rdi        # 1ef <op_super+0x1ef> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1ef: callq  1f4 <op_super+0x1f4> */
0x89, 0x28,                               /*1f4: mov    %ebp,(%rax) */
0x4c, 0x89, 0x60, 0x08,                   /*1f6: mov    %r12,0x8(%rax) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1fa: mov    0x0(%rip),%rcx        # 201 <op_super+0x201> */
0x48, 0x8b, 0x49, 0x18,                   /*201: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*205: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x48, 0x10,                   /*209: mov    %rcx,0x10(%rax) */
0x83, 0xfb, 0x7f,                         /*20d: cmp    $0x7f,%ebx */
0xb9, 0xff, 0xff, 0xff, 0xff,             /*210: mov    $0xffffffff,%ecx */
0x0f, 0x45, 0xcb,                         /*215: cmovne %ebx,%ecx */
0x89, 0x48, 0x40,                         /*218: mov    %ecx,0x40(%rax) */
0x48, 0x8b, 0x4c, 0x24, 0x08,             /*21b: mov    0x8(%rsp),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*220: mov    %rcx,0x48(%rax) */
0x48, 0xc7, 0x40, 0x30, 0x00, 0x00, 0x00, 0x00,/*224: movq   $0x0,0x30(%rax) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*22c: mov    0x0(%rip),%rcx        # 233 <op_super+0x233> */
0x48, 0x8b, 0x49, 0x18,                   /*233: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*237: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*23c: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*23f: shl    $0x3,%rdx */
0x48, 0x01, 0x51, 0x08,                   /*243: add    %rdx,0x8(%rcx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*247: mov    0x0(%rip),%rcx        # 24e <op_super+0x24e> */
0x48, 0x8b, 0x49, 0x18,                   /*24e: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*252: mov    0x8(%rcx),%rcx */
0x4c, 0x89, 0x31,                         /*256: mov    %r14,(%rcx) */
0x41, 0xf6, 0x44, 0x24, 0x02, 0x04,       /*259: testb  $0x4,0x2(%r12) */
0x74, 0x78,                               /*25f: je     2d9 <op_super+0x2d9> */
0x8d, 0x4b, 0x02,                         /*261: lea    0x2(%rbx),%ecx */
0x83, 0xfb, 0x7f,                         /*264: cmp    $0x7f,%ebx */
0xba, 0x03, 0x00, 0x00, 0x00,             /*267: mov    $0x3,%edx */
0x0f, 0x45, 0xd1,                         /*26c: cmovne %ecx,%edx */
0x89, 0x50, 0x18,                         /*26f: mov    %edx,0x18(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*272: mov    0x0(%rip),%rdi        # 279 <op_super+0x279> */
0x48, 0x8b, 0x47, 0x18,                   /*279: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*27d: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xf6,                         /*281: mov    %r14,%rsi */
0x41, 0xff, 0x54, 0x24, 0x18,             /*284: callq  *0x18(%r12) */
0x48, 0x89, 0x03,                         /*289: mov    %rax,(%rbx) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*28c: mov    0x0(%rip),%rdi        # 293 <op_super+0x293> */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*293: mov    0x0(%rip),%esi        # 299 <op_super+0x299> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*299: callq  29e <op_super+0x29e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*29e: mov    0x0(%rip),%rax        # 2a5 <op_super+0x2a5> */
0x48, 0x83, 0x78, 0x28, 0x00,             /*2a5: cmpq   $0x0,0x28(%rax) */
0x0f, 0x84, 0x87, 0x00, 0x00, 0x00,       /*2aa: je     337 <op_super+0x337> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*2b0: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2b5: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2ba: callq  2bf <op_super+0x2bf> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*2bf: mov    0x0(%rip),%rdi        # 2c6 <op_super+0x2c6> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*2c6: mov    0x0(%rip),%rsi        # 2cd <op_super+0x2cd> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*2cd: mov    0x0(%rip),%rcx        # 2d4 <op_super+0x2d4> */
0xe9, 0xba, 0x00, 0x00, 0x00,             /*2d4: jmpq   393 <op_super+0x393> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2d9: mov    $0x0,%ecx */
0x89, 0x48, 0x44,                         /*2de: mov    %ecx,0x44(%rax) */
0x4c, 0x89, 0x60, 0x08,                   /*2e1: mov    %r12,0x8(%rax) */
0x49, 0x8b, 0x4c, 0x24, 0x18,             /*2e5: mov    0x18(%r12),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*2ea: mov    %rcx,0x0(%rip)        # 2f1 <op_super+0x2f1> */
0x48, 0x8b, 0x51, 0x10,                   /*2f1: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*2f5: mov    %rdx,0x0(%rip)        # 2fc <op_super+0x2fc> */
0x48, 0x8b, 0x51, 0x18,                   /*2fc: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*300: mov    %rdx,0x0(%rip)        # 307 <op_super+0x307> */
0x0f, 0xb7, 0x49, 0x02,                   /*307: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*30b: mov    %ecx,0x18(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*30e: mov    0x0(%rip),%rdi        # 315 <op_super+0x315> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*315: mov    0x0(%rip),%rcx        # 31c <op_super+0x31c> */
0x0f, 0xb7, 0x71, 0x02,                   /*31c: movzwl 0x2(%rcx),%esi */
0x83, 0xfb, 0x7f,                         /*320: cmp    $0x7f,%ebx */
0x75, 0x37,                               /*323: jne    35c <op_super+0x35c> */
0x83, 0xfe, 0x03,                         /*325: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*328: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*32d: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*330: mov    $0x3,%edx */
0xeb, 0x2b,                               /*335: jmp    362 <op_super+0x362> */
0x48, 0x8b, 0x40, 0x18,                   /*337: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*33b: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*33f: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*343: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*347: mov    %rcx,0x0(%rip)        # 34e <op_super+0x34e> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*34e: mov    0x0(%rip),%rdi        # 355 <op_super+0x355> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*355: callq  35a <op_super+0x35a> */
0xeb, 0x41,                               /*35a: jmp    39d <op_super+0x39d> */
0x8b, 0x50, 0x40,                         /*35c: mov    0x40(%rax),%edx */
0x83, 0xc2, 0x02,                         /*35f: add    $0x2,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*362: callq  367 <op_super+0x367> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*367: mov    0x0(%rip),%rdi        # 36e <op_super+0x36e> */
0x48, 0x8b, 0x47, 0x18,                   /*36e: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*372: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*376: mov    %rax,0x0(%rip)        # 37d <op_super+0x37d> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*37d: mov    0x0(%rip),%rsi        # 384 <op_super+0x384> */
0x48, 0x8b, 0x46, 0x08,                   /*384: mov    0x8(%rsi),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*388: mov    %rax,0x0(%rip)        # 38f <op_super+0x38f> */
0x48, 0x8b, 0x4e, 0x08,                   /*38f: mov    0x8(%rsi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*393: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*398: jmpq   39d <op_super+0x39d> */
0x48, 0x83, 0xc4, 0x10,                   /*39d: add    $0x10,%rsp */
0x5b,                                     /*3a1: pop    %rbx */
0x41, 0x5c,                               /*3a2: pop    %r12 */
0x41, 0x5e,                               /*3a4: pop    %r14 */
0x41, 0x5f,                               /*3a6: pop    %r15 */
0x5d,                                     /*3a8: pop    %rbp */

};
static uint8_t op_super__rodata[] = {

};


static uint8_t op_argary__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x55,                               /*13: push   %r13 */
0x41, 0x54,                               /*15: push   %r12 */
0x53,                                     /*17: push   %rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0xf6, 0xc1, 0x0f,                         /*22: test   $0xf,%cl */
0x0f, 0x84, 0xbb, 0x00, 0x00, 0x00,       /*25: je     e6 <op_argary+0xe6> */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*2b: mov    0x0(%rip),%rbx        # 32 <op_argary+0x32> */
0x48, 0x8b, 0x43, 0x18,                   /*32: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*36: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*3a: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x28,                   /*3e: mov    0x28(%rax),%rax */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*42: mov    $0x0,%esi */
0x83, 0xe6, 0x0f,                         /*47: and    $0xf,%esi */
0x48, 0x85, 0xc0,                         /*4a: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*4d: sete   %cl */
0x83, 0xfe, 0x01,                         /*50: cmp    $0x1,%esi */
0x74, 0x1e,                               /*53: je     73 <op_argary+0x73> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*55: mov    $0x1,%edx */
0x29, 0xf2,                               /*5a: sub    %esi,%edx */
0x0f, 0x1f, 0x40, 0x00,                   /*5c: nopl   0x0(%rax) */
0xf6, 0xc1, 0x01,                         /*60: test   $0x1,%cl */
0x75, 0x12,                               /*63: jne    77 <op_argary+0x77> */
0x48, 0x8b, 0x40, 0x08,                   /*65: mov    0x8(%rax),%rax */
0x48, 0x85, 0xc0,                         /*69: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*6c: sete   %cl */
0xff, 0xc2,                               /*6f: inc    %edx */
0x75, 0xed,                               /*71: jne    60 <op_argary+0x60> */
0x84, 0xc9,                               /*73: test   %cl,%cl */
0x74, 0x6b,                               /*75: je     e2 <op_argary+0xe2> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*77: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*7c: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7f: callq  84 <op_argary+0x84> */
0x49, 0x89, 0xc6,                         /*84: mov    %rax,%r14 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*87: mov    0x0(%rip),%rdi        # 8e <op_argary+0x8e> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*8e: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*93: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*98: callq  9d <op_argary+0x9d> */
0x48, 0x89, 0xdf,                         /*9d: mov    %rbx,%rdi */
0x4c, 0x89, 0xf6,                         /*a0: mov    %r14,%rsi */
0x48, 0x89, 0xc2,                         /*a3: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a6: callq  ab <op_argary+0xab> */
0x48, 0x89, 0x43, 0x28,                   /*ab: mov    %rax,0x28(%rbx) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*af: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*b4: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b9: callq  be <op_argary+0xbe> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*be: mov    0x0(%rip),%rdi        # c5 <op_argary+0xc5> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*c5: mov    0x0(%rip),%rsi        # cc <op_argary+0xcc> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*cc: mov    0x0(%rip),%rcx        # d3 <op_argary+0xd3> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*d3: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*d8: jmpq   dd <op_argary+0xdd> */
0xe9, 0x2a, 0x02, 0x00, 0x00,             /*dd: jmpq   30c <op_argary+0x30c> */
0x48, 0x83, 0xc0, 0x18,                   /*e2: add    $0x18,%rax */
0x4c, 0x8b, 0x38,                         /*e6: mov    (%rax),%r15 */
0x4d, 0x8d, 0x67, 0x08,                   /*e9: lea    0x8(%r15),%r12 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ed: mov    $0x0,%eax */
0x0f, 0xba, 0xe0, 0x09,                   /*f2: bt     $0x9,%eax */
0x72, 0x3f,                               /*f6: jb     137 <op_argary+0x137> */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*f8: mov    0x0(%rip),%rbx        # ff <op_argary+0xff> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*ff: mov    0x0(%rip),%rdi        # 106 <op_argary+0x106> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*106: mov    $0x0,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10b: mov    $0x0,%eax */
0xc1, 0xe8, 0x04,                         /*110: shr    $0x4,%eax */
0x83, 0xe0, 0x1f,                         /*113: and    $0x1f,%eax */
0xc1, 0xee, 0x0a,                         /*116: shr    $0xa,%esi */
0x83, 0xe6, 0x3f,                         /*119: and    $0x3f,%esi */
0x01, 0xc6,                               /*11c: add    %eax,%esi */
0x4c, 0x89, 0xe2,                         /*11e: mov    %r12,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*121: callq  126 <op_argary+0x126> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*126: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*12b: movslq %ecx,%rcx */
0x48, 0x89, 0x04, 0xcb,                   /*12e: mov    %rax,(%rbx,%rcx,8) */
0xe9, 0x80, 0x01, 0x00, 0x00,             /*132: jmpq   2b7 <op_argary+0x2b7> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*137: mov    $0x0,%eax */
0xc1, 0xe8, 0x0a,                         /*13c: shr    $0xa,%eax */
0x83, 0xe0, 0x3f,                         /*13f: and    $0x3f,%eax */
0x49, 0x8b, 0x44, 0xc7, 0x08,             /*142: mov    0x8(%r15,%rax,8),%rax */
0x4c, 0x89, 0x3c, 0x24,                   /*147: mov    %r15,(%rsp) */
0x48, 0x83, 0xf8, 0x07,                   /*14b: cmp    $0x7,%rax */
0x73, 0x15,                               /*14f: jae    166 <op_argary+0x166> */
0x0f, 0xb6, 0xc8,                         /*151: movzbl %al,%ecx */
0x31, 0xdb,                               /*154: xor    %ebx,%ebx */
0xba, 0x55, 0x00, 0x00, 0x00,             /*156: mov    $0x55,%edx */
0x0f, 0xa3, 0xca,                         /*15b: bt     %ecx,%edx */
0x41, 0xbd, 0x00, 0x00, 0x00, 0x00,       /*15e: mov    $0x0,%r13d */
0x72, 0x31,                               /*164: jb     197 <op_argary+0x197> */
0x31, 0xdb,                               /*166: xor    %ebx,%ebx */
0xa8, 0x01,                               /*168: test   $0x1,%al */
0x75, 0x28,                               /*16a: jne    194 <op_argary+0x194> */
0x0f, 0xb6, 0xc8,                         /*16c: movzbl %al,%ecx */
0x83, 0xf9, 0x0e,                         /*16f: cmp    $0xe,%ecx */
0x41, 0xbd, 0x00, 0x00, 0x00, 0x00,       /*172: mov    $0x0,%r13d */
0x74, 0x1d,                               /*178: je     197 <op_argary+0x197> */
0x31, 0xdb,                               /*17a: xor    %ebx,%ebx */
0x0f, 0xb6, 0x08,                         /*17c: movzbl (%rax),%ecx */
0x83, 0xf9, 0x0e,                         /*17f: cmp    $0xe,%ecx */
0x41, 0xbd, 0x00, 0x00, 0x00, 0x00,       /*182: mov    $0x0,%r13d */
0x75, 0x0d,                               /*188: jne    197 <op_argary+0x197> */
0x48, 0x8b, 0x58, 0x28,                   /*18a: mov    0x28(%rax),%rbx */
0x44, 0x8b, 0x68, 0x18,                   /*18e: mov    0x18(%rax),%r13d */
0xeb, 0x03,                               /*192: jmp    197 <op_argary+0x197> */
0x45, 0x31, 0xed,                         /*194: xor    %r13d,%r13d */
0x48, 0x8b, 0x2d, 0x00, 0x00, 0x00, 0x00, /*197: mov    0x0(%rip),%rbp        # 19e <op_argary+0x19e> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*19e: mov    0x0(%rip),%rdi        # 1a5 <op_argary+0x1a5> */
0x41, 0xbf, 0x00, 0x00, 0x00, 0x00,       /*1a5: mov    $0x0,%r15d */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*1ab: mov    $0x0,%r14d */
0x41, 0xc1, 0xee, 0x04,                   /*1b1: shr    $0x4,%r14d */
0x41, 0x83, 0xe6, 0x1f,                   /*1b5: and    $0x1f,%r14d */
0x41, 0xc1, 0xef, 0x0a,                   /*1b9: shr    $0xa,%r15d */
0x41, 0x83, 0xe7, 0x3f,                   /*1bd: and    $0x3f,%r15d */
0x45, 0x01, 0xfe,                         /*1c1: add    %r15d,%r14d */
0x45, 0x01, 0xee,                         /*1c4: add    %r13d,%r14d */
0x44, 0x89, 0xf6,                         /*1c7: mov    %r14d,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1ca: callq  1cf <op_argary+0x1cf> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1cf: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1d4: movslq %ecx,%rcx */
0x48, 0x89, 0x44, 0xcd, 0x00,             /*1d7: mov    %rax,0x0(%rbp,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1dc: mov    0x0(%rip),%rax        # 1e3 <op_argary+0x1e3> */
0x48, 0x8b, 0x04, 0xc8,                   /*1e3: mov    (%rax,%rcx,8),%rax */
0x45, 0x85, 0xff,                         /*1e7: test   %r15d,%r15d */
0x4c, 0x8b, 0x3c, 0x24,                   /*1ea: mov    (%rsp),%r15 */
0x7e, 0x3c,                               /*1ee: jle    22c <op_argary+0x22c> */
0x48, 0x8b, 0x48, 0x28,                   /*1f0: mov    0x28(%rax),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1f4: mov    $0x0,%edx */
0xc1, 0xea, 0x0a,                         /*1f9: shr    $0xa,%edx */
0x48, 0x83, 0xe2, 0x3f,                   /*1fc: and    $0x3f,%rdx */
0x48, 0xf7, 0xda,                         /*200: neg    %rdx */
0x4c, 0x89, 0xfe,                         /*203: mov    %r15,%rsi */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*206: nopw   %cs:0x0(%rax,%rax,1) */
0x4c, 0x89, 0xe7,                         /*210: mov    %r12,%rdi */
0x48, 0x83, 0xc6, 0x10,                   /*213: add    $0x10,%rsi */
0x48, 0x8b, 0x2f,                         /*217: mov    (%rdi),%rbp */
0x48, 0x89, 0x29,                         /*21a: mov    %rbp,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*21d: add    $0x8,%rcx */
0x48, 0xff, 0xc2,                         /*221: inc    %rdx */
0x49, 0x89, 0xf4,                         /*224: mov    %rsi,%r12 */
0x48, 0x89, 0xfe,                         /*227: mov    %rdi,%rsi */
0x75, 0xe4,                               /*22a: jne    210 <op_argary+0x210> */
0x45, 0x85, 0xed,                         /*22c: test   %r13d,%r13d */
0x7e, 0x32,                               /*22f: jle    263 <op_argary+0x263> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*231: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0a,                         /*236: shr    $0xa,%ecx */
0x83, 0xe1, 0x3f,                         /*239: and    $0x3f,%ecx */
0x48, 0xc1, 0xe1, 0x03,                   /*23c: shl    $0x3,%rcx */
0x48, 0x03, 0x48, 0x28,                   /*240: add    0x28(%rax),%rcx */
0x49, 0x63, 0xd5,                         /*244: movslq %r13d,%rdx */
0x48, 0xf7, 0xda,                         /*247: neg    %rdx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*24a: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x33,                         /*250: mov    (%rbx),%rsi */
0x48, 0x83, 0xc3, 0x08,                   /*253: add    $0x8,%rbx */
0x48, 0x89, 0x31,                         /*257: mov    %rsi,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*25a: add    $0x8,%rcx */
0x48, 0xff, 0xc2,                         /*25e: inc    %rdx */
0x75, 0xed,                               /*261: jne    250 <op_argary+0x250> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*263: mov    $0x0,%ecx */
0xc1, 0xe9, 0x04,                         /*268: shr    $0x4,%ecx */
0xf6, 0xc1, 0x1f,                         /*26b: test   $0x1f,%cl */
0x7e, 0x43,                               /*26e: jle    2b3 <op_argary+0x2b3> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*270: mov    $0x0,%ecx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*275: mov    $0x0,%edi */
0xc1, 0xef, 0x0a,                         /*27a: shr    $0xa,%edi */
0x83, 0xe7, 0x3f,                         /*27d: and    $0x3f,%edi */
0x49, 0x8d, 0x54, 0xff, 0x10,             /*280: lea    0x10(%r15,%rdi,8),%rdx */
0x49, 0x63, 0xf5,                         /*285: movslq %r13d,%rsi */
0x48, 0x01, 0xfe,                         /*288: add    %rdi,%rsi */
0x48, 0xc1, 0xe6, 0x03,                   /*28b: shl    $0x3,%rsi */
0x48, 0x03, 0x70, 0x28,                   /*28f: add    0x28(%rax),%rsi */
0xc1, 0xe9, 0x04,                         /*293: shr    $0x4,%ecx */
0x48, 0x83, 0xe1, 0x1f,                   /*296: and    $0x1f,%rcx */
0x48, 0xf7, 0xd9,                         /*29a: neg    %rcx */
0x0f, 0x1f, 0x00,                         /*29d: nopl   (%rax) */
0x48, 0x8b, 0x3a,                         /*2a0: mov    (%rdx),%rdi */
0x48, 0x83, 0xc2, 0x08,                   /*2a3: add    $0x8,%rdx */
0x48, 0x89, 0x3e,                         /*2a7: mov    %rdi,(%rsi) */
0x48, 0x83, 0xc6, 0x08,                   /*2aa: add    $0x8,%rsi */
0x48, 0xff, 0xc1,                         /*2ae: inc    %rcx */
0x75, 0xed,                               /*2b1: jne    2a0 <op_argary+0x2a0> */
0x44, 0x89, 0x70, 0x18,                   /*2b3: mov    %r14d,0x18(%rax) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*2b7: mov    0x0(%rip),%rax        # 2be <op_argary+0x2be> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2be: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2c3: mov    $0x0,%edx */
0xc1, 0xea, 0x09,                         /*2c8: shr    $0x9,%edx */
0x83, 0xe2, 0x01,                         /*2cb: and    $0x1,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2ce: mov    $0x0,%esi */
0xc1, 0xee, 0x0a,                         /*2d3: shr    $0xa,%esi */
0x83, 0xe6, 0x3f,                         /*2d6: and    $0x3f,%esi */
0x01, 0xd6,                               /*2d9: add    %edx,%esi */
0xc1, 0xe9, 0x04,                         /*2db: shr    $0x4,%ecx */
0x83, 0xe1, 0x1f,                         /*2de: and    $0x1f,%ecx */
0x01, 0xf1,                               /*2e1: add    %esi,%ecx */
0x48, 0x63, 0xc9,                         /*2e3: movslq %ecx,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2e6: mov    $0x0,%edx */
0xff, 0xc2,                               /*2eb: inc    %edx */
0x48, 0x63, 0xd2,                         /*2ed: movslq %edx,%rdx */
0x49, 0x8b, 0x4c, 0xcf, 0x08,             /*2f0: mov    0x8(%r15,%rcx,8),%rcx */
0x48, 0x89, 0x0c, 0xd0,                   /*2f5: mov    %rcx,(%rax,%rdx,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*2f9: mov    0x0(%rip),%eax        # 2ff <op_argary+0x2ff> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*2ff: mov    0x0(%rip),%rcx        # 306 <op_argary+0x306> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*306: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*30c: pop    %rbx */
0x41, 0x5c,                               /*30d: pop    %r12 */
0x41, 0x5d,                               /*30f: pop    %r13 */
0x41, 0x5e,                               /*311: pop    %r14 */
0x41, 0x5f,                               /*313: pop    %r15 */
0x5d,                                     /*315: pop    %rbp */

};
static uint8_t op_argary__rodata[] = {

};


static uint8_t op_enter__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x55,                               /*13: push   %r13 */
0x41, 0x54,                               /*15: push   %r12 */
0x53,                                     /*17: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*18: sub    $0x18,%rsp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1c: mov    0x0(%rip),%rdi        # 23 <op_enter+0x23> */
0x48, 0x8b, 0x47, 0x18,                   /*23: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*27: mov    0x20(%rax),%rax */
0x48, 0x63, 0x58, 0x40,                   /*2b: movslq 0x40(%rax),%rbx */
0x4c, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*2f: mov    0x0(%rip),%r15        # 36 <op_enter+0x36> */
0x48, 0x85, 0xdb,                         /*36: test   %rbx,%rbx */
0x48, 0x8d, 0x43, 0x01,                   /*39: lea    0x1(%rbx),%rax */
0x41, 0xbc, 0x02, 0x00, 0x00, 0x00,       /*3d: mov    $0x2,%r12d */
0x4c, 0x0f, 0x49, 0xe0,                   /*43: cmovns %rax,%r12 */
0x4b, 0x8b, 0x34, 0xe7,                   /*47: mov    (%r15,%r12,8),%rsi */
0x48, 0x83, 0xfe, 0x06,                   /*4b: cmp    $0x6,%rsi */
0x77, 0x07,                               /*4f: ja     58 <op_enter+0x58> */
0xff, 0x24, 0xf5, 0x00, 0x00, 0x00, 0x00, /*51: jmpq   *0x0(,%rsi,8) */
0x40, 0xf6, 0xc6, 0x01,                   /*58: test   $0x1,%sil */
0x75, 0x11,                               /*5c: jne    6f <op_enter+0x6f> */
0x40, 0x0f, 0xb6, 0xc6,                   /*5e: movzbl %sil,%eax */
0x83, 0xf8, 0x0e,                         /*62: cmp    $0xe,%eax */
0x74, 0x08,                               /*65: je     6f <op_enter+0x6f> */
0x0f, 0xb6, 0x06,                         /*67: movzbl (%rsi),%eax */
0x83, 0xf8, 0x0d,                         /*6a: cmp    $0xd,%eax */
0x74, 0x19,                               /*6d: je     88 <op_enter+0x88> */
0xba, 0x0d, 0x00, 0x00, 0x00,             /*6f: mov    $0xd,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*74: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*79: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7f: callq  84 <op_enter+0x84> */
0x4b, 0x89, 0x04, 0xe7,                   /*84: mov    %rax,(%r15,%r12,8) */
0x4d, 0x8d, 0x6f, 0x08,                   /*88: lea    0x8(%r15),%r13 */
0x85, 0xdb,                               /*8c: test   %ebx,%ebx */
0x4d, 0x89, 0xee,                         /*8e: mov    %r13,%r14 */
0x79, 0x1e,                               /*91: jns    b1 <op_enter+0xb1> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*93: mov    0x0(%rip),%rax        # 9a <op_enter+0x9a> */
0x48, 0x8b, 0x70, 0x08,                   /*9a: mov    0x8(%rax),%rsi */
0x4c, 0x8b, 0x76, 0x28,                   /*9e: mov    0x28(%rsi),%r14 */
0x8b, 0x5e, 0x18,                         /*a2: mov    0x18(%rsi),%ebx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*a5: mov    0x0(%rip),%rdi        # ac <op_enter+0xac> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ac: callq  b1 <op_enter+0xb1> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*b1: mov    0x0(%rip),%rdi        # b8 <op_enter+0xb8> */
0x48, 0x8b, 0x47, 0x18,                   /*b8: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*bc: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*c0: mov    0x8(%rax),%rcx */
0x48, 0x85, 0xc9,                         /*c4: test   %rcx,%rcx */
0x0f, 0x84, 0xad, 0x00, 0x00, 0x00,       /*c7: je     17a <op_enter+0x17a> */
0xf6, 0x41, 0x02, 0x08,                   /*cd: testb  $0x8,0x2(%rcx) */
0x0f, 0x84, 0xa3, 0x00, 0x00, 0x00,       /*d1: je     17a <op_enter+0x17a> */
0x85, 0xdb,                               /*d7: test   %ebx,%ebx */
0x0f, 0x88, 0x29, 0x01, 0x00, 0x00,       /*d9: js     208 <op_enter+0x208> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*df: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*e4: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*e9: shr    $0x7,%esi */
0x83, 0xe6, 0x1f,                         /*ec: and    $0x1f,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ef: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*f4: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*f7: and    $0x1f,%ecx */
0x44, 0x8d, 0x04, 0x31,                   /*fa: lea    (%rcx,%rsi,1),%r8d */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*fe: mov    $0x0,%ebp */
0xc1, 0xed, 0x0d,                         /*103: shr    $0xd,%ebp */
0x83, 0xe5, 0x1f,                         /*106: and    $0x1f,%ebp */
0x01, 0xcd,                               /*109: add    %ecx,%ebp */
0xc1, 0xea, 0x0c,                         /*10b: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*10e: and    $0x1,%edx */
0x0f, 0x94, 0xc1,                         /*111: sete   %cl */
0x01, 0xea,                               /*114: add    %ebp,%edx */
0x01, 0xf2,                               /*116: add    %esi,%edx */
0x39, 0xd3,                               /*118: cmp    %edx,%ebx */
0x0f, 0x9f, 0xc2,                         /*11a: setg   %dl */
0x44, 0x39, 0xc3,                         /*11d: cmp    %r8d,%ebx */
0x7c, 0x08,                               /*120: jl     12a <op_enter+0x12a> */
0x20, 0xca,                               /*122: and    %cl,%dl */
0x0f, 0x84, 0xde, 0x00, 0x00, 0x00,       /*124: je     208 <op_enter+0x208> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*12a: mov    $0x0,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12f: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*134: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*137: and    $0x1f,%eax */
0xc1, 0xee, 0x12,                         /*13a: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*13d: and    $0x1f,%esi */
0x01, 0xc6,                               /*140: add    %eax,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*142: callq  147 <op_enter+0x147> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*147: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*14c: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*151: callq  156 <op_enter+0x156> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*156: mov    0x0(%rip),%rdi        # 15d <op_enter+0x15d> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*15d: mov    0x0(%rip),%rsi        # 164 <op_enter+0x164> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*164: mov    0x0(%rip),%rcx        # 16b <op_enter+0x16b> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*16b: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*170: jmpq   175 <op_enter+0x175> */
0xe9, 0x15, 0x07, 0x00, 0x00,             /*175: jmpq   88f <op_enter+0x88f> */
0x83, 0xfb, 0x01,                         /*17a: cmp    $0x1,%ebx */
0x0f, 0x85, 0x85, 0x00, 0x00, 0x00,       /*17d: jne    208 <op_enter+0x208> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*183: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*188: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*18d: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*190: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*193: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*198: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*19b: and    $0x1f,%esi */
0x01, 0xd6,                               /*19e: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1a0: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*1a5: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*1a8: and    $0x1,%edx */
0x01, 0xf2,                               /*1ab: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*1ad: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*1b0: and    $0x1f,%ecx */
0x01, 0xd1,                               /*1b3: add    %edx,%ecx */
0x83, 0xf9, 0x02,                         /*1b5: cmp    $0x2,%ecx */
0x7c, 0x4e,                               /*1b8: jl     208 <op_enter+0x208> */
0x49, 0x8b, 0x36,                         /*1ba: mov    (%r14),%rsi */
0xbb, 0x01, 0x00, 0x00, 0x00,             /*1bd: mov    $0x1,%ebx */
0x48, 0x83, 0xfe, 0x06,                   /*1c2: cmp    $0x6,%rsi */
0x77, 0x0b,                               /*1c6: ja     1d3 <op_enter+0x1d3> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*1c8: mov    $0x55,%ecx */
0x48, 0x0f, 0xa3, 0xf1,                   /*1cd: bt     %rsi,%rcx */
0x72, 0x35,                               /*1d1: jb     208 <op_enter+0x208> */
0x40, 0xf6, 0xc6, 0x01,                   /*1d3: test   $0x1,%sil */
0x75, 0x2f,                               /*1d7: jne    208 <op_enter+0x208> */
0x40, 0x0f, 0xb6, 0xce,                   /*1d9: movzbl %sil,%ecx */
0x83, 0xf9, 0x0e,                         /*1dd: cmp    $0xe,%ecx */
0x74, 0x26,                               /*1e0: je     208 <op_enter+0x208> */
0x0f, 0xb6, 0x0e,                         /*1e2: movzbl (%rsi),%ecx */
0x83, 0xf9, 0x0e,                         /*1e5: cmp    $0xe,%ecx */
0x75, 0x1e,                               /*1e8: jne    208 <op_enter+0x208> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1ea: callq  1ef <op_enter+0x1ef> */
0x49, 0x8b, 0x06,                         /*1ef: mov    (%r14),%rax */
0x8b, 0x58, 0x18,                         /*1f2: mov    0x18(%rax),%ebx */
0x4c, 0x8b, 0x70, 0x28,                   /*1f5: mov    0x28(%rax),%r14 */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1f9: mov    0x0(%rip),%rax        # 200 <op_enter+0x200> */
0x48, 0x8b, 0x40, 0x18,                   /*200: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*204: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*208: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*20d: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*212: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*215: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*218: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*21d: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*220: and    $0x1f,%esi */
0x01, 0xd6,                               /*223: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*225: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*22a: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*22d: and    $0x1,%edx */
0x01, 0xf2,                               /*230: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*232: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*235: and    $0x1f,%ecx */
0x01, 0xd1,                               /*238: add    %edx,%ecx */
0x89, 0x48, 0x40,                         /*23a: mov    %ecx,0x40(%rax) */
0x39, 0xcb,                               /*23d: cmp    %ecx,%ebx */
0x0f, 0x8d, 0xde, 0x00, 0x00, 0x00,       /*23f: jge    323 <op_enter+0x323> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*245: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*24a: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*24f: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*252: and    $0x1f,%eax */
0xc1, 0xe9, 0x12,                         /*255: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*258: and    $0x1f,%ecx */
0x01, 0xc1,                               /*25b: add    %eax,%ecx */
0x39, 0xcb,                               /*25d: cmp    %ecx,%ebx */
0x7d, 0x14,                               /*25f: jge    275 <op_enter+0x275> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*261: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*266: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*269: and    $0x1f,%ecx */
0x31, 0xd2,                               /*26c: xor    %edx,%edx */
0x89, 0xd8,                               /*26e: mov    %ebx,%eax */
0x29, 0xc8,                               /*270: sub    %ecx,%eax */
0x0f, 0x4e, 0xc2,                         /*272: cmovle %edx,%eax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*275: mov    0x0(%rip),%rcx        # 27c <op_enter+0x27c> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*27c: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*281: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*286: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*289: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*28c: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*291: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*294: and    $0x1f,%edi */
0x01, 0xf7,                               /*297: add    %esi,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*299: mov    $0x0,%esi */
0xc1, 0xee, 0x0c,                         /*29e: shr    $0xc,%esi */
0x83, 0xe6, 0x01,                         /*2a1: and    $0x1,%esi */
0x01, 0xfe,                               /*2a4: add    %edi,%esi */
0xc1, 0xea, 0x07,                         /*2a6: shr    $0x7,%edx */
0x83, 0xe2, 0x1f,                         /*2a9: and    $0x1f,%edx */
0x8d, 0x54, 0x32, 0x01,                   /*2ac: lea    0x1(%rdx,%rsi,1),%edx */
0x48, 0x63, 0xd2,                         /*2b0: movslq %edx,%rdx */
0x4b, 0x8b, 0x34, 0xe7,                   /*2b3: mov    (%r15,%r12,8),%rsi */
0x48, 0x89, 0x34, 0xd1,                   /*2b7: mov    %rsi,(%rcx,%rdx,8) */
0x8d, 0x4b, 0x01,                         /*2bb: lea    0x1(%rbx),%ecx */
0x48, 0x63, 0xc9,                         /*2be: movslq %ecx,%rcx */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*2c1: mov    0x0(%rip),%rdx        # 2c8 <op_enter+0x2c8> */
0x48, 0xc7, 0x04, 0xca, 0x00, 0x00, 0x00, 0x00,/*2c8: movq   $0x0,(%rdx,%rcx,8) */
0x4d, 0x39, 0xf5,                         /*2d0: cmp    %r14,%r13 */
0x0f, 0x84, 0x63, 0x01, 0x00, 0x00,       /*2d3: je     43c <op_enter+0x43c> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*2d9: mov    0x0(%rip),%rcx        # 2e0 <op_enter+0x2e0> */
0x48, 0x8d, 0x69, 0x08,                   /*2e0: lea    0x8(%rcx),%rbp */
0x4c, 0x39, 0xf5,                         /*2e4: cmp    %r14,%rbp */
0x0f, 0x86, 0x16, 0x01, 0x00, 0x00,       /*2e7: jbe    403 <op_enter+0x403> */
0x89, 0xde,                               /*2ed: mov    %ebx,%esi */
0x29, 0xc6,                               /*2ef: sub    %eax,%esi */
0x48, 0x63, 0xf6,                         /*2f1: movslq %esi,%rsi */
0x49, 0x8d, 0x3c, 0xf6,                   /*2f4: lea    (%r14,%rsi,8),%rdi */
0x48, 0x39, 0xfd,                         /*2f8: cmp    %rdi,%rbp */
0x0f, 0x83, 0x02, 0x01, 0x00, 0x00,       /*2fb: jae    403 <op_enter+0x403> */
0x39, 0xc3,                               /*301: cmp    %eax,%ebx */
0x0f, 0x84, 0x33, 0x01, 0x00, 0x00,       /*303: je     43c <op_enter+0x43c> */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*309: nopl   0x0(%rax) */
0x49, 0x8b, 0x54, 0xf6, 0xf8,             /*310: mov    -0x8(%r14,%rsi,8),%rdx */
0x48, 0x89, 0x14, 0xf1,                   /*315: mov    %rdx,(%rcx,%rsi,8) */
0x48, 0xff, 0xce,                         /*319: dec    %rsi */
0x75, 0xf2,                               /*31c: jne    310 <op_enter+0x310> */
0xe9, 0x19, 0x01, 0x00, 0x00,             /*31e: jmpq   43c <op_enter+0x43c> */
0x4d, 0x39, 0xf5,                         /*323: cmp    %r14,%r13 */
0x0f, 0x84, 0x20, 0x02, 0x00, 0x00,       /*326: je     54c <op_enter+0x54c> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*32c: mov    0x0(%rip),%rax        # 333 <op_enter+0x333> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*333: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*338: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*33d: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*340: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*343: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*348: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*34b: and    $0x1f,%esi */
0x01, 0xd6,                               /*34e: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*350: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*355: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*358: and    $0x1,%edx */
0x01, 0xf2,                               /*35b: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*35d: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*360: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*363: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*367: movslq %ecx,%rcx */
0x4b, 0x8b, 0x14, 0xe7,                   /*36a: mov    (%r15,%r12,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*36e: mov    %rdx,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*372: mov    0x0(%rip),%rax        # 379 <op_enter+0x379> */
0x48, 0x8d, 0x48, 0x08,                   /*379: lea    0x8(%rax),%rcx */
0x4c, 0x39, 0xf1,                         /*37d: cmp    %r14,%rcx */
0x0f, 0x86, 0x6c, 0x01, 0x00, 0x00,       /*380: jbe    4f2 <op_enter+0x4f2> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*386: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*38b: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*390: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*393: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*396: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*399: and    $0x1f,%edx */
0x01, 0xf2,                               /*39c: add    %esi,%edx */
0x48, 0x63, 0xd2,                         /*39e: movslq %edx,%rdx */
0x49, 0x8d, 0x14, 0xd6,                   /*3a1: lea    (%r14,%rdx,8),%rdx */
0x48, 0x39, 0xd1,                         /*3a5: cmp    %rdx,%rcx */
0x0f, 0x83, 0x44, 0x01, 0x00, 0x00,       /*3a8: jae    4f2 <op_enter+0x4f2> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3ae: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3b3: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*3b8: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*3bb: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*3be: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*3c1: and    $0x1f,%ecx */
0x01, 0xd1,                               /*3c4: add    %edx,%ecx */
0x0f, 0x84, 0x80, 0x01, 0x00, 0x00,       /*3c6: je     54c <op_enter+0x54c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3cc: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3d1: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*3d6: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*3d9: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*3dc: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*3df: and    $0x1f,%ecx */
0x01, 0xd1,                               /*3e2: add    %edx,%ecx */
0x48, 0x63, 0xc9,                         /*3e4: movslq %ecx,%rcx */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*3e7: nopw   0x0(%rax,%rax,1) */
0x49, 0x8b, 0x54, 0xce, 0xf8,             /*3f0: mov    -0x8(%r14,%rcx,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*3f5: mov    %rdx,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*3f9: dec    %rcx */
0x75, 0xf2,                               /*3fc: jne    3f0 <op_enter+0x3f0> */
0xe9, 0x49, 0x01, 0x00, 0x00,             /*3fe: jmpq   54c <op_enter+0x54c> */
0x4c, 0x39, 0xf5,                         /*403: cmp    %r14,%rbp */
0x74, 0x34,                               /*406: je     43c <op_enter+0x43c> */
0x89, 0xde,                               /*408: mov    %ebx,%esi */
0x29, 0xc6,                               /*40a: sub    %eax,%esi */
0x74, 0x2e,                               /*40c: je     43c <op_enter+0x43c> */
0x48, 0x63, 0xf6,                         /*40e: movslq %esi,%rsi */
0x48, 0xf7, 0xde,                         /*411: neg    %rsi */
0x4c, 0x89, 0xf7,                         /*414: mov    %r14,%rdi */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*417: nopw   0x0(%rax,%rax,1) */
0x48, 0x89, 0xea,                         /*420: mov    %rbp,%rdx */
0x48, 0x83, 0xc1, 0x10,                   /*423: add    $0x10,%rcx */
0x48, 0x8b, 0x2f,                         /*427: mov    (%rdi),%rbp */
0x48, 0x83, 0xc7, 0x08,                   /*42a: add    $0x8,%rdi */
0x48, 0x89, 0x2a,                         /*42e: mov    %rbp,(%rdx) */
0x48, 0xff, 0xc6,                         /*431: inc    %rsi */
0x48, 0x89, 0xcd,                         /*434: mov    %rcx,%rbp */
0x48, 0x89, 0xd1,                         /*437: mov    %rdx,%rcx */
0x75, 0xe4,                               /*43a: jne    420 <op_enter+0x420> */
0x85, 0xc0,                               /*43c: test   %eax,%eax */
0x0f, 0x84, 0xbf, 0x02, 0x00, 0x00,       /*43e: je     703 <op_enter+0x703> */
0x4c, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*444: mov    0x0(%rip),%r8        # 44b <op_enter+0x44b> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*44b: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*450: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*455: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*458: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*45b: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*460: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*463: and    $0x1f,%edi */
0x01, 0xf7,                               /*466: add    %esi,%edi */
0xc1, 0xea, 0x0c,                         /*468: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*46b: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*46e: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x63, 0xd2,                         /*472: movslq %edx,%rdx */
0x49, 0x8d, 0x14, 0xd0,                   /*475: lea    (%r8,%rdx,8),%rdx */
0x89, 0xde,                               /*479: mov    %ebx,%esi */
0x29, 0xc6,                               /*47b: sub    %eax,%esi */
0x48, 0x63, 0xee,                         /*47d: movslq %esi,%rbp */
0x49, 0x8d, 0x3c, 0xee,                   /*480: lea    (%r14,%rbp,8),%rdi */
0x48, 0x39, 0xfa,                         /*484: cmp    %rdi,%rdx */
0x0f, 0x86, 0x55, 0x02, 0x00, 0x00,       /*487: jbe    6e2 <op_enter+0x6e2> */
0x48, 0x63, 0xf0,                         /*48d: movslq %eax,%rsi */
0x48, 0x8d, 0x4c, 0x35, 0x00,             /*490: lea    0x0(%rbp,%rsi,1),%rcx */
0x49, 0x8d, 0x0c, 0xce,                   /*495: lea    (%r14,%rcx,8),%rcx */
0x48, 0x39, 0xca,                         /*499: cmp    %rcx,%rdx */
0x0f, 0x83, 0x40, 0x02, 0x00, 0x00,       /*49c: jae    6e2 <op_enter+0x6e2> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4a2: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4a7: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*4ac: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*4af: and    $0x1f,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4b2: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*4b7: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*4ba: and    $0x1f,%edx */
0x01, 0xca,                               /*4bd: add    %ecx,%edx */
0xc1, 0xe8, 0x0c,                         /*4bf: shr    $0xc,%eax */
0x83, 0xe0, 0x01,                         /*4c2: and    $0x1,%eax */
0x8d, 0x44, 0x10, 0x01,                   /*4c5: lea    0x1(%rax,%rdx,1),%eax */
0x49, 0x8d, 0x44, 0xc0, 0xf8,             /*4c9: lea    -0x8(%r8,%rax,8),%rax */
0x49, 0x8d, 0x4c, 0xee, 0xf8,             /*4ce: lea    -0x8(%r14,%rbp,8),%rcx */
0x0f, 0x1f, 0x00,                         /*4d3: nopl   (%rax) */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*4d6: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x14, 0xf1,                   /*4e0: mov    (%rcx,%rsi,8),%rdx */
0x48, 0x89, 0x14, 0xf0,                   /*4e4: mov    %rdx,(%rax,%rsi,8) */
0x48, 0xff, 0xce,                         /*4e8: dec    %rsi */
0x75, 0xf3,                               /*4eb: jne    4e0 <op_enter+0x4e0> */
0xe9, 0x11, 0x02, 0x00, 0x00,             /*4ed: jmpq   703 <op_enter+0x703> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4f2: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4f7: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*4fc: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*4ff: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*502: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*505: and    $0x1f,%edx */
0x01, 0xf2,                               /*508: add    %esi,%edx */
0x4c, 0x39, 0xf1,                         /*50a: cmp    %r14,%rcx */
0x74, 0x3d,                               /*50d: je     54c <op_enter+0x54c> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*50f: mov    $0x0,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*514: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*519: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*51c: and    $0x1f,%edi */
0xc1, 0xee, 0x12,                         /*51f: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*522: and    $0x1f,%esi */
0x01, 0xfe,                               /*525: add    %edi,%esi */
0x74, 0x23,                               /*527: je     54c <op_enter+0x54c> */
0x48, 0xf7, 0xda,                         /*529: neg    %rdx */
0x4c, 0x89, 0xf6,                         /*52c: mov    %r14,%rsi */
0x90,                                     /*52f: nop */
0x48, 0x89, 0xcf,                         /*530: mov    %rcx,%rdi */
0x48, 0x83, 0xc0, 0x10,                   /*533: add    $0x10,%rax */
0x48, 0x8b, 0x0e,                         /*537: mov    (%rsi),%rcx */
0x48, 0x83, 0xc6, 0x08,                   /*53a: add    $0x8,%rsi */
0x48, 0x89, 0x0f,                         /*53e: mov    %rcx,(%rdi) */
0x48, 0xff, 0xc2,                         /*541: inc    %rdx */
0x48, 0x89, 0xc1,                         /*544: mov    %rax,%rcx */
0x48, 0x89, 0xf8,                         /*547: mov    %rdi,%rax */
0x75, 0xe4,                               /*54a: jne    530 <op_enter+0x530> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*54c: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*551: mov    $0x0,%eax */
0x0f, 0xba, 0xe1, 0x0c,                   /*556: bt     $0xc,%ecx */
0x72, 0x10,                               /*55a: jb     56c <op_enter+0x56c> */
0xc1, 0xe8, 0x0d,                         /*55c: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*55f: and    $0x1f,%eax */
0xc1, 0xe9, 0x12,                         /*562: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*565: and    $0x1f,%ecx */
0x01, 0xc1,                               /*568: add    %eax,%ecx */
0xeb, 0x7c,                               /*56a: jmp    5e8 <op_enter+0x5e8> */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*56c: mov    $0x0,%ebp */
0xc1, 0xed, 0x0d,                         /*571: shr    $0xd,%ebp */
0x83, 0xe5, 0x1f,                         /*574: and    $0x1f,%ebp */
0x4c, 0x89, 0x7c, 0x24, 0x10,             /*577: mov    %r15,0x10(%rsp) */
0x41, 0xbf, 0x00, 0x00, 0x00, 0x00,       /*57c: mov    $0x0,%r15d */
0x41, 0xc1, 0xef, 0x12,                   /*582: shr    $0x12,%r15d */
0x41, 0x83, 0xe7, 0x1f,                   /*586: and    $0x1f,%r15d */
0x4c, 0x89, 0x2c, 0x24,                   /*58a: mov    %r13,(%rsp) */
0x45, 0x89, 0xfd,                         /*58e: mov    %r15d,%r13d */
0x41, 0xf7, 0xdd,                         /*591: neg    %r13d */
0x41, 0x29, 0xed,                         /*594: sub    %ebp,%r13d */
0xc1, 0xe8, 0x07,                         /*597: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*59a: and    $0x1f,%eax */
0x41, 0x29, 0xc5,                         /*59d: sub    %eax,%r13d */
0x42, 0x8d, 0x34, 0x2b,                   /*5a0: lea    (%rbx,%r13,1),%esi */
0x4c, 0x89, 0x64, 0x24, 0x08,             /*5a4: mov    %r12,0x8(%rsp) */
0x4c, 0x8b, 0x25, 0x00, 0x00, 0x00, 0x00, /*5a9: mov    0x0(%rip),%r12        # 5b0 <op_enter+0x5b0> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*5b0: mov    0x0(%rip),%rdi        # 5b7 <op_enter+0x5b7> */
0x49, 0x8d, 0x04, 0x2f,                   /*5b7: lea    (%r15,%rbp,1),%rax */
0x49, 0x8d, 0x14, 0xc6,                   /*5bb: lea    (%r14,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*5bf: callq  5c4 <op_enter+0x5c4> */
0x44, 0x89, 0xf9,                         /*5c4: mov    %r15d,%ecx */
0x01, 0xe9,                               /*5c7: add    %ebp,%ecx */
0x41, 0x8d, 0x54, 0x2f, 0x01,             /*5c9: lea    0x1(%r15,%rbp,1),%edx */
0x4c, 0x8b, 0x7c, 0x24, 0x10,             /*5ce: mov    0x10(%rsp),%r15 */
0x48, 0x63, 0xd2,                         /*5d3: movslq %edx,%rdx */
0x49, 0x89, 0x04, 0xd4,                   /*5d6: mov    %rax,(%r12,%rdx,8) */
0x4c, 0x8b, 0x64, 0x24, 0x08,             /*5da: mov    0x8(%rsp),%r12 */
0x44, 0x01, 0xe9,                         /*5df: add    %r13d,%ecx */
0x4c, 0x8b, 0x2c, 0x24,                   /*5e2: mov    (%rsp),%r13 */
0x01, 0xd9,                               /*5e6: add    %ebx,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5e8: mov    $0x0,%eax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5ed: mov    $0x0,%edx */
0xc1, 0xea, 0x07,                         /*5f2: shr    $0x7,%edx */
0x83, 0xe2, 0x1f,                         /*5f5: and    $0x1f,%edx */
0x29, 0xd3,                               /*5f8: sub    %edx,%ebx */
0xc1, 0xe8, 0x12,                         /*5fa: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*5fd: and    $0x1f,%eax */
0x39, 0xc3,                               /*600: cmp    %eax,%ebx */
0x0f, 0x8e, 0xdb, 0x01, 0x00, 0x00,       /*602: jle    7e3 <op_enter+0x7e3> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*608: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*60d: shr    $0x7,%eax */
0xa8, 0x1f,                               /*610: test   $0x1f,%al */
0x0f, 0x84, 0xcb, 0x01, 0x00, 0x00,       /*612: je     7e3 <op_enter+0x7e3> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*618: mov    0x0(%rip),%rax        # 61f <op_enter+0x61f> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*61f: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*624: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*629: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*62c: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*62f: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*634: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*637: and    $0x1f,%edi */
0x01, 0xf7,                               /*63a: add    %esi,%edi */
0xc1, 0xea, 0x0c,                         /*63c: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*63f: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*642: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x63, 0xd2,                         /*646: movslq %edx,%rdx */
0x48, 0x8d, 0x14, 0xd0,                   /*649: lea    (%rax,%rdx,8),%rdx */
0x48, 0x63, 0xf1,                         /*64d: movslq %ecx,%rsi */
0x49, 0x8d, 0x0c, 0xf6,                   /*650: lea    (%r14,%rsi,8),%rcx */
0x48, 0x39, 0xca,                         /*654: cmp    %rcx,%rdx */
0x0f, 0x86, 0x4e, 0x01, 0x00, 0x00,       /*657: jbe    7ab <op_enter+0x7ab> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*65d: mov    $0x0,%edi */
0xc1, 0xef, 0x07,                         /*662: shr    $0x7,%edi */
0x83, 0xe7, 0x1f,                         /*665: and    $0x1f,%edi */
0x48, 0x01, 0xf7,                         /*668: add    %rsi,%rdi */
0x49, 0x8d, 0x3c, 0xfe,                   /*66b: lea    (%r14,%rdi,8),%rdi */
0x48, 0x39, 0xfa,                         /*66f: cmp    %rdi,%rdx */
0x0f, 0x83, 0x33, 0x01, 0x00, 0x00,       /*672: jae    7ab <op_enter+0x7ab> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*678: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*67d: shr    $0x7,%ecx */
0xf6, 0xc1, 0x1f,                         /*680: test   $0x1f,%cl */
0x0f, 0x84, 0x5a, 0x01, 0x00, 0x00,       /*683: je     7e3 <op_enter+0x7e3> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*689: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*68e: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*693: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*696: and    $0x1f,%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*699: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*69e: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*6a1: and    $0x1f,%edi */
0x01, 0xd7,                               /*6a4: add    %edx,%edi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6a6: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*6ab: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*6ae: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*6b1: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x8d, 0x44, 0xd0, 0xf8,             /*6b5: lea    -0x8(%rax,%rdx,8),%rax */
0x49, 0x8d, 0x54, 0xf6, 0xf8,             /*6ba: lea    -0x8(%r14,%rsi,8),%rdx */
0xc1, 0xe9, 0x07,                         /*6bf: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*6c2: and    $0x1f,%ecx */
0x90,                                     /*6c5: nop */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*6c6: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x34, 0xca,                   /*6d0: mov    (%rdx,%rcx,8),%rsi */
0x48, 0x89, 0x34, 0xc8,                   /*6d4: mov    %rsi,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*6d8: dec    %rcx */
0x75, 0xf3,                               /*6db: jne    6d0 <op_enter+0x6d0> */
0xe9, 0x01, 0x01, 0x00, 0x00,             /*6dd: jmpq   7e3 <op_enter+0x7e3> */
0x48, 0x39, 0xfa,                         /*6e2: cmp    %rdi,%rdx */
0x74, 0x1c,                               /*6e5: je     703 <op_enter+0x703> */
0x48, 0x98,                               /*6e7: cltq */
0x48, 0xf7, 0xd8,                         /*6e9: neg    %rax */
0x0f, 0x1f, 0x40, 0x00,                   /*6ec: nopl   0x0(%rax) */
0x48, 0x8b, 0x0f,                         /*6f0: mov    (%rdi),%rcx */
0x48, 0x83, 0xc7, 0x08,                   /*6f3: add    $0x8,%rdi */
0x48, 0x89, 0x0a,                         /*6f7: mov    %rcx,(%rdx) */
0x48, 0x83, 0xc2, 0x08,                   /*6fa: add    $0x8,%rdx */
0x48, 0xff, 0xc0,                         /*6fe: inc    %rax */
0x75, 0xed,                               /*701: jne    6f0 <op_enter+0x6f0> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*703: mov    $0x0,%eax */
0x0f, 0xba, 0xe0, 0x0c,                   /*708: bt     $0xc,%eax */
0x73, 0x37,                               /*70c: jae    745 <op_enter+0x745> */
0x48, 0x8b, 0x2d, 0x00, 0x00, 0x00, 0x00, /*70e: mov    0x0(%rip),%rbp        # 715 <op_enter+0x715> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*715: mov    0x0(%rip),%rdi        # 71c <op_enter+0x71c> */
0x31, 0xf6,                               /*71c: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*71e: callq  723 <op_enter+0x723> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*723: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*728: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*72d: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*730: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*733: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*736: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*739: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*73d: movslq %ecx,%rcx */
0x48, 0x89, 0x44, 0xcd, 0x00,             /*740: mov    %rax,0x0(%rbp,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*745: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*74a: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*74f: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*752: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*755: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*758: and    $0x1f,%eax */
0x01, 0xc8,                               /*75b: add    %ecx,%eax */
0x39, 0xc3,                               /*75d: cmp    %eax,%ebx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*75f: mov    $0x0,%eax */
0x0f, 0x8c, 0xf5, 0x00, 0x00, 0x00,       /*764: jl     85f <op_enter+0x85f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*76a: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*76f: shr    $0xd,%ecx */
0xf6, 0xc1, 0x1f,                         /*772: test   $0x1f,%cl */
0x0f, 0x84, 0xe4, 0x00, 0x00, 0x00,       /*775: je     85f <op_enter+0x85f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*77b: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*780: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*785: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*788: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*78b: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*78e: and    $0x1f,%eax */
0xf7, 0xd8,                               /*791: neg    %eax */
0x29, 0xc8,                               /*793: sub    %ecx,%eax */
0x01, 0xc3,                               /*795: add    %eax,%ebx */
0x48, 0x63, 0xc3,                         /*797: movslq %ebx,%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*79a: mov    0x0(%rip),%rcx        # 7a1 <op_enter+0x7a1> */
0x0f, 0xb7, 0x44, 0x41, 0x70,             /*7a1: movzwl 0x70(%rcx,%rax,2),%eax */
0xe9, 0xac, 0x00, 0x00, 0x00,             /*7a6: jmpq   857 <op_enter+0x857> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7ab: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*7b0: shr    $0x7,%eax */
0x48, 0x39, 0xca,                         /*7b3: cmp    %rcx,%rdx */
0x74, 0x2b,                               /*7b6: je     7e3 <op_enter+0x7e3> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*7b8: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*7bd: shr    $0x7,%esi */
0x40, 0xf6, 0xc6, 0x1f,                   /*7c0: test   $0x1f,%sil */
0x74, 0x1d,                               /*7c4: je     7e3 <op_enter+0x7e3> */
0x48, 0x83, 0xe0, 0x1f,                   /*7c6: and    $0x1f,%rax */
0x48, 0xf7, 0xd8,                         /*7ca: neg    %rax */
0x0f, 0x1f, 0x00,                         /*7cd: nopl   (%rax) */
0x48, 0x8b, 0x31,                         /*7d0: mov    (%rcx),%rsi */
0x48, 0x83, 0xc1, 0x08,                   /*7d3: add    $0x8,%rcx */
0x48, 0x89, 0x32,                         /*7d7: mov    %rsi,(%rdx) */
0x48, 0x83, 0xc2, 0x08,                   /*7da: add    $0x8,%rdx */
0x48, 0xff, 0xc0,                         /*7de: inc    %rax */
0x75, 0xed,                               /*7e1: jne    7d0 <op_enter+0x7d0> */
0x4d, 0x39, 0xf5,                         /*7e3: cmp    %r14,%r13 */
0x75, 0x46,                               /*7e6: jne    82e <op_enter+0x82e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7e8: mov    0x0(%rip),%rax        # 7ef <op_enter+0x7ef> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7ef: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7f4: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*7f9: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*7fc: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*7ff: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*804: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*807: and    $0x1f,%esi */
0x01, 0xd6,                               /*80a: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*80c: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*811: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*814: and    $0x1,%edx */
0x01, 0xf2,                               /*817: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*819: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*81c: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*81f: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*823: movslq %ecx,%rcx */
0x4b, 0x8b, 0x14, 0xe7,                   /*826: mov    (%r15,%r12,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*82a: mov    %rdx,(%rax,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*82e: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*833: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*838: shr    $0xd,%ecx */
0xf6, 0xc1, 0x1f,                         /*83b: test   $0x1f,%cl */
0x7e, 0x1f,                               /*83e: jle    85f <op_enter+0x85f> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*840: mov    0x0(%rip),%rax        # 847 <op_enter+0x847> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*847: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*84c: shr    $0xd,%ecx */
0x83, 0xe1, 0x1f,                         /*84f: and    $0x1f,%ecx */
0x0f, 0xb7, 0x44, 0x48, 0x70,             /*852: movzwl 0x70(%rax,%rcx,2),%eax */
0x48, 0x8d, 0x04, 0x85, 0x00, 0x00, 0x00, 0x00,/*857: lea    0x0(,%rax,4),%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*85f: mov    0x0(%rip),%rcx        # 866 <op_enter+0x866> */
0x48, 0x2b, 0x41, 0x08,                   /*866: sub    0x8(%rcx),%rax */
0x48, 0x8b, 0x91, 0xa8, 0x00, 0x00, 0x00, /*86a: mov    0xa8(%rcx),%rdx */
0x48, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00,/*871: movabs $0x3fffffffc,%rsi */
0x48, 0x21, 0xc6,                         /*87b: and    %rax,%rsi */
0x8b, 0x04, 0x32,                         /*87e: mov    (%rdx,%rsi,1),%eax */
0x48, 0x03, 0x81, 0xc0, 0x00, 0x00, 0x00, /*881: add    0xc0(%rcx),%rax */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*888: mov    $0x0,%edi */
0xff, 0xd0,                               /*88d: callq  *%rax */
0x48, 0x83, 0xc4, 0x18,                   /*88f: add    $0x18,%rsp */
0x5b,                                     /*893: pop    %rbx */
0x41, 0x5c,                               /*894: pop    %r12 */
0x41, 0x5d,                               /*896: pop    %r13 */
0x41, 0x5e,                               /*898: pop    %r14 */
0x41, 0x5f,                               /*89a: pop    %r15 */
0x5d,                                     /*89c: pop    %rbp */

};
static uint8_t op_enter__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};


static uint8_t op_enter_method_m__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x57,                               /*e: push   %r15 */
0x41, 0x56,                               /*10: push   %r14 */
0x41, 0x54,                               /*12: push   %r12 */
0x53,                                     /*14: push   %rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*15: mov    0x0(%rip),%rdi        # 1c <op_enter_method_m+0x1c> */
0x48, 0x8b, 0x47, 0x18,                   /*1c: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*20: mov    0x20(%rax),%rax */
0x48, 0x63, 0x58, 0x40,                   /*24: movslq 0x40(%rax),%rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*28: mov    0x0(%rip),%r14        # 2f <op_enter_method_m+0x2f> */
0x48, 0x8d, 0x43, 0x01,                   /*2f: lea    0x1(%rbx),%rax */
0x48, 0x85, 0xdb,                         /*33: test   %rbx,%rbx */
0x41, 0xbf, 0x02, 0x00, 0x00, 0x00,       /*36: mov    $0x2,%r15d */
0x4c, 0x0f, 0x49, 0xf8,                   /*3c: cmovns %rax,%r15 */
0x4b, 0x8b, 0x34, 0xfe,                   /*40: mov    (%r14,%r15,8),%rsi */
0x48, 0x85, 0xf6,                         /*44: test   %rsi,%rsi */
0x74, 0x3d,                               /*47: je     86 <op_enter_method_m+0x86> */
0x48, 0x83, 0xfe, 0x07,                   /*49: cmp    $0x7,%rsi */
0x73, 0x13,                               /*4d: jae    62 <op_enter_method_m+0x62> */
0xb8, 0x55, 0x00, 0x00, 0x00,             /*4f: mov    $0x55,%eax */
0x0f, 0xa3, 0xf0,                         /*54: bt     %esi,%eax */
0x73, 0x09,                               /*57: jae    62 <op_enter_method_m+0x62> */
0x8b, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00, /*59: mov    0x0(,%rsi,4),%eax */
0xeb, 0x1c,                               /*60: jmp    7e <op_enter_method_m+0x7e> */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*62: mov    $0x3,%eax */
0x40, 0xf6, 0xc6, 0x01,                   /*67: test   $0x1,%sil */
0x75, 0x11,                               /*6b: jne    7e <op_enter_method_m+0x7e> */
0x40, 0x0f, 0xb6, 0xce,                   /*6d: movzbl %sil,%ecx */
0xb8, 0x04, 0x00, 0x00, 0x00,             /*71: mov    $0x4,%eax */
0x83, 0xf9, 0x0e,                         /*76: cmp    $0xe,%ecx */
0x74, 0x03,                               /*79: je     7e <op_enter_method_m+0x7e> */
0x0f, 0xb6, 0x06,                         /*7b: movzbl (%rsi),%eax */
0x83, 0xf8, 0x0d,                         /*7e: cmp    $0xd,%eax */
0x0f, 0x95, 0xc0,                         /*81: setne  %al */
0xeb, 0x02,                               /*84: jmp    88 <op_enter_method_m+0x88> */
0x31, 0xc0,                               /*86: xor    %eax,%eax */
0x84, 0xc0,                               /*88: test   %al,%al */
0x74, 0x19,                               /*8a: je     a5 <op_enter_method_m+0xa5> */
0xba, 0x0d, 0x00, 0x00, 0x00,             /*8c: mov    $0xd,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*91: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*96: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*9c: callq  a1 <op_enter_method_m+0xa1> */
0x4b, 0x89, 0x04, 0xfe,                   /*a1: mov    %rax,(%r14,%r15,8) */
0x4d, 0x8d, 0x66, 0x08,                   /*a5: lea    0x8(%r14),%r12 */
0x85, 0xdb,                               /*a9: test   %ebx,%ebx */
0x78, 0x5c,                               /*ab: js     109 <op_enter_method_m+0x109> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ad: mov    $0x0,%eax */
0xc1, 0xe8, 0x12,                         /*b2: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*b5: and    $0x1f,%eax */
0x39, 0xc3,                               /*b8: cmp    %eax,%ebx */
0x4c, 0x89, 0xe3,                         /*ba: mov    %r12,%rbx */
0x7d, 0x65,                               /*bd: jge    124 <op_enter_method_m+0x124> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*bf: mov    0x0(%rip),%rdi        # c6 <op_enter_method_m+0xc6> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*c6: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*cb: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*ce: and    $0x1f,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*d1: callq  d6 <op_enter_method_m+0xd6> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*d6: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*db: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e0: callq  e5 <op_enter_method_m+0xe5> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*e5: mov    0x0(%rip),%rdi        # ec <op_enter_method_m+0xec> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*ec: mov    0x0(%rip),%rsi        # f3 <op_enter_method_m+0xf3> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*f3: mov    0x0(%rip),%rcx        # fa <op_enter_method_m+0xfa> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*fa: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*ff: jmpq   104 <op_enter_method_m+0x104> */
0xe9, 0x12, 0x01, 0x00, 0x00,             /*104: jmpq   21b <op_enter_method_m+0x21b> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*109: mov    0x0(%rip),%rax        # 110 <op_enter_method_m+0x110> */
0x48, 0x8b, 0x70, 0x08,                   /*110: mov    0x8(%rax),%rsi */
0x48, 0x8b, 0x5e, 0x28,                   /*114: mov    0x28(%rsi),%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*118: mov    0x0(%rip),%rdi        # 11f <op_enter_method_m+0x11f> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*11f: callq  124 <op_enter_method_m+0x124> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*124: mov    0x0(%rip),%rax        # 12b <op_enter_method_m+0x12b> */
0x48, 0x8b, 0x40, 0x18,                   /*12b: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*12f: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*133: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*138: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*13b: and    $0x1f,%ecx */
0x89, 0x48, 0x40,                         /*13e: mov    %ecx,0x40(%rax) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*141: mov    0x0(%rip),%rax        # 148 <op_enter_method_m+0x148> */
0xff, 0xc1,                               /*148: inc    %ecx */
0x48, 0x63, 0xc9,                         /*14a: movslq %ecx,%rcx */
0x4b, 0x8b, 0x14, 0xfe,                   /*14d: mov    (%r14,%r15,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*151: mov    %rdx,(%rax,%rcx,8) */
0x49, 0x39, 0xdc,                         /*155: cmp    %rbx,%r12 */
0x0f, 0x84, 0x9e, 0x00, 0x00, 0x00,       /*158: je     1fc <op_enter_method_m+0x1fc> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*15e: mov    0x0(%rip),%rax        # 165 <op_enter_method_m+0x165> */
0x48, 0x8d, 0x48, 0x08,                   /*165: lea    0x8(%rax),%rcx */
0x48, 0x39, 0xd9,                         /*169: cmp    %rbx,%rcx */
0x76, 0x42,                               /*16c: jbe    1b0 <op_enter_method_m+0x1b0> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*16e: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*173: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*176: and    $0x1f,%edx */
0x48, 0x8d, 0x14, 0xd3,                   /*179: lea    (%rbx,%rdx,8),%rdx */
0x48, 0x39, 0xd1,                         /*17d: cmp    %rdx,%rcx */
0x73, 0x2e,                               /*180: jae    1b0 <op_enter_method_m+0x1b0> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*182: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*187: shr    $0x12,%ecx */
0xf6, 0xc1, 0x1f,                         /*18a: test   $0x1f,%cl */
0x74, 0x6d,                               /*18d: je     1fc <op_enter_method_m+0x1fc> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18f: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*194: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*197: and    $0x1f,%ecx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*19a: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x54, 0xcb, 0xf8,             /*1a0: mov    -0x8(%rbx,%rcx,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*1a5: mov    %rdx,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*1a9: dec    %rcx */
0x75, 0xf2,                               /*1ac: jne    1a0 <op_enter_method_m+0x1a0> */
0xeb, 0x4c,                               /*1ae: jmp    1fc <op_enter_method_m+0x1fc> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1b0: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*1b5: shr    $0x12,%edx */
0x48, 0x39, 0xd9,                         /*1b8: cmp    %rbx,%rcx */
0x74, 0x3f,                               /*1bb: je     1fc <op_enter_method_m+0x1fc> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1bd: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*1c2: shr    $0x12,%esi */
0x40, 0xf6, 0xc6, 0x1f,                   /*1c5: test   $0x1f,%sil */
0x74, 0x31,                               /*1c9: je     1fc <op_enter_method_m+0x1fc> */
0x48, 0x83, 0xe2, 0x1f,                   /*1cb: and    $0x1f,%rdx */
0x48, 0xf7, 0xda,                         /*1cf: neg    %rdx */
0x0f, 0x1f, 0x40, 0x00,                   /*1d2: nopl   0x0(%rax) */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1d6: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xce,                         /*1e0: mov    %rcx,%rsi */
0x48, 0x83, 0xc0, 0x10,                   /*1e3: add    $0x10,%rax */
0x48, 0x8b, 0x0b,                         /*1e7: mov    (%rbx),%rcx */
0x48, 0x83, 0xc3, 0x08,                   /*1ea: add    $0x8,%rbx */
0x48, 0x89, 0x0e,                         /*1ee: mov    %rcx,(%rsi) */
0x48, 0xff, 0xc2,                         /*1f1: inc    %rdx */
0x48, 0x89, 0xc1,                         /*1f4: mov    %rax,%rcx */
0x48, 0x89, 0xf0,                         /*1f7: mov    %rsi,%rax */
0x75, 0xe4,                               /*1fa: jne    1e0 <op_enter_method_m+0x1e0> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1fc: mov    0x0(%rip),%rax        # 203 <op_enter_method_m+0x203> */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*203: mov    0xa8(%rax),%rcx */
0x8b, 0x49, 0x04,                         /*20a: mov    0x4(%rcx),%ecx */
0x48, 0x03, 0x88, 0xc0, 0x00, 0x00, 0x00, /*20d: add    0xc0(%rax),%rcx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*214: mov    $0x0,%edi */
0xff, 0xd1,                               /*219: callq  *%rcx */
0x5b,                                     /*21b: pop    %rbx */
0x41, 0x5c,                               /*21c: pop    %r12 */
0x41, 0x5e,                               /*21e: pop    %r14 */
0x41, 0x5f,                               /*220: pop    %r15 */

};
static uint8_t op_enter_method_m__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};


static uint8_t op_karg__text[] = {

};
static uint8_t op_karg__rodata[] = {

};


static uint8_t op_kdict__text[] = {

};
static uint8_t op_kdict__rodata[] = {

};


static uint8_t op_return__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x48, 0x83, 0xe4, 0xf0,                   /*4: and    $0xfffffffffffffff0,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%esi */
0x31, 0xd2,                               /*12: xor    %edx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*19: callq  1e <op_return+0x1e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1e: mov    0x0(%rip),%rax        # 25 <op_return+0x25> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*25: mov    0x0(%rip),%rcx        # 2c <op_return+0x2c> */
0x48, 0x2b, 0x41, 0x08,                   /*2c: sub    0x8(%rcx),%rax */
0x48, 0x8b, 0x91, 0xa8, 0x00, 0x00, 0x00, /*30: mov    0xa8(%rcx),%rdx */
0x48, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00,/*37: movabs $0x3fffffffc,%rsi */
0x48, 0x21, 0xc6,                         /*41: and    %rax,%rsi */
0x8b, 0x04, 0x32,                         /*44: mov    (%rdx,%rsi,1),%eax */
0x48, 0x03, 0x81, 0xc0, 0x00, 0x00, 0x00, /*47: add    0xc0(%rcx),%rax */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*4e: mov    $0x0,%edi */
0xff, 0xe0,                               /*53: jmpq   *%rax */

};
static uint8_t op_return__rodata[] = {

};


static uint8_t op_break__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x48, 0x83, 0xe4, 0xf0,                   /*4: and    $0xfffffffffffffff0,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_break+0x21> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*21: mov    0x0(%rip),%rax        # 28 <op_break+0x28> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*28: mov    0x0(%rip),%rcx        # 2f <op_break+0x2f> */
0x48, 0x2b, 0x41, 0x08,                   /*2f: sub    0x8(%rcx),%rax */
0x48, 0x8b, 0x91, 0xa8, 0x00, 0x00, 0x00, /*33: mov    0xa8(%rcx),%rdx */
0x48, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00,/*3a: movabs $0x3fffffffc,%rsi */
0x48, 0x21, 0xc6,                         /*44: and    %rax,%rsi */
0x8b, 0x04, 0x32,                         /*47: mov    (%rdx,%rsi,1),%eax */
0x48, 0x03, 0x81, 0xc0, 0x00, 0x00, 0x00, /*4a: add    0xc0(%rcx),%rax */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%edi */
0xff, 0xe0,                               /*56: jmpq   *%rax */

};
static uint8_t op_break__rodata[] = {

};


static uint8_t op_tailcall__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x55,                               /*13: push   %r13 */
0x41, 0x54,                               /*15: push   %r12 */
0x53,                                     /*17: push   %rbx */
0x4c, 0x8b, 0x2d, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%r13        # 1f <op_tailcall+0x1f> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1f: mov    0x0(%rip),%rax        # 26 <op_tailcall+0x26> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*26: mov    $0x0,%ecx */
0x44, 0x8b, 0x3c, 0x88,                   /*2b: mov    (%rax,%rcx,4),%r15d */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*2f: mov    0x0(%rip),%rax        # 36 <op_tailcall+0x36> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*36: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*3b: movslq %ecx,%rcx */
0x4c, 0x8b, 0x34, 0xc8,                   /*3e: mov    (%rax,%rcx,8),%r14 */
0x49, 0x83, 0xfe, 0x06,                   /*42: cmp    $0x6,%r14 */
0x77, 0x08,                               /*46: ja     50 <op_tailcall+0x50> */
0x42, 0xff, 0x24, 0xf5, 0x00, 0x00, 0x00, 0x00,/*48: jmpq   *0x0(,%r14,8) */
0x41, 0xf6, 0xc6, 0x01,                   /*50: test   $0x1,%r14b */
0x75, 0x2f,                               /*54: jne    85 <op_tailcall+0x85> */
0x41, 0x0f, 0xb6, 0xc6,                   /*56: movzbl %r14b,%eax */
0x83, 0xf8, 0x0e,                         /*5a: cmp    $0xe,%eax */
0x74, 0x2f,                               /*5d: je     8e <op_tailcall+0x8e> */
0x41, 0x0f, 0xb6, 0x06,                   /*5f: movzbl (%r14),%eax */
0x31, 0xf6,                               /*63: xor    %esi,%esi */
0x83, 0xf8, 0x13,                         /*65: cmp    $0x13,%eax */
0x7f, 0x3f,                               /*68: jg     a9 <op_tailcall+0xa9> */
0x83, 0xf8, 0x07,                         /*6a: cmp    $0x7,%eax */
0x77, 0x3f,                               /*6d: ja     ae <op_tailcall+0xae> */
0xff, 0x24, 0xc5, 0x00, 0x00, 0x00, 0x00, /*6f: jmpq   *0x0(,%rax,8) */
0x41, 0x83, 0xfe, 0x02,                   /*76: cmp    $0x2,%r14d */
0x72, 0x24,                               /*7a: jb     a0 <op_tailcall+0xa0> */
0x49, 0x8b, 0xb5, 0x90, 0x00, 0x00, 0x00, /*7c: mov    0x90(%r13),%rsi */
0xeb, 0x2d,                               /*83: jmp    b2 <op_tailcall+0xb2> */
0x49, 0x8b, 0xb5, 0x80, 0x00, 0x00, 0x00, /*85: mov    0x80(%r13),%rsi */
0xeb, 0x24,                               /*8c: jmp    b2 <op_tailcall+0xb2> */
0x49, 0x8b, 0xb5, 0xa0, 0x00, 0x00, 0x00, /*8e: mov    0xa0(%r13),%rsi */
0xeb, 0x1b,                               /*95: jmp    b2 <op_tailcall+0xb2> */
0x49, 0x8b, 0xb5, 0x88, 0x00, 0x00, 0x00, /*97: mov    0x88(%r13),%rsi */
0xeb, 0x12,                               /*9e: jmp    b2 <op_tailcall+0xb2> */
0x49, 0x8b, 0xb5, 0x98, 0x00, 0x00, 0x00, /*a0: mov    0x98(%r13),%rsi */
0xeb, 0x09,                               /*a7: jmp    b2 <op_tailcall+0xb2> */
0x83, 0xf8, 0x14,                         /*a9: cmp    $0x14,%eax */
0x74, 0x04,                               /*ac: je     b2 <op_tailcall+0xb2> */
0x49, 0x8b, 0x76, 0x08,                   /*ae: mov    0x8(%r14),%rsi */
0x48, 0x89, 0x34, 0x24,                   /*b2: mov    %rsi,(%rsp) */
0x48, 0x8d, 0x14, 0x24,                   /*b6: lea    (%rsp),%rdx */
0x4c, 0x89, 0xef,                         /*ba: mov    %r13,%rdi */
0x44, 0x89, 0xf9,                         /*bd: mov    %r15d,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c0: callq  c5 <op_tailcall+0xc5> */
0x49, 0x89, 0xc4,                         /*c5: mov    %rax,%r12 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c8: mov    $0x0,%ecx */
0x4d, 0x85, 0xe4,                         /*cd: test   %r12,%r12 */
0x0f, 0x85, 0x24, 0x01, 0x00, 0x00,       /*d0: jne    1fa <op_tailcall+0x1fa> */
0x49, 0xc1, 0xe7, 0x20,                   /*d6: shl    $0x20,%r15 */
0x4c, 0x89, 0xfb,                         /*da: mov    %r15,%rbx */
0x48, 0x83, 0xcb, 0x0e,                   /*dd: or     $0xe,%rbx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*e1: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*e6: mov    $0xe,%edx */
0x4c, 0x89, 0xef,                         /*eb: mov    %r13,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ee: callq  f3 <op_tailcall+0xf3> */
0x41, 0x89, 0xc7,                         /*f3: mov    %eax,%r15d */
0x48, 0x8d, 0x34, 0x24,                   /*f6: lea    (%rsp),%rsi */
0x4c, 0x89, 0xef,                         /*fa: mov    %r13,%rdi */
0x44, 0x89, 0xfa,                         /*fd: mov    %r15d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*100: callq  105 <op_tailcall+0x105> */
0x49, 0x89, 0xc4,                         /*105: mov    %rax,%r12 */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*108: mov    0x0(%rip),%rax        # 10f <op_tailcall+0x10f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10f: mov    $0x0,%ecx */
0x83, 0xf9, 0x7f,                         /*114: cmp    $0x7f,%ecx */
0x75, 0x23,                               /*117: jne    13c <op_tailcall+0x13c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*119: mov    $0x0,%ecx */
0xff, 0xc1,                               /*11e: inc    %ecx */
0x48, 0x63, 0xc9,                         /*120: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*123: mov    (%rax,%rcx,8),%rsi */
0x4c, 0x89, 0xef,                         /*127: mov    %r13,%rdi */
0x48, 0x89, 0xda,                         /*12a: mov    %rbx,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*12d: callq  132 <op_tailcall+0x132> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*132: mov    $0x0,%ecx */
0xe9, 0xbe, 0x00, 0x00, 0x00,             /*137: jmpq   1fa <op_tailcall+0x1fa> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*141: movslq %ecx,%rcx */
0x48, 0x8d, 0x51, 0x01,                   /*144: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*148: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*14c: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*14f: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*152: mov    $0x0,%edi */
0xff, 0xc7,                               /*157: inc    %edi */
0x48, 0x63, 0xff,                         /*159: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*15c: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*161: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*164: setge  %cl */
0x08, 0xd1,                               /*167: or     %dl,%cl */
0x74, 0x37,                               /*169: je     1a2 <op_tailcall+0x1a2> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16b: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*170: cmp    $0xffffffff,%ecx */
0x74, 0x69,                               /*173: je     1de <op_tailcall+0x1de> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*175: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*17a: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x10,             /*17d: lea    0x10(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*182: mov    $0x0,%ecx */
0xff, 0xc1,                               /*187: inc    %ecx */
0x48, 0x63, 0xc9,                         /*189: movslq %ecx,%rcx */
0x48, 0xf7, 0xd9,                         /*18c: neg    %rcx */
0x90,                                     /*18f: nop */
0x48, 0x8b, 0x50, 0xf8,                   /*190: mov    -0x8(%rax),%rdx */
0x48, 0x89, 0x10,                         /*194: mov    %rdx,(%rax) */
0x48, 0x8d, 0x40, 0x08,                   /*197: lea    0x8(%rax),%rax */
0x48, 0xff, 0xc1,                         /*19b: inc    %rcx */
0x75, 0xf0,                               /*19e: jne    190 <op_tailcall+0x190> */
0xeb, 0x3c,                               /*1a0: jmp    1de <op_tailcall+0x1de> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a2: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*1a7: cmp    $0xffffffff,%ecx */
0x74, 0x32,                               /*1aa: je     1de <op_tailcall+0x1de> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1ac: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1b1: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x08,             /*1b4: lea    0x8(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b9: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1be: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1c0: movslq %ecx,%rcx */
0x0f, 0x1f, 0x00,                         /*1c3: nopl   (%rax) */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1c6: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x54, 0xc8, 0xf8,             /*1d0: mov    -0x8(%rax,%rcx,8),%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*1d5: mov    %rdx,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*1d9: dec    %rcx */
0x75, 0xf2,                               /*1dc: jne    1d0 <op_tailcall+0x1d0> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1de: mov    0x0(%rip),%rax        # 1e5 <op_tailcall+0x1e5> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1e5: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1ea: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1ec: movslq %ecx,%rcx */
0x48, 0x89, 0x1c, 0xc8,                   /*1ef: mov    %rbx,(%rax,%rcx,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1f3: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1f8: inc    %ecx */
0x49, 0x8b, 0x45, 0x18,                   /*1fa: mov    0x18(%r13),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1fe: mov    0x20(%rax),%rax */
0x44, 0x89, 0x38,                         /*202: mov    %r15d,(%rax) */
0x48, 0x8b, 0x14, 0x24,                   /*205: mov    (%rsp),%rdx */
0x48, 0x89, 0x50, 0x48,                   /*209: mov    %rdx,0x48(%rax) */
0x83, 0xf9, 0x7f,                         /*20d: cmp    $0x7f,%ecx */
0xbe, 0xff, 0xff, 0xff, 0xff,             /*210: mov    $0xffffffff,%esi */
0x0f, 0x45, 0xf1,                         /*215: cmovne %ecx,%esi */
0x89, 0x70, 0x40,                         /*218: mov    %esi,0x40(%rax) */
0x49, 0x8b, 0x4d, 0x18,                   /*21b: mov    0x18(%r13),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*21f: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*223: mov    0x0(%rip),%rdi        # 22a <op_tailcall+0x22a> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*22a: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*22f: movslq %edx,%rdx */
0x48, 0x8d, 0x14, 0xd7,                   /*232: lea    (%rdi,%rdx,8),%rdx */
0xff, 0xc6,                               /*236: inc    %esi */
0x48, 0x39, 0xd1,                         /*238: cmp    %rdx,%rcx */
0x76, 0x43,                               /*23b: jbe    280 <op_tailcall+0x280> */
0x48, 0x63, 0xde,                         /*23d: movslq %esi,%rbx */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*240: mov    $0x0,%ebp */
0x48, 0x63, 0xed,                         /*245: movslq %ebp,%rbp */
0x48, 0x01, 0xdd,                         /*248: add    %rbx,%rbp */
0x48, 0x8d, 0x2c, 0xef,                   /*24b: lea    (%rdi,%rbp,8),%rbp */
0x48, 0x39, 0xe9,                         /*24f: cmp    %rbp,%rcx */
0x73, 0x2c,                               /*252: jae    280 <op_tailcall+0x280> */
0x85, 0xf6,                               /*254: test   %esi,%esi */
0x74, 0x4b,                               /*256: je     2a3 <op_tailcall+0x2a3> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*258: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*25d: movslq %edx,%rdx */
0x48, 0x8d, 0x54, 0xd7, 0xf8,             /*260: lea    -0x8(%rdi,%rdx,8),%rdx */
0x90,                                     /*265: nop */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*266: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x34, 0xda,                   /*270: mov    (%rdx,%rbx,8),%rsi */
0x48, 0x89, 0x74, 0xd9, 0xf8,             /*274: mov    %rsi,-0x8(%rcx,%rbx,8) */
0x48, 0xff, 0xcb,                         /*279: dec    %rbx */
0x75, 0xf2,                               /*27c: jne    270 <op_tailcall+0x270> */
0xeb, 0x23,                               /*27e: jmp    2a3 <op_tailcall+0x2a3> */
0x48, 0x39, 0xd1,                         /*280: cmp    %rdx,%rcx */
0x74, 0x1e,                               /*283: je     2a3 <op_tailcall+0x2a3> */
0x85, 0xf6,                               /*285: test   %esi,%esi */
0x74, 0x1a,                               /*287: je     2a3 <op_tailcall+0x2a3> */
0x48, 0x63, 0xf6,                         /*289: movslq %esi,%rsi */
0x48, 0xf7, 0xde,                         /*28c: neg    %rsi */
0x90,                                     /*28f: nop */
0x48, 0x8b, 0x3a,                         /*290: mov    (%rdx),%rdi */
0x48, 0x83, 0xc2, 0x08,                   /*293: add    $0x8,%rdx */
0x48, 0x89, 0x39,                         /*297: mov    %rdi,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*29a: add    $0x8,%rcx */
0x48, 0xff, 0xc6,                         /*29e: inc    %rsi */
0x75, 0xed,                               /*2a1: jne    290 <op_tailcall+0x290> */
0x41, 0xf6, 0x44, 0x24, 0x02, 0x04,       /*2a3: testb  $0x4,0x2(%r12) */
0x74, 0x5b,                               /*2a9: je     306 <op_tailcall+0x306> */
0x49, 0x8b, 0x45, 0x18,                   /*2ab: mov    0x18(%r13),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*2af: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xef,                         /*2b3: mov    %r13,%rdi */
0x4c, 0x89, 0xf6,                         /*2b6: mov    %r14,%rsi */
0x41, 0xff, 0x54, 0x24, 0x18,             /*2b9: callq  *0x18(%r12) */
0x48, 0x89, 0x03,                         /*2be: mov    %rax,(%rbx) */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*2c1: mov    0x0(%rip),%esi        # 2c7 <op_tailcall+0x2c7> */
0x4c, 0x89, 0xef,                         /*2c7: mov    %r13,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2ca: callq  2cf <op_tailcall+0x2cf> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*2cf: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2d4: mov    $0x0,%esi */
0x31, 0xd2,                               /*2d9: xor    %edx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2db: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e0: callq  2e5 <op_tailcall+0x2e5> */
0x5b,                                     /*2e5: pop    %rbx */
0x41, 0x5c,                               /*2e6: pop    %r12 */
0x41, 0x5d,                               /*2e8: pop    %r13 */
0x41, 0x5e,                               /*2ea: pop    %r14 */
0x41, 0x5f,                               /*2ec: pop    %r15 */
0x5d,                                     /*2ee: pop    %rbp */
0xe9, 0x8e, 0x00, 0x00, 0x00,             /*2ef: jmpq   382 <op_tailcall+0x382> */
0x49, 0x8b, 0x75, 0x78,                   /*2f4: mov    0x78(%r13),%rsi */
0xe9, 0xb5, 0xfd, 0xff, 0xff,             /*2f8: jmpq   b2 <op_tailcall+0xb2> */
0x49, 0x8b, 0x75, 0x40,                   /*2fd: mov    0x40(%r13),%rsi */
0xe9, 0xac, 0xfd, 0xff, 0xff,             /*301: jmpq   b2 <op_tailcall+0xb2> */
0x49, 0x8b, 0x4c, 0x24, 0x18,             /*306: mov    0x18(%r12),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*30b: mov    %rcx,0x0(%rip)        # 312 <op_tailcall+0x312> */
0x48, 0x8b, 0x51, 0x10,                   /*312: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*316: mov    %rdx,0x0(%rip)        # 31d <op_tailcall+0x31d> */
0x48, 0x8b, 0x51, 0x18,                   /*31d: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*321: mov    %rdx,0x0(%rip)        # 328 <op_tailcall+0x328> */
0x8b, 0x50, 0x40,                         /*328: mov    0x40(%rax),%edx */
0x0f, 0xb7, 0x71, 0x02,                   /*32b: movzwl 0x2(%rcx),%esi */
0x85, 0xd2,                               /*32f: test   %edx,%edx */
0x79, 0x12,                               /*331: jns    345 <op_tailcall+0x345> */
0x83, 0xfe, 0x03,                         /*333: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*336: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*33b: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*33e: mov    $0x3,%edx */
0xeb, 0x03,                               /*343: jmp    348 <op_tailcall+0x348> */
0x83, 0xc2, 0x02,                         /*345: add    $0x2,%edx */
0x4c, 0x89, 0xef,                         /*348: mov    %r13,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*34b: callq  350 <op_tailcall+0x350> */
0x49, 0x8b, 0x45, 0x18,                   /*350: mov    0x18(%r13),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*354: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*358: mov    %rax,0x0(%rip)        # 35f <op_tailcall+0x35f> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*35f: mov    0x0(%rip),%rsi        # 366 <op_tailcall+0x366> */
0x48, 0x8b, 0x4e, 0x08,                   /*366: mov    0x8(%rsi),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*36a: mov    %rcx,0x0(%rip)        # 371 <op_tailcall+0x371> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*371: mov    0x0(%rip),%rdi        # 378 <op_tailcall+0x378> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*378: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*37d: jmpq   382 <op_tailcall+0x382> */

};
static uint8_t op_tailcall__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};


static uint8_t op_blkpush__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x48, 0x89, 0xe5,                         /*f: mov    %rsp,%rbp */
0x48, 0x83, 0xe4, 0xf0,                   /*12: and    $0xfffffffffffffff0,%rsp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0xf6, 0xc1, 0x0f,                         /*20: test   $0xf,%cl */
0x0f, 0x84, 0x8c, 0x00, 0x00, 0x00,       /*23: je     b5 <op_blkpush+0xb5> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*29: mov    0x0(%rip),%rdi        # 30 <op_blkpush+0x30> */
0x48, 0x8b, 0x47, 0x18,                   /*30: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*34: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*38: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x28,                   /*3c: mov    0x28(%rax),%rax */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*40: mov    $0x0,%esi */
0x83, 0xe6, 0x0f,                         /*45: and    $0xf,%esi */
0x48, 0x85, 0xc0,                         /*48: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*4b: sete   %cl */
0x83, 0xfe, 0x01,                         /*4e: cmp    $0x1,%esi */
0x74, 0x20,                               /*51: je     73 <op_blkpush+0x73> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*53: mov    $0x1,%edx */
0x29, 0xf2,                               /*58: sub    %esi,%edx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*5a: nopw   0x0(%rax,%rax,1) */
0xf6, 0xc1, 0x01,                         /*60: test   $0x1,%cl */
0x75, 0x12,                               /*63: jne    77 <op_blkpush+0x77> */
0x48, 0x8b, 0x40, 0x08,                   /*65: mov    0x8(%rax),%rax */
0x48, 0x85, 0xc0,                         /*69: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*6c: sete   %cl */
0xff, 0xc2,                               /*6f: inc    %edx */
0x75, 0xed,                               /*71: jne    60 <op_blkpush+0x60> */
0x84, 0xc9,                               /*73: test   %cl,%cl */
0x74, 0x3a,                               /*75: je     b1 <op_blkpush+0xb1> */
0xbe, 0x02, 0x00, 0x00, 0x00,             /*77: mov    $0x2,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c: callq  81 <op_blkpush+0x81> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*81: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*86: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8b: callq  90 <op_blkpush+0x90> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*90: mov    0x0(%rip),%rdi        # 97 <op_blkpush+0x97> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*97: mov    0x0(%rip),%rsi        # 9e <op_blkpush+0x9e> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*9e: mov    0x0(%rip),%rcx        # a5 <op_blkpush+0xa5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a5: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*aa: jmpq   af <op_blkpush+0xaf> */
0xeb, 0x47,                               /*af: jmp    f8 <op_blkpush+0xf8> */
0x48, 0x83, 0xc0, 0x18,                   /*b1: add    $0x18,%rax */
0x48, 0x8b, 0x00,                         /*b5: mov    (%rax),%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*b8: mov    0x0(%rip),%rcx        # bf <op_blkpush+0xbf> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*bf: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*c4: mov    $0x0,%esi */
0xc1, 0xee, 0x09,                         /*c9: shr    $0x9,%esi */
0x83, 0xe6, 0x01,                         /*cc: and    $0x1,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*cf: mov    $0x0,%edi */
0xc1, 0xef, 0x0a,                         /*d4: shr    $0xa,%edi */
0x83, 0xe7, 0x3f,                         /*d7: and    $0x3f,%edi */
0x01, 0xf7,                               /*da: add    %esi,%edi */
0xc1, 0xea, 0x04,                         /*dc: shr    $0x4,%edx */
0x83, 0xe2, 0x1f,                         /*df: and    $0x1f,%edx */
0x01, 0xfa,                               /*e2: add    %edi,%edx */
0x48, 0x63, 0xd2,                         /*e4: movslq %edx,%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*e7: mov    $0x0,%esi */
0x48, 0x63, 0xf6,                         /*ec: movslq %esi,%rsi */
0x48, 0x8b, 0x44, 0xd0, 0x08,             /*ef: mov    0x8(%rax,%rdx,8),%rax */
0x48, 0x89, 0x04, 0xf1,                   /*f4: mov    %rax,(%rcx,%rsi,8) */
0x48, 0x89, 0xec,                         /*f8: mov    %rbp,%rsp */
0x5d,                                     /*fb: pop    %rbp */

};
static uint8_t op_blkpush__rodata[] = {

};


static uint8_t op_add__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x57,                               /*e: push   %r15 */
0x41, 0x56,                               /*10: push   %r14 */
0x53,                                     /*12: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%r14        # 1a <op_add+0x1a> */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1a: mov    0x0(%rip),%rbx        # 21 <op_add+0x21> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%eax */
0x48, 0x98,                               /*26: cltq */
0x48, 0x8b, 0x34, 0xc3,                   /*28: mov    (%rbx,%rax,8),%rsi */
0x48, 0x83, 0xfe, 0x07,                   /*2c: cmp    $0x7,%rsi */
0x73, 0x13,                               /*30: jae    45 <op_add+0x45> */
0xb8, 0x55, 0x00, 0x00, 0x00,             /*32: mov    $0x55,%eax */
0x0f, 0xa3, 0xf0,                         /*37: bt     %esi,%eax */
0x73, 0x09,                               /*3a: jae    45 <op_add+0x45> */
0x8b, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00, /*3c: mov    0x0(,%rsi,4),%eax */
0xeb, 0x1c,                               /*43: jmp    61 <op_add+0x61> */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*45: mov    $0x3,%eax */
0x40, 0xf6, 0xc6, 0x01,                   /*4a: test   $0x1,%sil */
0x75, 0x11,                               /*4e: jne    61 <op_add+0x61> */
0x40, 0x0f, 0xb6, 0xce,                   /*50: movzbl %sil,%ecx */
0xb8, 0x04, 0x00, 0x00, 0x00,             /*54: mov    $0x4,%eax */
0x83, 0xf9, 0x0e,                         /*59: cmp    $0xe,%ecx */
0x74, 0x03,                               /*5c: je     61 <op_add+0x61> */
0x0f, 0xb6, 0x06,                         /*5e: movzbl (%rsi),%eax */
0xc1, 0xe0, 0x08,                         /*61: shl    $0x8,%eax */
0x25, 0x00, 0xff, 0xff, 0x00,             /*64: and    $0xffff00,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*69: mov    $0x0,%ecx */
0xff, 0xc1,                               /*6e: inc    %ecx */
0x48, 0x63, 0xc9,                         /*70: movslq %ecx,%rcx */
0x48, 0x8b, 0x14, 0xcb,                   /*73: mov    (%rbx,%rcx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*77: cmp    $0x7,%rdx */
0x73, 0x13,                               /*7b: jae    90 <op_add+0x90> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*7d: mov    $0x55,%ecx */
0x0f, 0xa3, 0xd1,                         /*82: bt     %edx,%ecx */
0x73, 0x09,                               /*85: jae    90 <op_add+0x90> */
0x8b, 0x0c, 0x95, 0x00, 0x00, 0x00, 0x00, /*87: mov    0x0(,%rdx,4),%ecx */
0xeb, 0x1a,                               /*8e: jmp    aa <op_add+0xaa> */
0xb9, 0x03, 0x00, 0x00, 0x00,             /*90: mov    $0x3,%ecx */
0xf6, 0xc2, 0x01,                         /*95: test   $0x1,%dl */
0x75, 0x10,                               /*98: jne    aa <op_add+0xaa> */
0x0f, 0xb6, 0xfa,                         /*9a: movzbl %dl,%edi */
0xb9, 0x04, 0x00, 0x00, 0x00,             /*9d: mov    $0x4,%ecx */
0x83, 0xff, 0x0e,                         /*a2: cmp    $0xe,%edi */
0x74, 0x03,                               /*a5: je     aa <op_add+0xaa> */
0x0f, 0xb6, 0x0a,                         /*a7: movzbl (%rdx),%ecx */
0x0f, 0xb6, 0xc9,                         /*aa: movzbl %cl,%ecx */
0x09, 0xc1,                               /*ad: or     %eax,%ecx */
0x81, 0xf9, 0x0f, 0x10, 0x00, 0x00,       /*af: cmp    $0x100f,%ecx */
0x7f, 0x40,                               /*b5: jg     f7 <op_add+0xf7> */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*b7: cmp    $0x602,%ecx */
0x7f, 0x4a,                               /*bd: jg     109 <op_add+0x109> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*bf: cmp    $0x303,%ecx */
0x75, 0x57,                               /*c5: jne    11e <op_add+0x11e> */
0xd1, 0xfe,                               /*c7: sar    %esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*c9: mov    $0x0,%eax */
0x48, 0x98,                               /*ce: cltq */
0x8b, 0x44, 0xc3, 0x08,                   /*d0: mov    0x8(%rbx,%rax,8),%eax */
0xd1, 0xf8,                               /*d4: sar    %eax */
0x01, 0xf0,                               /*d6: add    %esi,%eax */
0x89, 0xc1,                               /*d8: mov    %eax,%ecx */
0x81, 0xc1, 0x00, 0x00, 0x00, 0x40,       /*da: add    $0x40000000,%ecx */
0x0f, 0x88, 0xc8, 0x00, 0x00, 0x00,       /*e0: js     1ae <op_add+0x1ae> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e6: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*eb: movslq %ecx,%rcx */
0x8d, 0x44, 0x00, 0x01,                   /*ee: lea    0x1(%rax,%rax,1),%eax */
0x89, 0x04, 0xcb,                         /*f2: mov    %eax,(%rbx,%rcx,8) */
0xeb, 0x5d,                               /*f5: jmp    154 <op_add+0x154> */
0x81, 0xf9, 0x10, 0x10, 0x00, 0x00,       /*f7: cmp    $0x1010,%ecx */
0x75, 0x64,                               /*fd: jne    163 <op_add+0x163> */
0x4c, 0x89, 0xf7,                         /*ff: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*102: callq  107 <op_add+0x107> */
0xeb, 0x3f,                               /*107: jmp    148 <op_add+0x148> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*109: cmp    $0x603,%ecx */
0x75, 0x1d,                               /*10f: jne    12e <op_add+0x12e> */
0xd1, 0xfa,                               /*111: sar    %edx */
0xf2, 0x0f, 0x2a, 0xc2,                   /*113: cvtsi2sd %edx,%xmm0 */
0xf2, 0x0f, 0x58, 0x46, 0x18,             /*117: addsd  0x18(%rsi),%xmm0 */
0xeb, 0x22,                               /*11c: jmp    140 <op_add+0x140> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*11e: cmp    $0x306,%ecx */
0x75, 0x3d,                               /*124: jne    163 <op_add+0x163> */
0xd1, 0xfe,                               /*126: sar    %esi */
0xf2, 0x0f, 0x2a, 0xc6,                   /*128: cvtsi2sd %esi,%xmm0 */
0xeb, 0x0d,                               /*12c: jmp    13b <op_add+0x13b> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*12e: cmp    $0x606,%ecx */
0x75, 0x2d,                               /*134: jne    163 <op_add+0x163> */
0xf2, 0x0f, 0x10, 0x46, 0x18,             /*136: movsd  0x18(%rsi),%xmm0 */
0xf2, 0x0f, 0x58, 0x42, 0x18,             /*13b: addsd  0x18(%rdx),%xmm0 */
0x4c, 0x89, 0xf7,                         /*140: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*143: callq  148 <op_add+0x148> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*148: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*14d: movslq %ecx,%rcx */
0x48, 0x89, 0x04, 0xcb,                   /*150: mov    %rax,(%rbx,%rcx,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*154: mov    0x0(%rip),%eax        # 15a <op_add+0x15a> */
0x41, 0x89, 0x86, 0xdc, 0x00, 0x00, 0x00, /*15a: mov    %eax,0xdc(%r14) */
0xeb, 0x44,                               /*161: jmp    1a7 <op_add+0x1a7> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*163: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*168: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*16d: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*172: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*177: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*17d: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*183: callq  188 <op_add+0x188> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*188: mov    0x0(%rip),%rdi        # 18f <op_add+0x18f> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*18f: mov    0x0(%rip),%rsi        # 196 <op_add+0x196> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*196: mov    0x0(%rip),%rcx        # 19d <op_add+0x19d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*19d: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*1a2: jmpq   1a7 <op_add+0x1a7> */
0x5b,                                     /*1a7: pop    %rbx */
0x41, 0x5e,                               /*1a8: pop    %r14 */
0x41, 0x5f,                               /*1aa: pop    %r15 */
0xeb, 0x1a,                               /*1ac: jmp    1c8 <op_add+0x1c8> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1ae: mov    $0x0,%ecx */
0x4c, 0x63, 0xf9,                         /*1b3: movslq %ecx,%r15 */
0xf2, 0x0f, 0x2a, 0xc0,                   /*1b6: cvtsi2sd %eax,%xmm0 */
0x4c, 0x89, 0xf7,                         /*1ba: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1bd: callq  1c2 <op_add+0x1c2> */
0x4a, 0x89, 0x04, 0xfb,                   /*1c2: mov    %rax,(%rbx,%r15,8) */
0xeb, 0x8c,                               /*1c6: jmp    154 <op_add+0x154> */

};
static uint8_t op_add__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};


static uint8_t op_addi__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x53,                                     /*e: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rbx        # 16 <op_addi+0x16> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%eax */
0x48, 0x98,                               /*1b: cltq */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1d: mov    0x0(%rip),%rdi        # 24 <op_addi+0x24> */
0x48, 0x8b, 0x04, 0xc3,                   /*24: mov    (%rbx,%rax,8),%rax */
0x48, 0x83, 0xf8, 0x06,                   /*28: cmp    $0x6,%rax */
0x77, 0x0b,                               /*2c: ja     39 <op_addi+0x39> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*2e: mov    $0x55,%ecx */
0x48, 0x0f, 0xa3, 0xc1,                   /*33: bt     %rax,%rcx */
0x72, 0x54,                               /*37: jb     8d <op_addi+0x8d> */
0xa8, 0x01,                               /*39: test   $0x1,%al */
0x75, 0x28,                               /*3b: jne    65 <op_addi+0x65> */
0x0f, 0xb6, 0xc8,                         /*3d: movzbl %al,%ecx */
0x83, 0xf9, 0x0e,                         /*40: cmp    $0xe,%ecx */
0x74, 0x48,                               /*43: je     8d <op_addi+0x8d> */
0x0f, 0xb6, 0x08,                         /*45: movzbl (%rax),%ecx */
0x83, 0xf9, 0x06,                         /*48: cmp    $0x6,%ecx */
0x75, 0x13,                               /*4b: jne    60 <op_addi+0x60> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4d: mov    $0x0,%ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*52: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x58, 0x40, 0x18,             /*56: addsd  0x18(%rax),%xmm0 */
0xe9, 0x95, 0x00, 0x00, 0x00,             /*5b: jmpq   f5 <op_addi+0xf5> */
0x83, 0xf9, 0x03,                         /*60: cmp    $0x3,%ecx */
0x75, 0x28,                               /*63: jne    8d <op_addi+0x8d> */
0xd1, 0xf8,                               /*65: sar    %eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*67: mov    $0x0,%ecx */
0x8d, 0x14, 0x08,                         /*6c: lea    (%rax,%rcx,1),%edx */
0x01, 0xc1,                               /*6f: add    %eax,%ecx */
0x70, 0x71,                               /*71: jo     e4 <op_addi+0xe4> */
0x81, 0xc2, 0x00, 0x00, 0x00, 0x40,       /*73: add    $0x40000000,%edx */
0x78, 0x69,                               /*79: js     e4 <op_addi+0xe4> */
0x8d, 0x44, 0x09, 0x01,                   /*7b: lea    0x1(%rcx,%rcx,1),%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7f: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*84: movslq %ecx,%rcx */
0x89, 0x04, 0xcb,                         /*87: mov    %eax,(%rbx,%rcx,8) */
0x5b,                                     /*8a: pop    %rbx */
0xeb, 0x7a,                               /*8b: jmp    107 <op_addi+0x107> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8d: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*92: movslq %eax,%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*95: mov    $0x0,%eax */
0x8d, 0x44, 0x00, 0x01,                   /*9a: lea    0x1(%rax,%rax,1),%eax */
0x89, 0x44, 0xd3, 0x08,                   /*9e: mov    %eax,0x8(%rbx,%rdx,8) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*a2: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*a7: mov    $0x20,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ac: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*b1: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*b7: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*bd: callq  c2 <op_addi+0xc2> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*c2: mov    0x0(%rip),%rdi        # c9 <op_addi+0xc9> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*c9: mov    0x0(%rip),%rsi        # d0 <op_addi+0xd0> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*d0: mov    0x0(%rip),%rcx        # d7 <op_addi+0xd7> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*d7: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*dc: jmpq   e1 <op_addi+0xe1> */
0x5b,                                     /*e1: pop    %rbx */
0xeb, 0x23,                               /*e2: jmp    107 <op_addi+0x107> */
0xf2, 0x0f, 0x2a, 0xc8,                   /*e4: cvtsi2sd %eax,%xmm1 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e8: mov    $0x0,%eax */
0xf2, 0x0f, 0x2a, 0xc0,                   /*ed: cvtsi2sd %eax,%xmm0 */
0xf2, 0x0f, 0x58, 0xc1,                   /*f1: addsd  %xmm1,%xmm0 */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*f5: callq  fa <op_addi+0xfa> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fa: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*ff: movslq %ecx,%rcx */
0x48, 0x89, 0x04, 0xcb,                   /*102: mov    %rax,(%rbx,%rcx,8) */
0x5b,                                     /*106: pop    %rbx */

};
static uint8_t op_addi__rodata[] = {

};


static uint8_t op_sub__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x56,                               /*e: push   %r14 */
0x53,                                     /*10: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*11: mov    0x0(%rip),%r14        # 18 <op_sub+0x18> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rdi        # 1f <op_sub+0x1f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%eax */
0x48, 0x98,                               /*24: cltq */
0x49, 0x8b, 0x04, 0xc6,                   /*26: mov    (%r14,%rax,8),%rax */
0x48, 0x83, 0xf8, 0x07,                   /*2a: cmp    $0x7,%rax */
0x73, 0x13,                               /*2e: jae    43 <op_sub+0x43> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*30: mov    $0x55,%ecx */
0x0f, 0xa3, 0xc1,                         /*35: bt     %eax,%ecx */
0x73, 0x09,                               /*38: jae    43 <op_sub+0x43> */
0x8b, 0x14, 0x85, 0x00, 0x00, 0x00, 0x00, /*3a: mov    0x0(,%rax,4),%edx */
0xeb, 0x19,                               /*41: jmp    5c <op_sub+0x5c> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*43: mov    $0x3,%edx */
0xa8, 0x01,                               /*48: test   $0x1,%al */
0x75, 0x10,                               /*4a: jne    5c <op_sub+0x5c> */
0x0f, 0xb6, 0xc8,                         /*4c: movzbl %al,%ecx */
0xba, 0x04, 0x00, 0x00, 0x00,             /*4f: mov    $0x4,%edx */
0x83, 0xf9, 0x0e,                         /*54: cmp    $0xe,%ecx */
0x74, 0x03,                               /*57: je     5c <op_sub+0x5c> */
0x0f, 0xb6, 0x10,                         /*59: movzbl (%rax),%edx */
0xc1, 0xe2, 0x08,                         /*5c: shl    $0x8,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*5f: and    $0xffff00,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*65: mov    $0x0,%ecx */
0xff, 0xc1,                               /*6a: inc    %ecx */
0x48, 0x63, 0xc9,                         /*6c: movslq %ecx,%rcx */
0x49, 0x8b, 0x0c, 0xce,                   /*6f: mov    (%r14,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*73: cmp    $0x7,%rcx */
0x73, 0x13,                               /*77: jae    8c <op_sub+0x8c> */
0xbe, 0x55, 0x00, 0x00, 0x00,             /*79: mov    $0x55,%esi */
0x0f, 0xa3, 0xce,                         /*7e: bt     %ecx,%esi */
0x73, 0x09,                               /*81: jae    8c <op_sub+0x8c> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*83: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*8a: jmp    a6 <op_sub+0xa6> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*8c: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*91: test   $0x1,%cl */
0x75, 0x10,                               /*94: jne    a6 <op_sub+0xa6> */
0x0f, 0xb6, 0xd9,                         /*96: movzbl %cl,%ebx */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*99: mov    $0x4,%esi */
0x83, 0xfb, 0x0e,                         /*9e: cmp    $0xe,%ebx */
0x74, 0x03,                               /*a1: je     a6 <op_sub+0xa6> */
0x0f, 0xb6, 0x31,                         /*a3: movzbl (%rcx),%esi */
0x40, 0x0f, 0xb6, 0xf6,                   /*a6: movzbl %sil,%esi */
0x09, 0xd6,                               /*aa: or     %edx,%esi */
0x81, 0xfe, 0x02, 0x06, 0x00, 0x00,       /*ac: cmp    $0x602,%esi */
0x7f, 0x32,                               /*b2: jg     e6 <op_sub+0xe6> */
0x81, 0xfe, 0x03, 0x03, 0x00, 0x00,       /*b4: cmp    $0x303,%esi */
0x75, 0x3b,                               /*ba: jne    f7 <op_sub+0xf7> */
0xd1, 0xf8,                               /*bc: sar    %eax */
0xd1, 0xf9,                               /*be: sar    %ecx */
0x89, 0xc2,                               /*c0: mov    %eax,%edx */
0x29, 0xca,                               /*c2: sub    %ecx,%edx */
0x89, 0xd6,                               /*c4: mov    %edx,%esi */
0x81, 0xc6, 0x00, 0x00, 0x00, 0x40,       /*c6: add    $0x40000000,%esi */
0x0f, 0x88, 0x94, 0x00, 0x00, 0x00,       /*cc: js     166 <op_sub+0x166> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*d2: mov    $0x0,%eax */
0x48, 0x98,                               /*d7: cltq */
0x8d, 0x4c, 0x12, 0x01,                   /*d9: lea    0x1(%rdx,%rdx,1),%ecx */
0x41, 0x89, 0x0c, 0xc6,                   /*dd: mov    %ecx,(%r14,%rax,8) */
0xe9, 0x9d, 0x00, 0x00, 0x00,             /*e1: jmpq   183 <op_sub+0x183> */
0x81, 0xfe, 0x03, 0x06, 0x00, 0x00,       /*e6: cmp    $0x603,%esi */
0x75, 0x1e,                               /*ec: jne    10c <op_sub+0x10c> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*ee: movsd  0x18(%rax),%xmm0 */
0xd1, 0xf9,                               /*f3: sar    %ecx */
0xeb, 0x73,                               /*f5: jmp    16a <op_sub+0x16a> */
0x81, 0xfe, 0x06, 0x03, 0x00, 0x00,       /*f7: cmp    $0x306,%esi */
0x75, 0x21,                               /*fd: jne    120 <op_sub+0x120> */
0xd1, 0xf8,                               /*ff: sar    %eax */
0xf2, 0x0f, 0x2a, 0xc0,                   /*101: cvtsi2sd %eax,%xmm0 */
0xf2, 0x0f, 0x5c, 0x41, 0x18,             /*105: subsd  0x18(%rcx),%xmm0 */
0xeb, 0x66,                               /*10a: jmp    172 <op_sub+0x172> */
0x81, 0xfe, 0x06, 0x06, 0x00, 0x00,       /*10c: cmp    $0x606,%esi */
0x75, 0x0c,                               /*112: jne    120 <op_sub+0x120> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*114: movsd  0x18(%rax),%xmm0 */
0xf2, 0x0f, 0x5c, 0x41, 0x18,             /*119: subsd  0x18(%rcx),%xmm0 */
0xeb, 0x52,                               /*11e: jmp    172 <op_sub+0x172> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*120: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*125: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*12a: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12f: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*134: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*13a: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*140: callq  145 <op_sub+0x145> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*145: mov    0x0(%rip),%rdi        # 14c <op_sub+0x14c> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*14c: mov    0x0(%rip),%rsi        # 153 <op_sub+0x153> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*153: mov    0x0(%rip),%rcx        # 15a <op_sub+0x15a> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15a: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*15f: jmpq   164 <op_sub+0x164> */
0xeb, 0x1d,                               /*164: jmp    183 <op_sub+0x183> */
0xf2, 0x0f, 0x2a, 0xc0,                   /*166: cvtsi2sd %eax,%xmm0 */
0xf2, 0x0f, 0x2a, 0xc9,                   /*16a: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*16e: subsd  %xmm1,%xmm0 */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*172: callq  177 <op_sub+0x177> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*177: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*17c: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xce,                   /*17f: mov    %rax,(%r14,%rcx,8) */
0x5b,                                     /*183: pop    %rbx */
0x41, 0x5e,                               /*184: pop    %r14 */

};
static uint8_t op_sub__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};


static uint8_t op_subi__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x53,                                     /*e: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rbx        # 16 <op_subi+0x16> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%eax */
0x48, 0x98,                               /*1b: cltq */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1d: mov    0x0(%rip),%rdi        # 24 <op_subi+0x24> */
0x48, 0x8b, 0x04, 0xc3,                   /*24: mov    (%rbx,%rax,8),%rax */
0x48, 0x83, 0xf8, 0x06,                   /*28: cmp    $0x6,%rax */
0x77, 0x0b,                               /*2c: ja     39 <op_subi+0x39> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*2e: mov    $0x55,%ecx */
0x48, 0x0f, 0xa3, 0xc1,                   /*33: bt     %rax,%rcx */
0x72, 0x4e,                               /*37: jb     87 <op_subi+0x87> */
0xa8, 0x01,                               /*39: test   $0x1,%al */
0x75, 0x1f,                               /*3b: jne    5c <op_subi+0x5c> */
0x0f, 0xb6, 0xc8,                         /*3d: movzbl %al,%ecx */
0x83, 0xf9, 0x0e,                         /*40: cmp    $0xe,%ecx */
0x74, 0x42,                               /*43: je     87 <op_subi+0x87> */
0x0f, 0xb6, 0x08,                         /*45: movzbl (%rax),%ecx */
0x83, 0xf9, 0x06,                         /*48: cmp    $0x6,%ecx */
0x75, 0x0a,                               /*4b: jne    57 <op_subi+0x57> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*4d: movsd  0x18(%rax),%xmm0 */
0xe9, 0x8b, 0x00, 0x00, 0x00,             /*52: jmpq   e2 <op_subi+0xe2> */
0x83, 0xf9, 0x03,                         /*57: cmp    $0x3,%ecx */
0x75, 0x2b,                               /*5a: jne    87 <op_subi+0x87> */
0xd1, 0xf8,                               /*5c: sar    %eax */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5e: mov    $0x0,%esi */
0x89, 0xc2,                               /*63: mov    %eax,%edx */
0x29, 0xf2,                               /*65: sub    %esi,%edx */
0x89, 0xc1,                               /*67: mov    %eax,%ecx */
0x29, 0xf1,                               /*69: sub    %esi,%ecx */
0x70, 0x71,                               /*6b: jo     de <op_subi+0xde> */
0x81, 0xc2, 0x00, 0x00, 0x00, 0x40,       /*6d: add    $0x40000000,%edx */
0x78, 0x69,                               /*73: js     de <op_subi+0xde> */
0x8d, 0x44, 0x09, 0x01,                   /*75: lea    0x1(%rcx,%rcx,1),%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*79: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*7e: movslq %ecx,%rcx */
0x89, 0x04, 0xcb,                         /*81: mov    %eax,(%rbx,%rcx,8) */
0x5b,                                     /*84: pop    %rbx */
0xeb, 0x7a,                               /*85: jmp    101 <op_subi+0x101> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*87: mov    $0x0,%eax */
0x48, 0x63, 0xd0,                         /*8c: movslq %eax,%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8f: mov    $0x0,%eax */
0x8d, 0x44, 0x00, 0x01,                   /*94: lea    0x1(%rax,%rax,1),%eax */
0x89, 0x44, 0xd3, 0x08,                   /*98: mov    %eax,0x8(%rbx,%rdx,8) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*9c: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*a1: mov    $0x20,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a6: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*ab: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*b1: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b7: callq  bc <op_subi+0xbc> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*bc: mov    0x0(%rip),%rdi        # c3 <op_subi+0xc3> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*c3: mov    0x0(%rip),%rsi        # ca <op_subi+0xca> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*ca: mov    0x0(%rip),%rcx        # d1 <op_subi+0xd1> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*d1: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*d6: jmpq   db <op_subi+0xdb> */
0x5b,                                     /*db: pop    %rbx */
0xeb, 0x23,                               /*dc: jmp    101 <op_subi+0x101> */
0xf2, 0x0f, 0x2a, 0xc0,                   /*de: cvtsi2sd %eax,%xmm0 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e2: mov    $0x0,%eax */
0xf2, 0x0f, 0x2a, 0xc8,                   /*e7: cvtsi2sd %eax,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*eb: subsd  %xmm1,%xmm0 */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ef: callq  f4 <op_subi+0xf4> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f4: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*f9: movslq %ecx,%rcx */
0x48, 0x89, 0x04, 0xcb,                   /*fc: mov    %rax,(%rbx,%rcx,8) */
0x5b,                                     /*100: pop    %rbx */

};
static uint8_t op_subi__rodata[] = {

};


static uint8_t op_mul__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x56,                               /*e: push   %r14 */
0x53,                                     /*10: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*11: mov    0x0(%rip),%r14        # 18 <op_mul+0x18> */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rbx        # 1f <op_mul+0x1f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%eax */
0x48, 0x98,                               /*24: cltq */
0x48, 0x8b, 0x34, 0xc3,                   /*26: mov    (%rbx,%rax,8),%rsi */
0x48, 0x83, 0xfe, 0x07,                   /*2a: cmp    $0x7,%rsi */
0x73, 0x13,                               /*2e: jae    43 <op_mul+0x43> */
0xb8, 0x55, 0x00, 0x00, 0x00,             /*30: mov    $0x55,%eax */
0x0f, 0xa3, 0xf0,                         /*35: bt     %esi,%eax */
0x73, 0x09,                               /*38: jae    43 <op_mul+0x43> */
0x8b, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00, /*3a: mov    0x0(,%rsi,4),%eax */
0xeb, 0x1c,                               /*41: jmp    5f <op_mul+0x5f> */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*43: mov    $0x3,%eax */
0x40, 0xf6, 0xc6, 0x01,                   /*48: test   $0x1,%sil */
0x75, 0x11,                               /*4c: jne    5f <op_mul+0x5f> */
0x40, 0x0f, 0xb6, 0xce,                   /*4e: movzbl %sil,%ecx */
0xb8, 0x04, 0x00, 0x00, 0x00,             /*52: mov    $0x4,%eax */
0x83, 0xf9, 0x0e,                         /*57: cmp    $0xe,%ecx */
0x74, 0x03,                               /*5a: je     5f <op_mul+0x5f> */
0x0f, 0xb6, 0x06,                         /*5c: movzbl (%rsi),%eax */
0xc1, 0xe0, 0x08,                         /*5f: shl    $0x8,%eax */
0x25, 0x00, 0xff, 0xff, 0x00,             /*62: and    $0xffff00,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*67: mov    $0x0,%ecx */
0xff, 0xc1,                               /*6c: inc    %ecx */
0x48, 0x63, 0xc9,                         /*6e: movslq %ecx,%rcx */
0x48, 0x8b, 0x14, 0xcb,                   /*71: mov    (%rbx,%rcx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*75: cmp    $0x7,%rdx */
0x73, 0x13,                               /*79: jae    8e <op_mul+0x8e> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*7b: mov    $0x55,%ecx */
0x0f, 0xa3, 0xd1,                         /*80: bt     %edx,%ecx */
0x73, 0x09,                               /*83: jae    8e <op_mul+0x8e> */
0x8b, 0x0c, 0x95, 0x00, 0x00, 0x00, 0x00, /*85: mov    0x0(,%rdx,4),%ecx */
0xeb, 0x1a,                               /*8c: jmp    a8 <op_mul+0xa8> */
0xb9, 0x03, 0x00, 0x00, 0x00,             /*8e: mov    $0x3,%ecx */
0xf6, 0xc2, 0x01,                         /*93: test   $0x1,%dl */
0x75, 0x10,                               /*96: jne    a8 <op_mul+0xa8> */
0x0f, 0xb6, 0xfa,                         /*98: movzbl %dl,%edi */
0xb9, 0x04, 0x00, 0x00, 0x00,             /*9b: mov    $0x4,%ecx */
0x83, 0xff, 0x0e,                         /*a0: cmp    $0xe,%edi */
0x74, 0x03,                               /*a3: je     a8 <op_mul+0xa8> */
0x0f, 0xb6, 0x0a,                         /*a5: movzbl (%rdx),%ecx */
0x0f, 0xb6, 0xc9,                         /*a8: movzbl %cl,%ecx */
0x09, 0xc1,                               /*ab: or     %eax,%ecx */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*ad: cmp    $0x602,%ecx */
0x7f, 0x4c,                               /*b3: jg     101 <op_mul+0x101> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*b5: cmp    $0x303,%ecx */
0x75, 0x59,                               /*bb: jne    116 <op_mul+0x116> */
0x4c, 0x89, 0xf7,                         /*bd: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c0: callq  c5 <op_mul+0xc5> */
0x48, 0x83, 0xf8, 0x06,                   /*c5: cmp    $0x6,%rax */
0x77, 0x0f,                               /*c9: ja     da <op_mul+0xda> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*cb: mov    $0x55,%ecx */
0x48, 0x0f, 0xa3, 0xc1,                   /*d0: bt     %rax,%rcx */
0x0f, 0x82, 0xd2, 0x00, 0x00, 0x00,       /*d4: jb     1ac <op_mul+0x1ac> */
0xa8, 0x01,                               /*da: test   $0x1,%al */
0x0f, 0x85, 0xbc, 0x00, 0x00, 0x00,       /*dc: jne    19e <op_mul+0x19e> */
0x0f, 0xb6, 0xc8,                         /*e2: movzbl %al,%ecx */
0x83, 0xf9, 0x0e,                         /*e5: cmp    $0xe,%ecx */
0x0f, 0x84, 0xbe, 0x00, 0x00, 0x00,       /*e8: je     1ac <op_mul+0x1ac> */
0x0f, 0xb6, 0x08,                         /*ee: movzbl (%rax),%ecx */
0x83, 0xf9, 0x06,                         /*f1: cmp    $0x6,%ecx */
0x0f, 0x85, 0x9f, 0x00, 0x00, 0x00,       /*f4: jne    199 <op_mul+0x199> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*fa: movsd  0x18(%rax),%xmm0 */
0xeb, 0x3c,                               /*ff: jmp    13d <op_mul+0x13d> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*101: cmp    $0x603,%ecx */
0x75, 0x22,                               /*107: jne    12b <op_mul+0x12b> */
0xd1, 0xfa,                               /*109: sar    %edx */
0xf2, 0x0f, 0x2a, 0xc2,                   /*10b: cvtsi2sd %edx,%xmm0 */
0xf2, 0x0f, 0x59, 0x46, 0x18,             /*10f: mulsd  0x18(%rsi),%xmm0 */
0xeb, 0x27,                               /*114: jmp    13d <op_mul+0x13d> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*116: cmp    $0x306,%ecx */
0x75, 0x35,                               /*11c: jne    153 <op_mul+0x153> */
0xd1, 0xfe,                               /*11e: sar    %esi */
0xf2, 0x0f, 0x2a, 0xc6,                   /*120: cvtsi2sd %esi,%xmm0 */
0xf2, 0x0f, 0x59, 0x42, 0x18,             /*124: mulsd  0x18(%rdx),%xmm0 */
0xeb, 0x12,                               /*129: jmp    13d <op_mul+0x13d> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*12b: cmp    $0x606,%ecx */
0x75, 0x20,                               /*131: jne    153 <op_mul+0x153> */
0xf2, 0x0f, 0x10, 0x46, 0x18,             /*133: movsd  0x18(%rsi),%xmm0 */
0xf2, 0x0f, 0x59, 0x42, 0x18,             /*138: mulsd  0x18(%rdx),%xmm0 */
0x4c, 0x89, 0xf7,                         /*13d: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*140: callq  145 <op_mul+0x145> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*145: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*14a: movslq %ecx,%rcx */
0x48, 0x89, 0x04, 0xcb,                   /*14d: mov    %rax,(%rbx,%rcx,8) */
0xeb, 0x59,                               /*151: jmp    1ac <op_mul+0x1ac> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*153: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*158: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15d: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*162: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*167: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*16d: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*173: callq  178 <op_mul+0x178> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*178: mov    0x0(%rip),%rdi        # 17f <op_mul+0x17f> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*17f: mov    0x0(%rip),%rsi        # 186 <op_mul+0x186> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*186: mov    0x0(%rip),%rcx        # 18d <op_mul+0x18d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18d: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*192: jmpq   197 <op_mul+0x197> */
0xeb, 0x13,                               /*197: jmp    1ac <op_mul+0x1ac> */
0x83, 0xf9, 0x03,                         /*199: cmp    $0x3,%ecx */
0x75, 0x0e,                               /*19c: jne    1ac <op_mul+0x1ac> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*19e: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a3: movslq %ecx,%rcx */
0x83, 0xc8, 0x01,                         /*1a6: or     $0x1,%eax */
0x89, 0x04, 0xcb,                         /*1a9: mov    %eax,(%rbx,%rcx,8) */
0x5b,                                     /*1ac: pop    %rbx */
0x41, 0x5e,                               /*1ad: pop    %r14 */

};
static uint8_t op_mul__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};


static uint8_t op_div__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x56,                               /*e: push   %r14 */
0x53,                                     /*10: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*11: mov    0x0(%rip),%r14        # 18 <op_div+0x18> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rdi        # 1f <op_div+0x1f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%eax */
0x48, 0x98,                               /*24: cltq */
0x49, 0x8b, 0x04, 0xc6,                   /*26: mov    (%r14,%rax,8),%rax */
0x48, 0x83, 0xf8, 0x07,                   /*2a: cmp    $0x7,%rax */
0x73, 0x13,                               /*2e: jae    43 <op_div+0x43> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*30: mov    $0x55,%ecx */
0x0f, 0xa3, 0xc1,                         /*35: bt     %eax,%ecx */
0x73, 0x09,                               /*38: jae    43 <op_div+0x43> */
0x8b, 0x14, 0x85, 0x00, 0x00, 0x00, 0x00, /*3a: mov    0x0(,%rax,4),%edx */
0xeb, 0x19,                               /*41: jmp    5c <op_div+0x5c> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*43: mov    $0x3,%edx */
0xa8, 0x01,                               /*48: test   $0x1,%al */
0x75, 0x10,                               /*4a: jne    5c <op_div+0x5c> */
0x0f, 0xb6, 0xc8,                         /*4c: movzbl %al,%ecx */
0xba, 0x04, 0x00, 0x00, 0x00,             /*4f: mov    $0x4,%edx */
0x83, 0xf9, 0x0e,                         /*54: cmp    $0xe,%ecx */
0x74, 0x03,                               /*57: je     5c <op_div+0x5c> */
0x0f, 0xb6, 0x10,                         /*59: movzbl (%rax),%edx */
0xc1, 0xe2, 0x08,                         /*5c: shl    $0x8,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*5f: and    $0xffff00,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*65: mov    $0x0,%ecx */
0xff, 0xc1,                               /*6a: inc    %ecx */
0x48, 0x63, 0xc9,                         /*6c: movslq %ecx,%rcx */
0x49, 0x8b, 0x0c, 0xce,                   /*6f: mov    (%r14,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*73: cmp    $0x7,%rcx */
0x73, 0x13,                               /*77: jae    8c <op_div+0x8c> */
0xbe, 0x55, 0x00, 0x00, 0x00,             /*79: mov    $0x55,%esi */
0x0f, 0xa3, 0xce,                         /*7e: bt     %ecx,%esi */
0x73, 0x09,                               /*81: jae    8c <op_div+0x8c> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*83: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*8a: jmp    a6 <op_div+0xa6> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*8c: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*91: test   $0x1,%cl */
0x75, 0x10,                               /*94: jne    a6 <op_div+0xa6> */
0x0f, 0xb6, 0xd9,                         /*96: movzbl %cl,%ebx */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*99: mov    $0x4,%esi */
0x83, 0xfb, 0x0e,                         /*9e: cmp    $0xe,%ebx */
0x74, 0x03,                               /*a1: je     a6 <op_div+0xa6> */
0x0f, 0xb6, 0x31,                         /*a3: movzbl (%rcx),%esi */
0x40, 0x0f, 0xb6, 0xf6,                   /*a6: movzbl %sil,%esi */
0x09, 0xd6,                               /*aa: or     %edx,%esi */
0x81, 0xfe, 0x02, 0x06, 0x00, 0x00,       /*ac: cmp    $0x602,%esi */
0x7f, 0x12,                               /*b2: jg     c6 <op_div+0xc6> */
0x81, 0xfe, 0x03, 0x03, 0x00, 0x00,       /*b4: cmp    $0x303,%esi */
0x75, 0x23,                               /*ba: jne    df <op_div+0xdf> */
0xd1, 0xf8,                               /*bc: sar    %eax */
0xd1, 0xf9,                               /*be: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc0,                   /*c0: cvtsi2sd %eax,%xmm0 */
0xeb, 0x0f,                               /*c4: jmp    d5 <op_div+0xd5> */
0x81, 0xfe, 0x03, 0x06, 0x00, 0x00,       /*c6: cmp    $0x603,%esi */
0x75, 0x26,                               /*cc: jne    f4 <op_div+0xf4> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*ce: movsd  0x18(%rax),%xmm0 */
0xd1, 0xf9,                               /*d3: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc9,                   /*d5: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x5e, 0xc1,                   /*d9: divsd  %xmm1,%xmm0 */
0xeb, 0x27,                               /*dd: jmp    106 <op_div+0x106> */
0x81, 0xfe, 0x06, 0x03, 0x00, 0x00,       /*df: cmp    $0x306,%esi */
0x75, 0x32,                               /*e5: jne    119 <op_div+0x119> */
0xd1, 0xf8,                               /*e7: sar    %eax */
0xf2, 0x0f, 0x2a, 0xc0,                   /*e9: cvtsi2sd %eax,%xmm0 */
0xf2, 0x0f, 0x5e, 0x41, 0x18,             /*ed: divsd  0x18(%rcx),%xmm0 */
0xeb, 0x12,                               /*f2: jmp    106 <op_div+0x106> */
0x81, 0xfe, 0x06, 0x06, 0x00, 0x00,       /*f4: cmp    $0x606,%esi */
0x75, 0x1d,                               /*fa: jne    119 <op_div+0x119> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*fc: movsd  0x18(%rax),%xmm0 */
0xf2, 0x0f, 0x5e, 0x41, 0x18,             /*101: divsd  0x18(%rcx),%xmm0 */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*106: callq  10b <op_div+0x10b> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10b: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*110: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xce,                   /*113: mov    %rax,(%r14,%rcx,8) */
0xeb, 0x44,                               /*117: jmp    15d <op_div+0x15d> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*119: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*11e: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*123: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*128: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*12d: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*133: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*139: callq  13e <op_div+0x13e> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*13e: mov    0x0(%rip),%rdi        # 145 <op_div+0x145> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*145: mov    0x0(%rip),%rsi        # 14c <op_div+0x14c> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*14c: mov    0x0(%rip),%rcx        # 153 <op_div+0x153> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*153: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*158: jmpq   15d <op_div+0x15d> */
0x5b,                                     /*15d: pop    %rbx */
0x41, 0x5e,                               /*15e: pop    %r14 */

};
static uint8_t op_div__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};


static uint8_t op_eq__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x53,                                     /*e: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rbx        # 16 <op_eq+0x16> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rdi        # 1d <op_eq+0x1d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%eax */
0x48, 0x98,                               /*22: cltq */
0x48, 0x8b, 0x34, 0xc3,                   /*24: mov    (%rbx,%rax,8),%rsi */
0xff, 0xc0,                               /*28: inc    %eax */
0x48, 0x98,                               /*2a: cltq */
0x48, 0x8b, 0x14, 0xc3,                   /*2c: mov    (%rbx,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*30: callq  35 <op_eq+0x35> */
0x84, 0xc0,                               /*35: test   %al,%al */
0x0f, 0x85, 0xf0, 0x00, 0x00, 0x00,       /*37: jne    12d <op_eq+0x12d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*3d: mov    $0x0,%eax */
0x48, 0x98,                               /*42: cltq */
0x48, 0x8b, 0x04, 0xc3,                   /*44: mov    (%rbx,%rax,8),%rax */
0x48, 0x83, 0xf8, 0x07,                   /*48: cmp    $0x7,%rax */
0x73, 0x13,                               /*4c: jae    61 <op_eq+0x61> */
0xb9, 0x55, 0x00, 0x00, 0x00,             /*4e: mov    $0x55,%ecx */
0x0f, 0xa3, 0xc1,                         /*53: bt     %eax,%ecx */
0x73, 0x09,                               /*56: jae    61 <op_eq+0x61> */
0x8b, 0x14, 0x85, 0x00, 0x00, 0x00, 0x00, /*58: mov    0x0(,%rax,4),%edx */
0xeb, 0x19,                               /*5f: jmp    7a <op_eq+0x7a> */
0xba, 0x03, 0x00, 0x00, 0x00,             /*61: mov    $0x3,%edx */
0xa8, 0x01,                               /*66: test   $0x1,%al */
0x75, 0x10,                               /*68: jne    7a <op_eq+0x7a> */
0x0f, 0xb6, 0xc8,                         /*6a: movzbl %al,%ecx */
0xba, 0x04, 0x00, 0x00, 0x00,             /*6d: mov    $0x4,%edx */
0x83, 0xf9, 0x0e,                         /*72: cmp    $0xe,%ecx */
0x74, 0x03,                               /*75: je     7a <op_eq+0x7a> */
0x0f, 0xb6, 0x10,                         /*77: movzbl (%rax),%edx */
0xc1, 0xe2, 0x08,                         /*7a: shl    $0x8,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*7d: and    $0xffff00,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*83: mov    $0x0,%ecx */
0xff, 0xc1,                               /*88: inc    %ecx */
0x48, 0x63, 0xc9,                         /*8a: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xcb,                   /*8d: mov    (%rbx,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*91: cmp    $0x7,%rcx */
0x73, 0x13,                               /*95: jae    aa <op_eq+0xaa> */
0xbe, 0x55, 0x00, 0x00, 0x00,             /*97: mov    $0x55,%esi */
0x0f, 0xa3, 0xce,                         /*9c: bt     %ecx,%esi */
0x73, 0x09,                               /*9f: jae    aa <op_eq+0xaa> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*a1: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*a8: jmp    c4 <op_eq+0xc4> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*aa: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*af: test   $0x1,%cl */
0x75, 0x10,                               /*b2: jne    c4 <op_eq+0xc4> */
0x0f, 0xb6, 0xf9,                         /*b4: movzbl %cl,%edi */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*b7: mov    $0x4,%esi */
0x83, 0xff, 0x0e,                         /*bc: cmp    $0xe,%edi */
0x74, 0x03,                               /*bf: je     c4 <op_eq+0xc4> */
0x0f, 0xb6, 0x31,                         /*c1: movzbl (%rcx),%esi */
0x40, 0x0f, 0xb6, 0xf6,                   /*c4: movzbl %sil,%esi */
0x09, 0xd6,                               /*c8: or     %edx,%esi */
0x81, 0xfe, 0x02, 0x06, 0x00, 0x00,       /*ca: cmp    $0x602,%esi */
0x7f, 0x11,                               /*d0: jg     e3 <op_eq+0xe3> */
0x81, 0xfe, 0x03, 0x03, 0x00, 0x00,       /*d2: cmp    $0x303,%esi */
0x75, 0x24,                               /*d8: jne    fe <op_eq+0xfe> */
0x31, 0xc1,                               /*da: xor    %eax,%ecx */
0x83, 0xf9, 0x02,                         /*dc: cmp    $0x2,%ecx */
0x19, 0xc0,                               /*df: sbb    %eax,%eax */
0xeb, 0x43,                               /*e1: jmp    126 <op_eq+0x126> */
0x81, 0xfe, 0x03, 0x06, 0x00, 0x00,       /*e3: cmp    $0x603,%esi */
0x75, 0x23,                               /*e9: jne    10e <op_eq+0x10e> */
0xd1, 0xf9,                               /*eb: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*ed: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0xc2, 0x40, 0x18, 0x00,       /*f1: cmpeqsd 0x18(%rax),%xmm0 */
0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*f7: movq   %xmm0,%rax */
0xeb, 0x28,                               /*fc: jmp    126 <op_eq+0x126> */
0x81, 0xfe, 0x06, 0x03, 0x00, 0x00,       /*fe: cmp    $0x306,%esi */
0x75, 0x4b,                               /*104: jne    151 <op_eq+0x151> */
0xd1, 0xf8,                               /*106: sar    %eax */
0xf2, 0x0f, 0x2a, 0xc0,                   /*108: cvtsi2sd %eax,%xmm0 */
0xeb, 0x0d,                               /*10c: jmp    11b <op_eq+0x11b> */
0x81, 0xfe, 0x06, 0x06, 0x00, 0x00,       /*10e: cmp    $0x606,%esi */
0x75, 0x3b,                               /*114: jne    151 <op_eq+0x151> */
0xf2, 0x0f, 0x10, 0x40, 0x18,             /*116: movsd  0x18(%rax),%xmm0 */
0xf2, 0x0f, 0xc2, 0x41, 0x18, 0x00,       /*11b: cmpeqsd 0x18(%rcx),%xmm0 */
0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*121: movq   %xmm0,%rax */
0x83, 0xe0, 0x01,                         /*126: and    $0x1,%eax */
0x85, 0xc0,                               /*129: test   %eax,%eax */
0x74, 0x12,                               /*12b: je     13f <op_eq+0x13f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12d: mov    $0x0,%eax */
0x48, 0x98,                               /*132: cltq */
0x48, 0xc7, 0x04, 0xc3, 0x04, 0x00, 0x00, 0x00,/*134: movq   $0x4,(%rbx,%rax,8) */
0x5b,                                     /*13c: pop    %rbx */
0xeb, 0x57,                               /*13d: jmp    196 <op_eq+0x196> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*13f: mov    $0x0,%eax */
0x48, 0x98,                               /*144: cltq */
0x48, 0xc7, 0x04, 0xc3, 0x02, 0x00, 0x00, 0x00,/*146: movq   $0x2,(%rbx,%rax,8) */
0x5b,                                     /*14e: pop    %rbx */
0xeb, 0x45,                               /*14f: jmp    196 <op_eq+0x196> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*151: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*156: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15b: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*160: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*165: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*16b: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*171: callq  176 <op_eq+0x176> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*176: mov    0x0(%rip),%rdi        # 17d <op_eq+0x17d> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*17d: mov    0x0(%rip),%rsi        # 184 <op_eq+0x184> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*184: mov    0x0(%rip),%rcx        # 18b <op_eq+0x18b> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18b: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*190: jmpq   195 <op_eq+0x195> */
0x5b,                                     /*195: pop    %rbx */

};
static uint8_t op_eq__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};


static uint8_t op_lt__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_lt+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*1d: mov    (%rax,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*21: cmp    $0x7,%rcx */
0x73, 0x13,                               /*25: jae    3a <op_lt+0x3a> */
0xba, 0x55, 0x00, 0x00, 0x00,             /*27: mov    $0x55,%edx */
0x0f, 0xa3, 0xca,                         /*2c: bt     %ecx,%edx */
0x73, 0x09,                               /*2f: jae    3a <op_lt+0x3a> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*31: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*38: jmp    54 <op_lt+0x54> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*3a: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*3f: test   $0x1,%cl */
0x75, 0x10,                               /*42: jne    54 <op_lt+0x54> */
0x0f, 0xb6, 0xd1,                         /*44: movzbl %cl,%edx */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*47: mov    $0x4,%esi */
0x83, 0xfa, 0x0e,                         /*4c: cmp    $0xe,%edx */
0x74, 0x03,                               /*4f: je     54 <op_lt+0x54> */
0x0f, 0xb6, 0x31,                         /*51: movzbl (%rcx),%esi */
0xc1, 0xe6, 0x08,                         /*54: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*57: and    $0xffff00,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5d: mov    $0x0,%edx */
0xff, 0xc2,                               /*62: inc    %edx */
0x48, 0x63, 0xd2,                         /*64: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*67: mov    (%rax,%rdx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*6b: cmp    $0x7,%rdx */
0x73, 0x13,                               /*6f: jae    84 <op_lt+0x84> */
0xbf, 0x55, 0x00, 0x00, 0x00,             /*71: mov    $0x55,%edi */
0x0f, 0xa3, 0xd7,                         /*76: bt     %edx,%edi */
0x73, 0x09,                               /*79: jae    84 <op_lt+0x84> */
0x8b, 0x3c, 0x95, 0x00, 0x00, 0x00, 0x00, /*7b: mov    0x0(,%rdx,4),%edi */
0xeb, 0x1c,                               /*82: jmp    a0 <op_lt+0xa0> */
0xbf, 0x03, 0x00, 0x00, 0x00,             /*84: mov    $0x3,%edi */
0xf6, 0xc2, 0x01,                         /*89: test   $0x1,%dl */
0x75, 0x12,                               /*8c: jne    a0 <op_lt+0xa0> */
0x44, 0x0f, 0xb6, 0xc2,                   /*8e: movzbl %dl,%r8d */
0xbf, 0x04, 0x00, 0x00, 0x00,             /*92: mov    $0x4,%edi */
0x41, 0x83, 0xf8, 0x0e,                   /*97: cmp    $0xe,%r8d */
0x74, 0x03,                               /*9b: je     a0 <op_lt+0xa0> */
0x0f, 0xb6, 0x3a,                         /*9d: movzbl (%rdx),%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*a0: movzbl %dil,%edi */
0x09, 0xf7,                               /*a4: or     %esi,%edi */
0x81, 0xff, 0x02, 0x06, 0x00, 0x00,       /*a6: cmp    $0x602,%edi */
0x7f, 0x13,                               /*ac: jg     c1 <op_lt+0xc1> */
0x81, 0xff, 0x03, 0x03, 0x00, 0x00,       /*ae: cmp    $0x303,%edi */
0x75, 0x1b,                               /*b4: jne    d1 <op_lt+0xd1> */
0xd1, 0xf9,                               /*b6: sar    %ecx */
0xd1, 0xfa,                               /*b8: sar    %edx */
0x39, 0xd1,                               /*ba: cmp    %edx,%ecx */
0x0f, 0x9c, 0xc1,                         /*bc: setl   %cl */
0xeb, 0x41,                               /*bf: jmp    102 <op_lt+0x102> */
0x81, 0xff, 0x03, 0x06, 0x00, 0x00,       /*c1: cmp    $0x603,%edi */
0x75, 0x24,                               /*c7: jne    ed <op_lt+0xed> */
0xd1, 0xfa,                               /*c9: sar    %edx */
0xf2, 0x0f, 0x2a, 0xc2,                   /*cb: cvtsi2sd %edx,%xmm0 */
0xeb, 0x29,                               /*cf: jmp    fa <op_lt+0xfa> */
0x81, 0xff, 0x06, 0x03, 0x00, 0x00,       /*d1: cmp    $0x306,%edi */
0x75, 0x56,                               /*d7: jne    12f <op_lt+0x12f> */
0xd1, 0xf9,                               /*d9: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*db: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x10, 0x4a, 0x18,             /*df: movsd  0x18(%rdx),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*e4: ucomisd %xmm0,%xmm1 */
0x0f, 0x97, 0xc1,                         /*e8: seta   %cl */
0xeb, 0x15,                               /*eb: jmp    102 <op_lt+0x102> */
0x81, 0xff, 0x06, 0x06, 0x00, 0x00,       /*ed: cmp    $0x606,%edi */
0x75, 0x3a,                               /*f3: jne    12f <op_lt+0x12f> */
0xf2, 0x0f, 0x10, 0x42, 0x18,             /*f5: movsd  0x18(%rdx),%xmm0 */
0x66, 0x0f, 0x2e, 0x41, 0x18,             /*fa: ucomisd 0x18(%rcx),%xmm0 */
0x0f, 0x97, 0xc1,                         /*ff: seta   %cl */
0x0f, 0xb6, 0xc9,                         /*102: movzbl %cl,%ecx */
0x85, 0xc9,                               /*105: test   %ecx,%ecx */
0x74, 0x13,                               /*107: je     11c <op_lt+0x11c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*109: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*10e: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*111: movq   $0x4,(%rax,%rcx,8) */
0x58,                                     /*119: pop    %rax */
0xeb, 0x57,                               /*11a: jmp    173 <op_lt+0x173> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*121: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00,/*124: movq   $0x2,(%rax,%rcx,8) */
0x58,                                     /*12c: pop    %rax */
0xeb, 0x44,                               /*12d: jmp    173 <op_lt+0x173> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*12f: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*134: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*139: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13e: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*143: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*149: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14f: callq  154 <op_lt+0x154> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*154: mov    0x0(%rip),%rdi        # 15b <op_lt+0x15b> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*15b: mov    0x0(%rip),%rsi        # 162 <op_lt+0x162> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*162: mov    0x0(%rip),%rcx        # 169 <op_lt+0x169> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*169: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*16e: jmpq   173 <op_lt+0x173> */

};
static uint8_t op_lt__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};


static uint8_t op_le__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_le+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*1d: mov    (%rax,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*21: cmp    $0x7,%rcx */
0x73, 0x13,                               /*25: jae    3a <op_le+0x3a> */
0xba, 0x55, 0x00, 0x00, 0x00,             /*27: mov    $0x55,%edx */
0x0f, 0xa3, 0xca,                         /*2c: bt     %ecx,%edx */
0x73, 0x09,                               /*2f: jae    3a <op_le+0x3a> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*31: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*38: jmp    54 <op_le+0x54> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*3a: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*3f: test   $0x1,%cl */
0x75, 0x10,                               /*42: jne    54 <op_le+0x54> */
0x0f, 0xb6, 0xd1,                         /*44: movzbl %cl,%edx */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*47: mov    $0x4,%esi */
0x83, 0xfa, 0x0e,                         /*4c: cmp    $0xe,%edx */
0x74, 0x03,                               /*4f: je     54 <op_le+0x54> */
0x0f, 0xb6, 0x31,                         /*51: movzbl (%rcx),%esi */
0xc1, 0xe6, 0x08,                         /*54: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*57: and    $0xffff00,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5d: mov    $0x0,%edx */
0xff, 0xc2,                               /*62: inc    %edx */
0x48, 0x63, 0xd2,                         /*64: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*67: mov    (%rax,%rdx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*6b: cmp    $0x7,%rdx */
0x73, 0x13,                               /*6f: jae    84 <op_le+0x84> */
0xbf, 0x55, 0x00, 0x00, 0x00,             /*71: mov    $0x55,%edi */
0x0f, 0xa3, 0xd7,                         /*76: bt     %edx,%edi */
0x73, 0x09,                               /*79: jae    84 <op_le+0x84> */
0x8b, 0x3c, 0x95, 0x00, 0x00, 0x00, 0x00, /*7b: mov    0x0(,%rdx,4),%edi */
0xeb, 0x1c,                               /*82: jmp    a0 <op_le+0xa0> */
0xbf, 0x03, 0x00, 0x00, 0x00,             /*84: mov    $0x3,%edi */
0xf6, 0xc2, 0x01,                         /*89: test   $0x1,%dl */
0x75, 0x12,                               /*8c: jne    a0 <op_le+0xa0> */
0x44, 0x0f, 0xb6, 0xc2,                   /*8e: movzbl %dl,%r8d */
0xbf, 0x04, 0x00, 0x00, 0x00,             /*92: mov    $0x4,%edi */
0x41, 0x83, 0xf8, 0x0e,                   /*97: cmp    $0xe,%r8d */
0x74, 0x03,                               /*9b: je     a0 <op_le+0xa0> */
0x0f, 0xb6, 0x3a,                         /*9d: movzbl (%rdx),%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*a0: movzbl %dil,%edi */
0x09, 0xf7,                               /*a4: or     %esi,%edi */
0x81, 0xff, 0x02, 0x06, 0x00, 0x00,       /*a6: cmp    $0x602,%edi */
0x7f, 0x13,                               /*ac: jg     c1 <op_le+0xc1> */
0x81, 0xff, 0x03, 0x03, 0x00, 0x00,       /*ae: cmp    $0x303,%edi */
0x75, 0x1b,                               /*b4: jne    d1 <op_le+0xd1> */
0xd1, 0xf9,                               /*b6: sar    %ecx */
0xd1, 0xfa,                               /*b8: sar    %edx */
0x39, 0xd1,                               /*ba: cmp    %edx,%ecx */
0x0f, 0x9e, 0xc1,                         /*bc: setle  %cl */
0xeb, 0x41,                               /*bf: jmp    102 <op_le+0x102> */
0x81, 0xff, 0x03, 0x06, 0x00, 0x00,       /*c1: cmp    $0x603,%edi */
0x75, 0x24,                               /*c7: jne    ed <op_le+0xed> */
0xd1, 0xfa,                               /*c9: sar    %edx */
0xf2, 0x0f, 0x2a, 0xc2,                   /*cb: cvtsi2sd %edx,%xmm0 */
0xeb, 0x29,                               /*cf: jmp    fa <op_le+0xfa> */
0x81, 0xff, 0x06, 0x03, 0x00, 0x00,       /*d1: cmp    $0x306,%edi */
0x75, 0x56,                               /*d7: jne    12f <op_le+0x12f> */
0xd1, 0xf9,                               /*d9: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*db: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x10, 0x4a, 0x18,             /*df: movsd  0x18(%rdx),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*e4: ucomisd %xmm0,%xmm1 */
0x0f, 0x93, 0xc1,                         /*e8: setae  %cl */
0xeb, 0x15,                               /*eb: jmp    102 <op_le+0x102> */
0x81, 0xff, 0x06, 0x06, 0x00, 0x00,       /*ed: cmp    $0x606,%edi */
0x75, 0x3a,                               /*f3: jne    12f <op_le+0x12f> */
0xf2, 0x0f, 0x10, 0x42, 0x18,             /*f5: movsd  0x18(%rdx),%xmm0 */
0x66, 0x0f, 0x2e, 0x41, 0x18,             /*fa: ucomisd 0x18(%rcx),%xmm0 */
0x0f, 0x93, 0xc1,                         /*ff: setae  %cl */
0x0f, 0xb6, 0xc9,                         /*102: movzbl %cl,%ecx */
0x85, 0xc9,                               /*105: test   %ecx,%ecx */
0x74, 0x13,                               /*107: je     11c <op_le+0x11c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*109: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*10e: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*111: movq   $0x4,(%rax,%rcx,8) */
0x58,                                     /*119: pop    %rax */
0xeb, 0x57,                               /*11a: jmp    173 <op_le+0x173> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*121: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00,/*124: movq   $0x2,(%rax,%rcx,8) */
0x58,                                     /*12c: pop    %rax */
0xeb, 0x44,                               /*12d: jmp    173 <op_le+0x173> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*12f: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*134: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*139: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13e: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*143: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*149: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14f: callq  154 <op_le+0x154> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*154: mov    0x0(%rip),%rdi        # 15b <op_le+0x15b> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*15b: mov    0x0(%rip),%rsi        # 162 <op_le+0x162> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*162: mov    0x0(%rip),%rcx        # 169 <op_le+0x169> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*169: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*16e: jmpq   173 <op_le+0x173> */

};
static uint8_t op_le__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};


static uint8_t op_gt__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_gt+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*1d: mov    (%rax,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*21: cmp    $0x7,%rcx */
0x73, 0x13,                               /*25: jae    3a <op_gt+0x3a> */
0xba, 0x55, 0x00, 0x00, 0x00,             /*27: mov    $0x55,%edx */
0x0f, 0xa3, 0xca,                         /*2c: bt     %ecx,%edx */
0x73, 0x09,                               /*2f: jae    3a <op_gt+0x3a> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*31: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*38: jmp    54 <op_gt+0x54> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*3a: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*3f: test   $0x1,%cl */
0x75, 0x10,                               /*42: jne    54 <op_gt+0x54> */
0x0f, 0xb6, 0xd1,                         /*44: movzbl %cl,%edx */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*47: mov    $0x4,%esi */
0x83, 0xfa, 0x0e,                         /*4c: cmp    $0xe,%edx */
0x74, 0x03,                               /*4f: je     54 <op_gt+0x54> */
0x0f, 0xb6, 0x31,                         /*51: movzbl (%rcx),%esi */
0xc1, 0xe6, 0x08,                         /*54: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*57: and    $0xffff00,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5d: mov    $0x0,%edx */
0xff, 0xc2,                               /*62: inc    %edx */
0x48, 0x63, 0xd2,                         /*64: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*67: mov    (%rax,%rdx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*6b: cmp    $0x7,%rdx */
0x73, 0x13,                               /*6f: jae    84 <op_gt+0x84> */
0xbf, 0x55, 0x00, 0x00, 0x00,             /*71: mov    $0x55,%edi */
0x0f, 0xa3, 0xd7,                         /*76: bt     %edx,%edi */
0x73, 0x09,                               /*79: jae    84 <op_gt+0x84> */
0x8b, 0x3c, 0x95, 0x00, 0x00, 0x00, 0x00, /*7b: mov    0x0(,%rdx,4),%edi */
0xeb, 0x1c,                               /*82: jmp    a0 <op_gt+0xa0> */
0xbf, 0x03, 0x00, 0x00, 0x00,             /*84: mov    $0x3,%edi */
0xf6, 0xc2, 0x01,                         /*89: test   $0x1,%dl */
0x75, 0x12,                               /*8c: jne    a0 <op_gt+0xa0> */
0x44, 0x0f, 0xb6, 0xc2,                   /*8e: movzbl %dl,%r8d */
0xbf, 0x04, 0x00, 0x00, 0x00,             /*92: mov    $0x4,%edi */
0x41, 0x83, 0xf8, 0x0e,                   /*97: cmp    $0xe,%r8d */
0x74, 0x03,                               /*9b: je     a0 <op_gt+0xa0> */
0x0f, 0xb6, 0x3a,                         /*9d: movzbl (%rdx),%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*a0: movzbl %dil,%edi */
0x09, 0xf7,                               /*a4: or     %esi,%edi */
0x81, 0xff, 0x02, 0x06, 0x00, 0x00,       /*a6: cmp    $0x602,%edi */
0x7f, 0x13,                               /*ac: jg     c1 <op_gt+0xc1> */
0x81, 0xff, 0x03, 0x03, 0x00, 0x00,       /*ae: cmp    $0x303,%edi */
0x75, 0x27,                               /*b4: jne    dd <op_gt+0xdd> */
0xd1, 0xf9,                               /*b6: sar    %ecx */
0xd1, 0xfa,                               /*b8: sar    %edx */
0x39, 0xd1,                               /*ba: cmp    %edx,%ecx */
0x0f, 0x9f, 0xc1,                         /*bc: setg   %cl */
0xeb, 0x41,                               /*bf: jmp    102 <op_gt+0x102> */
0x81, 0xff, 0x03, 0x06, 0x00, 0x00,       /*c1: cmp    $0x603,%edi */
0x75, 0x24,                               /*c7: jne    ed <op_gt+0xed> */
0xf2, 0x0f, 0x10, 0x41, 0x18,             /*c9: movsd  0x18(%rcx),%xmm0 */
0xd1, 0xfa,                               /*ce: sar    %edx */
0xf2, 0x0f, 0x2a, 0xca,                   /*d0: cvtsi2sd %edx,%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*d4: ucomisd %xmm1,%xmm0 */
0x0f, 0x97, 0xc1,                         /*d8: seta   %cl */
0xeb, 0x25,                               /*db: jmp    102 <op_gt+0x102> */
0x81, 0xff, 0x06, 0x03, 0x00, 0x00,       /*dd: cmp    $0x306,%edi */
0x75, 0x4a,                               /*e3: jne    12f <op_gt+0x12f> */
0xd1, 0xf9,                               /*e5: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*e7: cvtsi2sd %ecx,%xmm0 */
0xeb, 0x0d,                               /*eb: jmp    fa <op_gt+0xfa> */
0x81, 0xff, 0x06, 0x06, 0x00, 0x00,       /*ed: cmp    $0x606,%edi */
0x75, 0x3a,                               /*f3: jne    12f <op_gt+0x12f> */
0xf2, 0x0f, 0x10, 0x41, 0x18,             /*f5: movsd  0x18(%rcx),%xmm0 */
0x66, 0x0f, 0x2e, 0x42, 0x18,             /*fa: ucomisd 0x18(%rdx),%xmm0 */
0x0f, 0x97, 0xc1,                         /*ff: seta   %cl */
0x0f, 0xb6, 0xc9,                         /*102: movzbl %cl,%ecx */
0x85, 0xc9,                               /*105: test   %ecx,%ecx */
0x74, 0x13,                               /*107: je     11c <op_gt+0x11c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*109: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*10e: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*111: movq   $0x4,(%rax,%rcx,8) */
0x58,                                     /*119: pop    %rax */
0xeb, 0x57,                               /*11a: jmp    173 <op_gt+0x173> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*121: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00,/*124: movq   $0x2,(%rax,%rcx,8) */
0x58,                                     /*12c: pop    %rax */
0xeb, 0x44,                               /*12d: jmp    173 <op_gt+0x173> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*12f: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*134: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*139: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13e: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*143: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*149: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14f: callq  154 <op_gt+0x154> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*154: mov    0x0(%rip),%rdi        # 15b <op_gt+0x15b> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*15b: mov    0x0(%rip),%rsi        # 162 <op_gt+0x162> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*162: mov    0x0(%rip),%rcx        # 169 <op_gt+0x169> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*169: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*16e: jmpq   173 <op_gt+0x173> */

};
static uint8_t op_gt__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};


static uint8_t op_ge__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_ge+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*1d: mov    (%rax,%rcx,8),%rcx */
0x48, 0x83, 0xf9, 0x07,                   /*21: cmp    $0x7,%rcx */
0x73, 0x13,                               /*25: jae    3a <op_ge+0x3a> */
0xba, 0x55, 0x00, 0x00, 0x00,             /*27: mov    $0x55,%edx */
0x0f, 0xa3, 0xca,                         /*2c: bt     %ecx,%edx */
0x73, 0x09,                               /*2f: jae    3a <op_ge+0x3a> */
0x8b, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00, /*31: mov    0x0(,%rcx,4),%esi */
0xeb, 0x1a,                               /*38: jmp    54 <op_ge+0x54> */
0xbe, 0x03, 0x00, 0x00, 0x00,             /*3a: mov    $0x3,%esi */
0xf6, 0xc1, 0x01,                         /*3f: test   $0x1,%cl */
0x75, 0x10,                               /*42: jne    54 <op_ge+0x54> */
0x0f, 0xb6, 0xd1,                         /*44: movzbl %cl,%edx */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*47: mov    $0x4,%esi */
0x83, 0xfa, 0x0e,                         /*4c: cmp    $0xe,%edx */
0x74, 0x03,                               /*4f: je     54 <op_ge+0x54> */
0x0f, 0xb6, 0x31,                         /*51: movzbl (%rcx),%esi */
0xc1, 0xe6, 0x08,                         /*54: shl    $0x8,%esi */
0x81, 0xe6, 0x00, 0xff, 0xff, 0x00,       /*57: and    $0xffff00,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5d: mov    $0x0,%edx */
0xff, 0xc2,                               /*62: inc    %edx */
0x48, 0x63, 0xd2,                         /*64: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*67: mov    (%rax,%rdx,8),%rdx */
0x48, 0x83, 0xfa, 0x07,                   /*6b: cmp    $0x7,%rdx */
0x73, 0x13,                               /*6f: jae    84 <op_ge+0x84> */
0xbf, 0x55, 0x00, 0x00, 0x00,             /*71: mov    $0x55,%edi */
0x0f, 0xa3, 0xd7,                         /*76: bt     %edx,%edi */
0x73, 0x09,                               /*79: jae    84 <op_ge+0x84> */
0x8b, 0x3c, 0x95, 0x00, 0x00, 0x00, 0x00, /*7b: mov    0x0(,%rdx,4),%edi */
0xeb, 0x1c,                               /*82: jmp    a0 <op_ge+0xa0> */
0xbf, 0x03, 0x00, 0x00, 0x00,             /*84: mov    $0x3,%edi */
0xf6, 0xc2, 0x01,                         /*89: test   $0x1,%dl */
0x75, 0x12,                               /*8c: jne    a0 <op_ge+0xa0> */
0x44, 0x0f, 0xb6, 0xc2,                   /*8e: movzbl %dl,%r8d */
0xbf, 0x04, 0x00, 0x00, 0x00,             /*92: mov    $0x4,%edi */
0x41, 0x83, 0xf8, 0x0e,                   /*97: cmp    $0xe,%r8d */
0x74, 0x03,                               /*9b: je     a0 <op_ge+0xa0> */
0x0f, 0xb6, 0x3a,                         /*9d: movzbl (%rdx),%edi */
0x40, 0x0f, 0xb6, 0xff,                   /*a0: movzbl %dil,%edi */
0x09, 0xf7,                               /*a4: or     %esi,%edi */
0x81, 0xff, 0x02, 0x06, 0x00, 0x00,       /*a6: cmp    $0x602,%edi */
0x7f, 0x13,                               /*ac: jg     c1 <op_ge+0xc1> */
0x81, 0xff, 0x03, 0x03, 0x00, 0x00,       /*ae: cmp    $0x303,%edi */
0x75, 0x27,                               /*b4: jne    dd <op_ge+0xdd> */
0xd1, 0xf9,                               /*b6: sar    %ecx */
0xd1, 0xfa,                               /*b8: sar    %edx */
0x39, 0xd1,                               /*ba: cmp    %edx,%ecx */
0x0f, 0x9d, 0xc1,                         /*bc: setge  %cl */
0xeb, 0x41,                               /*bf: jmp    102 <op_ge+0x102> */
0x81, 0xff, 0x03, 0x06, 0x00, 0x00,       /*c1: cmp    $0x603,%edi */
0x75, 0x24,                               /*c7: jne    ed <op_ge+0xed> */
0xf2, 0x0f, 0x10, 0x41, 0x18,             /*c9: movsd  0x18(%rcx),%xmm0 */
0xd1, 0xfa,                               /*ce: sar    %edx */
0xf2, 0x0f, 0x2a, 0xca,                   /*d0: cvtsi2sd %edx,%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*d4: ucomisd %xmm1,%xmm0 */
0x0f, 0x93, 0xc1,                         /*d8: setae  %cl */
0xeb, 0x25,                               /*db: jmp    102 <op_ge+0x102> */
0x81, 0xff, 0x06, 0x03, 0x00, 0x00,       /*dd: cmp    $0x306,%edi */
0x75, 0x4a,                               /*e3: jne    12f <op_ge+0x12f> */
0xd1, 0xf9,                               /*e5: sar    %ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*e7: cvtsi2sd %ecx,%xmm0 */
0xeb, 0x0d,                               /*eb: jmp    fa <op_ge+0xfa> */
0x81, 0xff, 0x06, 0x06, 0x00, 0x00,       /*ed: cmp    $0x606,%edi */
0x75, 0x3a,                               /*f3: jne    12f <op_ge+0x12f> */
0xf2, 0x0f, 0x10, 0x41, 0x18,             /*f5: movsd  0x18(%rcx),%xmm0 */
0x66, 0x0f, 0x2e, 0x42, 0x18,             /*fa: ucomisd 0x18(%rdx),%xmm0 */
0x0f, 0x93, 0xc1,                         /*ff: setae  %cl */
0x0f, 0xb6, 0xc9,                         /*102: movzbl %cl,%ecx */
0x85, 0xc9,                               /*105: test   %ecx,%ecx */
0x74, 0x13,                               /*107: je     11c <op_ge+0x11c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*109: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*10e: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x04, 0x00, 0x00, 0x00,/*111: movq   $0x4,(%rax,%rcx,8) */
0x58,                                     /*119: pop    %rax */
0xeb, 0x57,                               /*11a: jmp    173 <op_ge+0x173> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*11c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*121: movslq %ecx,%rcx */
0x48, 0xc7, 0x04, 0xc8, 0x02, 0x00, 0x00, 0x00,/*124: movq   $0x2,(%rax,%rcx,8) */
0x58,                                     /*12c: pop    %rax */
0xeb, 0x44,                               /*12d: jmp    173 <op_ge+0x173> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*12f: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*134: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*139: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13e: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*143: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*149: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14f: callq  154 <op_ge+0x154> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*154: mov    0x0(%rip),%rdi        # 15b <op_ge+0x15b> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*15b: mov    0x0(%rip),%rsi        # 162 <op_ge+0x162> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*162: mov    0x0(%rip),%rcx        # 169 <op_ge+0x169> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*169: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*16e: jmpq   173 <op_ge+0x173> */

};
static uint8_t op_ge__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,

};


static uint8_t op_array__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rbx        # 8 <op_array+0x8> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*8: mov    0x0(%rip),%rdi        # f <op_array+0xf> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%eax */
0x48, 0x8d, 0x14, 0xc3,                   /*14: lea    (%rbx,%rax,8),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1d: callq  22 <op_array+0x22> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*22: mov    $0x0,%ecx */
0x48, 0x89, 0x04, 0xcb,                   /*27: mov    %rax,(%rbx,%rcx,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*2b: mov    0x0(%rip),%eax        # 31 <op_array+0x31> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*31: mov    0x0(%rip),%rcx        # 38 <op_array+0x38> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*38: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*3e: pop    %rbx */

};
static uint8_t op_array__rodata[] = {

};


static uint8_t op_arycat__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%r14        # a <op_arycat+0xa> */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*a: mov    0x0(%rip),%rbx        # 11 <op_arycat+0x11> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%eax */
0x48, 0x8b, 0x34, 0xc3,                   /*16: mov    (%rbx,%rax,8),%rsi */
0x4c, 0x89, 0xf7,                         /*1a: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1d: callq  22 <op_arycat+0x22> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*22: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xcb,                   /*27: mov    (%rbx,%rcx,8),%rsi */
0x4c, 0x89, 0xf7,                         /*2b: mov    %r14,%rdi */
0x48, 0x89, 0xc2,                         /*2e: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*31: callq  36 <op_arycat+0x36> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*36: mov    0x0(%rip),%eax        # 3c <op_arycat+0x3c> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*3c: mov    0x0(%rip),%rcx        # 43 <op_arycat+0x43> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*43: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*49: pop    %rbx */
0x41, 0x5e,                               /*4a: pop    %r14 */

};
static uint8_t op_arycat__rodata[] = {

};


static uint8_t op_arypush__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_arypush+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_arypush+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*13: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*1c: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*20: callq  25 <op_arypush+0x25> */

};
static uint8_t op_arypush__rodata[] = {

};


static uint8_t op_aref__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rbx        # 8 <op_aref+0x8> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%eax */
0x48, 0x8b, 0x34, 0xc3,                   /*d: mov    (%rbx,%rax,8),%rsi */
0x48, 0x83, 0xfe, 0x06,                   /*11: cmp    $0x6,%rsi */
0x77, 0x0b,                               /*15: ja     22 <op_aref+0x22> */
0xb8, 0x55, 0x00, 0x00, 0x00,             /*17: mov    $0x55,%eax */
0x48, 0x0f, 0xa3, 0xf0,                   /*1c: bt     %rsi,%rax */
0x72, 0x34,                               /*20: jb     56 <op_aref+0x56> */
0x40, 0xf6, 0xc6, 0x01,                   /*22: test   $0x1,%sil */
0x75, 0x2e,                               /*26: jne    56 <op_aref+0x56> */
0x40, 0x0f, 0xb6, 0xc6,                   /*28: movzbl %sil,%eax */
0x83, 0xf8, 0x0e,                         /*2c: cmp    $0xe,%eax */
0x74, 0x25,                               /*2f: je     56 <op_aref+0x56> */
0x0f, 0xb6, 0x06,                         /*31: movzbl (%rsi),%eax */
0x83, 0xf8, 0x0e,                         /*34: cmp    $0xe,%eax */
0x75, 0x1d,                               /*37: jne    56 <op_aref+0x56> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*39: mov    0x0(%rip),%rdi        # 40 <op_aref+0x40> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*40: mov    $0x0,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*45: callq  4a <op_aref+0x4a> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4a: mov    $0x0,%ecx */
0x48, 0x89, 0x04, 0xcb,                   /*4f: mov    %rax,(%rbx,%rcx,8) */
0x5b,                                     /*53: pop    %rbx */
0xeb, 0x25,                               /*54: jmp    7b <op_aref+0x7b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*56: mov    $0x0,%eax */
0x85, 0xc0,                               /*5b: test   %eax,%eax */
0x75, 0x0c,                               /*5d: jne    6b <op_aref+0x6b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5f: mov    $0x0,%eax */
0x48, 0x89, 0x34, 0xc3,                   /*64: mov    %rsi,(%rbx,%rax,8) */
0x5b,                                     /*68: pop    %rbx */
0xeb, 0x10,                               /*69: jmp    7b <op_aref+0x7b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*6b: mov    $0x0,%eax */
0x48, 0x98,                               /*70: cltq */
0x48, 0xc7, 0x04, 0xc3, 0x00, 0x00, 0x00, 0x00,/*72: movq   $0x0,(%rbx,%rax,8) */
0x5b,                                     /*7a: pop    %rbx */

};
static uint8_t op_aref__rodata[] = {

};


static uint8_t op_aset__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_aset+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_aset+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*13: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%ecx */
0x48, 0x8b, 0x0c, 0xc8,                   /*1c: mov    (%rax,%rcx,8),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*25: callq  2a <op_aset+0x2a> */

};
static uint8_t op_aset__rodata[] = {

};


static uint8_t op_apost__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x53,                                     /*5: push   %rbx */
0x4c, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*6: mov    0x0(%rip),%r15        # d <op_apost+0xd> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%eax */
0x48, 0x98,                               /*12: cltq */
0x4d, 0x8b, 0x34, 0xc7,                   /*14: mov    (%r15,%rax,8),%r14 */
0x49, 0x83, 0xfe, 0x06,                   /*18: cmp    $0x6,%r14 */
0x77, 0x0f,                               /*1c: ja     2d <op_apost+0x2d> */
0xb8, 0x55, 0x00, 0x00, 0x00,             /*1e: mov    $0x55,%eax */
0x4c, 0x0f, 0xa3, 0xf0,                   /*23: bt     %r14,%rax */
0x0f, 0x82, 0xa9, 0x00, 0x00, 0x00,       /*27: jb     d6 <op_apost+0xd6> */
0x41, 0xf6, 0xc6, 0x01,                   /*2d: test   $0x1,%r14b */
0x0f, 0x85, 0x9f, 0x00, 0x00, 0x00,       /*31: jne    d6 <op_apost+0xd6> */
0x41, 0x0f, 0xb6, 0xc6,                   /*37: movzbl %r14b,%eax */
0x83, 0xf8, 0x0e,                         /*3b: cmp    $0xe,%eax */
0x0f, 0x84, 0x92, 0x00, 0x00, 0x00,       /*3e: je     d6 <op_apost+0xd6> */
0x41, 0x0f, 0xb6, 0x06,                   /*44: movzbl (%r14),%eax */
0x83, 0xf8, 0x0e,                         /*48: cmp    $0xe,%eax */
0x0f, 0x85, 0x85, 0x00, 0x00, 0x00,       /*4b: jne    d6 <op_apost+0xd6> */
0x41, 0x8b, 0x5e, 0x18,                   /*51: mov    0x18(%r14),%ebx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*55: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5a: mov    $0x0,%ecx */
0x01, 0xc1,                               /*5f: add    %eax,%ecx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*61: mov    0x0(%rip),%rdi        # 68 <op_apost+0x68> */
0x39, 0xcb,                               /*68: cmp    %ecx,%ebx */
0x0f, 0x8e, 0xbc, 0x00, 0x00, 0x00,       /*6a: jle    12c <op_apost+0x12c> */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*70: mov    $0x0,%ebp */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*75: mov    $0x0,%esi */
0x48, 0x63, 0xc6,                         /*7a: movslq %esi,%rax */
0xf7, 0xde,                               /*7d: neg    %esi */
0x29, 0xee,                               /*7f: sub    %ebp,%esi */
0x01, 0xde,                               /*81: add    %ebx,%esi */
0x49, 0x8b, 0x4e, 0x28,                   /*83: mov    0x28(%r14),%rcx */
0x48, 0x8d, 0x14, 0xc1,                   /*87: lea    (%rcx,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8b: callq  90 <op_apost+0x90> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*90: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*95: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xcf,                   /*98: mov    %rax,(%r15,%rcx,8) */
0x85, 0xed,                               /*9c: test   %ebp,%ebp */
0x0f, 0x84, 0x33, 0x01, 0x00, 0x00,       /*9e: je     1d7 <op_apost+0x1d7> */
0xf7, 0xdd,                               /*a4: neg    %ebp */
0x48, 0x8d, 0x04, 0xcd, 0x08, 0x00, 0x00, 0x00,/*a6: lea    0x8(,%rcx,8),%rax */
0x66, 0x90,                               /*ae: xchg   %ax,%ax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*b0: mov    0x0(%rip),%rcx        # b7 <op_apost+0xb7> */
0x8d, 0x14, 0x2b,                         /*b7: lea    (%rbx,%rbp,1),%edx */
0x48, 0x63, 0xd2,                         /*ba: movslq %edx,%rdx */
0x49, 0x8b, 0x76, 0x28,                   /*bd: mov    0x28(%r14),%rsi */
0x48, 0x8b, 0x14, 0xd6,                   /*c1: mov    (%rsi,%rdx,8),%rdx */
0x48, 0x89, 0x14, 0x01,                   /*c5: mov    %rdx,(%rcx,%rax,1) */
0x48, 0x83, 0xc0, 0x08,                   /*c9: add    $0x8,%rax */
0xff, 0xc5,                               /*cd: inc    %ebp */
0x75, 0xdf,                               /*cf: jne    b0 <op_apost+0xb0> */
0xe9, 0x01, 0x01, 0x00, 0x00,             /*d1: jmpq   1d7 <op_apost+0x1d7> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*d6: mov    0x0(%rip),%rdi        # dd <op_apost+0xdd> */
0x31, 0xf6,                               /*dd: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*df: callq  e4 <op_apost+0xe4> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e4: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*e9: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xcf,                   /*ec: mov    %rax,(%r15,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f0: mov    $0x0,%eax */
0x85, 0xc0,                               /*f5: test   %eax,%eax */
0x0f, 0x84, 0xda, 0x00, 0x00, 0x00,       /*f7: je     1d7 <op_apost+0x1d7> */
0x48, 0x8d, 0x0c, 0xcd, 0x08, 0x00, 0x00, 0x00,/*fd: lea    0x8(,%rcx,8),%rcx */
0x90,                                     /*105: nop */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*106: nopw   %cs:0x0(%rax,%rax,1) */
0xff, 0xc8,                               /*110: dec    %eax */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*112: mov    0x0(%rip),%rdx        # 119 <op_apost+0x119> */
0x48, 0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00,/*119: movq   $0x0,(%rdx,%rcx,1) */
0x48, 0x8d, 0x49, 0x08,                   /*121: lea    0x8(%rcx),%rcx */
0x75, 0xe9,                               /*125: jne    110 <op_apost+0x110> */
0xe9, 0xab, 0x00, 0x00, 0x00,             /*127: jmpq   1d7 <op_apost+0x1d7> */
0x31, 0xed,                               /*12c: xor    %ebp,%ebp */
0x31, 0xf6,                               /*12e: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*130: callq  135 <op_apost+0x135> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*135: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*13a: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xcf,                   /*13d: mov    %rax,(%r15,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*141: mov    $0x0,%eax */
0x39, 0xc3,                               /*146: cmp    %eax,%ebx */
0x7e, 0x47,                               /*148: jle    191 <op_apost+0x191> */
0x8d, 0x6b, 0xff,                         /*14a: lea    -0x1(%rbx),%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14d: mov    $0x0,%eax */
0x29, 0xc5,                               /*152: sub    %eax,%ebp */
0x29, 0xc3,                               /*154: sub    %eax,%ebx */
0x48, 0x98,                               /*156: cltq */
0x48, 0xc1, 0xe0, 0x03,                   /*158: shl    $0x3,%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15c: mov    $0x0,%ecx */
0xff, 0xc1,                               /*161: inc    %ecx */
0x48, 0x63, 0xc9,                         /*163: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x03,                   /*166: shl    $0x3,%rcx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*16a: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*170: mov    0x0(%rip),%rdx        # 177 <op_apost+0x177> */
0x49, 0x8b, 0x76, 0x28,                   /*177: mov    0x28(%r14),%rsi */
0x48, 0x8b, 0x34, 0x06,                   /*17b: mov    (%rsi,%rax,1),%rsi */
0x48, 0x89, 0x34, 0x0a,                   /*17f: mov    %rsi,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x08,                   /*183: add    $0x8,%rcx */
0x48, 0x83, 0xc0, 0x08,                   /*187: add    $0x8,%rax */
0xff, 0xcb,                               /*18b: dec    %ebx */
0x75, 0xe1,                               /*18d: jne    170 <op_apost+0x170> */
0xff, 0xc5,                               /*18f: inc    %ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*191: mov    $0x0,%eax */
0x39, 0xc5,                               /*196: cmp    %eax,%ebp */
0x7d, 0x3d,                               /*198: jge    1d7 <op_apost+0x1d7> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*19a: mov    $0x0,%eax */
0x29, 0xe8,                               /*19f: sub    %ebp,%eax */
0x48, 0x63, 0xd5,                         /*1a1: movslq %ebp,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a4: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1a9: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1ab: movslq %ecx,%rcx */
0x48, 0x01, 0xd1,                         /*1ae: add    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x03,                   /*1b1: shl    $0x3,%rcx */
0x90,                                     /*1b5: nop */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1b6: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*1c0: mov    0x0(%rip),%rdx        # 1c7 <op_apost+0x1c7> */
0x48, 0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00,/*1c7: movq   $0x0,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x08,                   /*1cf: add    $0x8,%rcx */
0xff, 0xc8,                               /*1d3: dec    %eax */
0x75, 0xe9,                               /*1d5: jne    1c0 <op_apost+0x1c0> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*1d7: mov    0x0(%rip),%eax        # 1dd <op_apost+0x1dd> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1dd: mov    0x0(%rip),%rcx        # 1e4 <op_apost+0x1e4> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*1e4: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*1ea: pop    %rbx */
0x41, 0x5e,                               /*1eb: pop    %r14 */
0x41, 0x5f,                               /*1ed: pop    %r15 */
0x5d,                                     /*1ef: pop    %rbp */

};
static uint8_t op_apost__rodata[] = {

};


static uint8_t op_string__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rbx        # 8 <op_string+0x8> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*8: mov    0x0(%rip),%rdi        # f <op_string+0xf> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rax        # 16 <op_string+0x16> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*1b: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1f: callq  24 <op_string+0x24> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*24: mov    $0x0,%ecx */
0x48, 0x89, 0x04, 0xcb,                   /*29: mov    %rax,(%rbx,%rcx,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*2d: mov    0x0(%rip),%eax        # 33 <op_string+0x33> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*33: mov    0x0(%rip),%rcx        # 3a <op_string+0x3a> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*3a: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*40: pop    %rbx */

};
static uint8_t op_string__rodata[] = {

};


static uint8_t op_strcat__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_strcat+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_strcat+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*13: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*1c: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*20: callq  25 <op_strcat+0x25> */

};
static uint8_t op_strcat__rodata[] = {

};


static uint8_t op_hash__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x54,                               /*4: push   %r12 */
0x53,                                     /*6: push   %rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rdi        # e <op_hash+0xe> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ebx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*13: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*18: callq  1d <op_hash+0x1d> */
0x49, 0x89, 0xc6,                         /*1d: mov    %rax,%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%eax */
0x8d, 0x0c, 0x58,                         /*25: lea    (%rax,%rbx,2),%ecx */
0x39, 0xc8,                               /*28: cmp    %ecx,%eax */
0x7d, 0x4f,                               /*2a: jge    7b <op_hash+0x7b> */
0x48, 0x63, 0xd8,                         /*2c: movslq %eax,%rbx */
0x8d, 0x43, 0x01,                         /*2f: lea    0x1(%rbx),%eax */
0x4c, 0x63, 0xf8,                         /*32: movslq %eax,%r15 */
0x49, 0xc1, 0xe7, 0x03,                   /*35: shl    $0x3,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*39: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3e: mov    $0x0,%ecx */
0x8d, 0x04, 0x41,                         /*43: lea    (%rcx,%rax,2),%eax */
0x4c, 0x63, 0xe0,                         /*46: movslq %eax,%r12 */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*49: nopl   0x0(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*50: mov    0x0(%rip),%rdi        # 57 <op_hash+0x57> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*57: mov    0x0(%rip),%rax        # 5e <op_hash+0x5e> */
0x48, 0x8b, 0x14, 0xd8,                   /*5e: mov    (%rax,%rbx,8),%rdx */
0x4a, 0x8b, 0x0c, 0x38,                   /*62: mov    (%rax,%r15,1),%rcx */
0x4c, 0x89, 0xf6,                         /*66: mov    %r14,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*69: callq  6e <op_hash+0x6e> */
0x48, 0x83, 0xc3, 0x02,                   /*6e: add    $0x2,%rbx */
0x49, 0x83, 0xc7, 0x10,                   /*72: add    $0x10,%r15 */
0x4c, 0x39, 0xe3,                         /*76: cmp    %r12,%rbx */
0x7c, 0xd5,                               /*79: jl     50 <op_hash+0x50> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7b: mov    0x0(%rip),%rax        # 82 <op_hash+0x82> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*82: mov    $0x0,%ecx */
0x4c, 0x89, 0x34, 0xc8,                   /*87: mov    %r14,(%rax,%rcx,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*8b: mov    0x0(%rip),%eax        # 91 <op_hash+0x91> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*91: mov    0x0(%rip),%rcx        # 98 <op_hash+0x98> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*98: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*9e: pop    %rbx */
0x41, 0x5c,                               /*9f: pop    %r12 */
0x41, 0x5e,                               /*a1: pop    %r14 */
0x41, 0x5f,                               /*a3: pop    %r15 */

};
static uint8_t op_hash__rodata[] = {

};


static uint8_t op_lambda__text[] = {
0xbf, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14: callq  19 <op_lambda+0x19> */

};
static uint8_t op_lambda__rodata[] = {

};


static uint8_t op_range__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rbx        # 8 <op_range+0x8> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*8: mov    0x0(%rip),%rdi        # f <op_range+0xf> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%eax */
0x48, 0x98,                               /*14: cltq */
0x48, 0x8b, 0x34, 0xc3,                   /*16: mov    (%rbx,%rax,8),%rsi */
0xff, 0xc0,                               /*1a: inc    %eax */
0x48, 0x98,                               /*1c: cltq */
0x48, 0x8b, 0x14, 0xc3,                   /*1e: mov    (%rbx,%rax,8),%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*22: mov    $0x0,%eax */
0x0f, 0xb6, 0xc8,                         /*27: movzbl %al,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2a: callq  2f <op_range+0x2f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2f: mov    $0x0,%ecx */
0x48, 0x89, 0x04, 0xcb,                   /*34: mov    %rax,(%rbx,%rcx,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*38: mov    0x0(%rip),%eax        # 3e <op_range+0x3e> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*3e: mov    0x0(%rip),%rcx        # 45 <op_range+0x45> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*45: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*4b: pop    %rbx */

};
static uint8_t op_range__rodata[] = {

};


static uint8_t op_oclass__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_oclass+0x7> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rcx        # e <op_oclass+0xe> */
0x48, 0x8b, 0x51, 0x40,                   /*e: mov    0x40(%rcx),%rdx */
0x8b, 0x32,                               /*12: mov    (%rdx),%esi */
0x40, 0x0f, 0xb6, 0xfe,                   /*14: movzbl %sil,%edi */
0xb9, 0x04, 0x00, 0x00, 0x00,             /*18: mov    $0x4,%ecx */
0x83, 0xff, 0x05,                         /*1d: cmp    $0x5,%edi */
0x77, 0x15,                               /*20: ja     37 <op_oclass+0x37> */
0xff, 0x24, 0xfd, 0x00, 0x00, 0x00, 0x00, /*22: jmpq   *0x0(,%rdi,8) */
0x48, 0x85, 0xd2,                         /*29: test   %rdx,%rdx */
0x0f, 0x95, 0xc1,                         /*2c: setne  %cl */
0x0f, 0xb6, 0xc9,                         /*2f: movzbl %cl,%ecx */
0x48, 0x01, 0xc9,                         /*32: add    %rcx,%rcx */
0xeb, 0x0d,                               /*35: jmp    44 <op_oclass+0x44> */
0x48, 0x85, 0xd2,                         /*37: test   %rdx,%rdx */
0x48, 0x89, 0xd1,                         /*3a: mov    %rdx,%rcx */
0x74, 0x05,                               /*3d: je     44 <op_oclass+0x44> */
0x89, 0x32,                               /*3f: mov    %esi,(%rdx) */
0x48, 0x89, 0xd1,                         /*41: mov    %rdx,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*44: mov    $0x0,%edx */
0x48, 0x89, 0x0c, 0xd0,                   /*49: mov    %rcx,(%rax,%rdx,8) */
0xeb, 0x07,                               /*4d: jmp    56 <op_oclass+0x56> */
0xb9, 0x06, 0x00, 0x00, 0x00,             /*4f: mov    $0x6,%ecx */
0xeb, 0xee,                               /*54: jmp    44 <op_oclass+0x44> */

};
static uint8_t op_oclass__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};


static uint8_t op_class__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_class+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x8b, 0x0c, 0x88,                         /*c: mov    (%rax,%rcx,4),%ecx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rax        # 16 <op_class+0x16> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*1b: movslq %edx,%rdx */
0x48, 0x8b, 0x34, 0xd0,                   /*1e: mov    (%rax,%rdx,8),%rsi */
0xff, 0xc2,                               /*22: inc    %edx */
0x48, 0x63, 0xd2,                         /*24: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*27: mov    (%rax,%rdx,8),%rdx */
0x48, 0x85, 0xf6,                         /*2b: test   %rsi,%rsi */
0x75, 0x47,                               /*2e: jne    77 <op_class+0x77> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*30: mov    0x0(%rip),%rax        # 37 <op_class+0x37> */
0x48, 0x8b, 0x40, 0x18,                   /*37: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*3b: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x48,                   /*3f: mov    0x48(%rax),%rax */
0x44, 0x8b, 0x00,                         /*43: mov    (%rax),%r8d */
0x41, 0x0f, 0xb6, 0xf8,                   /*46: movzbl %r8b,%edi */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*4a: mov    $0x4,%esi */
0x83, 0xff, 0x05,                         /*4f: cmp    $0x5,%edi */
0x77, 0x15,                               /*52: ja     69 <op_class+0x69> */
0xff, 0x24, 0xfd, 0x00, 0x00, 0x00, 0x00, /*54: jmpq   *0x0(,%rdi,8) */
0x48, 0x85, 0xc0,                         /*5b: test   %rax,%rax */
0x0f, 0x95, 0xc0,                         /*5e: setne  %al */
0x0f, 0xb6, 0xf0,                         /*61: movzbl %al,%esi */
0x48, 0x01, 0xf6,                         /*64: add    %rsi,%rsi */
0xeb, 0x0e,                               /*67: jmp    77 <op_class+0x77> */
0x48, 0x85, 0xc0,                         /*69: test   %rax,%rax */
0x48, 0x89, 0xc6,                         /*6c: mov    %rax,%rsi */
0x74, 0x06,                               /*6f: je     77 <op_class+0x77> */
0x44, 0x89, 0x00,                         /*71: mov    %r8d,(%rax) */
0x48, 0x89, 0xc6,                         /*74: mov    %rax,%rsi */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*77: mov    0x0(%rip),%rdi        # 7e <op_class+0x7e> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7e: callq  83 <op_class+0x83> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*83: mov    0x0(%rip),%rcx        # 8a <op_class+0x8a> */
0x8b, 0x30,                               /*8a: mov    (%rax),%esi */
0x40, 0x0f, 0xb6, 0xfe,                   /*8c: movzbl %sil,%edi */
0xba, 0x04, 0x00, 0x00, 0x00,             /*90: mov    $0x4,%edx */
0x83, 0xff, 0x05,                         /*95: cmp    $0x5,%edi */
0x77, 0x15,                               /*98: ja     af <op_class+0xaf> */
0xff, 0x24, 0xfd, 0x00, 0x00, 0x00, 0x00, /*9a: jmpq   *0x0(,%rdi,8) */
0x48, 0x85, 0xc0,                         /*a1: test   %rax,%rax */
0x0f, 0x95, 0xc0,                         /*a4: setne  %al */
0x0f, 0xb6, 0xd0,                         /*a7: movzbl %al,%edx */
0x48, 0x01, 0xd2,                         /*aa: add    %rdx,%rdx */
0xeb, 0x0d,                               /*ad: jmp    bc <op_class+0xbc> */
0x48, 0x85, 0xc0,                         /*af: test   %rax,%rax */
0x48, 0x89, 0xc2,                         /*b2: mov    %rax,%rdx */
0x74, 0x05,                               /*b5: je     bc <op_class+0xbc> */
0x89, 0x30,                               /*b7: mov    %esi,(%rax) */
0x48, 0x89, 0xc2,                         /*b9: mov    %rax,%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*bc: mov    $0x0,%eax */
0x48, 0x98,                               /*c1: cltq */
0x48, 0x89, 0x14, 0xc1,                   /*c3: mov    %rdx,(%rcx,%rax,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*c7: mov    0x0(%rip),%eax        # cd <op_class+0xcd> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*cd: mov    0x0(%rip),%rcx        # d4 <op_class+0xd4> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*d4: mov    %eax,0xdc(%rcx) */
0xeb, 0x0e,                               /*da: jmp    ea <op_class+0xea> */
0xba, 0x06, 0x00, 0x00, 0x00,             /*dc: mov    $0x6,%edx */
0xeb, 0xd9,                               /*e1: jmp    bc <op_class+0xbc> */
0xbe, 0x06, 0x00, 0x00, 0x00,             /*e3: mov    $0x6,%esi */
0xeb, 0x8d,                               /*e8: jmp    77 <op_class+0x77> */

};
static uint8_t op_class__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};


static uint8_t op_module__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_module+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x8b, 0x14, 0x88,                         /*c: mov    (%rax,%rcx,4),%edx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rax        # 16 <op_module+0x16> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1b: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*1e: mov    (%rax,%rcx,8),%rsi */
0x48, 0x85, 0xf6,                         /*22: test   %rsi,%rsi */
0x75, 0x44,                               /*25: jne    6b <op_module+0x6b> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*27: mov    0x0(%rip),%rax        # 2e <op_module+0x2e> */
0x48, 0x8b, 0x40, 0x18,                   /*2e: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*32: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x48,                   /*36: mov    0x48(%rax),%rax */
0x8b, 0x08,                               /*3a: mov    (%rax),%ecx */
0x0f, 0xb6, 0xf9,                         /*3c: movzbl %cl,%edi */
0xbe, 0x04, 0x00, 0x00, 0x00,             /*3f: mov    $0x4,%esi */
0x83, 0xff, 0x05,                         /*44: cmp    $0x5,%edi */
0x77, 0x15,                               /*47: ja     5e <op_module+0x5e> */
0xff, 0x24, 0xfd, 0x00, 0x00, 0x00, 0x00, /*49: jmpq   *0x0(,%rdi,8) */
0x48, 0x85, 0xc0,                         /*50: test   %rax,%rax */
0x0f, 0x95, 0xc0,                         /*53: setne  %al */
0x0f, 0xb6, 0xf0,                         /*56: movzbl %al,%esi */
0x48, 0x01, 0xf6,                         /*59: add    %rsi,%rsi */
0xeb, 0x0d,                               /*5c: jmp    6b <op_module+0x6b> */
0x48, 0x85, 0xc0,                         /*5e: test   %rax,%rax */
0x48, 0x89, 0xc6,                         /*61: mov    %rax,%rsi */
0x74, 0x05,                               /*64: je     6b <op_module+0x6b> */
0x89, 0x08,                               /*66: mov    %ecx,(%rax) */
0x48, 0x89, 0xc6,                         /*68: mov    %rax,%rsi */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*6b: mov    0x0(%rip),%rdi        # 72 <op_module+0x72> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*72: callq  77 <op_module+0x77> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*77: mov    0x0(%rip),%rcx        # 7e <op_module+0x7e> */
0x8b, 0x30,                               /*7e: mov    (%rax),%esi */
0x40, 0x0f, 0xb6, 0xfe,                   /*80: movzbl %sil,%edi */
0xba, 0x04, 0x00, 0x00, 0x00,             /*84: mov    $0x4,%edx */
0x83, 0xff, 0x05,                         /*89: cmp    $0x5,%edi */
0x77, 0x15,                               /*8c: ja     a3 <op_module+0xa3> */
0xff, 0x24, 0xfd, 0x00, 0x00, 0x00, 0x00, /*8e: jmpq   *0x0(,%rdi,8) */
0x48, 0x85, 0xc0,                         /*95: test   %rax,%rax */
0x0f, 0x95, 0xc0,                         /*98: setne  %al */
0x0f, 0xb6, 0xd0,                         /*9b: movzbl %al,%edx */
0x48, 0x01, 0xd2,                         /*9e: add    %rdx,%rdx */
0xeb, 0x0d,                               /*a1: jmp    b0 <op_module+0xb0> */
0x48, 0x85, 0xc0,                         /*a3: test   %rax,%rax */
0x48, 0x89, 0xc2,                         /*a6: mov    %rax,%rdx */
0x74, 0x05,                               /*a9: je     b0 <op_module+0xb0> */
0x89, 0x30,                               /*ab: mov    %esi,(%rax) */
0x48, 0x89, 0xc2,                         /*ad: mov    %rax,%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*b0: mov    $0x0,%eax */
0x48, 0x98,                               /*b5: cltq */
0x48, 0x89, 0x14, 0xc1,                   /*b7: mov    %rdx,(%rcx,%rax,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*bb: mov    0x0(%rip),%eax        # c1 <op_module+0xc1> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*c1: mov    0x0(%rip),%rcx        # c8 <op_module+0xc8> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*c8: mov    %eax,0xdc(%rcx) */
0xeb, 0x0e,                               /*ce: jmp    de <op_module+0xde> */
0xba, 0x06, 0x00, 0x00, 0x00,             /*d0: mov    $0x6,%edx */
0xeb, 0xd9,                               /*d5: jmp    b0 <op_module+0xb0> */
0xbe, 0x06, 0x00, 0x00, 0x00,             /*d7: mov    $0x6,%esi */
0xeb, 0x8d,                               /*dc: jmp    6b <op_module+0x6b> */

};
static uint8_t op_module__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};


static uint8_t op_exec__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x57,                               /*e: push   %r15 */
0x41, 0x56,                               /*10: push   %r14 */
0x53,                                     /*12: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rax        # 1a <op_exec+0x1a> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%ecx */
0x4c, 0x63, 0xf9,                         /*1f: movslq %ecx,%r15 */
0x4e, 0x8b, 0x34, 0xf8,                   /*22: mov    (%rax,%r15,8),%r14 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*26: mov    0x0(%rip),%rdi        # 2d <op_exec+0x2d> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2d: callq  32 <op_exec+0x32> */
0x48, 0x89, 0xc3,                         /*32: mov    %rax,%rbx */
0x48, 0xc7, 0x43, 0x30, 0x00, 0x00, 0x00, 0x00,/*35: movq   $0x0,0x30(%rbx) */
0x4a, 0x8d, 0x04, 0xfd, 0x00, 0x00, 0x00, 0x00,/*3d: lea    0x0(,%r15,8),%rax */
0x44, 0x89, 0x7b, 0x44,                   /*45: mov    %r15d,0x44(%rbx) */
0xc7, 0x03, 0x00, 0x00, 0x00, 0x00,       /*49: movl   $0x0,(%rbx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*4f: mov    0x0(%rip),%rcx        # 56 <op_exec+0x56> */
0x48, 0x8b, 0x49, 0x18,                   /*56: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*5a: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x4b, 0x10,                   /*5e: mov    %rcx,0x10(%rbx) */
0xc7, 0x43, 0x40, 0x00, 0x00, 0x00, 0x00, /*62: movl   $0x0,0x40(%rbx) */
0x4c, 0x89, 0x73, 0x48,                   /*69: mov    %r14,0x48(%rbx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*6d: mov    0x0(%rip),%rcx        # 74 <op_exec+0x74> */
0x48, 0x8b, 0x49, 0x18,                   /*74: mov    0x18(%rcx),%rcx */
0x48, 0x01, 0x41, 0x08,                   /*78: add    %rax,0x8(%rcx) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*7c: mov    0x0(%rip),%rdi        # 83 <op_exec+0x83> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*83: mov    0x0(%rip),%rax        # 8a <op_exec+0x8a> */
0x48, 0x8b, 0x40, 0x20,                   /*8a: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8e: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*93: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*97: callq  9c <op_exec+0x9c> */
0x48, 0x8b, 0x4b, 0x48,                   /*9c: mov    0x48(%rbx),%rcx */
0x48, 0x89, 0x48, 0x20,                   /*a0: mov    %rcx,0x20(%rax) */
0x48, 0x89, 0x43, 0x08,                   /*a4: mov    %rax,0x8(%rbx) */
0xf6, 0x40, 0x02, 0x04,                   /*a8: testb  $0x4,0x2(%rax) */
0x0f, 0x84, 0x9c, 0x00, 0x00, 0x00,       /*ac: je     14e <op_exec+0x14e> */
0xc7, 0x43, 0x18, 0x00, 0x00, 0x00, 0x00, /*b2: movl   $0x0,0x18(%rbx) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*b9: mov    0x0(%rip),%rdi        # c0 <op_exec+0xc0> */
0x48, 0x8b, 0x4f, 0x18,                   /*c0: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x59, 0x08,                   /*c4: mov    0x8(%rcx),%rbx */
0x4c, 0x89, 0xf6,                         /*c8: mov    %r14,%rsi */
0xff, 0x50, 0x18,                         /*cb: callq  *0x18(%rax) */
0x48, 0x89, 0x03,                         /*ce: mov    %rax,(%rbx) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*d1: mov    0x0(%rip),%rdi        # d8 <op_exec+0xd8> */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*d8: mov    0x0(%rip),%esi        # de <op_exec+0xde> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*de: callq  e3 <op_exec+0xe3> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e3: mov    0x0(%rip),%rax        # ea <op_exec+0xea> */
0x48, 0x83, 0x78, 0x28, 0x00,             /*ea: cmpq   $0x0,0x28(%rax) */
0x74, 0x30,                               /*ef: je     121 <op_exec+0x121> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*f1: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*f6: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*fb: callq  100 <op_exec+0x100> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*100: mov    0x0(%rip),%rdi        # 107 <op_exec+0x107> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*107: mov    0x0(%rip),%rsi        # 10e <op_exec+0x10e> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*10e: mov    0x0(%rip),%rcx        # 115 <op_exec+0x115> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*115: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*11a: jmpq   11f <op_exec+0x11f> */
0xeb, 0x23,                               /*11f: jmp    144 <op_exec+0x144> */
0x48, 0x8b, 0x40, 0x18,                   /*121: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*125: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*129: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*12d: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*131: mov    %rcx,0x0(%rip)        # 138 <op_exec+0x138> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*138: mov    0x0(%rip),%rdi        # 13f <op_exec+0x13f> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*13f: callq  144 <op_exec+0x144> */
0x5b,                                     /*144: pop    %rbx */
0x41, 0x5e,                               /*145: pop    %r14 */
0x41, 0x5f,                               /*147: pop    %r15 */
0xe9, 0xa6, 0x00, 0x00, 0x00,             /*149: jmpq   1f4 <op_exec+0x1f4> */
0x48, 0x8b, 0x40, 0x18,                   /*14e: mov    0x18(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*152: mov    %rax,0x0(%rip)        # 159 <op_exec+0x159> */
0x48, 0x8b, 0x48, 0x10,                   /*159: mov    0x10(%rax),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*15d: mov    %rcx,0x0(%rip)        # 164 <op_exec+0x164> */
0x48, 0x8b, 0x48, 0x18,                   /*164: mov    0x18(%rax),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*168: mov    %rcx,0x0(%rip)        # 16f <op_exec+0x16f> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*16f: mov    0x0(%rip),%rdi        # 176 <op_exec+0x176> */
0x0f, 0xb7, 0x70, 0x02,                   /*176: movzwl 0x2(%rax),%esi */
0xba, 0x01, 0x00, 0x00, 0x00,             /*17a: mov    $0x1,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*17f: callq  184 <op_exec+0x184> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*184: mov    0x0(%rip),%rax        # 18b <op_exec+0x18b> */
0x0f, 0xb7, 0x40, 0x02,                   /*18b: movzwl 0x2(%rax),%eax */
0x89, 0x43, 0x18,                         /*18f: mov    %eax,0x18(%rbx) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*192: mov    0x0(%rip),%rax        # 199 <op_exec+0x199> */
0x48, 0x8b, 0x40, 0x18,                   /*199: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*19d: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*1a1: mov    %rax,0x0(%rip)        # 1a8 <op_exec+0x1a8> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1a8: mov    0x0(%rip),%rax        # 1af <op_exec+0x1af> */
0x48, 0x8b, 0x50, 0x08,                   /*1af: mov    0x8(%rax),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*1b3: mov    %rdx,0x0(%rip)        # 1ba <op_exec+0x1ba> */
0x48, 0x8b, 0x4b, 0x30,                   /*1ba: mov    0x30(%rbx),%rcx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*1be: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1c3: mov    $0x0,%esi */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*1c8: mov    $0x0,%r8d */
0x31, 0xc0,                               /*1ce: xor    %eax,%eax */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1d0: callq  1d5 <op_exec+0x1d5> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1d5: mov    0x0(%rip),%rdi        # 1dc <op_exec+0x1dc> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*1dc: mov    0x0(%rip),%rsi        # 1e3 <op_exec+0x1e3> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1e3: mov    0x0(%rip),%rcx        # 1ea <op_exec+0x1ea> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1ea: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*1ef: jmpq   1f4 <op_exec+0x1f4> */

};
static uint8_t op_exec__rodata[] = {

};


static uint8_t op_method__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_method+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*c: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*f: mov    (%rax,%rcx,8),%rsi */
0xff, 0xc1,                               /*13: inc    %ecx */
0x48, 0x63, 0xc9,                         /*15: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*18: mov    (%rax,%rcx,8),%rcx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1c: mov    0x0(%rip),%rdi        # 23 <op_method+0x23> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*23: mov    0x0(%rip),%rax        # 2a <op_method+0x2a> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2a: mov    $0x0,%edx */
0x8b, 0x14, 0x90,                         /*2f: mov    (%rax,%rdx,4),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*32: callq  37 <op_method+0x37> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*37: mov    0x0(%rip),%eax        # 3d <op_method+0x3d> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*3d: mov    0x0(%rip),%rcx        # 44 <op_method+0x44> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*44: mov    %eax,0xdc(%rcx) */

};
static uint8_t op_method__rodata[] = {

};


static uint8_t op_sclass__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rbx        # 8 <op_sclass+0x8> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*8: mov    0x0(%rip),%rdi        # f <op_sclass+0xf> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%eax */
0x48, 0x8b, 0x34, 0xc3,                   /*14: mov    (%rbx,%rax,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*18: callq  1d <op_sclass+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0x89, 0x04, 0xcb,                   /*22: mov    %rax,(%rbx,%rcx,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*26: mov    0x0(%rip),%eax        # 2c <op_sclass+0x2c> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*2c: mov    0x0(%rip),%rcx        # 33 <op_sclass+0x33> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*33: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*39: pop    %rbx */

};
static uint8_t op_sclass__rodata[] = {

};


static uint8_t op_tclass__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x56,                               /*e: push   %r14 */
0x53,                                     /*10: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*11: mov    0x0(%rip),%rbx        # 18 <op_tclass+0x18> */
0x48, 0x8b, 0x43, 0x18,                   /*18: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1c: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x50, 0x48,                   /*20: mov    0x48(%rax),%rdx */
0x48, 0x85, 0xd2,                         /*24: test   %rdx,%rdx */
0x74, 0x25,                               /*27: je     4e <op_tclass+0x4e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*29: mov    0x0(%rip),%rax        # 30 <op_tclass+0x30> */
0x8b, 0x32,                               /*30: mov    (%rdx),%esi */
0x40, 0x0f, 0xb6, 0xfe,                   /*32: movzbl %sil,%edi */
0xb9, 0x04, 0x00, 0x00, 0x00,             /*36: mov    $0x4,%ecx */
0x83, 0xff, 0x05,                         /*3b: cmp    $0x5,%edi */
0x77, 0x79,                               /*3e: ja     b9 <op_tclass+0xb9> */
0xff, 0x24, 0xfd, 0x00, 0x00, 0x00, 0x00, /*40: jmpq   *0x0(,%rdi,8) */
0xb9, 0x02, 0x00, 0x00, 0x00,             /*47: mov    $0x2,%ecx */
0xeb, 0x70,                               /*4c: jmp    be <op_tclass+0xbe> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*4e: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*53: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*56: callq  5b <op_tclass+0x5b> */
0x49, 0x89, 0xc6,                         /*5b: mov    %rax,%r14 */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5e: mov    $0x0,%esi */
0xba, 0x19, 0x00, 0x00, 0x00,             /*63: mov    $0x19,%edx */
0x48, 0x89, 0xdf,                         /*68: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6b: callq  70 <op_tclass+0x70> */
0x48, 0x89, 0xdf,                         /*70: mov    %rbx,%rdi */
0x4c, 0x89, 0xf6,                         /*73: mov    %r14,%rsi */
0x48, 0x89, 0xc2,                         /*76: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*79: callq  7e <op_tclass+0x7e> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*7e: mov    0x0(%rip),%rcx        # 85 <op_tclass+0x85> */
0x48, 0x89, 0x41, 0x28,                   /*85: mov    %rax,0x28(%rcx) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*89: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*8e: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*93: callq  98 <op_tclass+0x98> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*98: mov    0x0(%rip),%rdi        # 9f <op_tclass+0x9f> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*9f: mov    0x0(%rip),%rsi        # a6 <op_tclass+0xa6> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*a6: mov    0x0(%rip),%rcx        # ad <op_tclass+0xad> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*ad: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*b2: jmpq   b7 <op_tclass+0xb7> */
0xeb, 0x0e,                               /*b7: jmp    c7 <op_tclass+0xc7> */
0x89, 0x32,                               /*b9: mov    %esi,(%rdx) */
0x48, 0x89, 0xd1,                         /*bb: mov    %rdx,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*be: mov    $0x0,%edx */
0x48, 0x89, 0x0c, 0xd0,                   /*c3: mov    %rcx,(%rax,%rdx,8) */
0x5b,                                     /*c7: pop    %rbx */
0x41, 0x5e,                               /*c8: pop    %r14 */
0xeb, 0x07,                               /*ca: jmp    d3 <op_tclass+0xd3> */
0xb9, 0x06, 0x00, 0x00, 0x00,             /*cc: mov    $0x6,%ecx */
0xeb, 0xeb,                               /*d1: jmp    be <op_tclass+0xbe> */

};
static uint8_t op_tclass__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};


static uint8_t op_debug__text[] = {
0xbf, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%ecx */
0x31, 0xc0,                               /*14: xor    %eax,%eax */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*16: callq  1b <op_debug+0x1b> */

};
static uint8_t op_debug__rodata[] = {

};


static uint8_t op_stop__text[] = {
0xbf, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%edi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*5: callq  a <op_stop+0xa> */

};
static uint8_t op_stop__rodata[] = {

};


static uint8_t op_err__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x56,                               /*e: push   %r14 */
0x53,                                     /*10: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*11: mov    0x0(%rip),%rbx        # 18 <op_err+0x18> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rax        # 1f <op_err+0x1f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*24: mov    (%rax,%rcx,8),%rsi */
0x48, 0x89, 0xdf,                         /*28: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2b: callq  30 <op_err+0x30> */
0x49, 0x89, 0xc6,                         /*30: mov    %rax,%r14 */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*33: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*38: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3b: callq  40 <op_err+0x40> */
0x48, 0x89, 0xdf,                         /*40: mov    %rbx,%rdi */
0x48, 0x89, 0xc6,                         /*43: mov    %rax,%rsi */
0x4c, 0x89, 0xf2,                         /*46: mov    %r14,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*49: callq  4e <op_err+0x4e> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*4e: mov    0x0(%rip),%rcx        # 55 <op_err+0x55> */
0x48, 0x89, 0x41, 0x28,                   /*55: mov    %rax,0x28(%rcx) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*59: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5e: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*63: callq  68 <op_err+0x68> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*68: mov    0x0(%rip),%rdi        # 6f <op_err+0x6f> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*6f: mov    0x0(%rip),%rsi        # 76 <op_err+0x76> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*76: mov    0x0(%rip),%rcx        # 7d <op_err+0x7d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7d: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*82: jmpq   87 <op_err+0x87> */
0x5b,                                     /*87: pop    %rbx */
0x41, 0x5e,                               /*88: pop    %r14 */

};
static uint8_t op_err__rodata[] = {

};

typedef void (*jit_link_func_t)(uint8_t *text, uint8_t *rodata, mrb_code *pc);
extern jit_link_func_t link_funcs[];
const uint8_t* ops_text[78];
const uint8_t* ops_rodata[78];
const char *op_names[78];

static size_t op_sizes_text[] = {
  sizeof(op_nop__text), /* 0 */
  sizeof(op_move__text), /* 25 */
  sizeof(op_loadl__text), /* 32 */
  sizeof(op_loadi__text), /* 41 */
  sizeof(op_loadsym__text), /* 42 */
  sizeof(op_loadnil__text), /* 20 */
  sizeof(op_loadself__text), /* 19 */
  sizeof(op_loadt__text), /* 20 */
  sizeof(op_loadf__text), /* 20 */
  sizeof(op_getglobal__text), /* 45 */
  sizeof(op_setglobal__text), /* 43 */
  sizeof(op_getspecial__text), /* 35 */
  sizeof(op_setspecial__text), /* 33 */
  sizeof(op_getiv__text), /* 45 */
  sizeof(op_setiv__text), /* 43 */
  sizeof(op_getcv__text), /* 91 */
  sizeof(op_setcv__text), /* 43 */
  sizeof(op_getconst__text), /* 104 */
  sizeof(op_setconst__text), /* 43 */
  sizeof(op_getmcnst__text), /* 120 */
  sizeof(op_setmcnst__text), /* 56 */
  sizeof(op_getupvar__text), /* 111 */
  sizeof(op_setupvar__text), /* 114 */
  sizeof(op_jmp__text), /* 0 */
  sizeof(op_jmpif__text), /* 24 */
  sizeof(op_jmpnot__text), /* 24 */
  sizeof(op_onerr__text), /* 143 */
  sizeof(op_rescue__text), /* 276 */
  sizeof(op_poperr__text), /* 38 */
  sizeof(op_raise__text), /* 87 */
  sizeof(op_epush__text), /* 186 */
  sizeof(op_epop__text), /* 102 */
  sizeof(op_send__text), /* 82 */
  sizeof(op_sendb__text), /* 82 */
  sizeof(op_fsend__text), /* 0 */
  sizeof(op_call__text), /* 555 */
  sizeof(op_super__text), /* 937 */
  sizeof(op_argary__text), /* 790 */
  sizeof(op_enter__text), /* 2205 */
  sizeof(op_enter_method_m__text), /* 546 */
  sizeof(op_karg__text), /* 0 */
  sizeof(op_kdict__text), /* 0 */
  sizeof(op_return__text), /* 85 */
  sizeof(op_break__text), /* 88 */
  sizeof(op_tailcall__text), /* 898 */
  sizeof(op_blkpush__text), /* 252 */
  sizeof(op_add__text), /* 456 */
  sizeof(op_addi__text), /* 263 */
  sizeof(op_sub__text), /* 390 */
  sizeof(op_subi__text), /* 257 */
  sizeof(op_mul__text), /* 431 */
  sizeof(op_div__text), /* 352 */
  sizeof(op_eq__text), /* 406 */
  sizeof(op_lt__text), /* 371 */
  sizeof(op_le__text), /* 371 */
  sizeof(op_gt__text), /* 371 */
  sizeof(op_ge__text), /* 371 */
  sizeof(op_array__text), /* 63 */
  sizeof(op_arycat__text), /* 76 */
  sizeof(op_arypush__text), /* 37 */
  sizeof(op_aref__text), /* 123 */
  sizeof(op_aset__text), /* 42 */
  sizeof(op_apost__text), /* 496 */
  sizeof(op_string__text), /* 65 */
  sizeof(op_strcat__text), /* 37 */
  sizeof(op_hash__text), /* 165 */
  sizeof(op_lambda__text), /* 25 */
  sizeof(op_range__text), /* 76 */
  sizeof(op_oclass__text), /* 86 */
  sizeof(op_class__text), /* 234 */
  sizeof(op_module__text), /* 222 */
  sizeof(op_exec__text), /* 500 */
  sizeof(op_method__text), /* 74 */
  sizeof(op_sclass__text), /* 58 */
  sizeof(op_tclass__text), /* 211 */
  sizeof(op_debug__text), /* 27 */
  sizeof(op_stop__text), /* 10 */
  sizeof(op_err__text), /* 138 */

};
static size_t op_sizes_rodata[] = {
  sizeof(op_nop__rodata), /* 0 */
  sizeof(op_move__rodata), /* 0 */
  sizeof(op_loadl__rodata), /* 0 */
  sizeof(op_loadi__rodata), /* 0 */
  sizeof(op_loadsym__rodata), /* 0 */
  sizeof(op_loadnil__rodata), /* 0 */
  sizeof(op_loadself__rodata), /* 0 */
  sizeof(op_loadt__rodata), /* 0 */
  sizeof(op_loadf__rodata), /* 0 */
  sizeof(op_getglobal__rodata), /* 0 */
  sizeof(op_setglobal__rodata), /* 0 */
  sizeof(op_getspecial__rodata), /* 0 */
  sizeof(op_setspecial__rodata), /* 0 */
  sizeof(op_getiv__rodata), /* 0 */
  sizeof(op_setiv__rodata), /* 0 */
  sizeof(op_getcv__rodata), /* 0 */
  sizeof(op_setcv__rodata), /* 0 */
  sizeof(op_getconst__rodata), /* 0 */
  sizeof(op_setconst__rodata), /* 0 */
  sizeof(op_getmcnst__rodata), /* 0 */
  sizeof(op_setmcnst__rodata), /* 0 */
  sizeof(op_getupvar__rodata), /* 0 */
  sizeof(op_setupvar__rodata), /* 0 */
  sizeof(op_jmp__rodata), /* 0 */
  sizeof(op_jmpif__rodata), /* 0 */
  sizeof(op_jmpnot__rodata), /* 0 */
  sizeof(op_onerr__rodata), /* 0 */
  sizeof(op_rescue__rodata), /* 48 */
  sizeof(op_poperr__rodata), /* 0 */
  sizeof(op_raise__rodata), /* 0 */
  sizeof(op_epush__rodata), /* 0 */
  sizeof(op_epop__rodata), /* 0 */
  sizeof(op_send__rodata), /* 0 */
  sizeof(op_sendb__rodata), /* 0 */
  sizeof(op_fsend__rodata), /* 0 */
  sizeof(op_call__rodata), /* 0 */
  sizeof(op_super__rodata), /* 0 */
  sizeof(op_argary__rodata), /* 0 */
  sizeof(op_enter__rodata), /* 56 */
  sizeof(op_enter_method_m__rodata), /* 28 */
  sizeof(op_karg__rodata), /* 0 */
  sizeof(op_kdict__rodata), /* 0 */
  sizeof(op_return__rodata), /* 0 */
  sizeof(op_break__rodata), /* 0 */
  sizeof(op_tailcall__rodata), /* 120 */
  sizeof(op_blkpush__rodata), /* 0 */
  sizeof(op_add__rodata), /* 28 */
  sizeof(op_addi__rodata), /* 0 */
  sizeof(op_sub__rodata), /* 28 */
  sizeof(op_subi__rodata), /* 0 */
  sizeof(op_mul__rodata), /* 28 */
  sizeof(op_div__rodata), /* 28 */
  sizeof(op_eq__rodata), /* 28 */
  sizeof(op_lt__rodata), /* 28 */
  sizeof(op_le__rodata), /* 28 */
  sizeof(op_gt__rodata), /* 28 */
  sizeof(op_ge__rodata), /* 28 */
  sizeof(op_array__rodata), /* 0 */
  sizeof(op_arycat__rodata), /* 0 */
  sizeof(op_arypush__rodata), /* 0 */
  sizeof(op_aref__rodata), /* 0 */
  sizeof(op_aset__rodata), /* 0 */
  sizeof(op_apost__rodata), /* 0 */
  sizeof(op_string__rodata), /* 0 */
  sizeof(op_strcat__rodata), /* 0 */
  sizeof(op_hash__rodata), /* 0 */
  sizeof(op_lambda__rodata), /* 0 */
  sizeof(op_range__rodata), /* 0 */
  sizeof(op_oclass__rodata), /* 48 */
  sizeof(op_class__rodata), /* 96 */
  sizeof(op_module__rodata), /* 96 */
  sizeof(op_exec__rodata), /* 0 */
  sizeof(op_method__rodata), /* 0 */
  sizeof(op_sclass__rodata), /* 0 */
  sizeof(op_tclass__rodata), /* 48 */
  sizeof(op_debug__rodata), /* 0 */
  sizeof(op_stop__rodata), /* 0 */
  sizeof(op_err__rodata), /* 0 */

};
static int8_t op_algn_text[] = {
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,

};
static int8_t op_algn_rodata[] = {
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  8,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  8,
  16,
  -1,
  -1,
  -1,
  -1,
  8,
  -1,
  16,
  -1,
  16,
  -1,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  8,
  8,
  8,
  -1,
  -1,
  -1,
  8,
  -1,
  -1,
  -1,

};

extern void init_linker();
void init_ops() {
  static int init = 0;
  if(init == 0) {
    init = 1;
    init_linker();
    ops_text[0] = op_nop__text;
    ops_rodata[0] = op_nop__rodata;
    op_names[0] = "op_nop";
    ops_text[1] = op_move__text;
    ops_rodata[1] = op_move__rodata;
    op_names[1] = "op_move";
    ops_text[2] = op_loadl__text;
    ops_rodata[2] = op_loadl__rodata;
    op_names[2] = "op_loadl";
    ops_text[3] = op_loadi__text;
    ops_rodata[3] = op_loadi__rodata;
    op_names[3] = "op_loadi";
    ops_text[4] = op_loadsym__text;
    ops_rodata[4] = op_loadsym__rodata;
    op_names[4] = "op_loadsym";
    ops_text[5] = op_loadnil__text;
    ops_rodata[5] = op_loadnil__rodata;
    op_names[5] = "op_loadnil";
    ops_text[6] = op_loadself__text;
    ops_rodata[6] = op_loadself__rodata;
    op_names[6] = "op_loadself";
    ops_text[7] = op_loadt__text;
    ops_rodata[7] = op_loadt__rodata;
    op_names[7] = "op_loadt";
    ops_text[8] = op_loadf__text;
    ops_rodata[8] = op_loadf__rodata;
    op_names[8] = "op_loadf";
    ops_text[9] = op_getglobal__text;
    ops_rodata[9] = op_getglobal__rodata;
    op_names[9] = "op_getglobal";
    ops_text[10] = op_setglobal__text;
    ops_rodata[10] = op_setglobal__rodata;
    op_names[10] = "op_setglobal";
    ops_text[11] = op_getspecial__text;
    ops_rodata[11] = op_getspecial__rodata;
    op_names[11] = "op_getspecial";
    ops_text[12] = op_setspecial__text;
    ops_rodata[12] = op_setspecial__rodata;
    op_names[12] = "op_setspecial";
    ops_text[13] = op_getiv__text;
    ops_rodata[13] = op_getiv__rodata;
    op_names[13] = "op_getiv";
    ops_text[14] = op_setiv__text;
    ops_rodata[14] = op_setiv__rodata;
    op_names[14] = "op_setiv";
    ops_text[15] = op_getcv__text;
    ops_rodata[15] = op_getcv__rodata;
    op_names[15] = "op_getcv";
    ops_text[16] = op_setcv__text;
    ops_rodata[16] = op_setcv__rodata;
    op_names[16] = "op_setcv";
    ops_text[17] = op_getconst__text;
    ops_rodata[17] = op_getconst__rodata;
    op_names[17] = "op_getconst";
    ops_text[18] = op_setconst__text;
    ops_rodata[18] = op_setconst__rodata;
    op_names[18] = "op_setconst";
    ops_text[19] = op_getmcnst__text;
    ops_rodata[19] = op_getmcnst__rodata;
    op_names[19] = "op_getmcnst";
    ops_text[20] = op_setmcnst__text;
    ops_rodata[20] = op_setmcnst__rodata;
    op_names[20] = "op_setmcnst";
    ops_text[21] = op_getupvar__text;
    ops_rodata[21] = op_getupvar__rodata;
    op_names[21] = "op_getupvar";
    ops_text[22] = op_setupvar__text;
    ops_rodata[22] = op_setupvar__rodata;
    op_names[22] = "op_setupvar";
    ops_text[23] = op_jmp__text;
    ops_rodata[23] = op_jmp__rodata;
    op_names[23] = "op_jmp";
    ops_text[24] = op_jmpif__text;
    ops_rodata[24] = op_jmpif__rodata;
    op_names[24] = "op_jmpif";
    ops_text[25] = op_jmpnot__text;
    ops_rodata[25] = op_jmpnot__rodata;
    op_names[25] = "op_jmpnot";
    ops_text[26] = op_onerr__text;
    ops_rodata[26] = op_onerr__rodata;
    op_names[26] = "op_onerr";
    ops_text[27] = op_rescue__text;
    ops_rodata[27] = op_rescue__rodata;
    op_names[27] = "op_rescue";
    ops_text[28] = op_poperr__text;
    ops_rodata[28] = op_poperr__rodata;
    op_names[28] = "op_poperr";
    ops_text[29] = op_raise__text;
    ops_rodata[29] = op_raise__rodata;
    op_names[29] = "op_raise";
    ops_text[30] = op_epush__text;
    ops_rodata[30] = op_epush__rodata;
    op_names[30] = "op_epush";
    ops_text[31] = op_epop__text;
    ops_rodata[31] = op_epop__rodata;
    op_names[31] = "op_epop";
    ops_text[32] = op_send__text;
    ops_rodata[32] = op_send__rodata;
    op_names[32] = "op_send";
    ops_text[33] = op_sendb__text;
    ops_rodata[33] = op_sendb__rodata;
    op_names[33] = "op_sendb";
    ops_text[34] = op_fsend__text;
    ops_rodata[34] = op_fsend__rodata;
    op_names[34] = "op_fsend";
    ops_text[35] = op_call__text;
    ops_rodata[35] = op_call__rodata;
    op_names[35] = "op_call";
    ops_text[36] = op_super__text;
    ops_rodata[36] = op_super__rodata;
    op_names[36] = "op_super";
    ops_text[37] = op_argary__text;
    ops_rodata[37] = op_argary__rodata;
    op_names[37] = "op_argary";
    ops_text[38] = op_enter__text;
    ops_rodata[38] = op_enter__rodata;
    op_names[38] = "op_enter";
    ops_text[39] = op_enter_method_m__text;
    ops_rodata[39] = op_enter_method_m__rodata;
    op_names[39] = "op_enter_method_m";
    ops_text[40] = op_karg__text;
    ops_rodata[40] = op_karg__rodata;
    op_names[40] = "op_karg";
    ops_text[41] = op_kdict__text;
    ops_rodata[41] = op_kdict__rodata;
    op_names[41] = "op_kdict";
    ops_text[42] = op_return__text;
    ops_rodata[42] = op_return__rodata;
    op_names[42] = "op_return";
    ops_text[43] = op_break__text;
    ops_rodata[43] = op_break__rodata;
    op_names[43] = "op_break";
    ops_text[44] = op_tailcall__text;
    ops_rodata[44] = op_tailcall__rodata;
    op_names[44] = "op_tailcall";
    ops_text[45] = op_blkpush__text;
    ops_rodata[45] = op_blkpush__rodata;
    op_names[45] = "op_blkpush";
    ops_text[46] = op_add__text;
    ops_rodata[46] = op_add__rodata;
    op_names[46] = "op_add";
    ops_text[47] = op_addi__text;
    ops_rodata[47] = op_addi__rodata;
    op_names[47] = "op_addi";
    ops_text[48] = op_sub__text;
    ops_rodata[48] = op_sub__rodata;
    op_names[48] = "op_sub";
    ops_text[49] = op_subi__text;
    ops_rodata[49] = op_subi__rodata;
    op_names[49] = "op_subi";
    ops_text[50] = op_mul__text;
    ops_rodata[50] = op_mul__rodata;
    op_names[50] = "op_mul";
    ops_text[51] = op_div__text;
    ops_rodata[51] = op_div__rodata;
    op_names[51] = "op_div";
    ops_text[52] = op_eq__text;
    ops_rodata[52] = op_eq__rodata;
    op_names[52] = "op_eq";
    ops_text[53] = op_lt__text;
    ops_rodata[53] = op_lt__rodata;
    op_names[53] = "op_lt";
    ops_text[54] = op_le__text;
    ops_rodata[54] = op_le__rodata;
    op_names[54] = "op_le";
    ops_text[55] = op_gt__text;
    ops_rodata[55] = op_gt__rodata;
    op_names[55] = "op_gt";
    ops_text[56] = op_ge__text;
    ops_rodata[56] = op_ge__rodata;
    op_names[56] = "op_ge";
    ops_text[57] = op_array__text;
    ops_rodata[57] = op_array__rodata;
    op_names[57] = "op_array";
    ops_text[58] = op_arycat__text;
    ops_rodata[58] = op_arycat__rodata;
    op_names[58] = "op_arycat";
    ops_text[59] = op_arypush__text;
    ops_rodata[59] = op_arypush__rodata;
    op_names[59] = "op_arypush";
    ops_text[60] = op_aref__text;
    ops_rodata[60] = op_aref__rodata;
    op_names[60] = "op_aref";
    ops_text[61] = op_aset__text;
    ops_rodata[61] = op_aset__rodata;
    op_names[61] = "op_aset";
    ops_text[62] = op_apost__text;
    ops_rodata[62] = op_apost__rodata;
    op_names[62] = "op_apost";
    ops_text[63] = op_string__text;
    ops_rodata[63] = op_string__rodata;
    op_names[63] = "op_string";
    ops_text[64] = op_strcat__text;
    ops_rodata[64] = op_strcat__rodata;
    op_names[64] = "op_strcat";
    ops_text[65] = op_hash__text;
    ops_rodata[65] = op_hash__rodata;
    op_names[65] = "op_hash";
    ops_text[66] = op_lambda__text;
    ops_rodata[66] = op_lambda__rodata;
    op_names[66] = "op_lambda";
    ops_text[67] = op_range__text;
    ops_rodata[67] = op_range__rodata;
    op_names[67] = "op_range";
    ops_text[68] = op_oclass__text;
    ops_rodata[68] = op_oclass__rodata;
    op_names[68] = "op_oclass";
    ops_text[69] = op_class__text;
    ops_rodata[69] = op_class__rodata;
    op_names[69] = "op_class";
    ops_text[70] = op_module__text;
    ops_rodata[70] = op_module__rodata;
    op_names[70] = "op_module";
    ops_text[71] = op_exec__text;
    ops_rodata[71] = op_exec__rodata;
    op_names[71] = "op_exec";
    ops_text[72] = op_method__text;
    ops_rodata[72] = op_method__rodata;
    op_names[72] = "op_method";
    ops_text[73] = op_sclass__text;
    ops_rodata[73] = op_sclass__rodata;
    op_names[73] = "op_sclass";
    ops_text[74] = op_tclass__text;
    ops_rodata[74] = op_tclass__rodata;
    op_names[74] = "op_tclass";
    ops_text[75] = op_debug__text;
    ops_rodata[75] = op_debug__rodata;
    op_names[75] = "op_debug";
    ops_text[76] = op_stop__text;
    ops_rodata[76] = op_stop__rodata;
    op_names[76] = "op_stop";
    ops_text[77] = op_err__text;
    ops_rodata[77] = op_err__rodata;
    op_names[77] = "op_err";
  }
}

uint8_t *jit_return(uint8_t *b) {
  *b++ = 0xc3;
  return b;
}
uint8_t *jit_jump(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 235;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *b++ = 233;
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_if(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 116;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31729;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_not(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 117;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31473;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
