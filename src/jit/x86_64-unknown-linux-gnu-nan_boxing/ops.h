
static uint8_t op_nop__text[] = {

};
static uint8_t op_nop__rodata[] = {

};


static uint8_t op_move__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_move+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%edx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*11: movsd  (%rax,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xd0,             /*16: movsd  %xmm0,(%rax,%rdx,8) */

};
static uint8_t op_move__rodata[] = {

};


static uint8_t op_loadl__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadl+0x7> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rcx        # e <op_loadl+0xe> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*13: mov    $0x0,%esi */
0xf2, 0x0f, 0x10, 0x04, 0xd1,             /*18: movsd  (%rcx,%rdx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xf0,             /*1d: movsd  %xmm0,(%rax,%rsi,8) */

};
static uint8_t op_loadl__rodata[] = {

};


static uint8_t op_loadi__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadi+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*c: mov    $0x0,%edx */
0x89, 0x14, 0xc8,                         /*11: mov    %edx,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*14: mov    0x0(%rip),%rax        # 1b <op_loadi+0x1b> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x00, 0xf1, 0xff,/*1b: movl   $0xfff10000,0x4(%rax,%rcx,8) */

};
static uint8_t op_loadi__rodata[] = {

};


static uint8_t op_loadsym__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadsym+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x8b, 0x04, 0x88,                         /*c: mov    (%rax,%rcx,4),%eax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rcx        # 16 <op_loadsym+0x16> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%edx */
0x89, 0x04, 0xd1,                         /*1b: mov    %eax,(%rcx,%rdx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1e: mov    0x0(%rip),%rax        # 25 <op_loadsym+0x25> */
0xc7, 0x44, 0xd0, 0x04, 0x00, 0x40, 0xf1, 0xff,/*25: movl   $0xfff14000,0x4(%rax,%rdx,8) */

};
static uint8_t op_loadsym__rodata[] = {

};


static uint8_t op_loadnil__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadnil+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00, /*c: movl   $0x0,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rax        # 1a <op_loadnil+0x1a> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x40, 0xf0, 0xff,/*1a: movl   $0xfff04000,0x4(%rax,%rcx,8) */

};
static uint8_t op_loadnil__rodata[] = {

};


static uint8_t op_loadself__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadself+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0xf2, 0x0f, 0x10, 0x00,                   /*c: movsd  (%rax),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*10: movsd  %xmm0,(%rax,%rcx,8) */

};
static uint8_t op_loadself__rodata[] = {

};


static uint8_t op_loadt__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadt+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0xc7, 0x04, 0xc8, 0x01, 0x00, 0x00, 0x00, /*c: movl   $0x1,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rax        # 1a <op_loadt+0x1a> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0xc0, 0xf0, 0xff,/*1a: movl   $0xfff0c000,0x4(%rax,%rcx,8) */

};
static uint8_t op_loadt__rodata[] = {

};


static uint8_t op_loadf__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_loadf+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0xc7, 0x04, 0xc8, 0x01, 0x00, 0x00, 0x00, /*c: movl   $0x1,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rax        # 1a <op_loadf+0x1a> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x40, 0xf0, 0xff,/*1a: movl   $0xfff04000,0x4(%rax,%rcx,8) */

};
static uint8_t op_loadf__rodata[] = {

};


static uint8_t op_getglobal__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rbx        # a <op_getglobal+0xa> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*a: mov    $0x0,%r14d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rdi        # 17 <op_getglobal+0x17> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*17: mov    0x0(%rip),%rax        # 1e <op_getglobal+0x1e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*23: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_getglobal+0x2b> */
0x4a, 0x89, 0x04, 0xf3,                   /*2b: mov    %rax,(%rbx,%r14,8) */
0x5b,                                     /*2f: pop    %rbx */
0x41, 0x5e,                               /*30: pop    %r14 */

};
static uint8_t op_getglobal__rodata[] = {

};


static uint8_t op_setglobal__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setglobal+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setglobal+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setglobal+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*22: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_setglobal+0x2b> */

};
static uint8_t op_setglobal__rodata[] = {

};


static uint8_t op_getspecial__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rbx        # a <op_getspecial+0xa> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*a: mov    $0x0,%r14d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rdi        # 17 <op_getspecial+0x17> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_getspecial+0x21> */
0x4a, 0x89, 0x04, 0xf3,                   /*21: mov    %rax,(%rbx,%r14,8) */
0x5b,                                     /*25: pop    %rbx */
0x41, 0x5e,                               /*26: pop    %r14 */

};
static uint8_t op_getspecial__rodata[] = {

};


static uint8_t op_setspecial__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setspecial+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setspecial+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*13: mov    (%rax,%rcx,8),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_setspecial+0x21> */

};
static uint8_t op_setspecial__rodata[] = {

};


static uint8_t op_getiv__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rbx        # a <op_getiv+0xa> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*a: mov    $0x0,%r14d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rdi        # 17 <op_getiv+0x17> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*17: mov    0x0(%rip),%rax        # 1e <op_getiv+0x1e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*23: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_getiv+0x2b> */
0x4a, 0x89, 0x04, 0xf3,                   /*2b: mov    %rax,(%rbx,%r14,8) */
0x5b,                                     /*2f: pop    %rbx */
0x41, 0x5e,                               /*30: pop    %r14 */

};
static uint8_t op_getiv__rodata[] = {

};


static uint8_t op_setiv__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setiv+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setiv+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setiv+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*22: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_setiv+0x2b> */

};
static uint8_t op_setiv__rodata[] = {

};


static uint8_t op_getcv__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rax        # a <op_getcv+0xa> */
0x48, 0x8b, 0x40, 0x18,                   /*a: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*e: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*12: movq   $0x0,0x38(%rax) */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1a: mov    0x0(%rip),%rbx        # 21 <op_getcv+0x21> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*21: mov    $0x0,%r14d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*27: mov    0x0(%rip),%rdi        # 2e <op_getcv+0x2e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*2e: mov    0x0(%rip),%rax        # 35 <op_getcv+0x35> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*35: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*3a: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3d: callq  42 <op_getcv+0x42> */
0x4a, 0x89, 0x04, 0xf3,                   /*42: mov    %rax,(%rbx,%r14,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*46: mov    0x0(%rip),%rax        # 4d <op_getcv+0x4d> */
0x48, 0x8b, 0x40, 0x18,                   /*4d: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*51: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*55: movq   $0x0,0x38(%rax) */
0x5b,                                     /*5d: pop    %rbx */
0x41, 0x5e,                               /*5e: pop    %r14 */

};
static uint8_t op_getcv__rodata[] = {

};


static uint8_t op_setcv__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setcv+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setcv+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setcv+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*22: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_setcv+0x2b> */

};
static uint8_t op_setcv__rodata[] = {

};


static uint8_t op_getconst__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_getconst+0x7> */
0x48, 0x8b, 0x40, 0x18,                   /*7: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*b: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*f: movq   $0x0,0x38(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*17: mov    0x0(%rip),%rdi        # 1e <op_getconst+0x1e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1e: mov    0x0(%rip),%rax        # 25 <op_getconst+0x25> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*25: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*2a: mov    (%rax,%rcx,4),%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2d: callq  32 <op_getconst+0x32> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*32: mov    0x0(%rip),%rcx        # 39 <op_getconst+0x39> */
0x48, 0x8b, 0x49, 0x18,                   /*39: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*3d: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*41: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*49: mov    0x0(%rip),%rcx        # 50 <op_getconst+0x50> */
0x48, 0x8b, 0x49, 0x18,                   /*50: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*54: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*58: mov    %rcx,0x0(%rip)        # 5f <op_getconst+0x5f> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5f: mov    $0x0,%edx */
0x48, 0x89, 0x04, 0xd1,                   /*64: mov    %rax,(%rcx,%rdx,8) */

};
static uint8_t op_getconst__rodata[] = {

};


static uint8_t op_setconst__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setconst+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setconst+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x8b, 0x34, 0x88,                         /*13: mov    (%rax,%rcx,4),%esi */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rax        # 1d <op_setconst+0x1d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*22: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*26: callq  2b <op_setconst+0x2b> */

};
static uint8_t op_setconst__rodata[] = {

};


static uint8_t op_getmcnst__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rax        # 8 <op_getmcnst+0x8> */
0x48, 0x8b, 0x40, 0x18,                   /*8: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*c: mov    0x20(%rax),%rax */
0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*10: movq   $0x0,0x38(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rdi        # 1f <op_getmcnst+0x1f> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1f: mov    0x0(%rip),%rax        # 26 <op_getmcnst+0x26> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*26: mov    0x0(%rip),%rcx        # 2d <op_getmcnst+0x2d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2d: mov    $0x0,%edx */
0x8b, 0x14, 0x91,                         /*32: mov    (%rcx,%rdx,4),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*35: mov    $0x0,%ecx */
0x48, 0x63, 0xd9,                         /*3a: movslq %ecx,%rbx */
0x48, 0x8b, 0x34, 0xd8,                   /*3d: mov    (%rax,%rbx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*41: callq  46 <op_getmcnst+0x46> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*46: mov    0x0(%rip),%rcx        # 4d <op_getmcnst+0x4d> */
0x48, 0x8b, 0x49, 0x18,                   /*4d: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*51: mov    0x20(%rcx),%rcx */
0x48, 0xc7, 0x41, 0x38, 0x00, 0x00, 0x00, 0x00,/*55: movq   $0x0,0x38(%rcx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*5d: mov    0x0(%rip),%rcx        # 64 <op_getmcnst+0x64> */
0x48, 0x8b, 0x49, 0x18,                   /*64: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*68: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*6c: mov    %rcx,0x0(%rip)        # 73 <op_getmcnst+0x73> */
0x48, 0x89, 0x04, 0xd9,                   /*73: mov    %rax,(%rcx,%rbx,8) */
0x5b,                                     /*77: pop    %rbx */

};
static uint8_t op_getmcnst__rodata[] = {

};


static uint8_t op_setmcnst__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_setmcnst+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_setmcnst+0xe> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rcx        # 15 <op_setmcnst+0x15> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%edx */
0x8b, 0x14, 0x91,                         /*1a: mov    (%rcx,%rdx,4),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x8d, 0x71, 0x01,                         /*22: lea    0x1(%rcx),%esi */
0x48, 0x63, 0xf6,                         /*25: movslq %esi,%rsi */
0x48, 0x8b, 0x34, 0xf0,                   /*28: mov    (%rax,%rsi,8),%rsi */
0x48, 0x63, 0xc9,                         /*2c: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*2f: mov    (%rax,%rcx,8),%rcx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*33: callq  38 <op_setmcnst+0x38> */

};
static uint8_t op_setmcnst__rodata[] = {

};


static uint8_t op_getupvar__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_getupvar+0x7> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rcx        # e <op_getupvar+0xe> */
0x48, 0x8b, 0x49, 0x18,                   /*e: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*12: mov    0x20(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*16: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x28,                   /*1a: mov    0x28(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*1e: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*21: sete   %dl */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*24: mov    $0x0,%esi */
0x85, 0xf6,                               /*29: test   %esi,%esi */
0x74, 0x16,                               /*2b: je     43 <op_getupvar+0x43> */
0x0f, 0x1f, 0x00,                         /*2d: nopl   (%rax) */
0xf6, 0xc2, 0x01,                         /*30: test   $0x1,%dl */
0x75, 0x12,                               /*33: jne    47 <op_getupvar+0x47> */
0x48, 0x8b, 0x49, 0x08,                   /*35: mov    0x8(%rcx),%rcx */
0x48, 0x85, 0xc9,                         /*39: test   %rcx,%rcx */
0x0f, 0x94, 0xc2,                         /*3c: sete   %dl */
0xff, 0xce,                               /*3f: dec    %esi */
0x75, 0xed,                               /*41: jne    30 <op_getupvar+0x30> */
0x84, 0xd2,                               /*43: test   %dl,%dl */
0x74, 0x15,                               /*45: je     5c <op_getupvar+0x5c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*47: mov    $0x0,%ecx */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf0, 0xff,/*4c: movabs $0xfff0400000000000,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*56: mov    %rdx,(%rax,%rcx,8) */
0xeb, 0x19,                               /*5a: jmp    75 <op_getupvar+0x75> */
0x48, 0x8b, 0x49, 0x18,                   /*5c: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*60: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*65: movslq %edx,%rdx */
0x48, 0x8b, 0x0c, 0xd1,                   /*68: mov    (%rcx,%rdx,8),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6c: mov    $0x0,%edx */
0x48, 0x89, 0x0c, 0xd0,                   /*71: mov    %rcx,(%rax,%rdx,8) */

};
static uint8_t op_getupvar__rodata[] = {

};


static uint8_t op_setupvar__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_setupvar+0x7> */
0x48, 0x8b, 0x40, 0x18,                   /*7: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*b: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*f: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x70, 0x28,                   /*13: mov    0x28(%rax),%rsi */
0x48, 0x85, 0xf6,                         /*17: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*1a: sete   %al */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x85, 0xc9,                               /*22: test   %ecx,%ecx */
0x74, 0x1c,                               /*24: je     42 <op_setupvar+0x42> */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*26: nopw   %cs:0x0(%rax,%rax,1) */
0xa8, 0x01,                               /*30: test   $0x1,%al */
0x75, 0x40,                               /*32: jne    74 <op_setupvar+0x74> */
0x48, 0x8b, 0x76, 0x08,                   /*34: mov    0x8(%rsi),%rsi */
0x48, 0x85, 0xf6,                         /*38: test   %rsi,%rsi */
0x0f, 0x94, 0xc0,                         /*3b: sete   %al */
0xff, 0xc9,                               /*3e: dec    %ecx */
0x75, 0xee,                               /*40: jne    30 <op_setupvar+0x30> */
0x84, 0xc0,                               /*42: test   %al,%al */
0x75, 0x2e,                               /*44: jne    74 <op_setupvar+0x74> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*46: mov    0x0(%rip),%rax        # 4d <op_setupvar+0x4d> */
0x48, 0x8b, 0x4e, 0x18,                   /*4d: mov    0x18(%rsi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*56: mov    $0x0,%edi */
0x48, 0x63, 0xff,                         /*5b: movslq %edi,%rdi */
0xf2, 0x0f, 0x10, 0x04, 0xd0,             /*5e: movsd  (%rax,%rdx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xf9,             /*63: movsd  %xmm0,(%rcx,%rdi,8) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*68: mov    0x0(%rip),%rdi        # 6f <op_setupvar+0x6f> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6f: callq  74 <op_setupvar+0x74> */

};
static uint8_t op_setupvar__rodata[] = {

};


static uint8_t op_jmp__text[] = {

};
static uint8_t op_jmp__rodata[] = {

};


static uint8_t op_jmpif__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_jmpif+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x8b, 0x44, 0xc8, 0x04,                   /*c: mov    0x4(%rax,%rcx,8),%eax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*10: cmp    $0xfff00001,%eax */
0x72, 0x0a,                               /*15: jb     21 <op_jmpif+0x21> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*17: and    $0xfc000,%eax */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*1c: cmp    $0x4000,%eax */

};
static uint8_t op_jmpif__rodata[] = {

};


static uint8_t op_jmpnot__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_jmpnot+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x8b, 0x44, 0xc8, 0x04,                   /*c: mov    0x4(%rax,%rcx,8),%eax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*10: cmp    $0xfff00001,%eax */
0x72, 0x0a,                               /*15: jb     21 <op_jmpnot+0x21> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*17: and    $0xfc000,%eax */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*1c: cmp    $0x4000,%eax */

};
static uint8_t op_jmpnot__rodata[] = {

};


static uint8_t op_onerr__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_onerr+0x7> */
0x48, 0x8b, 0x40, 0x18,                   /*7: mov    0x18(%rax),%rax */
0x8b, 0x70, 0x40,                         /*b: mov    0x40(%rax),%esi */
0x48, 0x8b, 0x48, 0x20,                   /*e: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x1c,                         /*12: mov    0x1c(%rcx),%edx */
0x39, 0xd6,                               /*15: cmp    %edx,%esi */
0x7f, 0x4d,                               /*17: jg     66 <op_onerr+0x66> */
0x8d, 0x0c, 0x36,                         /*19: lea    (%rsi,%rsi,1),%ecx */
0x85, 0xf6,                               /*1c: test   %esi,%esi */
0xba, 0x10, 0x00, 0x00, 0x00,             /*1e: mov    $0x10,%edx */
0x0f, 0x45, 0xd1,                         /*23: cmovne %ecx,%edx */
0x89, 0x50, 0x40,                         /*26: mov    %edx,0x40(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*29: mov    0x0(%rip),%rdi        # 30 <op_onerr+0x30> */
0x48, 0x8b, 0x47, 0x18,                   /*30: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x38,                   /*34: mov    0x38(%rax),%rsi */
0x48, 0x63, 0x50, 0x40,                   /*38: movslq 0x40(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*3c: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*40: callq  45 <op_onerr+0x45> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*45: mov    0x0(%rip),%rcx        # 4c <op_onerr+0x4c> */
0x48, 0x8b, 0x49, 0x18,                   /*4c: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x38,                   /*50: mov    %rax,0x38(%rcx) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*54: mov    0x0(%rip),%rax        # 5b <op_onerr+0x5b> */
0x48, 0x8b, 0x40, 0x18,                   /*5b: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*5f: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x1c,                         /*63: mov    0x1c(%rcx),%edx */
0x8d, 0x42, 0x01,                         /*66: lea    0x1(%rdx),%eax */
0x89, 0x41, 0x1c,                         /*69: mov    %eax,0x1c(%rcx) */
0x48, 0x63, 0xc2,                         /*6c: movslq %edx,%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*6f: mov    0x0(%rip),%rcx        # 76 <op_onerr+0x76> */
0x48, 0x8b, 0x49, 0x18,                   /*76: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x38,                   /*7a: mov    0x38(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7e: mov    $0x0,%edx */
0x48, 0x8d, 0x14, 0x95, 0x00, 0x00, 0x00, 0x00,/*83: lea    0x0(,%rdx,4),%rdx */
0x48, 0x89, 0x14, 0xc1,                   /*8b: mov    %rdx,(%rcx,%rax,8) */

};
static uint8_t op_onerr__rodata[] = {

};


static uint8_t op_rescue__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_rescue+0x7> */
0x48, 0x8b, 0x40, 0x28,                   /*7: mov    0x28(%rax),%rax */
0x0f, 0xb6, 0x08,                         /*b: movzbl (%rax),%ecx */
0x83, 0xf9, 0x05,                         /*e: cmp    $0x5,%ecx */
0x77, 0x1a,                               /*11: ja     2d <op_rescue+0x2d> */
0x83, 0xf9, 0x01,                         /*13: cmp    $0x1,%ecx */
0x74, 0x15,                               /*16: je     2d <op_rescue+0x2d> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rcx        # 1f <op_rescue+0x1f> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*24: movslq %edx,%rdx */
0x48, 0x89, 0x04, 0xd1,                   /*27: mov    %rax,(%rcx,%rdx,8) */
0xeb, 0x30,                               /*2b: jmp    5d <op_rescue+0x5d> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*2d: mov    0x0(%rip),%rax        # 34 <op_rescue+0x34> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*34: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*39: movslq %ecx,%rcx */
0xc7, 0x04, 0xc8, 0x00, 0x00, 0x00, 0x00, /*3c: movl   $0x0,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*43: mov    0x0(%rip),%rax        # 4a <op_rescue+0x4a> */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*4a: mov    0x0(%rip),%rdx        # 51 <op_rescue+0x51> */
0x48, 0x8b, 0x52, 0x28,                   /*51: mov    0x28(%rdx),%rdx */
0x48, 0xc1, 0xea, 0x02,                   /*55: shr    $0x2,%rdx */
0x48, 0x09, 0x14, 0xc8,                   /*59: or     %rdx,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*5d: mov    0x0(%rip),%rax        # 64 <op_rescue+0x64> */
0x48, 0x8b, 0x40, 0x28,                   /*64: mov    0x28(%rax),%rax */
0x8b, 0x00,                               /*68: mov    (%rax),%eax */
0xc1, 0xe0, 0x0e,                         /*6a: shl    $0xe,%eax */
0x05, 0x00, 0x40, 0x00, 0x00,             /*6d: add    $0x4000,%eax */
0x0d, 0x00, 0x00, 0xf0, 0xff,             /*72: or     $0xfff00000,%eax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*77: mov    0x0(%rip),%rcx        # 7e <op_rescue+0x7e> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*7e: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*83: movslq %edx,%rdx */
0x89, 0x44, 0xd1, 0x04,                   /*86: mov    %eax,0x4(%rcx,%rdx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*8a: mov    0x0(%rip),%rax        # 91 <op_rescue+0x91> */
0x48, 0xc7, 0x40, 0x28, 0x00, 0x00, 0x00, 0x00,/*91: movq   $0x0,0x28(%rax) */

};
static uint8_t op_rescue__rodata[] = {

};


static uint8_t op_poperr__text[] = {
0xb8, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%eax */
0x85, 0xc0,                               /*5: test   %eax,%eax */
0x74, 0x1d,                               /*7: je     26 <op_poperr+0x26> */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*9: nopl   0x0(%rax) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rcx        # 17 <op_poperr+0x17> */
0x48, 0x8b, 0x49, 0x18,                   /*17: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x20,                   /*1b: mov    0x20(%rcx),%rcx */
0xff, 0x49, 0x1c,                         /*1f: decl   0x1c(%rcx) */
0xff, 0xc8,                               /*22: dec    %eax */
0x75, 0xea,                               /*24: jne    10 <op_poperr+0x10> */

};
static uint8_t op_poperr__rodata[] = {

};


static uint8_t op_raise__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_raise+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x8b, 0x04, 0xc8,                   /*1a: mov    (%rax,%rcx,8),%rax */
0x48, 0xc1, 0xe0, 0x02,                   /*1e: shl    $0x2,%rax */
0x48, 0xb9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*22: movabs $0xfffffffffffc,%rcx */
0x48, 0x21, 0xc1,                         /*2c: and    %rax,%rcx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*2f: mov    0x0(%rip),%rax        # 36 <op_raise+0x36> */
0x48, 0x89, 0x48, 0x28,                   /*36: mov    %rcx,0x28(%rax) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*3a: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*3f: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*44: callq  49 <op_raise+0x49> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*49: mov    0x0(%rip),%rdi        # 50 <op_raise+0x50> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*50: mov    0x0(%rip),%rsi        # 57 <op_raise+0x57> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*57: mov    0x0(%rip),%rcx        # 5e <op_raise+0x5e> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5e: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*63: jmpq   68 <op_raise+0x68> */

};
static uint8_t op_raise__rodata[] = {

};


static uint8_t op_epush__text[] = {
0x53,                                     /*0: push   %rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1: mov    0x0(%rip),%rdi        # 8 <op_epush+0x8> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*8: mov    0x0(%rip),%rax        # f <op_epush+0xf> */
0x48, 0x8b, 0x40, 0x20,                   /*f: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*18: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_epush+0x21> */
0x48, 0x89, 0xc3,                         /*21: mov    %rax,%rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*24: mov    0x0(%rip),%rax        # 2b <op_epush+0x2b> */
0x48, 0x8b, 0x40, 0x18,                   /*2b: mov    0x18(%rax),%rax */
0x8b, 0x70, 0x50,                         /*2f: mov    0x50(%rax),%esi */
0x48, 0x8b, 0x48, 0x20,                   /*32: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*36: mov    0x20(%rcx),%edx */
0x39, 0xd6,                               /*39: cmp    %edx,%esi */
0x7f, 0x4d,                               /*3b: jg     8a <op_epush+0x8a> */
0x8d, 0x0c, 0x36,                         /*3d: lea    (%rsi,%rsi,1),%ecx */
0x85, 0xf6,                               /*40: test   %esi,%esi */
0xba, 0x10, 0x00, 0x00, 0x00,             /*42: mov    $0x10,%edx */
0x0f, 0x45, 0xd1,                         /*47: cmovne %ecx,%edx */
0x89, 0x50, 0x50,                         /*4a: mov    %edx,0x50(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*4d: mov    0x0(%rip),%rdi        # 54 <op_epush+0x54> */
0x48, 0x8b, 0x47, 0x18,                   /*54: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*58: mov    0x48(%rax),%rsi */
0x48, 0x63, 0x50, 0x50,                   /*5c: movslq 0x50(%rax),%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*60: shl    $0x3,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*64: callq  69 <op_epush+0x69> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*69: mov    0x0(%rip),%rcx        # 70 <op_epush+0x70> */
0x48, 0x8b, 0x49, 0x18,                   /*70: mov    0x18(%rcx),%rcx */
0x48, 0x89, 0x41, 0x48,                   /*74: mov    %rax,0x48(%rcx) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*78: mov    0x0(%rip),%rax        # 7f <op_epush+0x7f> */
0x48, 0x8b, 0x40, 0x18,                   /*7f: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*83: mov    0x20(%rax),%rcx */
0x8b, 0x51, 0x20,                         /*87: mov    0x20(%rcx),%edx */
0x8d, 0x42, 0x01,                         /*8a: lea    0x1(%rdx),%eax */
0x89, 0x41, 0x20,                         /*8d: mov    %eax,0x20(%rcx) */
0x48, 0x63, 0xc2,                         /*90: movslq %edx,%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*93: mov    0x0(%rip),%rcx        # 9a <op_epush+0x9a> */
0x48, 0x8b, 0x49, 0x18,                   /*9a: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x48,                   /*9e: mov    0x48(%rcx),%rcx */
0x48, 0x89, 0x1c, 0xc1,                   /*a2: mov    %rbx,(%rcx,%rax,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*a6: mov    0x0(%rip),%eax        # ac <op_epush+0xac> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*ac: mov    0x0(%rip),%rcx        # b3 <op_epush+0xb3> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*b3: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*b9: pop    %rbx */

};
static uint8_t op_epush__rodata[] = {

};


static uint8_t op_epop__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x53,                                     /*5: push   %rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*6: mov    $0x0,%eax */
0x85, 0xc0,                               /*b: test   %eax,%eax */
0x7e, 0x51,                               /*d: jle    60 <op_epop+0x60> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rax        # 16 <op_epop+0x16> */
0x48, 0x8b, 0x40, 0x18,                   /*16: mov    0x18(%rax),%rax */
0x4c, 0x8b, 0x70, 0x20,                   /*1a: mov    0x20(%rax),%r14 */
0x41, 0x8b, 0x5e, 0x20,                   /*1e: mov    0x20(%r14),%ebx */
0x31, 0xed,                               /*22: xor    %ebp,%ebp */
0x41, 0xbf, 0x00, 0x00, 0x00, 0x00,       /*24: mov    $0x0,%r15d */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*2a: nopw   0x0(%rax,%rax,1) */
0x41, 0x3b, 0x5e, 0xd0,                   /*30: cmp    -0x30(%r14),%ebx */
0x7e, 0x2a,                               /*34: jle    60 <op_epop+0x60> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*36: mov    0x0(%rip),%rdi        # 3d <op_epop+0x3d> */
0xff, 0xcb,                               /*3d: dec    %ebx */
0x89, 0xde,                               /*3f: mov    %ebx,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*41: callq  46 <op_epop+0x46> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*46: mov    0x0(%rip),%eax        # 4c <op_epop+0x4c> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*4c: mov    0x0(%rip),%rcx        # 53 <op_epop+0x53> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*53: mov    %eax,0xdc(%rcx) */
0xff, 0xc5,                               /*59: inc    %ebp */
0x44, 0x39, 0xfd,                         /*5b: cmp    %r15d,%ebp */
0x7c, 0xd0,                               /*5e: jl     30 <op_epop+0x30> */
0x5b,                                     /*60: pop    %rbx */
0x41, 0x5e,                               /*61: pop    %r14 */
0x41, 0x5f,                               /*63: pop    %r15 */
0x5d,                                     /*65: pop    %rbp */

};
static uint8_t op_epop__rodata[] = {

};


static uint8_t op_send__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*13: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*22: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*28: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_send+0x33> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*33: mov    0x0(%rip),%rdi        # 3a <op_send+0x3a> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3a: mov    0x0(%rip),%rsi        # 41 <op_send+0x41> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*41: mov    0x0(%rip),%rcx        # 48 <op_send+0x48> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*48: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*4d: jmpq   52 <op_send+0x52> */

};
static uint8_t op_send__rodata[] = {

};


static uint8_t op_sendb__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%edi */
0xbe, 0x21, 0x00, 0x00, 0x00,             /*13: mov    $0x21,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*18: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*22: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*28: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e: callq  33 <op_sendb+0x33> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*33: mov    0x0(%rip),%rdi        # 3a <op_sendb+0x3a> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3a: mov    0x0(%rip),%rsi        # 41 <op_sendb+0x41> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*41: mov    0x0(%rip),%rcx        # 48 <op_sendb+0x48> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*48: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*4d: jmpq   52 <op_sendb+0x52> */

};
static uint8_t op_sendb__rodata[] = {

};


static uint8_t op_fsend__text[] = {

};
static uint8_t op_fsend__rodata[] = {

};


static uint8_t op_call__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x53,                                     /*e: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rax        # 16 <op_call+0x16> */
0x48, 0x8b, 0x40, 0x18,                   /*16: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*1a: mov    0x8(%rax),%rcx */
0x48, 0x8b, 0x40, 0x20,                   /*1e: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x31,                         /*22: mov    (%rcx),%rsi */
0x48, 0x8d, 0x0c, 0xb5, 0x00, 0x00, 0x00, 0x00,/*25: lea    0x0(,%rsi,4),%rcx */
0x48, 0xbb, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*2d: movabs $0xfffffffffffc,%rbx */
0x48, 0x21, 0xcb,                         /*37: and    %rcx,%rbx */
0x48, 0x8b, 0x4b, 0x20,                   /*3a: mov    0x20(%rbx),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*3e: mov    %rcx,0x48(%rax) */
0x48, 0x89, 0x58, 0x08,                   /*42: mov    %rbx,0x8(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*46: mov    0x28(%rbx),%rcx */
0x48, 0x85, 0xc9,                         /*4a: test   %rcx,%rcx */
0x74, 0x27,                               /*4d: je     76 <op_call+0x76> */
0x8b, 0x51, 0x20,                         /*4f: mov    0x20(%rcx),%edx */
0x85, 0xd2,                               /*52: test   %edx,%edx */
0x74, 0x06,                               /*54: je     5c <op_call+0x5c> */
0x89, 0x10,                               /*56: mov    %edx,(%rax) */
0x48, 0x8b, 0x4b, 0x28,                   /*58: mov    0x28(%rbx),%rcx */
0x48, 0x83, 0x79, 0x18, 0x00,             /*5c: cmpq   $0x0,0x18(%rcx) */
0x75, 0x13,                               /*61: jne    76 <op_call+0x76> */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*63: mov    0x0(%rip),%rdx        # 6a <op_call+0x6a> */
0x48, 0x8b, 0x52, 0x18,                   /*6a: mov    0x18(%rdx),%rdx */
0x48, 0x8b, 0x52, 0x08,                   /*6e: mov    0x8(%rdx),%rdx */
0x48, 0x89, 0x51, 0x18,                   /*72: mov    %rdx,0x18(%rcx) */
0xf6, 0x43, 0x02, 0x04,                   /*76: testb  $0x4,0x2(%rbx) */
0x75, 0x52,                               /*7a: jne    ce <op_call+0xce> */
0x48, 0x89, 0x1d, 0x00, 0x00, 0x00, 0x00, /*7c: mov    %rbx,0x0(%rip)        # 83 <op_call+0x83> */
0x48, 0x8b, 0x4b, 0x18,                   /*83: mov    0x18(%rbx),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*87: mov    %rcx,0x0(%rip)        # 8e <op_call+0x8e> */
0x48, 0x85, 0xc9,                         /*8e: test   %rcx,%rcx */
0x0f, 0x85, 0xd7, 0x00, 0x00, 0x00,       /*91: jne    16e <op_call+0x16e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*97: mov    0x0(%rip),%rax        # 9e <op_call+0x9e> */
0x48, 0x8b, 0x40, 0x18,                   /*9e: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*a2: mov    0x8(%rax),%rax */
0x48, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf0, 0xff,/*a6: movabs $0xfff0400000000000,%rcx */
0x48, 0x89, 0x08,                         /*b0: mov    %rcx,(%rax) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*b3: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*b8: mov    $0x0,%esi */
0x31, 0xd2,                               /*bd: xor    %edx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*bf: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c4: callq  c9 <op_call+0xc9> */
0xe9, 0x56, 0x01, 0x00, 0x00,             /*c9: jmpq   224 <op_call+0x224> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*ce: mov    0x0(%rip),%rdi        # d5 <op_call+0xd5> */
0xff, 0x53, 0x18,                         /*d5: callq  *0x18(%rbx) */
0x48, 0x89, 0xc3,                         /*d8: mov    %rax,%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*db: mov    0x0(%rip),%rdi        # e2 <op_call+0xe2> */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*e2: mov    0x0(%rip),%esi        # e8 <op_call+0xe8> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e8: callq  ed <op_call+0xed> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*ed: mov    0x0(%rip),%rax        # f4 <op_call+0xf4> */
0x48, 0x83, 0x78, 0x28, 0x00,             /*f4: cmpq   $0x0,0x28(%rax) */
0x0f, 0x85, 0xb7, 0x00, 0x00, 0x00,       /*f9: jne    1b6 <op_call+0x1b6> */
0x48, 0x8b, 0x40, 0x18,                   /*ff: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*103: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x51, 0x10,                   /*107: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x50, 0x08,                   /*10b: mov    %rdx,0x8(%rax) */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*10f: mov    %rdx,0x0(%rip)        # 116 <op_call+0x116> */
0x48, 0x63, 0x41, 0x44,                   /*116: movslq 0x44(%rcx),%rax */
0x48, 0x89, 0x1c, 0xc2,                   /*11a: mov    %rbx,(%rdx,%rax,8) */
0x48, 0x8b, 0x41, 0x30,                   /*11e: mov    0x30(%rcx),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*122: mov    %rax,0x0(%rip)        # 129 <op_call+0x129> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*129: mov    0x0(%rip),%rdi        # 130 <op_call+0x130> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*130: callq  135 <op_call+0x135> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*135: mov    0x0(%rip),%rax        # 13c <op_call+0x13c> */
0x48, 0x8b, 0x40, 0x18,                   /*13c: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*140: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*144: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x18,                   /*148: mov    0x18(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*14c: mov    %rax,0x0(%rip)        # 153 <op_call+0x153> */
0x48, 0x8b, 0x48, 0x10,                   /*153: mov    0x10(%rax),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*157: mov    %rcx,0x0(%rip)        # 15e <op_call+0x15e> */
0x48, 0x8b, 0x40, 0x18,                   /*15e: mov    0x18(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*162: mov    %rax,0x0(%rip)        # 169 <op_call+0x169> */
0xe9, 0xb6, 0x00, 0x00, 0x00,             /*169: jmpq   224 <op_call+0x224> */
0x48, 0x8b, 0x51, 0x10,                   /*16e: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*172: mov    %rdx,0x0(%rip)        # 179 <op_call+0x179> */
0x48, 0x8b, 0x51, 0x18,                   /*179: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*17d: mov    %rdx,0x0(%rip)        # 184 <op_call+0x184> */
0x0f, 0xb7, 0x49, 0x02,                   /*184: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*188: mov    %ecx,0x18(%rax) */
0x8b, 0x50, 0x40,                         /*18b: mov    0x40(%rax),%edx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*18e: mov    0x0(%rip),%rdi        # 195 <op_call+0x195> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*195: mov    0x0(%rip),%rax        # 19c <op_call+0x19c> */
0x0f, 0xb7, 0x70, 0x02,                   /*19c: movzwl 0x2(%rax),%esi */
0x85, 0xd2,                               /*1a0: test   %edx,%edx */
0x79, 0x42,                               /*1a2: jns    1e6 <op_call+0x1e6> */
0x83, 0xfe, 0x03,                         /*1a4: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*1a7: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*1ac: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*1af: mov    $0x3,%edx */
0xeb, 0x33,                               /*1b4: jmp    1e9 <op_call+0x1e9> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*1b6: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1bb: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c0: callq  1c5 <op_call+0x1c5> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1c5: mov    0x0(%rip),%rdi        # 1cc <op_call+0x1cc> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*1cc: mov    0x0(%rip),%rsi        # 1d3 <op_call+0x1d3> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1d3: mov    0x0(%rip),%rcx        # 1da <op_call+0x1da> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1da: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*1df: jmpq   1e4 <op_call+0x1e4> */
0xeb, 0x3e,                               /*1e4: jmp    224 <op_call+0x224> */
0x83, 0xc2, 0x02,                         /*1e6: add    $0x2,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e9: callq  1ee <op_call+0x1ee> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1ee: mov    0x0(%rip),%rax        # 1f5 <op_call+0x1f5> */
0x48, 0x8b, 0x40, 0x18,                   /*1f5: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*1f9: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*1fd: mov    %rax,0x0(%rip)        # 204 <op_call+0x204> */
0x48, 0x8b, 0x4b, 0x28,                   /*204: mov    0x28(%rbx),%rcx */
0x48, 0x8b, 0x49, 0x18,                   /*208: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x09,                         /*20c: mov    (%rcx),%rcx */
0x48, 0x89, 0x08,                         /*20f: mov    %rcx,(%rax) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*212: mov    0x0(%rip),%rax        # 219 <op_call+0x219> */
0x48, 0x8b, 0x40, 0x08,                   /*219: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*21d: mov    %rax,0x0(%rip)        # 224 <op_call+0x224> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*224: mov    0x0(%rip),%rdi        # 22b <op_call+0x22b> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*22b: mov    0x0(%rip),%rsi        # 232 <op_call+0x232> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*232: mov    0x0(%rip),%rcx        # 239 <op_call+0x239> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*239: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*23e: jmpq   243 <op_call+0x243> */

};
static uint8_t op_call__rodata[] = {

};


static uint8_t op_super__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x54,                               /*13: push   %r12 */
0x53,                                     /*15: push   %rbx */
0x48, 0x83, 0xec, 0x10,                   /*16: sub    $0x10,%rsp */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*1a: mov    0x0(%rip),%rbx        # 21 <op_super+0x21> */
0x48, 0x8b, 0x43, 0x18,                   /*21: mov    0x18(%rbx),%rax */
0x4c, 0x8b, 0x78, 0x20,                   /*25: mov    0x20(%rax),%r15 */
0x41, 0x8b, 0x2f,                         /*29: mov    (%r15),%ebp */
0x85, 0xed,                               /*2c: test   %ebp,%ebp */
0x0f, 0x84, 0xae, 0x00, 0x00, 0x00,       /*2e: je     e2 <op_super+0xe2> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*34: mov    0x0(%rip),%rax        # 3b <op_super+0x3b> */
0x4c, 0x8b, 0x30,                         /*3b: mov    (%rax),%r14 */
0x49, 0x8b, 0x47, 0x48,                   /*3e: mov    0x48(%r15),%rax */
0x48, 0x8b, 0x70, 0x28,                   /*42: mov    0x28(%rax),%rsi */
0x48, 0x89, 0x74, 0x24, 0x08,             /*46: mov    %rsi,0x8(%rsp) */
0x48, 0x8d, 0x54, 0x24, 0x08,             /*4b: lea    0x8(%rsp),%rdx */
0x48, 0x89, 0xdf,                         /*50: mov    %rbx,%rdi */
0x89, 0xe9,                               /*53: mov    %ebp,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*55: callq  5a <op_super+0x5a> */
0x49, 0x89, 0xc4,                         /*5a: mov    %rax,%r12 */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*5d: mov    $0x0,%ebx */
0x4d, 0x85, 0xe4,                         /*62: test   %r12,%r12 */
0x0f, 0x85, 0xa2, 0x01, 0x00, 0x00,       /*65: jne    20d <op_super+0x20d> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*6b: mov    0x0(%rip),%rdi        # 72 <op_super+0x72> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*72: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*77: mov    $0xe,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c: callq  81 <op_super+0x81> */
0x89, 0xc5,                               /*81: mov    %eax,%ebp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*83: mov    0x0(%rip),%rdi        # 8a <op_super+0x8a> */
0x48, 0x8d, 0x74, 0x24, 0x08,             /*8a: lea    0x8(%rsp),%rsi */
0x89, 0xea,                               /*8f: mov    %ebp,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*91: callq  96 <op_super+0x96> */
0x49, 0x89, 0xc4,                         /*96: mov    %rax,%r12 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*99: mov    $0x0,%eax */
0x83, 0xf8, 0x7f,                         /*9e: cmp    $0x7f,%eax */
0x0f, 0x85, 0x89, 0x00, 0x00, 0x00,       /*a1: jne    130 <op_super+0x130> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*a7: mov    0x0(%rip),%rdi        # ae <op_super+0xae> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*ae: mov    0x0(%rip),%rax        # b5 <op_super+0xb5> */
0x41, 0x8b, 0x0f,                         /*b5: mov    (%r15),%ecx */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf1, 0xff,/*b8: movabs $0xfff1400000000000,%rdx */
0x48, 0x09, 0xca,                         /*c2: or     %rcx,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c5: mov    $0x0,%ecx */
0xff, 0xc1,                               /*ca: inc    %ecx */
0x48, 0x63, 0xc9,                         /*cc: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*cf: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*d3: callq  d8 <op_super+0xd8> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*d8: mov    $0x0,%ebx */
0xe9, 0x2b, 0x01, 0x00, 0x00,             /*dd: jmpq   20d <op_super+0x20d> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*e2: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*e7: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ea: callq  ef <op_super+0xef> */
0x48, 0x89, 0xc5,                         /*ef: mov    %rax,%rbp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*f2: mov    0x0(%rip),%rdi        # f9 <op_super+0xf9> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*f9: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*fe: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*103: callq  108 <op_super+0x108> */
0x48, 0x89, 0xdf,                         /*108: mov    %rbx,%rdi */
0x48, 0x89, 0xee,                         /*10b: mov    %rbp,%rsi */
0x48, 0x89, 0xc2,                         /*10e: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*111: callq  116 <op_super+0x116> */
0x48, 0xc1, 0xe0, 0x02,                   /*116: shl    $0x2,%rax */
0x48, 0xb9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*11a: movabs $0xfffffffffffc,%rcx */
0x48, 0x21, 0xc1,                         /*124: and    %rax,%rcx */
0x48, 0x89, 0x4b, 0x28,                   /*127: mov    %rcx,0x28(%rbx) */
0xe9, 0xa5, 0x01, 0x00, 0x00,             /*12b: jmpq   2d5 <op_super+0x2d5> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*130: mov    0x0(%rip),%rax        # 137 <op_super+0x137> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*137: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*13c: movslq %ecx,%rcx */
0x48, 0x8d, 0x51, 0x01,                   /*13f: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*143: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*147: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*14a: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*14d: mov    $0x0,%edi */
0xff, 0xc7,                               /*152: inc    %edi */
0x48, 0x63, 0xff,                         /*154: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*157: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*15c: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*15f: setge  %cl */
0x08, 0xd1,                               /*162: or     %dl,%cl */
0x74, 0x3e,                               /*164: je     1a4 <op_super+0x1a4> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*166: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*16b: cmp    $0xffffffff,%ecx */
0x74, 0x70,                               /*16e: je     1e0 <op_super+0x1e0> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*170: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*175: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x10,             /*178: lea    0x10(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17d: mov    $0x0,%ecx */
0xff, 0xc1,                               /*182: inc    %ecx */
0x48, 0x63, 0xc9,                         /*184: movslq %ecx,%rcx */
0x48, 0xf7, 0xd9,                         /*187: neg    %rcx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*18a: nopw   0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x40, 0xf8,             /*190: movsd  -0x8(%rax),%xmm0 */
0xf2, 0x0f, 0x11, 0x00,                   /*195: movsd  %xmm0,(%rax) */
0x48, 0x8d, 0x40, 0x08,                   /*199: lea    0x8(%rax),%rax */
0x48, 0xff, 0xc1,                         /*19d: inc    %rcx */
0x75, 0xee,                               /*1a0: jne    190 <op_super+0x190> */
0xeb, 0x3c,                               /*1a2: jmp    1e0 <op_super+0x1e0> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a4: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*1a9: cmp    $0xffffffff,%ecx */
0x74, 0x32,                               /*1ac: je     1e0 <op_super+0x1e0> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1ae: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1b3: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x08,             /*1b6: lea    0x8(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1bb: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1c0: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1c2: movslq %ecx,%rcx */
0x90,                                     /*1c5: nop */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1c6: nopw   %cs:0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x44, 0xc8, 0xf8,       /*1d0: movsd  -0x8(%rax,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*1d6: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*1db: dec    %rcx */
0x75, 0xf0,                               /*1de: jne    1d0 <op_super+0x1d0> */
0x41, 0x8b, 0x07,                         /*1e0: mov    (%r15),%eax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1e3: mov    0x0(%rip),%rcx        # 1ea <op_super+0x1ea> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1ea: mov    $0x0,%edx */
0xff, 0xc2,                               /*1ef: inc    %edx */
0x48, 0x63, 0xd2,                         /*1f1: movslq %edx,%rdx */
0x89, 0x04, 0xd1,                         /*1f4: mov    %eax,(%rcx,%rdx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1f7: mov    0x0(%rip),%rax        # 1fe <op_super+0x1fe> */
0xc7, 0x44, 0xd0, 0x04, 0x00, 0x40, 0xf1, 0xff,/*1fe: movl   $0xfff14000,0x4(%rax,%rdx,8) */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*206: mov    $0x0,%ebx */
0xff, 0xc3,                               /*20b: inc    %ebx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*20d: mov    0x0(%rip),%rdi        # 214 <op_super+0x214> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*214: callq  219 <op_super+0x219> */
0x89, 0x28,                               /*219: mov    %ebp,(%rax) */
0x4c, 0x89, 0x60, 0x08,                   /*21b: mov    %r12,0x8(%rax) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*21f: mov    0x0(%rip),%rcx        # 226 <op_super+0x226> */
0x48, 0x8b, 0x49, 0x18,                   /*226: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*22a: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x48, 0x10,                   /*22e: mov    %rcx,0x10(%rax) */
0x83, 0xfb, 0x7f,                         /*232: cmp    $0x7f,%ebx */
0xb9, 0xff, 0xff, 0xff, 0xff,             /*235: mov    $0xffffffff,%ecx */
0x0f, 0x45, 0xcb,                         /*23a: cmovne %ebx,%ecx */
0x89, 0x48, 0x40,                         /*23d: mov    %ecx,0x40(%rax) */
0x48, 0x8b, 0x4c, 0x24, 0x08,             /*240: mov    0x8(%rsp),%rcx */
0x48, 0x89, 0x48, 0x48,                   /*245: mov    %rcx,0x48(%rax) */
0x48, 0xc7, 0x40, 0x30, 0x00, 0x00, 0x00, 0x00,/*249: movq   $0x0,0x30(%rax) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*251: mov    0x0(%rip),%rcx        # 258 <op_super+0x258> */
0x48, 0x8b, 0x49, 0x18,                   /*258: mov    0x18(%rcx),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*25c: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*261: movslq %edx,%rdx */
0x48, 0xc1, 0xe2, 0x03,                   /*264: shl    $0x3,%rdx */
0x48, 0x01, 0x51, 0x08,                   /*268: add    %rdx,0x8(%rcx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*26c: mov    0x0(%rip),%rcx        # 273 <op_super+0x273> */
0x48, 0x8b, 0x49, 0x18,                   /*273: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*277: mov    0x8(%rcx),%rcx */
0x4c, 0x89, 0x31,                         /*27b: mov    %r14,(%rcx) */
0x41, 0xf6, 0x44, 0x24, 0x02, 0x04,       /*27e: testb  $0x4,0x2(%r12) */
0x74, 0x78,                               /*284: je     2fe <op_super+0x2fe> */
0x8d, 0x4b, 0x02,                         /*286: lea    0x2(%rbx),%ecx */
0x83, 0xfb, 0x7f,                         /*289: cmp    $0x7f,%ebx */
0xba, 0x03, 0x00, 0x00, 0x00,             /*28c: mov    $0x3,%edx */
0x0f, 0x45, 0xd1,                         /*291: cmovne %ecx,%edx */
0x89, 0x50, 0x18,                         /*294: mov    %edx,0x18(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*297: mov    0x0(%rip),%rdi        # 29e <op_super+0x29e> */
0x48, 0x8b, 0x47, 0x18,                   /*29e: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*2a2: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xf6,                         /*2a6: mov    %r14,%rsi */
0x41, 0xff, 0x54, 0x24, 0x18,             /*2a9: callq  *0x18(%r12) */
0x48, 0x89, 0x03,                         /*2ae: mov    %rax,(%rbx) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*2b1: mov    0x0(%rip),%rdi        # 2b8 <op_super+0x2b8> */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*2b8: mov    0x0(%rip),%esi        # 2be <op_super+0x2be> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2be: callq  2c3 <op_super+0x2c3> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*2c3: mov    0x0(%rip),%rax        # 2ca <op_super+0x2ca> */
0x48, 0x83, 0x78, 0x28, 0x00,             /*2ca: cmpq   $0x0,0x28(%rax) */
0x0f, 0x84, 0x87, 0x00, 0x00, 0x00,       /*2cf: je     35c <op_super+0x35c> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*2d5: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2da: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2df: callq  2e4 <op_super+0x2e4> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*2e4: mov    0x0(%rip),%rdi        # 2eb <op_super+0x2eb> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*2eb: mov    0x0(%rip),%rsi        # 2f2 <op_super+0x2f2> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*2f2: mov    0x0(%rip),%rcx        # 2f9 <op_super+0x2f9> */
0xe9, 0xba, 0x00, 0x00, 0x00,             /*2f9: jmpq   3b8 <op_super+0x3b8> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2fe: mov    $0x0,%ecx */
0x89, 0x48, 0x44,                         /*303: mov    %ecx,0x44(%rax) */
0x4c, 0x89, 0x60, 0x08,                   /*306: mov    %r12,0x8(%rax) */
0x49, 0x8b, 0x4c, 0x24, 0x18,             /*30a: mov    0x18(%r12),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*30f: mov    %rcx,0x0(%rip)        # 316 <op_super+0x316> */
0x48, 0x8b, 0x51, 0x10,                   /*316: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*31a: mov    %rdx,0x0(%rip)        # 321 <op_super+0x321> */
0x48, 0x8b, 0x51, 0x18,                   /*321: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*325: mov    %rdx,0x0(%rip)        # 32c <op_super+0x32c> */
0x0f, 0xb7, 0x49, 0x02,                   /*32c: movzwl 0x2(%rcx),%ecx */
0x89, 0x48, 0x18,                         /*330: mov    %ecx,0x18(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*333: mov    0x0(%rip),%rdi        # 33a <op_super+0x33a> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*33a: mov    0x0(%rip),%rcx        # 341 <op_super+0x341> */
0x0f, 0xb7, 0x71, 0x02,                   /*341: movzwl 0x2(%rcx),%esi */
0x83, 0xfb, 0x7f,                         /*345: cmp    $0x7f,%ebx */
0x75, 0x37,                               /*348: jne    381 <op_super+0x381> */
0x83, 0xfe, 0x03,                         /*34a: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*34d: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*352: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*355: mov    $0x3,%edx */
0xeb, 0x2b,                               /*35a: jmp    387 <op_super+0x387> */
0x48, 0x8b, 0x40, 0x18,                   /*35c: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*360: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*364: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*368: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*36c: mov    %rcx,0x0(%rip)        # 373 <op_super+0x373> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*373: mov    0x0(%rip),%rdi        # 37a <op_super+0x37a> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*37a: callq  37f <op_super+0x37f> */
0xeb, 0x41,                               /*37f: jmp    3c2 <op_super+0x3c2> */
0x8b, 0x50, 0x40,                         /*381: mov    0x40(%rax),%edx */
0x83, 0xc2, 0x02,                         /*384: add    $0x2,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*387: callq  38c <op_super+0x38c> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*38c: mov    0x0(%rip),%rdi        # 393 <op_super+0x393> */
0x48, 0x8b, 0x47, 0x18,                   /*393: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*397: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*39b: mov    %rax,0x0(%rip)        # 3a2 <op_super+0x3a2> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3a2: mov    0x0(%rip),%rsi        # 3a9 <op_super+0x3a9> */
0x48, 0x8b, 0x46, 0x08,                   /*3a9: mov    0x8(%rsi),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*3ad: mov    %rax,0x0(%rip)        # 3b4 <op_super+0x3b4> */
0x48, 0x8b, 0x4e, 0x08,                   /*3b4: mov    0x8(%rsi),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3b8: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*3bd: jmpq   3c2 <op_super+0x3c2> */
0x48, 0x83, 0xc4, 0x10,                   /*3c2: add    $0x10,%rsp */
0x5b,                                     /*3c6: pop    %rbx */
0x41, 0x5c,                               /*3c7: pop    %r12 */
0x41, 0x5e,                               /*3c9: pop    %r14 */
0x41, 0x5f,                               /*3cb: pop    %r15 */
0x5d,                                     /*3cd: pop    %rbp */

};
static uint8_t op_super__rodata[] = {

};


static uint8_t op_argary__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x55,                               /*13: push   %r13 */
0x41, 0x54,                               /*15: push   %r12 */
0x53,                                     /*17: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*18: sub    $0x18,%rsp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%eax */
0x49, 0xbc, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*21: movabs $0xfffffffffffc,%r12 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2b: mov    $0x0,%ecx */
0xf6, 0xc1, 0x0f,                         /*30: test   $0xf,%cl */
0x0f, 0x84, 0xc4, 0x00, 0x00, 0x00,       /*33: je     fd <op_argary+0xfd> */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*39: mov    0x0(%rip),%rbx        # 40 <op_argary+0x40> */
0x48, 0x8b, 0x43, 0x18,                   /*40: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*44: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*48: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x28,                   /*4c: mov    0x28(%rax),%rax */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*50: mov    $0x0,%esi */
0x83, 0xe6, 0x0f,                         /*55: and    $0xf,%esi */
0x48, 0x85, 0xc0,                         /*58: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*5b: sete   %cl */
0x83, 0xfe, 0x01,                         /*5e: cmp    $0x1,%esi */
0x74, 0x20,                               /*61: je     83 <op_argary+0x83> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*63: mov    $0x1,%edx */
0x29, 0xf2,                               /*68: sub    %esi,%edx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*6a: nopw   0x0(%rax,%rax,1) */
0xf6, 0xc1, 0x01,                         /*70: test   $0x1,%cl */
0x75, 0x12,                               /*73: jne    87 <op_argary+0x87> */
0x48, 0x8b, 0x40, 0x08,                   /*75: mov    0x8(%rax),%rax */
0x48, 0x85, 0xc0,                         /*79: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*7c: sete   %cl */
0xff, 0xc2,                               /*7f: inc    %edx */
0x75, 0xed,                               /*81: jne    70 <op_argary+0x70> */
0x84, 0xc9,                               /*83: test   %cl,%cl */
0x74, 0x72,                               /*85: je     f9 <op_argary+0xf9> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*87: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*8c: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8f: callq  94 <op_argary+0x94> */
0x49, 0x89, 0xc6,                         /*94: mov    %rax,%r14 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*97: mov    0x0(%rip),%rdi        # 9e <op_argary+0x9e> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*9e: mov    $0x0,%esi */
0xba, 0x1e, 0x00, 0x00, 0x00,             /*a3: mov    $0x1e,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*a8: callq  ad <op_argary+0xad> */
0x48, 0x89, 0xdf,                         /*ad: mov    %rbx,%rdi */
0x4c, 0x89, 0xf6,                         /*b0: mov    %r14,%rsi */
0x48, 0x89, 0xc2,                         /*b3: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*b6: callq  bb <op_argary+0xbb> */
0x48, 0xc1, 0xe0, 0x02,                   /*bb: shl    $0x2,%rax */
0x4c, 0x21, 0xe0,                         /*bf: and    %r12,%rax */
0x48, 0x89, 0x43, 0x28,                   /*c2: mov    %rax,0x28(%rbx) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*c6: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*cb: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*d0: callq  d5 <op_argary+0xd5> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*d5: mov    0x0(%rip),%rdi        # dc <op_argary+0xdc> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*dc: mov    0x0(%rip),%rsi        # e3 <op_argary+0xe3> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*e3: mov    0x0(%rip),%rcx        # ea <op_argary+0xea> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*ea: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*ef: jmpq   f4 <op_argary+0xf4> */
0xe9, 0x38, 0x02, 0x00, 0x00,             /*f4: jmpq   331 <op_argary+0x331> */
0x48, 0x83, 0xc0, 0x18,                   /*f9: add    $0x18,%rax */
0x4c, 0x8b, 0x38,                         /*fd: mov    (%rax),%r15 */
0x49, 0x8d, 0x5f, 0x08,                   /*100: lea    0x8(%r15),%rbx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*104: mov    $0x0,%eax */
0x0f, 0xba, 0xe0, 0x09,                   /*109: bt     $0x9,%eax */
0x72, 0x3f,                               /*10d: jb     14e <op_argary+0x14e> */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*10f: mov    0x0(%rip),%r14        # 116 <op_argary+0x116> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*116: mov    $0x0,%eax */
0x48, 0x63, 0xe8,                         /*11b: movslq %eax,%rbp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*11e: mov    0x0(%rip),%rdi        # 125 <op_argary+0x125> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*125: mov    $0x0,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12a: mov    $0x0,%eax */
0xc1, 0xe8, 0x04,                         /*12f: shr    $0x4,%eax */
0x83, 0xe0, 0x1f,                         /*132: and    $0x1f,%eax */
0xc1, 0xee, 0x0a,                         /*135: shr    $0xa,%esi */
0x83, 0xe6, 0x3f,                         /*138: and    $0x3f,%esi */
0x01, 0xc6,                               /*13b: add    %eax,%esi */
0x48, 0x89, 0xda,                         /*13d: mov    %rbx,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*140: callq  145 <op_argary+0x145> */
0x49, 0x89, 0x04, 0xee,                   /*145: mov    %rax,(%r14,%rbp,8) */
0xe9, 0x8b, 0x01, 0x00, 0x00,             /*149: jmpq   2d9 <op_argary+0x2d9> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*14e: mov    $0x0,%eax */
0xc1, 0xe8, 0x0a,                         /*153: shr    $0xa,%eax */
0x83, 0xe0, 0x3f,                         /*156: and    $0x3f,%eax */
0x41, 0x8b, 0x44, 0xc7, 0x0c,             /*159: mov    0xc(%r15,%rax,8),%eax */
0x31, 0xed,                               /*15e: xor    %ebp,%ebp */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*160: cmp    $0xfff00001,%eax */
0x72, 0x31,                               /*165: jb     198 <op_argary+0x198> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*167: and    $0xfc000,%eax */
0x3d, 0x00, 0xc0, 0x03, 0x00,             /*16c: cmp    $0x3c000,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*171: mov    $0x0,%ecx */
0x75, 0x22,                               /*176: jne    19a <op_argary+0x19a> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*178: mov    $0x0,%eax */
0xc1, 0xe8, 0x0a,                         /*17d: shr    $0xa,%eax */
0x83, 0xe0, 0x3f,                         /*180: and    $0x3f,%eax */
0x49, 0x8b, 0x44, 0xc7, 0x08,             /*183: mov    0x8(%r15,%rax,8),%rax */
0x48, 0xc1, 0xe0, 0x02,                   /*188: shl    $0x2,%rax */
0x4c, 0x21, 0xe0,                         /*18c: and    %r12,%rax */
0x48, 0x8b, 0x68, 0x28,                   /*18f: mov    0x28(%rax),%rbp */
0x8b, 0x48, 0x18,                         /*193: mov    0x18(%rax),%ecx */
0xeb, 0x02,                               /*196: jmp    19a <op_argary+0x19a> */
0x31, 0xc9,                               /*198: xor    %ecx,%ecx */
0x48, 0x89, 0x4c, 0x24, 0x08,             /*19a: mov    %rcx,0x8(%rsp) */
0x4c, 0x8b, 0x25, 0x00, 0x00, 0x00, 0x00, /*19f: mov    0x0(%rip),%r12        # 1a6 <op_argary+0x1a6> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1a6: mov    $0x0,%eax */
0x4c, 0x63, 0xe8,                         /*1ab: movslq %eax,%r13 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1ae: mov    0x0(%rip),%rdi        # 1b5 <op_argary+0x1b5> */
0x4c, 0x89, 0x7c, 0x24, 0x10,             /*1b5: mov    %r15,0x10(%rsp) */
0x41, 0xbf, 0x00, 0x00, 0x00, 0x00,       /*1ba: mov    $0x0,%r15d */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*1c0: mov    $0x0,%r14d */
0x41, 0xc1, 0xee, 0x04,                   /*1c6: shr    $0x4,%r14d */
0x41, 0x83, 0xe6, 0x1f,                   /*1ca: and    $0x1f,%r14d */
0x41, 0xc1, 0xef, 0x0a,                   /*1ce: shr    $0xa,%r15d */
0x41, 0x83, 0xe7, 0x3f,                   /*1d2: and    $0x3f,%r15d */
0x45, 0x01, 0xfe,                         /*1d6: add    %r15d,%r14d */
0x41, 0x01, 0xce,                         /*1d9: add    %ecx,%r14d */
0x44, 0x89, 0xf6,                         /*1dc: mov    %r14d,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1df: callq  1e4 <op_argary+0x1e4> */
0x4b, 0x89, 0x04, 0xec,                   /*1e4: mov    %rax,(%r12,%r13,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1e8: mov    0x0(%rip),%rax        # 1ef <op_argary+0x1ef> */
0x4a, 0x8b, 0x04, 0xe8,                   /*1ef: mov    (%rax,%r13,8),%rax */
0x48, 0xc1, 0xe0, 0x02,                   /*1f3: shl    $0x2,%rax */
0x48, 0xb9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*1f7: movabs $0xfffffffffffc,%rcx */
0x48, 0x21, 0xc8,                         /*201: and    %rcx,%rax */
0x45, 0x85, 0xff,                         /*204: test   %r15d,%r15d */
0x4c, 0x8b, 0x7c, 0x24, 0x10,             /*207: mov    0x10(%rsp),%r15 */
0x7e, 0x40,                               /*20c: jle    24e <op_argary+0x24e> */
0x48, 0x8b, 0x48, 0x28,                   /*20e: mov    0x28(%rax),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*212: mov    $0x0,%edx */
0xc1, 0xea, 0x0a,                         /*217: shr    $0xa,%edx */
0x48, 0x83, 0xe2, 0x3f,                   /*21a: and    $0x3f,%rdx */
0x48, 0xf7, 0xda,                         /*21e: neg    %rdx */
0x4c, 0x89, 0xfe,                         /*221: mov    %r15,%rsi */
0x66, 0x90,                               /*224: xchg   %ax,%ax */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*226: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xdf,                         /*230: mov    %rbx,%rdi */
0x48, 0x83, 0xc6, 0x10,                   /*233: add    $0x10,%rsi */
0xf2, 0x0f, 0x10, 0x07,                   /*237: movsd  (%rdi),%xmm0 */
0xf2, 0x0f, 0x11, 0x01,                   /*23b: movsd  %xmm0,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*23f: add    $0x8,%rcx */
0x48, 0xff, 0xc2,                         /*243: inc    %rdx */
0x48, 0x89, 0xf3,                         /*246: mov    %rsi,%rbx */
0x48, 0x89, 0xfe,                         /*249: mov    %rdi,%rsi */
0x75, 0xe2,                               /*24c: jne    230 <op_argary+0x230> */
0x48, 0x8b, 0x74, 0x24, 0x08,             /*24e: mov    0x8(%rsp),%rsi */
0x85, 0xf6,                               /*253: test   %esi,%esi */
0x7e, 0x2f,                               /*255: jle    286 <op_argary+0x286> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*257: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0a,                         /*25c: shr    $0xa,%ecx */
0x83, 0xe1, 0x3f,                         /*25f: and    $0x3f,%ecx */
0x48, 0xc1, 0xe1, 0x03,                   /*262: shl    $0x3,%rcx */
0x48, 0x03, 0x48, 0x28,                   /*266: add    0x28(%rax),%rcx */
0x48, 0x63, 0xd6,                         /*26a: movslq %esi,%rdx */
0x48, 0xf7, 0xda,                         /*26d: neg    %rdx */
0xf2, 0x0f, 0x10, 0x45, 0x00,             /*270: movsd  0x0(%rbp),%xmm0 */
0x48, 0x83, 0xc5, 0x08,                   /*275: add    $0x8,%rbp */
0xf2, 0x0f, 0x11, 0x01,                   /*279: movsd  %xmm0,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*27d: add    $0x8,%rcx */
0x48, 0xff, 0xc2,                         /*281: inc    %rdx */
0x75, 0xea,                               /*284: jne    270 <op_argary+0x270> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*286: mov    $0x0,%ecx */
0xc1, 0xe9, 0x04,                         /*28b: shr    $0x4,%ecx */
0xf6, 0xc1, 0x1f,                         /*28e: test   $0x1f,%cl */
0x7e, 0x42,                               /*291: jle    2d5 <op_argary+0x2d5> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*293: mov    $0x0,%ecx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*298: mov    $0x0,%edi */
0xc1, 0xef, 0x0a,                         /*29d: shr    $0xa,%edi */
0x83, 0xe7, 0x3f,                         /*2a0: and    $0x3f,%edi */
0x49, 0x8d, 0x54, 0xff, 0x10,             /*2a3: lea    0x10(%r15,%rdi,8),%rdx */
0x48, 0x63, 0xf6,                         /*2a8: movslq %esi,%rsi */
0x48, 0x01, 0xfe,                         /*2ab: add    %rdi,%rsi */
0x48, 0xc1, 0xe6, 0x03,                   /*2ae: shl    $0x3,%rsi */
0x48, 0x03, 0x70, 0x28,                   /*2b2: add    0x28(%rax),%rsi */
0xc1, 0xe9, 0x04,                         /*2b6: shr    $0x4,%ecx */
0x48, 0x83, 0xe1, 0x1f,                   /*2b9: and    $0x1f,%rcx */
0x48, 0xf7, 0xd9,                         /*2bd: neg    %rcx */
0xf2, 0x0f, 0x10, 0x02,                   /*2c0: movsd  (%rdx),%xmm0 */
0x48, 0x83, 0xc2, 0x08,                   /*2c4: add    $0x8,%rdx */
0xf2, 0x0f, 0x11, 0x06,                   /*2c8: movsd  %xmm0,(%rsi) */
0x48, 0x83, 0xc6, 0x08,                   /*2cc: add    $0x8,%rsi */
0x48, 0xff, 0xc1,                         /*2d0: inc    %rcx */
0x75, 0xeb,                               /*2d3: jne    2c0 <op_argary+0x2c0> */
0x44, 0x89, 0x70, 0x18,                   /*2d5: mov    %r14d,0x18(%rax) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*2d9: mov    0x0(%rip),%rax        # 2e0 <op_argary+0x2e0> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2e0: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*2e5: mov    $0x0,%edx */
0xc1, 0xea, 0x09,                         /*2ea: shr    $0x9,%edx */
0x83, 0xe2, 0x01,                         /*2ed: and    $0x1,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2f0: mov    $0x0,%esi */
0xc1, 0xee, 0x0a,                         /*2f5: shr    $0xa,%esi */
0x83, 0xe6, 0x3f,                         /*2f8: and    $0x3f,%esi */
0x01, 0xd6,                               /*2fb: add    %edx,%esi */
0xc1, 0xe9, 0x04,                         /*2fd: shr    $0x4,%ecx */
0x83, 0xe1, 0x1f,                         /*300: and    $0x1f,%ecx */
0x01, 0xf1,                               /*303: add    %esi,%ecx */
0x48, 0x63, 0xc9,                         /*305: movslq %ecx,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*308: mov    $0x0,%edx */
0xff, 0xc2,                               /*30d: inc    %edx */
0x48, 0x63, 0xd2,                         /*30f: movslq %edx,%rdx */
0xf2, 0x41, 0x0f, 0x10, 0x44, 0xcf, 0x08, /*312: movsd  0x8(%r15,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xd0,             /*319: movsd  %xmm0,(%rax,%rdx,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*31e: mov    0x0(%rip),%eax        # 324 <op_argary+0x324> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*324: mov    0x0(%rip),%rcx        # 32b <op_argary+0x32b> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*32b: mov    %eax,0xdc(%rcx) */
0x48, 0x83, 0xc4, 0x18,                   /*331: add    $0x18,%rsp */
0x5b,                                     /*335: pop    %rbx */
0x41, 0x5c,                               /*336: pop    %r12 */
0x41, 0x5d,                               /*338: pop    %r13 */
0x41, 0x5e,                               /*33a: pop    %r14 */
0x41, 0x5f,                               /*33c: pop    %r15 */
0x5d,                                     /*33e: pop    %rbp */

};
static uint8_t op_argary__rodata[] = {

};


static uint8_t op_enter__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x55,                               /*13: push   %r13 */
0x41, 0x54,                               /*15: push   %r12 */
0x53,                                     /*17: push   %rbx */
0x48, 0x83, 0xec, 0x18,                   /*18: sub    $0x18,%rsp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1c: mov    0x0(%rip),%rdi        # 23 <op_enter+0x23> */
0x48, 0x8b, 0x47, 0x18,                   /*23: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*27: mov    0x20(%rax),%rax */
0x48, 0x63, 0x58, 0x40,                   /*2b: movslq 0x40(%rax),%rbx */
0x4c, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*2f: mov    0x0(%rip),%r15        # 36 <op_enter+0x36> */
0x48, 0x85, 0xdb,                         /*36: test   %rbx,%rbx */
0x48, 0x8d, 0x43, 0x01,                   /*39: lea    0x1(%rbx),%rax */
0x41, 0xbc, 0x02, 0x00, 0x00, 0x00,       /*3d: mov    $0x2,%r12d */
0x4c, 0x0f, 0x49, 0xe0,                   /*43: cmovns %rax,%r12 */
0x43, 0x8b, 0x44, 0xe7, 0x04,             /*47: mov    0x4(%r15,%r12,8),%eax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*4c: cmp    $0xfff00001,%eax */
0x72, 0x1a,                               /*51: jb     6d <op_enter+0x6d> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*53: and    $0xfc000,%eax */
0x3d, 0x00, 0x80, 0x03, 0x00,             /*58: cmp    $0x38000,%eax */
0x74, 0x2b,                               /*5d: je     8a <op_enter+0x8a> */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*5f: cmp    $0x4000,%eax */
0x75, 0x07,                               /*64: jne    6d <op_enter+0x6d> */
0x43, 0x83, 0x3c, 0xe7, 0x00,             /*66: cmpl   $0x0,(%r15,%r12,8) */
0x74, 0x1d,                               /*6b: je     8a <op_enter+0x8a> */
0x4b, 0x8b, 0x34, 0xe7,                   /*6d: mov    (%r15,%r12,8),%rsi */
0xba, 0x0d, 0x00, 0x00, 0x00,             /*71: mov    $0xd,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*76: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*7b: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*81: callq  86 <op_enter+0x86> */
0x4b, 0x89, 0x04, 0xe7,                   /*86: mov    %rax,(%r15,%r12,8) */
0x4d, 0x8d, 0x6f, 0x08,                   /*8a: lea    0x8(%r15),%r13 */
0x48, 0xbd, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*8e: movabs $0xfffffffffffc,%rbp */
0x85, 0xdb,                               /*98: test   %ebx,%ebx */
0x4d, 0x89, 0xee,                         /*9a: mov    %r13,%r14 */
0x79, 0x29,                               /*9d: jns    c8 <op_enter+0xc8> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*9f: mov    0x0(%rip),%rax        # a6 <op_enter+0xa6> */
0x48, 0x8b, 0x70, 0x08,                   /*a6: mov    0x8(%rax),%rsi */
0x48, 0x8d, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00,/*aa: lea    0x0(,%rsi,4),%rax */
0x48, 0x21, 0xe8,                         /*b2: and    %rbp,%rax */
0x4c, 0x8b, 0x70, 0x28,                   /*b5: mov    0x28(%rax),%r14 */
0x8b, 0x58, 0x18,                         /*b9: mov    0x18(%rax),%ebx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*bc: mov    0x0(%rip),%rdi        # c3 <op_enter+0xc3> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c3: callq  c8 <op_enter+0xc8> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*c8: mov    0x0(%rip),%rdi        # cf <op_enter+0xcf> */
0x48, 0x8b, 0x47, 0x18,                   /*cf: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*d3: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x48, 0x08,                   /*d7: mov    0x8(%rax),%rcx */
0x48, 0x85, 0xc9,                         /*db: test   %rcx,%rcx */
0x0f, 0x84, 0xad, 0x00, 0x00, 0x00,       /*de: je     191 <op_enter+0x191> */
0xf6, 0x41, 0x02, 0x08,                   /*e4: testb  $0x8,0x2(%rcx) */
0x0f, 0x84, 0xa3, 0x00, 0x00, 0x00,       /*e8: je     191 <op_enter+0x191> */
0x85, 0xdb,                               /*ee: test   %ebx,%ebx */
0x0f, 0x88, 0x1e, 0x01, 0x00, 0x00,       /*f0: js     214 <op_enter+0x214> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*f6: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*fb: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*100: shr    $0x7,%esi */
0x83, 0xe6, 0x1f,                         /*103: and    $0x1f,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*106: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*10b: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*10e: and    $0x1f,%ecx */
0x44, 0x8d, 0x04, 0x31,                   /*111: lea    (%rcx,%rsi,1),%r8d */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*115: mov    $0x0,%ebp */
0xc1, 0xed, 0x0d,                         /*11a: shr    $0xd,%ebp */
0x83, 0xe5, 0x1f,                         /*11d: and    $0x1f,%ebp */
0x01, 0xcd,                               /*120: add    %ecx,%ebp */
0xc1, 0xea, 0x0c,                         /*122: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*125: and    $0x1,%edx */
0x0f, 0x94, 0xc1,                         /*128: sete   %cl */
0x01, 0xea,                               /*12b: add    %ebp,%edx */
0x01, 0xf2,                               /*12d: add    %esi,%edx */
0x39, 0xd3,                               /*12f: cmp    %edx,%ebx */
0x0f, 0x9f, 0xc2,                         /*131: setg   %dl */
0x44, 0x39, 0xc3,                         /*134: cmp    %r8d,%ebx */
0x7c, 0x08,                               /*137: jl     141 <op_enter+0x141> */
0x20, 0xca,                               /*139: and    %cl,%dl */
0x0f, 0x84, 0xd3, 0x00, 0x00, 0x00,       /*13b: je     214 <op_enter+0x214> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*141: mov    $0x0,%esi */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*146: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*14b: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*14e: and    $0x1f,%eax */
0xc1, 0xee, 0x12,                         /*151: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*154: and    $0x1f,%esi */
0x01, 0xc6,                               /*157: add    %eax,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*159: callq  15e <op_enter+0x15e> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*15e: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*163: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*168: callq  16d <op_enter+0x16d> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*16d: mov    0x0(%rip),%rdi        # 174 <op_enter+0x174> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*174: mov    0x0(%rip),%rsi        # 17b <op_enter+0x17b> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*17b: mov    0x0(%rip),%rcx        # 182 <op_enter+0x182> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*182: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*187: jmpq   18c <op_enter+0x18c> */
0xe9, 0x33, 0x07, 0x00, 0x00,             /*18c: jmpq   8c4 <op_enter+0x8c4> */
0x83, 0xfb, 0x01,                         /*191: cmp    $0x1,%ebx */
0x75, 0x7e,                               /*194: jne    214 <op_enter+0x214> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*196: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*19b: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*1a0: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*1a3: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1a6: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*1ab: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*1ae: and    $0x1f,%esi */
0x01, 0xd6,                               /*1b1: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1b3: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*1b8: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*1bb: and    $0x1,%edx */
0x01, 0xf2,                               /*1be: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*1c0: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*1c3: and    $0x1f,%ecx */
0x01, 0xd1,                               /*1c6: add    %edx,%ecx */
0x83, 0xf9, 0x02,                         /*1c8: cmp    $0x2,%ecx */
0x7c, 0x47,                               /*1cb: jl     214 <op_enter+0x214> */
0x41, 0x8b, 0x4e, 0x04,                   /*1cd: mov    0x4(%r14),%ecx */
0xbb, 0x01, 0x00, 0x00, 0x00,             /*1d1: mov    $0x1,%ebx */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*1d6: cmp    $0xfff00001,%ecx */
0x72, 0x36,                               /*1dc: jb     214 <op_enter+0x214> */
0x81, 0xe1, 0x00, 0xc0, 0x0f, 0x00,       /*1de: and    $0xfc000,%ecx */
0x81, 0xf9, 0x00, 0xc0, 0x03, 0x00,       /*1e4: cmp    $0x3c000,%ecx */
0x75, 0x28,                               /*1ea: jne    214 <op_enter+0x214> */
0x49, 0x8b, 0x36,                         /*1ec: mov    (%r14),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1ef: callq  1f4 <op_enter+0x1f4> */
0x49, 0x8b, 0x06,                         /*1f4: mov    (%r14),%rax */
0x48, 0xc1, 0xe0, 0x02,                   /*1f7: shl    $0x2,%rax */
0x48, 0x21, 0xe8,                         /*1fb: and    %rbp,%rax */
0x8b, 0x58, 0x18,                         /*1fe: mov    0x18(%rax),%ebx */
0x4c, 0x8b, 0x70, 0x28,                   /*201: mov    0x28(%rax),%r14 */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*205: mov    0x0(%rip),%rax        # 20c <op_enter+0x20c> */
0x48, 0x8b, 0x40, 0x18,                   /*20c: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*210: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*214: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*219: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*21e: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*221: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*224: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*229: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*22c: and    $0x1f,%esi */
0x01, 0xd6,                               /*22f: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*231: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*236: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*239: and    $0x1,%edx */
0x01, 0xf2,                               /*23c: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*23e: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*241: and    $0x1f,%ecx */
0x01, 0xd1,                               /*244: add    %edx,%ecx */
0x89, 0x48, 0x40,                         /*246: mov    %ecx,0x40(%rax) */
0x39, 0xcb,                               /*249: cmp    %ecx,%ebx */
0x0f, 0x8d, 0xf5, 0x00, 0x00, 0x00,       /*24b: jge    346 <op_enter+0x346> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*251: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*256: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*25b: shr    $0x7,%eax */
0x83, 0xe0, 0x1f,                         /*25e: and    $0x1f,%eax */
0xc1, 0xe9, 0x12,                         /*261: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*264: and    $0x1f,%ecx */
0x01, 0xc1,                               /*267: add    %eax,%ecx */
0x39, 0xcb,                               /*269: cmp    %ecx,%ebx */
0x7d, 0x14,                               /*26b: jge    281 <op_enter+0x281> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*26d: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*272: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*275: and    $0x1f,%ecx */
0x31, 0xd2,                               /*278: xor    %edx,%edx */
0x89, 0xd8,                               /*27a: mov    %ebx,%eax */
0x29, 0xc8,                               /*27c: sub    %ecx,%eax */
0x0f, 0x4e, 0xc2,                         /*27e: cmovle %edx,%eax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*281: mov    0x0(%rip),%rcx        # 288 <op_enter+0x288> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*288: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*28d: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*292: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*295: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*298: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*29d: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*2a0: and    $0x1f,%edi */
0x01, 0xf7,                               /*2a3: add    %esi,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2a5: mov    $0x0,%esi */
0xc1, 0xee, 0x0c,                         /*2aa: shr    $0xc,%esi */
0x83, 0xe6, 0x01,                         /*2ad: and    $0x1,%esi */
0x01, 0xfe,                               /*2b0: add    %edi,%esi */
0xc1, 0xea, 0x07,                         /*2b2: shr    $0x7,%edx */
0x83, 0xe2, 0x1f,                         /*2b5: and    $0x1f,%edx */
0x8d, 0x54, 0x32, 0x01,                   /*2b8: lea    0x1(%rdx,%rsi,1),%edx */
0x48, 0x63, 0xd2,                         /*2bc: movslq %edx,%rdx */
0xf2, 0x43, 0x0f, 0x10, 0x04, 0xe7,       /*2bf: movsd  (%r15,%r12,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xd1,             /*2c5: movsd  %xmm0,(%rcx,%rdx,8) */
0x8d, 0x4b, 0x01,                         /*2ca: lea    0x1(%rbx),%ecx */
0x48, 0x63, 0xc9,                         /*2cd: movslq %ecx,%rcx */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*2d0: mov    0x0(%rip),%rdx        # 2d7 <op_enter+0x2d7> */
0xc7, 0x04, 0xca, 0x00, 0x00, 0x00, 0x00, /*2d7: movl   $0x0,(%rdx,%rcx,8) */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*2de: mov    0x0(%rip),%rdx        # 2e5 <op_enter+0x2e5> */
0xc7, 0x44, 0xca, 0x04, 0x00, 0x40, 0xf0, 0xff,/*2e5: movl   $0xfff04000,0x4(%rdx,%rcx,8) */
0x4d, 0x39, 0xf5,                         /*2ed: cmp    %r14,%r13 */
0x0f, 0x84, 0x68, 0x01, 0x00, 0x00,       /*2f0: je     45e <op_enter+0x45e> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*2f6: mov    0x0(%rip),%rcx        # 2fd <op_enter+0x2fd> */
0x48, 0x8d, 0x69, 0x08,                   /*2fd: lea    0x8(%rcx),%rbp */
0x4c, 0x39, 0xf5,                         /*301: cmp    %r14,%rbp */
0x0f, 0x86, 0x1c, 0x01, 0x00, 0x00,       /*304: jbe    426 <op_enter+0x426> */
0x89, 0xde,                               /*30a: mov    %ebx,%esi */
0x29, 0xc6,                               /*30c: sub    %eax,%esi */
0x48, 0x63, 0xf6,                         /*30e: movslq %esi,%rsi */
0x49, 0x8d, 0x3c, 0xf6,                   /*311: lea    (%r14,%rsi,8),%rdi */
0x48, 0x39, 0xfd,                         /*315: cmp    %rdi,%rbp */
0x0f, 0x83, 0x08, 0x01, 0x00, 0x00,       /*318: jae    426 <op_enter+0x426> */
0x39, 0xc3,                               /*31e: cmp    %eax,%ebx */
0x0f, 0x84, 0x38, 0x01, 0x00, 0x00,       /*320: je     45e <op_enter+0x45e> */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*326: nopw   %cs:0x0(%rax,%rax,1) */
0xf2, 0x41, 0x0f, 0x10, 0x44, 0xf6, 0xf8, /*330: movsd  -0x8(%r14,%rsi,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xf1,             /*337: movsd  %xmm0,(%rcx,%rsi,8) */
0x48, 0xff, 0xce,                         /*33c: dec    %rsi */
0x75, 0xef,                               /*33f: jne    330 <op_enter+0x330> */
0xe9, 0x18, 0x01, 0x00, 0x00,             /*341: jmpq   45e <op_enter+0x45e> */
0x4d, 0x39, 0xf5,                         /*346: cmp    %r14,%r13 */
0x0f, 0x84, 0x2f, 0x02, 0x00, 0x00,       /*349: je     57e <op_enter+0x57e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*34f: mov    0x0(%rip),%rax        # 356 <op_enter+0x356> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*356: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*35b: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*360: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*363: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*366: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*36b: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*36e: and    $0x1f,%esi */
0x01, 0xd6,                               /*371: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*373: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*378: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*37b: and    $0x1,%edx */
0x01, 0xf2,                               /*37e: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*380: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*383: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*386: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*38a: movslq %ecx,%rcx */
0xf2, 0x43, 0x0f, 0x10, 0x04, 0xe7,       /*38d: movsd  (%r15,%r12,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*393: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*398: mov    0x0(%rip),%rax        # 39f <op_enter+0x39f> */
0x48, 0x8d, 0x48, 0x08,                   /*39f: lea    0x8(%rax),%rcx */
0x4c, 0x39, 0xf1,                         /*3a3: cmp    %r14,%rcx */
0x0f, 0x86, 0x68, 0x01, 0x00, 0x00,       /*3a6: jbe    514 <op_enter+0x514> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3ac: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*3b1: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*3b6: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*3b9: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*3bc: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*3bf: and    $0x1f,%edx */
0x01, 0xf2,                               /*3c2: add    %esi,%edx */
0x48, 0x63, 0xd2,                         /*3c4: movslq %edx,%rdx */
0x49, 0x8d, 0x14, 0xd6,                   /*3c7: lea    (%r14,%rdx,8),%rdx */
0x48, 0x39, 0xd1,                         /*3cb: cmp    %rdx,%rcx */
0x0f, 0x83, 0x40, 0x01, 0x00, 0x00,       /*3ce: jae    514 <op_enter+0x514> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3d4: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3d9: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*3de: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*3e1: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*3e4: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*3e7: and    $0x1f,%ecx */
0x01, 0xd1,                               /*3ea: add    %edx,%ecx */
0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00,       /*3ec: je     57e <op_enter+0x57e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3f2: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3f7: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*3fc: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*3ff: and    $0x1f,%edx */
0xc1, 0xe9, 0x12,                         /*402: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*405: and    $0x1f,%ecx */
0x01, 0xd1,                               /*408: add    %edx,%ecx */
0x48, 0x63, 0xc9,                         /*40a: movslq %ecx,%rcx */
0x0f, 0x1f, 0x00,                         /*40d: nopl   (%rax) */
0xf2, 0x41, 0x0f, 0x10, 0x44, 0xce, 0xf8, /*410: movsd  -0x8(%r14,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*417: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*41c: dec    %rcx */
0x75, 0xef,                               /*41f: jne    410 <op_enter+0x410> */
0xe9, 0x58, 0x01, 0x00, 0x00,             /*421: jmpq   57e <op_enter+0x57e> */
0x4c, 0x39, 0xf5,                         /*426: cmp    %r14,%rbp */
0x74, 0x33,                               /*429: je     45e <op_enter+0x45e> */
0x89, 0xde,                               /*42b: mov    %ebx,%esi */
0x29, 0xc6,                               /*42d: sub    %eax,%esi */
0x74, 0x2d,                               /*42f: je     45e <op_enter+0x45e> */
0x48, 0x63, 0xf6,                         /*431: movslq %esi,%rsi */
0x48, 0xf7, 0xde,                         /*434: neg    %rsi */
0x4c, 0x89, 0xf7,                         /*437: mov    %r14,%rdi */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*43a: nopw   0x0(%rax,%rax,1) */
0x48, 0x89, 0xea,                         /*440: mov    %rbp,%rdx */
0x48, 0x83, 0xc1, 0x10,                   /*443: add    $0x10,%rcx */
0xf2, 0x0f, 0x10, 0x07,                   /*447: movsd  (%rdi),%xmm0 */
0x48, 0x83, 0xc7, 0x08,                   /*44b: add    $0x8,%rdi */
0xf2, 0x0f, 0x11, 0x02,                   /*44f: movsd  %xmm0,(%rdx) */
0x48, 0xff, 0xc6,                         /*453: inc    %rsi */
0x48, 0x89, 0xcd,                         /*456: mov    %rcx,%rbp */
0x48, 0x89, 0xd1,                         /*459: mov    %rdx,%rcx */
0x75, 0xe2,                               /*45c: jne    440 <op_enter+0x440> */
0x85, 0xc0,                               /*45e: test   %eax,%eax */
0x0f, 0x84, 0xcf, 0x02, 0x00, 0x00,       /*460: je     735 <op_enter+0x735> */
0x4c, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*466: mov    0x0(%rip),%r8        # 46d <op_enter+0x46d> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*46d: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*472: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*477: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*47a: and    $0x1f,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*47d: mov    $0x0,%edi */
0xc1, 0xef, 0x12,                         /*482: shr    $0x12,%edi */
0x83, 0xe7, 0x1f,                         /*485: and    $0x1f,%edi */
0x01, 0xf7,                               /*488: add    %esi,%edi */
0xc1, 0xea, 0x0c,                         /*48a: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*48d: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*490: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x63, 0xd2,                         /*494: movslq %edx,%rdx */
0x49, 0x8d, 0x14, 0xd0,                   /*497: lea    (%r8,%rdx,8),%rdx */
0x89, 0xde,                               /*49b: mov    %ebx,%esi */
0x29, 0xc6,                               /*49d: sub    %eax,%esi */
0x48, 0x63, 0xee,                         /*49f: movslq %esi,%rbp */
0x49, 0x8d, 0x3c, 0xee,                   /*4a2: lea    (%r14,%rbp,8),%rdi */
0x48, 0x39, 0xfa,                         /*4a6: cmp    %rdi,%rdx */
0x0f, 0x86, 0x65, 0x02, 0x00, 0x00,       /*4a9: jbe    714 <op_enter+0x714> */
0x48, 0x63, 0xf0,                         /*4af: movslq %eax,%rsi */
0x48, 0x8d, 0x4c, 0x35, 0x00,             /*4b2: lea    0x0(%rbp,%rsi,1),%rcx */
0x49, 0x8d, 0x0c, 0xce,                   /*4b7: lea    (%r14,%rcx,8),%rcx */
0x48, 0x39, 0xca,                         /*4bb: cmp    %rcx,%rdx */
0x0f, 0x83, 0x50, 0x02, 0x00, 0x00,       /*4be: jae    714 <op_enter+0x714> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4c4: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4c9: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*4ce: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*4d1: and    $0x1f,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*4d4: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*4d9: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*4dc: and    $0x1f,%edx */
0x01, 0xca,                               /*4df: add    %ecx,%edx */
0xc1, 0xe8, 0x0c,                         /*4e1: shr    $0xc,%eax */
0x83, 0xe0, 0x01,                         /*4e4: and    $0x1,%eax */
0x8d, 0x44, 0x10, 0x01,                   /*4e7: lea    0x1(%rax,%rdx,1),%eax */
0x49, 0x8d, 0x44, 0xc0, 0xf8,             /*4eb: lea    -0x8(%r8,%rax,8),%rax */
0x49, 0x8d, 0x4c, 0xee, 0xf8,             /*4f0: lea    -0x8(%r14,%rbp,8),%rcx */
0x90,                                     /*4f5: nop */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*4f6: nopw   %cs:0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x04, 0xf1,             /*500: movsd  (%rcx,%rsi,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xf0,             /*505: movsd  %xmm0,(%rax,%rsi,8) */
0x48, 0xff, 0xce,                         /*50a: dec    %rsi */
0x75, 0xf1,                               /*50d: jne    500 <op_enter+0x500> */
0xe9, 0x21, 0x02, 0x00, 0x00,             /*50f: jmpq   735 <op_enter+0x735> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*514: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*519: mov    $0x0,%esi */
0xc1, 0xee, 0x0d,                         /*51e: shr    $0xd,%esi */
0x83, 0xe6, 0x1f,                         /*521: and    $0x1f,%esi */
0xc1, 0xea, 0x12,                         /*524: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*527: and    $0x1f,%edx */
0x01, 0xf2,                               /*52a: add    %esi,%edx */
0x4c, 0x39, 0xf1,                         /*52c: cmp    %r14,%rcx */
0x74, 0x4d,                               /*52f: je     57e <op_enter+0x57e> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*531: mov    $0x0,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*536: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*53b: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*53e: and    $0x1f,%edi */
0xc1, 0xee, 0x12,                         /*541: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*544: and    $0x1f,%esi */
0x01, 0xfe,                               /*547: add    %edi,%esi */
0x74, 0x33,                               /*549: je     57e <op_enter+0x57e> */
0x48, 0xf7, 0xda,                         /*54b: neg    %rdx */
0x4c, 0x89, 0xf6,                         /*54e: mov    %r14,%rsi */
0x0f, 0x1f, 0x44, 0x00, 0x00,             /*551: nopl   0x0(%rax,%rax,1) */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*556: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xcf,                         /*560: mov    %rcx,%rdi */
0x48, 0x83, 0xc0, 0x10,                   /*563: add    $0x10,%rax */
0xf2, 0x0f, 0x10, 0x06,                   /*567: movsd  (%rsi),%xmm0 */
0x48, 0x83, 0xc6, 0x08,                   /*56b: add    $0x8,%rsi */
0xf2, 0x0f, 0x11, 0x07,                   /*56f: movsd  %xmm0,(%rdi) */
0x48, 0xff, 0xc2,                         /*573: inc    %rdx */
0x48, 0x89, 0xc1,                         /*576: mov    %rax,%rcx */
0x48, 0x89, 0xf8,                         /*579: mov    %rdi,%rax */
0x75, 0xe2,                               /*57c: jne    560 <op_enter+0x560> */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*57e: mov    $0x0,%ebp */
0x0f, 0xba, 0xe5, 0x0c,                   /*583: bt     $0xc,%ebp */
0x72, 0x18,                               /*587: jb     5a1 <op_enter+0x5a1> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*589: mov    $0x0,%eax */
0xc1, 0xe8, 0x0d,                         /*58e: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*591: and    $0x1f,%eax */
0xc1, 0xed, 0x12,                         /*594: shr    $0x12,%ebp */
0x83, 0xe5, 0x1f,                         /*597: and    $0x1f,%ebp */
0x01, 0xc5,                               /*59a: add    %eax,%ebp */
0xe9, 0x80, 0x00, 0x00, 0x00,             /*59c: jmpq   621 <op_enter+0x621> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5a1: mov    $0x0,%ecx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5a6: mov    $0x0,%eax */
0xc1, 0xe8, 0x0d,                         /*5ab: shr    $0xd,%eax */
0x83, 0xe0, 0x1f,                         /*5ae: and    $0x1f,%eax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5b1: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*5b6: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*5b9: and    $0x1f,%edx */
0x4c, 0x89, 0x6c, 0x24, 0x08,             /*5bc: mov    %r13,0x8(%rsp) */
0x41, 0x89, 0xd5,                         /*5c1: mov    %edx,%r13d */
0x41, 0xf7, 0xdd,                         /*5c4: neg    %r13d */
0x41, 0x29, 0xc5,                         /*5c7: sub    %eax,%r13d */
0xc1, 0xe9, 0x07,                         /*5ca: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*5cd: and    $0x1f,%ecx */
0x41, 0x29, 0xcd,                         /*5d0: sub    %ecx,%r13d */
0x42, 0x8d, 0x34, 0x2b,                   /*5d3: lea    (%rbx,%r13,1),%esi */
0x4c, 0x89, 0x7c, 0x24, 0x10,             /*5d7: mov    %r15,0x10(%rsp) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*5dc: mov    0x0(%rip),%rcx        # 5e3 <op_enter+0x5e3> */
0x48, 0x89, 0x0c, 0x24,                   /*5e3: mov    %rcx,(%rsp) */
0x8d, 0x2c, 0x02,                         /*5e7: lea    (%rdx,%rax,1),%ebp */
0x8d, 0x4c, 0x02, 0x01,                   /*5ea: lea    0x1(%rdx,%rax,1),%ecx */
0x4d, 0x89, 0xe7,                         /*5ee: mov    %r12,%r15 */
0x4c, 0x63, 0xe1,                         /*5f1: movslq %ecx,%r12 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*5f4: mov    0x0(%rip),%rdi        # 5fb <op_enter+0x5fb> */
0x48, 0x01, 0xc2,                         /*5fb: add    %rax,%rdx */
0x49, 0x8d, 0x14, 0xd6,                   /*5fe: lea    (%r14,%rdx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*602: callq  607 <op_enter+0x607> */
0x48, 0x8b, 0x0c, 0x24,                   /*607: mov    (%rsp),%rcx */
0x4a, 0x89, 0x04, 0xe1,                   /*60b: mov    %rax,(%rcx,%r12,8) */
0x4d, 0x89, 0xfc,                         /*60f: mov    %r15,%r12 */
0x4c, 0x8b, 0x7c, 0x24, 0x10,             /*612: mov    0x10(%rsp),%r15 */
0x44, 0x01, 0xed,                         /*617: add    %r13d,%ebp */
0x4c, 0x8b, 0x6c, 0x24, 0x08,             /*61a: mov    0x8(%rsp),%r13 */
0x01, 0xdd,                               /*61f: add    %ebx,%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*621: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*626: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*62b: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*62e: and    $0x1f,%ecx */
0x29, 0xcb,                               /*631: sub    %ecx,%ebx */
0xc1, 0xe8, 0x12,                         /*633: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*636: and    $0x1f,%eax */
0x39, 0xc3,                               /*639: cmp    %eax,%ebx */
0x0f, 0x8e, 0xd4, 0x01, 0x00, 0x00,       /*63b: jle    815 <op_enter+0x815> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*641: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*646: shr    $0x7,%eax */
0xa8, 0x1f,                               /*649: test   $0x1f,%al */
0x0f, 0x84, 0xc4, 0x01, 0x00, 0x00,       /*64b: je     815 <op_enter+0x815> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*651: mov    0x0(%rip),%rax        # 658 <op_enter+0x658> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*658: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*65d: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*662: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*665: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*668: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*66d: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*670: and    $0x1f,%esi */
0x01, 0xd6,                               /*673: add    %edx,%esi */
0xc1, 0xe9, 0x0c,                         /*675: shr    $0xc,%ecx */
0x83, 0xe1, 0x01,                         /*678: and    $0x1,%ecx */
0x8d, 0x4c, 0x31, 0x01,                   /*67b: lea    0x1(%rcx,%rsi,1),%ecx */
0x48, 0x63, 0xc9,                         /*67f: movslq %ecx,%rcx */
0x48, 0x8d, 0x0c, 0xc8,                   /*682: lea    (%rax,%rcx,8),%rcx */
0x48, 0x63, 0xf5,                         /*686: movslq %ebp,%rsi */
0x49, 0x8d, 0x14, 0xf6,                   /*689: lea    (%r14,%rsi,8),%rdx */
0x48, 0x39, 0xd1,                         /*68d: cmp    %rdx,%rcx */
0x0f, 0x86, 0x46, 0x01, 0x00, 0x00,       /*690: jbe    7dc <op_enter+0x7dc> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*696: mov    $0x0,%edi */
0xc1, 0xef, 0x07,                         /*69b: shr    $0x7,%edi */
0x83, 0xe7, 0x1f,                         /*69e: and    $0x1f,%edi */
0x48, 0x01, 0xf7,                         /*6a1: add    %rsi,%rdi */
0x49, 0x8d, 0x3c, 0xfe,                   /*6a4: lea    (%r14,%rdi,8),%rdi */
0x48, 0x39, 0xf9,                         /*6a8: cmp    %rdi,%rcx */
0x0f, 0x83, 0x2b, 0x01, 0x00, 0x00,       /*6ab: jae    7dc <op_enter+0x7dc> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*6b1: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*6b6: shr    $0x7,%ecx */
0xf6, 0xc1, 0x1f,                         /*6b9: test   $0x1f,%cl */
0x0f, 0x84, 0x53, 0x01, 0x00, 0x00,       /*6bc: je     815 <op_enter+0x815> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*6c2: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6c7: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*6cc: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*6cf: and    $0x1f,%edx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*6d2: mov    $0x0,%edi */
0xc1, 0xef, 0x0d,                         /*6d7: shr    $0xd,%edi */
0x83, 0xe7, 0x1f,                         /*6da: and    $0x1f,%edi */
0x01, 0xd7,                               /*6dd: add    %edx,%edi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*6df: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*6e4: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*6e7: and    $0x1,%edx */
0x8d, 0x54, 0x3a, 0x01,                   /*6ea: lea    0x1(%rdx,%rdi,1),%edx */
0x48, 0x8d, 0x44, 0xd0, 0xf8,             /*6ee: lea    -0x8(%rax,%rdx,8),%rax */
0x49, 0x8d, 0x54, 0xf6, 0xf8,             /*6f3: lea    -0x8(%r14,%rsi,8),%rdx */
0xc1, 0xe9, 0x07,                         /*6f8: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*6fb: and    $0x1f,%ecx */
0x66, 0x90,                               /*6fe: xchg   %ax,%ax */
0xf2, 0x0f, 0x10, 0x04, 0xca,             /*700: movsd  (%rdx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*705: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*70a: dec    %rcx */
0x75, 0xf1,                               /*70d: jne    700 <op_enter+0x700> */
0xe9, 0x01, 0x01, 0x00, 0x00,             /*70f: jmpq   815 <op_enter+0x815> */
0x48, 0x39, 0xfa,                         /*714: cmp    %rdi,%rdx */
0x74, 0x1c,                               /*717: je     735 <op_enter+0x735> */
0x48, 0x98,                               /*719: cltq */
0x48, 0xf7, 0xd8,                         /*71b: neg    %rax */
0x66, 0x90,                               /*71e: xchg   %ax,%ax */
0xf2, 0x0f, 0x10, 0x07,                   /*720: movsd  (%rdi),%xmm0 */
0x48, 0x83, 0xc7, 0x08,                   /*724: add    $0x8,%rdi */
0xf2, 0x0f, 0x11, 0x02,                   /*728: movsd  %xmm0,(%rdx) */
0x48, 0x83, 0xc2, 0x08,                   /*72c: add    $0x8,%rdx */
0x48, 0xff, 0xc0,                         /*730: inc    %rax */
0x75, 0xeb,                               /*733: jne    720 <op_enter+0x720> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*735: mov    $0x0,%eax */
0x0f, 0xba, 0xe0, 0x0c,                   /*73a: bt     $0xc,%eax */
0x73, 0x36,                               /*73e: jae    776 <op_enter+0x776> */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*740: mov    0x0(%rip),%r14        # 747 <op_enter+0x747> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*747: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*74c: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*751: shr    $0xd,%ecx */
0x83, 0xe1, 0x1f,                         /*754: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*757: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*75a: and    $0x1f,%eax */
0x8d, 0x44, 0x08, 0x01,                   /*75d: lea    0x1(%rax,%rcx,1),%eax */
0x48, 0x63, 0xe8,                         /*761: movslq %eax,%rbp */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*764: mov    0x0(%rip),%rdi        # 76b <op_enter+0x76b> */
0x31, 0xf6,                               /*76b: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*76d: callq  772 <op_enter+0x772> */
0x49, 0x89, 0x04, 0xee,                   /*772: mov    %rax,(%r14,%rbp,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*776: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*77b: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*780: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*783: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*786: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*789: and    $0x1f,%eax */
0x01, 0xc8,                               /*78c: add    %ecx,%eax */
0x39, 0xc3,                               /*78e: cmp    %eax,%ebx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*790: mov    $0x0,%eax */
0x0f, 0x8c, 0xf9, 0x00, 0x00, 0x00,       /*795: jl     894 <op_enter+0x894> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*79b: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*7a0: shr    $0xd,%ecx */
0xf6, 0xc1, 0x1f,                         /*7a3: test   $0x1f,%cl */
0x0f, 0x84, 0xe8, 0x00, 0x00, 0x00,       /*7a6: je     894 <op_enter+0x894> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7ac: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7b1: mov    $0x0,%ecx */
0xc1, 0xe9, 0x07,                         /*7b6: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*7b9: and    $0x1f,%ecx */
0xc1, 0xe8, 0x12,                         /*7bc: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*7bf: and    $0x1f,%eax */
0xf7, 0xd8,                               /*7c2: neg    %eax */
0x29, 0xc8,                               /*7c4: sub    %ecx,%eax */
0x01, 0xc3,                               /*7c6: add    %eax,%ebx */
0x48, 0x63, 0xc3,                         /*7c8: movslq %ebx,%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*7cb: mov    0x0(%rip),%rcx        # 7d2 <op_enter+0x7d2> */
0x0f, 0xb7, 0x44, 0x41, 0x70,             /*7d2: movzwl 0x70(%rcx,%rax,2),%eax */
0xe9, 0xb0, 0x00, 0x00, 0x00,             /*7d7: jmpq   88c <op_enter+0x88c> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*7dc: mov    $0x0,%eax */
0xc1, 0xe8, 0x07,                         /*7e1: shr    $0x7,%eax */
0x48, 0x39, 0xd1,                         /*7e4: cmp    %rdx,%rcx */
0x74, 0x2c,                               /*7e7: je     815 <op_enter+0x815> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*7e9: mov    $0x0,%esi */
0xc1, 0xee, 0x07,                         /*7ee: shr    $0x7,%esi */
0x40, 0xf6, 0xc6, 0x1f,                   /*7f1: test   $0x1f,%sil */
0x74, 0x1e,                               /*7f5: je     815 <op_enter+0x815> */
0x48, 0x83, 0xe0, 0x1f,                   /*7f7: and    $0x1f,%rax */
0x48, 0xf7, 0xd8,                         /*7fb: neg    %rax */
0x66, 0x90,                               /*7fe: xchg   %ax,%ax */
0xf2, 0x0f, 0x10, 0x02,                   /*800: movsd  (%rdx),%xmm0 */
0x48, 0x83, 0xc2, 0x08,                   /*804: add    $0x8,%rdx */
0xf2, 0x0f, 0x11, 0x01,                   /*808: movsd  %xmm0,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*80c: add    $0x8,%rcx */
0x48, 0xff, 0xc0,                         /*810: inc    %rax */
0x75, 0xeb,                               /*813: jne    800 <op_enter+0x800> */
0x4d, 0x39, 0xf5,                         /*815: cmp    %r14,%r13 */
0x75, 0x49,                               /*818: jne    863 <op_enter+0x863> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*81a: mov    0x0(%rip),%rax        # 821 <op_enter+0x821> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*821: mov    $0x0,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*826: mov    $0x0,%edx */
0xc1, 0xea, 0x0d,                         /*82b: shr    $0xd,%edx */
0x83, 0xe2, 0x1f,                         /*82e: and    $0x1f,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*831: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*836: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*839: and    $0x1f,%esi */
0x01, 0xd6,                               /*83c: add    %edx,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*83e: mov    $0x0,%edx */
0xc1, 0xea, 0x0c,                         /*843: shr    $0xc,%edx */
0x83, 0xe2, 0x01,                         /*846: and    $0x1,%edx */
0x01, 0xf2,                               /*849: add    %esi,%edx */
0xc1, 0xe9, 0x07,                         /*84b: shr    $0x7,%ecx */
0x83, 0xe1, 0x1f,                         /*84e: and    $0x1f,%ecx */
0x8d, 0x4c, 0x11, 0x01,                   /*851: lea    0x1(%rcx,%rdx,1),%ecx */
0x48, 0x63, 0xc9,                         /*855: movslq %ecx,%rcx */
0xf2, 0x43, 0x0f, 0x10, 0x04, 0xe7,       /*858: movsd  (%r15,%r12,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*85e: movsd  %xmm0,(%rax,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*863: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*868: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*86d: shr    $0xd,%ecx */
0xf6, 0xc1, 0x1f,                         /*870: test   $0x1f,%cl */
0x7e, 0x1f,                               /*873: jle    894 <op_enter+0x894> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*875: mov    0x0(%rip),%rax        # 87c <op_enter+0x87c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*87c: mov    $0x0,%ecx */
0xc1, 0xe9, 0x0d,                         /*881: shr    $0xd,%ecx */
0x83, 0xe1, 0x1f,                         /*884: and    $0x1f,%ecx */
0x0f, 0xb7, 0x44, 0x48, 0x70,             /*887: movzwl 0x70(%rax,%rcx,2),%eax */
0x48, 0x8d, 0x04, 0x85, 0x00, 0x00, 0x00, 0x00,/*88c: lea    0x0(,%rax,4),%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*894: mov    0x0(%rip),%rcx        # 89b <op_enter+0x89b> */
0x48, 0x2b, 0x41, 0x08,                   /*89b: sub    0x8(%rcx),%rax */
0x48, 0x8b, 0x91, 0xa8, 0x00, 0x00, 0x00, /*89f: mov    0xa8(%rcx),%rdx */
0x48, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00,/*8a6: movabs $0x3fffffffc,%rsi */
0x48, 0x21, 0xc6,                         /*8b0: and    %rax,%rsi */
0x8b, 0x04, 0x32,                         /*8b3: mov    (%rdx,%rsi,1),%eax */
0x48, 0x03, 0x81, 0xc0, 0x00, 0x00, 0x00, /*8b6: add    0xc0(%rcx),%rax */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*8bd: mov    $0x0,%edi */
0xff, 0xd0,                               /*8c2: callq  *%rax */
0x48, 0x83, 0xc4, 0x18,                   /*8c4: add    $0x18,%rsp */
0x5b,                                     /*8c8: pop    %rbx */
0x41, 0x5c,                               /*8c9: pop    %r12 */
0x41, 0x5d,                               /*8cb: pop    %r13 */
0x41, 0x5e,                               /*8cd: pop    %r14 */
0x41, 0x5f,                               /*8cf: pop    %r15 */
0x5d,                                     /*8d1: pop    %rbp */

};
static uint8_t op_enter__rodata[] = {

};


static uint8_t op_enter_method_m__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x57,                               /*e: push   %r15 */
0x41, 0x56,                               /*10: push   %r14 */
0x41, 0x54,                               /*12: push   %r12 */
0x53,                                     /*14: push   %rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*15: mov    0x0(%rip),%rdi        # 1c <op_enter_method_m+0x1c> */
0x48, 0x8b, 0x47, 0x18,                   /*1c: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*20: mov    0x20(%rax),%rax */
0x48, 0x63, 0x58, 0x40,                   /*24: movslq 0x40(%rax),%rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*28: mov    0x0(%rip),%r14        # 2f <op_enter_method_m+0x2f> */
0x48, 0x8d, 0x43, 0x01,                   /*2f: lea    0x1(%rbx),%rax */
0x48, 0x85, 0xdb,                         /*33: test   %rbx,%rbx */
0x41, 0xbf, 0x02, 0x00, 0x00, 0x00,       /*36: mov    $0x2,%r15d */
0x4c, 0x0f, 0x49, 0xf8,                   /*3c: cmovns %rax,%r15 */
0x43, 0x8b, 0x44, 0xfe, 0x04,             /*40: mov    0x4(%r14,%r15,8),%eax */
0xb1, 0x01,                               /*45: mov    $0x1,%cl */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*47: cmp    $0xfff00001,%eax */
0x72, 0x1f,                               /*4c: jb     6d <op_enter_method_m+0x6d> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*4e: and    $0xfc000,%eax */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*53: cmp    $0x4000,%eax */
0x75, 0x07,                               /*58: jne    61 <op_enter_method_m+0x61> */
0x43, 0x83, 0x3c, 0xfe, 0x00,             /*5a: cmpl   $0x0,(%r14,%r15,8) */
0x74, 0x0a,                               /*5f: je     6b <op_enter_method_m+0x6b> */
0x3d, 0x00, 0x80, 0x03, 0x00,             /*61: cmp    $0x38000,%eax */
0x0f, 0x95, 0xc1,                         /*66: setne  %cl */
0xeb, 0x02,                               /*69: jmp    6d <op_enter_method_m+0x6d> */
0x31, 0xc9,                               /*6b: xor    %ecx,%ecx */
0x84, 0xc9,                               /*6d: test   %cl,%cl */
0x74, 0x1d,                               /*6f: je     8e <op_enter_method_m+0x8e> */
0x4b, 0x8b, 0x34, 0xfe,                   /*71: mov    (%r14,%r15,8),%rsi */
0xba, 0x0d, 0x00, 0x00, 0x00,             /*75: mov    $0xd,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7a: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*7f: mov    $0x0,%r8d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*85: callq  8a <op_enter_method_m+0x8a> */
0x4b, 0x89, 0x04, 0xfe,                   /*8a: mov    %rax,(%r14,%r15,8) */
0x4d, 0x8d, 0x66, 0x08,                   /*8e: lea    0x8(%r14),%r12 */
0x85, 0xdb,                               /*92: test   %ebx,%ebx */
0x78, 0x5c,                               /*94: js     f2 <op_enter_method_m+0xf2> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*96: mov    $0x0,%eax */
0xc1, 0xe8, 0x12,                         /*9b: shr    $0x12,%eax */
0x83, 0xe0, 0x1f,                         /*9e: and    $0x1f,%eax */
0x39, 0xc3,                               /*a1: cmp    %eax,%ebx */
0x4c, 0x89, 0xe3,                         /*a3: mov    %r12,%rbx */
0x7d, 0x76,                               /*a6: jge    11e <op_enter_method_m+0x11e> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*a8: mov    0x0(%rip),%rdi        # af <op_enter_method_m+0xaf> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*af: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*b4: shr    $0x12,%esi */
0x83, 0xe6, 0x1f,                         /*b7: and    $0x1f,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ba: callq  bf <op_enter_method_m+0xbf> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*bf: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*c4: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*c9: callq  ce <op_enter_method_m+0xce> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*ce: mov    0x0(%rip),%rdi        # d5 <op_enter_method_m+0xd5> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*d5: mov    0x0(%rip),%rsi        # dc <op_enter_method_m+0xdc> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*dc: mov    0x0(%rip),%rcx        # e3 <op_enter_method_m+0xe3> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*e3: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*e8: jmpq   ed <op_enter_method_m+0xed> */
0xe9, 0x2b, 0x01, 0x00, 0x00,             /*ed: jmpq   21d <op_enter_method_m+0x21d> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f2: mov    0x0(%rip),%rax        # f9 <op_enter_method_m+0xf9> */
0x48, 0x8b, 0x70, 0x08,                   /*f9: mov    0x8(%rax),%rsi */
0x48, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00,/*fd: movabs $0x3fffffffffff,%rax */
0x48, 0x21, 0xf0,                         /*107: and    %rsi,%rax */
0x48, 0x8b, 0x1c, 0x85, 0x28, 0x00, 0x00, 0x00,/*10a: mov    0x28(,%rax,4),%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*112: mov    0x0(%rip),%rdi        # 119 <op_enter_method_m+0x119> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*119: callq  11e <op_enter_method_m+0x11e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*11e: mov    0x0(%rip),%rax        # 125 <op_enter_method_m+0x125> */
0x48, 0x8b, 0x40, 0x18,                   /*125: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*129: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12d: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*132: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*135: and    $0x1f,%ecx */
0x89, 0x48, 0x40,                         /*138: mov    %ecx,0x40(%rax) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*13b: mov    0x0(%rip),%rax        # 142 <op_enter_method_m+0x142> */
0xff, 0xc1,                               /*142: inc    %ecx */
0x48, 0x63, 0xc9,                         /*144: movslq %ecx,%rcx */
0xf2, 0x43, 0x0f, 0x10, 0x04, 0xfe,       /*147: movsd  (%r14,%r15,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*14d: movsd  %xmm0,(%rax,%rcx,8) */
0x49, 0x39, 0xdc,                         /*152: cmp    %rbx,%r12 */
0x0f, 0x84, 0xa3, 0x00, 0x00, 0x00,       /*155: je     1fe <op_enter_method_m+0x1fe> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*15b: mov    0x0(%rip),%rax        # 162 <op_enter_method_m+0x162> */
0x48, 0x8d, 0x48, 0x08,                   /*162: lea    0x8(%rax),%rcx */
0x48, 0x39, 0xd9,                         /*166: cmp    %rbx,%rcx */
0x76, 0x47,                               /*169: jbe    1b2 <op_enter_method_m+0x1b2> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*16b: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*170: shr    $0x12,%edx */
0x83, 0xe2, 0x1f,                         /*173: and    $0x1f,%edx */
0x48, 0x8d, 0x14, 0xd3,                   /*176: lea    (%rbx,%rdx,8),%rdx */
0x48, 0x39, 0xd1,                         /*17a: cmp    %rdx,%rcx */
0x73, 0x33,                               /*17d: jae    1b2 <op_enter_method_m+0x1b2> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17f: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*184: shr    $0x12,%ecx */
0xf6, 0xc1, 0x1f,                         /*187: test   $0x1f,%cl */
0x74, 0x72,                               /*18a: je     1fe <op_enter_method_m+0x1fe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*18c: mov    $0x0,%ecx */
0xc1, 0xe9, 0x12,                         /*191: shr    $0x12,%ecx */
0x83, 0xe1, 0x1f,                         /*194: and    $0x1f,%ecx */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*197: nopw   0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x44, 0xcb, 0xf8,       /*1a0: movsd  -0x8(%rbx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*1a6: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*1ab: dec    %rcx */
0x75, 0xf0,                               /*1ae: jne    1a0 <op_enter_method_m+0x1a0> */
0xeb, 0x4c,                               /*1b0: jmp    1fe <op_enter_method_m+0x1fe> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1b2: mov    $0x0,%edx */
0xc1, 0xea, 0x12,                         /*1b7: shr    $0x12,%edx */
0x48, 0x39, 0xd9,                         /*1ba: cmp    %rbx,%rcx */
0x74, 0x3f,                               /*1bd: je     1fe <op_enter_method_m+0x1fe> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1bf: mov    $0x0,%esi */
0xc1, 0xee, 0x12,                         /*1c4: shr    $0x12,%esi */
0x40, 0xf6, 0xc6, 0x1f,                   /*1c7: test   $0x1f,%sil */
0x74, 0x31,                               /*1cb: je     1fe <op_enter_method_m+0x1fe> */
0x48, 0x83, 0xe2, 0x1f,                   /*1cd: and    $0x1f,%rdx */
0x48, 0xf7, 0xda,                         /*1d1: neg    %rdx */
0x66, 0x90,                               /*1d4: xchg   %ax,%ax */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1d6: nopw   %cs:0x0(%rax,%rax,1) */
0x48, 0x89, 0xce,                         /*1e0: mov    %rcx,%rsi */
0x48, 0x83, 0xc0, 0x10,                   /*1e3: add    $0x10,%rax */
0xf2, 0x0f, 0x10, 0x03,                   /*1e7: movsd  (%rbx),%xmm0 */
0x48, 0x83, 0xc3, 0x08,                   /*1eb: add    $0x8,%rbx */
0xf2, 0x0f, 0x11, 0x06,                   /*1ef: movsd  %xmm0,(%rsi) */
0x48, 0xff, 0xc2,                         /*1f3: inc    %rdx */
0x48, 0x89, 0xc1,                         /*1f6: mov    %rax,%rcx */
0x48, 0x89, 0xf0,                         /*1f9: mov    %rsi,%rax */
0x75, 0xe2,                               /*1fc: jne    1e0 <op_enter_method_m+0x1e0> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1fe: mov    0x0(%rip),%rax        # 205 <op_enter_method_m+0x205> */
0x48, 0x8b, 0x88, 0xa8, 0x00, 0x00, 0x00, /*205: mov    0xa8(%rax),%rcx */
0x8b, 0x49, 0x04,                         /*20c: mov    0x4(%rcx),%ecx */
0x48, 0x03, 0x88, 0xc0, 0x00, 0x00, 0x00, /*20f: add    0xc0(%rax),%rcx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*216: mov    $0x0,%edi */
0xff, 0xd1,                               /*21b: callq  *%rcx */
0x5b,                                     /*21d: pop    %rbx */
0x41, 0x5c,                               /*21e: pop    %r12 */
0x41, 0x5e,                               /*220: pop    %r14 */
0x41, 0x5f,                               /*222: pop    %r15 */

};
static uint8_t op_enter_method_m__rodata[] = {

};


static uint8_t op_karg__text[] = {

};
static uint8_t op_karg__rodata[] = {

};


static uint8_t op_kdict__text[] = {

};
static uint8_t op_kdict__rodata[] = {

};


static uint8_t op_return__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x48, 0x83, 0xe4, 0xf0,                   /*4: and    $0xfffffffffffffff0,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%esi */
0x31, 0xd2,                               /*12: xor    %edx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*14: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*19: callq  1e <op_return+0x1e> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1e: mov    0x0(%rip),%rax        # 25 <op_return+0x25> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*25: mov    0x0(%rip),%rcx        # 2c <op_return+0x2c> */
0x48, 0x2b, 0x41, 0x08,                   /*2c: sub    0x8(%rcx),%rax */
0x48, 0x8b, 0x91, 0xa8, 0x00, 0x00, 0x00, /*30: mov    0xa8(%rcx),%rdx */
0x48, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00,/*37: movabs $0x3fffffffc,%rsi */
0x48, 0x21, 0xc6,                         /*41: and    %rax,%rsi */
0x8b, 0x04, 0x32,                         /*44: mov    (%rdx,%rsi,1),%eax */
0x48, 0x03, 0x81, 0xc0, 0x00, 0x00, 0x00, /*47: add    0xc0(%rcx),%rax */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*4e: mov    $0x0,%edi */
0xff, 0xe0,                               /*53: jmpq   *%rax */

};
static uint8_t op_return__rodata[] = {

};


static uint8_t op_break__text[] = {
0x55,                                     /*0: push   %rbp */
0x48, 0x89, 0xe5,                         /*1: mov    %rsp,%rbp */
0x48, 0x83, 0xe4, 0xf0,                   /*4: and    $0xfffffffffffffff0,%rsp */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*8: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*12: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1c: callq  21 <op_break+0x21> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*21: mov    0x0(%rip),%rax        # 28 <op_break+0x28> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*28: mov    0x0(%rip),%rcx        # 2f <op_break+0x2f> */
0x48, 0x2b, 0x41, 0x08,                   /*2f: sub    0x8(%rcx),%rax */
0x48, 0x8b, 0x91, 0xa8, 0x00, 0x00, 0x00, /*33: mov    0xa8(%rcx),%rdx */
0x48, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00,/*3a: movabs $0x3fffffffc,%rsi */
0x48, 0x21, 0xc6,                         /*44: and    %rax,%rsi */
0x8b, 0x04, 0x32,                         /*47: mov    (%rdx,%rsi,1),%eax */
0x48, 0x03, 0x81, 0xc0, 0x00, 0x00, 0x00, /*4a: add    0xc0(%rcx),%rax */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%edi */
0xff, 0xe0,                               /*56: jmpq   *%rax */

};
static uint8_t op_break__rodata[] = {

};


static uint8_t op_tailcall__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x41, 0x57,                               /*f: push   %r15 */
0x41, 0x56,                               /*11: push   %r14 */
0x41, 0x55,                               /*13: push   %r13 */
0x41, 0x54,                               /*15: push   %r12 */
0x53,                                     /*17: push   %rbx */
0x4c, 0x8b, 0x2d, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%r13        # 1f <op_tailcall+0x1f> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1f: mov    0x0(%rip),%rax        # 26 <op_tailcall+0x26> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*26: mov    $0x0,%ecx */
0x44, 0x8b, 0x3c, 0x88,                   /*2b: mov    (%rax,%rcx,4),%r15d */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*2f: mov    0x0(%rip),%rax        # 36 <op_tailcall+0x36> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*36: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*3b: movslq %ecx,%rcx */
0x4c, 0x8b, 0x34, 0xc8,                   /*3e: mov    (%rax,%rcx,8),%r14 */
0x4c, 0x89, 0xf0,                         /*42: mov    %r14,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*45: shr    $0x20,%rax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*49: cmp    $0xfff00001,%eax */
0x72, 0x31,                               /*4e: jb     81 <op_tailcall+0x81> */
0x4c, 0x89, 0xf0,                         /*50: mov    %r14,%rax */
0x48, 0xc1, 0xe8, 0x2e,                   /*53: shr    $0x2e,%rax */
0x83, 0xe0, 0x3f,                         /*57: and    $0x3f,%eax */
0x31, 0xf6,                               /*5a: xor    %esi,%esi */
0x83, 0xf8, 0x14,                         /*5c: cmp    $0x14,%eax */
0x7f, 0x26,                               /*5f: jg     87 <op_tailcall+0x87> */
0xff, 0xc8,                               /*61: dec    %eax */
0x83, 0xf8, 0x07,                         /*63: cmp    $0x7,%eax */
0x77, 0x24,                               /*66: ja     8c <op_tailcall+0x8c> */
0xff, 0x24, 0xc5, 0x00, 0x00, 0x00, 0x00, /*68: jmpq   *0x0(,%rax,8) */
0x45, 0x85, 0xf6,                         /*6f: test   %r14d,%r14d */
0x0f, 0x84, 0xaf, 0x02, 0x00, 0x00,       /*72: je     327 <op_tailcall+0x327> */
0x49, 0x8b, 0xb5, 0x90, 0x00, 0x00, 0x00, /*78: mov    0x90(%r13),%rsi */
0xeb, 0x20,                               /*7f: jmp    a1 <op_tailcall+0xa1> */
0x49, 0x8b, 0x75, 0x78,                   /*81: mov    0x78(%r13),%rsi */
0xeb, 0x1a,                               /*85: jmp    a1 <op_tailcall+0xa1> */
0x83, 0xf8, 0x15,                         /*87: cmp    $0x15,%eax */
0x74, 0x15,                               /*8a: je     a1 <op_tailcall+0xa1> */
0x48, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00,/*8c: movabs $0x3fffffffffff,%rax */
0x4c, 0x21, 0xf0,                         /*96: and    %r14,%rax */
0x48, 0x8b, 0x34, 0x85, 0x08, 0x00, 0x00, 0x00,/*99: mov    0x8(,%rax,4),%rsi */
0x48, 0x89, 0x34, 0x24,                   /*a1: mov    %rsi,(%rsp) */
0x48, 0x8d, 0x14, 0x24,                   /*a5: lea    (%rsp),%rdx */
0x4c, 0x89, 0xef,                         /*a9: mov    %r13,%rdi */
0x44, 0x89, 0xf9,                         /*ac: mov    %r15d,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*af: callq  b4 <op_tailcall+0xb4> */
0x49, 0x89, 0xc4,                         /*b4: mov    %rax,%r12 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*b7: mov    $0x0,%ecx */
0x4d, 0x85, 0xe4,                         /*bc: test   %r12,%r12 */
0x0f, 0x85, 0x27, 0x01, 0x00, 0x00,       /*bf: jne    1ec <op_tailcall+0x1ec> */
0x48, 0xbb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xf1, 0xff,/*c5: movabs $0xfff1400000000000,%rbx */
0x4c, 0x09, 0xfb,                         /*cf: or     %r15,%rbx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*d2: mov    $0x0,%esi */
0xba, 0x0e, 0x00, 0x00, 0x00,             /*d7: mov    $0xe,%edx */
0x4c, 0x89, 0xef,                         /*dc: mov    %r13,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*df: callq  e4 <op_tailcall+0xe4> */
0x41, 0x89, 0xc7,                         /*e4: mov    %eax,%r15d */
0x48, 0x8d, 0x34, 0x24,                   /*e7: lea    (%rsp),%rsi */
0x4c, 0x89, 0xef,                         /*eb: mov    %r13,%rdi */
0x44, 0x89, 0xfa,                         /*ee: mov    %r15d,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*f1: callq  f6 <op_tailcall+0xf6> */
0x49, 0x89, 0xc4,                         /*f6: mov    %rax,%r12 */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f9: mov    0x0(%rip),%rax        # 100 <op_tailcall+0x100> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*100: mov    $0x0,%ecx */
0x83, 0xf9, 0x7f,                         /*105: cmp    $0x7f,%ecx */
0x75, 0x23,                               /*108: jne    12d <op_tailcall+0x12d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10a: mov    $0x0,%ecx */
0xff, 0xc1,                               /*10f: inc    %ecx */
0x48, 0x63, 0xc9,                         /*111: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*114: mov    (%rax,%rcx,8),%rsi */
0x4c, 0x89, 0xef,                         /*118: mov    %r13,%rdi */
0x48, 0x89, 0xda,                         /*11b: mov    %rbx,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*11e: callq  123 <op_tailcall+0x123> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*123: mov    $0x0,%ecx */
0xe9, 0xbf, 0x00, 0x00, 0x00,             /*128: jmpq   1ec <op_tailcall+0x1ec> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*12d: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*132: movslq %ecx,%rcx */
0x48, 0x8d, 0x51, 0x01,                   /*135: lea    0x1(%rcx),%rdx */
0x48, 0x8d, 0x71, 0x02,                   /*139: lea    0x2(%rcx),%rsi */
0x48, 0x39, 0xd6,                         /*13d: cmp    %rdx,%rsi */
0x0f, 0x9e, 0xc2,                         /*140: setle  %dl */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*143: mov    $0x0,%edi */
0xff, 0xc7,                               /*148: inc    %edi */
0x48, 0x63, 0xff,                         /*14a: movslq %edi,%rdi */
0x48, 0x8d, 0x4c, 0x39, 0x01,             /*14d: lea    0x1(%rcx,%rdi,1),%rcx */
0x48, 0x39, 0xce,                         /*152: cmp    %rcx,%rsi */
0x0f, 0x9d, 0xc1,                         /*155: setge  %cl */
0x08, 0xd1,                               /*158: or     %dl,%cl */
0x74, 0x38,                               /*15a: je     194 <op_tailcall+0x194> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15c: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*161: cmp    $0xffffffff,%ecx */
0x74, 0x6a,                               /*164: je     1d0 <op_tailcall+0x1d0> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*166: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*16b: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x10,             /*16e: lea    0x10(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*173: mov    $0x0,%ecx */
0xff, 0xc1,                               /*178: inc    %ecx */
0x48, 0x63, 0xc9,                         /*17a: movslq %ecx,%rcx */
0x48, 0xf7, 0xd9,                         /*17d: neg    %rcx */
0xf2, 0x0f, 0x10, 0x40, 0xf8,             /*180: movsd  -0x8(%rax),%xmm0 */
0xf2, 0x0f, 0x11, 0x00,                   /*185: movsd  %xmm0,(%rax) */
0x48, 0x8d, 0x40, 0x08,                   /*189: lea    0x8(%rax),%rax */
0x48, 0xff, 0xc1,                         /*18d: inc    %rcx */
0x75, 0xee,                               /*190: jne    180 <op_tailcall+0x180> */
0xeb, 0x3c,                               /*192: jmp    1d0 <op_tailcall+0x1d0> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*194: mov    $0x0,%ecx */
0x83, 0xf9, 0xff,                         /*199: cmp    $0xffffffff,%ecx */
0x74, 0x32,                               /*19c: je     1d0 <op_tailcall+0x1d0> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*19e: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a3: movslq %ecx,%rcx */
0x48, 0x8d, 0x44, 0xc8, 0x08,             /*1a6: lea    0x8(%rax,%rcx,8),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1ab: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1b0: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1b2: movslq %ecx,%rcx */
0x90,                                     /*1b5: nop */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1b6: nopw   %cs:0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x44, 0xc8, 0xf8,       /*1c0: movsd  -0x8(%rax,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*1c6: movsd  %xmm0,(%rax,%rcx,8) */
0x48, 0xff, 0xc9,                         /*1cb: dec    %rcx */
0x75, 0xf0,                               /*1ce: jne    1c0 <op_tailcall+0x1c0> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1d0: mov    0x0(%rip),%rax        # 1d7 <op_tailcall+0x1d7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d7: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1dc: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1de: movslq %ecx,%rcx */
0x48, 0x89, 0x1c, 0xc8,                   /*1e1: mov    %rbx,(%rax,%rcx,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1e5: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1ea: inc    %ecx */
0x49, 0x8b, 0x45, 0x18,                   /*1ec: mov    0x18(%r13),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1f0: mov    0x20(%rax),%rax */
0x44, 0x89, 0x38,                         /*1f4: mov    %r15d,(%rax) */
0x48, 0x8b, 0x14, 0x24,                   /*1f7: mov    (%rsp),%rdx */
0x48, 0x89, 0x50, 0x48,                   /*1fb: mov    %rdx,0x48(%rax) */
0x83, 0xf9, 0x7f,                         /*1ff: cmp    $0x7f,%ecx */
0xbe, 0xff, 0xff, 0xff, 0xff,             /*202: mov    $0xffffffff,%esi */
0x0f, 0x45, 0xf1,                         /*207: cmovne %ecx,%esi */
0x89, 0x70, 0x40,                         /*20a: mov    %esi,0x40(%rax) */
0x49, 0x8b, 0x4d, 0x18,                   /*20d: mov    0x18(%r13),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*211: mov    0x8(%rcx),%rcx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*215: mov    0x0(%rip),%rdi        # 21c <op_tailcall+0x21c> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*21c: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*221: movslq %edx,%rdx */
0x48, 0x8d, 0x14, 0xd7,                   /*224: lea    (%rdi,%rdx,8),%rdx */
0xff, 0xc6,                               /*228: inc    %esi */
0x48, 0x39, 0xd1,                         /*22a: cmp    %rdx,%rcx */
0x76, 0x43,                               /*22d: jbe    272 <op_tailcall+0x272> */
0x48, 0x63, 0xde,                         /*22f: movslq %esi,%rbx */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*232: mov    $0x0,%ebp */
0x48, 0x63, 0xed,                         /*237: movslq %ebp,%rbp */
0x48, 0x01, 0xdd,                         /*23a: add    %rbx,%rbp */
0x48, 0x8d, 0x2c, 0xef,                   /*23d: lea    (%rdi,%rbp,8),%rbp */
0x48, 0x39, 0xe9,                         /*241: cmp    %rbp,%rcx */
0x73, 0x2c,                               /*244: jae    272 <op_tailcall+0x272> */
0x85, 0xf6,                               /*246: test   %esi,%esi */
0x74, 0x5b,                               /*248: je     2a5 <op_tailcall+0x2a5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*24a: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*24f: movslq %edx,%rdx */
0x48, 0x8d, 0x54, 0xd7, 0xf8,             /*252: lea    -0x8(%rdi,%rdx,8),%rdx */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*257: nopw   0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x04, 0xda,             /*260: movsd  (%rdx,%rbx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x44, 0xd9, 0xf8,       /*265: movsd  %xmm0,-0x8(%rcx,%rbx,8) */
0x48, 0xff, 0xcb,                         /*26b: dec    %rbx */
0x75, 0xf0,                               /*26e: jne    260 <op_tailcall+0x260> */
0xeb, 0x33,                               /*270: jmp    2a5 <op_tailcall+0x2a5> */
0x48, 0x39, 0xd1,                         /*272: cmp    %rdx,%rcx */
0x74, 0x2e,                               /*275: je     2a5 <op_tailcall+0x2a5> */
0x85, 0xf6,                               /*277: test   %esi,%esi */
0x74, 0x2a,                               /*279: je     2a5 <op_tailcall+0x2a5> */
0x48, 0x63, 0xf6,                         /*27b: movslq %esi,%rsi */
0x48, 0xf7, 0xde,                         /*27e: neg    %rsi */
0x0f, 0x1f, 0x44, 0x00, 0x00,             /*281: nopl   0x0(%rax,%rax,1) */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*286: nopw   %cs:0x0(%rax,%rax,1) */
0xf2, 0x0f, 0x10, 0x02,                   /*290: movsd  (%rdx),%xmm0 */
0x48, 0x83, 0xc2, 0x08,                   /*294: add    $0x8,%rdx */
0xf2, 0x0f, 0x11, 0x01,                   /*298: movsd  %xmm0,(%rcx) */
0x48, 0x83, 0xc1, 0x08,                   /*29c: add    $0x8,%rcx */
0x48, 0xff, 0xc6,                         /*2a0: inc    %rsi */
0x75, 0xeb,                               /*2a3: jne    290 <op_tailcall+0x290> */
0x41, 0xf6, 0x44, 0x24, 0x02, 0x04,       /*2a5: testb  $0x4,0x2(%r12) */
0x0f, 0x84, 0x82, 0x00, 0x00, 0x00,       /*2ab: je     333 <op_tailcall+0x333> */
0x49, 0x8b, 0x45, 0x18,                   /*2b1: mov    0x18(%r13),%rax */
0x48, 0x8b, 0x58, 0x08,                   /*2b5: mov    0x8(%rax),%rbx */
0x4c, 0x89, 0xef,                         /*2b9: mov    %r13,%rdi */
0x4c, 0x89, 0xf6,                         /*2bc: mov    %r14,%rsi */
0x41, 0xff, 0x54, 0x24, 0x18,             /*2bf: callq  *0x18(%r12) */
0x48, 0x89, 0x03,                         /*2c4: mov    %rax,(%rbx) */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*2c7: mov    0x0(%rip),%esi        # 2cd <op_tailcall+0x2cd> */
0x4c, 0x89, 0xef,                         /*2cd: mov    %r13,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2d0: callq  2d5 <op_tailcall+0x2d5> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*2d5: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*2da: mov    $0x0,%esi */
0x31, 0xd2,                               /*2df: xor    %edx,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*2e1: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2e6: callq  2eb <op_tailcall+0x2eb> */
0x5b,                                     /*2eb: pop    %rbx */
0x41, 0x5c,                               /*2ec: pop    %r12 */
0x41, 0x5d,                               /*2ee: pop    %r13 */
0x41, 0x5e,                               /*2f0: pop    %r14 */
0x41, 0x5f,                               /*2f2: pop    %r15 */
0x5d,                                     /*2f4: pop    %rbp */
0xe9, 0xb5, 0x00, 0x00, 0x00,             /*2f5: jmpq   3af <op_tailcall+0x3af> */
0x49, 0x8b, 0xb5, 0x88, 0x00, 0x00, 0x00, /*2fa: mov    0x88(%r13),%rsi */
0xe9, 0x9b, 0xfd, 0xff, 0xff,             /*301: jmpq   a1 <op_tailcall+0xa1> */
0x49, 0x8b, 0xb5, 0x80, 0x00, 0x00, 0x00, /*306: mov    0x80(%r13),%rsi */
0xe9, 0x8f, 0xfd, 0xff, 0xff,             /*30d: jmpq   a1 <op_tailcall+0xa1> */
0x49, 0x8b, 0xb5, 0xa0, 0x00, 0x00, 0x00, /*312: mov    0xa0(%r13),%rsi */
0xe9, 0x83, 0xfd, 0xff, 0xff,             /*319: jmpq   a1 <op_tailcall+0xa1> */
0x49, 0x8b, 0x75, 0x40,                   /*31e: mov    0x40(%r13),%rsi */
0xe9, 0x7a, 0xfd, 0xff, 0xff,             /*322: jmpq   a1 <op_tailcall+0xa1> */
0x49, 0x8b, 0xb5, 0x98, 0x00, 0x00, 0x00, /*327: mov    0x98(%r13),%rsi */
0xe9, 0x6e, 0xfd, 0xff, 0xff,             /*32e: jmpq   a1 <op_tailcall+0xa1> */
0x49, 0x8b, 0x4c, 0x24, 0x18,             /*333: mov    0x18(%r12),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*338: mov    %rcx,0x0(%rip)        # 33f <op_tailcall+0x33f> */
0x48, 0x8b, 0x51, 0x10,                   /*33f: mov    0x10(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*343: mov    %rdx,0x0(%rip)        # 34a <op_tailcall+0x34a> */
0x48, 0x8b, 0x51, 0x18,                   /*34a: mov    0x18(%rcx),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*34e: mov    %rdx,0x0(%rip)        # 355 <op_tailcall+0x355> */
0x8b, 0x50, 0x40,                         /*355: mov    0x40(%rax),%edx */
0x0f, 0xb7, 0x71, 0x02,                   /*358: movzwl 0x2(%rcx),%esi */
0x85, 0xd2,                               /*35c: test   %edx,%edx */
0x79, 0x12,                               /*35e: jns    372 <op_tailcall+0x372> */
0x83, 0xfe, 0x03,                         /*360: cmp    $0x3,%esi */
0xb8, 0x03, 0x00, 0x00, 0x00,             /*363: mov    $0x3,%eax */
0x0f, 0x42, 0xf0,                         /*368: cmovb  %eax,%esi */
0xba, 0x03, 0x00, 0x00, 0x00,             /*36b: mov    $0x3,%edx */
0xeb, 0x03,                               /*370: jmp    375 <op_tailcall+0x375> */
0x83, 0xc2, 0x02,                         /*372: add    $0x2,%edx */
0x4c, 0x89, 0xef,                         /*375: mov    %r13,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*378: callq  37d <op_tailcall+0x37d> */
0x49, 0x8b, 0x45, 0x18,                   /*37d: mov    0x18(%r13),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*381: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*385: mov    %rax,0x0(%rip)        # 38c <op_tailcall+0x38c> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*38c: mov    0x0(%rip),%rsi        # 393 <op_tailcall+0x393> */
0x48, 0x8b, 0x4e, 0x08,                   /*393: mov    0x8(%rsi),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*397: mov    %rcx,0x0(%rip)        # 39e <op_tailcall+0x39e> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*39e: mov    0x0(%rip),%rdi        # 3a5 <op_tailcall+0x3a5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3a5: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*3aa: jmpq   3af <op_tailcall+0x3af> */

};
static uint8_t op_tailcall__rodata[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

};


static uint8_t op_blkpush__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x55,                                     /*e: push   %rbp */
0x48, 0x89, 0xe5,                         /*f: mov    %rsp,%rbp */
0x48, 0x83, 0xe4, 0xf0,                   /*12: and    $0xfffffffffffffff0,%rsp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*16: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b: mov    $0x0,%ecx */
0xf6, 0xc1, 0x0f,                         /*20: test   $0xf,%cl */
0x0f, 0x84, 0x8c, 0x00, 0x00, 0x00,       /*23: je     b5 <op_blkpush+0xb5> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*29: mov    0x0(%rip),%rdi        # 30 <op_blkpush+0x30> */
0x48, 0x8b, 0x47, 0x18,                   /*30: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*34: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*38: mov    0x8(%rax),%rax */
0x48, 0x8b, 0x40, 0x28,                   /*3c: mov    0x28(%rax),%rax */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*40: mov    $0x0,%esi */
0x83, 0xe6, 0x0f,                         /*45: and    $0xf,%esi */
0x48, 0x85, 0xc0,                         /*48: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*4b: sete   %cl */
0x83, 0xfe, 0x01,                         /*4e: cmp    $0x1,%esi */
0x74, 0x20,                               /*51: je     73 <op_blkpush+0x73> */
0xba, 0x01, 0x00, 0x00, 0x00,             /*53: mov    $0x1,%edx */
0x29, 0xf2,                               /*58: sub    %esi,%edx */
0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*5a: nopw   0x0(%rax,%rax,1) */
0xf6, 0xc1, 0x01,                         /*60: test   $0x1,%cl */
0x75, 0x12,                               /*63: jne    77 <op_blkpush+0x77> */
0x48, 0x8b, 0x40, 0x08,                   /*65: mov    0x8(%rax),%rax */
0x48, 0x85, 0xc0,                         /*69: test   %rax,%rax */
0x0f, 0x94, 0xc1,                         /*6c: sete   %cl */
0xff, 0xc2,                               /*6f: inc    %edx */
0x75, 0xed,                               /*71: jne    60 <op_blkpush+0x60> */
0x84, 0xc9,                               /*73: test   %cl,%cl */
0x74, 0x3a,                               /*75: je     b1 <op_blkpush+0xb1> */
0xbe, 0x02, 0x00, 0x00, 0x00,             /*77: mov    $0x2,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*7c: callq  81 <op_blkpush+0x81> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*81: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*86: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8b: callq  90 <op_blkpush+0x90> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*90: mov    0x0(%rip),%rdi        # 97 <op_blkpush+0x97> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*97: mov    0x0(%rip),%rsi        # 9e <op_blkpush+0x9e> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*9e: mov    0x0(%rip),%rcx        # a5 <op_blkpush+0xa5> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a5: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*aa: jmpq   af <op_blkpush+0xaf> */
0xeb, 0x49,                               /*af: jmp    fa <op_blkpush+0xfa> */
0x48, 0x83, 0xc0, 0x18,                   /*b1: add    $0x18,%rax */
0x48, 0x8b, 0x00,                         /*b5: mov    (%rax),%rax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*b8: mov    0x0(%rip),%rcx        # bf <op_blkpush+0xbf> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*bf: mov    $0x0,%edx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*c4: mov    $0x0,%esi */
0xc1, 0xee, 0x09,                         /*c9: shr    $0x9,%esi */
0x83, 0xe6, 0x01,                         /*cc: and    $0x1,%esi */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*cf: mov    $0x0,%edi */
0xc1, 0xef, 0x0a,                         /*d4: shr    $0xa,%edi */
0x83, 0xe7, 0x3f,                         /*d7: and    $0x3f,%edi */
0x01, 0xf7,                               /*da: add    %esi,%edi */
0xc1, 0xea, 0x04,                         /*dc: shr    $0x4,%edx */
0x83, 0xe2, 0x1f,                         /*df: and    $0x1f,%edx */
0x01, 0xfa,                               /*e2: add    %edi,%edx */
0x48, 0x63, 0xd2,                         /*e4: movslq %edx,%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*e7: mov    $0x0,%esi */
0x48, 0x63, 0xf6,                         /*ec: movslq %esi,%rsi */
0xf2, 0x0f, 0x10, 0x44, 0xd0, 0x08,       /*ef: movsd  0x8(%rax,%rdx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xf1,             /*f5: movsd  %xmm0,(%rcx,%rsi,8) */
0x48, 0x89, 0xec,                         /*fa: mov    %rbp,%rsp */
0x5d,                                     /*fd: pop    %rbp */

};
static uint8_t op_blkpush__rodata[] = {

};


static uint8_t op_add__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x57,                               /*e: push   %r15 */
0x41, 0x56,                               /*10: push   %r14 */
0x53,                                     /*12: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%r14        # 1a <op_add+0x1a> */
0x4c, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1a: mov    0x0(%rip),%r15        # 21 <op_add+0x21> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*21: mov    $0x0,%eax */
0x48, 0x98,                               /*26: cltq */
0x41, 0x8b, 0x4c, 0xc7, 0x04,             /*28: mov    0x4(%r15,%rax,8),%ecx */
0xb8, 0x00, 0x06, 0x00, 0x00,             /*2d: mov    $0x600,%eax */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*32: cmp    $0xfff00001,%ecx */
0x72, 0x17,                               /*38: jb     51 <op_add+0x51> */
0xc1, 0xe9, 0x06,                         /*3a: shr    $0x6,%ecx */
0x81, 0xe1, 0x00, 0x3f, 0x00, 0x00,       /*3d: and    $0x3f00,%ecx */
0x81, 0xc1, 0x00, 0xff, 0xff, 0x00,       /*43: add    $0xffff00,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*49: and    $0xffff00,%ecx */
0x89, 0xc8,                               /*4f: mov    %ecx,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*51: mov    $0x0,%ecx */
0xff, 0xc1,                               /*56: inc    %ecx */
0x48, 0x63, 0xc9,                         /*58: movslq %ecx,%rcx */
0x41, 0x8b, 0x54, 0xcf, 0x04,             /*5b: mov    0x4(%r15,%rcx,8),%edx */
0xb9, 0x06, 0x00, 0x00, 0x00,             /*60: mov    $0x6,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*65: cmp    $0xfff00001,%edx */
0x72, 0x0f,                               /*6b: jb     7c <op_add+0x7c> */
0xc1, 0xea, 0x0e,                         /*6d: shr    $0xe,%edx */
0x83, 0xe2, 0x3f,                         /*70: and    $0x3f,%edx */
0x81, 0xc2, 0xff, 0x00, 0x00, 0x00,       /*73: add    $0xff,%edx */
0x0f, 0xb6, 0xca,                         /*79: movzbl %dl,%ecx */
0x09, 0xc1,                               /*7c: or     %eax,%ecx */
0x81, 0xf9, 0x0f, 0x10, 0x00, 0x00,       /*7e: cmp    $0x100f,%ecx */
0x7f, 0x3c,                               /*84: jg     c2 <op_add+0xc2> */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*86: cmp    $0x602,%ecx */
0x7f, 0x66,                               /*8c: jg     f4 <op_add+0xf4> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*8e: cmp    $0x303,%ecx */
0x0f, 0x85, 0x86, 0x00, 0x00, 0x00,       /*94: jne    120 <op_add+0x120> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*9a: mov    $0x0,%eax */
0x48, 0x98,                               /*9f: cltq */
0x41, 0x8b, 0x0c, 0xc7,                   /*a1: mov    (%r15,%rax,8),%ecx */
0x41, 0x8b, 0x54, 0xc7, 0x08,             /*a5: mov    0x8(%r15,%rax,8),%edx */
0x89, 0xc8,                               /*aa: mov    %ecx,%eax */
0x01, 0xd0,                               /*ac: add    %edx,%eax */
0x0f, 0x81, 0x18, 0x01, 0x00, 0x00,       /*ae: jno    1cc <op_add+0x1cc> */
0xf2, 0x0f, 0x2a, 0xc9,                   /*b4: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x2a, 0xc2,                   /*b8: cvtsi2sd %edx,%xmm0 */
0xf2, 0x0f, 0x58, 0xc1,                   /*bc: addsd  %xmm1,%xmm0 */
0xeb, 0x7f,                               /*c0: jmp    141 <op_add+0x141> */
0x81, 0xf9, 0x10, 0x10, 0x00, 0x00,       /*c2: cmp    $0x1010,%ecx */
0x0f, 0x85, 0xb8, 0x00, 0x00, 0x00,       /*c8: jne    186 <op_add+0x186> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ce: mov    $0x0,%eax */
0x48, 0x63, 0xd8,                         /*d3: movslq %eax,%rbx */
0x49, 0x8b, 0x34, 0xdf,                   /*d6: mov    (%r15,%rbx,8),%rsi */
0x8d, 0x43, 0x01,                         /*da: lea    0x1(%rbx),%eax */
0x48, 0x98,                               /*dd: cltq */
0x49, 0x8b, 0x14, 0xc7,                   /*df: mov    (%r15,%rax,8),%rdx */
0x4c, 0x89, 0xf7,                         /*e3: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e6: callq  eb <op_add+0xeb> */
0x49, 0x89, 0x04, 0xdf,                   /*eb: mov    %rax,(%r15,%rbx,8) */
0xe9, 0xfd, 0x00, 0x00, 0x00,             /*ef: jmpq   1f1 <op_add+0x1f1> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*f4: cmp    $0x603,%ecx */
0x75, 0x61,                               /*fa: jne    15d <op_add+0x15d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*fc: mov    $0x0,%eax */
0x48, 0x98,                               /*101: cltq */
0x8d, 0x48, 0x01,                         /*103: lea    0x1(%rax),%ecx */
0x48, 0x63, 0xc9,                         /*106: movslq %ecx,%rcx */
0xf2, 0x41, 0x0f, 0x2a, 0x04, 0xcf,       /*109: cvtsi2sdl (%r15,%rcx,8),%xmm0 */
0xf2, 0x41, 0x0f, 0x58, 0x04, 0xc7,       /*10f: addsd  (%r15,%rax,8),%xmm0 */
0xf2, 0x41, 0x0f, 0x11, 0x04, 0xc7,       /*115: movsd  %xmm0,(%r15,%rax,8) */
0xe9, 0xd1, 0x00, 0x00, 0x00,             /*11b: jmpq   1f1 <op_add+0x1f1> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*120: cmp    $0x306,%ecx */
0x75, 0x5e,                               /*126: jne    186 <op_add+0x186> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*128: mov    $0x0,%eax */
0x48, 0x98,                               /*12d: cltq */
0x8d, 0x48, 0x01,                         /*12f: lea    0x1(%rax),%ecx */
0x48, 0x63, 0xc9,                         /*132: movslq %ecx,%rcx */
0xf2, 0x41, 0x0f, 0x2a, 0x04, 0xc7,       /*135: cvtsi2sdl (%r15,%rax,8),%xmm0 */
0xf2, 0x41, 0x0f, 0x58, 0x04, 0xcf,       /*13b: addsd  (%r15,%rcx,8),%xmm0 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*141: mov    $0x0,%eax */
0x48, 0x98,                               /*146: cltq */
0x66, 0x0f, 0x2e, 0xc0,                   /*148: ucomisd %xmm0,%xmm0 */
0x0f, 0x8a, 0x91, 0x00, 0x00, 0x00,       /*14c: jp     1e3 <op_add+0x1e3> */
0xf2, 0x41, 0x0f, 0x11, 0x04, 0xc7,       /*152: movsd  %xmm0,(%r15,%rax,8) */
0xe9, 0x94, 0x00, 0x00, 0x00,             /*158: jmpq   1f1 <op_add+0x1f1> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*15d: cmp    $0x606,%ecx */
0x75, 0x21,                               /*163: jne    186 <op_add+0x186> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*165: mov    $0x0,%eax */
0x48, 0x98,                               /*16a: cltq */
0xf2, 0x41, 0x0f, 0x10, 0x04, 0xc7,       /*16c: movsd  (%r15,%rax,8),%xmm0 */
0x8d, 0x48, 0x01,                         /*172: lea    0x1(%rax),%ecx */
0x48, 0x63, 0xc9,                         /*175: movslq %ecx,%rcx */
0xf2, 0x41, 0x0f, 0x58, 0x04, 0xcf,       /*178: addsd  (%r15,%rcx,8),%xmm0 */
0xf2, 0x41, 0x0f, 0x11, 0x04, 0xc7,       /*17e: movsd  %xmm0,(%r15,%rax,8) */
0xeb, 0x6b,                               /*184: jmp    1f1 <op_add+0x1f1> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*186: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*18b: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*190: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*195: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*19a: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*1a0: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1a6: callq  1ab <op_add+0x1ab> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1ab: mov    0x0(%rip),%rdi        # 1b2 <op_add+0x1b2> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*1b2: mov    0x0(%rip),%rsi        # 1b9 <op_add+0x1b9> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1b9: mov    0x0(%rip),%rcx        # 1c0 <op_add+0x1c0> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1c0: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*1c5: jmpq   1ca <op_add+0x1ca> */
0xeb, 0x32,                               /*1ca: jmp    1fe <op_add+0x1fe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1cc: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1d1: movslq %ecx,%rcx */
0x41, 0x89, 0x04, 0xcf,                   /*1d4: mov    %eax,(%r15,%rcx,8) */
0x41, 0xc7, 0x44, 0xcf, 0x04, 0x00, 0x00, 0xf1, 0xff,/*1d8: movl   $0xfff10000,0x4(%r15,%rcx,8) */
0xeb, 0x0e,                               /*1e1: jmp    1f1 <op_add+0x1f1> */
0x48, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*1e3: movabs $0x7ff8000000000000,%rcx */
0x49, 0x89, 0x0c, 0xc7,                   /*1ed: mov    %rcx,(%r15,%rax,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*1f1: mov    0x0(%rip),%eax        # 1f7 <op_add+0x1f7> */
0x41, 0x89, 0x86, 0xdc, 0x00, 0x00, 0x00, /*1f7: mov    %eax,0xdc(%r14) */
0x5b,                                     /*1fe: pop    %rbx */
0x41, 0x5e,                               /*1ff: pop    %r14 */
0x41, 0x5f,                               /*201: pop    %r15 */

};
static uint8_t op_add__rodata[] = {

};


static uint8_t op_addi__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_addi+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a: movslq %ecx,%rcx */
0x8b, 0x4c, 0xc8, 0x04,                   /*1d: mov    0x4(%rax,%rcx,8),%ecx */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*21: cmp    $0xfff00001,%ecx */
0x72, 0x0b,                               /*27: jb     34 <op_addi+0x34> */
0xc1, 0xe9, 0x0e,                         /*29: shr    $0xe,%ecx */
0x83, 0xe1, 0x3f,                         /*2c: and    $0x3f,%ecx */
0x83, 0xf9, 0x07,                         /*2f: cmp    $0x7,%ecx */
0x75, 0x21,                               /*32: jne    55 <op_addi+0x55> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*34: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*39: movslq %ecx,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3c: mov    $0x0,%edx */
0xf2, 0x0f, 0x2a, 0xc2,                   /*41: cvtsi2sd %edx,%xmm0 */
0xf2, 0x0f, 0x58, 0x04, 0xc8,             /*45: addsd  (%rax,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*4a: movsd  %xmm0,(%rax,%rcx,8) */
0x58,                                     /*4f: pop    %rax */
0xe9, 0xc3, 0x00, 0x00, 0x00,             /*50: jmpq   118 <op_addi+0x118> */
0x83, 0xf9, 0x04,                         /*55: cmp    $0x4,%ecx */
0x75, 0x3f,                               /*58: jne    99 <op_addi+0x99> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5a: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*5f: movslq %ecx,%rcx */
0x8b, 0x14, 0xc8,                         /*62: mov    (%rax,%rcx,8),%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*65: mov    $0x0,%ecx */
0x01, 0xd1,                               /*6a: add    %edx,%ecx */
0x0f, 0x81, 0x82, 0x00, 0x00, 0x00,       /*6c: jno    f4 <op_addi+0xf4> */
0xf2, 0x0f, 0x2a, 0xca,                   /*72: cvtsi2sd %edx,%xmm1 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*76: mov    $0x0,%ecx */
0xf2, 0x0f, 0x2a, 0xc1,                   /*7b: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x58, 0xc1,                   /*7f: addsd  %xmm1,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*83: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*88: movslq %ecx,%rcx */
0x66, 0x0f, 0x2e, 0xc0,                   /*8b: ucomisd %xmm0,%xmm0 */
0x7a, 0x79,                               /*8f: jp     10a <op_addi+0x10a> */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*91: movsd  %xmm0,(%rax,%rcx,8) */
0x58,                                     /*96: pop    %rax */
0xeb, 0x7f,                               /*97: jmp    118 <op_addi+0x118> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*99: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*9e: movslq %ecx,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a1: mov    $0x0,%ecx */
0x89, 0x4c, 0xd0, 0x08,                   /*a6: mov    %ecx,0x8(%rax,%rdx,8) */
0xc7, 0x44, 0xd0, 0x0c, 0x00, 0x00, 0xf1, 0xff,/*aa: movl   $0xfff10000,0xc(%rax,%rdx,8) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*b2: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*b7: mov    $0x20,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*bc: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*c1: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*c7: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*cd: callq  d2 <op_addi+0xd2> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*d2: mov    0x0(%rip),%rdi        # d9 <op_addi+0xd9> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*d9: mov    0x0(%rip),%rsi        # e0 <op_addi+0xe0> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*e0: mov    0x0(%rip),%rcx        # e7 <op_addi+0xe7> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*e7: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*ec: jmpq   f1 <op_addi+0xf1> */
0x58,                                     /*f1: pop    %rax */
0xeb, 0x24,                               /*f2: jmp    118 <op_addi+0x118> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*f4: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*f9: movslq %edx,%rdx */
0x89, 0x0c, 0xd0,                         /*fc: mov    %ecx,(%rax,%rdx,8) */
0xc7, 0x44, 0xd0, 0x04, 0x00, 0x00, 0xf1, 0xff,/*ff: movl   $0xfff10000,0x4(%rax,%rdx,8) */
0x58,                                     /*107: pop    %rax */
0xeb, 0x0e,                               /*108: jmp    118 <op_addi+0x118> */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*10a: movabs $0x7ff8000000000000,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*114: mov    %rdx,(%rax,%rcx,8) */

};
static uint8_t op_addi__rodata[] = {

};


static uint8_t op_sub__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_sub+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a: movslq %ecx,%rcx */
0x8b, 0x54, 0xc8, 0x04,                   /*1d: mov    0x4(%rax,%rcx,8),%edx */
0xb9, 0x00, 0x06, 0x00, 0x00,             /*21: mov    $0x600,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*26: cmp    $0xfff00001,%edx */
0x72, 0x17,                               /*2c: jb     45 <op_sub+0x45> */
0xc1, 0xea, 0x06,                         /*2e: shr    $0x6,%edx */
0x81, 0xe2, 0x00, 0x3f, 0x00, 0x00,       /*31: and    $0x3f00,%edx */
0x81, 0xc2, 0x00, 0xff, 0xff, 0x00,       /*37: add    $0xffff00,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*3d: and    $0xffff00,%edx */
0x89, 0xd1,                               /*43: mov    %edx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*45: mov    $0x0,%edx */
0xff, 0xc2,                               /*4a: inc    %edx */
0x48, 0x63, 0xd2,                         /*4c: movslq %edx,%rdx */
0x8b, 0x74, 0xd0, 0x04,                   /*4f: mov    0x4(%rax,%rdx,8),%esi */
0xba, 0x06, 0x00, 0x00, 0x00,             /*53: mov    $0x6,%edx */
0x81, 0xfe, 0x01, 0x00, 0xf0, 0xff,       /*58: cmp    $0xfff00001,%esi */
0x72, 0x10,                               /*5e: jb     70 <op_sub+0x70> */
0xc1, 0xee, 0x0e,                         /*60: shr    $0xe,%esi */
0x83, 0xe6, 0x3f,                         /*63: and    $0x3f,%esi */
0x81, 0xc6, 0xff, 0x00, 0x00, 0x00,       /*66: add    $0xff,%esi */
0x40, 0x0f, 0xb6, 0xd6,                   /*6c: movzbl %sil,%edx */
0x09, 0xca,                               /*70: or     %ecx,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*72: cmp    $0x602,%edx */
0x7f, 0x33,                               /*78: jg     ad <op_sub+0xad> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*7a: cmp    $0x303,%edx */
0x75, 0x5a,                               /*80: jne    dc <op_sub+0xdc> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*82: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*87: movslq %ecx,%rdx */
0x8b, 0x0c, 0xd0,                         /*8a: mov    (%rax,%rdx,8),%ecx */
0xff, 0xc2,                               /*8d: inc    %edx */
0x48, 0x63, 0xd2,                         /*8f: movslq %edx,%rdx */
0x8b, 0x34, 0xd0,                         /*92: mov    (%rax,%rdx,8),%esi */
0x89, 0xca,                               /*95: mov    %ecx,%edx */
0x29, 0xf2,                               /*97: sub    %esi,%edx */
0x0f, 0x81, 0xe9, 0x00, 0x00, 0x00,       /*99: jno    188 <op_sub+0x188> */
0xf2, 0x0f, 0x2a, 0xc1,                   /*9f: cvtsi2sd %ecx,%xmm0 */
0xf2, 0x0f, 0x2a, 0xce,                   /*a3: cvtsi2sd %esi,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*a7: subsd  %xmm1,%xmm0 */
0xeb, 0x4f,                               /*ab: jmp    fc <op_sub+0xfc> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*ad: cmp    $0x603,%edx */
0x75, 0x64,                               /*b3: jne    119 <op_sub+0x119> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*b5: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*ba: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*bd: movsd  (%rax,%rcx,8),%xmm0 */
0x8d, 0x51, 0x01,                         /*c2: lea    0x1(%rcx),%edx */
0x48, 0x63, 0xd2,                         /*c5: movslq %edx,%rdx */
0xf2, 0x0f, 0x2a, 0x0c, 0xd0,             /*c8: cvtsi2sdl (%rax,%rdx,8),%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*cd: subsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*d1: movsd  %xmm0,(%rax,%rcx,8) */
0x58,                                     /*d6: pop    %rax */
0xe9, 0xd0, 0x00, 0x00, 0x00,             /*d7: jmpq   1ac <op_sub+0x1ac> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*dc: cmp    $0x306,%edx */
0x75, 0x5d,                               /*e2: jne    141 <op_sub+0x141> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e4: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*e9: movslq %ecx,%rcx */
0x8d, 0x51, 0x01,                         /*ec: lea    0x1(%rcx),%edx */
0x48, 0x63, 0xd2,                         /*ef: movslq %edx,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0xc8,             /*f2: cvtsi2sdl (%rax,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x5c, 0x04, 0xd0,             /*f7: subsd  (%rax,%rdx,8),%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fc: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*101: movslq %ecx,%rcx */
0x66, 0x0f, 0x2e, 0xc0,                   /*104: ucomisd %xmm0,%xmm0 */
0x0f, 0x8a, 0x90, 0x00, 0x00, 0x00,       /*108: jp     19e <op_sub+0x19e> */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*10e: movsd  %xmm0,(%rax,%rcx,8) */
0x58,                                     /*113: pop    %rax */
0xe9, 0x93, 0x00, 0x00, 0x00,             /*114: jmpq   1ac <op_sub+0x1ac> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*119: cmp    $0x606,%edx */
0x75, 0x20,                               /*11f: jne    141 <op_sub+0x141> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*121: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*126: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*129: movsd  (%rax,%rcx,8),%xmm0 */
0x8d, 0x51, 0x01,                         /*12e: lea    0x1(%rcx),%edx */
0x48, 0x63, 0xd2,                         /*131: movslq %edx,%rdx */
0xf2, 0x0f, 0x5c, 0x04, 0xd0,             /*134: subsd  (%rax,%rdx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*139: movsd  %xmm0,(%rax,%rcx,8) */
0x58,                                     /*13e: pop    %rax */
0xeb, 0x6b,                               /*13f: jmp    1ac <op_sub+0x1ac> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*141: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*146: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*14b: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*150: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*155: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*15b: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*161: callq  166 <op_sub+0x166> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*166: mov    0x0(%rip),%rdi        # 16d <op_sub+0x16d> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*16d: mov    0x0(%rip),%rsi        # 174 <op_sub+0x174> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*174: mov    0x0(%rip),%rcx        # 17b <op_sub+0x17b> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*17b: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*180: jmpq   185 <op_sub+0x185> */
0x58,                                     /*185: pop    %rax */
0xeb, 0x24,                               /*186: jmp    1ac <op_sub+0x1ac> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*188: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*18d: movslq %ecx,%rcx */
0x89, 0x14, 0xc8,                         /*190: mov    %edx,(%rax,%rcx,8) */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x00, 0xf1, 0xff,/*193: movl   $0xfff10000,0x4(%rax,%rcx,8) */
0x58,                                     /*19b: pop    %rax */
0xeb, 0x0e,                               /*19c: jmp    1ac <op_sub+0x1ac> */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*19e: movabs $0x7ff8000000000000,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*1a8: mov    %rdx,(%rax,%rcx,8) */

};
static uint8_t op_sub__rodata[] = {

};


static uint8_t op_subi__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_subi+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a: movslq %ecx,%rcx */
0x8b, 0x4c, 0xc8, 0x04,                   /*1d: mov    0x4(%rax,%rcx,8),%ecx */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*21: cmp    $0xfff00001,%ecx */
0x72, 0x0b,                               /*27: jb     34 <op_subi+0x34> */
0xc1, 0xe9, 0x0e,                         /*29: shr    $0xe,%ecx */
0x83, 0xe1, 0x3f,                         /*2c: and    $0x3f,%ecx */
0x83, 0xf9, 0x07,                         /*2f: cmp    $0x7,%ecx */
0x75, 0x25,                               /*32: jne    59 <op_subi+0x59> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*34: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*39: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*3c: movsd  (%rax,%rcx,8),%xmm0 */
0xba, 0x00, 0x00, 0x00, 0x00,             /*41: mov    $0x0,%edx */
0xf2, 0x0f, 0x2a, 0xca,                   /*46: cvtsi2sd %edx,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*4a: subsd  %xmm1,%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*4e: movsd  %xmm0,(%rax,%rcx,8) */
0x58,                                     /*53: pop    %rax */
0xe9, 0xc5, 0x00, 0x00, 0x00,             /*54: jmpq   11e <op_subi+0x11e> */
0x83, 0xf9, 0x04,                         /*59: cmp    $0x4,%ecx */
0x75, 0x41,                               /*5c: jne    9f <op_subi+0x9f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*5e: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*63: movslq %ecx,%rcx */
0x8b, 0x0c, 0xc8,                         /*66: mov    (%rax,%rcx,8),%ecx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*69: mov    $0x0,%esi */
0x89, 0xca,                               /*6e: mov    %ecx,%edx */
0x29, 0xf2,                               /*70: sub    %esi,%edx */
0x0f, 0x81, 0x82, 0x00, 0x00, 0x00,       /*72: jno    fa <op_subi+0xfa> */
0xf2, 0x0f, 0x2a, 0xc1,                   /*78: cvtsi2sd %ecx,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7c: mov    $0x0,%ecx */
0xf2, 0x0f, 0x2a, 0xc9,                   /*81: cvtsi2sd %ecx,%xmm1 */
0xf2, 0x0f, 0x5c, 0xc1,                   /*85: subsd  %xmm1,%xmm0 */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*89: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*8e: movslq %ecx,%rcx */
0x66, 0x0f, 0x2e, 0xc0,                   /*91: ucomisd %xmm0,%xmm0 */
0x7a, 0x79,                               /*95: jp     110 <op_subi+0x110> */
0xf2, 0x0f, 0x11, 0x04, 0xc8,             /*97: movsd  %xmm0,(%rax,%rcx,8) */
0x58,                                     /*9c: pop    %rax */
0xeb, 0x7f,                               /*9d: jmp    11e <op_subi+0x11e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*9f: mov    $0x0,%ecx */
0x48, 0x63, 0xd1,                         /*a4: movslq %ecx,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a7: mov    $0x0,%ecx */
0x89, 0x4c, 0xd0, 0x08,                   /*ac: mov    %ecx,0x8(%rax,%rdx,8) */
0xc7, 0x44, 0xd0, 0x0c, 0x00, 0x00, 0xf1, 0xff,/*b0: movl   $0xfff10000,0xc(%rax,%rdx,8) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*b8: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*bd: mov    $0x20,%esi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*c2: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*c7: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*cd: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*d3: callq  d8 <op_subi+0xd8> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*d8: mov    0x0(%rip),%rdi        # df <op_subi+0xdf> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*df: mov    0x0(%rip),%rsi        # e6 <op_subi+0xe6> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*e6: mov    0x0(%rip),%rcx        # ed <op_subi+0xed> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*ed: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*f2: jmpq   f7 <op_subi+0xf7> */
0x58,                                     /*f7: pop    %rax */
0xeb, 0x24,                               /*f8: jmp    11e <op_subi+0x11e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*fa: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*ff: movslq %ecx,%rcx */
0x89, 0x14, 0xc8,                         /*102: mov    %edx,(%rax,%rcx,8) */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x00, 0xf1, 0xff,/*105: movl   $0xfff10000,0x4(%rax,%rcx,8) */
0x58,                                     /*10d: pop    %rax */
0xeb, 0x0e,                               /*10e: jmp    11e <op_subi+0x11e> */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*110: movabs $0x7ff8000000000000,%rdx */
0x48, 0x89, 0x14, 0xc8,                   /*11a: mov    %rdx,(%rax,%rcx,8) */

};
static uint8_t op_subi__rodata[] = {

};


static uint8_t op_mul__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x53,                                     /*e: push   %rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rdi        # 16 <op_mul+0x16> */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rbx        # 1d <op_mul+0x1d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%eax */
0x48, 0x98,                               /*22: cltq */
0x8b, 0x4c, 0xc3, 0x04,                   /*24: mov    0x4(%rbx,%rax,8),%ecx */
0xb8, 0x00, 0x06, 0x00, 0x00,             /*28: mov    $0x600,%eax */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*2d: cmp    $0xfff00001,%ecx */
0x72, 0x17,                               /*33: jb     4c <op_mul+0x4c> */
0xc1, 0xe9, 0x06,                         /*35: shr    $0x6,%ecx */
0x81, 0xe1, 0x00, 0x3f, 0x00, 0x00,       /*38: and    $0x3f00,%ecx */
0x81, 0xc1, 0x00, 0xff, 0xff, 0x00,       /*3e: add    $0xffff00,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*44: and    $0xffff00,%ecx */
0x89, 0xc8,                               /*4a: mov    %ecx,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*4c: mov    $0x0,%ecx */
0xff, 0xc1,                               /*51: inc    %ecx */
0x48, 0x63, 0xc9,                         /*53: movslq %ecx,%rcx */
0x8b, 0x54, 0xcb, 0x04,                   /*56: mov    0x4(%rbx,%rcx,8),%edx */
0xb9, 0x06, 0x00, 0x00, 0x00,             /*5a: mov    $0x6,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*5f: cmp    $0xfff00001,%edx */
0x72, 0x0f,                               /*65: jb     76 <op_mul+0x76> */
0xc1, 0xea, 0x0e,                         /*67: shr    $0xe,%edx */
0x83, 0xe2, 0x3f,                         /*6a: and    $0x3f,%edx */
0x81, 0xc2, 0xff, 0x00, 0x00, 0x00,       /*6d: add    $0xff,%edx */
0x0f, 0xb6, 0xca,                         /*73: movzbl %dl,%ecx */
0x09, 0xc1,                               /*76: or     %eax,%ecx */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*78: cmp    $0x602,%ecx */
0x7f, 0x67,                               /*7e: jg     e7 <op_mul+0xe7> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*80: cmp    $0x303,%ecx */
0x0f, 0x85, 0x85, 0x00, 0x00, 0x00,       /*86: jne    111 <op_mul+0x111> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*8c: mov    $0x0,%eax */
0x48, 0x98,                               /*91: cltq */
0x48, 0x8b, 0x34, 0xc3,                   /*93: mov    (%rbx,%rax,8),%rsi */
0xff, 0xc0,                               /*97: inc    %eax */
0x48, 0x98,                               /*99: cltq */
0x48, 0x8b, 0x14, 0xc3,                   /*9b: mov    (%rbx,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*9f: callq  a4 <op_mul+0xa4> */
0x48, 0x89, 0xc1,                         /*a4: mov    %rax,%rcx */
0x48, 0xc1, 0xe9, 0x20,                   /*a7: shr    $0x20,%rcx */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*ab: cmp    $0xfff00001,%ecx */
0x72, 0x13,                               /*b1: jb     c6 <op_mul+0xc6> */
0x48, 0x89, 0xc1,                         /*b3: mov    %rax,%rcx */
0x48, 0xc1, 0xe9, 0x2e,                   /*b6: shr    $0x2e,%rcx */
0x83, 0xe1, 0x3f,                         /*ba: and    $0x3f,%ecx */
0x83, 0xf9, 0x07,                         /*bd: cmp    $0x7,%ecx */
0x0f, 0x85, 0x0c, 0x01, 0x00, 0x00,       /*c0: jne    1d2 <op_mul+0x1d2> */
0x66, 0x48, 0x0f, 0x6e, 0xc0,             /*c6: movq   %rax,%xmm0 */
0x66, 0x0f, 0x2e, 0xc0,                   /*cb: ucomisd %xmm0,%xmm0 */
0x0f, 0x8a, 0xe5, 0x00, 0x00, 0x00,       /*cf: jp     1ba <op_mul+0x1ba> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*d5: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*da: movslq %ecx,%rcx */
0x48, 0x89, 0x04, 0xcb,                   /*dd: mov    %rax,(%rbx,%rcx,8) */
0x5b,                                     /*e1: pop    %rbx */
0xe9, 0x04, 0x01, 0x00, 0x00,             /*e2: jmpq   1eb <op_mul+0x1eb> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*e7: cmp    $0x603,%ecx */
0x75, 0x5d,                               /*ed: jne    14c <op_mul+0x14c> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ef: mov    $0x0,%eax */
0x48, 0x98,                               /*f4: cltq */
0x8d, 0x48, 0x01,                         /*f6: lea    0x1(%rax),%ecx */
0x48, 0x63, 0xc9,                         /*f9: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xcb,             /*fc: cvtsi2sdl (%rbx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x59, 0x04, 0xc3,             /*101: mulsd  (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc3,             /*106: movsd  %xmm0,(%rbx,%rax,8) */
0x5b,                                     /*10b: pop    %rbx */
0xe9, 0xda, 0x00, 0x00, 0x00,             /*10c: jmpq   1eb <op_mul+0x1eb> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*111: cmp    $0x306,%ecx */
0x75, 0x5a,                               /*117: jne    173 <op_mul+0x173> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*119: mov    $0x0,%eax */
0x48, 0x98,                               /*11e: cltq */
0x8d, 0x48, 0x01,                         /*120: lea    0x1(%rax),%ecx */
0x48, 0x63, 0xc9,                         /*123: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xc3,             /*126: cvtsi2sdl (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x59, 0x04, 0xcb,             /*12b: mulsd  (%rbx,%rcx,8),%xmm0 */
0x66, 0x0f, 0x2e, 0xc0,                   /*130: ucomisd %xmm0,%xmm0 */
0x0f, 0x8a, 0x80, 0x00, 0x00, 0x00,       /*134: jp     1ba <op_mul+0x1ba> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*13a: mov    $0x0,%eax */
0x48, 0x98,                               /*13f: cltq */
0xf2, 0x0f, 0x11, 0x04, 0xc3,             /*141: movsd  %xmm0,(%rbx,%rax,8) */
0x5b,                                     /*146: pop    %rbx */
0xe9, 0x9f, 0x00, 0x00, 0x00,             /*147: jmpq   1eb <op_mul+0x1eb> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*14c: cmp    $0x606,%ecx */
0x75, 0x1f,                               /*152: jne    173 <op_mul+0x173> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*154: mov    $0x0,%eax */
0x48, 0x98,                               /*159: cltq */
0xf2, 0x0f, 0x10, 0x04, 0xc3,             /*15b: movsd  (%rbx,%rax,8),%xmm0 */
0x8d, 0x48, 0x01,                         /*160: lea    0x1(%rax),%ecx */
0x48, 0x63, 0xc9,                         /*163: movslq %ecx,%rcx */
0xf2, 0x0f, 0x59, 0x04, 0xcb,             /*166: mulsd  (%rbx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc3,             /*16b: movsd  %xmm0,(%rbx,%rax,8) */
0x5b,                                     /*170: pop    %rbx */
0xeb, 0x78,                               /*171: jmp    1eb <op_mul+0x1eb> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*173: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*178: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*17d: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*182: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*187: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*18d: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*193: callq  198 <op_mul+0x198> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*198: mov    0x0(%rip),%rdi        # 19f <op_mul+0x19f> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*19f: mov    0x0(%rip),%rsi        # 1a6 <op_mul+0x1a6> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1a6: mov    0x0(%rip),%rcx        # 1ad <op_mul+0x1ad> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1ad: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*1b2: jmpq   1b7 <op_mul+0x1b7> */
0x5b,                                     /*1b7: pop    %rbx */
0xeb, 0x31,                               /*1b8: jmp    1eb <op_mul+0x1eb> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1ba: mov    $0x0,%eax */
0x48, 0x98,                               /*1bf: cltq */
0x48, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*1c1: movabs $0x7ff8000000000000,%rcx */
0x48, 0x89, 0x0c, 0xc3,                   /*1cb: mov    %rcx,(%rbx,%rax,8) */
0x5b,                                     /*1cf: pop    %rbx */
0xeb, 0x19,                               /*1d0: jmp    1eb <op_mul+0x1eb> */
0x83, 0xf9, 0x04,                         /*1d2: cmp    $0x4,%ecx */
0x75, 0xe0,                               /*1d5: jne    1b7 <op_mul+0x1b7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1d7: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1dc: movslq %ecx,%rcx */
0x89, 0x04, 0xcb,                         /*1df: mov    %eax,(%rbx,%rcx,8) */
0xc7, 0x44, 0xcb, 0x04, 0x00, 0x00, 0xf1, 0xff,/*1e2: movl   $0xfff10000,0x4(%rbx,%rcx,8) */
0x5b,                                     /*1ea: pop    %rbx */

};
static uint8_t op_mul__rodata[] = {

};


static uint8_t op_div__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x53,                                     /*e: push   %rbx */
0x48, 0x83, 0xec, 0x10,                   /*f: sub    $0x10,%rsp */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rbx        # 1a <op_div+0x1a> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%eax */
0x48, 0x98,                               /*1f: cltq */
0x8b, 0x4c, 0xc3, 0x04,                   /*21: mov    0x4(%rbx,%rax,8),%ecx */
0xb8, 0x00, 0x06, 0x00, 0x00,             /*25: mov    $0x600,%eax */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*2a: cmp    $0xfff00001,%ecx */
0x72, 0x17,                               /*30: jb     49 <op_div+0x49> */
0xc1, 0xe9, 0x06,                         /*32: shr    $0x6,%ecx */
0x81, 0xe1, 0x00, 0x3f, 0x00, 0x00,       /*35: and    $0x3f00,%ecx */
0x81, 0xc1, 0x00, 0xff, 0xff, 0x00,       /*3b: add    $0xffff00,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*41: and    $0xffff00,%ecx */
0x89, 0xc8,                               /*47: mov    %ecx,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*49: mov    $0x0,%ecx */
0xff, 0xc1,                               /*4e: inc    %ecx */
0x48, 0x63, 0xc9,                         /*50: movslq %ecx,%rcx */
0x8b, 0x54, 0xcb, 0x04,                   /*53: mov    0x4(%rbx,%rcx,8),%edx */
0xb9, 0x06, 0x00, 0x00, 0x00,             /*57: mov    $0x6,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*5c: cmp    $0xfff00001,%edx */
0x72, 0x0f,                               /*62: jb     73 <op_div+0x73> */
0xc1, 0xea, 0x0e,                         /*64: shr    $0xe,%edx */
0x83, 0xe2, 0x3f,                         /*67: and    $0x3f,%edx */
0x81, 0xc2, 0xff, 0x00, 0x00, 0x00,       /*6a: add    $0xff,%edx */
0x0f, 0xb6, 0xca,                         /*70: movzbl %dl,%ecx */
0x09, 0xc1,                               /*73: or     %eax,%ecx */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*75: cmp    $0x602,%ecx */
0x7f, 0x25,                               /*7b: jg     a2 <op_div+0xa2> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*7d: cmp    $0x303,%ecx */
0x75, 0x42,                               /*83: jne    c7 <op_div+0xc7> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*85: mov    $0x0,%eax */
0x48, 0x98,                               /*8a: cltq */
0x8d, 0x48, 0x01,                         /*8c: lea    0x1(%rax),%ecx */
0x48, 0x63, 0xc9,                         /*8f: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xc3,             /*92: cvtsi2sdl (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x2a, 0x0c, 0xcb,             /*97: cvtsi2sdl (%rbx,%rcx,8),%xmm1 */
0xf2, 0x0f, 0x5e, 0xc1,                   /*9c: divsd  %xmm1,%xmm0 */
0xeb, 0x48,                               /*a0: jmp    ea <op_div+0xea> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*a2: cmp    $0x603,%ecx */
0x75, 0x5d,                               /*a8: jne    107 <op_div+0x107> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*aa: mov    $0x0,%eax */
0x48, 0x98,                               /*af: cltq */
0xf2, 0x0f, 0x10, 0x04, 0xc3,             /*b1: movsd  (%rbx,%rax,8),%xmm0 */
0x8d, 0x48, 0x01,                         /*b6: lea    0x1(%rax),%ecx */
0x48, 0x63, 0xc9,                         /*b9: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0xcb,             /*bc: cvtsi2sdl (%rbx,%rcx,8),%xmm1 */
0xf2, 0x0f, 0x5e, 0xc1,                   /*c1: divsd  %xmm1,%xmm0 */
0xeb, 0x5f,                               /*c5: jmp    126 <op_div+0x126> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*c7: cmp    $0x306,%ecx */
0x0f, 0x85, 0x9d, 0x00, 0x00, 0x00,       /*cd: jne    170 <op_div+0x170> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*d3: mov    $0x0,%eax */
0x48, 0x98,                               /*d8: cltq */
0x8d, 0x48, 0x01,                         /*da: lea    0x1(%rax),%ecx */
0x48, 0x63, 0xc9,                         /*dd: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xc3,             /*e0: cvtsi2sdl (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x5e, 0x04, 0xcb,             /*e5: divsd  (%rbx,%rcx,8),%xmm0 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*ea: mov    $0x0,%eax */
0x48, 0x98,                               /*ef: cltq */
0x66, 0x0f, 0x2e, 0xc0,                   /*f1: ucomisd %xmm0,%xmm0 */
0x7b, 0x2f,                               /*f5: jnp    126 <op_div+0x126> */
0x48, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*f7: movabs $0x7ff8000000000000,%rcx */
0x48, 0x89, 0x0c, 0xc3,                   /*101: mov    %rcx,(%rbx,%rax,8) */
0xeb, 0x24,                               /*105: jmp    12b <op_div+0x12b> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*107: cmp    $0x606,%ecx */
0x75, 0x61,                               /*10d: jne    170 <op_div+0x170> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*10f: mov    $0x0,%eax */
0x48, 0x98,                               /*114: cltq */
0xf2, 0x0f, 0x10, 0x04, 0xc3,             /*116: movsd  (%rbx,%rax,8),%xmm0 */
0x8d, 0x48, 0x01,                         /*11b: lea    0x1(%rax),%ecx */
0x48, 0x63, 0xc9,                         /*11e: movslq %ecx,%rcx */
0xf2, 0x0f, 0x5e, 0x04, 0xcb,             /*121: divsd  (%rbx,%rcx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0xc3,             /*126: movsd  %xmm0,(%rbx,%rax,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*12b: mov    $0x0,%eax */
0x48, 0x98,                               /*130: cltq */
0xf2, 0x0f, 0x10, 0x04, 0xc3,             /*132: movsd  (%rbx,%rax,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x44, 0x24, 0x08,       /*137: movsd  %xmm0,0x8(%rsp) */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*13d: callq  142 <op_div+0x142> */
0x85, 0xc0,                               /*142: test   %eax,%eax */
0x74, 0x6e,                               /*144: je     1b4 <op_div+0x1b4> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*146: mov    $0x0,%eax */
0x48, 0x98,                               /*14b: cltq */
0xf2, 0x0f, 0x10, 0x44, 0x24, 0x08,       /*14d: movsd  0x8(%rsp),%xmm0 */
0x66, 0x0f, 0x2e, 0xc0,                   /*153: ucomisd %xmm0,%xmm0 */
0x66, 0x48, 0x0f, 0x7e, 0xc1,             /*157: movq   %xmm0,%rcx */
0x48, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x7f,/*15c: movabs $0x7ff8000000000000,%rdx */
0x48, 0x0f, 0x4b, 0xd1,                   /*166: cmovnp %rcx,%rdx */
0x48, 0x89, 0x14, 0xc3,                   /*16a: mov    %rdx,(%rbx,%rax,8) */
0xeb, 0x44,                               /*16e: jmp    1b4 <op_div+0x1b4> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*170: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*175: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*17a: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17f: mov    $0x0,%ecx */
0x41, 0xb8, 0x01, 0x00, 0x00, 0x00,       /*184: mov    $0x1,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*18a: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*190: callq  195 <op_div+0x195> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*195: mov    0x0(%rip),%rdi        # 19c <op_div+0x19c> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*19c: mov    0x0(%rip),%rsi        # 1a3 <op_div+0x1a3> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1a3: mov    0x0(%rip),%rcx        # 1aa <op_div+0x1aa> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1aa: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*1af: jmpq   1b4 <op_div+0x1b4> */
0x48, 0x83, 0xc4, 0x10,                   /*1b4: add    $0x10,%rsp */
0x5b,                                     /*1b8: pop    %rbx */

};
static uint8_t op_div__rodata[] = {

};


static uint8_t op_eq__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x53,                                     /*e: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*f: mov    0x0(%rip),%rbx        # 16 <op_eq+0x16> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*16: mov    0x0(%rip),%rdi        # 1d <op_eq+0x1d> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1d: mov    $0x0,%eax */
0x48, 0x98,                               /*22: cltq */
0x48, 0x8b, 0x34, 0xc3,                   /*24: mov    (%rbx,%rax,8),%rsi */
0xff, 0xc0,                               /*28: inc    %eax */
0x48, 0x98,                               /*2a: cltq */
0x48, 0x8b, 0x14, 0xc3,                   /*2c: mov    (%rbx,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*30: callq  35 <op_eq+0x35> */
0x84, 0xc0,                               /*35: test   %al,%al */
0x74, 0x1b,                               /*37: je     54 <op_eq+0x54> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*39: mov    $0x0,%eax */
0x48, 0x98,                               /*3e: cltq */
0x48, 0xb9, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf0, 0xff,/*40: movabs $0xfff0c00000000001,%rcx */
0x48, 0x89, 0x0c, 0xc3,                   /*4a: mov    %rcx,(%rbx,%rax,8) */
0x5b,                                     /*4e: pop    %rbx */
0xe9, 0x50, 0x01, 0x00, 0x00,             /*4f: jmpq   1a4 <op_eq+0x1a4> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*54: mov    $0x0,%eax */
0x48, 0x98,                               /*59: cltq */
0x8b, 0x4c, 0xc3, 0x04,                   /*5b: mov    0x4(%rbx,%rax,8),%ecx */
0xb8, 0x00, 0x06, 0x00, 0x00,             /*5f: mov    $0x600,%eax */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*64: cmp    $0xfff00001,%ecx */
0x72, 0x17,                               /*6a: jb     83 <op_eq+0x83> */
0xc1, 0xe9, 0x06,                         /*6c: shr    $0x6,%ecx */
0x81, 0xe1, 0x00, 0x3f, 0x00, 0x00,       /*6f: and    $0x3f00,%ecx */
0x81, 0xc1, 0x00, 0xff, 0xff, 0x00,       /*75: add    $0xffff00,%ecx */
0x81, 0xe1, 0x00, 0xff, 0xff, 0x00,       /*7b: and    $0xffff00,%ecx */
0x89, 0xc8,                               /*81: mov    %ecx,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*83: mov    $0x0,%ecx */
0xff, 0xc1,                               /*88: inc    %ecx */
0x48, 0x63, 0xc9,                         /*8a: movslq %ecx,%rcx */
0x8b, 0x54, 0xcb, 0x04,                   /*8d: mov    0x4(%rbx,%rcx,8),%edx */
0xb9, 0x06, 0x00, 0x00, 0x00,             /*91: mov    $0x6,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*96: cmp    $0xfff00001,%edx */
0x72, 0x0f,                               /*9c: jb     ad <op_eq+0xad> */
0xc1, 0xea, 0x0e,                         /*9e: shr    $0xe,%edx */
0x83, 0xe2, 0x3f,                         /*a1: and    $0x3f,%edx */
0x81, 0xc2, 0xff, 0x00, 0x00, 0x00,       /*a4: add    $0xff,%edx */
0x0f, 0xb6, 0xca,                         /*aa: movzbl %dl,%ecx */
0x09, 0xc1,                               /*ad: or     %eax,%ecx */
0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*af: cmp    $0x602,%ecx */
0x7f, 0x21,                               /*b5: jg     d8 <op_eq+0xd8> */
0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*b7: cmp    $0x303,%ecx */
0x75, 0x35,                               /*bd: jne    f4 <op_eq+0xf4> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*bf: mov    $0x0,%eax */
0x48, 0x98,                               /*c4: cltq */
0x8b, 0x0c, 0xc3,                         /*c6: mov    (%rbx,%rax,8),%ecx */
0xff, 0xc0,                               /*c9: inc    %eax */
0x48, 0x98,                               /*cb: cltq */
0x3b, 0x0c, 0xc3,                         /*cd: cmp    (%rbx,%rax,8),%ecx */
0x0f, 0x94, 0xc0,                         /*d0: sete   %al */
0x0f, 0xb6, 0xc0,                         /*d3: movzbl %al,%eax */
0xeb, 0x58,                               /*d6: jmp    130 <op_eq+0x130> */
0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*d8: cmp    $0x603,%ecx */
0x75, 0x2a,                               /*de: jne    10a <op_eq+0x10a> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*e0: mov    $0x0,%eax */
0x48, 0x98,                               /*e5: cltq */
0x8d, 0x48, 0x01,                         /*e7: lea    0x1(%rax),%ecx */
0x48, 0x63, 0xc9,                         /*ea: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xcb,             /*ed: cvtsi2sdl (%rbx,%rcx,8),%xmm0 */
0xeb, 0x2e,                               /*f2: jmp    122 <op_eq+0x122> */
0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*f4: cmp    $0x306,%ecx */
0x75, 0x63,                               /*fa: jne    15f <op_eq+0x15f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*fc: mov    $0x0,%eax */
0x48, 0x98,                               /*101: cltq */
0xf2, 0x0f, 0x2a, 0x04, 0xc3,             /*103: cvtsi2sdl (%rbx,%rax,8),%xmm0 */
0xeb, 0x14,                               /*108: jmp    11e <op_eq+0x11e> */
0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*10a: cmp    $0x606,%ecx */
0x75, 0x4d,                               /*110: jne    15f <op_eq+0x15f> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*112: mov    $0x0,%eax */
0x48, 0x98,                               /*117: cltq */
0xf2, 0x0f, 0x10, 0x04, 0xc3,             /*119: movsd  (%rbx,%rax,8),%xmm0 */
0xff, 0xc0,                               /*11e: inc    %eax */
0x48, 0x98,                               /*120: cltq */
0xf2, 0x0f, 0xc2, 0x04, 0xc3, 0x00,       /*122: cmpeqsd (%rbx,%rax,8),%xmm0 */
0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*128: movq   %xmm0,%rax */
0x83, 0xe0, 0x01,                         /*12d: and    $0x1,%eax */
0x85, 0xc0,                               /*130: test   %eax,%eax */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*132: mov    $0x0,%eax */
0x48, 0x98,                               /*137: cltq */
0xc7, 0x04, 0xc3, 0x01, 0x00, 0x00, 0x00, /*139: movl   $0x1,(%rbx,%rax,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*140: mov    $0x0,%eax */
0x48, 0x98,                               /*145: cltq */
0x74, 0x0b,                               /*147: je     154 <op_eq+0x154> */
0xc7, 0x44, 0xc3, 0x04, 0x00, 0xc0, 0xf0, 0xff,/*149: movl   $0xfff0c000,0x4(%rbx,%rax,8) */
0x5b,                                     /*151: pop    %rbx */
0xeb, 0x50,                               /*152: jmp    1a4 <op_eq+0x1a4> */
0xc7, 0x44, 0xc3, 0x04, 0x00, 0x40, 0xf0, 0xff,/*154: movl   $0xfff04000,0x4(%rbx,%rax,8) */
0x5b,                                     /*15c: pop    %rbx */
0xeb, 0x45,                               /*15d: jmp    1a4 <op_eq+0x1a4> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*15f: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*164: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*169: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16e: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*173: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*179: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*17f: callq  184 <op_eq+0x184> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*184: mov    0x0(%rip),%rdi        # 18b <op_eq+0x18b> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*18b: mov    0x0(%rip),%rsi        # 192 <op_eq+0x192> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*192: mov    0x0(%rip),%rcx        # 199 <op_eq+0x199> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*199: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*19e: jmpq   1a3 <op_eq+0x1a3> */
0x5b,                                     /*1a3: pop    %rbx */

};
static uint8_t op_eq__rodata[] = {

};


static uint8_t op_lt__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_lt+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a: movslq %ecx,%rcx */
0x8b, 0x54, 0xc8, 0x04,                   /*1d: mov    0x4(%rax,%rcx,8),%edx */
0xb9, 0x00, 0x06, 0x00, 0x00,             /*21: mov    $0x600,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*26: cmp    $0xfff00001,%edx */
0x72, 0x17,                               /*2c: jb     45 <op_lt+0x45> */
0xc1, 0xea, 0x06,                         /*2e: shr    $0x6,%edx */
0x81, 0xe2, 0x00, 0x3f, 0x00, 0x00,       /*31: and    $0x3f00,%edx */
0x81, 0xc2, 0x00, 0xff, 0xff, 0x00,       /*37: add    $0xffff00,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*3d: and    $0xffff00,%edx */
0x89, 0xd1,                               /*43: mov    %edx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*45: mov    $0x0,%edx */
0xff, 0xc2,                               /*4a: inc    %edx */
0x48, 0x63, 0xd2,                         /*4c: movslq %edx,%rdx */
0x8b, 0x74, 0xd0, 0x04,                   /*4f: mov    0x4(%rax,%rdx,8),%esi */
0xba, 0x06, 0x00, 0x00, 0x00,             /*53: mov    $0x6,%edx */
0x81, 0xfe, 0x01, 0x00, 0xf0, 0xff,       /*58: cmp    $0xfff00001,%esi */
0x72, 0x10,                               /*5e: jb     70 <op_lt+0x70> */
0xc1, 0xee, 0x0e,                         /*60: shr    $0xe,%esi */
0x83, 0xe6, 0x3f,                         /*63: and    $0x3f,%esi */
0x81, 0xc6, 0xff, 0x00, 0x00, 0x00,       /*66: add    $0xff,%esi */
0x40, 0x0f, 0xb6, 0xd6,                   /*6c: movzbl %sil,%edx */
0x09, 0xca,                               /*70: or     %ecx,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*72: cmp    $0x602,%edx */
0x7f, 0x20,                               /*78: jg     9a <op_lt+0x9a> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*7a: cmp    $0x303,%edx */
0x75, 0x35,                               /*80: jne    b7 <op_lt+0xb7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*82: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*87: movslq %ecx,%rcx */
0x8b, 0x14, 0xc8,                         /*8a: mov    (%rax,%rcx,8),%edx */
0xff, 0xc1,                               /*8d: inc    %ecx */
0x48, 0x63, 0xc9,                         /*8f: movslq %ecx,%rcx */
0x3b, 0x14, 0xc8,                         /*92: cmp    (%rax,%rcx,8),%edx */
0x0f, 0x9c, 0xc1,                         /*95: setl   %cl */
0xeb, 0x68,                               /*98: jmp    102 <op_lt+0x102> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*9a: cmp    $0x603,%edx */
0x75, 0x3d,                               /*a0: jne    df <op_lt+0xdf> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a2: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*a7: movslq %ecx,%rcx */
0x8d, 0x51, 0x01,                         /*aa: lea    0x1(%rcx),%edx */
0x48, 0x63, 0xd2,                         /*ad: movslq %edx,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0xd0,             /*b0: cvtsi2sdl (%rax,%rdx,8),%xmm0 */
0xeb, 0x43,                               /*b5: jmp    fa <op_lt+0xfa> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*b7: cmp    $0x306,%edx */
0x75, 0x77,                               /*bd: jne    136 <op_lt+0x136> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*bf: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*c4: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xc8,             /*c7: cvtsi2sdl (%rax,%rcx,8),%xmm0 */
0xff, 0xc1,                               /*cc: inc    %ecx */
0x48, 0x63, 0xc9,                         /*ce: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x0c, 0xc8,             /*d1: movsd  (%rax,%rcx,8),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*d6: ucomisd %xmm0,%xmm1 */
0x0f, 0x97, 0xc1,                         /*da: seta   %cl */
0xeb, 0x23,                               /*dd: jmp    102 <op_lt+0x102> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*df: cmp    $0x606,%edx */
0x75, 0x4f,                               /*e5: jne    136 <op_lt+0x136> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e7: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*ec: movslq %ecx,%rcx */
0x8d, 0x51, 0x01,                         /*ef: lea    0x1(%rcx),%edx */
0x48, 0x63, 0xd2,                         /*f2: movslq %edx,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0xd0,             /*f5: movsd  (%rax,%rdx,8),%xmm0 */
0x66, 0x0f, 0x2e, 0x04, 0xc8,             /*fa: ucomisd (%rax,%rcx,8),%xmm0 */
0x0f, 0x97, 0xc1,                         /*ff: seta   %cl */
0x0f, 0xb6, 0xc9,                         /*102: movzbl %cl,%ecx */
0x85, 0xc9,                               /*105: test   %ecx,%ecx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*107: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*10c: movslq %ecx,%rcx */
0xc7, 0x04, 0xc8, 0x01, 0x00, 0x00, 0x00, /*10f: movl   $0x1,(%rax,%rcx,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*116: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*11b: movslq %ecx,%rcx */
0x74, 0x0b,                               /*11e: je     12b <op_lt+0x12b> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0xc0, 0xf0, 0xff,/*120: movl   $0xfff0c000,0x4(%rax,%rcx,8) */
0x58,                                     /*128: pop    %rax */
0xeb, 0x4f,                               /*129: jmp    17a <op_lt+0x17a> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x40, 0xf0, 0xff,/*12b: movl   $0xfff04000,0x4(%rax,%rcx,8) */
0x58,                                     /*133: pop    %rax */
0xeb, 0x44,                               /*134: jmp    17a <op_lt+0x17a> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*136: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*13b: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*140: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*145: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*14a: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*150: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*156: callq  15b <op_lt+0x15b> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*15b: mov    0x0(%rip),%rdi        # 162 <op_lt+0x162> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*162: mov    0x0(%rip),%rsi        # 169 <op_lt+0x169> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*169: mov    0x0(%rip),%rcx        # 170 <op_lt+0x170> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*170: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*175: jmpq   17a <op_lt+0x17a> */

};
static uint8_t op_lt__rodata[] = {

};


static uint8_t op_le__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_le+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a: movslq %ecx,%rcx */
0x8b, 0x54, 0xc8, 0x04,                   /*1d: mov    0x4(%rax,%rcx,8),%edx */
0xb9, 0x00, 0x06, 0x00, 0x00,             /*21: mov    $0x600,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*26: cmp    $0xfff00001,%edx */
0x72, 0x17,                               /*2c: jb     45 <op_le+0x45> */
0xc1, 0xea, 0x06,                         /*2e: shr    $0x6,%edx */
0x81, 0xe2, 0x00, 0x3f, 0x00, 0x00,       /*31: and    $0x3f00,%edx */
0x81, 0xc2, 0x00, 0xff, 0xff, 0x00,       /*37: add    $0xffff00,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*3d: and    $0xffff00,%edx */
0x89, 0xd1,                               /*43: mov    %edx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*45: mov    $0x0,%edx */
0xff, 0xc2,                               /*4a: inc    %edx */
0x48, 0x63, 0xd2,                         /*4c: movslq %edx,%rdx */
0x8b, 0x74, 0xd0, 0x04,                   /*4f: mov    0x4(%rax,%rdx,8),%esi */
0xba, 0x06, 0x00, 0x00, 0x00,             /*53: mov    $0x6,%edx */
0x81, 0xfe, 0x01, 0x00, 0xf0, 0xff,       /*58: cmp    $0xfff00001,%esi */
0x72, 0x10,                               /*5e: jb     70 <op_le+0x70> */
0xc1, 0xee, 0x0e,                         /*60: shr    $0xe,%esi */
0x83, 0xe6, 0x3f,                         /*63: and    $0x3f,%esi */
0x81, 0xc6, 0xff, 0x00, 0x00, 0x00,       /*66: add    $0xff,%esi */
0x40, 0x0f, 0xb6, 0xd6,                   /*6c: movzbl %sil,%edx */
0x09, 0xca,                               /*70: or     %ecx,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*72: cmp    $0x602,%edx */
0x7f, 0x20,                               /*78: jg     9a <op_le+0x9a> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*7a: cmp    $0x303,%edx */
0x75, 0x35,                               /*80: jne    b7 <op_le+0xb7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*82: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*87: movslq %ecx,%rcx */
0x8b, 0x14, 0xc8,                         /*8a: mov    (%rax,%rcx,8),%edx */
0xff, 0xc1,                               /*8d: inc    %ecx */
0x48, 0x63, 0xc9,                         /*8f: movslq %ecx,%rcx */
0x3b, 0x14, 0xc8,                         /*92: cmp    (%rax,%rcx,8),%edx */
0x0f, 0x9e, 0xc1,                         /*95: setle  %cl */
0xeb, 0x68,                               /*98: jmp    102 <op_le+0x102> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*9a: cmp    $0x603,%edx */
0x75, 0x3d,                               /*a0: jne    df <op_le+0xdf> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a2: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*a7: movslq %ecx,%rcx */
0x8d, 0x51, 0x01,                         /*aa: lea    0x1(%rcx),%edx */
0x48, 0x63, 0xd2,                         /*ad: movslq %edx,%rdx */
0xf2, 0x0f, 0x2a, 0x04, 0xd0,             /*b0: cvtsi2sdl (%rax,%rdx,8),%xmm0 */
0xeb, 0x43,                               /*b5: jmp    fa <op_le+0xfa> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*b7: cmp    $0x306,%edx */
0x75, 0x77,                               /*bd: jne    136 <op_le+0x136> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*bf: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*c4: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xc8,             /*c7: cvtsi2sdl (%rax,%rcx,8),%xmm0 */
0xff, 0xc1,                               /*cc: inc    %ecx */
0x48, 0x63, 0xc9,                         /*ce: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x0c, 0xc8,             /*d1: movsd  (%rax,%rcx,8),%xmm1 */
0x66, 0x0f, 0x2e, 0xc8,                   /*d6: ucomisd %xmm0,%xmm1 */
0x0f, 0x93, 0xc1,                         /*da: setae  %cl */
0xeb, 0x23,                               /*dd: jmp    102 <op_le+0x102> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*df: cmp    $0x606,%edx */
0x75, 0x4f,                               /*e5: jne    136 <op_le+0x136> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e7: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*ec: movslq %ecx,%rcx */
0x8d, 0x51, 0x01,                         /*ef: lea    0x1(%rcx),%edx */
0x48, 0x63, 0xd2,                         /*f2: movslq %edx,%rdx */
0xf2, 0x0f, 0x10, 0x04, 0xd0,             /*f5: movsd  (%rax,%rdx,8),%xmm0 */
0x66, 0x0f, 0x2e, 0x04, 0xc8,             /*fa: ucomisd (%rax,%rcx,8),%xmm0 */
0x0f, 0x93, 0xc1,                         /*ff: setae  %cl */
0x0f, 0xb6, 0xc9,                         /*102: movzbl %cl,%ecx */
0x85, 0xc9,                               /*105: test   %ecx,%ecx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*107: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*10c: movslq %ecx,%rcx */
0xc7, 0x04, 0xc8, 0x01, 0x00, 0x00, 0x00, /*10f: movl   $0x1,(%rax,%rcx,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*116: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*11b: movslq %ecx,%rcx */
0x74, 0x0b,                               /*11e: je     12b <op_le+0x12b> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0xc0, 0xf0, 0xff,/*120: movl   $0xfff0c000,0x4(%rax,%rcx,8) */
0x58,                                     /*128: pop    %rax */
0xeb, 0x4f,                               /*129: jmp    17a <op_le+0x17a> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x40, 0xf0, 0xff,/*12b: movl   $0xfff04000,0x4(%rax,%rcx,8) */
0x58,                                     /*133: pop    %rax */
0xeb, 0x44,                               /*134: jmp    17a <op_le+0x17a> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*136: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*13b: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*140: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*145: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*14a: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*150: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*156: callq  15b <op_le+0x15b> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*15b: mov    0x0(%rip),%rdi        # 162 <op_le+0x162> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*162: mov    0x0(%rip),%rsi        # 169 <op_le+0x169> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*169: mov    0x0(%rip),%rcx        # 170 <op_le+0x170> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*170: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*175: jmpq   17a <op_le+0x17a> */

};
static uint8_t op_le__rodata[] = {

};


static uint8_t op_gt__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_gt+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a: movslq %ecx,%rcx */
0x8b, 0x54, 0xc8, 0x04,                   /*1d: mov    0x4(%rax,%rcx,8),%edx */
0xb9, 0x00, 0x06, 0x00, 0x00,             /*21: mov    $0x600,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*26: cmp    $0xfff00001,%edx */
0x72, 0x17,                               /*2c: jb     45 <op_gt+0x45> */
0xc1, 0xea, 0x06,                         /*2e: shr    $0x6,%edx */
0x81, 0xe2, 0x00, 0x3f, 0x00, 0x00,       /*31: and    $0x3f00,%edx */
0x81, 0xc2, 0x00, 0xff, 0xff, 0x00,       /*37: add    $0xffff00,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*3d: and    $0xffff00,%edx */
0x89, 0xd1,                               /*43: mov    %edx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*45: mov    $0x0,%edx */
0xff, 0xc2,                               /*4a: inc    %edx */
0x48, 0x63, 0xd2,                         /*4c: movslq %edx,%rdx */
0x8b, 0x74, 0xd0, 0x04,                   /*4f: mov    0x4(%rax,%rdx,8),%esi */
0xba, 0x06, 0x00, 0x00, 0x00,             /*53: mov    $0x6,%edx */
0x81, 0xfe, 0x01, 0x00, 0xf0, 0xff,       /*58: cmp    $0xfff00001,%esi */
0x72, 0x10,                               /*5e: jb     70 <op_gt+0x70> */
0xc1, 0xee, 0x0e,                         /*60: shr    $0xe,%esi */
0x83, 0xe6, 0x3f,                         /*63: and    $0x3f,%esi */
0x81, 0xc6, 0xff, 0x00, 0x00, 0x00,       /*66: add    $0xff,%esi */
0x40, 0x0f, 0xb6, 0xd6,                   /*6c: movzbl %sil,%edx */
0x09, 0xca,                               /*70: or     %ecx,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*72: cmp    $0x602,%edx */
0x7f, 0x20,                               /*78: jg     9a <op_gt+0x9a> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*7a: cmp    $0x303,%edx */
0x75, 0x40,                               /*80: jne    c2 <op_gt+0xc2> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*82: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*87: movslq %ecx,%rcx */
0x8b, 0x14, 0xc8,                         /*8a: mov    (%rax,%rcx,8),%edx */
0xff, 0xc1,                               /*8d: inc    %ecx */
0x48, 0x63, 0xc9,                         /*8f: movslq %ecx,%rcx */
0x3b, 0x14, 0xc8,                         /*92: cmp    (%rax,%rcx,8),%edx */
0x0f, 0x9f, 0xc1,                         /*95: setg   %cl */
0xeb, 0x61,                               /*98: jmp    fb <op_gt+0xfb> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*9a: cmp    $0x603,%edx */
0x75, 0x37,                               /*a0: jne    d9 <op_gt+0xd9> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a2: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*a7: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*aa: movsd  (%rax,%rcx,8),%xmm0 */
0xff, 0xc1,                               /*af: inc    %ecx */
0x48, 0x63, 0xc9,                         /*b1: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0xc8,             /*b4: cvtsi2sdl (%rax,%rcx,8),%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*b9: ucomisd %xmm1,%xmm0 */
0x0f, 0x97, 0xc1,                         /*bd: seta   %cl */
0xeb, 0x39,                               /*c0: jmp    fb <op_gt+0xfb> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*c2: cmp    $0x306,%edx */
0x75, 0x65,                               /*c8: jne    12f <op_gt+0x12f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ca: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*cf: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xc8,             /*d2: cvtsi2sdl (%rax,%rcx,8),%xmm0 */
0xeb, 0x15,                               /*d7: jmp    ee <op_gt+0xee> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*d9: cmp    $0x606,%edx */
0x75, 0x4e,                               /*df: jne    12f <op_gt+0x12f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e1: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*e6: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*e9: movsd  (%rax,%rcx,8),%xmm0 */
0xff, 0xc1,                               /*ee: inc    %ecx */
0x48, 0x63, 0xc9,                         /*f0: movslq %ecx,%rcx */
0x66, 0x0f, 0x2e, 0x04, 0xc8,             /*f3: ucomisd (%rax,%rcx,8),%xmm0 */
0x0f, 0x97, 0xc1,                         /*f8: seta   %cl */
0x0f, 0xb6, 0xc9,                         /*fb: movzbl %cl,%ecx */
0x85, 0xc9,                               /*fe: test   %ecx,%ecx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*100: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*105: movslq %ecx,%rcx */
0xc7, 0x04, 0xc8, 0x01, 0x00, 0x00, 0x00, /*108: movl   $0x1,(%rax,%rcx,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10f: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*114: movslq %ecx,%rcx */
0x74, 0x0b,                               /*117: je     124 <op_gt+0x124> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0xc0, 0xf0, 0xff,/*119: movl   $0xfff0c000,0x4(%rax,%rcx,8) */
0x58,                                     /*121: pop    %rax */
0xeb, 0x4f,                               /*122: jmp    173 <op_gt+0x173> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x40, 0xf0, 0xff,/*124: movl   $0xfff04000,0x4(%rax,%rcx,8) */
0x58,                                     /*12c: pop    %rax */
0xeb, 0x44,                               /*12d: jmp    173 <op_gt+0x173> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*12f: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*134: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*139: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13e: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*143: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*149: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14f: callq  154 <op_gt+0x154> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*154: mov    0x0(%rip),%rdi        # 15b <op_gt+0x15b> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*15b: mov    0x0(%rip),%rsi        # 162 <op_gt+0x162> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*162: mov    0x0(%rip),%rcx        # 169 <op_gt+0x169> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*169: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*16e: jmpq   173 <op_gt+0x173> */

};
static uint8_t op_gt__rodata[] = {

};


static uint8_t op_ge__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*e: mov    0x0(%rip),%rax        # 15 <op_ge+0x15> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*15: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*1a: movslq %ecx,%rcx */
0x8b, 0x54, 0xc8, 0x04,                   /*1d: mov    0x4(%rax,%rcx,8),%edx */
0xb9, 0x00, 0x06, 0x00, 0x00,             /*21: mov    $0x600,%ecx */
0x81, 0xfa, 0x01, 0x00, 0xf0, 0xff,       /*26: cmp    $0xfff00001,%edx */
0x72, 0x17,                               /*2c: jb     45 <op_ge+0x45> */
0xc1, 0xea, 0x06,                         /*2e: shr    $0x6,%edx */
0x81, 0xe2, 0x00, 0x3f, 0x00, 0x00,       /*31: and    $0x3f00,%edx */
0x81, 0xc2, 0x00, 0xff, 0xff, 0x00,       /*37: add    $0xffff00,%edx */
0x81, 0xe2, 0x00, 0xff, 0xff, 0x00,       /*3d: and    $0xffff00,%edx */
0x89, 0xd1,                               /*43: mov    %edx,%ecx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*45: mov    $0x0,%edx */
0xff, 0xc2,                               /*4a: inc    %edx */
0x48, 0x63, 0xd2,                         /*4c: movslq %edx,%rdx */
0x8b, 0x74, 0xd0, 0x04,                   /*4f: mov    0x4(%rax,%rdx,8),%esi */
0xba, 0x06, 0x00, 0x00, 0x00,             /*53: mov    $0x6,%edx */
0x81, 0xfe, 0x01, 0x00, 0xf0, 0xff,       /*58: cmp    $0xfff00001,%esi */
0x72, 0x10,                               /*5e: jb     70 <op_ge+0x70> */
0xc1, 0xee, 0x0e,                         /*60: shr    $0xe,%esi */
0x83, 0xe6, 0x3f,                         /*63: and    $0x3f,%esi */
0x81, 0xc6, 0xff, 0x00, 0x00, 0x00,       /*66: add    $0xff,%esi */
0x40, 0x0f, 0xb6, 0xd6,                   /*6c: movzbl %sil,%edx */
0x09, 0xca,                               /*70: or     %ecx,%edx */
0x81, 0xfa, 0x02, 0x06, 0x00, 0x00,       /*72: cmp    $0x602,%edx */
0x7f, 0x20,                               /*78: jg     9a <op_ge+0x9a> */
0x81, 0xfa, 0x03, 0x03, 0x00, 0x00,       /*7a: cmp    $0x303,%edx */
0x75, 0x40,                               /*80: jne    c2 <op_ge+0xc2> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*82: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*87: movslq %ecx,%rcx */
0x8b, 0x14, 0xc8,                         /*8a: mov    (%rax,%rcx,8),%edx */
0xff, 0xc1,                               /*8d: inc    %ecx */
0x48, 0x63, 0xc9,                         /*8f: movslq %ecx,%rcx */
0x3b, 0x14, 0xc8,                         /*92: cmp    (%rax,%rcx,8),%edx */
0x0f, 0x9d, 0xc1,                         /*95: setge  %cl */
0xeb, 0x61,                               /*98: jmp    fb <op_ge+0xfb> */
0x81, 0xfa, 0x03, 0x06, 0x00, 0x00,       /*9a: cmp    $0x603,%edx */
0x75, 0x37,                               /*a0: jne    d9 <op_ge+0xd9> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a2: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*a7: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*aa: movsd  (%rax,%rcx,8),%xmm0 */
0xff, 0xc1,                               /*af: inc    %ecx */
0x48, 0x63, 0xc9,                         /*b1: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x0c, 0xc8,             /*b4: cvtsi2sdl (%rax,%rcx,8),%xmm1 */
0x66, 0x0f, 0x2e, 0xc1,                   /*b9: ucomisd %xmm1,%xmm0 */
0x0f, 0x93, 0xc1,                         /*bd: setae  %cl */
0xeb, 0x39,                               /*c0: jmp    fb <op_ge+0xfb> */
0x81, 0xfa, 0x06, 0x03, 0x00, 0x00,       /*c2: cmp    $0x306,%edx */
0x75, 0x65,                               /*c8: jne    12f <op_ge+0x12f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*ca: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*cf: movslq %ecx,%rcx */
0xf2, 0x0f, 0x2a, 0x04, 0xc8,             /*d2: cvtsi2sdl (%rax,%rcx,8),%xmm0 */
0xeb, 0x15,                               /*d7: jmp    ee <op_ge+0xee> */
0x81, 0xfa, 0x06, 0x06, 0x00, 0x00,       /*d9: cmp    $0x606,%edx */
0x75, 0x4e,                               /*df: jne    12f <op_ge+0x12f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e1: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*e6: movslq %ecx,%rcx */
0xf2, 0x0f, 0x10, 0x04, 0xc8,             /*e9: movsd  (%rax,%rcx,8),%xmm0 */
0xff, 0xc1,                               /*ee: inc    %ecx */
0x48, 0x63, 0xc9,                         /*f0: movslq %ecx,%rcx */
0x66, 0x0f, 0x2e, 0x04, 0xc8,             /*f3: ucomisd (%rax,%rcx,8),%xmm0 */
0x0f, 0x93, 0xc1,                         /*f8: setae  %cl */
0x0f, 0xb6, 0xc9,                         /*fb: movzbl %cl,%ecx */
0x85, 0xc9,                               /*fe: test   %ecx,%ecx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*100: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*105: movslq %ecx,%rcx */
0xc7, 0x04, 0xc8, 0x01, 0x00, 0x00, 0x00, /*108: movl   $0x1,(%rax,%rcx,8) */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10f: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*114: movslq %ecx,%rcx */
0x74, 0x0b,                               /*117: je     124 <op_ge+0x124> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0xc0, 0xf0, 0xff,/*119: movl   $0xfff0c000,0x4(%rax,%rcx,8) */
0x58,                                     /*121: pop    %rax */
0xeb, 0x4f,                               /*122: jmp    173 <op_ge+0x173> */
0xc7, 0x44, 0xc8, 0x04, 0x00, 0x40, 0xf0, 0xff,/*124: movl   $0xfff04000,0x4(%rax,%rcx,8) */
0x58,                                     /*12c: pop    %rax */
0xeb, 0x44,                               /*12d: jmp    173 <op_ge+0x173> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*12f: mov    $0x0,%edi */
0xbe, 0x20, 0x00, 0x00, 0x00,             /*134: mov    $0x20,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*139: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*13e: mov    $0x0,%ecx */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*143: mov    $0x0,%r8d */
0x41, 0xb9, 0x00, 0x00, 0x00, 0x00,       /*149: mov    $0x0,%r9d */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14f: callq  154 <op_ge+0x154> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*154: mov    0x0(%rip),%rdi        # 15b <op_ge+0x15b> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*15b: mov    0x0(%rip),%rsi        # 162 <op_ge+0x162> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*162: mov    0x0(%rip),%rcx        # 169 <op_ge+0x169> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*169: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*16e: jmpq   173 <op_ge+0x173> */

};
static uint8_t op_ge__rodata[] = {

};


static uint8_t op_array__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rbx        # a <op_array+0xa> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*a: mov    $0x0,%r14d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rdi        # 17 <op_array+0x17> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%eax */
0x48, 0x8d, 0x14, 0xc3,                   /*1c: lea    (%rbx,%rax,8),%rdx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*25: callq  2a <op_array+0x2a> */
0x4a, 0x89, 0x04, 0xf3,                   /*2a: mov    %rax,(%rbx,%r14,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*2e: mov    0x0(%rip),%eax        # 34 <op_array+0x34> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*34: mov    0x0(%rip),%rcx        # 3b <op_array+0x3b> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*3b: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*41: pop    %rbx */
0x41, 0x5e,                               /*42: pop    %r14 */

};
static uint8_t op_array__rodata[] = {

};


static uint8_t op_arycat__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x4c, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%r14        # a <op_arycat+0xa> */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*a: mov    0x0(%rip),%rbx        # 11 <op_arycat+0x11> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*11: mov    $0x0,%eax */
0x48, 0x8b, 0x34, 0xc3,                   /*16: mov    (%rbx,%rax,8),%rsi */
0x4c, 0x89, 0xf7,                         /*1a: mov    %r14,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1d: callq  22 <op_arycat+0x22> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*22: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xcb,                   /*27: mov    (%rbx,%rcx,8),%rsi */
0x4c, 0x89, 0xf7,                         /*2b: mov    %r14,%rdi */
0x48, 0x89, 0xc2,                         /*2e: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*31: callq  36 <op_arycat+0x36> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*36: mov    0x0(%rip),%eax        # 3c <op_arycat+0x3c> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*3c: mov    0x0(%rip),%rcx        # 43 <op_arycat+0x43> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*43: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*49: pop    %rbx */
0x41, 0x5e,                               /*4a: pop    %r14 */

};
static uint8_t op_arycat__rodata[] = {

};


static uint8_t op_arypush__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_arypush+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_arypush+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*13: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*1c: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*20: callq  25 <op_arypush+0x25> */

};
static uint8_t op_arypush__rodata[] = {

};


static uint8_t op_aref__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rbx        # a <op_aref+0xa> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%eax */
0x48, 0x8b, 0x34, 0xc3,                   /*f: mov    (%rbx,%rax,8),%rsi */
0x48, 0x89, 0xf0,                         /*13: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*16: shr    $0x20,%rax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*1a: cmp    $0xfff00001,%eax */
0x72, 0x29,                               /*1f: jb     4a <op_aref+0x4a> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*21: and    $0xfc000,%eax */
0x3d, 0x00, 0xc0, 0x03, 0x00,             /*26: cmp    $0x3c000,%eax */
0x75, 0x1d,                               /*2b: jne    4a <op_aref+0x4a> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*2d: mov    $0x0,%r14d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*33: mov    0x0(%rip),%rdi        # 3a <op_aref+0x3a> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*3a: mov    $0x0,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3f: callq  44 <op_aref+0x44> */
0x4a, 0x89, 0x04, 0xf3,                   /*44: mov    %rax,(%rbx,%r14,8) */
0xeb, 0x31,                               /*48: jmp    7b <op_aref+0x7b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*4a: mov    $0x0,%eax */
0x85, 0xc0,                               /*4f: test   %eax,%eax */
0x75, 0x0b,                               /*51: jne    5e <op_aref+0x5e> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*53: mov    $0x0,%eax */
0x48, 0x89, 0x34, 0xc3,                   /*58: mov    %rsi,(%rbx,%rax,8) */
0xeb, 0x1d,                               /*5c: jmp    7b <op_aref+0x7b> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*5e: mov    $0x0,%eax */
0x48, 0x98,                               /*63: cltq */
0xc7, 0x04, 0xc3, 0x00, 0x00, 0x00, 0x00, /*65: movl   $0x0,(%rbx,%rax,8) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*6c: mov    0x0(%rip),%rcx        # 73 <op_aref+0x73> */
0xc7, 0x44, 0xc1, 0x04, 0x00, 0x40, 0xf0, 0xff,/*73: movl   $0xfff04000,0x4(%rcx,%rax,8) */
0x5b,                                     /*7b: pop    %rbx */
0x41, 0x5e,                               /*7c: pop    %r14 */

};
static uint8_t op_aref__rodata[] = {

};


static uint8_t op_aset__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_aset+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_aset+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*13: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%ecx */
0x48, 0x8b, 0x0c, 0xc8,                   /*1c: mov    (%rax,%rcx,8),%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*25: callq  2a <op_aset+0x2a> */

};
static uint8_t op_aset__rodata[] = {

};


static uint8_t op_apost__text[] = {
0x55,                                     /*0: push   %rbp */
0x41, 0x57,                               /*1: push   %r15 */
0x41, 0x56,                               /*3: push   %r14 */
0x53,                                     /*5: push   %rbx */
0x4c, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*6: mov    0x0(%rip),%r15        # d <op_apost+0xd> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%eax */
0x48, 0x98,                               /*12: cltq */
0x49, 0x8b, 0x04, 0xc7,                   /*14: mov    (%r15,%rax,8),%rax */
0x48, 0x89, 0xc1,                         /*18: mov    %rax,%rcx */
0x48, 0xc1, 0xe9, 0x20,                   /*1b: shr    $0x20,%rcx */
0x81, 0xf9, 0x01, 0x00, 0xf0, 0xff,       /*1f: cmp    $0xfff00001,%ecx */
0x0f, 0x82, 0xad, 0x00, 0x00, 0x00,       /*25: jb     d8 <op_apost+0xd8> */
0x81, 0xe1, 0x00, 0xc0, 0x0f, 0x00,       /*2b: and    $0xfc000,%ecx */
0x81, 0xf9, 0x00, 0xc0, 0x03, 0x00,       /*31: cmp    $0x3c000,%ecx */
0x0f, 0x85, 0x9b, 0x00, 0x00, 0x00,       /*37: jne    d8 <op_apost+0xd8> */
0x48, 0xc1, 0xe0, 0x02,                   /*3d: shl    $0x2,%rax */
0x49, 0xbe, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*41: movabs $0xfffffffffffc,%r14 */
0x49, 0x21, 0xc6,                         /*4b: and    %rax,%r14 */
0x41, 0x8b, 0x5e, 0x18,                   /*4e: mov    0x18(%r14),%ebx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*52: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*57: mov    $0x0,%ecx */
0x01, 0xc1,                               /*5c: add    %eax,%ecx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*5e: mov    0x0(%rip),%rdi        # 65 <op_apost+0x65> */
0x39, 0xcb,                               /*65: cmp    %ecx,%ebx */
0x0f, 0x8e, 0xce, 0x00, 0x00, 0x00,       /*67: jle    13b <op_apost+0x13b> */
0xbd, 0x00, 0x00, 0x00, 0x00,             /*6d: mov    $0x0,%ebp */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*72: mov    $0x0,%esi */
0x48, 0x63, 0xc6,                         /*77: movslq %esi,%rax */
0xf7, 0xde,                               /*7a: neg    %esi */
0x29, 0xee,                               /*7c: sub    %ebp,%esi */
0x01, 0xde,                               /*7e: add    %ebx,%esi */
0x49, 0x8b, 0x4e, 0x28,                   /*80: mov    0x28(%r14),%rcx */
0x48, 0x8d, 0x14, 0xc1,                   /*84: lea    (%rcx,%rax,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*88: callq  8d <op_apost+0x8d> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*8d: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*92: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xcf,                   /*95: mov    %rax,(%r15,%rcx,8) */
0x85, 0xed,                               /*99: test   %ebp,%ebp */
0x0f, 0x84, 0x54, 0x01, 0x00, 0x00,       /*9b: je     1f5 <op_apost+0x1f5> */
0xf7, 0xdd,                               /*a1: neg    %ebp */
0x48, 0x8d, 0x04, 0xcd, 0x08, 0x00, 0x00, 0x00,/*a3: lea    0x8(,%rcx,8),%rax */
0x0f, 0x1f, 0x44, 0x00, 0x00,             /*ab: nopl   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*b0: mov    0x0(%rip),%rcx        # b7 <op_apost+0xb7> */
0x8d, 0x14, 0x2b,                         /*b7: lea    (%rbx,%rbp,1),%edx */
0x48, 0x63, 0xd2,                         /*ba: movslq %edx,%rdx */
0x49, 0x8b, 0x76, 0x28,                   /*bd: mov    0x28(%r14),%rsi */
0xf2, 0x0f, 0x10, 0x04, 0xd6,             /*c1: movsd  (%rsi,%rdx,8),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x01,             /*c6: movsd  %xmm0,(%rcx,%rax,1) */
0x48, 0x83, 0xc0, 0x08,                   /*cb: add    $0x8,%rax */
0xff, 0xc5,                               /*cf: inc    %ebp */
0x75, 0xdd,                               /*d1: jne    b0 <op_apost+0xb0> */
0xe9, 0x1d, 0x01, 0x00, 0x00,             /*d3: jmpq   1f5 <op_apost+0x1f5> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*d8: mov    $0x0,%eax */
0x48, 0x63, 0xd8,                         /*dd: movslq %eax,%rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*e0: mov    0x0(%rip),%rdi        # e7 <op_apost+0xe7> */
0x31, 0xf6,                               /*e7: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*e9: callq  ee <op_apost+0xee> */
0x49, 0x89, 0x04, 0xdf,                   /*ee: mov    %rax,(%r15,%rbx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*f2: mov    $0x0,%eax */
0x85, 0xc0,                               /*f7: test   %eax,%eax */
0x0f, 0x84, 0xf6, 0x00, 0x00, 0x00,       /*f9: je     1f5 <op_apost+0x1f5> */
0x48, 0xc1, 0xe3, 0x03,                   /*ff: shl    $0x3,%rbx */
0x0f, 0x1f, 0x00,                         /*103: nopl   (%rax) */
0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*106: nopw   %cs:0x0(%rax,%rax,1) */
0xff, 0xc8,                               /*110: dec    %eax */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*112: mov    0x0(%rip),%rcx        # 119 <op_apost+0x119> */
0xc7, 0x44, 0x19, 0x08, 0x00, 0x00, 0x00, 0x00,/*119: movl   $0x0,0x8(%rcx,%rbx,1) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*121: mov    0x0(%rip),%rcx        # 128 <op_apost+0x128> */
0xc7, 0x44, 0x19, 0x0c, 0x00, 0x40, 0xf0, 0xff,/*128: movl   $0xfff04000,0xc(%rcx,%rbx,1) */
0x48, 0x8d, 0x5b, 0x08,                   /*130: lea    0x8(%rbx),%rbx */
0x75, 0xda,                               /*134: jne    110 <op_apost+0x110> */
0xe9, 0xba, 0x00, 0x00, 0x00,             /*136: jmpq   1f5 <op_apost+0x1f5> */
0x31, 0xed,                               /*13b: xor    %ebp,%ebp */
0x31, 0xf6,                               /*13d: xor    %esi,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*13f: callq  144 <op_apost+0x144> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*144: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*149: movslq %ecx,%rcx */
0x49, 0x89, 0x04, 0xcf,                   /*14c: mov    %rax,(%r15,%rcx,8) */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*150: mov    $0x0,%eax */
0x39, 0xc3,                               /*155: cmp    %eax,%ebx */
0x7e, 0x4a,                               /*157: jle    1a3 <op_apost+0x1a3> */
0x8d, 0x6b, 0xff,                         /*159: lea    -0x1(%rbx),%ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*15c: mov    $0x0,%eax */
0x29, 0xc5,                               /*161: sub    %eax,%ebp */
0x29, 0xc3,                               /*163: sub    %eax,%ebx */
0x48, 0x98,                               /*165: cltq */
0x48, 0xc1, 0xe0, 0x03,                   /*167: shl    $0x3,%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*16b: mov    $0x0,%ecx */
0xff, 0xc1,                               /*170: inc    %ecx */
0x48, 0x63, 0xc9,                         /*172: movslq %ecx,%rcx */
0x48, 0xc1, 0xe1, 0x03,                   /*175: shl    $0x3,%rcx */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*179: nopl   0x0(%rax) */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*180: mov    0x0(%rip),%rdx        # 187 <op_apost+0x187> */
0x49, 0x8b, 0x76, 0x28,                   /*187: mov    0x28(%r14),%rsi */
0xf2, 0x0f, 0x10, 0x04, 0x06,             /*18b: movsd  (%rsi,%rax,1),%xmm0 */
0xf2, 0x0f, 0x11, 0x04, 0x0a,             /*190: movsd  %xmm0,(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x08,                   /*195: add    $0x8,%rcx */
0x48, 0x83, 0xc0, 0x08,                   /*199: add    $0x8,%rax */
0xff, 0xcb,                               /*19d: dec    %ebx */
0x75, 0xdf,                               /*19f: jne    180 <op_apost+0x180> */
0xff, 0xc5,                               /*1a1: inc    %ebp */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1a3: mov    $0x0,%eax */
0x39, 0xc5,                               /*1a8: cmp    %eax,%ebp */
0x7d, 0x49,                               /*1aa: jge    1f5 <op_apost+0x1f5> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*1ac: mov    $0x0,%eax */
0x29, 0xe8,                               /*1b1: sub    %ebp,%eax */
0x48, 0x63, 0xd5,                         /*1b3: movslq %ebp,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1b6: mov    $0x0,%ecx */
0xff, 0xc1,                               /*1bb: inc    %ecx */
0x48, 0x63, 0xc9,                         /*1bd: movslq %ecx,%rcx */
0x48, 0x01, 0xd1,                         /*1c0: add    %rdx,%rcx */
0x48, 0xc1, 0xe1, 0x03,                   /*1c3: shl    $0x3,%rcx */
0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*1c7: nopw   0x0(%rax,%rax,1) */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*1d0: mov    0x0(%rip),%rdx        # 1d7 <op_apost+0x1d7> */
0xc7, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, /*1d7: movl   $0x0,(%rdx,%rcx,1) */
0x48, 0x8b, 0x15, 0x00, 0x00, 0x00, 0x00, /*1de: mov    0x0(%rip),%rdx        # 1e5 <op_apost+0x1e5> */
0xc7, 0x44, 0x0a, 0x04, 0x00, 0x40, 0xf0, 0xff,/*1e5: movl   $0xfff04000,0x4(%rdx,%rcx,1) */
0x48, 0x83, 0xc1, 0x08,                   /*1ed: add    $0x8,%rcx */
0xff, 0xc8,                               /*1f1: dec    %eax */
0x75, 0xdb,                               /*1f3: jne    1d0 <op_apost+0x1d0> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*1f5: mov    0x0(%rip),%eax        # 1fb <op_apost+0x1fb> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1fb: mov    0x0(%rip),%rcx        # 202 <op_apost+0x202> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*202: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*208: pop    %rbx */
0x41, 0x5e,                               /*209: pop    %r14 */
0x41, 0x5f,                               /*20b: pop    %r15 */
0x5d,                                     /*20d: pop    %rbp */

};
static uint8_t op_apost__rodata[] = {

};


static uint8_t op_string__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rbx        # a <op_string+0xa> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*a: mov    $0x0,%r14d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rdi        # 17 <op_string+0x17> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*17: mov    0x0(%rip),%rax        # 1e <op_string+0x1e> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1e: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*23: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*27: callq  2c <op_string+0x2c> */
0x4a, 0x89, 0x04, 0xf3,                   /*2c: mov    %rax,(%rbx,%r14,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*30: mov    0x0(%rip),%eax        # 36 <op_string+0x36> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*36: mov    0x0(%rip),%rcx        # 3d <op_string+0x3d> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*3d: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*43: pop    %rbx */
0x41, 0x5e,                               /*44: pop    %r14 */

};
static uint8_t op_string__rodata[] = {

};


static uint8_t op_strcat__text[] = {
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rdi        # 7 <op_strcat+0x7> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rax        # e <op_strcat+0xe> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*13: mov    (%rax,%rcx,8),%rsi */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%ecx */
0x48, 0x8b, 0x14, 0xc8,                   /*1c: mov    (%rax,%rcx,8),%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*20: callq  25 <op_strcat+0x25> */

};
static uint8_t op_strcat__rodata[] = {

};


static uint8_t op_hash__text[] = {
0x41, 0x57,                               /*0: push   %r15 */
0x41, 0x56,                               /*2: push   %r14 */
0x41, 0x54,                               /*4: push   %r12 */
0x53,                                     /*6: push   %rbx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rdi        # e <op_hash+0xe> */
0xbb, 0x00, 0x00, 0x00, 0x00,             /*e: mov    $0x0,%ebx */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*13: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*18: callq  1d <op_hash+0x1d> */
0x49, 0x89, 0xc6,                         /*1d: mov    %rax,%r14 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*20: mov    $0x0,%eax */
0x8d, 0x0c, 0x58,                         /*25: lea    (%rax,%rbx,2),%ecx */
0x39, 0xc8,                               /*28: cmp    %ecx,%eax */
0x7d, 0x4f,                               /*2a: jge    7b <op_hash+0x7b> */
0x48, 0x63, 0xd8,                         /*2c: movslq %eax,%rbx */
0x8d, 0x43, 0x01,                         /*2f: lea    0x1(%rbx),%eax */
0x4c, 0x63, 0xf8,                         /*32: movslq %eax,%r15 */
0x49, 0xc1, 0xe7, 0x03,                   /*35: shl    $0x3,%r15 */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*39: mov    $0x0,%eax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3e: mov    $0x0,%ecx */
0x8d, 0x04, 0x41,                         /*43: lea    (%rcx,%rax,2),%eax */
0x4c, 0x63, 0xe0,                         /*46: movslq %eax,%r12 */
0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*49: nopl   0x0(%rax) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*50: mov    0x0(%rip),%rdi        # 57 <op_hash+0x57> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*57: mov    0x0(%rip),%rax        # 5e <op_hash+0x5e> */
0x48, 0x8b, 0x14, 0xd8,                   /*5e: mov    (%rax,%rbx,8),%rdx */
0x4a, 0x8b, 0x0c, 0x38,                   /*62: mov    (%rax,%r15,1),%rcx */
0x4c, 0x89, 0xf6,                         /*66: mov    %r14,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*69: callq  6e <op_hash+0x6e> */
0x48, 0x83, 0xc3, 0x02,                   /*6e: add    $0x2,%rbx */
0x49, 0x83, 0xc7, 0x10,                   /*72: add    $0x10,%r15 */
0x4c, 0x39, 0xe3,                         /*76: cmp    %r12,%rbx */
0x7c, 0xd5,                               /*79: jl     50 <op_hash+0x50> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*7b: mov    0x0(%rip),%rax        # 82 <op_hash+0x82> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*82: mov    $0x0,%ecx */
0x4c, 0x89, 0x34, 0xc8,                   /*87: mov    %r14,(%rax,%rcx,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*8b: mov    0x0(%rip),%eax        # 91 <op_hash+0x91> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*91: mov    0x0(%rip),%rcx        # 98 <op_hash+0x98> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*98: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*9e: pop    %rbx */
0x41, 0x5c,                               /*9f: pop    %r12 */
0x41, 0x5e,                               /*a1: pop    %r14 */
0x41, 0x5f,                               /*a3: pop    %r15 */

};
static uint8_t op_hash__rodata[] = {

};


static uint8_t op_lambda__text[] = {
0xbf, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*14: callq  19 <op_lambda+0x19> */

};
static uint8_t op_lambda__rodata[] = {

};


static uint8_t op_range__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rbx        # a <op_range+0xa> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*a: mov    $0x0,%r14d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rdi        # 17 <op_range+0x17> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%eax */
0x48, 0x98,                               /*1c: cltq */
0x48, 0x8b, 0x34, 0xc3,                   /*1e: mov    (%rbx,%rax,8),%rsi */
0xff, 0xc0,                               /*22: inc    %eax */
0x48, 0x98,                               /*24: cltq */
0x48, 0x8b, 0x14, 0xc3,                   /*26: mov    (%rbx,%rax,8),%rdx */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*2a: mov    $0x0,%eax */
0x0f, 0xb6, 0xc8,                         /*2f: movzbl %al,%ecx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*32: callq  37 <op_range+0x37> */
0x4a, 0x89, 0x04, 0xf3,                   /*37: mov    %rax,(%rbx,%r14,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*3b: mov    0x0(%rip),%eax        # 41 <op_range+0x41> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*41: mov    0x0(%rip),%rcx        # 48 <op_range+0x48> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*48: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*4e: pop    %rbx */
0x41, 0x5e,                               /*4f: pop    %r14 */

};
static uint8_t op_range__rodata[] = {

};


static uint8_t op_oclass__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_oclass+0x7> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*7: mov    0x0(%rip),%rcx        # e <op_oclass+0xe> */
0x48, 0x8b, 0x51, 0x40,                   /*e: mov    0x40(%rcx),%rdx */
0x8b, 0x0a,                               /*12: mov    (%rdx),%ecx */
0x0f, 0xb6, 0xf1,                         /*14: movzbl %cl,%esi */
0x83, 0xfe, 0x05,                         /*17: cmp    $0x5,%esi */
0x77, 0x05,                               /*1a: ja     21 <op_oclass+0x21> */
0x83, 0xfe, 0x01,                         /*1c: cmp    $0x1,%esi */
0x75, 0x04,                               /*1f: jne    25 <op_oclass+0x25> */
0x48, 0xc1, 0xea, 0x02,                   /*21: shr    $0x2,%rdx */
0xc1, 0xe1, 0x0e,                         /*25: shl    $0xe,%ecx */
0x81, 0xc1, 0x00, 0x40, 0x00, 0x00,       /*28: add    $0x4000,%ecx */
0x81, 0xc9, 0x00, 0x00, 0xf0, 0xff,       /*2e: or     $0xfff00000,%ecx */
0x48, 0xc1, 0xe1, 0x20,                   /*34: shl    $0x20,%rcx */
0x89, 0xd2,                               /*38: mov    %edx,%edx */
0x48, 0x09, 0xca,                         /*3a: or     %rcx,%rdx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*3d: mov    $0x0,%ecx */
0x48, 0x89, 0x14, 0xc8,                   /*42: mov    %rdx,(%rax,%rcx,8) */

};
static uint8_t op_oclass__rodata[] = {

};


static uint8_t op_class__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x41, 0xbe, 0xff, 0xff, 0xff, 0xff,       /*3: mov    $0xffffffff,%r14d */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*9: mov    0x0(%rip),%rax        # 10 <op_class+0x10> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*10: mov    $0x0,%ecx */
0x8b, 0x0c, 0x88,                         /*15: mov    (%rax,%rcx,4),%ecx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rax        # 1f <op_class+0x1f> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*24: movslq %edx,%rdx */
0x48, 0x8b, 0x34, 0xd0,                   /*27: mov    (%rax,%rdx,8),%rsi */
0xff, 0xc2,                               /*2b: inc    %edx */
0x48, 0x63, 0xd2,                         /*2d: movslq %edx,%rdx */
0x48, 0x8b, 0x14, 0xd0,                   /*30: mov    (%rax,%rdx,8),%rdx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*34: mov    0x0(%rip),%rdi        # 3b <op_class+0x3b> */
0x85, 0xf6,                               /*3b: test   %esi,%esi */
0x75, 0x50,                               /*3d: jne    8f <op_class+0x8f> */
0x48, 0x89, 0xf0,                         /*3f: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*42: shr    $0x20,%rax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*46: cmp    $0xfff00001,%eax */
0x72, 0x42,                               /*4b: jb     8f <op_class+0x8f> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*4d: and    $0xfc000,%eax */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*52: cmp    $0x4000,%eax */
0x75, 0x36,                               /*57: jne    8f <op_class+0x8f> */
0x48, 0x8b, 0x47, 0x18,                   /*59: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*5d: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*61: mov    0x48(%rax),%rsi */
0x8b, 0x06,                               /*65: mov    (%rsi),%eax */
0x0f, 0xb6, 0xd8,                         /*67: movzbl %al,%ebx */
0x83, 0xfb, 0x05,                         /*6a: cmp    $0x5,%ebx */
0x77, 0x05,                               /*6d: ja     74 <op_class+0x74> */
0x83, 0xfb, 0x01,                         /*6f: cmp    $0x1,%ebx */
0x75, 0x04,                               /*72: jne    78 <op_class+0x78> */
0x48, 0xc1, 0xee, 0x02,                   /*74: shr    $0x2,%rsi */
0xc1, 0xe0, 0x0e,                         /*78: shl    $0xe,%eax */
0x05, 0x00, 0x40, 0x00, 0x00,             /*7b: add    $0x4000,%eax */
0x0d, 0x00, 0x00, 0xf0, 0xff,             /*80: or     $0xfff00000,%eax */
0x48, 0xc1, 0xe0, 0x20,                   /*85: shl    $0x20,%rax */
0x4c, 0x21, 0xf6,                         /*89: and    %r14,%rsi */
0x48, 0x09, 0xc6,                         /*8c: or     %rax,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*8f: callq  94 <op_class+0x94> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*94: mov    0x0(%rip),%rcx        # 9b <op_class+0x9b> */
0x8b, 0x10,                               /*9b: mov    (%rax),%edx */
0x0f, 0xb6, 0xf2,                         /*9d: movzbl %dl,%esi */
0x83, 0xfe, 0x05,                         /*a0: cmp    $0x5,%esi */
0x77, 0x05,                               /*a3: ja     aa <op_class+0xaa> */
0x83, 0xfe, 0x01,                         /*a5: cmp    $0x1,%esi */
0x75, 0x04,                               /*a8: jne    ae <op_class+0xae> */
0x48, 0xc1, 0xe8, 0x02,                   /*aa: shr    $0x2,%rax */
0xc1, 0xe2, 0x0e,                         /*ae: shl    $0xe,%edx */
0x81, 0xc2, 0x00, 0x40, 0x00, 0x00,       /*b1: add    $0x4000,%edx */
0x81, 0xca, 0x00, 0x00, 0xf0, 0xff,       /*b7: or     $0xfff00000,%edx */
0x48, 0xc1, 0xe2, 0x20,                   /*bd: shl    $0x20,%rdx */
0x4c, 0x21, 0xf0,                         /*c1: and    %r14,%rax */
0x48, 0x09, 0xd0,                         /*c4: or     %rdx,%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*c7: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*cc: movslq %edx,%rdx */
0x48, 0x89, 0x04, 0xd1,                   /*cf: mov    %rax,(%rcx,%rdx,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*d3: mov    0x0(%rip),%eax        # d9 <op_class+0xd9> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*d9: mov    0x0(%rip),%rcx        # e0 <op_class+0xe0> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*e0: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*e6: pop    %rbx */
0x41, 0x5e,                               /*e7: pop    %r14 */

};
static uint8_t op_class__rodata[] = {

};


static uint8_t op_module__text[] = {
0x53,                                     /*0: push   %rbx */
0xbb, 0xff, 0xff, 0xff, 0xff,             /*1: mov    $0xffffffff,%ebx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*6: mov    0x0(%rip),%rax        # d <op_module+0xd> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*d: mov    $0x0,%ecx */
0x8b, 0x14, 0x88,                         /*12: mov    (%rax,%rcx,4),%edx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*15: mov    0x0(%rip),%rax        # 1c <op_module+0x1c> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1c: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*21: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*24: mov    (%rax,%rcx,8),%rsi */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*28: mov    0x0(%rip),%rdi        # 2f <op_module+0x2f> */
0x85, 0xf6,                               /*2f: test   %esi,%esi */
0x75, 0x50,                               /*31: jne    83 <op_module+0x83> */
0x48, 0x89, 0xf0,                         /*33: mov    %rsi,%rax */
0x48, 0xc1, 0xe8, 0x20,                   /*36: shr    $0x20,%rax */
0x3d, 0x01, 0x00, 0xf0, 0xff,             /*3a: cmp    $0xfff00001,%eax */
0x72, 0x42,                               /*3f: jb     83 <op_module+0x83> */
0x25, 0x00, 0xc0, 0x0f, 0x00,             /*41: and    $0xfc000,%eax */
0x3d, 0x00, 0x40, 0x00, 0x00,             /*46: cmp    $0x4000,%eax */
0x75, 0x36,                               /*4b: jne    83 <op_module+0x83> */
0x48, 0x8b, 0x47, 0x18,                   /*4d: mov    0x18(%rdi),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*51: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x70, 0x48,                   /*55: mov    0x48(%rax),%rsi */
0x8b, 0x06,                               /*59: mov    (%rsi),%eax */
0x0f, 0xb6, 0xc8,                         /*5b: movzbl %al,%ecx */
0x83, 0xf9, 0x05,                         /*5e: cmp    $0x5,%ecx */
0x77, 0x05,                               /*61: ja     68 <op_module+0x68> */
0x83, 0xf9, 0x01,                         /*63: cmp    $0x1,%ecx */
0x75, 0x04,                               /*66: jne    6c <op_module+0x6c> */
0x48, 0xc1, 0xee, 0x02,                   /*68: shr    $0x2,%rsi */
0xc1, 0xe0, 0x0e,                         /*6c: shl    $0xe,%eax */
0x05, 0x00, 0x40, 0x00, 0x00,             /*6f: add    $0x4000,%eax */
0x0d, 0x00, 0x00, 0xf0, 0xff,             /*74: or     $0xfff00000,%eax */
0x48, 0xc1, 0xe0, 0x20,                   /*79: shl    $0x20,%rax */
0x48, 0x21, 0xde,                         /*7d: and    %rbx,%rsi */
0x48, 0x09, 0xc6,                         /*80: or     %rax,%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*83: callq  88 <op_module+0x88> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*88: mov    0x0(%rip),%rcx        # 8f <op_module+0x8f> */
0x8b, 0x10,                               /*8f: mov    (%rax),%edx */
0x0f, 0xb6, 0xf2,                         /*91: movzbl %dl,%esi */
0x83, 0xfe, 0x05,                         /*94: cmp    $0x5,%esi */
0x77, 0x05,                               /*97: ja     9e <op_module+0x9e> */
0x83, 0xfe, 0x01,                         /*99: cmp    $0x1,%esi */
0x75, 0x04,                               /*9c: jne    a2 <op_module+0xa2> */
0x48, 0xc1, 0xe8, 0x02,                   /*9e: shr    $0x2,%rax */
0xc1, 0xe2, 0x0e,                         /*a2: shl    $0xe,%edx */
0x81, 0xc2, 0x00, 0x40, 0x00, 0x00,       /*a5: add    $0x4000,%edx */
0x81, 0xca, 0x00, 0x00, 0xf0, 0xff,       /*ab: or     $0xfff00000,%edx */
0x48, 0xc1, 0xe2, 0x20,                   /*b1: shl    $0x20,%rdx */
0x48, 0x21, 0xd8,                         /*b5: and    %rbx,%rax */
0x48, 0x09, 0xd0,                         /*b8: or     %rdx,%rax */
0xba, 0x00, 0x00, 0x00, 0x00,             /*bb: mov    $0x0,%edx */
0x48, 0x63, 0xd2,                         /*c0: movslq %edx,%rdx */
0x48, 0x89, 0x04, 0xd1,                   /*c3: mov    %rax,(%rcx,%rdx,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*c7: mov    0x0(%rip),%eax        # cd <op_module+0xcd> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*cd: mov    0x0(%rip),%rcx        # d4 <op_module+0xd4> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*d4: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*da: pop    %rbx */

};
static uint8_t op_module__rodata[] = {

};


static uint8_t op_exec__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x57,                               /*e: push   %r15 */
0x41, 0x56,                               /*10: push   %r14 */
0x53,                                     /*12: push   %rbx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*13: mov    0x0(%rip),%rax        # 1a <op_exec+0x1a> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1a: mov    $0x0,%ecx */
0x4c, 0x63, 0xf9,                         /*1f: movslq %ecx,%r15 */
0x4e, 0x8b, 0x34, 0xf8,                   /*22: mov    (%rax,%r15,8),%r14 */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*26: mov    0x0(%rip),%rdi        # 2d <op_exec+0x2d> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2d: callq  32 <op_exec+0x32> */
0x48, 0x89, 0xc3,                         /*32: mov    %rax,%rbx */
0x48, 0xc7, 0x43, 0x30, 0x00, 0x00, 0x00, 0x00,/*35: movq   $0x0,0x30(%rbx) */
0x4a, 0x8d, 0x04, 0xfd, 0x00, 0x00, 0x00, 0x00,/*3d: lea    0x0(,%r15,8),%rax */
0x44, 0x89, 0x7b, 0x44,                   /*45: mov    %r15d,0x44(%rbx) */
0xc7, 0x03, 0x00, 0x00, 0x00, 0x00,       /*49: movl   $0x0,(%rbx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*4f: mov    0x0(%rip),%rcx        # 56 <op_exec+0x56> */
0x48, 0x8b, 0x49, 0x18,                   /*56: mov    0x18(%rcx),%rcx */
0x48, 0x8b, 0x49, 0x08,                   /*5a: mov    0x8(%rcx),%rcx */
0x48, 0x89, 0x4b, 0x10,                   /*5e: mov    %rcx,0x10(%rbx) */
0xc7, 0x43, 0x40, 0x00, 0x00, 0x00, 0x00, /*62: movl   $0x0,0x40(%rbx) */
0x4a, 0x8d, 0x0c, 0xb5, 0x00, 0x00, 0x00, 0x00,/*69: lea    0x0(,%r14,4),%rcx */
0x48, 0xba, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*71: movabs $0xfffffffffffc,%rdx */
0x48, 0x21, 0xca,                         /*7b: and    %rcx,%rdx */
0x48, 0x89, 0x53, 0x48,                   /*7e: mov    %rdx,0x48(%rbx) */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*82: mov    0x0(%rip),%rcx        # 89 <op_exec+0x89> */
0x48, 0x8b, 0x49, 0x18,                   /*89: mov    0x18(%rcx),%rcx */
0x48, 0x01, 0x41, 0x08,                   /*8d: add    %rax,0x8(%rcx) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*91: mov    0x0(%rip),%rdi        # 98 <op_exec+0x98> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*98: mov    0x0(%rip),%rax        # 9f <op_exec+0x9f> */
0x48, 0x8b, 0x40, 0x20,                   /*9f: mov    0x20(%rax),%rax */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*a3: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*a8: mov    (%rax,%rcx,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*ac: callq  b1 <op_exec+0xb1> */
0x48, 0x8b, 0x4b, 0x48,                   /*b1: mov    0x48(%rbx),%rcx */
0x48, 0x89, 0x48, 0x20,                   /*b5: mov    %rcx,0x20(%rax) */
0x48, 0x89, 0x43, 0x08,                   /*b9: mov    %rax,0x8(%rbx) */
0xf6, 0x40, 0x02, 0x04,                   /*bd: testb  $0x4,0x2(%rax) */
0x0f, 0x84, 0x9c, 0x00, 0x00, 0x00,       /*c1: je     163 <op_exec+0x163> */
0xc7, 0x43, 0x18, 0x00, 0x00, 0x00, 0x00, /*c7: movl   $0x0,0x18(%rbx) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*ce: mov    0x0(%rip),%rdi        # d5 <op_exec+0xd5> */
0x48, 0x8b, 0x4f, 0x18,                   /*d5: mov    0x18(%rdi),%rcx */
0x48, 0x8b, 0x59, 0x08,                   /*d9: mov    0x8(%rcx),%rbx */
0x4c, 0x89, 0xf6,                         /*dd: mov    %r14,%rsi */
0xff, 0x50, 0x18,                         /*e0: callq  *0x18(%rax) */
0x48, 0x89, 0x03,                         /*e3: mov    %rax,(%rbx) */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*e6: mov    0x0(%rip),%rdi        # ed <op_exec+0xed> */
0x8b, 0x35, 0x00, 0x00, 0x00, 0x00,       /*ed: mov    0x0(%rip),%esi        # f3 <op_exec+0xf3> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*f3: callq  f8 <op_exec+0xf8> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*f8: mov    0x0(%rip),%rax        # ff <op_exec+0xff> */
0x48, 0x83, 0x78, 0x28, 0x00,             /*ff: cmpq   $0x0,0x28(%rax) */
0x74, 0x30,                               /*104: je     136 <op_exec+0x136> */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*106: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*10b: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*110: callq  115 <op_exec+0x115> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*115: mov    0x0(%rip),%rdi        # 11c <op_exec+0x11c> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*11c: mov    0x0(%rip),%rsi        # 123 <op_exec+0x123> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*123: mov    0x0(%rip),%rcx        # 12a <op_exec+0x12a> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*12a: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*12f: jmpq   134 <op_exec+0x134> */
0xeb, 0x23,                               /*134: jmp    159 <op_exec+0x159> */
0x48, 0x8b, 0x40, 0x18,                   /*136: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x48, 0x20,                   /*13a: mov    0x20(%rax),%rcx */
0x48, 0x8b, 0x49, 0x10,                   /*13e: mov    0x10(%rcx),%rcx */
0x48, 0x89, 0x48, 0x08,                   /*142: mov    %rcx,0x8(%rax) */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*146: mov    %rcx,0x0(%rip)        # 14d <op_exec+0x14d> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*14d: mov    0x0(%rip),%rdi        # 154 <op_exec+0x154> */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*154: callq  159 <op_exec+0x159> */
0x5b,                                     /*159: pop    %rbx */
0x41, 0x5e,                               /*15a: pop    %r14 */
0x41, 0x5f,                               /*15c: pop    %r15 */
0xe9, 0xa6, 0x00, 0x00, 0x00,             /*15e: jmpq   209 <op_exec+0x209> */
0x48, 0x8b, 0x40, 0x18,                   /*163: mov    0x18(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*167: mov    %rax,0x0(%rip)        # 16e <op_exec+0x16e> */
0x48, 0x8b, 0x48, 0x10,                   /*16e: mov    0x10(%rax),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*172: mov    %rcx,0x0(%rip)        # 179 <op_exec+0x179> */
0x48, 0x8b, 0x48, 0x18,                   /*179: mov    0x18(%rax),%rcx */
0x48, 0x89, 0x0d, 0x00, 0x00, 0x00, 0x00, /*17d: mov    %rcx,0x0(%rip)        # 184 <op_exec+0x184> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*184: mov    0x0(%rip),%rdi        # 18b <op_exec+0x18b> */
0x0f, 0xb7, 0x70, 0x02,                   /*18b: movzwl 0x2(%rax),%esi */
0xba, 0x01, 0x00, 0x00, 0x00,             /*18f: mov    $0x1,%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*194: callq  199 <op_exec+0x199> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*199: mov    0x0(%rip),%rax        # 1a0 <op_exec+0x1a0> */
0x0f, 0xb7, 0x40, 0x02,                   /*1a0: movzwl 0x2(%rax),%eax */
0x89, 0x43, 0x18,                         /*1a4: mov    %eax,0x18(%rbx) */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1a7: mov    0x0(%rip),%rax        # 1ae <op_exec+0x1ae> */
0x48, 0x8b, 0x40, 0x18,                   /*1ae: mov    0x18(%rax),%rax */
0x48, 0x8b, 0x40, 0x08,                   /*1b2: mov    0x8(%rax),%rax */
0x48, 0x89, 0x05, 0x00, 0x00, 0x00, 0x00, /*1b6: mov    %rax,0x0(%rip)        # 1bd <op_exec+0x1bd> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*1bd: mov    0x0(%rip),%rax        # 1c4 <op_exec+0x1c4> */
0x48, 0x8b, 0x50, 0x08,                   /*1c4: mov    0x8(%rax),%rdx */
0x48, 0x89, 0x15, 0x00, 0x00, 0x00, 0x00, /*1c8: mov    %rdx,0x0(%rip)        # 1cf <op_exec+0x1cf> */
0x48, 0x8b, 0x4b, 0x30,                   /*1cf: mov    0x30(%rbx),%rcx */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*1d3: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*1d8: mov    $0x0,%esi */
0x41, 0xb8, 0x00, 0x00, 0x00, 0x00,       /*1dd: mov    $0x0,%r8d */
0x31, 0xc0,                               /*1e3: xor    %eax,%eax */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*1e5: callq  1ea <op_exec+0x1ea> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*1ea: mov    0x0(%rip),%rdi        # 1f1 <op_exec+0x1f1> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*1f1: mov    0x0(%rip),%rsi        # 1f8 <op_exec+0x1f8> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*1f8: mov    0x0(%rip),%rcx        # 1ff <op_exec+0x1ff> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*1ff: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*204: jmpq   209 <op_exec+0x209> */

};
static uint8_t op_exec__rodata[] = {

};


static uint8_t op_method__text[] = {
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*0: mov    0x0(%rip),%rax        # 7 <op_method+0x7> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*7: mov    $0x0,%ecx */
0x48, 0x63, 0xc9,                         /*c: movslq %ecx,%rcx */
0x48, 0x8b, 0x34, 0xc8,                   /*f: mov    (%rax,%rcx,8),%rsi */
0x48, 0xc1, 0xe6, 0x02,                   /*13: shl    $0x2,%rsi */
0x48, 0xba, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*17: movabs $0xfffffffffffc,%rdx */
0x48, 0x21, 0xd6,                         /*21: and    %rdx,%rsi */
0xff, 0xc1,                               /*24: inc    %ecx */
0x48, 0x63, 0xc9,                         /*26: movslq %ecx,%rcx */
0x48, 0x8b, 0x0c, 0xc8,                   /*29: mov    (%rax,%rcx,8),%rcx */
0x48, 0xc1, 0xe1, 0x02,                   /*2d: shl    $0x2,%rcx */
0x48, 0x21, 0xd1,                         /*31: and    %rdx,%rcx */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*34: mov    0x0(%rip),%rdi        # 3b <op_method+0x3b> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*3b: mov    0x0(%rip),%rax        # 42 <op_method+0x42> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*42: mov    $0x0,%edx */
0x8b, 0x14, 0x90,                         /*47: mov    (%rax,%rdx,4),%edx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*4a: callq  4f <op_method+0x4f> */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*4f: mov    0x0(%rip),%eax        # 55 <op_method+0x55> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*55: mov    0x0(%rip),%rcx        # 5c <op_method+0x5c> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*5c: mov    %eax,0xdc(%rcx) */

};
static uint8_t op_method__rodata[] = {

};


static uint8_t op_sclass__text[] = {
0x41, 0x56,                               /*0: push   %r14 */
0x53,                                     /*2: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*3: mov    0x0(%rip),%rbx        # a <op_sclass+0xa> */
0x41, 0xbe, 0x00, 0x00, 0x00, 0x00,       /*a: mov    $0x0,%r14d */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*10: mov    0x0(%rip),%rdi        # 17 <op_sclass+0x17> */
0xb8, 0x00, 0x00, 0x00, 0x00,             /*17: mov    $0x0,%eax */
0x48, 0x8b, 0x34, 0xc3,                   /*1c: mov    (%rbx,%rax,8),%rsi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*20: callq  25 <op_sclass+0x25> */
0x4a, 0x89, 0x04, 0xf3,                   /*25: mov    %rax,(%rbx,%r14,8) */
0x8b, 0x05, 0x00, 0x00, 0x00, 0x00,       /*29: mov    0x0(%rip),%eax        # 2f <op_sclass+0x2f> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*2f: mov    0x0(%rip),%rcx        # 36 <op_sclass+0x36> */
0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*36: mov    %eax,0xdc(%rcx) */
0x5b,                                     /*3c: pop    %rbx */
0x41, 0x5e,                               /*3d: pop    %r14 */

};
static uint8_t op_sclass__rodata[] = {

};


static uint8_t op_tclass__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x56,                               /*e: push   %r14 */
0x53,                                     /*10: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*11: mov    0x0(%rip),%rbx        # 18 <op_tclass+0x18> */
0x48, 0x8b, 0x43, 0x18,                   /*18: mov    0x18(%rbx),%rax */
0x48, 0x8b, 0x40, 0x20,                   /*1c: mov    0x20(%rax),%rax */
0x48, 0x8b, 0x48, 0x48,                   /*20: mov    0x48(%rax),%rcx */
0x48, 0x85, 0xc9,                         /*24: test   %rcx,%rcx */
0x74, 0x3d,                               /*27: je     66 <op_tclass+0x66> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*29: mov    0x0(%rip),%rax        # 30 <op_tclass+0x30> */
0x8b, 0x11,                               /*30: mov    (%rcx),%edx */
0x0f, 0xb6, 0xf2,                         /*32: movzbl %dl,%esi */
0x83, 0xfe, 0x05,                         /*35: cmp    $0x5,%esi */
0x77, 0x05,                               /*38: ja     3f <op_tclass+0x3f> */
0x83, 0xfe, 0x01,                         /*3a: cmp    $0x1,%esi */
0x75, 0x04,                               /*3d: jne    43 <op_tclass+0x43> */
0x48, 0xc1, 0xe9, 0x02,                   /*3f: shr    $0x2,%rcx */
0xc1, 0xe2, 0x0e,                         /*43: shl    $0xe,%edx */
0x81, 0xc2, 0x00, 0x40, 0x00, 0x00,       /*46: add    $0x4000,%edx */
0x81, 0xca, 0x00, 0x00, 0xf0, 0xff,       /*4c: or     $0xfff00000,%edx */
0x48, 0xc1, 0xe2, 0x20,                   /*52: shl    $0x20,%rdx */
0x89, 0xc9,                               /*56: mov    %ecx,%ecx */
0x48, 0x09, 0xd1,                         /*58: or     %rdx,%rcx */
0xba, 0x00, 0x00, 0x00, 0x00,             /*5b: mov    $0x0,%edx */
0x48, 0x89, 0x0c, 0xd0,                   /*60: mov    %rcx,(%rax,%rdx,8) */
0xeb, 0x7a,                               /*64: jmp    e0 <op_tclass+0xe0> */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*66: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*6b: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*6e: callq  73 <op_tclass+0x73> */
0x49, 0x89, 0xc6,                         /*73: mov    %rax,%r14 */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*76: mov    $0x0,%esi */
0xba, 0x19, 0x00, 0x00, 0x00,             /*7b: mov    $0x19,%edx */
0x48, 0x89, 0xdf,                         /*80: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*83: callq  88 <op_tclass+0x88> */
0x48, 0x89, 0xdf,                         /*88: mov    %rbx,%rdi */
0x4c, 0x89, 0xf6,                         /*8b: mov    %r14,%rsi */
0x48, 0x89, 0xc2,                         /*8e: mov    %rax,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*91: callq  96 <op_tclass+0x96> */
0x48, 0xc1, 0xe0, 0x02,                   /*96: shl    $0x2,%rax */
0x48, 0xb9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*9a: movabs $0xfffffffffffc,%rcx */
0x48, 0x21, 0xc1,                         /*a4: and    %rax,%rcx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*a7: mov    0x0(%rip),%rax        # ae <op_tclass+0xae> */
0x48, 0x89, 0x48, 0x28,                   /*ae: mov    %rcx,0x28(%rax) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*b2: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*b7: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*bc: callq  c1 <op_tclass+0xc1> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*c1: mov    0x0(%rip),%rdi        # c8 <op_tclass+0xc8> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*c8: mov    0x0(%rip),%rsi        # cf <op_tclass+0xcf> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*cf: mov    0x0(%rip),%rcx        # d6 <op_tclass+0xd6> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*d6: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*db: jmpq   e0 <op_tclass+0xe0> */
0x5b,                                     /*e0: pop    %rbx */
0x41, 0x5e,                               /*e1: pop    %r14 */

};
static uint8_t op_tclass__rodata[] = {

};


static uint8_t op_debug__text[] = {
0xbf, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*5: mov    $0x0,%esi */
0xba, 0x00, 0x00, 0x00, 0x00,             /*a: mov    $0x0,%edx */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*f: mov    $0x0,%ecx */
0x31, 0xc0,                               /*14: xor    %eax,%eax */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*16: callq  1b <op_debug+0x1b> */

};
static uint8_t op_debug__rodata[] = {

};


static uint8_t op_stop__text[] = {
0xbf, 0x00, 0x00, 0x00, 0x00,             /*0: mov    $0x0,%edi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*5: callq  a <op_stop+0xa> */

};
static uint8_t op_stop__rodata[] = {

};


static uint8_t op_err__text[] = {
0x48, 0x81, 0xc4, 0xff, 0x01, 0x00, 0x00, /*0: add    $0x1ff,%rsp */
0x48, 0x81, 0xe4, 0x00, 0xfe, 0xff, 0xff, /*7: and    $0xfffffffffffffe00,%rsp */
0x41, 0x56,                               /*e: push   %r14 */
0x53,                                     /*10: push   %rbx */
0x48, 0x8b, 0x1d, 0x00, 0x00, 0x00, 0x00, /*11: mov    0x0(%rip),%rbx        # 18 <op_err+0x18> */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*18: mov    0x0(%rip),%rax        # 1f <op_err+0x1f> */
0xb9, 0x00, 0x00, 0x00, 0x00,             /*1f: mov    $0x0,%ecx */
0x48, 0x8b, 0x34, 0xc8,                   /*24: mov    (%rax,%rcx,8),%rsi */
0x48, 0x89, 0xdf,                         /*28: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*2b: callq  30 <op_err+0x30> */
0x49, 0x89, 0xc6,                         /*30: mov    %rax,%r14 */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*33: mov    $0x0,%esi */
0x48, 0x89, 0xdf,                         /*38: mov    %rbx,%rdi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*3b: callq  40 <op_err+0x40> */
0x48, 0x89, 0xdf,                         /*40: mov    %rbx,%rdi */
0x48, 0x89, 0xc6,                         /*43: mov    %rax,%rsi */
0x4c, 0x89, 0xf2,                         /*46: mov    %r14,%rdx */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*49: callq  4e <op_err+0x4e> */
0x48, 0xc1, 0xe0, 0x02,                   /*4e: shl    $0x2,%rax */
0x48, 0xb9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,/*52: movabs $0xfffffffffffc,%rcx */
0x48, 0x21, 0xc1,                         /*5c: and    %rax,%rcx */
0x48, 0x8b, 0x05, 0x00, 0x00, 0x00, 0x00, /*5f: mov    0x0(%rip),%rax        # 66 <op_err+0x66> */
0x48, 0x89, 0x48, 0x28,                   /*66: mov    %rcx,0x28(%rax) */
0xbf, 0x00, 0x00, 0x00, 0x00,             /*6a: mov    $0x0,%edi */
0xbe, 0x00, 0x00, 0x00, 0x00,             /*6f: mov    $0x0,%esi */
0xe8, 0x00, 0x00, 0x00, 0x00,             /*74: callq  79 <op_err+0x79> */
0x48, 0x8b, 0x3d, 0x00, 0x00, 0x00, 0x00, /*79: mov    0x0(%rip),%rdi        # 80 <op_err+0x80> */
0x48, 0x8b, 0x35, 0x00, 0x00, 0x00, 0x00, /*80: mov    0x0(%rip),%rsi        # 87 <op_err+0x87> */
0x48, 0x8b, 0x0d, 0x00, 0x00, 0x00, 0x00, /*87: mov    0x0(%rip),%rcx        # 8e <op_err+0x8e> */
0xba, 0x00, 0x00, 0x00, 0x00,             /*8e: mov    $0x0,%edx */
0xe9, 0x00, 0x00, 0x00, 0x00,             /*93: jmpq   98 <op_err+0x98> */
0x5b,                                     /*98: pop    %rbx */
0x41, 0x5e,                               /*99: pop    %r14 */

};
static uint8_t op_err__rodata[] = {

};

typedef void (*jit_link_func_t)(uint8_t *text, uint8_t *rodata, mrb_code *pc);
extern jit_link_func_t link_funcs[];
const uint8_t* ops_text[78];
const uint8_t* ops_rodata[78];
const char *op_names[78];

static size_t op_sizes_text[] = {
  sizeof(op_nop__text), /* 0 */
  sizeof(op_move__text), /* 27 */
  sizeof(op_loadl__text), /* 34 */
  sizeof(op_loadi__text), /* 35 */
  sizeof(op_loadsym__text), /* 45 */
  sizeof(op_loadnil__text), /* 34 */
  sizeof(op_loadself__text), /* 21 */
  sizeof(op_loadt__text), /* 34 */
  sizeof(op_loadf__text), /* 34 */
  sizeof(op_getglobal__text), /* 50 */
  sizeof(op_setglobal__text), /* 43 */
  sizeof(op_getspecial__text), /* 40 */
  sizeof(op_setspecial__text), /* 33 */
  sizeof(op_getiv__text), /* 50 */
  sizeof(op_setiv__text), /* 43 */
  sizeof(op_getcv__text), /* 96 */
  sizeof(op_setcv__text), /* 43 */
  sizeof(op_getconst__text), /* 104 */
  sizeof(op_setconst__text), /* 43 */
  sizeof(op_getmcnst__text), /* 120 */
  sizeof(op_setmcnst__text), /* 56 */
  sizeof(op_getupvar__text), /* 117 */
  sizeof(op_setupvar__text), /* 116 */
  sizeof(op_jmp__text), /* 0 */
  sizeof(op_jmpif__text), /* 33 */
  sizeof(op_jmpnot__text), /* 33 */
  sizeof(op_onerr__text), /* 143 */
  sizeof(op_rescue__text), /* 153 */
  sizeof(op_poperr__text), /* 38 */
  sizeof(op_raise__text), /* 104 */
  sizeof(op_epush__text), /* 186 */
  sizeof(op_epop__text), /* 102 */
  sizeof(op_send__text), /* 82 */
  sizeof(op_sendb__text), /* 82 */
  sizeof(op_fsend__text), /* 0 */
  sizeof(op_call__text), /* 579 */
  sizeof(op_super__text), /* 974 */
  sizeof(op_argary__text), /* 831 */
  sizeof(op_enter__text), /* 2258 */
  sizeof(op_enter_method_m__text), /* 548 */
  sizeof(op_karg__text), /* 0 */
  sizeof(op_kdict__text), /* 0 */
  sizeof(op_return__text), /* 85 */
  sizeof(op_break__text), /* 88 */
  sizeof(op_tailcall__text), /* 943 */
  sizeof(op_blkpush__text), /* 254 */
  sizeof(op_add__text), /* 515 */
  sizeof(op_addi__text), /* 280 */
  sizeof(op_sub__text), /* 428 */
  sizeof(op_subi__text), /* 286 */
  sizeof(op_mul__text), /* 491 */
  sizeof(op_div__text), /* 441 */
  sizeof(op_eq__text), /* 420 */
  sizeof(op_lt__text), /* 378 */
  sizeof(op_le__text), /* 378 */
  sizeof(op_gt__text), /* 371 */
  sizeof(op_ge__text), /* 371 */
  sizeof(op_array__text), /* 68 */
  sizeof(op_arycat__text), /* 76 */
  sizeof(op_arypush__text), /* 37 */
  sizeof(op_aref__text), /* 126 */
  sizeof(op_aset__text), /* 42 */
  sizeof(op_apost__text), /* 526 */
  sizeof(op_string__text), /* 70 */
  sizeof(op_strcat__text), /* 37 */
  sizeof(op_hash__text), /* 165 */
  sizeof(op_lambda__text), /* 25 */
  sizeof(op_range__text), /* 81 */
  sizeof(op_oclass__text), /* 70 */
  sizeof(op_class__text), /* 233 */
  sizeof(op_module__text), /* 219 */
  sizeof(op_exec__text), /* 521 */
  sizeof(op_method__text), /* 98 */
  sizeof(op_sclass__text), /* 63 */
  sizeof(op_tclass__text), /* 227 */
  sizeof(op_debug__text), /* 27 */
  sizeof(op_stop__text), /* 10 */
  sizeof(op_err__text), /* 155 */

};
static size_t op_sizes_rodata[] = {
  sizeof(op_nop__rodata), /* 0 */
  sizeof(op_move__rodata), /* 0 */
  sizeof(op_loadl__rodata), /* 0 */
  sizeof(op_loadi__rodata), /* 0 */
  sizeof(op_loadsym__rodata), /* 0 */
  sizeof(op_loadnil__rodata), /* 0 */
  sizeof(op_loadself__rodata), /* 0 */
  sizeof(op_loadt__rodata), /* 0 */
  sizeof(op_loadf__rodata), /* 0 */
  sizeof(op_getglobal__rodata), /* 0 */
  sizeof(op_setglobal__rodata), /* 0 */
  sizeof(op_getspecial__rodata), /* 0 */
  sizeof(op_setspecial__rodata), /* 0 */
  sizeof(op_getiv__rodata), /* 0 */
  sizeof(op_setiv__rodata), /* 0 */
  sizeof(op_getcv__rodata), /* 0 */
  sizeof(op_setcv__rodata), /* 0 */
  sizeof(op_getconst__rodata), /* 0 */
  sizeof(op_setconst__rodata), /* 0 */
  sizeof(op_getmcnst__rodata), /* 0 */
  sizeof(op_setmcnst__rodata), /* 0 */
  sizeof(op_getupvar__rodata), /* 0 */
  sizeof(op_setupvar__rodata), /* 0 */
  sizeof(op_jmp__rodata), /* 0 */
  sizeof(op_jmpif__rodata), /* 0 */
  sizeof(op_jmpnot__rodata), /* 0 */
  sizeof(op_onerr__rodata), /* 0 */
  sizeof(op_rescue__rodata), /* 0 */
  sizeof(op_poperr__rodata), /* 0 */
  sizeof(op_raise__rodata), /* 0 */
  sizeof(op_epush__rodata), /* 0 */
  sizeof(op_epop__rodata), /* 0 */
  sizeof(op_send__rodata), /* 0 */
  sizeof(op_sendb__rodata), /* 0 */
  sizeof(op_fsend__rodata), /* 0 */
  sizeof(op_call__rodata), /* 0 */
  sizeof(op_super__rodata), /* 0 */
  sizeof(op_argary__rodata), /* 0 */
  sizeof(op_enter__rodata), /* 0 */
  sizeof(op_enter_method_m__rodata), /* 0 */
  sizeof(op_karg__rodata), /* 0 */
  sizeof(op_kdict__rodata), /* 0 */
  sizeof(op_return__rodata), /* 0 */
  sizeof(op_break__rodata), /* 0 */
  sizeof(op_tailcall__rodata), /* 64 */
  sizeof(op_blkpush__rodata), /* 0 */
  sizeof(op_add__rodata), /* 0 */
  sizeof(op_addi__rodata), /* 0 */
  sizeof(op_sub__rodata), /* 0 */
  sizeof(op_subi__rodata), /* 0 */
  sizeof(op_mul__rodata), /* 0 */
  sizeof(op_div__rodata), /* 0 */
  sizeof(op_eq__rodata), /* 0 */
  sizeof(op_lt__rodata), /* 0 */
  sizeof(op_le__rodata), /* 0 */
  sizeof(op_gt__rodata), /* 0 */
  sizeof(op_ge__rodata), /* 0 */
  sizeof(op_array__rodata), /* 0 */
  sizeof(op_arycat__rodata), /* 0 */
  sizeof(op_arypush__rodata), /* 0 */
  sizeof(op_aref__rodata), /* 0 */
  sizeof(op_aset__rodata), /* 0 */
  sizeof(op_apost__rodata), /* 0 */
  sizeof(op_string__rodata), /* 0 */
  sizeof(op_strcat__rodata), /* 0 */
  sizeof(op_hash__rodata), /* 0 */
  sizeof(op_lambda__rodata), /* 0 */
  sizeof(op_range__rodata), /* 0 */
  sizeof(op_oclass__rodata), /* 0 */
  sizeof(op_class__rodata), /* 0 */
  sizeof(op_module__rodata), /* 0 */
  sizeof(op_exec__rodata), /* 0 */
  sizeof(op_method__rodata), /* 0 */
  sizeof(op_sclass__rodata), /* 0 */
  sizeof(op_tclass__rodata), /* 0 */
  sizeof(op_debug__rodata), /* 0 */
  sizeof(op_stop__rodata), /* 0 */
  sizeof(op_err__rodata), /* 0 */

};
static int8_t op_algn_text[] = {
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,

};
static int8_t op_algn_rodata[] = {
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  8,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,
  -1,

};

extern void init_linker();
void init_ops() {
  static int init = 0;
  if(init == 0) {
    init = 1;
    init_linker();
    ops_text[0] = op_nop__text;
    ops_rodata[0] = op_nop__rodata;
    op_names[0] = "op_nop";
    ops_text[1] = op_move__text;
    ops_rodata[1] = op_move__rodata;
    op_names[1] = "op_move";
    ops_text[2] = op_loadl__text;
    ops_rodata[2] = op_loadl__rodata;
    op_names[2] = "op_loadl";
    ops_text[3] = op_loadi__text;
    ops_rodata[3] = op_loadi__rodata;
    op_names[3] = "op_loadi";
    ops_text[4] = op_loadsym__text;
    ops_rodata[4] = op_loadsym__rodata;
    op_names[4] = "op_loadsym";
    ops_text[5] = op_loadnil__text;
    ops_rodata[5] = op_loadnil__rodata;
    op_names[5] = "op_loadnil";
    ops_text[6] = op_loadself__text;
    ops_rodata[6] = op_loadself__rodata;
    op_names[6] = "op_loadself";
    ops_text[7] = op_loadt__text;
    ops_rodata[7] = op_loadt__rodata;
    op_names[7] = "op_loadt";
    ops_text[8] = op_loadf__text;
    ops_rodata[8] = op_loadf__rodata;
    op_names[8] = "op_loadf";
    ops_text[9] = op_getglobal__text;
    ops_rodata[9] = op_getglobal__rodata;
    op_names[9] = "op_getglobal";
    ops_text[10] = op_setglobal__text;
    ops_rodata[10] = op_setglobal__rodata;
    op_names[10] = "op_setglobal";
    ops_text[11] = op_getspecial__text;
    ops_rodata[11] = op_getspecial__rodata;
    op_names[11] = "op_getspecial";
    ops_text[12] = op_setspecial__text;
    ops_rodata[12] = op_setspecial__rodata;
    op_names[12] = "op_setspecial";
    ops_text[13] = op_getiv__text;
    ops_rodata[13] = op_getiv__rodata;
    op_names[13] = "op_getiv";
    ops_text[14] = op_setiv__text;
    ops_rodata[14] = op_setiv__rodata;
    op_names[14] = "op_setiv";
    ops_text[15] = op_getcv__text;
    ops_rodata[15] = op_getcv__rodata;
    op_names[15] = "op_getcv";
    ops_text[16] = op_setcv__text;
    ops_rodata[16] = op_setcv__rodata;
    op_names[16] = "op_setcv";
    ops_text[17] = op_getconst__text;
    ops_rodata[17] = op_getconst__rodata;
    op_names[17] = "op_getconst";
    ops_text[18] = op_setconst__text;
    ops_rodata[18] = op_setconst__rodata;
    op_names[18] = "op_setconst";
    ops_text[19] = op_getmcnst__text;
    ops_rodata[19] = op_getmcnst__rodata;
    op_names[19] = "op_getmcnst";
    ops_text[20] = op_setmcnst__text;
    ops_rodata[20] = op_setmcnst__rodata;
    op_names[20] = "op_setmcnst";
    ops_text[21] = op_getupvar__text;
    ops_rodata[21] = op_getupvar__rodata;
    op_names[21] = "op_getupvar";
    ops_text[22] = op_setupvar__text;
    ops_rodata[22] = op_setupvar__rodata;
    op_names[22] = "op_setupvar";
    ops_text[23] = op_jmp__text;
    ops_rodata[23] = op_jmp__rodata;
    op_names[23] = "op_jmp";
    ops_text[24] = op_jmpif__text;
    ops_rodata[24] = op_jmpif__rodata;
    op_names[24] = "op_jmpif";
    ops_text[25] = op_jmpnot__text;
    ops_rodata[25] = op_jmpnot__rodata;
    op_names[25] = "op_jmpnot";
    ops_text[26] = op_onerr__text;
    ops_rodata[26] = op_onerr__rodata;
    op_names[26] = "op_onerr";
    ops_text[27] = op_rescue__text;
    ops_rodata[27] = op_rescue__rodata;
    op_names[27] = "op_rescue";
    ops_text[28] = op_poperr__text;
    ops_rodata[28] = op_poperr__rodata;
    op_names[28] = "op_poperr";
    ops_text[29] = op_raise__text;
    ops_rodata[29] = op_raise__rodata;
    op_names[29] = "op_raise";
    ops_text[30] = op_epush__text;
    ops_rodata[30] = op_epush__rodata;
    op_names[30] = "op_epush";
    ops_text[31] = op_epop__text;
    ops_rodata[31] = op_epop__rodata;
    op_names[31] = "op_epop";
    ops_text[32] = op_send__text;
    ops_rodata[32] = op_send__rodata;
    op_names[32] = "op_send";
    ops_text[33] = op_sendb__text;
    ops_rodata[33] = op_sendb__rodata;
    op_names[33] = "op_sendb";
    ops_text[34] = op_fsend__text;
    ops_rodata[34] = op_fsend__rodata;
    op_names[34] = "op_fsend";
    ops_text[35] = op_call__text;
    ops_rodata[35] = op_call__rodata;
    op_names[35] = "op_call";
    ops_text[36] = op_super__text;
    ops_rodata[36] = op_super__rodata;
    op_names[36] = "op_super";
    ops_text[37] = op_argary__text;
    ops_rodata[37] = op_argary__rodata;
    op_names[37] = "op_argary";
    ops_text[38] = op_enter__text;
    ops_rodata[38] = op_enter__rodata;
    op_names[38] = "op_enter";
    ops_text[39] = op_enter_method_m__text;
    ops_rodata[39] = op_enter_method_m__rodata;
    op_names[39] = "op_enter_method_m";
    ops_text[40] = op_karg__text;
    ops_rodata[40] = op_karg__rodata;
    op_names[40] = "op_karg";
    ops_text[41] = op_kdict__text;
    ops_rodata[41] = op_kdict__rodata;
    op_names[41] = "op_kdict";
    ops_text[42] = op_return__text;
    ops_rodata[42] = op_return__rodata;
    op_names[42] = "op_return";
    ops_text[43] = op_break__text;
    ops_rodata[43] = op_break__rodata;
    op_names[43] = "op_break";
    ops_text[44] = op_tailcall__text;
    ops_rodata[44] = op_tailcall__rodata;
    op_names[44] = "op_tailcall";
    ops_text[45] = op_blkpush__text;
    ops_rodata[45] = op_blkpush__rodata;
    op_names[45] = "op_blkpush";
    ops_text[46] = op_add__text;
    ops_rodata[46] = op_add__rodata;
    op_names[46] = "op_add";
    ops_text[47] = op_addi__text;
    ops_rodata[47] = op_addi__rodata;
    op_names[47] = "op_addi";
    ops_text[48] = op_sub__text;
    ops_rodata[48] = op_sub__rodata;
    op_names[48] = "op_sub";
    ops_text[49] = op_subi__text;
    ops_rodata[49] = op_subi__rodata;
    op_names[49] = "op_subi";
    ops_text[50] = op_mul__text;
    ops_rodata[50] = op_mul__rodata;
    op_names[50] = "op_mul";
    ops_text[51] = op_div__text;
    ops_rodata[51] = op_div__rodata;
    op_names[51] = "op_div";
    ops_text[52] = op_eq__text;
    ops_rodata[52] = op_eq__rodata;
    op_names[52] = "op_eq";
    ops_text[53] = op_lt__text;
    ops_rodata[53] = op_lt__rodata;
    op_names[53] = "op_lt";
    ops_text[54] = op_le__text;
    ops_rodata[54] = op_le__rodata;
    op_names[54] = "op_le";
    ops_text[55] = op_gt__text;
    ops_rodata[55] = op_gt__rodata;
    op_names[55] = "op_gt";
    ops_text[56] = op_ge__text;
    ops_rodata[56] = op_ge__rodata;
    op_names[56] = "op_ge";
    ops_text[57] = op_array__text;
    ops_rodata[57] = op_array__rodata;
    op_names[57] = "op_array";
    ops_text[58] = op_arycat__text;
    ops_rodata[58] = op_arycat__rodata;
    op_names[58] = "op_arycat";
    ops_text[59] = op_arypush__text;
    ops_rodata[59] = op_arypush__rodata;
    op_names[59] = "op_arypush";
    ops_text[60] = op_aref__text;
    ops_rodata[60] = op_aref__rodata;
    op_names[60] = "op_aref";
    ops_text[61] = op_aset__text;
    ops_rodata[61] = op_aset__rodata;
    op_names[61] = "op_aset";
    ops_text[62] = op_apost__text;
    ops_rodata[62] = op_apost__rodata;
    op_names[62] = "op_apost";
    ops_text[63] = op_string__text;
    ops_rodata[63] = op_string__rodata;
    op_names[63] = "op_string";
    ops_text[64] = op_strcat__text;
    ops_rodata[64] = op_strcat__rodata;
    op_names[64] = "op_strcat";
    ops_text[65] = op_hash__text;
    ops_rodata[65] = op_hash__rodata;
    op_names[65] = "op_hash";
    ops_text[66] = op_lambda__text;
    ops_rodata[66] = op_lambda__rodata;
    op_names[66] = "op_lambda";
    ops_text[67] = op_range__text;
    ops_rodata[67] = op_range__rodata;
    op_names[67] = "op_range";
    ops_text[68] = op_oclass__text;
    ops_rodata[68] = op_oclass__rodata;
    op_names[68] = "op_oclass";
    ops_text[69] = op_class__text;
    ops_rodata[69] = op_class__rodata;
    op_names[69] = "op_class";
    ops_text[70] = op_module__text;
    ops_rodata[70] = op_module__rodata;
    op_names[70] = "op_module";
    ops_text[71] = op_exec__text;
    ops_rodata[71] = op_exec__rodata;
    op_names[71] = "op_exec";
    ops_text[72] = op_method__text;
    ops_rodata[72] = op_method__rodata;
    op_names[72] = "op_method";
    ops_text[73] = op_sclass__text;
    ops_rodata[73] = op_sclass__rodata;
    op_names[73] = "op_sclass";
    ops_text[74] = op_tclass__text;
    ops_rodata[74] = op_tclass__rodata;
    op_names[74] = "op_tclass";
    ops_text[75] = op_debug__text;
    ops_rodata[75] = op_debug__rodata;
    op_names[75] = "op_debug";
    ops_text[76] = op_stop__text;
    ops_rodata[76] = op_stop__rodata;
    op_names[76] = "op_stop";
    ops_text[77] = op_err__text;
    ops_rodata[77] = op_err__rodata;
    op_names[77] = "op_err";
  }
}

uint8_t *jit_return(uint8_t *b) {
  *b++ = 0xc3;
  return b;
}
uint8_t *jit_jump(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 235;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *b++ = 233;
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_if(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 116;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31729;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
uint8_t *jit_jump_not(uint8_t *b, int32_t n, int force_rel16) {
  if(n >= -128 && n < 127 && !force_rel16) {
    *b++ = 117;
    *b++ = (int8_t) n;
    return b;
  }
  else {
    *((uint16_t *)(b)) = (uint16_t) -31473;
    b += sizeof(uint16_t);
    *((int32_t *)(b)) = (int32_t) n;
    b += sizeof(int32_t);
    return b;
  }
  return NULL;
}
