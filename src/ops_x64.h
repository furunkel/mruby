
static uint8_t op_nop[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x5d,                                     /*08: pop     %rbp                     */
};


static uint8_t op_move[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x60,                         /*08: mov     0x60(%rdi), %eax         */
  0x89, 0xc1,                               /*0b: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x17,                         /*0d: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x57, 0x18,                   /*10: mov     0x18(%rdi), %rdx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*14: shl     $0x4, %rcx               */
  0xc1, 0xe8, 0x0e,                         /*18: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*1b: and     $0x1ff, %eax             */
  0x48, 0xc1, 0xe0, 0x04,                   /*20: shl     $0x4, %rax               */
  0x48, 0x8b, 0x34, 0x02,                   /*24: mov     (%rdx, %rax, 1), %rsi    */
  0x48, 0x8b, 0x44, 0x02, 0x08,             /*28: mov     0x8(%rdx, %rax, 1), %rax */
  0x48, 0x89, 0x44, 0x0a, 0x08,             /*2d: mov     %rax, 0x8(%rdx, %rcx, 1) */
  0x48, 0x89, 0x34, 0x0a,                   /*32: mov     %rsi, (%rdx, %rcx, 1)    */
  0x5d,                                     /*36: pop     %rbp                     */
};


static uint8_t op_loadl[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x60,                         /*08: mov     0x60(%rdi), %eax         */
  0x89, 0xc1,                               /*0b: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x17,                         /*0d: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*10: shl     $0x4, %rcx               */
  0xc1, 0xe8, 0x07,                         /*14: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*17: movzwl  %ax, %eax                */
  0x48, 0x8b, 0x57, 0x18,                   /*1a: mov     0x18(%rdi), %rdx         */
  0x48, 0x8b, 0x77, 0x20,                   /*1e: mov     0x20(%rdi), %rsi         */
  0x48, 0xc1, 0xe0, 0x04,                   /*22: shl     $0x4, %rax               */
  0x48, 0x8b, 0x3c, 0x06,                   /*26: mov     (%rsi, %rax, 1), %rdi    */
  0x48, 0x8b, 0x44, 0x06, 0x08,             /*2a: mov     0x8(%rsi, %rax, 1), %rax */
  0x48, 0x89, 0x44, 0x0a, 0x08,             /*2f: mov     %rax, 0x8(%rdx, %rcx, 1) */
  0x48, 0x89, 0x3c, 0x0a,                   /*34: mov     %rdi, (%rdx, %rcx, 1)    */
  0x5d,                                     /*38: pop     %rbp                     */
};


static uint8_t op_loadi[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x48, 0x89, 0xf9,                         /*08: mov     %rdi, %rcx               */
  0x48, 0x89, 0x4d, 0xf8,                   /*0b: mov     %rcx, -0x8(%rbp)         */
  0x8b, 0x41, 0x60,                         /*0f: mov     0x60(%rcx), %eax         */
  0xc1, 0xe8, 0x07,                         /*12: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xf0,                         /*15: movzwl  %ax, %esi                */
  0x81, 0xc6, 0x01, 0x80, 0xff, 0xff,       /*18: add     $0xffff8001, %esi        */
  0x48, 0x8b, 0xb9, 0xb8, 0x02, 0x00, 0x00, /*1e: mov     0x2b8(%rcx), %rdi        */
  0x31, 0xc0,                               /*25: xor     %eax, %eax               */
  0xff, 0x91, 0x78, 0x01, 0x00, 0x00,       /*27: callq   *0x178(%rcx)             */
  0x48, 0x8b, 0x45, 0xf8,                   /*2d: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x60,                         /*31: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*34: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x18,                   /*37: mov     0x18(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*3b: shl     $0x4, %rcx               */
  0xc7, 0x44, 0x08, 0x08, 0x03, 0x00, 0x00, /*3f: movl    $0x3, 0x8(%rax, %rcx, 1) */
  0x00,                                     /*46:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*47: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x60,                         /*4b: mov     0x60(%rax), %ecx         */
  0x89, 0xca,                               /*4e: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*50: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*53: movzwl  %dx, %edx                */
  0x81, 0xc2, 0x01, 0x80, 0xff, 0xff,       /*56: add     $0xffff8001, %edx        */
  0xc1, 0xe9, 0x17,                         /*5c: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x18,                   /*5f: mov     0x18(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*63: shl     $0x4, %rcx               */
  0x89, 0x14, 0x08,                         /*67: mov     %edx, (%rax, %rcx, 1)    */
  0x48, 0x83, 0xc4, 0x10,                   /*6a: add     $0x10, %rsp              */
  0x5d,                                     /*6e: pop     %rbp                     */
};


static uint8_t op_loadsym[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x60,                         /*08: mov     0x60(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x18,                   /*0e: mov     0x18(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x04, 0x00, 0x00, /*16: movl    $0x4, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*1d:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*1e: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x60,                         /*22: mov     0x60(%rax), %ecx         */
  0x89, 0xca,                               /*25: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*27: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*2a: movzwl  %dx, %edx                */
  0x48, 0x8b, 0x70, 0x18,                   /*2d: mov     0x18(%rax), %rsi         */
  0x48, 0x8b, 0x40, 0x28,                   /*31: mov     0x28(%rax), %rax         */
  0x8b, 0x04, 0x90,                         /*35: mov     (%rax, %rdx, 4), %eax    */
  0xc1, 0xe9, 0x17,                         /*38: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*3b: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0e,                         /*3f: mov     %eax, (%rsi, %rcx, 1)    */
  0x5d,                                     /*42: pop     %rbp                     */
};


static uint8_t op_loadnil[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x60,                         /*08: mov     0x60(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x89, 0x45, 0xf4,                         /*0e: mov     %eax, -0xc(%rbp)         */
  0x48, 0x63, 0x45, 0xf4,                   /*11: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*15: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*19: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*1d: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*21: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*28:                                  */
  0x48, 0x63, 0x45, 0xf4,                   /*29: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*2d: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*31: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*35: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*39: movl    $0x0, (%rcx, %rax, 1)    */
  0x5d,                                     /*40: pop     %rbp                     */
};


static uint8_t op_loadself[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x60,                         /*08: mov     0x60(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x18,                   /*0e: mov     0x18(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0x48, 0x8b, 0x11,                         /*16: mov     (%rcx), %rdx             */
  0x48, 0x8b, 0x71, 0x08,                   /*19: mov     0x8(%rcx), %rsi          */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*1d: mov     %rsi, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x14, 0x01,                   /*22: mov     %rdx, (%rcx, %rax, 1)    */
  0x5d,                                     /*26: pop     %rbp                     */
};


static uint8_t op_loadt[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x60,                         /*08: mov     0x60(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x18,                   /*0e: mov     0x18(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*16: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*1d:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*1e: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x60,                         /*22: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*25: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x18,                   /*28: mov     0x18(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*2c: shl     $0x4, %rcx               */
  0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*30: movl    $0x1, (%rax, %rcx, 1)    */
  0x5d,                                     /*37: pop     %rbp                     */
};


static uint8_t op_loadf[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x60,                         /*08: mov     0x60(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x18,                   /*0e: mov     0x18(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*16: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*1d:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*1e: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x60,                         /*22: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*25: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x18,                   /*28: mov     0x18(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*2c: shl     $0x4, %rcx               */
  0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*30: movl    $0x1, (%rax, %rcx, 1)    */
  0x5d,                                     /*37: pop     %rbp                     */
};


static uint8_t op_getglobal[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*0b: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xe8,                   /*0e: mov     %rax, -0x18(%rbp)        */
  0x8b, 0x48, 0x60,                         /*12: mov     0x60(%rax), %ecx         */
  0x89, 0xcb,                               /*15: mov     %ecx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*17: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1a: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x78, 0x58,                   /*1e: mov     0x58(%rax), %rdi         */
  0xc1, 0xe9, 0x07,                         /*22: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*25: movzwl  %cx, %ecx                */
  0x4c, 0x8b, 0x70, 0x18,                   /*28: mov     0x18(%rax), %r14         */
  0x48, 0x8b, 0x50, 0x28,                   /*2c: mov     0x28(%rax), %rdx         */
  0x8b, 0x34, 0x8a,                         /*30: mov     (%rdx, %rcx, 4), %esi    */
  0xff, 0x90, 0xa0, 0x01, 0x00, 0x00,       /*33: callq   *0x1a0(%rax)             */
  0x48, 0x89, 0x45, 0xd8,                   /*39: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*3d: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*40: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*44: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*48: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*4d: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x83, 0xc4, 0x20,                   /*51: add     $0x20, %rsp              */
  0x5b,                                     /*55: pop     %rbx                     */
  0x41, 0x5e,                               /*56: pop     %r14                     */
  0x5d,                                     /*58: pop     %rbp                     */
};


static uint8_t op_setglobal[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x48, 0x8b, 0x78, 0x58,                   /*0f: mov     0x58(%rax), %rdi         */
  0x8b, 0x48, 0x60,                         /*13: mov     0x60(%rax), %ecx         */
  0x89, 0xca,                               /*16: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*18: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*1b: movzwl  %dx, %edx                */
  0x4c, 0x8b, 0x40, 0x18,                   /*1e: mov     0x18(%rax), %r8          */
  0x48, 0x8b, 0x70, 0x28,                   /*22: mov     0x28(%rax), %rsi         */
  0x8b, 0x34, 0x96,                         /*26: mov     (%rsi, %rdx, 4), %esi    */
  0xc1, 0xe9, 0x17,                         /*29: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*2c: shl     $0x4, %rcx               */
  0x49, 0x8b, 0x14, 0x08,                   /*30: mov     (%r8, %rcx, 1), %rdx     */
  0x41, 0x8b, 0x4c, 0x08, 0x08,             /*34: mov     0x8(%r8, %rcx, 1), %ecx  */
  0xff, 0x90, 0x98, 0x00, 0x00, 0x00,       /*39: callq   *0x98(%rax)              */
  0x48, 0x83, 0xc4, 0x10,                   /*3f: add     $0x10, %rsp              */
  0x5d,                                     /*43: pop     %rbp                     */
};


static uint8_t op_getspecial[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*0b: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xe8,                   /*0e: mov     %rax, -0x18(%rbp)        */
  0x8b, 0x48, 0x60,                         /*12: mov     0x60(%rax), %ecx         */
  0x89, 0xcb,                               /*15: mov     %ecx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*17: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1a: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x18,                   /*1e: mov     0x18(%rax), %r14         */
  0x48, 0x8b, 0x78, 0x58,                   /*22: mov     0x58(%rax), %rdi         */
  0xc1, 0xe9, 0x07,                         /*26: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xf1,                         /*29: movzwl  %cx, %esi                */
  0xff, 0x90, 0x50, 0x02, 0x00, 0x00,       /*2c: callq   *0x250(%rax)             */
  0x48, 0x89, 0x45, 0xd8,                   /*32: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*36: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*39: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3d: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*41: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*46: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x83, 0xc4, 0x20,                   /*4a: add     $0x20, %rsp              */
  0x5b,                                     /*4e: pop     %rbx                     */
  0x41, 0x5e,                               /*4f: pop     %r14                     */
  0x5d,                                     /*51: pop     %rbp                     */
};


static uint8_t op_setspecial[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x4c, 0x8b, 0x40, 0x18,                   /*0f: mov     0x18(%rax), %r8          */
  0x48, 0x8b, 0x78, 0x58,                   /*13: mov     0x58(%rax), %rdi         */
  0x8b, 0x48, 0x60,                         /*17: mov     0x60(%rax), %ecx         */
  0x89, 0xca,                               /*1a: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*1c: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xf2,                         /*1f: movzwl  %dx, %esi                */
  0xc1, 0xe9, 0x17,                         /*22: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*25: shl     $0x4, %rcx               */
  0x49, 0x8b, 0x14, 0x08,                   /*29: mov     (%r8, %rcx, 1), %rdx     */
  0x41, 0x8b, 0x4c, 0x08, 0x08,             /*2d: mov     0x8(%r8, %rcx, 1), %ecx  */
  0xff, 0x90, 0x30, 0x01, 0x00, 0x00,       /*32: callq   *0x130(%rax)             */
  0x48, 0x83, 0xc4, 0x10,                   /*38: add     $0x10, %rsp              */
  0x5d,                                     /*3c: pop     %rbp                     */
};


static uint8_t op_getiv[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*0b: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xe8,                   /*0e: mov     %rax, -0x18(%rbp)        */
  0x8b, 0x48, 0x60,                         /*12: mov     0x60(%rax), %ecx         */
  0x89, 0xcb,                               /*15: mov     %ecx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*17: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1a: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x78, 0x58,                   /*1e: mov     0x58(%rax), %rdi         */
  0xc1, 0xe9, 0x07,                         /*22: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*25: movzwl  %cx, %ecx                */
  0x4c, 0x8b, 0x70, 0x18,                   /*28: mov     0x18(%rax), %r14         */
  0x48, 0x8b, 0x50, 0x28,                   /*2c: mov     0x28(%rax), %rdx         */
  0x8b, 0x34, 0x8a,                         /*30: mov     (%rdx, %rcx, 4), %esi    */
  0xff, 0x90, 0xc0, 0x00, 0x00, 0x00,       /*33: callq   *0xc0(%rax)              */
  0x48, 0x89, 0x45, 0xd8,                   /*39: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*3d: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*40: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*44: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*48: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*4d: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x83, 0xc4, 0x20,                   /*51: add     $0x20, %rsp              */
  0x5b,                                     /*55: pop     %rbx                     */
  0x41, 0x5e,                               /*56: pop     %r14                     */
  0x5d,                                     /*58: pop     %rbp                     */
};


static uint8_t op_setiv[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x48, 0x8b, 0x78, 0x58,                   /*0f: mov     0x58(%rax), %rdi         */
  0x8b, 0x48, 0x60,                         /*13: mov     0x60(%rax), %ecx         */
  0x89, 0xca,                               /*16: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*18: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*1b: movzwl  %dx, %edx                */
  0x4c, 0x8b, 0x40, 0x18,                   /*1e: mov     0x18(%rax), %r8          */
  0x48, 0x8b, 0x70, 0x28,                   /*22: mov     0x28(%rax), %rsi         */
  0x8b, 0x34, 0x96,                         /*26: mov     (%rsi, %rdx, 4), %esi    */
  0xc1, 0xe9, 0x17,                         /*29: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*2c: shl     $0x4, %rcx               */
  0x49, 0x8b, 0x14, 0x08,                   /*30: mov     (%r8, %rcx, 1), %rdx     */
  0x41, 0x8b, 0x4c, 0x08, 0x08,             /*34: mov     0x8(%r8, %rcx, 1), %ecx  */
  0xff, 0x90, 0x00, 0x02, 0x00, 0x00,       /*39: callq   *0x200(%rax)             */
  0x48, 0x83, 0xc4, 0x10,                   /*3f: add     $0x10, %rsp              */
  0x5d,                                     /*43: pop     %rbp                     */
};


static uint8_t op_getcv[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*0b: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xe8,                   /*0e: mov     %rax, -0x18(%rbp)        */
  0x48, 0x8b, 0x48, 0x10,                   /*12: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x50, 0x58,                   /*16: mov     0x58(%rax), %rdx         */
  0x48, 0x8b, 0x52, 0x18,                   /*1a: mov     0x18(%rdx), %rdx         */
  0x48, 0x8b, 0x52, 0x20,                   /*1e: mov     0x20(%rdx), %rdx         */
  0x48, 0x89, 0x4a, 0x38,                   /*22: mov     %rcx, 0x38(%rdx)         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*26: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x51, 0x60,                         /*2a: mov     0x60(%rcx), %edx         */
  0x89, 0xd3,                               /*2d: mov     %edx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*2f: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*32: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x79, 0x58,                   /*36: mov     0x58(%rcx), %rdi         */
  0xc1, 0xea, 0x07,                         /*3a: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*3d: movzwl  %dx, %edx                */
  0x4c, 0x8b, 0x71, 0x18,                   /*40: mov     0x18(%rcx), %r14         */
  0x48, 0x8b, 0x49, 0x28,                   /*44: mov     0x28(%rcx), %rcx         */
  0x8b, 0x34, 0x91,                         /*48: mov     (%rcx, %rdx, 4), %esi    */
  0xff, 0x90, 0xe0, 0x00, 0x00, 0x00,       /*4b: callq   *0xe0(%rax)              */
  0x48, 0x89, 0x45, 0xd8,                   /*51: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*55: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*58: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*5c: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*60: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*65: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*69: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*6d: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*71: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*75: mov     0x20(%rax), %rax         */
  0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, /*79: movq    $0x0, 0x38(%rax)         */
  0x00,                                     /*80:                                  */
  0x48, 0x83, 0xc4, 0x20,                   /*81: add     $0x20, %rsp              */
  0x5b,                                     /*85: pop     %rbx                     */
  0x41, 0x5e,                               /*86: pop     %r14                     */
  0x5d,                                     /*88: pop     %rbp                     */
};


static uint8_t op_setcv[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x48, 0x8b, 0x78, 0x58,                   /*0f: mov     0x58(%rax), %rdi         */
  0x8b, 0x48, 0x60,                         /*13: mov     0x60(%rax), %ecx         */
  0x89, 0xca,                               /*16: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*18: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*1b: movzwl  %dx, %edx                */
  0x4c, 0x8b, 0x40, 0x18,                   /*1e: mov     0x18(%rax), %r8          */
  0x48, 0x8b, 0x70, 0x28,                   /*22: mov     0x28(%rax), %rsi         */
  0x8b, 0x34, 0x96,                         /*26: mov     (%rsi, %rdx, 4), %esi    */
  0xc1, 0xe9, 0x17,                         /*29: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*2c: shl     $0x4, %rcx               */
  0x49, 0x8b, 0x14, 0x08,                   /*30: mov     (%r8, %rcx, 1), %rdx     */
  0x41, 0x8b, 0x4c, 0x08, 0x08,             /*34: mov     0x8(%r8, %rcx, 1), %ecx  */
  0xff, 0x90, 0x30, 0x02, 0x00, 0x00,       /*39: callq   *0x230(%rax)             */
  0x48, 0x83, 0xc4, 0x10,                   /*3f: add     $0x10, %rsp              */
  0x5d,                                     /*43: pop     %rbp                     */
};


static uint8_t op_getconst[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x48, 0x8b, 0x48, 0x10,                   /*0f: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x50, 0x58,                   /*13: mov     0x58(%rax), %rdx         */
  0x48, 0x8b, 0x52, 0x18,                   /*17: mov     0x18(%rdx), %rdx         */
  0x48, 0x8b, 0x52, 0x20,                   /*1b: mov     0x20(%rdx), %rdx         */
  0x48, 0x89, 0x4a, 0x38,                   /*1f: mov     %rcx, 0x38(%rdx)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*23: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x51, 0x28,                   /*27: mov     0x28(%rcx), %rdx         */
  0x48, 0x8b, 0x79, 0x58,                   /*2b: mov     0x58(%rcx), %rdi         */
  0x8b, 0x49, 0x60,                         /*2f: mov     0x60(%rcx), %ecx         */
  0xc1, 0xe9, 0x07,                         /*32: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*35: movzwl  %cx, %ecx                */
  0x8b, 0x34, 0x8a,                         /*38: mov     (%rdx, %rcx, 4), %esi    */
  0xff, 0x90, 0x90, 0x00, 0x00, 0x00,       /*3b: callq   *0x90(%rax)              */
  0x48, 0x89, 0x45, 0xd8,                   /*41: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*45: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*48: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*4c: mov     -0x20(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xf0,                   /*50: mov     %rcx, -0x10(%rbp)        */
  0x48, 0x89, 0x45, 0xe8,                   /*54: mov     %rax, -0x18(%rbp)        */
  0x48, 0x8b, 0x45, 0xf8,                   /*58: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*5c: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*60: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*64: mov     0x20(%rax), %rax         */
  0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, /*68: movq    $0x0, 0x38(%rax)         */
  0x00,                                     /*6f:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*70: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x48, 0x58,                   /*74: mov     0x58(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*78: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*7c: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x18,                   /*80: mov     %rcx, 0x18(%rax)         */
  0x48, 0x8b, 0x45, 0xf8,                   /*84: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x60,                         /*88: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*8b: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x18,                   /*8e: mov     0x18(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*92: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xe8,                   /*96: mov     -0x18(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xf0,                   /*9a: mov     -0x10(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x08,             /*9e: mov     %rsi, 0x8(%rax, %rcx, 1) */
  0x48, 0x89, 0x14, 0x08,                   /*a3: mov     %rdx, (%rax, %rcx, 1)    */
  0x48, 0x83, 0xc4, 0x30,                   /*a7: add     $0x30, %rsp              */
  0x5d,                                     /*ab: pop     %rbp                     */
};


static uint8_t op_setconst[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x48, 0x8b, 0x78, 0x58,                   /*0f: mov     0x58(%rax), %rdi         */
  0x8b, 0x48, 0x60,                         /*13: mov     0x60(%rax), %ecx         */
  0x89, 0xca,                               /*16: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*18: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*1b: movzwl  %dx, %edx                */
  0x4c, 0x8b, 0x40, 0x18,                   /*1e: mov     0x18(%rax), %r8          */
  0x48, 0x8b, 0x70, 0x28,                   /*22: mov     0x28(%rax), %rsi         */
  0x8b, 0x34, 0x96,                         /*26: mov     (%rsi, %rdx, 4), %esi    */
  0xc1, 0xe9, 0x17,                         /*29: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*2c: shl     $0x4, %rcx               */
  0x49, 0x8b, 0x14, 0x08,                   /*30: mov     (%r8, %rcx, 1), %rdx     */
  0x41, 0x8b, 0x4c, 0x08, 0x08,             /*34: mov     0x8(%r8, %rcx, 1), %ecx  */
  0xff, 0x90, 0xd0, 0x01, 0x00, 0x00,       /*39: callq   *0x1d0(%rax)             */
  0x48, 0x83, 0xc4, 0x10,                   /*3f: add     $0x10, %rsp              */
  0x5d,                                     /*43: pop     %rbp                     */
};


static uint8_t op_getmcnst[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x49, 0x89, 0xf8,                         /*08: mov     %rdi, %r8                */
  0x4c, 0x89, 0x45, 0xf8,                   /*0b: mov     %r8, -0x8(%rbp)          */
  0x41, 0x8b, 0x48, 0x60,                   /*0f: mov     0x60(%r8), %ecx          */
  0xc1, 0xe9, 0x17,                         /*13: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xe4,                         /*16: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*19: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x51, 0x10,                   /*1d: mov     0x10(%rcx), %rdx         */
  0x48, 0x8b, 0x49, 0x58,                   /*21: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*25: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*29: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x51, 0x38,                   /*2d: mov     %rdx, 0x38(%rcx)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*31: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x79, 0x58,                   /*35: mov     0x58(%rcx), %rdi         */
  0x48, 0x63, 0x55, 0xe4,                   /*39: movslq  -0x1c(%rbp), %rdx        */
  0x48, 0xc1, 0xe2, 0x04,                   /*3d: shl     $0x4, %rdx               */
  0x8b, 0x71, 0x60,                         /*41: mov     0x60(%rcx), %esi         */
  0xc1, 0xee, 0x07,                         /*44: shr     $0x7, %esi               */
  0x0f, 0xb7, 0xf6,                         /*47: movzwl  %si, %esi                */
  0x48, 0x8b, 0x41, 0x18,                   /*4a: mov     0x18(%rcx), %rax         */
  0x48, 0x8b, 0x49, 0x28,                   /*4e: mov     0x28(%rcx), %rcx         */
  0x8b, 0x0c, 0xb1,                         /*52: mov     (%rcx, %rsi, 4), %ecx    */
  0x48, 0x8b, 0x34, 0x10,                   /*55: mov     (%rax, %rdx, 1), %rsi    */
  0x8b, 0x54, 0x10, 0x08,                   /*59: mov     0x8(%rax, %rdx, 1), %edx */
  0x41, 0xff, 0x90, 0x28, 0x02, 0x00, 0x00, /*5d: callq   *0x228(%r8)              */
  0x48, 0x89, 0x45, 0xd0,                   /*64: mov     %rax, -0x30(%rbp)        */
  0x89, 0x55, 0xd8,                         /*68: mov     %edx, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*6b: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*6f: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xf0,                   /*73: mov     %rcx, -0x10(%rbp)        */
  0x48, 0x89, 0x45, 0xe8,                   /*77: mov     %rax, -0x18(%rbp)        */
  0x48, 0x8b, 0x45, 0xf8,                   /*7b: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*7f: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*83: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*87: mov     0x20(%rax), %rax         */
  0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, /*8b: movq    $0x0, 0x38(%rax)         */
  0x00,                                     /*92:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*93: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x48, 0x58,                   /*97: mov     0x58(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*9b: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*9f: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x18,                   /*a3: mov     %rcx, 0x18(%rax)         */
  0x48, 0x63, 0x45, 0xe4,                   /*a7: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*ab: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*af: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*b3: shl     $0x4, %rax               */
  0x48, 0x8b, 0x55, 0xe8,                   /*b7: mov     -0x18(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xf0,                   /*bb: mov     -0x10(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*bf: mov     %rsi, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x14, 0x01,                   /*c4: mov     %rdx, (%rcx, %rax, 1)    */
  0x48, 0x83, 0xc4, 0x30,                   /*c8: add     $0x30, %rsp              */
  0x5d,                                     /*cc: pop     %rbp                     */
};


static uint8_t op_setmcnst[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x49, 0x89, 0xfa,                         /*08: mov     %rdi, %r10               */
  0x4c, 0x89, 0x55, 0xf8,                   /*0b: mov     %r10, -0x8(%rbp)         */
  0x41, 0x8b, 0x4a, 0x60,                   /*0f: mov     0x60(%r10), %ecx         */
  0xc1, 0xe9, 0x17,                         /*13: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*16: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*19: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x79, 0x58,                   /*1d: mov     0x58(%rcx), %rdi         */
  0x48, 0x63, 0x45, 0xf4,                   /*21: movslq  -0xc(%rbp), %rax         */
  0x8b, 0x51, 0x60,                         /*25: mov     0x60(%rcx), %edx         */
  0xc1, 0xea, 0x07,                         /*28: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*2b: movzwl  %dx, %edx                */
  0x4c, 0x8b, 0x49, 0x18,                   /*2e: mov     0x18(%rcx), %r9          */
  0x48, 0x8b, 0x49, 0x28,                   /*32: mov     0x28(%rcx), %rcx         */
  0x8b, 0x0c, 0x91,                         /*36: mov     (%rcx, %rdx, 4), %ecx    */
  0x48, 0xc1, 0xe0, 0x04,                   /*39: shl     $0x4, %rax               */
  0x49, 0x8b, 0x74, 0x01, 0x10,             /*3d: mov     0x10(%r9, %rax, 1), %rsi */
  0x41, 0x8b, 0x54, 0x01, 0x18,             /*42: mov     0x18(%r9, %rax, 1), %edx */
  0x4d, 0x8b, 0x04, 0x01,                   /*47: mov     (%r9, %rax, 1), %r8      */
  0x45, 0x8b, 0x4c, 0x01, 0x08,             /*4b: mov     0x8(%r9, %rax, 1), %r9d  */
  0x41, 0xff, 0x92, 0x08, 0x01, 0x00, 0x00, /*50: callq   *0x108(%r10)             */
  0x48, 0x83, 0xc4, 0x10,                   /*57: add     $0x10, %rsp              */
  0x5d,                                     /*5b: pop     %rbp                     */
};


static uint8_t op_getupvar[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x40,                   /*07: sub     $0x40, %rsp              */
  0x48, 0x89, 0xfb,                         /*0b: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5d, 0xe8,                   /*0e: mov     %rbx, -0x18(%rbp)        */
  0x8b, 0x43, 0x60,                         /*12: mov     0x60(%rbx), %eax         */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*18: shl     $0x4, %rax               */
  0x48, 0x03, 0x43, 0x18,                   /*1c: add     0x18(%rbx), %rax         */
  0x48, 0x89, 0x45, 0xe0,                   /*20: mov     %rax, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*24: mov     -0x18(%rbp), %rax        */
  0x8b, 0x70, 0x60,                         /*28: mov     0x60(%rax), %esi         */
  0xc1, 0xee, 0x07,                         /*2b: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*2e: and     $0x7f, %esi              */
  0x89, 0x75, 0xdc,                         /*31: mov     %esi, -0x24(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*34: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*38: mov     0x58(%rax), %rdi         */
  0xff, 0x93, 0x90, 0x02, 0x00, 0x00,       /*3c: callq   *0x290(%rbx)             */
  0x48, 0x89, 0x45, 0xd0,                   /*42: mov     %rax, -0x30(%rbp)        */
  0x48, 0x85, 0xc0,                         /*46: test    %rax, %rax               */
  0x74, 0x38,                               /*49: je      83                       */
  0x48, 0x8b, 0x45, 0xe8,                   /*4b: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*4f: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x0e,                         /*52: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*55: and     $0x1ff, %eax             */
  0x89, 0x45, 0xbc,                         /*5a: mov     %eax, -0x44(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*5d: mov     -0x20(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xbc,                   /*61: movslq  -0x44(%rbp), %rcx        */
  0x48, 0x8b, 0x55, 0xd0,                   /*65: mov     -0x30(%rbp), %rdx        */
  0x48, 0x8b, 0x52, 0x18,                   /*69: mov     0x18(%rdx), %rdx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*6d: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x34, 0x0a,                   /*71: mov     (%rdx, %rcx, 1), %rsi    */
  0x48, 0x8b, 0x4c, 0x0a, 0x08,             /*75: mov     0x8(%rdx, %rcx, 1), %rcx */
  0x48, 0x89, 0x48, 0x08,                   /*7a: mov     %rcx, 0x8(%rax)          */
  0x48, 0x89, 0x30,                         /*7e: mov     %rsi, (%rax)             */
  0xeb, 0x20,                               /*81: jmp     a3                       */
  0x4c, 0x8b, 0x75, 0xe0,                   /*83: mov     -0x20(%rbp), %r14        */
  0xff, 0x93, 0xb8, 0x00, 0x00, 0x00,       /*87: callq   *0xb8(%rbx)              */
  0x48, 0x89, 0x45, 0xc0,                   /*8d: mov     %rax, -0x40(%rbp)        */
  0x89, 0x55, 0xc8,                         /*91: mov     %edx, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*94: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*98: mov     -0x38(%rbp), %rcx        */
  0x49, 0x89, 0x4e, 0x08,                   /*9c: mov     %rcx, 0x8(%r14)          */
  0x49, 0x89, 0x06,                         /*a0: mov     %rax, (%r14)             */
  0x48, 0x83, 0xc4, 0x40,                   /*a3: add     $0x40, %rsp              */
  0x5b,                                     /*a7: pop     %rbx                     */
  0x41, 0x5e,                               /*a8: pop     %r14                     */
  0x5d,                                     /*aa: pop     %rbp                     */
};


static uint8_t op_setupvar[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x28,                   /*05: sub     $0x28, %rsp              */
  0x48, 0x89, 0xfb,                         /*09: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5d, 0xf0,                   /*0c: mov     %rbx, -0x10(%rbp)        */
  0x8b, 0x73, 0x60,                         /*10: mov     0x60(%rbx), %esi         */
  0xc1, 0xee, 0x07,                         /*13: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*16: and     $0x7f, %esi              */
  0x89, 0x75, 0xec,                         /*19: mov     %esi, -0x14(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*1c: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*20: mov     0x58(%rax), %rdi         */
  0xff, 0x93, 0x90, 0x02, 0x00, 0x00,       /*24: callq   *0x290(%rbx)             */
  0x48, 0x89, 0x45, 0xe0,                   /*2a: mov     %rax, -0x20(%rbp)        */
  0x48, 0x85, 0xc0,                         /*2e: test    %rax, %rax               */
  0x74, 0x5e,                               /*31: je      91                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*33: mov     -0x10(%rbp), %rax        */
  0x8b, 0x48, 0x60,                         /*37: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*3a: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*3d: shl     $0x4, %rcx               */
  0x48, 0x03, 0x48, 0x18,                   /*41: add     0x18(%rax), %rcx         */
  0x48, 0x89, 0x4d, 0xd8,                   /*45: mov     %rcx, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*49: mov     -0x10(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*4d: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x0e,                         /*50: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*53: and     $0x1ff, %eax             */
  0x89, 0x45, 0xd4,                         /*58: mov     %eax, -0x2c(%rbp)        */
  0x48, 0x63, 0x45, 0xd4,                   /*5b: movslq  -0x2c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*5f: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*63: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*67: shl     $0x4, %rax               */
  0x48, 0x8b, 0x55, 0xd8,                   /*6b: mov     -0x28(%rbp), %rdx        */
  0x48, 0x8b, 0x32,                         /*6f: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*72: mov     0x8(%rdx), %rdx          */
  0x48, 0x89, 0x54, 0x01, 0x08,             /*76: mov     %rdx, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x34, 0x01,                   /*7b: mov     %rsi, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf0,                   /*7f: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*83: mov     0x58(%rax), %rdi         */
  0x48, 0x8b, 0x75, 0xe0,                   /*87: mov     -0x20(%rbp), %rsi        */
  0xff, 0x93, 0x00, 0x01, 0x00, 0x00,       /*8b: callq   *0x100(%rbx)             */
  0x48, 0x83, 0xc4, 0x28,                   /*91: add     $0x28, %rsp              */
  0x5b,                                     /*95: pop     %rbx                     */
  0x5d,                                     /*96: pop     %rbp                     */
};


static uint8_t op_jmp[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x60,                         /*08: mov     0x60(%rdi), %eax         */
  0xc1, 0xe8, 0x07,                         /*0b: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*0e: movzwl  %ax, %eax                */
  0x05, 0x01, 0x80, 0xff, 0xff,             /*11: add     $0xffff8001, %eax        */
  0x48, 0x98,                               /*16: cltq                             */
  0x48, 0xc1, 0xe0, 0x02,                   /*18: shl     $0x2, %rax               */
  0x48, 0x01, 0x47, 0x10,                   /*1c: add     %rax, 0x10(%rdi)         */
  0x5d,                                     /*20: pop     %rbp                     */
};


static uint8_t op_jmpif[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x60,                         /*08: mov     0x60(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x18,                   /*0e: mov     0x18(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0x83, 0x7c, 0x01, 0x08, 0x00,             /*16: cmpl    $0x0, 0x8(%rcx, %rax, 1) */
  0x74, 0x20,                               /*1b: je      3d                       */
  0x48, 0x8b, 0x45, 0xf8,                   /*1d: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x60,                         /*21: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x07,                         /*24: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*27: movzwl  %cx, %ecx                */
  0x81, 0xc1, 0x01, 0x80, 0xff, 0xff,       /*2a: add     $0xffff8001, %ecx        */
  0x48, 0x63, 0xc9,                         /*30: movslq  %ecx, %rcx               */
  0x48, 0xc1, 0xe1, 0x02,                   /*33: shl     $0x2, %rcx               */
  0x48, 0x01, 0x48, 0x10,                   /*37: add     %rcx, 0x10(%rax)         */
  0x5d,                                     /*3b: pop     %rbp                     */
  0xeb, 0x0a,                               /*3c: jmp (ret)                        */
  0x48, 0x8b, 0x45, 0xf8,                   /*3e: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*42: addq    $0x4, 0x10(%rax)         */
  0x5d,                                     /*47: pop     %rbp                     */
};


static uint8_t op_jmpnot[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x60,                         /*08: mov     0x60(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x18,                   /*0e: mov     0x18(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0x83, 0x7c, 0x01, 0x08, 0x00,             /*16: cmpl    $0x0, 0x8(%rcx, %rax, 1) */
  0x74, 0x0b,                               /*1b: je      28                       */
  0x48, 0x8b, 0x45, 0xf8,                   /*1d: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*21: addq    $0x4, 0x10(%rax)         */
  0x5d,                                     /*26: pop     %rbp                     */
  0xeb, 0x1f,                               /*27: jmp (ret)                        */
  0x48, 0x8b, 0x45, 0xf8,                   /*29: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x60,                         /*2d: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x07,                         /*30: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*33: movzwl  %cx, %ecx                */
  0x81, 0xc1, 0x01, 0x80, 0xff, 0xff,       /*36: add     $0xffff8001, %ecx        */
  0x48, 0x63, 0xc9,                         /*3c: movslq  %ecx, %rcx               */
  0x48, 0xc1, 0xe1, 0x02,                   /*3f: shl     $0x2, %rcx               */
  0x48, 0x01, 0x48, 0x10,                   /*43: add     %rcx, 0x10(%rax)         */
  0x5d,                                     /*47: pop     %rbp                     */
};


static uint8_t op_onerr[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x48, 0x8b, 0x48, 0x58,                   /*0f: mov     0x58(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*13: mov     0x18(%rcx), %rcx         */
  0x8b, 0x51, 0x40,                         /*17: mov     0x40(%rcx), %edx         */
  0x48, 0x8b, 0x49, 0x20,                   /*1a: mov     0x20(%rcx), %rcx         */
  0x3b, 0x51, 0x1c,                         /*1e: cmp     0x1c(%rcx), %edx         */
  0x7f, 0x64,                               /*21: jg      87                       */
  0x48, 0x8b, 0x4d, 0xf8,                   /*23: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x58,                   /*27: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*2b: mov     0x18(%rcx), %rcx         */
  0x83, 0x79, 0x40, 0x00,                   /*2f: cmpl    $0x0, 0x40(%rcx)         */
  0x74, 0x11,                               /*33: je      46                       */
  0x48, 0x8b, 0x4d, 0xf8,                   /*35: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x58,                   /*39: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*3d: mov     0x18(%rcx), %rcx         */
  0xd1, 0x61, 0x40,                         /*41: shll    0x40(%rcx)               */
  0xeb, 0x13,                               /*44: jmp     59                       */
  0x48, 0x8b, 0x4d, 0xf8,                   /*46: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x58,                   /*4a: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*4e: mov     0x18(%rcx), %rcx         */
  0xc7, 0x41, 0x40, 0x10, 0x00, 0x00, 0x00, /*52: movl    $0x10, 0x40(%rcx)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*59: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x79, 0x58,                   /*5d: mov     0x58(%rcx), %rdi         */
  0x48, 0x8b, 0x4f, 0x18,                   /*61: mov     0x18(%rdi), %rcx         */
  0x48, 0x8b, 0x71, 0x38,                   /*65: mov     0x38(%rcx), %rsi         */
  0x48, 0x63, 0x51, 0x40,                   /*69: movslq  0x40(%rcx), %rdx         */
  0x48, 0xc1, 0xe2, 0x03,                   /*6d: shl     $0x3, %rdx               */
  0xff, 0x90, 0x28, 0x01, 0x00, 0x00,       /*71: callq   *0x128(%rax)             */
  0x48, 0x8b, 0x4d, 0xf8,                   /*77: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x58,                   /*7b: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*7f: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x38,                   /*83: mov     %rax, 0x38(%rcx)         */
  0x48, 0x8b, 0x45, 0xf8,                   /*87: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x60,                         /*8b: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x07,                         /*8e: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*91: movzwl  %cx, %ecx                */
  0x81, 0xc1, 0x01, 0x80, 0xff, 0xff,       /*94: add     $0xffff8001, %ecx        */
  0x48, 0x63, 0xc9,                         /*9a: movslq  %ecx, %rcx               */
  0x48, 0xc1, 0xe1, 0x02,                   /*9d: shl     $0x2, %rcx               */
  0x48, 0x03, 0x48, 0x10,                   /*a1: add     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x40, 0x58,                   /*a5: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*a9: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*ad: mov     0x20(%rax), %rax         */
  0x48, 0x63, 0x50, 0x1c,                   /*b1: movslq  0x1c(%rax), %rdx         */
  0x8d, 0x72, 0x01,                         /*b5: lea     0x1(%rdx), %esi          */
  0x89, 0x70, 0x1c,                         /*b8: mov     %esi, 0x1c(%rax)         */
  0x48, 0x8b, 0x45, 0xf8,                   /*bb: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*bf: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*c3: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x38,                   /*c7: mov     0x38(%rax), %rax         */
  0x48, 0x89, 0x0c, 0xd0,                   /*cb: mov     %rcx, (%rax, %rdx, 8)    */
  0x48, 0x83, 0xc4, 0x10,                   /*cf: add     $0x10, %rsp              */
  0x5d,                                     /*d3: pop     %rbp                     */
};


static uint8_t op_rescue[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x48, 0x8b, 0x47, 0x18,                   /*08: mov     0x18(%rdi), %rax         */
  0x48, 0x8b, 0x4f, 0x58,                   /*0c: mov     0x58(%rdi), %rcx         */
  0x48, 0x8b, 0x49, 0x28,                   /*10: mov     0x28(%rcx), %rcx         */
  0x0f, 0xb6, 0x09,                         /*14: movzbl  (%rcx), %ecx             */
  0x8b, 0x57, 0x60,                         /*17: mov     0x60(%rdi), %edx         */
  0xc1, 0xea, 0x17,                         /*1a: shr     $0x17, %edx              */
  0x48, 0xc1, 0xe2, 0x04,                   /*1d: shl     $0x4, %rdx               */
  0x89, 0x4c, 0x10, 0x08,                   /*21: mov     %ecx, 0x8(%rax, %rdx, 1) */
  0x48, 0x8b, 0x45, 0xf8,                   /*25: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x48, 0x18,                   /*29: mov     0x18(%rax), %rcx         */
  0x48, 0x8b, 0x50, 0x58,                   /*2d: mov     0x58(%rax), %rdx         */
  0x48, 0x8b, 0x52, 0x28,                   /*31: mov     0x28(%rdx), %rdx         */
  0x8b, 0x40, 0x60,                         /*35: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*38: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*3b: shl     $0x4, %rax               */
  0x48, 0x89, 0x14, 0x01,                   /*3f: mov     %rdx, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*43: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*47: mov     0x58(%rax), %rax         */
  0x48, 0xc7, 0x40, 0x28, 0x00, 0x00, 0x00, /*4b: movq    $0x0, 0x28(%rax)         */
  0x00,                                     /*52:                                  */
  0x5d,                                     /*53: pop     %rbp                     */
};


static uint8_t op_poperr[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x60,                         /*08: mov     0x60(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x89, 0x45, 0xf4,                         /*0e: mov     %eax, -0xc(%rbp)         */
  0xeb, 0x20,                               /*11: jmp     33                       */
  0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, /*13: data16  data16                   */
  0x84, 0x00, 0x00, 0x00, 0x00, 0x00,       /*1a:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*20: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*24: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*28: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*2c: mov     0x20(%rax), %rax         */
  0xff, 0x48, 0x1c,                         /*30: decl    0x1c(%rax)               */
  0x8b, 0x45, 0xf4,                         /*33: mov     -0xc(%rbp), %eax         */
  0x8d, 0x48, 0xff,                         /*36: lea     -0x1(%rax), %ecx         */
  0x89, 0x4d, 0xf4,                         /*39: mov     %ecx, -0xc(%rbp)         */
  0x85, 0xc0,                               /*3c: test    %eax, %eax               */
  0x75, 0xe0,                               /*3e: jne     20                       */
  0x5d,                                     /*40: pop     %rbp                     */
};


static uint8_t op_raise[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x8b, 0x48, 0x60,                         /*0f: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*15: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x50, 0x18,                   /*19: mov     0x18(%rax), %rdx         */
  0x48, 0x8b, 0x70, 0x58,                   /*1d: mov     0x58(%rax), %rsi         */
  0x48, 0x8b, 0x0c, 0x0a,                   /*21: mov     (%rdx, %rcx, 1), %rcx    */
  0x48, 0x89, 0x4e, 0x28,                   /*25: mov     %rcx, 0x28(%rsi)         */
  0x48, 0x8b, 0x7d, 0xf8,                   /*29: mov     -0x8(%rbp), %rdi         */
  0xff, 0x90, 0xc8, 0x01, 0x00, 0x00,       /*2d: callq   *0x1c8(%rax)             */
  0x48, 0x83, 0xc4, 0x10,                   /*33: add     $0x10, %rsp              */
  0x5d,                                     /*37: pop     %rbp                     */
};


static uint8_t op_epush[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x18,                   /*05: sub     $0x18, %rsp              */
  0x48, 0x89, 0xfb,                         /*09: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5d, 0xf0,                   /*0c: mov     %rbx, -0x10(%rbp)        */
  0x48, 0x8b, 0x43, 0x08,                   /*10: mov     0x8(%rbx), %rax          */
  0x48, 0x8b, 0x7b, 0x58,                   /*14: mov     0x58(%rbx), %rdi         */
  0x8b, 0x4b, 0x60,                         /*18: mov     0x60(%rbx), %ecx         */
  0xc1, 0xe9, 0x07,                         /*1b: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*1e: movzwl  %cx, %ecx                */
  0x48, 0x8b, 0x40, 0x20,                   /*21: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x34, 0xc8,                   /*25: mov     (%rax, %rcx, 8), %rsi    */
  0xff, 0x53, 0x70,                         /*29: callq   *0x70(%rbx)              */
  0x48, 0x89, 0x45, 0xe8,                   /*2c: mov     %rax, -0x18(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*30: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*34: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*38: mov     0x18(%rax), %rax         */
  0x8b, 0x48, 0x50,                         /*3c: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x20,                   /*3f: mov     0x20(%rax), %rax         */
  0x3b, 0x48, 0x20,                         /*43: cmp     0x20(%rax), %ecx         */
  0x7f, 0x64,                               /*46: jg      ac                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*48: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*4c: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*50: mov     0x18(%rax), %rax         */
  0x83, 0x78, 0x50, 0x00,                   /*54: cmpl    $0x0, 0x50(%rax)         */
  0x74, 0x11,                               /*58: je      6b                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*5a: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*5e: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*62: mov     0x18(%rax), %rax         */
  0xd1, 0x60, 0x50,                         /*66: shll    0x50(%rax)               */
  0xeb, 0x13,                               /*69: jmp     7e                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*6b: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*6f: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*73: mov     0x18(%rax), %rax         */
  0xc7, 0x40, 0x50, 0x10, 0x00, 0x00, 0x00, /*77: movl    $0x10, 0x50(%rax)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*7e: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*82: mov     0x58(%rax), %rdi         */
  0x48, 0x8b, 0x47, 0x18,                   /*86: mov     0x18(%rdi), %rax         */
  0x48, 0x8b, 0x70, 0x48,                   /*8a: mov     0x48(%rax), %rsi         */
  0x48, 0x63, 0x50, 0x50,                   /*8e: movslq  0x50(%rax), %rdx         */
  0x48, 0xc1, 0xe2, 0x03,                   /*92: shl     $0x3, %rdx               */
  0xff, 0x93, 0x28, 0x01, 0x00, 0x00,       /*96: callq   *0x128(%rbx)             */
  0x48, 0x8b, 0x4d, 0xf0,                   /*9c: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*a0: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*a4: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x48,                   /*a8: mov     %rax, 0x48(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*ac: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xf0,                   /*b0: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*b4: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*b8: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*bc: mov     0x20(%rcx), %rcx         */
  0x48, 0x63, 0x51, 0x20,                   /*c0: movslq  0x20(%rcx), %rdx         */
  0x8d, 0x72, 0x01,                         /*c4: lea     0x1(%rdx), %esi          */
  0x89, 0x71, 0x20,                         /*c7: mov     %esi, 0x20(%rcx)         */
  0x48, 0x8b, 0x4d, 0xf0,                   /*ca: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*ce: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*d2: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x48,                   /*d6: mov     0x48(%rcx), %rcx         */
  0x48, 0x89, 0x04, 0xd1,                   /*da: mov     %rax, (%rcx, %rdx, 8)    */
  0x48, 0x8b, 0x45, 0xf0,                   /*de: mov     -0x10(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*e2: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*e5: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*e9: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x18,                   /*ef: add     $0x18, %rsp              */
  0x5b,                                     /*f3: pop     %rbx                     */
  0x5d,                                     /*f4: pop     %rbp                     */
};


static uint8_t op_epop[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x28,                   /*05: sub     $0x28, %rsp              */
  0x48, 0x89, 0xfb,                         /*09: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5d, 0xf0,                   /*0c: mov     %rbx, -0x10(%rbp)        */
  0x8b, 0x43, 0x60,                         /*10: mov     0x60(%rbx), %eax         */
  0xc1, 0xe8, 0x17,                         /*13: shr     $0x17, %eax              */
  0x89, 0x45, 0xec,                         /*16: mov     %eax, -0x14(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*19: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*1d: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*21: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*25: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xe0,                   /*29: mov     %rax, -0x20(%rbp)        */
  0x8b, 0x40, 0x20,                         /*2d: mov     0x20(%rax), %eax         */
  0x89, 0x45, 0xd8,                         /*30: mov     %eax, -0x28(%rbp)        */
  0xc7, 0x45, 0xdc, 0x00, 0x00, 0x00, 0x00, /*33: movl    $0x0, -0x24(%rbp)        */
  0xeb, 0x2e,                               /*3a: jmp     6a                       */
  0x0f, 0x1f, 0x40, 0x00,                   /*3c: nopl    0x0(%rax)                */
  0x48, 0x8b, 0x45, 0xf0,                   /*40: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*44: mov     0x58(%rax), %rdi         */
  0x8b, 0x75, 0xd8,                         /*48: mov     -0x28(%rbp), %esi        */
  0xff, 0xce,                               /*4b: dec     %esi                     */
  0x89, 0x75, 0xd8,                         /*4d: mov     %esi, -0x28(%rbp)        */
  0xff, 0x93, 0x18, 0x02, 0x00, 0x00,       /*50: callq   *0x218(%rbx)             */
  0x48, 0x8b, 0x45, 0xf0,                   /*56: mov     -0x10(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*5a: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*5d: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*61: mov     %ecx, 0xdc(%rax)         */
  0xff, 0x45, 0xdc,                         /*67: incl    -0x24(%rbp)              */
  0x8b, 0x45, 0xdc,                         /*6a: mov     -0x24(%rbp), %eax        */
  0x3b, 0x45, 0xec,                         /*6d: cmp     -0x14(%rbp), %eax        */
  0x7d, 0x1e,                               /*70: jge     90                       */
  0x8b, 0x45, 0xd8,                         /*72: mov     -0x28(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*75: mov     -0x20(%rbp), %rcx        */
  0x3b, 0x41, 0xd0,                         /*79: cmp     -0x30(%rcx), %eax        */
  0x0f, 0x9f, 0xc0,                         /*7c: setg    %al                      */
  0xeb, 0x11,                               /*7f: jmp     92                       */
  0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x2e, /*81: data16  data16                   */
  0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, /*88:                                  */
  0x00,                                     /*8f:                                  */
  0x31, 0xc0,                               /*90: xor     %eax, %eax               */
  0x84, 0xc0,                               /*92: test    %al, %al                 */
  0x75, 0xaa,                               /*94: jne     40                       */
  0x48, 0x83, 0xc4, 0x28,                   /*96: add     $0x28, %rsp              */
  0x5b,                                     /*9a: pop     %rbx                     */
  0x5d,                                     /*9b: pop     %rbp                     */
};


static uint8_t op_send[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x81, 0xec, 0x88, 0x00, 0x00, 0x00, /*05: sub     $0x88, %rsp              */
  0x48, 0x89, 0xfb,                         /*0c: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5d, 0xf0,                   /*0f: mov     %rbx, -0x10(%rbp)        */
  0x8b, 0x43, 0x60,                         /*13: mov     0x60(%rbx), %eax         */
  0xc1, 0xe8, 0x17,                         /*16: shr     $0x17, %eax              */
  0x89, 0x45, 0xec,                         /*19: mov     %eax, -0x14(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*1c: mov     -0x10(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*20: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*23: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*26: and     $0x7f, %eax              */
  0x89, 0x45, 0xe8,                         /*29: mov     %eax, -0x18(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*2c: mov     -0x10(%rbp), %rax        */
  0x8b, 0x48, 0x60,                         /*30: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x0e,                         /*33: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*36: and     $0x1ff, %ecx             */
  0x48, 0x8b, 0x40, 0x28,                   /*3c: mov     0x28(%rax), %rax         */
  0x8b, 0x04, 0x88,                         /*40: mov     (%rax, %rcx, 4), %eax    */
  0x89, 0x45, 0xac,                         /*43: mov     %eax, -0x54(%rbp)        */
  0x48, 0x63, 0x45, 0xec,                   /*46: movslq  -0x14(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xf0,                   /*4a: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*4e: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*52: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*56: mov     (%rcx, %rax, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*5a: mov     0x8(%rcx, %rax, 1), %rax */
  0x48, 0x89, 0x45, 0xc8,                   /*5f: mov     %rax, -0x38(%rbp)        */
  0x48, 0x89, 0x55, 0xc0,                   /*63: mov     %rdx, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*67: mov     -0x10(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*6b: mov     0x60(%rax), %eax         */
  0x83, 0xe0, 0x7f,                         /*6e: and     $0x7f, %eax              */
  0x83, 0xf8, 0x21,                         /*71: cmp     $0x21, %eax              */
  0x74, 0x76,                               /*74: je      ec                       */
  0x83, 0x7d, 0xe8, 0x7f,                   /*76: cmpl    $0x7f, -0x18(%rbp)       */
  0x75, 0x32,                               /*7a: jne     ae                       */
  0x48, 0x63, 0x45, 0xec,                   /*7c: movslq  -0x14(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*80: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xf0,                   /*84: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*88: mov     0x18(%rcx), %rcx         */
  0xc7, 0x44, 0x08, 0x28, 0x00, 0x00, 0x00, /*8c: movl    $0x0, 0x28(%rax, %rcx, 1) */
  0x00,                                     /*93:                                  */
  0x48, 0x63, 0x45, 0xec,                   /*94: movslq  -0x14(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*98: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xf0,                   /*9c: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*a0: mov     0x18(%rcx), %rcx         */
  0xc7, 0x44, 0x08, 0x20, 0x00, 0x00, 0x00, /*a4: movl    $0x0, 0x20(%rax, %rcx, 1) */
  0x00,                                     /*ab:                                  */
  0xeb, 0x3e,                               /*ac: jmp     ec                       */
  0x48, 0x63, 0x45, 0xec,                   /*ae: movslq  -0x14(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xe8,                   /*b2: movslq  -0x18(%rbp), %rcx        */
  0x48, 0x01, 0xc1,                         /*b6: add     %rax, %rcx               */
  0x48, 0xc1, 0xe1, 0x04,                   /*b9: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x45, 0xf0,                   /*bd: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*c1: mov     0x18(%rax), %rax         */
  0xc7, 0x44, 0x01, 0x18, 0x00, 0x00, 0x00, /*c5: movl    $0x0, 0x18(%rcx, %rax, 1) */
  0x00,                                     /*cc:                                  */
  0x48, 0x63, 0x45, 0xec,                   /*cd: movslq  -0x14(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xe8,                   /*d1: movslq  -0x18(%rbp), %rcx        */
  0x48, 0x01, 0xc1,                         /*d5: add     %rax, %rcx               */
  0x48, 0xc1, 0xe1, 0x04,                   /*d8: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x45, 0xf0,                   /*dc: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*e0: mov     0x18(%rax), %rax         */
  0xc7, 0x44, 0x01, 0x10, 0x00, 0x00, 0x00, /*e4: movl    $0x0, 0x10(%rcx, %rax, 1) */
  0x00,                                     /*eb:                                  */
  0x48, 0x8b, 0x45, 0xf0,                   /*ec: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*f0: mov     0x58(%rax), %rdi         */
  0x48, 0x8b, 0x75, 0xc0,                   /*f4: mov     -0x40(%rbp), %rsi        */
  0x8b, 0x55, 0xc8,                         /*f8: mov     -0x38(%rbp), %edx        */
  0xff, 0x93, 0x98, 0x02, 0x00, 0x00,       /*fb: callq   *0x298(%rbx)             */
  0x48, 0x89, 0x45, 0xd8,                   /*101: mov     %rax, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*105: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*109: mov     0x58(%rax), %rdi         */
  0x8b, 0x55, 0xac,                         /*10d: mov     -0x54(%rbp), %edx        */
  0x48, 0x8d, 0x75, 0xd8,                   /*110: lea     -0x28(%rbp), %rsi        */
  0xff, 0x93, 0xd0, 0x00, 0x00, 0x00,       /*114: callq   *0xd0(%rbx)              */
  0x48, 0x89, 0x45, 0xe0,                   /*11a: mov     %rax, -0x20(%rbp)        */
  0x48, 0x85, 0xc0,                         /*11e: test    %rax, %rax               */
  0x0f, 0x85, 0xcb, 0x00, 0x00, 0x00,       /*121: jne     1f2                      */
  0x8b, 0x7d, 0xac,                         /*127: mov     -0x54(%rbp), %edi        */
  0xff, 0x93, 0x50, 0x01, 0x00, 0x00,       /*12a: callq   *0x150(%rbx)             */
  0x48, 0x89, 0x45, 0x98,                   /*130: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*134: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*137: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*13b: mov     0x58(%rax), %rdi         */
  0x48, 0x8b, 0xb3, 0xb0, 0x02, 0x00, 0x00, /*13f: mov     0x2b0(%rbx), %rsi        */
  0xba, 0x0e, 0x00, 0x00, 0x00,             /*146: mov     $0xe, %edx               */
  0xff, 0x93, 0xa0, 0x02, 0x00, 0x00,       /*14b: callq   *0x2a0(%rbx)             */
  0x89, 0x45, 0xac,                         /*151: mov     %eax, -0x54(%rbp)        */
  0x48, 0x8b, 0x4d, 0xf0,                   /*154: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x79, 0x58,                   /*158: mov     0x58(%rcx), %rdi         */
  0x48, 0x8d, 0x75, 0xd8,                   /*15c: lea     -0x28(%rbp), %rsi        */
  0x89, 0xc2,                               /*160: mov     %eax, %edx               */
  0xff, 0x93, 0xd0, 0x00, 0x00, 0x00,       /*162: callq   *0xd0(%rbx)              */
  0x48, 0x89, 0x45, 0xe0,                   /*168: mov     %rax, -0x20(%rbp)        */
  0x83, 0x7d, 0xe8, 0x7f,                   /*16c: cmpl    $0x7f, -0x18(%rbp)       */
  0x75, 0x34,                               /*170: jne     1a6                      */
  0x48, 0x8b, 0x45, 0xf0,                   /*172: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x18,                   /*176: mov     0x18(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x58,                   /*17a: mov     0x58(%rax), %rdi         */
  0x48, 0x63, 0x45, 0xec,                   /*17e: movslq  -0x14(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*182: shl     $0x4, %rax               */
  0x48, 0x8b, 0x74, 0x08, 0x10,             /*186: mov     0x10(%rax, %rcx, 1), %rsi */
  0x8b, 0x54, 0x08, 0x18,                   /*18b: mov     0x18(%rax, %rcx, 1), %edx */
  0x48, 0x8b, 0x4d, 0x98,                   /*18f: mov     -0x68(%rbp), %rcx        */
  0x44, 0x8b, 0x45, 0xa0,                   /*193: mov     -0x60(%rbp), %r8d        */
  0xff, 0x93, 0x38, 0x02, 0x00, 0x00,       /*197: callq   *0x238(%rbx)             */
  0x48, 0x89, 0x45, 0x88,                   /*19d: mov     %rax, -0x78(%rbp)        */
  0x89, 0x55, 0x90,                         /*1a1: mov     %edx, -0x70(%rbp)        */
  0xeb, 0x4c,                               /*1a4: jmp     1f2                      */
  0x48, 0x8b, 0x45, 0xf0,                   /*1a6: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1aa: mov     0x18(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xec,                   /*1ae: movslq  -0x14(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*1b2: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x7c, 0x08, 0x20,             /*1b6: lea     0x20(%rax, %rcx, 1), %rdi */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*1bb: lea     0x10(%rax, %rcx, 1), %rsi */
  0x48, 0x63, 0x55, 0xe8,                   /*1c0: movslq  -0x18(%rbp), %rdx        */
  0x48, 0xff, 0xc2,                         /*1c4: inc     %rdx                     */
  0x89, 0x55, 0xe8,                         /*1c7: mov     %edx, -0x18(%rbp)        */
  0xff, 0x93, 0xa8, 0x00, 0x00, 0x00,       /*1ca: callq   *0xa8(%rbx)              */
  0x48, 0x63, 0x45, 0xec,                   /*1d0: movslq  -0x14(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1d4: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xf0,                   /*1d8: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*1dc: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x55, 0x98,                   /*1e0: mov     -0x68(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xa0,                   /*1e4: mov     -0x60(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x18,             /*1e8: mov     %rsi, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x54, 0x08, 0x10,             /*1ed: mov     %rdx, 0x10(%rax, %rcx, 1) */
  0x48, 0x8b, 0x45, 0xf0,                   /*1f2: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*1f6: mov     0x58(%rax), %rdi         */
  0xff, 0x93, 0xe8, 0x00, 0x00, 0x00,       /*1fa: callq   *0xe8(%rbx)              */
  0x48, 0x89, 0x45, 0xd0,                   /*200: mov     %rax, -0x30(%rbp)        */
  0x8b, 0x4d, 0xac,                         /*204: mov     -0x54(%rbp), %ecx        */
  0x89, 0x08,                               /*207: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x45, 0xe0,                   /*209: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*20d: mov     -0x30(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*211: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xf0,                   /*215: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*219: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*21d: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*221: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xd0,                   /*225: mov     -0x30(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*229: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*22d: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*231: mov     -0x30(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*235: mov     %rax, 0x48(%rcx)         */
  0x48, 0x8b, 0x45, 0xf0,                   /*239: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*23d: mov     0x10(%rax), %rax         */
  0x48, 0x83, 0xc0, 0x04,                   /*241: add     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xd0,                   /*245: mov     -0x30(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x30,                   /*249: mov     %rax, 0x30(%rcx)         */
  0x8b, 0x45, 0xec,                         /*24d: mov     -0x14(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*250: mov     -0x30(%rbp), %rcx        */
  0x89, 0x41, 0x44,                         /*254: mov     %eax, 0x44(%rcx)         */
  0x48, 0x8b, 0x45, 0xf0,                   /*257: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*25b: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*25f: mov     0x18(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xec,                   /*263: movslq  -0x14(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*267: shl     $0x4, %rcx               */
  0x48, 0x01, 0x48, 0x08,                   /*26b: add     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xe0,                   /*26f: mov     -0x20(%rbp), %rax        */
  0x8b, 0x00,                               /*273: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*275: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*278: test    $0x80, %al               */
  0x74, 0x25,                               /*27a: je      2a1                      */
  0x83, 0x7d, 0xe8, 0x7f,                   /*27c: cmpl    $0x7f, -0x18(%rbp)       */
  0x0f, 0x85, 0xc2, 0x00, 0x00, 0x00,       /*280: jne     348                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*286: mov     -0x30(%rbp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*28a: movl    $0xffffffff, 0x40(%rax)  */
  0x48, 0x8b, 0x45, 0xd0,                   /*291: mov     -0x30(%rbp), %rax        */
  0xc7, 0x40, 0x18, 0x03, 0x00, 0x00, 0x00, /*295: movl    $0x3, 0x18(%rax)         */
  0xe9, 0xbe, 0x00, 0x00, 0x00,             /*29c: jmpq    35f                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*2a1: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xf0,                   /*2a5: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*2a9: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*2ad: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*2b1: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x08,                   /*2b5: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x4d, 0xf0,                   /*2b9: mov     -0x10(%rbp), %rcx        */
  0x48, 0x89, 0x01,                         /*2bd: mov     %rax, (%rcx)             */
  0x48, 0x8b, 0x45, 0xe0,                   /*2c0: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2c4: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xf0,                   /*2c8: mov     -0x10(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*2cc: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xf0,                   /*2d0: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*2d4: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x10,                   /*2d8: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x20,                   /*2dc: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xf0,                   /*2e0: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*2e4: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*2e8: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*2ec: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xf0,                   /*2f0: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*2f4: mov     0x8(%rax), %rax          */
  0x0f, 0xb7, 0x40, 0x02,                   /*2f8: movzwl  0x2(%rax), %eax          */
  0x48, 0x8b, 0x4d, 0xd0,                   /*2fc: mov     -0x30(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*300: mov     %eax, 0x18(%rcx)         */
  0x83, 0x7d, 0xe8, 0x7f,                   /*303: cmpl    $0x7f, -0x18(%rbp)       */
  0x0f, 0x85, 0x7a, 0x01, 0x00, 0x00,       /*307: jne     487                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*30d: mov     -0x30(%rbp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*311: movl    $0xffffffff, 0x40(%rax)  */
  0x48, 0x8b, 0x45, 0xf0,                   /*318: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*31c: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x78, 0x58,                   /*320: mov     0x58(%rax), %rdi         */
  0x0f, 0xb7, 0x41, 0x02,                   /*324: movzwl  0x2(%rcx), %eax          */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*328: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*32d: cmp     $0x3, %eax               */
  0x7c, 0x0c,                               /*330: jl      33e                      */
  0x48, 0x8b, 0x45, 0xf0,                   /*332: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*336: mov     0x8(%rax), %rax          */
  0x0f, 0xb7, 0x70, 0x02,                   /*33a: movzwl  0x2(%rax), %esi          */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*33e: mov     $0x3, %edx               */
  0xe9, 0x5f, 0x01, 0x00, 0x00,             /*343: jmpq    4a7                      */
  0x8b, 0x45, 0xe8,                         /*348: mov     -0x18(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*34b: mov     -0x30(%rbp), %rcx        */
  0x89, 0x41, 0x40,                         /*34f: mov     %eax, 0x40(%rcx)         */
  0x8b, 0x45, 0xe8,                         /*352: mov     -0x18(%rbp), %eax        */
  0x83, 0xc0, 0x02,                         /*355: add     $0x2, %eax               */
  0x48, 0x8b, 0x4d, 0xd0,                   /*358: mov     -0x30(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*35c: mov     %eax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*35f: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xf0,                   /*363: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x79, 0x58,                   /*367: mov     0x58(%rcx), %rdi         */
  0x48, 0x8b, 0x75, 0xc0,                   /*36b: mov     -0x40(%rbp), %rsi        */
  0x8b, 0x55, 0xc8,                         /*36f: mov     -0x38(%rbp), %edx        */
  0xff, 0x50, 0x18,                         /*372: callq   *0x18(%rax)              */
  0x48, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, /*375: mov     %rax, -0x88(%rbp)        */
  0x89, 0x55, 0x80,                         /*37c: mov     %edx, -0x80(%rbp)        */
  0x48, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, /*37f: mov     -0x88(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x80,                   /*386: mov     -0x80(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xb8,                   /*38a: mov     %rcx, -0x48(%rbp)        */
  0x48, 0x89, 0x45, 0xb0,                   /*38e: mov     %rax, -0x50(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*392: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*396: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*39a: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*39e: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xb0,                   /*3a2: mov     -0x50(%rbp), %rcx        */
  0x48, 0x8b, 0x55, 0xb8,                   /*3a6: mov     -0x48(%rbp), %rdx        */
  0x48, 0x89, 0x50, 0x08,                   /*3aa: mov     %rdx, 0x8(%rax)          */
  0x48, 0x89, 0x08,                         /*3ae: mov     %rcx, (%rax)             */
  0x48, 0x8b, 0x45, 0xf0,                   /*3b1: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*3b5: mov     0x58(%rax), %rdi         */
  0x8b, 0x70, 0x50,                         /*3b9: mov     0x50(%rax), %esi         */
  0xff, 0x93, 0x10, 0x01, 0x00, 0x00,       /*3bc: callq   *0x110(%rbx)             */
  0x48, 0x8b, 0x45, 0xf0,                   /*3c2: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*3c6: mov     0x58(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*3ca: cmpq    $0x0, 0x28(%rax)         */
  0x74, 0x0f,                               /*3cf: je      3e0                      */
  0x48, 0x8b, 0x7d, 0xf0,                   /*3d1: mov     -0x10(%rbp), %rdi        */
  0xff, 0x93, 0xc8, 0x01, 0x00, 0x00,       /*3d5: callq   *0x1c8(%rbx)             */
  0xe9, 0xf1, 0x00, 0x00, 0x00,             /*3db: jmpq    4d1                      */
  0x48, 0x8b, 0x45, 0xf0,                   /*3e0: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*3e4: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*3e8: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*3ec: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xd0,                   /*3f0: mov     %rax, -0x30(%rbp)        */
  0x48, 0x83, 0x78, 0x48, 0x00,             /*3f4: cmpq    $0x0, 0x48(%rax)         */
  0x75, 0x4c,                               /*3f9: jne     447                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*3fb: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0xb8,                   /*3ff: mov     -0x48(%rax), %rax        */
  0x0f, 0xba, 0x20, 0x12,                   /*403: btl     $0x12, (%rax)            */
  0x72, 0x3e,                               /*407: jb      447                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*409: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0xb8,                   /*40d: mov     -0x48(%rax), %rax        */
  0x48, 0x8b, 0x4d, 0xf0,                   /*411: mov     -0x10(%rbp), %rcx        */
  0x48, 0x89, 0x01,                         /*415: mov     %rax, (%rcx)             */
  0x48, 0x8b, 0x45, 0xf0,                   /*418: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x08,                         /*41c: mov     (%rax), %rcx             */
  0x48, 0x8b, 0x49, 0x18,                   /*41f: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x08,                   /*423: mov     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xf0,                   /*427: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*42b: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x10,                   /*42f: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x20,                   /*433: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xf0,                   /*437: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*43b: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*43f: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*443: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*447: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*44b: mov     0x10(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xf0,                   /*44f: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*453: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*457: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x08,                   /*45b: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x4d, 0xf0,                   /*45f: mov     -0x10(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*463: mov     %rax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*467: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x30,                   /*46b: mov     0x30(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xf0,                   /*46f: mov     -0x10(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*473: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xf0,                   /*477: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*47b: mov     0x58(%rax), %rdi         */
  0xff, 0x93, 0x60, 0x01, 0x00, 0x00,       /*47f: callq   *0x160(%rbx)             */
  0xeb, 0x4a,                               /*485: jmp     4d1                      */
  0x8b, 0x45, 0xe8,                         /*487: mov     -0x18(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*48a: mov     -0x30(%rbp), %rcx        */
  0x89, 0x41, 0x40,                         /*48e: mov     %eax, 0x40(%rcx)         */
  0x48, 0x8b, 0x45, 0xf0,                   /*491: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*495: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x78, 0x58,                   /*499: mov     0x58(%rax), %rdi         */
  0x0f, 0xb7, 0x71, 0x02,                   /*49d: movzwl  0x2(%rcx), %esi          */
  0x8b, 0x55, 0xe8,                         /*4a1: mov     -0x18(%rbp), %edx        */
  0x83, 0xc2, 0x02,                         /*4a4: add     $0x2, %edx               */
  0xff, 0x93, 0x40, 0x01, 0x00, 0x00,       /*4a7: callq   *0x140(%rbx)             */
  0x48, 0x8b, 0x45, 0xf0,                   /*4ad: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*4b1: mov     0x58(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*4b5: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*4b9: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x18,                   /*4bd: mov     %rcx, 0x18(%rax)         */
  0x48, 0x8b, 0x45, 0xf0,                   /*4c1: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*4c5: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x08,                   /*4c9: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x10,                   /*4cd: mov     %rcx, 0x10(%rax)         */
  0x48, 0x81, 0xc4, 0x88, 0x00, 0x00, 0x00, /*4d1: add     $0x88, %rsp              */
  0x5b,                                     /*4d8: pop     %rbx                     */
  0x5d,                                     /*4d9: pop     %rbp                     */
};


static uint8_t op_sendb[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x48, 0x89, 0x7d, 0xf8,                   /*08: mov     %rdi, -0x8(%rbp)         */
  0xff, 0x97, 0x60, 0x02, 0x00, 0x00,       /*0c: callq   *0x260(%rdi)             */
  0x48, 0x83, 0xc4, 0x10,                   /*12: add     $0x10, %rsp              */
  0x5d,                                     /*16: pop     %rbp                     */
};


static uint8_t op_fsend[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x5d,                                     /*08: pop     %rbp                     */
};


static uint8_t op_call[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x50,                   /*07: sub     $0x50, %rsp              */
  0x48, 0x89, 0xfb,                         /*0b: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5d, 0xe8,                   /*0e: mov     %rbx, -0x18(%rbp)        */
  0x48, 0x8b, 0x43, 0x58,                   /*12: mov     0x58(%rbx), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*16: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*1a: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x08,                         /*1e: mov     (%rax), %rcx             */
  0x48, 0x8b, 0x40, 0x08,                   /*21: mov     0x8(%rax), %rax          */
  0x48, 0x89, 0x45, 0xd8,                   /*25: mov     %rax, -0x28(%rbp)        */
  0x48, 0x89, 0x4d, 0xd0,                   /*29: mov     %rcx, -0x30(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*2d: mov     -0x30(%rbp), %rax        */
  0x48, 0x89, 0x45, 0xc8,                   /*31: mov     %rax, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*35: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*39: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*3d: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*41: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xe0,                   /*45: mov     %rax, -0x20(%rbp)        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*49: mov     -0x38(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*4d: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x48,                   /*51: mov     %rcx, 0x48(%rax)         */
  0x48, 0x8b, 0x45, 0xc8,                   /*55: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*59: mov     -0x20(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*5d: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xc8,                   /*61: mov     -0x38(%rbp), %rax        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*65: cmpq    $0x0, 0x28(%rax)         */
  0x74, 0x4a,                               /*6a: je      b6                       */
  0x48, 0x8b, 0x45, 0xc8,                   /*6c: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x28,                   /*70: mov     0x28(%rax), %rax         */
  0x83, 0x78, 0x20, 0x00,                   /*74: cmpl    $0x0, 0x20(%rax)         */
  0x74, 0x11,                               /*78: je      8b                       */
  0x48, 0x8b, 0x45, 0xc8,                   /*7a: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x28,                   /*7e: mov     0x28(%rax), %rax         */
  0x8b, 0x40, 0x20,                         /*82: mov     0x20(%rax), %eax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*85: mov     -0x20(%rbp), %rcx        */
  0x89, 0x01,                               /*89: mov     %eax, (%rcx)             */
  0x48, 0x8b, 0x45, 0xc8,                   /*8b: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x28,                   /*8f: mov     0x28(%rax), %rax         */
  0x48, 0x83, 0x78, 0x18, 0x00,             /*93: cmpq    $0x0, 0x18(%rax)         */
  0x75, 0x1c,                               /*98: jne     b6                       */
  0x48, 0x8b, 0x45, 0xe8,                   /*9a: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*9e: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*a2: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*a6: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xc8,                   /*aa: mov     -0x38(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*ae: mov     0x28(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x18,                   /*b2: mov     %rax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xc8,                   /*b6: mov     -0x38(%rbp), %rax        */
  0x8b, 0x00,                               /*ba: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*bc: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*bf: test    $0x80, %al               */
  0x74, 0x60,                               /*c1: je      123                      */
  0x48, 0x8b, 0x45, 0xc8,                   /*c3: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*c7: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x79, 0x58,                   /*cb: mov     0x58(%rcx), %rdi         */
  0x48, 0x8b, 0x75, 0xd0,                   /*cf: mov     -0x30(%rbp), %rsi        */
  0x8b, 0x55, 0xd8,                         /*d3: mov     -0x28(%rbp), %edx        */
  0xff, 0x50, 0x18,                         /*d6: callq   *0x18(%rax)              */
  0x48, 0x89, 0x45, 0xb8,                   /*d9: mov     %rax, -0x48(%rbp)        */
  0x89, 0x55, 0xc0,                         /*dd: mov     %edx, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xb8,                   /*e0: mov     -0x48(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*e4: mov     -0x40(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xd8,                   /*e8: mov     %rcx, -0x28(%rbp)        */
  0x48, 0x89, 0x45, 0xd0,                   /*ec: mov     %rax, -0x30(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*f0: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*f4: mov     0x58(%rax), %rdi         */
  0x8b, 0x70, 0x50,                         /*f8: mov     0x50(%rax), %esi         */
  0xff, 0x93, 0x10, 0x01, 0x00, 0x00,       /*fb: callq   *0x110(%rbx)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*101: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*105: mov     0x58(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*109: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x84, 0x99, 0x00, 0x00, 0x00,       /*10e: je      1ad                      */
  0x48, 0x8b, 0x7d, 0xe8,                   /*114: mov     -0x18(%rbp), %rdi        */
  0xff, 0x93, 0xc8, 0x01, 0x00, 0x00,       /*118: callq   *0x1c8(%rbx)             */
  0xe9, 0xed, 0x01, 0x00, 0x00,             /*11e: jmpq    310                      */
  0x48, 0x8b, 0x45, 0xc8,                   /*123: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*127: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x01,                         /*12b: mov     %rax, (%rcx)             */
  0x48, 0x8b, 0x45, 0xc8,                   /*12e: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*132: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*136: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*13a: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xe8,                   /*13e: mov     -0x18(%rbp), %rax        */
  0x48, 0x83, 0x78, 0x08, 0x00,             /*142: cmpq    $0x0, 0x8(%rax)          */
  0x0f, 0x84, 0x14, 0x01, 0x00, 0x00,       /*147: je      261                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*14d: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*151: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x10,                   /*155: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x20,                   /*159: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*15d: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*161: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*165: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*169: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*16d: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*171: mov     0x8(%rax), %rax          */
  0x0f, 0xb7, 0x40, 0x02,                   /*175: movzwl  0x2(%rax), %eax          */
  0x48, 0x8b, 0x4d, 0xe0,                   /*179: mov     -0x20(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*17d: mov     %eax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*180: mov     -0x20(%rbp), %rax        */
  0x83, 0x78, 0x40, 0x00,                   /*184: cmpl    $0x0, 0x40(%rax)         */
  0x0f, 0x88, 0x0b, 0x01, 0x00, 0x00,       /*188: js      299                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*18e: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*192: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x78, 0x58,                   /*196: mov     0x58(%rax), %rdi         */
  0x0f, 0xb7, 0x71, 0x02,                   /*19a: movzwl  0x2(%rcx), %esi          */
  0x48, 0x8b, 0x45, 0xe0,                   /*19e: mov     -0x20(%rbp), %rax        */
  0x8b, 0x50, 0x40,                         /*1a2: mov     0x40(%rax), %edx         */
  0x83, 0xc2, 0x02,                         /*1a5: add     $0x2, %edx               */
  0xe9, 0x17, 0x01, 0x00, 0x00,             /*1a8: jmpq    2c4                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*1ad: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*1b1: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*1b5: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*1b9: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xe0,                   /*1bd: mov     %rax, -0x20(%rbp)        */
  0x48, 0x8b, 0x40, 0x10,                   /*1c1: mov     0x10(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1c5: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*1c9: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1cd: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x08,                   /*1d1: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1d5: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*1d9: mov     %rax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*1dd: mov     -0x20(%rbp), %rax        */
  0x48, 0x63, 0x40, 0x44,                   /*1e1: movslq  0x44(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1e5: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*1e9: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*1ed: shl     $0x4, %rax               */
  0x48, 0x8b, 0x55, 0xd0,                   /*1f1: mov     -0x30(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xd8,                   /*1f5: mov     -0x28(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*1f9: mov     %rsi, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x14, 0x01,                   /*1fe: mov     %rdx, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xe0,                   /*202: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x30,                   /*206: mov     0x30(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*20a: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*20e: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*212: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*216: mov     0x58(%rax), %rdi         */
  0xff, 0x93, 0x60, 0x01, 0x00, 0x00,       /*21a: callq   *0x160(%rbx)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*220: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*224: mov     0x58(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*228: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*22c: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*230: mov     0x8(%rcx), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*234: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x08,                   /*238: mov     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xe8,                   /*23c: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*240: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x10,                   /*244: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x20,                   /*248: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*24c: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*250: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*254: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*258: mov     %rcx, 0x28(%rax)         */
  0xe9, 0xaf, 0x00, 0x00, 0x00,             /*25c: jmpq    310                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*261: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*265: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*269: mov     0x18(%rax), %rax         */
  0x4c, 0x8b, 0x70, 0x08,                   /*26d: mov     0x8(%rax), %r14          */
  0xff, 0x93, 0xb8, 0x00, 0x00, 0x00,       /*271: callq   *0xb8(%rbx)              */
  0x48, 0x89, 0x45, 0xa8,                   /*277: mov     %rax, -0x58(%rbp)        */
  0x89, 0x55, 0xb0,                         /*27b: mov     %edx, -0x50(%rbp)        */
  0x48, 0x8b, 0x45, 0xa8,                   /*27e: mov     -0x58(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb0,                   /*282: mov     -0x50(%rbp), %rcx        */
  0x49, 0x89, 0x4e, 0x08,                   /*286: mov     %rcx, 0x8(%r14)          */
  0x49, 0x89, 0x06,                         /*28a: mov     %rax, (%r14)             */
  0x48, 0x8b, 0x7d, 0xe8,                   /*28d: mov     -0x18(%rbp), %rdi        */
  0xff, 0x93, 0x88, 0x00, 0x00, 0x00,       /*291: callq   *0x88(%rbx)              */
  0xeb, 0x77,                               /*297: jmp     310                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*299: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*29d: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x78, 0x58,                   /*2a1: mov     0x58(%rax), %rdi         */
  0x0f, 0xb7, 0x41, 0x02,                   /*2a5: movzwl  0x2(%rcx), %eax          */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*2a9: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*2ae: cmp     $0x3, %eax               */
  0x7c, 0x0c,                               /*2b1: jl      2bf                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*2b3: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*2b7: mov     0x8(%rax), %rax          */
  0x0f, 0xb7, 0x70, 0x02,                   /*2bb: movzwl  0x2(%rax), %esi          */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*2bf: mov     $0x3, %edx               */
  0xff, 0x93, 0x40, 0x01, 0x00, 0x00,       /*2c4: callq   *0x140(%rbx)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*2ca: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*2ce: mov     0x58(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*2d2: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*2d6: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x18,                   /*2da: mov     %rcx, 0x18(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*2de: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2e2: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xc8,                   /*2e6: mov     -0x38(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*2ea: mov     0x28(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*2ee: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x11,                         /*2f2: mov     (%rcx), %rdx             */
  0x48, 0x8b, 0x49, 0x08,                   /*2f5: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x08,                   /*2f9: mov     %rcx, 0x8(%rax)          */
  0x48, 0x89, 0x10,                         /*2fd: mov     %rdx, (%rax)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*300: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*304: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x08,                   /*308: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x10,                   /*30c: mov     %rcx, 0x10(%rax)         */
  0x48, 0x83, 0xc4, 0x50,                   /*310: add     $0x50, %rsp              */
  0x5b,                                     /*314: pop     %rbx                     */
  0x41, 0x5e,                               /*315: pop     %r14                     */
  0x5d,                                     /*317: pop     %rbp                     */
};


static uint8_t op_super[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x41, 0x55,                               /*08: push    %r13                     */
  0x41, 0x54,                               /*0a: push    %r12                     */
  0x53,                                     /*0c: push    %rbx                     */
  0x48, 0x83, 0xec, 0x78,                   /*0d: sub     $0x78, %rsp              */
  0x49, 0x89, 0xfd,                         /*11: mov     %rdi, %r13               */
  0x4c, 0x89, 0x6d, 0xd0,                   /*14: mov     %r13, -0x30(%rbp)        */
  0x49, 0x8b, 0x45, 0x58,                   /*18: mov     0x58(%r13), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*1c: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*20: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xb8,                   /*24: mov     %rax, -0x48(%rbp)        */
  0x8b, 0x00,                               /*28: mov     (%rax), %eax             */
  0x89, 0x45, 0xa4,                         /*2a: mov     %eax, -0x5c(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*2d: mov     -0x30(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*31: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*34: shr     $0x17, %eax              */
  0x89, 0x45, 0xa0,                         /*37: mov     %eax, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*3a: mov     -0x30(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*3e: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*41: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*44: and     $0x7f, %eax              */
  0x89, 0x45, 0x9c,                         /*47: mov     %eax, -0x64(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*4a: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*4e: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x08,                         /*52: mov     (%rax), %rcx             */
  0x48, 0x8b, 0x40, 0x08,                   /*55: mov     0x8(%rax), %rax          */
  0x48, 0x89, 0x45, 0xc8,                   /*59: mov     %rax, -0x38(%rbp)        */
  0x48, 0x89, 0x4d, 0xc0,                   /*5d: mov     %rcx, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*61: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*65: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*69: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*6d: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x48,                   /*71: mov     0x48(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x28,                   /*75: mov     0x28(%rax), %rax         */
  0x48, 0x89, 0x45, 0xa8,                   /*79: mov     %rax, -0x58(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*7d: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*81: mov     0x58(%rax), %rdi         */
  0x8b, 0x55, 0xa4,                         /*85: mov     -0x5c(%rbp), %edx        */
  0x48, 0x8d, 0x75, 0xa8,                   /*88: lea     -0x58(%rbp), %rsi        */
  0x41, 0xff, 0x95, 0xd0, 0x00, 0x00, 0x00, /*8c: callq   *0xd0(%r13)              */
  0x48, 0x89, 0x45, 0xb0,                   /*93: mov     %rax, -0x50(%rbp)        */
  0x48, 0x85, 0xc0,                         /*97: test    %rax, %rax               */
  0x0f, 0x85, 0xea, 0x00, 0x00, 0x00,       /*9a: jne     18a                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*a0: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*a4: mov     0x58(%rax), %rdi         */
  0x49, 0x8b, 0xb5, 0xb0, 0x02, 0x00, 0x00, /*a8: mov     0x2b0(%r13), %rsi        */
  0xba, 0x0e, 0x00, 0x00, 0x00,             /*af: mov     $0xe, %edx               */
  0x41, 0xff, 0x95, 0xa0, 0x02, 0x00, 0x00, /*b4: callq   *0x2a0(%r13)             */
  0x89, 0x45, 0xa4,                         /*bb: mov     %eax, -0x5c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*be: mov     -0x30(%rbp), %rcx        */
  0x48, 0x8b, 0x79, 0x58,                   /*c2: mov     0x58(%rcx), %rdi         */
  0x48, 0x8d, 0x75, 0xa8,                   /*c6: lea     -0x58(%rbp), %rsi        */
  0x89, 0xc2,                               /*ca: mov     %eax, %edx               */
  0x41, 0xff, 0x95, 0xd0, 0x00, 0x00, 0x00, /*cc: callq   *0xd0(%r13)              */
  0x48, 0x89, 0x45, 0xb0,                   /*d3: mov     %rax, -0x50(%rbp)        */
  0x83, 0x7d, 0x9c, 0x7f,                   /*d7: cmpl    $0x7f, -0x64(%rbp)       */
  0x75, 0x50,                               /*db: jne     12d                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*dd: mov     -0x30(%rbp), %rax        */
  0x4c, 0x8b, 0x78, 0x18,                   /*e1: mov     0x18(%rax), %r15         */
  0x4c, 0x8b, 0x70, 0x58,                   /*e5: mov     0x58(%rax), %r14         */
  0x4c, 0x63, 0x65, 0xa0,                   /*e9: movslq  -0x60(%rbp), %r12        */
  0x49, 0xc1, 0xe4, 0x04,                   /*ed: shl     $0x4, %r12               */
  0x48, 0x8b, 0x45, 0xb8,                   /*f1: mov     -0x48(%rbp), %rax        */
  0x8b, 0x38,                               /*f5: mov     (%rax), %edi             */
  0x41, 0xff, 0x95, 0x50, 0x01, 0x00, 0x00, /*f7: callq   *0x150(%r13)             */
  0x41, 0x89, 0xd0,                         /*fe: mov     %edx, %r8d               */
  0x48, 0x89, 0x45, 0x88,                   /*101: mov     %rax, -0x78(%rbp)        */
  0x44, 0x89, 0x45, 0x90,                   /*105: mov     %r8d, -0x70(%rbp)        */
  0x4b, 0x8b, 0x74, 0x3c, 0x10,             /*109: mov     0x10(%r12, %r15, 1), %rsi */
  0x43, 0x8b, 0x54, 0x3c, 0x18,             /*10e: mov     0x18(%r12, %r15, 1), %edx */
  0x48, 0x8b, 0x4d, 0x88,                   /*113: mov     -0x78(%rbp), %rcx        */
  0x4c, 0x89, 0xf7,                         /*117: mov     %r14, %rdi               */
  0x41, 0xff, 0x95, 0x38, 0x02, 0x00, 0x00, /*11a: callq   *0x238(%r13)             */
  0x48, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, /*121: mov     %rax, -0x88(%rbp)        */
  0x89, 0x55, 0x80,                         /*128: mov     %edx, -0x80(%rbp)        */
  0xeb, 0x5d,                               /*12b: jmp     18a                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*12d: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*131: mov     0x18(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xa0,                   /*135: movslq  -0x60(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*139: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x7c, 0x08, 0x20,             /*13d: lea     0x20(%rax, %rcx, 1), %rdi */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*142: lea     0x10(%rax, %rcx, 1), %rsi */
  0x48, 0x63, 0x55, 0x9c,                   /*147: movslq  -0x64(%rbp), %rdx        */
  0x48, 0xff, 0xc2,                         /*14b: inc     %rdx                     */
  0x89, 0x55, 0x9c,                         /*14e: mov     %edx, -0x64(%rbp)        */
  0x41, 0xff, 0x95, 0xa8, 0x00, 0x00, 0x00, /*151: callq   *0xa8(%r13)              */
  0x48, 0x63, 0x45, 0xa0,                   /*158: movslq  -0x60(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*15c: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xd0,                   /*160: mov     -0x30(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*164: mov     0x18(%rcx), %rcx         */
  0xc7, 0x44, 0x08, 0x18, 0x04, 0x00, 0x00, /*168: movl    $0x4, 0x18(%rax, %rcx, 1) */
  0x00,                                     /*16f:                                  */
  0x48, 0x8b, 0x45, 0xb8,                   /*170: mov     -0x48(%rbp), %rax        */
  0x8b, 0x00,                               /*174: mov     (%rax), %eax             */
  0x48, 0x63, 0x4d, 0xa0,                   /*176: movslq  -0x60(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*17a: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xd0,                   /*17e: mov     -0x30(%rbp), %rdx        */
  0x48, 0x8b, 0x52, 0x18,                   /*182: mov     0x18(%rdx), %rdx         */
  0x89, 0x44, 0x11, 0x10,                   /*186: mov     %eax, 0x10(%rcx, %rdx, 1) */
  0x48, 0x8b, 0x45, 0xd0,                   /*18a: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*18e: mov     0x58(%rax), %rdi         */
  0x41, 0xff, 0x95, 0xe8, 0x00, 0x00, 0x00, /*192: callq   *0xe8(%r13)              */
  0x48, 0x89, 0x45, 0xb8,                   /*199: mov     %rax, -0x48(%rbp)        */
  0x8b, 0x4d, 0xa4,                         /*19d: mov     -0x5c(%rbp), %ecx        */
  0x89, 0x08,                               /*1a0: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x45, 0xb0,                   /*1a2: mov     -0x50(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*1a6: mov     -0x48(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*1aa: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xd0,                   /*1ae: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*1b2: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*1b6: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*1ba: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xb8,                   /*1be: mov     -0x48(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*1c2: mov     %rax, 0x10(%rcx)         */
  0x83, 0x7d, 0x9c, 0x7f,                   /*1c6: cmpl    $0x7f, -0x64(%rbp)       */
  0x75, 0x0d,                               /*1ca: jne     1d9                      */
  0x48, 0x8b, 0x45, 0xb8,                   /*1cc: mov     -0x48(%rbp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*1d0: movl    $0xffffffff, 0x40(%rax)  */
  0xeb, 0x0a,                               /*1d7: jmp     1e3                      */
  0x8b, 0x45, 0x9c,                         /*1d9: mov     -0x64(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*1dc: mov     -0x48(%rbp), %rcx        */
  0x89, 0x41, 0x40,                         /*1e0: mov     %eax, 0x40(%rcx)         */
  0x48, 0x8b, 0x45, 0xa8,                   /*1e3: mov     -0x58(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*1e7: mov     -0x48(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*1eb: mov     %rax, 0x48(%rcx)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*1ef: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*1f3: mov     0x10(%rax), %rax         */
  0x48, 0x83, 0xc0, 0x04,                   /*1f7: add     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xb8,                   /*1fb: mov     -0x48(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x30,                   /*1ff: mov     %rax, 0x30(%rcx)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*203: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*207: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*20b: mov     0x18(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xa0,                   /*20f: movslq  -0x60(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*213: shl     $0x4, %rcx               */
  0x48, 0x01, 0x48, 0x08,                   /*217: add     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xd0,                   /*21b: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*21f: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*223: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*227: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xc0,                   /*22b: mov     -0x40(%rbp), %rcx        */
  0x48, 0x8b, 0x55, 0xc8,                   /*22f: mov     -0x38(%rbp), %rdx        */
  0x48, 0x89, 0x50, 0x08,                   /*233: mov     %rdx, 0x8(%rax)          */
  0x48, 0x89, 0x08,                         /*237: mov     %rcx, (%rax)             */
  0x48, 0x8b, 0x45, 0xb0,                   /*23a: mov     -0x50(%rbp), %rax        */
  0x8b, 0x00,                               /*23e: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*240: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*243: test    $0x80, %al               */
  0x74, 0x1a,                               /*245: je      261                      */
  0x83, 0x7d, 0x9c, 0x7f,                   /*247: cmpl    $0x7f, -0x64(%rbp)       */
  0x0f, 0x85, 0xa3, 0x00, 0x00, 0x00,       /*24b: jne     2f4                      */
  0x48, 0x8b, 0x45, 0xb8,                   /*251: mov     -0x48(%rbp), %rax        */
  0xc7, 0x40, 0x18, 0x03, 0x00, 0x00, 0x00, /*255: movl    $0x3, 0x18(%rax)         */
  0xe9, 0xa0, 0x00, 0x00, 0x00,             /*25c: jmpq    301                      */
  0x8b, 0x45, 0xa0,                         /*261: mov     -0x60(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*264: mov     -0x48(%rbp), %rcx        */
  0x89, 0x41, 0x44,                         /*268: mov     %eax, 0x44(%rcx)         */
  0x48, 0x8b, 0x45, 0xb0,                   /*26b: mov     -0x50(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*26f: mov     -0x48(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*273: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xb0,                   /*277: mov     -0x50(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*27b: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xd0,                   /*27f: mov     -0x30(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*283: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xd0,                   /*287: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*28b: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x10,                   /*28f: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x20,                   /*293: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*297: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*29b: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*29f: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*2a3: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*2a7: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*2ab: mov     0x8(%rax), %rax          */
  0x0f, 0xb7, 0x40, 0x02,                   /*2af: movzwl  0x2(%rax), %eax          */
  0x48, 0x8b, 0x4d, 0xb8,                   /*2b3: mov     -0x48(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*2b7: mov     %eax, 0x18(%rcx)         */
  0x83, 0x7d, 0x9c, 0x7f,                   /*2ba: cmpl    $0x7f, -0x64(%rbp)       */
  0x0f, 0x85, 0xe5, 0x00, 0x00, 0x00,       /*2be: jne     3a9                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*2c4: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*2c8: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x78, 0x58,                   /*2cc: mov     0x58(%rax), %rdi         */
  0x0f, 0xb7, 0x41, 0x02,                   /*2d0: movzwl  0x2(%rcx), %eax          */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*2d4: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*2d9: cmp     $0x3, %eax               */
  0x7c, 0x0c,                               /*2dc: jl      2ea                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*2de: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*2e2: mov     0x8(%rax), %rax          */
  0x0f, 0xb7, 0x70, 0x02,                   /*2e6: movzwl  0x2(%rax), %esi          */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*2ea: mov     $0x3, %edx               */
  0xe9, 0xcf, 0x00, 0x00, 0x00,             /*2ef: jmpq    3c3                      */
  0x8b, 0x45, 0x9c,                         /*2f4: mov     -0x64(%rbp), %eax        */
  0x83, 0xc0, 0x02,                         /*2f7: add     $0x2, %eax               */
  0x48, 0x8b, 0x4d, 0xb8,                   /*2fa: mov     -0x48(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*2fe: mov     %eax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*301: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*305: mov     0x58(%rax), %rdi         */
  0x48, 0x8b, 0x47, 0x18,                   /*309: mov     0x18(%rdi), %rax         */
  0x48, 0x8b, 0x58, 0x08,                   /*30d: mov     0x8(%rax), %rbx          */
  0x48, 0x8b, 0x45, 0xb0,                   /*311: mov     -0x50(%rbp), %rax        */
  0x48, 0x8b, 0x75, 0xc0,                   /*315: mov     -0x40(%rbp), %rsi        */
  0x8b, 0x55, 0xc8,                         /*319: mov     -0x38(%rbp), %edx        */
  0xff, 0x50, 0x18,                         /*31c: callq   *0x18(%rax)              */
  0x48, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, /*31f: mov     %rax, -0x98(%rbp)        */
  0x89, 0x95, 0x70, 0xff, 0xff, 0xff,       /*326: mov     %edx, -0x90(%rbp)        */
  0x48, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, /*32c: mov     -0x98(%rbp), %rax        */
  0x48, 0x8b, 0x8d, 0x70, 0xff, 0xff, 0xff, /*333: mov     -0x90(%rbp), %rcx        */
  0x48, 0x89, 0x4b, 0x08,                   /*33a: mov     %rcx, 0x8(%rbx)          */
  0x48, 0x89, 0x03,                         /*33e: mov     %rax, (%rbx)             */
  0x48, 0x8b, 0x45, 0xd0,                   /*341: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*345: mov     0x58(%rax), %rdi         */
  0x8b, 0x70, 0x50,                         /*349: mov     0x50(%rax), %esi         */
  0x41, 0xff, 0x95, 0x10, 0x01, 0x00, 0x00, /*34c: callq   *0x110(%r13)             */
  0x48, 0x8b, 0x45, 0xd0,                   /*353: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*357: mov     0x58(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*35b: cmpq    $0x0, 0x28(%rax)         */
  0x74, 0x0d,                               /*360: je      36f                      */
  0x48, 0x8b, 0x7d, 0xd0,                   /*362: mov     -0x30(%rbp), %rdi        */
  0x41, 0xff, 0x95, 0xc8, 0x01, 0x00, 0x00, /*366: callq   *0x1c8(%r13)             */
  0xeb, 0x7f,                               /*36d: jmp     3ee                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*36f: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*373: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*377: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x48, 0x20,                   /*37b: mov     0x20(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*37f: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x08,                   /*383: mov     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xd0,                   /*387: mov     -0x30(%rbp), %rax        */
  0x48, 0x89, 0x48, 0x18,                   /*38b: mov     %rcx, 0x18(%rax)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*38f: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*393: mov     0x58(%rax), %rdi         */
  0x41, 0xff, 0x95, 0x60, 0x01, 0x00, 0x00, /*397: callq   *0x160(%r13)             */
  0x48, 0x8b, 0x45, 0xd0,                   /*39e: mov     -0x30(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*3a2: addq    $0x4, 0x10(%rax)         */
  0xeb, 0x45,                               /*3a7: jmp     3ee                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*3a9: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*3ad: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x78, 0x58,                   /*3b1: mov     0x58(%rax), %rdi         */
  0x0f, 0xb7, 0x71, 0x02,                   /*3b5: movzwl  0x2(%rcx), %esi          */
  0x48, 0x8b, 0x45, 0xb8,                   /*3b9: mov     -0x48(%rbp), %rax        */
  0x8b, 0x50, 0x40,                         /*3bd: mov     0x40(%rax), %edx         */
  0x83, 0xc2, 0x02,                         /*3c0: add     $0x2, %edx               */
  0x41, 0xff, 0x95, 0x40, 0x01, 0x00, 0x00, /*3c3: callq   *0x140(%r13)             */
  0x48, 0x8b, 0x45, 0xd0,                   /*3ca: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*3ce: mov     0x58(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*3d2: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*3d6: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x18,                   /*3da: mov     %rcx, 0x18(%rax)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*3de: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*3e2: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x08,                   /*3e6: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x10,                   /*3ea: mov     %rcx, 0x10(%rax)         */
  0x48, 0x83, 0xc4, 0x78,                   /*3ee: add     $0x78, %rsp              */
  0x5b,                                     /*3f2: pop     %rbx                     */
  0x41, 0x5c,                               /*3f3: pop     %r12                     */
  0x41, 0x5d,                               /*3f5: pop     %r13                     */
  0x41, 0x5e,                               /*3f7: pop     %r14                     */
  0x41, 0x5f,                               /*3f9: pop     %r15                     */
  0x5d,                                     /*3fb: pop     %rbp                     */
};


static uint8_t op_argary[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x41, 0x54,                               /*08: push    %r12                     */
  0x53,                                     /*0a: push    %rbx                     */
  0x48, 0x81, 0xec, 0xb0, 0x00, 0x00, 0x00, /*0b: sub     $0xb0, %rsp              */
  0x49, 0x89, 0xfc,                         /*12: mov     %rdi, %r12               */
  0x4c, 0x89, 0x65, 0xd8,                   /*15: mov     %r12, -0x28(%rbp)        */
  0x41, 0x8b, 0x44, 0x24, 0x60,             /*19: mov     0x60(%r12), %eax         */
  0xc1, 0xe8, 0x17,                         /*1e: shr     $0x17, %eax              */
  0x89, 0x45, 0xd4,                         /*21: mov     %eax, -0x2c(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*24: mov     -0x28(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*28: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*2b: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*2e: movzwl  %ax, %eax                */
  0x89, 0x45, 0xd0,                         /*31: mov     %eax, -0x30(%rbp)        */
  0xc1, 0xe8, 0x0a,                         /*34: shr     $0xa, %eax               */
  0x89, 0x45, 0xcc,                         /*37: mov     %eax, -0x34(%rbp)        */
  0x8b, 0x45, 0xd0,                         /*3a: mov     -0x30(%rbp), %eax        */
  0xc1, 0xe8, 0x09,                         /*3d: shr     $0x9, %eax               */
  0x83, 0xe0, 0x01,                         /*40: and     $0x1, %eax               */
  0x89, 0x45, 0xc8,                         /*43: mov     %eax, -0x38(%rbp)        */
  0x8b, 0x45, 0xd0,                         /*46: mov     -0x30(%rbp), %eax        */
  0xc1, 0xe8, 0x04,                         /*49: shr     $0x4, %eax               */
  0x83, 0xe0, 0x1f,                         /*4c: and     $0x1f, %eax              */
  0x89, 0x45, 0xc4,                         /*4f: mov     %eax, -0x3c(%rbp)        */
  0x8b, 0x45, 0xd0,                         /*52: mov     -0x30(%rbp), %eax        */
  0x83, 0xe0, 0x0f,                         /*55: and     $0xf, %eax               */
  0x89, 0x45, 0xc0,                         /*58: mov     %eax, -0x40(%rbp)        */
  0x74, 0x28,                               /*5b: je      85                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*5d: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*61: mov     0x58(%rax), %rdi         */
  0x8b, 0x75, 0xc0,                         /*65: mov     -0x40(%rbp), %esi        */
  0xff, 0xce,                               /*68: dec     %esi                     */
  0x41, 0xff, 0x94, 0x24, 0x90, 0x02, 0x00, /*6a: callq   *0x290(%r12)             */
  0x00,                                     /*71:                                  */
  0x48, 0x89, 0x45, 0xb0,                   /*72: mov     %rax, -0x50(%rbp)        */
  0x48, 0x85, 0xc0,                         /*76: test    %rax, %rax               */
  0x0f, 0x84, 0x31, 0x02, 0x00, 0x00,       /*79: je      2b0                      */
  0x48, 0x8b, 0x45, 0xb0,                   /*7f: mov     -0x50(%rbp), %rax        */
  0xeb, 0x04,                               /*83: jmp     89                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*85: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*89: mov     0x18(%rax), %rax         */
  0x48, 0x83, 0xc0, 0x10,                   /*8d: add     $0x10, %rax              */
  0x48, 0x89, 0x45, 0xb8,                   /*91: mov     %rax, -0x48(%rbp)        */
  0x83, 0x7d, 0xc8, 0x00,                   /*95: cmpl    $0x0, -0x38(%rbp)        */
  0x0f, 0x84, 0x6b, 0x01, 0x00, 0x00,       /*99: je      20a                      */
  0x48, 0xc7, 0x85, 0x60, 0xff, 0xff, 0xff, /*9f: movq    $0x0, -0xa0(%rbp)        */
  0x00, 0x00, 0x00, 0x00,                   /*a6:                                  */
  0xc7, 0x85, 0x54, 0xff, 0xff, 0xff, 0x00, /*aa: movl    $0x0, -0xac(%rbp)        */
  0x00, 0x00, 0x00,                         /*b1:                                  */
  0x48, 0x63, 0x45, 0xcc,                   /*b4: movslq  -0x34(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*b8: mov     -0x48(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*bc: shl     $0x4, %rax               */
  0x83, 0x7c, 0x01, 0x08, 0x0e,             /*c0: cmpl    $0xe, 0x8(%rcx, %rax, 1) */
  0x75, 0x32,                               /*c5: jne     f9                       */
  0x48, 0x63, 0x45, 0xcc,                   /*c7: movslq  -0x34(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*cb: mov     -0x48(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*cf: shl     $0x4, %rax               */
  0x48, 0x8b, 0x04, 0x01,                   /*d3: mov     (%rcx, %rax, 1), %rax    */
  0x48, 0x89, 0x85, 0x48, 0xff, 0xff, 0xff, /*d7: mov     %rax, -0xb8(%rbp)        */
  0x48, 0x8b, 0x40, 0x28,                   /*de: mov     0x28(%rax), %rax         */
  0x48, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, /*e2: mov     %rax, -0xa0(%rbp)        */
  0x48, 0x8b, 0x85, 0x48, 0xff, 0xff, 0xff, /*e9: mov     -0xb8(%rbp), %rax        */
  0x8b, 0x40, 0x18,                         /*f0: mov     0x18(%rax), %eax         */
  0x89, 0x85, 0x54, 0xff, 0xff, 0xff,       /*f3: mov     %eax, -0xac(%rbp)        */
  0x48, 0x63, 0x5d, 0xd4,                   /*f9: movslq  -0x2c(%rbp), %rbx        */
  0x48, 0x8b, 0x45, 0xd8,                   /*fd: mov     -0x28(%rbp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*101: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x18,                   /*105: mov     0x18(%rax), %r14         */
  0x48, 0x8b, 0x78, 0x58,                   /*109: mov     0x58(%rax), %rdi         */
  0x8b, 0x75, 0xcc,                         /*10d: mov     -0x34(%rbp), %esi        */
  0x03, 0xb5, 0x54, 0xff, 0xff, 0xff,       /*110: add     -0xac(%rbp), %esi        */
  0x03, 0x75, 0xc4,                         /*116: add     -0x3c(%rbp), %esi        */
  0x41, 0xff, 0x94, 0x24, 0xd8, 0x00, 0x00, /*119: callq   *0xd8(%r12)              */
  0x00,                                     /*120:                                  */
  0x48, 0x89, 0x85, 0x38, 0xff, 0xff, 0xff, /*121: mov     %rax, -0xc8(%rbp)        */
  0x89, 0x95, 0x40, 0xff, 0xff, 0xff,       /*128: mov     %edx, -0xc0(%rbp)        */
  0x48, 0x8b, 0x85, 0x38, 0xff, 0xff, 0xff, /*12e: mov     -0xc8(%rbp), %rax        */
  0x48, 0x8b, 0x8d, 0x40, 0xff, 0xff, 0xff, /*135: mov     -0xc0(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*13c: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*141: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x63, 0x45, 0xd4,                   /*145: movslq  -0x2c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*149: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*14d: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*151: shl     $0x4, %rax               */
  0x48, 0x8b, 0x04, 0x01,                   /*155: mov     (%rcx, %rax, 1), %rax    */
  0x48, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, /*159: mov     %rax, -0xa8(%rbp)        */
  0x83, 0x7d, 0xcc, 0x00,                   /*160: cmpl    $0x0, -0x34(%rbp)        */
  0x7e, 0x1b,                               /*164: jle     181                      */
  0x48, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, /*166: mov     -0xa8(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x28,                   /*16d: mov     0x28(%rax), %rdi         */
  0x48, 0x8b, 0x75, 0xb8,                   /*171: mov     -0x48(%rbp), %rsi        */
  0x48, 0x63, 0x55, 0xcc,                   /*175: movslq  -0x34(%rbp), %rdx        */
  0x41, 0xff, 0x94, 0x24, 0x80, 0x02, 0x00, /*179: callq   *0x280(%r12)             */
  0x00,                                     /*180:                                  */
  0x83, 0xbd, 0x54, 0xff, 0xff, 0xff, 0x00, /*181: cmpl    $0x0, -0xac(%rbp)        */
  0x7e, 0x29,                               /*188: jle     1b3                      */
  0x48, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, /*18a: mov     -0xa8(%rbp), %rax        */
  0x48, 0x63, 0x7d, 0xcc,                   /*191: movslq  -0x34(%rbp), %rdi        */
  0x48, 0xc1, 0xe7, 0x04,                   /*195: shl     $0x4, %rdi               */
  0x48, 0x03, 0x78, 0x28,                   /*199: add     0x28(%rax), %rdi         */
  0x48, 0x8b, 0xb5, 0x60, 0xff, 0xff, 0xff, /*19d: mov     -0xa0(%rbp), %rsi        */
  0x48, 0x63, 0x95, 0x54, 0xff, 0xff, 0xff, /*1a4: movslq  -0xac(%rbp), %rdx        */
  0x41, 0xff, 0x94, 0x24, 0x80, 0x02, 0x00, /*1ab: callq   *0x280(%r12)             */
  0x00,                                     /*1b2:                                  */
  0x83, 0x7d, 0xc4, 0x00,                   /*1b3: cmpl    $0x0, -0x3c(%rbp)        */
  0x7e, 0x39,                               /*1b7: jle     1f2                      */
  0x48, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, /*1b9: mov     -0xa8(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xcc,                   /*1c0: movslq  -0x34(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*1c4: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x40, 0x28,                   /*1c8: mov     0x28(%rax), %rax         */
  0x48, 0x01, 0xc8,                         /*1cc: add     %rcx, %rax               */
  0x48, 0x63, 0xbd, 0x54, 0xff, 0xff, 0xff, /*1cf: movslq  -0xac(%rbp), %rdi        */
  0x48, 0xc1, 0xe7, 0x04,                   /*1d6: shl     $0x4, %rdi               */
  0x48, 0x01, 0xc7,                         /*1da: add     %rax, %rdi               */
  0x48, 0x8b, 0x45, 0xb8,                   /*1dd: mov     -0x48(%rbp), %rax        */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*1e1: lea     0x10(%rax, %rcx, 1), %rsi */
  0x48, 0x63, 0x55, 0xc4,                   /*1e6: movslq  -0x3c(%rbp), %rdx        */
  0x41, 0xff, 0x94, 0x24, 0x80, 0x02, 0x00, /*1ea: callq   *0x280(%r12)             */
  0x00,                                     /*1f1:                                  */
  0x8b, 0x45, 0xcc,                         /*1f2: mov     -0x34(%rbp), %eax        */
  0x03, 0x85, 0x54, 0xff, 0xff, 0xff,       /*1f5: add     -0xac(%rbp), %eax        */
  0x03, 0x45, 0xc4,                         /*1fb: add     -0x3c(%rbp), %eax        */
  0x48, 0x8b, 0x8d, 0x58, 0xff, 0xff, 0xff, /*1fe: mov     -0xa8(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*205: mov     %eax, 0x18(%rcx)         */
  0xeb, 0x4a,                               /*208: jmp     254                      */
  0x48, 0x63, 0x5d, 0xd4,                   /*20a: movslq  -0x2c(%rbp), %rbx        */
  0x48, 0x8b, 0x45, 0xd8,                   /*20e: mov     -0x28(%rbp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*212: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x18,                   /*216: mov     0x18(%rax), %r14         */
  0x48, 0x8b, 0x78, 0x58,                   /*21a: mov     0x58(%rax), %rdi         */
  0x8b, 0x75, 0xcc,                         /*21e: mov     -0x34(%rbp), %esi        */
  0x03, 0x75, 0xc4,                         /*221: add     -0x3c(%rbp), %esi        */
  0x48, 0x8b, 0x55, 0xb8,                   /*224: mov     -0x48(%rbp), %rdx        */
  0x41, 0xff, 0x94, 0x24, 0x48, 0x02, 0x00, /*228: callq   *0x248(%r12)             */
  0x00,                                     /*22f:                                  */
  0x48, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, /*230: mov     %rax, -0x98(%rbp)        */
  0x89, 0x95, 0x70, 0xff, 0xff, 0xff,       /*237: mov     %edx, -0x90(%rbp)        */
  0x48, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, /*23d: mov     -0x98(%rbp), %rax        */
  0x48, 0x8b, 0x8d, 0x70, 0xff, 0xff, 0xff, /*244: mov     -0x90(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*24b: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*250: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x63, 0x45, 0xd4,                   /*254: movslq  -0x2c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*258: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xd8,                   /*25c: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*260: mov     0x18(%rcx), %rcx         */
  0x48, 0x63, 0x55, 0xcc,                   /*264: movslq  -0x34(%rbp), %rdx        */
  0x48, 0x63, 0x75, 0xc8,                   /*268: movslq  -0x38(%rbp), %rsi        */
  0x48, 0x01, 0xd6,                         /*26c: add     %rdx, %rsi               */
  0x48, 0x63, 0x55, 0xc4,                   /*26f: movslq  -0x3c(%rbp), %rdx        */
  0x48, 0x01, 0xf2,                         /*273: add     %rsi, %rdx               */
  0x48, 0x8b, 0x75, 0xb8,                   /*276: mov     -0x48(%rbp), %rsi        */
  0x48, 0xc1, 0xe2, 0x04,                   /*27a: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x3c, 0x16,                   /*27e: mov     (%rsi, %rdx, 1), %rdi    */
  0x48, 0x8b, 0x54, 0x16, 0x08,             /*282: mov     0x8(%rsi, %rdx, 1), %rdx */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*287: mov     %rdx, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x7c, 0x08, 0x10,             /*28c: mov     %rdi, 0x10(%rax, %rcx, 1) */
  0x48, 0x8b, 0x45, 0xd8,                   /*291: mov     -0x28(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*295: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*298: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*29c: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*2a2: mov     -0x28(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*2a6: addq    $0x4, 0x10(%rax)         */
  0xe9, 0x91, 0x00, 0x00, 0x00,             /*2ab: jmpq    341                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*2b0: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*2b4: mov     0x58(%rax), %rdi         */
  0x48, 0x89, 0x7d, 0x98,                   /*2b8: mov     %rdi, -0x68(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*2bc: mov     -0x28(%rbp), %rax        */
  0x4c, 0x8b, 0x70, 0x58,                   /*2c0: mov     0x58(%rax), %r14         */
  0x49, 0x8b, 0x44, 0x24, 0x68,             /*2c4: mov     0x68(%r12), %rax         */
  0x48, 0x8b, 0x30,                         /*2c9: mov     (%rax), %rsi             */
  0x41, 0xff, 0x94, 0x24, 0x18, 0x01, 0x00, /*2cc: callq   *0x118(%r12)             */
  0x00,                                     /*2d3:                                  */
  0x49, 0x89, 0xc7,                         /*2d4: mov     %rax, %r15               */
  0x48, 0x8b, 0x45, 0xd8,                   /*2d7: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*2db: mov     0x58(%rax), %rdi         */
  0x49, 0x8b, 0xb4, 0x24, 0xc0, 0x02, 0x00, /*2df: mov     0x2c0(%r12), %rsi        */
  0x00,                                     /*2e6:                                  */
  0xba, 0x1e, 0x00, 0x00, 0x00,             /*2e7: mov     $0x1e, %edx              */
  0x41, 0xff, 0x54, 0x24, 0x78,             /*2ec: callq   *0x78(%r12)              */
  0x89, 0xd1,                               /*2f1: mov     %edx, %ecx               */
  0x48, 0x89, 0x45, 0x88,                   /*2f3: mov     %rax, -0x78(%rbp)        */
  0x89, 0x4d, 0x90,                         /*2f7: mov     %ecx, -0x70(%rbp)        */
  0x48, 0x8b, 0x55, 0x88,                   /*2fa: mov     -0x78(%rbp), %rdx        */
  0x4c, 0x89, 0xf7,                         /*2fe: mov     %r14, %rdi               */
  0x4c, 0x89, 0xfe,                         /*301: mov     %r15, %rsi               */
  0x41, 0xff, 0x94, 0x24, 0xd8, 0x01, 0x00, /*304: callq   *0x1d8(%r12)             */
  0x00,                                     /*30b:                                  */
  0x48, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, /*30c: mov     %rax, -0x88(%rbp)        */
  0x89, 0x55, 0x80,                         /*313: mov     %edx, -0x80(%rbp)        */
  0x48, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, /*316: mov     -0x88(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x80,                   /*31d: mov     -0x80(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xa8,                   /*321: mov     %rcx, -0x58(%rbp)        */
  0x48, 0x89, 0x45, 0xa0,                   /*325: mov     %rax, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0xa0,                   /*329: mov     -0x60(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x98,                   /*32d: mov     -0x68(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x28,                   /*331: mov     %rax, 0x28(%rcx)         */
  0x48, 0x8b, 0x7d, 0xd8,                   /*335: mov     -0x28(%rbp), %rdi        */
  0x41, 0xff, 0x94, 0x24, 0xc8, 0x01, 0x00, /*339: callq   *0x1c8(%r12)             */
  0x00,                                     /*340:                                  */
  0x48, 0x81, 0xc4, 0xb0, 0x00, 0x00, 0x00, /*341: add     $0xb0, %rsp              */
  0x5b,                                     /*348: pop     %rbx                     */
  0x41, 0x5c,                               /*349: pop     %r12                     */
  0x41, 0x5e,                               /*34b: pop     %r14                     */
  0x41, 0x5f,                               /*34d: pop     %r15                     */
  0x5d,                                     /*34f: pop     %rbp                     */
};


static uint8_t op_enter[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x53,                                     /*08: push    %rbx                     */
  0x48, 0x81, 0xec, 0x88, 0x00, 0x00, 0x00, /*09: sub     $0x88, %rsp              */
  0x49, 0x89, 0xfe,                         /*10: mov     %rdi, %r14               */
  0x4c, 0x89, 0x75, 0xe0,                   /*13: mov     %r14, -0x20(%rbp)        */
  0x41, 0x8b, 0x46, 0x60,                   /*17: mov     0x60(%r14), %eax         */
  0x89, 0xc1,                               /*1b: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x07,                         /*1d: shr     $0x7, %ecx               */
  0x89, 0x4d, 0xdc,                         /*20: mov     %ecx, -0x24(%rbp)        */
  0xc1, 0xe8, 0x19,                         /*23: shr     $0x19, %eax              */
  0x83, 0xe0, 0x1f,                         /*26: and     $0x1f, %eax              */
  0x89, 0x45, 0xd8,                         /*29: mov     %eax, -0x28(%rbp)        */
  0x8b, 0x45, 0xdc,                         /*2c: mov     -0x24(%rbp), %eax        */
  0xc1, 0xe8, 0x0d,                         /*2f: shr     $0xd, %eax               */
  0x83, 0xe0, 0x1f,                         /*32: and     $0x1f, %eax              */
  0x89, 0x45, 0xd4,                         /*35: mov     %eax, -0x2c(%rbp)        */
  0x8b, 0x45, 0xdc,                         /*38: mov     -0x24(%rbp), %eax        */
  0xc1, 0xe8, 0x0c,                         /*3b: shr     $0xc, %eax               */
  0x83, 0xe0, 0x01,                         /*3e: and     $0x1, %eax               */
  0x89, 0x45, 0xd0,                         /*41: mov     %eax, -0x30(%rbp)        */
  0x8b, 0x45, 0xdc,                         /*44: mov     -0x24(%rbp), %eax        */
  0xc1, 0xe8, 0x07,                         /*47: shr     $0x7, %eax               */
  0x83, 0xe0, 0x1f,                         /*4a: and     $0x1f, %eax              */
  0x89, 0x45, 0xcc,                         /*4d: mov     %eax, -0x34(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*50: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*54: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*58: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*5c: mov     0x20(%rax), %rax         */
  0x8b, 0x40, 0x40,                         /*60: mov     0x40(%rax), %eax         */
  0x89, 0x45, 0xc8,                         /*63: mov     %eax, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*66: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*6a: mov     0x18(%rax), %rax         */
  0x48, 0x83, 0xc0, 0x10,                   /*6e: add     $0x10, %rax              */
  0x48, 0x89, 0x45, 0xc0,                   /*72: mov     %rax, -0x40(%rbp)        */
  0x48, 0x89, 0x45, 0xb8,                   /*76: mov     %rax, -0x48(%rbp)        */
  0x8b, 0x45, 0xd8,                         /*7a: mov     -0x28(%rbp), %eax        */
  0x03, 0x45, 0xd4,                         /*7d: add     -0x2c(%rbp), %eax        */
  0x03, 0x45, 0xd0,                         /*80: add     -0x30(%rbp), %eax        */
  0x03, 0x45, 0xcc,                         /*83: add     -0x34(%rbp), %eax        */
  0x89, 0x45, 0xb4,                         /*86: mov     %eax, -0x4c(%rbp)        */
  0xb8, 0x01, 0x00, 0x00, 0x00,             /*89: mov     $0x1, %eax               */
  0x83, 0x7d, 0xc8, 0x00,                   /*8e: cmpl    $0x0, -0x38(%rbp)        */
  0x78, 0x03,                               /*92: js      97                       */
  0x8b, 0x45, 0xc8,                         /*94: mov     -0x38(%rbp), %eax        */
  0x48, 0x98,                               /*97: cltq                             */
  0x48, 0x8b, 0x4d, 0xc0,                   /*99: mov     -0x40(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*9d: shl     $0x4, %rax               */
  0x48, 0x8d, 0x14, 0x01,                   /*a1: lea     (%rcx, %rax, 1), %rdx    */
  0x48, 0x89, 0x55, 0xa8,                   /*a5: mov     %rdx, -0x58(%rbp)        */
  0x83, 0x7c, 0x01, 0x08, 0x00,             /*a9: cmpl    $0x0, 0x8(%rcx, %rax, 1) */
  0x75, 0x09,                               /*ae: jne     b9                       */
  0x48, 0x8b, 0x45, 0xa8,                   /*b0: mov     -0x58(%rbp), %rax        */
  0x83, 0x38, 0x00,                         /*b4: cmpl    $0x0, (%rax)             */
  0x74, 0x4c,                               /*b7: je      105                      */
  0x48, 0x8b, 0x45, 0xa8,                   /*b9: mov     -0x58(%rbp), %rax        */
  0x83, 0x78, 0x08, 0x0d,                   /*bd: cmpl    $0xd, 0x8(%rax)          */
  0x74, 0x42,                               /*c1: je      105                      */
  0x48, 0x8b, 0x5d, 0xa8,                   /*c3: mov     -0x58(%rbp), %rbx        */
  0x48, 0x8b, 0x45, 0xe0,                   /*c7: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*cb: mov     0x58(%rax), %rdi         */
  0x48, 0x8b, 0x33,                         /*cf: mov     (%rbx), %rsi             */
  0x8b, 0x53, 0x08,                         /*d2: mov     0x8(%rbx), %edx          */
  0x4d, 0x8b, 0x86, 0xc8, 0x02, 0x00, 0x00, /*d5: mov     0x2c8(%r14), %r8         */
  0x4d, 0x8b, 0x8e, 0xd0, 0x02, 0x00, 0x00, /*dc: mov     0x2d0(%r14), %r9         */
  0xb9, 0x0d, 0x00, 0x00, 0x00,             /*e3: mov     $0xd, %ecx               */
  0x41, 0xff, 0x96, 0x20, 0x01, 0x00, 0x00, /*e8: callq   *0x120(%r14)             */
  0x48, 0x89, 0x45, 0x98,                   /*ef: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*f3: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*f6: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*fa: mov     -0x60(%rbp), %rcx        */
  0x48, 0x89, 0x4b, 0x08,                   /*fe: mov     %rcx, 0x8(%rbx)          */
  0x48, 0x89, 0x03,                         /*102: mov     %rax, (%rbx)             */
  0x83, 0x7d, 0xc8, 0x00,                   /*105: cmpl    $0x0, -0x38(%rbp)        */
  0x79, 0x3c,                               /*109: jns     147                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*10b: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*10f: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x10,                   /*113: mov     0x10(%rax), %rax         */
  0x48, 0x89, 0x45, 0x90,                   /*117: mov     %rax, -0x70(%rbp)        */
  0x48, 0x8b, 0x40, 0x28,                   /*11b: mov     0x28(%rax), %rax         */
  0x48, 0x89, 0x45, 0xc0,                   /*11f: mov     %rax, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0x90,                   /*123: mov     -0x70(%rbp), %rax        */
  0x8b, 0x40, 0x18,                         /*127: mov     0x18(%rax), %eax         */
  0x89, 0x45, 0xc8,                         /*12a: mov     %eax, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*12d: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x18,                   /*131: mov     0x18(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x58,                   /*135: mov     0x58(%rax), %rdi         */
  0x48, 0x8b, 0x71, 0x10,                   /*139: mov     0x10(%rcx), %rsi         */
  0x8b, 0x51, 0x18,                         /*13d: mov     0x18(%rcx), %edx         */
  0x41, 0xff, 0x96, 0xf8, 0x01, 0x00, 0x00, /*140: callq   *0x1f8(%r14)             */
  0x48, 0x8b, 0x45, 0xe0,                   /*147: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*14b: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*14f: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*153: mov     0x20(%rax), %rax         */
  0x48, 0x83, 0x78, 0x08, 0x00,             /*157: cmpq    $0x0, 0x8(%rax)          */
  0x74, 0x66,                               /*15c: je      1c4                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*15e: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*162: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*166: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*16a: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*16e: mov     0x8(%rax), %rax          */
  0x8b, 0x00,                               /*172: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*174: shr     $0xb, %eax               */
  0xf6, 0xc4, 0x01,                         /*177: test    $0x1, %ah                */
  0x74, 0x48,                               /*17a: je      1c4                      */
  0x83, 0x7d, 0xc8, 0x00,                   /*17c: cmpl    $0x0, -0x38(%rbp)        */
  0x0f, 0x88, 0x89, 0x00, 0x00, 0x00,       /*180: js      20f                      */
  0x8b, 0x45, 0xd8,                         /*186: mov     -0x28(%rbp), %eax        */
  0x03, 0x45, 0xcc,                         /*189: add     -0x34(%rbp), %eax        */
  0x39, 0x45, 0xc8,                         /*18c: cmp     %eax, -0x38(%rbp)        */
  0x7c, 0x0e,                               /*18f: jl      19f                      */
  0x83, 0x7d, 0xd0, 0x00,                   /*191: cmpl    $0x0, -0x30(%rbp)        */
  0x75, 0x78,                               /*195: jne     20f                      */
  0x8b, 0x45, 0xc8,                         /*197: mov     -0x38(%rbp), %eax        */
  0x3b, 0x45, 0xb4,                         /*19a: cmp     -0x4c(%rbp), %eax        */
  0x7e, 0x70,                               /*19d: jle     20f                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*19f: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*1a3: mov     0x58(%rax), %rdi         */
  0x8b, 0x75, 0xd8,                         /*1a7: mov     -0x28(%rbp), %esi        */
  0x03, 0x75, 0xcc,                         /*1aa: add     -0x34(%rbp), %esi        */
  0x41, 0xff, 0x96, 0x88, 0x02, 0x00, 0x00, /*1ad: callq   *0x288(%r14)             */
  0x48, 0x8b, 0x7d, 0xe0,                   /*1b4: mov     -0x20(%rbp), %rdi        */
  0x41, 0xff, 0x96, 0xc8, 0x01, 0x00, 0x00, /*1b8: callq   *0x1c8(%r14)             */
  0xe9, 0x37, 0x03, 0x00, 0x00,             /*1bf: jmpq    4fb                      */
  0x83, 0x7d, 0xb4, 0x02,                   /*1c4: cmpl    $0x2, -0x4c(%rbp)        */
  0x7c, 0x45,                               /*1c8: jl      20f                      */
  0x83, 0x7d, 0xc8, 0x01,                   /*1ca: cmpl    $0x1, -0x38(%rbp)        */
  0x75, 0x3f,                               /*1ce: jne     20f                      */
  0x48, 0x8b, 0x45, 0xc0,                   /*1d0: mov     -0x40(%rbp), %rax        */
  0x83, 0x78, 0x08, 0x0e,                   /*1d4: cmpl    $0xe, 0x8(%rax)          */
  0x75, 0x35,                               /*1d8: jne     20f                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*1da: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*1de: mov     0x58(%rax), %rdi         */
  0x48, 0x8b, 0x45, 0xc0,                   /*1e2: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x30,                         /*1e6: mov     (%rax), %rsi             */
  0x8b, 0x50, 0x08,                         /*1e9: mov     0x8(%rax), %edx          */
  0x41, 0xff, 0x96, 0xf8, 0x01, 0x00, 0x00, /*1ec: callq   *0x1f8(%r14)             */
  0x48, 0x8b, 0x45, 0xc0,                   /*1f3: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x00,                         /*1f7: mov     (%rax), %rax             */
  0x8b, 0x40, 0x18,                         /*1fa: mov     0x18(%rax), %eax         */
  0x89, 0x45, 0xc8,                         /*1fd: mov     %eax, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*200: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x00,                         /*204: mov     (%rax), %rax             */
  0x48, 0x8b, 0x40, 0x28,                   /*207: mov     0x28(%rax), %rax         */
  0x48, 0x89, 0x45, 0xc0,                   /*20b: mov     %rax, -0x40(%rbp)        */
  0x8b, 0x45, 0xb4,                         /*20f: mov     -0x4c(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*212: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*216: mov     0x58(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*21a: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*21e: mov     0x20(%rcx), %rcx         */
  0x89, 0x41, 0x40,                         /*222: mov     %eax, 0x40(%rcx)         */
  0x8b, 0x45, 0xc8,                         /*225: mov     -0x38(%rbp), %eax        */
  0x3b, 0x45, 0xb4,                         /*228: cmp     -0x4c(%rbp), %eax        */
  0x7d, 0x2f,                               /*22b: jge     25c                      */
  0x8b, 0x45, 0xcc,                         /*22d: mov     -0x34(%rbp), %eax        */
  0x89, 0x45, 0x8c,                         /*230: mov     %eax, -0x74(%rbp)        */
  0x8b, 0x45, 0xd8,                         /*233: mov     -0x28(%rbp), %eax        */
  0x03, 0x45, 0xcc,                         /*236: add     -0x34(%rbp), %eax        */
  0x39, 0x45, 0xc8,                         /*239: cmp     %eax, -0x38(%rbp)        */
  0x0f, 0x8d, 0x74, 0x01, 0x00, 0x00,       /*23c: jge     3b6                      */
  0x8b, 0x45, 0xd8,                         /*242: mov     -0x28(%rbp), %eax        */
  0x3b, 0x45, 0xc8,                         /*245: cmp     -0x38(%rbp), %eax        */
  0x0f, 0x8d, 0x61, 0x01, 0x00, 0x00,       /*248: jge     3af                      */
  0x8b, 0x45, 0xc8,                         /*24e: mov     -0x38(%rbp), %eax        */
  0x2b, 0x45, 0xd8,                         /*251: sub     -0x28(%rbp), %eax        */
  0x89, 0x45, 0x8c,                         /*254: mov     %eax, -0x74(%rbp)        */
  0xe9, 0x5a, 0x01, 0x00, 0x00,             /*257: jmpq    3b6                      */
  0xc7, 0x85, 0x74, 0xff, 0xff, 0xff, 0x00, /*25c: movl    $0x0, -0x8c(%rbp)        */
  0x00, 0x00, 0x00,                         /*263:                                  */
  0x48, 0x8b, 0x45, 0xb8,                   /*266: mov     -0x48(%rbp), %rax        */
  0x48, 0x3b, 0x45, 0xc0,                   /*26a: cmp     -0x40(%rbp), %rax        */
  0x74, 0x47,                               /*26e: je      2b7                      */
  0x48, 0x63, 0x45, 0xb4,                   /*270: movslq  -0x4c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*274: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*278: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*27c: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x55, 0xa8,                   /*280: mov     -0x58(%rbp), %rdx        */
  0x48, 0x8b, 0x32,                         /*284: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*287: mov     0x8(%rdx), %rdx          */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*28b: mov     %rdx, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x74, 0x08, 0x10,             /*290: mov     %rsi, 0x10(%rax, %rcx, 1) */
  0x48, 0x8b, 0x45, 0xe0,                   /*295: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x18,                   /*299: mov     0x18(%rax), %rdi         */
  0x48, 0x83, 0xc7, 0x10,                   /*29d: add     $0x10, %rdi              */
  0x48, 0x8b, 0x75, 0xc0,                   /*2a1: mov     -0x40(%rbp), %rsi        */
  0x48, 0x63, 0x45, 0xd8,                   /*2a5: movslq  -0x28(%rbp), %rax        */
  0x48, 0x63, 0x55, 0xd4,                   /*2a9: movslq  -0x2c(%rbp), %rdx        */
  0x48, 0x01, 0xc2,                         /*2ad: add     %rax, %rdx               */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*2b0: callq   *0xa8(%r14)              */
  0x83, 0x7d, 0xd0, 0x00,                   /*2b7: cmpl    $0x0, -0x30(%rbp)        */
  0x74, 0x69,                               /*2bb: je      326                      */
  0x8b, 0x75, 0xc8,                         /*2bd: mov     -0x38(%rbp), %esi        */
  0x2b, 0x75, 0xd8,                         /*2c0: sub     -0x28(%rbp), %esi        */
  0x2b, 0x75, 0xd4,                         /*2c3: sub     -0x2c(%rbp), %esi        */
  0x2b, 0x75, 0xcc,                         /*2c6: sub     -0x34(%rbp), %esi        */
  0x89, 0xb5, 0x74, 0xff, 0xff, 0xff,       /*2c9: mov     %esi, -0x8c(%rbp)        */
  0x48, 0x63, 0x45, 0xd8,                   /*2cf: movslq  -0x28(%rbp), %rax        */
  0x48, 0x63, 0x55, 0xd4,                   /*2d3: movslq  -0x2c(%rbp), %rdx        */
  0x48, 0x8d, 0x1c, 0x10,                   /*2d7: lea     (%rax, %rdx, 1), %rbx    */
  0x48, 0xc1, 0xe3, 0x04,                   /*2db: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*2df: mov     -0x20(%rbp), %rcx        */
  0x4c, 0x8b, 0x79, 0x18,                   /*2e3: mov     0x18(%rcx), %r15         */
  0x48, 0x8b, 0x79, 0x58,                   /*2e7: mov     0x58(%rcx), %rdi         */
  0x48, 0xc1, 0xe0, 0x04,                   /*2eb: shl     $0x4, %rax               */
  0x48, 0x03, 0x45, 0xc0,                   /*2ef: add     -0x40(%rbp), %rax        */
  0x48, 0xc1, 0xe2, 0x04,                   /*2f3: shl     $0x4, %rdx               */
  0x48, 0x01, 0xc2,                         /*2f7: add     %rax, %rdx               */
  0x41, 0xff, 0x96, 0x48, 0x02, 0x00, 0x00, /*2fa: callq   *0x248(%r14)             */
  0x48, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, /*301: mov     %rax, -0xa0(%rbp)        */
  0x89, 0x95, 0x68, 0xff, 0xff, 0xff,       /*308: mov     %edx, -0x98(%rbp)        */
  0x48, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, /*30e: mov     -0xa0(%rbp), %rax        */
  0x48, 0x8b, 0x8d, 0x68, 0xff, 0xff, 0xff, /*315: mov     -0x98(%rbp), %rcx        */
  0x4a, 0x89, 0x4c, 0x3b, 0x18,             /*31c: mov     %rcx, 0x18(%rbx, %r15, 1) */
  0x4a, 0x89, 0x44, 0x3b, 0x10,             /*321: mov     %rax, 0x10(%rbx, %r15, 1) */
  0x83, 0x7d, 0xcc, 0x00,                   /*326: cmpl    $0x0, -0x34(%rbp)        */
  0x74, 0x4b,                               /*32a: je      377                      */
  0x8b, 0x45, 0xc8,                         /*32c: mov     -0x38(%rbp), %eax        */
  0x2b, 0x45, 0xcc,                         /*32f: sub     -0x34(%rbp), %eax        */
  0x3b, 0x45, 0xd8,                         /*332: cmp     -0x28(%rbp), %eax        */
  0x7e, 0x40,                               /*335: jle     377                      */
  0x48, 0x63, 0x45, 0xd8,                   /*337: movslq  -0x28(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xd4,                   /*33b: movslq  -0x2c(%rbp), %rcx        */
  0x48, 0x01, 0xc1,                         /*33f: add     %rax, %rcx               */
  0x48, 0x63, 0x45, 0xd0,                   /*342: movslq  -0x30(%rbp), %rax        */
  0x48, 0x01, 0xc8,                         /*346: add     %rcx, %rax               */
  0x48, 0xc1, 0xe0, 0x04,                   /*349: shl     $0x4, %rax               */
  0x48, 0x8b, 0x55, 0xe0,                   /*34d: mov     -0x20(%rbp), %rdx        */
  0x48, 0x8b, 0x52, 0x18,                   /*351: mov     0x18(%rdx), %rdx         */
  0x48, 0x8d, 0x7c, 0x10, 0x10,             /*355: lea     0x10(%rax, %rdx, 1), %rdi */
  0x48, 0x63, 0xb5, 0x74, 0xff, 0xff, 0xff, /*35a: movslq  -0x8c(%rbp), %rsi        */
  0x48, 0x01, 0xce,                         /*361: add     %rcx, %rsi               */
  0x48, 0xc1, 0xe6, 0x04,                   /*364: shl     $0x4, %rsi               */
  0x48, 0x03, 0x75, 0xc0,                   /*368: add     -0x40(%rbp), %rsi        */
  0x48, 0x63, 0x55, 0xcc,                   /*36c: movslq  -0x34(%rbp), %rdx        */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*370: callq   *0xa8(%r14)              */
  0x48, 0x8b, 0x45, 0xb8,                   /*377: mov     -0x48(%rbp), %rax        */
  0x48, 0x3b, 0x45, 0xc0,                   /*37b: cmp     -0x40(%rbp), %rax        */
  0x75, 0x25,                               /*37f: jne     3a6                      */
  0x48, 0x63, 0x45, 0xb4,                   /*381: movslq  -0x4c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*385: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*389: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*38d: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x55, 0xa8,                   /*391: mov     -0x58(%rbp), %rdx        */
  0x48, 0x8b, 0x32,                         /*395: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*398: mov     0x8(%rdx), %rdx          */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*39c: mov     %rdx, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x74, 0x08, 0x10,             /*3a1: mov     %rsi, 0x10(%rax, %rcx, 1) */
  0x48, 0x63, 0x45, 0xd4,                   /*3a6: movslq  -0x2c(%rbp), %rax        */
  0xe9, 0x3b, 0x01, 0x00, 0x00,             /*3aa: jmpq    4ea                      */
  0xc7, 0x45, 0x8c, 0x00, 0x00, 0x00, 0x00, /*3af: movl    $0x0, -0x74(%rbp)        */
  0x48, 0x63, 0x45, 0xb4,                   /*3b6: movslq  -0x4c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*3ba: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3be: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*3c2: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x55, 0xa8,                   /*3c6: mov     -0x58(%rbp), %rdx        */
  0x48, 0x8b, 0x32,                         /*3ca: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*3cd: mov     0x8(%rdx), %rdx          */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*3d1: mov     %rdx, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x74, 0x08, 0x10,             /*3d6: mov     %rsi, 0x10(%rax, %rcx, 1) */
  0x48, 0x63, 0x45, 0xc8,                   /*3db: movslq  -0x38(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*3df: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3e3: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*3e7: mov     0x18(%rcx), %rcx         */
  0xc7, 0x44, 0x08, 0x18, 0x00, 0x00, 0x00, /*3eb: movl    $0x0, 0x18(%rax, %rcx, 1) */
  0x00,                                     /*3f2:                                  */
  0x48, 0x63, 0x45, 0xc8,                   /*3f3: movslq  -0x38(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*3f7: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3fb: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*3ff: mov     0x18(%rcx), %rcx         */
  0xc7, 0x44, 0x08, 0x10, 0x00, 0x00, 0x00, /*403: movl    $0x0, 0x10(%rax, %rcx, 1) */
  0x00,                                     /*40a:                                  */
  0x48, 0x8b, 0x45, 0xb8,                   /*40b: mov     -0x48(%rbp), %rax        */
  0x48, 0x3b, 0x45, 0xc0,                   /*40f: cmp     -0x40(%rbp), %rax        */
  0x74, 0x22,                               /*413: je      437                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*415: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x18,                   /*419: mov     0x18(%rax), %rdi         */
  0x48, 0x83, 0xc7, 0x10,                   /*41d: add     $0x10, %rdi              */
  0x48, 0x8b, 0x75, 0xc0,                   /*421: mov     -0x40(%rbp), %rsi        */
  0x48, 0x63, 0x55, 0xc8,                   /*425: movslq  -0x38(%rbp), %rdx        */
  0x48, 0x63, 0x45, 0x8c,                   /*429: movslq  -0x74(%rbp), %rax        */
  0x48, 0x29, 0xc2,                         /*42d: sub     %rax, %rdx               */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*430: callq   *0xa8(%r14)              */
  0x83, 0x7d, 0x8c, 0x00,                   /*437: cmpl    $0x0, -0x74(%rbp)        */
  0x74, 0x36,                               /*43b: je      473                      */
  0x48, 0x63, 0x45, 0xb4,                   /*43d: movslq  -0x4c(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xcc,                   /*441: movslq  -0x34(%rbp), %rcx        */
  0x48, 0x29, 0xc8,                         /*445: sub     %rcx, %rax               */
  0x48, 0xc1, 0xe0, 0x04,                   /*448: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*44c: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*450: mov     0x18(%rcx), %rcx         */
  0x48, 0x8d, 0x7c, 0x08, 0x10,             /*454: lea     0x10(%rax, %rcx, 1), %rdi */
  0x48, 0x63, 0x75, 0xc8,                   /*459: movslq  -0x38(%rbp), %rsi        */
  0x48, 0x63, 0x55, 0x8c,                   /*45d: movslq  -0x74(%rbp), %rdx        */
  0x48, 0x29, 0xd6,                         /*461: sub     %rdx, %rsi               */
  0x48, 0xc1, 0xe6, 0x04,                   /*464: shl     $0x4, %rsi               */
  0x48, 0x03, 0x75, 0xc0,                   /*468: add     -0x40(%rbp), %rsi        */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*46c: callq   *0xa8(%r14)              */
  0x83, 0x7d, 0xd0, 0x00,                   /*473: cmpl    $0x0, -0x30(%rbp)        */
  0x74, 0x43,                               /*477: je      4bc                      */
  0x48, 0x63, 0x45, 0xd8,                   /*479: movslq  -0x28(%rbp), %rax        */
  0x48, 0x63, 0x5d, 0xd4,                   /*47d: movslq  -0x2c(%rbp), %rbx        */
  0x48, 0x01, 0xc3,                         /*481: add     %rax, %rbx               */
  0x48, 0xc1, 0xe3, 0x04,                   /*484: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x45, 0xe0,                   /*488: mov     -0x20(%rbp), %rax        */
  0x4c, 0x8b, 0x78, 0x18,                   /*48c: mov     0x18(%rax), %r15         */
  0x48, 0x8b, 0x78, 0x58,                   /*490: mov     0x58(%rax), %rdi         */
  0x31, 0xf6,                               /*494: xor     %esi, %esi               */
  0x41, 0xff, 0x96, 0xd8, 0x00, 0x00, 0x00, /*496: callq   *0xd8(%r14)              */
  0x48, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, /*49d: mov     %rax, -0x88(%rbp)        */
  0x89, 0x55, 0x80,                         /*4a4: mov     %edx, -0x80(%rbp)        */
  0x48, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, /*4a7: mov     -0x88(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x80,                   /*4ae: mov     -0x80(%rbp), %rcx        */
  0x4a, 0x89, 0x4c, 0x3b, 0x18,             /*4b2: mov     %rcx, 0x18(%rbx, %r15, 1) */
  0x4a, 0x89, 0x44, 0x3b, 0x10,             /*4b7: mov     %rax, 0x10(%rbx, %r15, 1) */
  0x83, 0x7d, 0xd4, 0x00,                   /*4bc: cmpl    $0x0, -0x2c(%rbp)        */
  0x74, 0x0b,                               /*4c0: je      4cd                      */
  0x8b, 0x45, 0xd8,                         /*4c2: mov     -0x28(%rbp), %eax        */
  0x03, 0x45, 0xcc,                         /*4c5: add     -0x34(%rbp), %eax        */
  0x39, 0x45, 0xc8,                         /*4c8: cmp     %eax, -0x38(%rbp)        */
  0x7d, 0x0b,                               /*4cb: jge     4d8                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*4cd: mov     -0x20(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*4d1: addq    $0x4, 0x10(%rax)         */
  0xeb, 0x23,                               /*4d6: jmp     4fb                      */
  0x48, 0x63, 0x45, 0xc8,                   /*4d8: movslq  -0x38(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xd8,                   /*4dc: movslq  -0x28(%rbp), %rcx        */
  0x48, 0x29, 0xc8,                         /*4e0: sub     %rcx, %rax               */
  0x48, 0x63, 0x4d, 0xcc,                   /*4e3: movslq  -0x34(%rbp), %rcx        */
  0x48, 0x29, 0xc8,                         /*4e7: sub     %rcx, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*4ea: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x51, 0x10,                   /*4ee: mov     0x10(%rcx), %rdx         */
  0x48, 0x8d, 0x44, 0x82, 0x04,             /*4f2: lea     0x4(%rdx, %rax, 4), %rax */
  0x48, 0x89, 0x41, 0x10,                   /*4f7: mov     %rax, 0x10(%rcx)         */
  0x48, 0x81, 0xc4, 0x88, 0x00, 0x00, 0x00, /*4fb: add     $0x88, %rsp              */
  0x5b,                                     /*502: pop     %rbx                     */
  0x41, 0x5e,                               /*503: pop     %r14                     */
  0x41, 0x5f,                               /*505: pop     %r15                     */
  0x5d,                                     /*507: pop     %rbp                     */
};


static uint8_t op_karg[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x5d,                                     /*08: pop     %rbp                     */
};


static uint8_t op_kdict[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x5d,                                     /*08: pop     %rbp                     */
};


static uint8_t op_return[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x53,                                     /*08: push    %rbx                     */
  0x48, 0x83, 0xec, 0x68,                   /*09: sub     $0x68, %rsp              */
  0x48, 0x89, 0xfb,                         /*0d: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5d, 0xe0,                   /*10: mov     %rbx, -0x20(%rbp)        */
  0x48, 0x8b, 0x43, 0x58,                   /*14: mov     0x58(%rbx), %rax         */
  0x48, 0x89, 0x45, 0xd8,                   /*18: mov     %rax, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*1c: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*20: mov     0x58(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*24: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x85, 0xd6, 0x03, 0x00, 0x00,       /*29: jne     405                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*2f: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*33: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*37: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*3b: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xd0,                   /*3f: mov     %rax, -0x30(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*43: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*47: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*4b: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*4f: mov     0x20(%rax), %rax         */
  0x8b, 0x40, 0x20,                         /*53: mov     0x20(%rax), %eax         */
  0x89, 0x45, 0xc8,                         /*56: mov     %eax, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*59: mov     -0x20(%rbp), %rax        */
  0x8b, 0x48, 0x60,                         /*5d: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*60: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x18,                   /*63: mov     0x18(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*67: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x14, 0x08,                   /*6b: mov     (%rax, %rcx, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x08, 0x08,             /*6f: mov     0x8(%rax, %rcx, 1), %rax */
  0x48, 0x89, 0x45, 0xc0,                   /*74: mov     %rax, -0x40(%rbp)        */
  0x48, 0x89, 0x55, 0xb8,                   /*78: mov     %rdx, -0x48(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*7c: mov     -0x20(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*80: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x0e,                         /*83: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*86: and     $0x1ff, %eax             */
  0x0f, 0x84, 0x21, 0x01, 0x00, 0x00,       /*8b: je      1b2                      */
  0x83, 0xf8, 0x01,                         /*91: cmp     $0x1, %eax               */
  0x0f, 0x85, 0xf0, 0x00, 0x00, 0x00,       /*94: jne     18a                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*9a: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x00,                         /*9e: mov     (%rax), %rax             */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*a1: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x84, 0x81, 0x01, 0x00, 0x00,       /*a6: je      22d                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*ac: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x00,                         /*b0: mov     (%rax), %rax             */
  0x48, 0x8b, 0x40, 0x28,                   /*b3: mov     0x28(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*b7: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x88, 0x6b, 0x01, 0x00, 0x00,       /*bc: js      22d                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*c2: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*c6: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x48, 0x20,                   /*ca: mov     0x20(%rax), %rcx         */
  0x48, 0x3b, 0x48, 0x28,                   /*ce: cmp     0x28(%rax), %rcx         */
  0x75, 0x35,                               /*d2: jne     109                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*d4: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*d8: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*dc: mov     0x20(%rax), %rax         */
  0x48, 0x83, 0x78, 0x30, 0x00,             /*e0: cmpq    $0x0, 0x30(%rax)         */
  0x74, 0x22,                               /*e5: je      109                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*e7: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*eb: mov     0x18(%rax), %rax         */
  0x48, 0x89, 0x45, 0x88,                   /*ef: mov     %rax, -0x78(%rbp)        */
  0x48, 0x8b, 0x00,                         /*f3: mov     (%rax), %rax             */
  0x48, 0x8b, 0x4d, 0xd8,                   /*f6: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*fa: mov     %rax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0x88,                   /*fe: mov     -0x78(%rbp), %rax        */
  0x48, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, /*102: movq    $0x0, (%rax)             */
  0x48, 0x8b, 0x45, 0xd8,                   /*109: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*10d: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*111: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xd0,                   /*115: mov     %rax, -0x30(%rbp)        */
  0x48, 0x8b, 0x40, 0x10,                   /*119: mov     0x10(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xd8,                   /*11d: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*121: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x08,                   /*125: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xd8,                   /*129: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*12d: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x48, 0x28,                   /*131: mov     0x28(%rax), %rcx         */
  0x48, 0x8b, 0x55, 0xe0,                   /*135: mov     -0x20(%rbp), %rdx        */
  0x48, 0x8b, 0x12,                         /*139: mov     (%rdx), %rdx             */
  0x48, 0x8b, 0x52, 0x28,                   /*13c: mov     0x28(%rdx), %rdx         */
  0x48, 0x8b, 0x52, 0x28,                   /*140: mov     0x28(%rdx), %rdx         */
  0x48, 0x8d, 0x14, 0x92,                   /*144: lea     (%rdx, %rdx, 4), %rdx    */
  0x48, 0xc1, 0xe2, 0x04,                   /*148: shl     $0x4, %rdx               */
  0x48, 0x8d, 0x4c, 0x11, 0x50,             /*14c: lea     0x50(%rcx, %rdx, 1), %rcx */
  0x48, 0x89, 0x48, 0x20,                   /*151: mov     %rcx, 0x20(%rax)         */
  0xeb, 0x0e,                               /*155: jmp     165                      */
  0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, /*157: nopw    0x0(%rax, %rax, 1)       */
  0x00, 0x00,                               /*15e:                                  */
  0x48, 0x83, 0x45, 0xd0, 0xb0,             /*160: addq    $0xffffffffffffffb0, -0x30(%rbp) */
  0x48, 0x8b, 0x45, 0xd0,                   /*165: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*169: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*16d: mov     0x18(%rcx), %rcx         */
  0x48, 0x3b, 0x41, 0x20,                   /*171: cmp     0x20(%rcx), %rax         */
  0x0f, 0x86, 0xb7, 0x01, 0x00, 0x00,       /*175: jbe     332                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*17b: mov     -0x30(%rbp), %rax        */
  0x83, 0x78, 0xf4, 0xff,                   /*17f: cmpl    $0xffffffff, -0xc(%rax)  */
  0x75, 0xdb,                               /*183: jne     160                      */
  0xe9, 0x7b, 0x01, 0x00, 0x00,             /*185: jmpq    305                      */
  0x83, 0xf8, 0x02,                         /*18a: cmp     $0x2, %eax               */
  0x0f, 0x85, 0x9f, 0x01, 0x00, 0x00,       /*18d: jne     332                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*193: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x00,                         /*197: mov     (%rax), %rax             */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*19a: cmpq    $0x0, 0x28(%rax)         */
  0x74, 0x11,                               /*19f: je      1b2                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*1a1: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x00,                         /*1a5: mov     (%rax), %rax             */
  0x0f, 0xba, 0x20, 0x13,                   /*1a8: btl     $0x13, (%rax)            */
  0x0f, 0x83, 0xed, 0x00, 0x00, 0x00,       /*1ac: jae     29f                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*1b2: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*1b6: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*1ba: mov     0x18(%rcx), %rcx         */
  0x48, 0x3b, 0x41, 0x28,                   /*1be: cmp     0x28(%rcx), %rax         */
  0x75, 0x54,                               /*1c2: jne     218                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*1c4: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1c8: mov     0x18(%rax), %rax         */
  0x48, 0x83, 0x38, 0x00,                   /*1cc: cmpq    $0x0, (%rax)             */
  0x0f, 0x84, 0x23, 0x02, 0x00, 0x00,       /*1d0: je      3f9                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*1d6: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1da: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x00,                         /*1de: mov     (%rax), %rax             */
  0x48, 0x8b, 0x48, 0x20,                   /*1e1: mov     0x20(%rax), %rcx         */
  0x48, 0x3b, 0x48, 0x28,                   /*1e5: cmp     0x28(%rax), %rcx         */
  0x74, 0x56,                               /*1e9: je      241                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*1eb: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1ef: mov     0x18(%rax), %rax         */
  0xc7, 0x40, 0x54, 0x05, 0x00, 0x00, 0x00, /*1f3: movl    $0x5, 0x54(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*1fa: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x18,                   /*1fe: mov     0x18(%rax), %rcx         */
  0x48, 0x8b, 0x09,                         /*202: mov     (%rcx), %rcx             */
  0x48, 0x89, 0x48, 0x18,                   /*205: mov     %rcx, 0x18(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*209: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*20d: mov     0x18(%rax), %rax         */
  0xc7, 0x40, 0x54, 0x01, 0x00, 0x00, 0x00, /*211: movl    $0x1, 0x54(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*218: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*21c: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*220: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xd0,                   /*224: mov     %rax, -0x30(%rbp)        */
  0xe9, 0x05, 0x01, 0x00, 0x00,             /*228: jmpq    332                      */
  0x48, 0x8b, 0x7d, 0xd8,                   /*22d: mov     -0x28(%rbp), %rdi        */
  0xbe, 0x01, 0x00, 0x00, 0x00,             /*231: mov     $0x1, %esi               */
  0xff, 0x93, 0xc0, 0x01, 0x00, 0x00,       /*236: callq   *0x1c0(%rbx)             */
  0xe9, 0xc4, 0x01, 0x00, 0x00,             /*23c: jmpq    405                      */
  0x4c, 0x8b, 0x75, 0xd8,                   /*241: mov     -0x28(%rbp), %r14        */
  0x48, 0x8b, 0x83, 0x08, 0x02, 0x00, 0x00, /*245: mov     0x208(%rbx), %rax        */
  0x48, 0x8b, 0x30,                         /*24c: mov     (%rax), %rsi             */
  0x4c, 0x89, 0xf7,                         /*24f: mov     %r14, %rdi               */
  0xff, 0x93, 0x18, 0x01, 0x00, 0x00,       /*252: callq   *0x118(%rbx)             */
  0x49, 0x89, 0xc7,                         /*258: mov     %rax, %r15               */
  0x48, 0x8b, 0x7d, 0xd8,                   /*25b: mov     -0x28(%rbp), %rdi        */
  0x48, 0x8b, 0xb3, 0xd8, 0x02, 0x00, 0x00, /*25f: mov     0x2d8(%rbx), %rsi        */
  0xba, 0x0d, 0x00, 0x00, 0x00,             /*266: mov     $0xd, %edx               */
  0xff, 0x53, 0x78,                         /*26b: callq   *0x78(%rbx)              */
  0x89, 0xd1,                               /*26e: mov     %edx, %ecx               */
  0x48, 0x89, 0x45, 0x90,                   /*270: mov     %rax, -0x70(%rbp)        */
  0x89, 0x4d, 0x98,                         /*274: mov     %ecx, -0x68(%rbp)        */
  0x48, 0x8b, 0x55, 0x90,                   /*277: mov     -0x70(%rbp), %rdx        */
  0x4c, 0x89, 0xf7,                         /*27b: mov     %r14, %rdi               */
  0x4c, 0x89, 0xfe,                         /*27e: mov     %r15, %rsi               */
  0xff, 0x93, 0xd8, 0x01, 0x00, 0x00,       /*281: callq   *0x1d8(%rbx)             */
  0x48, 0x89, 0x45, 0xa0,                   /*287: mov     %rax, -0x60(%rbp)        */
  0x89, 0x55, 0xa8,                         /*28b: mov     %edx, -0x58(%rbp)        */
  0x48, 0x8b, 0x45, 0xa0,                   /*28e: mov     -0x60(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*292: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x28,                   /*296: mov     %rax, 0x28(%rcx)         */
  0xe9, 0x66, 0x01, 0x00, 0x00,             /*29a: jmpq    405                      */
  0x48, 0x8b, 0x7d, 0xd8,                   /*29f: mov     -0x28(%rbp), %rdi        */
  0x48, 0x8b, 0x45, 0xe0,                   /*2a3: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x30,                         /*2a7: mov     (%rax), %rsi             */
  0xff, 0x93, 0xa8, 0x02, 0x00, 0x00,       /*2aa: callq   *0x2a8(%rbx)             */
  0x48, 0x89, 0x45, 0xb0,                   /*2b0: mov     %rax, -0x50(%rbp)        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*2b4: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x88, 0x3a, 0x01, 0x00, 0x00,       /*2b9: js      3f9                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*2bf: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2c3: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xb0,                   /*2c7: mov     -0x50(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*2cb: mov     0x28(%rcx), %rcx         */
  0x48, 0x8d, 0x0c, 0x89,                   /*2cf: lea     (%rcx, %rcx, 4), %rcx    */
  0x48, 0xc1, 0xe1, 0x04,                   /*2d3: shl     $0x4, %rcx               */
  0x48, 0x03, 0x48, 0x28,                   /*2d7: add     0x28(%rax), %rcx         */
  0x48, 0x89, 0x4d, 0xd0,                   /*2db: mov     %rcx, -0x30(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*2df: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2e3: mov     0x18(%rax), %rax         */
  0x48, 0x3b, 0x48, 0x28,                   /*2e7: cmp     0x28(%rax), %rcx         */
  0x0f, 0x84, 0x08, 0x01, 0x00, 0x00,       /*2eb: je      3f9                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*2f1: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2f5: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x48, 0x20,                   /*2f9: mov     0x20(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*2fd: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x08,                   /*301: mov     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xd0,                   /*305: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*309: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*30d: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x20,                   /*311: mov     %rax, 0x20(%rcx)         */
  0xeb, 0x1b,                               /*315: jmp     332                      */
  0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, /*317: nopw    0x0(%rax, %rax, 1)       */
  0x00, 0x00,                               /*31e:                                  */
  0x48, 0x8b, 0x7d, 0xd8,                   /*320: mov     -0x28(%rbp), %rdi        */
  0x8b, 0x75, 0xc8,                         /*324: mov     -0x38(%rbp), %esi        */
  0xff, 0xce,                               /*327: dec     %esi                     */
  0x89, 0x75, 0xc8,                         /*329: mov     %esi, -0x38(%rbp)        */
  0xff, 0x93, 0x18, 0x02, 0x00, 0x00,       /*32c: callq   *0x218(%rbx)             */
  0x8b, 0x45, 0xc8,                         /*332: mov     -0x38(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*335: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*339: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*33d: mov     0x20(%rcx), %rcx         */
  0x3b, 0x41, 0xd0,                         /*341: cmp     -0x30(%rcx), %eax        */
  0x7f, 0xda,                               /*344: jg      320                      */
  0x48, 0x8b, 0x7d, 0xd8,                   /*346: mov     -0x28(%rbp), %rdi        */
  0xff, 0x93, 0x60, 0x01, 0x00, 0x00,       /*34a: callq   *0x160(%rbx)             */
  0x48, 0x8b, 0x45, 0xd0,                   /*350: mov     -0x30(%rbp), %rax        */
  0x8b, 0x40, 0x44,                         /*354: mov     0x44(%rax), %eax         */
  0x89, 0x45, 0xcc,                         /*357: mov     %eax, -0x34(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*35a: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x30,                   /*35e: mov     0x30(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*362: mov     -0x20(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*366: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*36a: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*36e: mov     0x10(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xd8,                   /*372: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*376: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x08,                   /*37a: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x4d, 0xe0,                   /*37e: mov     -0x20(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*382: mov     %rax, 0x18(%rcx)         */
  0x83, 0x7d, 0xcc, 0xff,                   /*386: cmpl    $0xffffffff, -0x34(%rbp) */
  0x0f, 0x84, 0x8a, 0x00, 0x00, 0x00,       /*38a: je      41a                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*390: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*394: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*398: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*39c: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3a0: mov     -0x20(%rbp), %rcx        */
  0x48, 0x89, 0x01,                         /*3a4: mov     %rax, (%rcx)             */
  0x48, 0x8b, 0x45, 0xe0,                   /*3a7: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x08,                         /*3ab: mov     (%rax), %rcx             */
  0x48, 0x8b, 0x49, 0x18,                   /*3ae: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x08,                   /*3b2: mov     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xe0,                   /*3b6: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*3ba: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x10,                   /*3be: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x20,                   /*3c2: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*3c6: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*3ca: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*3ce: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*3d2: mov     %rcx, 0x28(%rax)         */
  0x48, 0x63, 0x45, 0xcc,                   /*3d6: movslq  -0x34(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3da: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*3de: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*3e2: shl     $0x4, %rax               */
  0x48, 0x8b, 0x55, 0xb8,                   /*3e6: mov     -0x48(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xc0,                   /*3ea: mov     -0x40(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*3ee: mov     %rsi, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x14, 0x01,                   /*3f3: mov     %rdx, (%rcx, %rax, 1)    */
  0xeb, 0x16,                               /*3f7: jmp     40f                      */
  0x48, 0x8b, 0x7d, 0xd8,                   /*3f9: mov     -0x28(%rbp), %rdi        */
  0x31, 0xf6,                               /*3fd: xor     %esi, %esi               */
  0xff, 0x93, 0xc0, 0x01, 0x00, 0x00,       /*3ff: callq   *0x1c0(%rbx)             */
  0x48, 0x8b, 0x7d, 0xe0,                   /*405: mov     -0x20(%rbp), %rdi        */
  0xff, 0x93, 0xc8, 0x01, 0x00, 0x00,       /*409: callq   *0x1c8(%rbx)             */
  0x48, 0x83, 0xc4, 0x68,                   /*40f: add     $0x68, %rsp              */
  0x5b,                                     /*413: pop     %rbx                     */
  0x41, 0x5e,                               /*414: pop     %r14                     */
  0x41, 0x5f,                               /*416: pop     %r15                     */
  0x5d,                                     /*418: pop     %rbp                     */
  0xeb, 0x36,                               /*419: jmp (ret)                        */
  0x48, 0x8b, 0x45, 0xe0,                   /*41b: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x30,                   /*41f: mov     0x30(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xd8,                   /*423: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x01,                         /*427: mov     %rax, (%rcx)             */
  0x48, 0x8b, 0x45, 0xe0,                   /*42a: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*42e: mov     -0x48(%rbp), %rcx        */
  0x48, 0x8b, 0x55, 0xc0,                   /*432: mov     -0x40(%rbp), %rdx        */
  0x48, 0x89, 0x50, 0x40,                   /*436: mov     %rdx, 0x40(%rax)         */
  0x48, 0x89, 0x48, 0x38,                   /*43a: mov     %rcx, 0x38(%rax)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*43e: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x48,                   /*442: mov     0x48(%rax), %rdi         */
  0xbe, 0x01, 0x00, 0x00, 0x00,             /*446: mov     $0x1, %esi               */
  0xff, 0x93, 0x98, 0x01, 0x00, 0x00,       /*44b: callq   *0x198(%rbx)             */
};


static uint8_t op_tailcall[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x81, 0xec, 0x80, 0x00, 0x00, 0x00, /*07: sub     $0x80, %rsp              */
  0x49, 0x89, 0xfe,                         /*0e: mov     %rdi, %r14               */
  0x4c, 0x89, 0x75, 0xe8,                   /*11: mov     %r14, -0x18(%rbp)        */
  0x49, 0x8b, 0x46, 0x58,                   /*15: mov     0x58(%r14), %rax         */
  0x48, 0x89, 0x45, 0xe0,                   /*19: mov     %rax, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*1d: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*21: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*24: shr     $0x17, %eax              */
  0x89, 0x45, 0xdc,                         /*27: mov     %eax, -0x24(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*2a: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*2e: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*31: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*34: and     $0x7f, %eax              */
  0x89, 0x45, 0xd8,                         /*37: mov     %eax, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*3a: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x60,                         /*3e: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x0e,                         /*41: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*44: and     $0x1ff, %ecx             */
  0x48, 0x8b, 0x40, 0x28,                   /*4a: mov     0x28(%rax), %rax         */
  0x8b, 0x04, 0x88,                         /*4e: mov     (%rax, %rcx, 4), %eax    */
  0x89, 0x45, 0xac,                         /*51: mov     %eax, -0x54(%rbp)        */
  0x48, 0x63, 0x45, 0xdc,                   /*54: movslq  -0x24(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*58: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*5c: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*60: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*64: mov     (%rcx, %rax, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*68: mov     0x8(%rcx, %rax, 1), %rax */
  0x48, 0x89, 0x45, 0xb8,                   /*6d: mov     %rax, -0x48(%rbp)        */
  0x48, 0x89, 0x55, 0xb0,                   /*71: mov     %rdx, -0x50(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*75: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*79: mov     0x58(%rax), %rdi         */
  0x48, 0x8b, 0x75, 0xb0,                   /*7d: mov     -0x50(%rbp), %rsi        */
  0x8b, 0x55, 0xb8,                         /*81: mov     -0x48(%rbp), %edx        */
  0x41, 0xff, 0x96, 0x98, 0x02, 0x00, 0x00, /*84: callq   *0x298(%r14)             */
  0x48, 0x89, 0x45, 0xc8,                   /*8b: mov     %rax, -0x38(%rbp)        */
  0x48, 0x8b, 0x7d, 0xe0,                   /*8f: mov     -0x20(%rbp), %rdi        */
  0x8b, 0x55, 0xac,                         /*93: mov     -0x54(%rbp), %edx        */
  0x48, 0x8d, 0x75, 0xc8,                   /*96: lea     -0x38(%rbp), %rsi        */
  0x41, 0xff, 0x96, 0xd0, 0x00, 0x00, 0x00, /*9a: callq   *0xd0(%r14)              */
  0x48, 0x89, 0x45, 0xd0,                   /*a1: mov     %rax, -0x30(%rbp)        */
  0x48, 0x85, 0xc0,                         /*a5: test    %rax, %rax               */
  0x0f, 0x85, 0xc8, 0x00, 0x00, 0x00,       /*a8: jne     176                      */
  0x8b, 0x7d, 0xac,                         /*ae: mov     -0x54(%rbp), %edi        */
  0x41, 0xff, 0x96, 0x50, 0x01, 0x00, 0x00, /*b1: callq   *0x150(%r14)             */
  0x48, 0x89, 0x45, 0x98,                   /*b8: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*bc: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x7d, 0xe0,                   /*bf: mov     -0x20(%rbp), %rdi        */
  0x49, 0x8b, 0xb6, 0xb0, 0x02, 0x00, 0x00, /*c3: mov     0x2b0(%r14), %rsi        */
  0xba, 0x0e, 0x00, 0x00, 0x00,             /*ca: mov     $0xe, %edx               */
  0x41, 0xff, 0x96, 0xa0, 0x02, 0x00, 0x00, /*cf: callq   *0x2a0(%r14)             */
  0x89, 0x45, 0xac,                         /*d6: mov     %eax, -0x54(%rbp)        */
  0x48, 0x8b, 0x7d, 0xe0,                   /*d9: mov     -0x20(%rbp), %rdi        */
  0x48, 0x8d, 0x75, 0xc8,                   /*dd: lea     -0x38(%rbp), %rsi        */
  0x89, 0xc2,                               /*e1: mov     %eax, %edx               */
  0x41, 0xff, 0x96, 0xd0, 0x00, 0x00, 0x00, /*e3: callq   *0xd0(%r14)              */
  0x48, 0x89, 0x45, 0xd0,                   /*ea: mov     %rax, -0x30(%rbp)        */
  0x83, 0x7d, 0xd8, 0x7f,                   /*ee: cmpl    $0x7f, -0x28(%rbp)       */
  0x75, 0x35,                               /*f2: jne     129                      */
  0x48, 0x8b, 0x7d, 0xe0,                   /*f4: mov     -0x20(%rbp), %rdi        */
  0x48, 0x63, 0x45, 0xdc,                   /*f8: movslq  -0x24(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*fc: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*100: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*104: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x74, 0x08, 0x10,             /*108: mov     0x10(%rax, %rcx, 1), %rsi */
  0x8b, 0x54, 0x08, 0x18,                   /*10d: mov     0x18(%rax, %rcx, 1), %edx */
  0x48, 0x8b, 0x4d, 0x98,                   /*111: mov     -0x68(%rbp), %rcx        */
  0x44, 0x8b, 0x45, 0xa0,                   /*115: mov     -0x60(%rbp), %r8d        */
  0x41, 0xff, 0x96, 0x38, 0x02, 0x00, 0x00, /*119: callq   *0x238(%r14)             */
  0x48, 0x89, 0x45, 0x88,                   /*120: mov     %rax, -0x78(%rbp)        */
  0x89, 0x55, 0x90,                         /*124: mov     %edx, -0x70(%rbp)        */
  0xeb, 0x4d,                               /*127: jmp     176                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*129: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*12d: mov     0x18(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xdc,                   /*131: movslq  -0x24(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*135: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x7c, 0x08, 0x20,             /*139: lea     0x20(%rax, %rcx, 1), %rdi */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*13e: lea     0x10(%rax, %rcx, 1), %rsi */
  0x48, 0x63, 0x55, 0xd8,                   /*143: movslq  -0x28(%rbp), %rdx        */
  0x48, 0xff, 0xc2,                         /*147: inc     %rdx                     */
  0x89, 0x55, 0xd8,                         /*14a: mov     %edx, -0x28(%rbp)        */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*14d: callq   *0xa8(%r14)              */
  0x48, 0x63, 0x45, 0xdc,                   /*154: movslq  -0x24(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*158: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*15c: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*160: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x55, 0x98,                   /*164: mov     -0x68(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xa0,                   /*168: mov     -0x60(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x18,             /*16c: mov     %rsi, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x54, 0x08, 0x10,             /*171: mov     %rdx, 0x10(%rax, %rcx, 1) */
  0x48, 0x8b, 0x45, 0xe0,                   /*176: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*17a: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*17e: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xc0,                   /*182: mov     %rax, -0x40(%rbp)        */
  0x8b, 0x4d, 0xac,                         /*186: mov     -0x54(%rbp), %ecx        */
  0x89, 0x08,                               /*189: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x45, 0xc8,                   /*18b: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*18f: mov     -0x40(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*193: mov     %rax, 0x48(%rcx)         */
  0x83, 0x7d, 0xd8, 0x7f,                   /*197: cmpl    $0x7f, -0x28(%rbp)       */
  0x75, 0x0d,                               /*19b: jne     1aa                      */
  0x48, 0x8b, 0x45, 0xc0,                   /*19d: mov     -0x40(%rbp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*1a1: movl    $0xffffffff, 0x40(%rax)  */
  0xeb, 0x0a,                               /*1a8: jmp     1b4                      */
  0x8b, 0x45, 0xd8,                         /*1aa: mov     -0x28(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*1ad: mov     -0x40(%rbp), %rcx        */
  0x89, 0x41, 0x40,                         /*1b1: mov     %eax, 0x40(%rcx)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*1b4: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1b8: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x78, 0x08,                   /*1bc: mov     0x8(%rax), %rdi          */
  0x48, 0x63, 0x75, 0xdc,                   /*1c0: movslq  -0x24(%rbp), %rsi        */
  0x48, 0x8b, 0x45, 0xe8,                   /*1c4: mov     -0x18(%rbp), %rax        */
  0x48, 0xc1, 0xe6, 0x04,                   /*1c8: shl     $0x4, %rsi               */
  0x48, 0x03, 0x70, 0x18,                   /*1cc: add     0x18(%rax), %rsi         */
  0x48, 0x8b, 0x45, 0xc0,                   /*1d0: mov     -0x40(%rbp), %rax        */
  0x48, 0x63, 0x50, 0x40,                   /*1d4: movslq  0x40(%rax), %rdx         */
  0x48, 0xff, 0xc2,                         /*1d8: inc     %rdx                     */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*1db: callq   *0xa8(%r14)              */
  0x48, 0x8b, 0x45, 0xd0,                   /*1e2: mov     -0x30(%rbp), %rax        */
  0x8b, 0x00,                               /*1e6: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*1e8: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*1eb: test    $0x80, %al               */
  0x74, 0x58,                               /*1ed: je      247                      */
  0x48, 0x8b, 0x7d, 0xe0,                   /*1ef: mov     -0x20(%rbp), %rdi        */
  0x48, 0x8b, 0x47, 0x18,                   /*1f3: mov     0x18(%rdi), %rax         */
  0x48, 0x8b, 0x58, 0x08,                   /*1f7: mov     0x8(%rax), %rbx          */
  0x48, 0x8b, 0x45, 0xd0,                   /*1fb: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x75, 0xb0,                   /*1ff: mov     -0x50(%rbp), %rsi        */
  0x8b, 0x55, 0xb8,                         /*203: mov     -0x48(%rbp), %edx        */
  0xff, 0x50, 0x18,                         /*206: callq   *0x18(%rax)              */
  0x48, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, /*209: mov     %rax, -0x88(%rbp)        */
  0x89, 0x55, 0x80,                         /*210: mov     %edx, -0x80(%rbp)        */
  0x48, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, /*213: mov     -0x88(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x80,                   /*21a: mov     -0x80(%rbp), %rcx        */
  0x48, 0x89, 0x4b, 0x08,                   /*21e: mov     %rcx, 0x8(%rbx)          */
  0x48, 0x89, 0x03,                         /*222: mov     %rax, (%rbx)             */
  0x48, 0x8b, 0x7d, 0xe0,                   /*225: mov     -0x20(%rbp), %rdi        */
  0x48, 0x8b, 0x45, 0xe8,                   /*229: mov     -0x18(%rbp), %rax        */
  0x8b, 0x70, 0x50,                         /*22d: mov     0x50(%rax), %esi         */
  0x41, 0xff, 0x96, 0x10, 0x01, 0x00, 0x00, /*230: callq   *0x110(%r14)             */
  0x48, 0x8b, 0x7d, 0xe8,                   /*237: mov     -0x18(%rbp), %rdi        */
  0x41, 0xff, 0x96, 0x88, 0x00, 0x00, 0x00, /*23b: callq   *0x88(%r14)              */
  0xe9, 0xac, 0x00, 0x00, 0x00,             /*242: jmpq    2f3                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*247: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*24b: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*24f: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*253: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xe8,                   /*257: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*25b: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x10,                   /*25f: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x20,                   /*263: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*267: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*26b: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*26f: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*273: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xc0,                   /*277: mov     -0x40(%rbp), %rax        */
  0x83, 0x78, 0x40, 0x00,                   /*27b: cmpl    $0x0, 0x40(%rax)         */
  0x78, 0x1c,                               /*27f: js      29d                      */
  0x48, 0x8b, 0x7d, 0xe0,                   /*281: mov     -0x20(%rbp), %rdi        */
  0x48, 0x8b, 0x45, 0xe8,                   /*285: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*289: mov     0x8(%rax), %rax          */
  0x0f, 0xb7, 0x70, 0x02,                   /*28d: movzwl  0x2(%rax), %esi          */
  0x48, 0x8b, 0x45, 0xc0,                   /*291: mov     -0x40(%rbp), %rax        */
  0x8b, 0x50, 0x40,                         /*295: mov     0x40(%rax), %edx         */
  0x83, 0xc2, 0x02,                         /*298: add     $0x2, %edx               */
  0xeb, 0x2b,                               /*29b: jmp     2c8                      */
  0x48, 0x8b, 0x7d, 0xe0,                   /*29d: mov     -0x20(%rbp), %rdi        */
  0x48, 0x8b, 0x45, 0xe8,                   /*2a1: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*2a5: mov     0x8(%rax), %rax          */
  0x0f, 0xb7, 0x40, 0x02,                   /*2a9: movzwl  0x2(%rax), %eax          */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*2ad: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*2b2: cmp     $0x3, %eax               */
  0x7c, 0x0c,                               /*2b5: jl      2c3                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*2b7: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*2bb: mov     0x8(%rax), %rax          */
  0x0f, 0xb7, 0x70, 0x02,                   /*2bf: movzwl  0x2(%rax), %esi          */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*2c3: mov     $0x3, %edx               */
  0x41, 0xff, 0x96, 0x40, 0x01, 0x00, 0x00, /*2c8: callq   *0x140(%r14)             */
  0x48, 0x8b, 0x45, 0xe0,                   /*2cf: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2d3: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*2d7: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xe8,                   /*2db: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*2df: mov     %rax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*2e3: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*2e7: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x08,                   /*2eb: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x10,                   /*2ef: mov     %rcx, 0x10(%rax)         */
  0x48, 0x81, 0xc4, 0x80, 0x00, 0x00, 0x00, /*2f3: add     $0x80, %rsp              */
  0x5b,                                     /*2fa: pop     %rbx                     */
  0x41, 0x5e,                               /*2fb: pop     %r14                     */
  0x5d,                                     /*2fd: pop     %rbp                     */
};


static uint8_t op_blkpush[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x38,                   /*05: sub     $0x38, %rsp              */
  0x48, 0x89, 0xfb,                         /*09: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5d, 0xf0,                   /*0c: mov     %rbx, -0x10(%rbp)        */
  0x48, 0x8b, 0x43, 0x58,                   /*10: mov     0x58(%rbx), %rax         */
  0x48, 0x89, 0x45, 0xe8,                   /*14: mov     %rax, -0x18(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*18: mov     -0x10(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*1c: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*1f: shr     $0x17, %eax              */
  0x89, 0x45, 0xe4,                         /*22: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*25: mov     -0x10(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*29: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*2c: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*2f: movzwl  %ax, %eax                */
  0x89, 0x45, 0xe0,                         /*32: mov     %eax, -0x20(%rbp)        */
  0xc1, 0xe8, 0x0a,                         /*35: shr     $0xa, %eax               */
  0x89, 0x45, 0xdc,                         /*38: mov     %eax, -0x24(%rbp)        */
  0x8b, 0x45, 0xe0,                         /*3b: mov     -0x20(%rbp), %eax        */
  0xc1, 0xe8, 0x09,                         /*3e: shr     $0x9, %eax               */
  0x83, 0xe0, 0x01,                         /*41: and     $0x1, %eax               */
  0x89, 0x45, 0xd8,                         /*44: mov     %eax, -0x28(%rbp)        */
  0x8b, 0x45, 0xe0,                         /*47: mov     -0x20(%rbp), %eax        */
  0xc1, 0xe8, 0x04,                         /*4a: shr     $0x4, %eax               */
  0x83, 0xe0, 0x1f,                         /*4d: and     $0x1f, %eax              */
  0x89, 0x45, 0xd4,                         /*50: mov     %eax, -0x2c(%rbp)        */
  0x8b, 0x45, 0xe0,                         /*53: mov     -0x20(%rbp), %eax        */
  0x83, 0xe0, 0x0f,                         /*56: and     $0xf, %eax               */
  0x89, 0x45, 0xd0,                         /*59: mov     %eax, -0x30(%rbp)        */
  0x74, 0x22,                               /*5c: je      80                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*5e: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*62: mov     0x58(%rax), %rdi         */
  0x8b, 0x75, 0xd0,                         /*66: mov     -0x30(%rbp), %esi        */
  0xff, 0xce,                               /*69: dec     %esi                     */
  0xff, 0x93, 0x90, 0x02, 0x00, 0x00,       /*6b: callq   *0x290(%rbx)             */
  0x48, 0x89, 0x45, 0xc0,                   /*71: mov     %rax, -0x40(%rbp)        */
  0x48, 0x85, 0xc0,                         /*75: test    %rax, %rax               */
  0x74, 0x5d,                               /*78: je      d7                       */
  0x48, 0x8b, 0x45, 0xc0,                   /*7a: mov     -0x40(%rbp), %rax        */
  0xeb, 0x04,                               /*7e: jmp     84                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*80: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*84: mov     0x18(%rax), %rax         */
  0x48, 0x83, 0xc0, 0x10,                   /*88: add     $0x10, %rax              */
  0x48, 0x89, 0x45, 0xc8,                   /*8c: mov     %rax, -0x38(%rbp)        */
  0x48, 0x63, 0x45, 0xe4,                   /*90: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xf0,                   /*94: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*98: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*9c: shl     $0x4, %rax               */
  0x48, 0x63, 0x55, 0xdc,                   /*a0: movslq  -0x24(%rbp), %rdx        */
  0x48, 0x63, 0x75, 0xd8,                   /*a4: movslq  -0x28(%rbp), %rsi        */
  0x48, 0x01, 0xd6,                         /*a8: add     %rdx, %rsi               */
  0x48, 0x63, 0x55, 0xd4,                   /*ab: movslq  -0x2c(%rbp), %rdx        */
  0x48, 0x01, 0xf2,                         /*af: add     %rsi, %rdx               */
  0x48, 0x8b, 0x75, 0xc8,                   /*b2: mov     -0x38(%rbp), %rsi        */
  0x48, 0xc1, 0xe2, 0x04,                   /*b6: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x3c, 0x16,                   /*ba: mov     (%rsi, %rdx, 1), %rdi    */
  0x48, 0x8b, 0x54, 0x16, 0x08,             /*be: mov     0x8(%rsi, %rdx, 1), %rdx */
  0x48, 0x89, 0x54, 0x01, 0x08,             /*c3: mov     %rdx, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x3c, 0x01,                   /*c8: mov     %rdi, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf0,                   /*cc: mov     -0x10(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*d0: addq    $0x4, 0x10(%rax)         */
  0xeb, 0x19,                               /*d5: jmp     f0                       */
  0x48, 0x8b, 0x7d, 0xe8,                   /*d7: mov     -0x18(%rbp), %rdi        */
  0xbe, 0x02, 0x00, 0x00, 0x00,             /*db: mov     $0x2, %esi               */
  0xff, 0x93, 0xc0, 0x01, 0x00, 0x00,       /*e0: callq   *0x1c0(%rbx)             */
  0x48, 0x8b, 0x7d, 0xf0,                   /*e6: mov     -0x10(%rbp), %rdi        */
  0xff, 0x93, 0xc8, 0x01, 0x00, 0x00,       /*ea: callq   *0x1c8(%rbx)             */
  0x48, 0x83, 0xc4, 0x38,                   /*f0: add     $0x38, %rsp              */
  0x5b,                                     /*f4: pop     %rbx                     */
  0x5d,                                     /*f5: pop     %rbp                     */
};


static uint8_t op_add[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x60,                   /*07: sub     $0x60, %rsp              */
  0x48, 0x89, 0xf8,                         /*0b: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xe8,                   /*0e: mov     %rax, -0x18(%rbp)        */
  0x8b, 0x48, 0x60,                         /*12: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*15: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xe4,                         /*18: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1b: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*1f: mov     0x58(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xd8,                   /*23: mov     %rcx, -0x28(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*27: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*2b: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xd0,                   /*2f: mov     %rcx, -0x30(%rbp)        */
  0x48, 0x63, 0x55, 0xe4,                   /*33: movslq  -0x1c(%rbp), %rdx        */
  0x48, 0xc1, 0xe2, 0x04,                   /*37: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*3b: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*40: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*43: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*48: or      %esi, %ecx               */
  0x81, 0xf9, 0x0f, 0x10, 0x00, 0x00,       /*4a: cmp     $0x100f, %ecx            */
  0x7f, 0x77,                               /*50: jg      c9                       */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*52: cmp     $0x602, %ecx             */
  0x0f, 0x8f, 0xbd, 0x00, 0x00, 0x00,       /*58: jg      11b                      */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*5e: cmp     $0x303, %ecx             */
  0x0f, 0x85, 0xde, 0x00, 0x00, 0x00,       /*64: jne     148                      */
  0x48, 0x8b, 0x4d, 0xd0,                   /*6a: mov     -0x30(%rbp), %rcx        */
  0x48, 0x63, 0x55, 0xe4,                   /*6e: movslq  -0x1c(%rbp), %rdx        */
  0x48, 0xc1, 0xe2, 0x04,                   /*72: shl     $0x4, %rdx               */
  0x48, 0x8d, 0x34, 0x11,                   /*76: lea     (%rcx, %rdx, 1), %rsi    */
  0x48, 0x89, 0x75, 0xb8,                   /*7a: mov     %rsi, -0x48(%rbp)        */
  0x8b, 0x0c, 0x11,                         /*7e: mov     (%rcx, %rdx, 1), %ecx    */
  0x89, 0x4d, 0xcc,                         /*81: mov     %ecx, -0x34(%rbp)        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*84: mov     -0x48(%rbp), %rcx        */
  0x8b, 0x71, 0x10,                         /*88: mov     0x10(%rcx), %esi         */
  0x89, 0x75, 0xc8,                         /*8b: mov     %esi, -0x38(%rbp)        */
  0x8b, 0x7d, 0xcc,                         /*8e: mov     -0x34(%rbp), %edi        */
  0x48, 0x8d, 0x55, 0xc4,                   /*91: lea     -0x3c(%rbp), %rdx        */
  0xff, 0x90, 0x90, 0x01, 0x00, 0x00,       /*95: callq   *0x190(%rax)             */
  0x84, 0xc0,                               /*9b: test    %al, %al                 */
  0x0f, 0x84, 0x40, 0x01, 0x00, 0x00,       /*9d: je      1e3                      */
  0x48, 0x8b, 0x45, 0xb8,                   /*a3: mov     -0x48(%rbp), %rax        */
  0xc7, 0x40, 0x08, 0x06, 0x00, 0x00, 0x00, /*a7: movl    $0x6, 0x8(%rax)          */
  0xf2, 0x0f, 0x2a, 0x45, 0xcc,             /*ae: cvtsi2sdl-0x34(%rbp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4d, 0xc8,             /*b3: cvtsi2sdl-0x38(%rbp), %xmm1      */
  0xf2, 0x0f, 0x58, 0xc8,                   /*b8: addsd   %xmm0, %xmm1             */
  0x48, 0x8b, 0x45, 0xb8,                   /*bc: mov     -0x48(%rbp), %rax        */
  0xf2, 0x0f, 0x11, 0x08,                   /*c0: movsd   %xmm1, (%rax)            */
  0xe9, 0x40, 0x01, 0x00, 0x00,             /*c4: jmpq    209                      */
  0x81, 0xf9, 0x10, 0x10, 0x00, 0x00,       /*c9: cmp     $0x1010, %ecx            */
  0x0f, 0x85, 0x02, 0x01, 0x00, 0x00,       /*cf: jne     1d7                      */
  0x48, 0x63, 0x5d, 0xe4,                   /*d5: movslq  -0x1c(%rbp), %rbx        */
  0x4c, 0x8b, 0x75, 0xd0,                   /*d9: mov     -0x30(%rbp), %r14        */
  0x48, 0xc1, 0xe3, 0x04,                   /*dd: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x7d, 0xd8,                   /*e1: mov     -0x28(%rbp), %rdi        */
  0x49, 0x8b, 0x34, 0x1e,                   /*e5: mov     (%r14, %rbx, 1), %rsi    */
  0x41, 0x8b, 0x54, 0x1e, 0x08,             /*e9: mov     0x8(%r14, %rbx, 1), %edx */
  0x49, 0x8b, 0x4c, 0x1e, 0x10,             /*ee: mov     0x10(%r14, %rbx, 1), %rcx */
  0x45, 0x8b, 0x44, 0x1e, 0x18,             /*f3: mov     0x18(%r14, %rbx, 1), %r8d */
  0xff, 0x90, 0x38, 0x01, 0x00, 0x00,       /*f8: callq   *0x138(%rax)             */
  0x48, 0x89, 0x45, 0x98,                   /*fe: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*102: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*105: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*109: mov     -0x60(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*10d: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*112: mov     %rax, (%r14, %rbx, 1)    */
  0xe9, 0xee, 0x00, 0x00, 0x00,             /*116: jmpq    209                      */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*11b: cmp     $0x603, %ecx             */
  0x0f, 0x85, 0x8a, 0x00, 0x00, 0x00,       /*121: jne     1b1                      */
  0x48, 0x63, 0x45, 0xe4,                   /*127: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*12b: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*12f: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*133: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x58, 0x04, 0x01,             /*139: addsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*13e: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xe9, 0xc1, 0x00, 0x00, 0x00,             /*143: jmpq    209                      */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*148: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x83, 0x00, 0x00, 0x00,       /*14e: jne     1d7                      */
  0x48, 0x63, 0x45, 0xe4,                   /*154: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*158: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*15c: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*160: mov     (%rcx, %rax, 1), %eax    */
  0x89, 0x45, 0xb4,                         /*163: mov     %eax, -0x4c(%rbp)        */
  0x48, 0x63, 0x45, 0xe4,                   /*166: movslq  -0x1c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*16a: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xd0,                   /*16e: mov     -0x30(%rbp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*172: movsd   0x10(%rax, %rcx, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x45, 0xa8,             /*178: movsd   %xmm0, -0x58(%rbp)       */
  0x48, 0x63, 0x45, 0xe4,                   /*17d: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*181: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*185: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*189: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*190:                                  */
  0x0f, 0x57, 0xc0,                         /*191: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x45, 0xb4,             /*194: cvtsi2sdl-0x4c(%rbp), %xmm0      */
  0xf2, 0x0f, 0x58, 0x45, 0xa8,             /*199: addsd   -0x58(%rbp), %xmm0       */
  0x48, 0x63, 0x45, 0xe4,                   /*19e: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*1a2: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1a6: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*1aa: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xeb, 0x58,                               /*1af: jmp     209                      */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*1b1: cmp     $0x606, %ecx             */
  0x75, 0x1e,                               /*1b7: jne     1d7                      */
  0x48, 0x63, 0x45, 0xe4,                   /*1b9: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*1bd: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1c1: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*1c5: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x58, 0x44, 0x01, 0x10,       /*1ca: addsd   0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*1d0: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xeb, 0x32,                               /*1d5: jmp     209                      */
  0x48, 0x8b, 0x7d, 0xe8,                   /*1d7: mov     -0x18(%rbp), %rdi        */
  0xff, 0x90, 0xf0, 0x01, 0x00, 0x00,       /*1db: callq   *0x1f0(%rax)             */
  0xeb, 0x40,                               /*1e1: jmp     223                      */
  0x48, 0x63, 0x45, 0xe4,                   /*1e3: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*1e7: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1eb: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, /*1ef: movl    $0x3, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*1f6:                                  */
  0x8b, 0x45, 0xc4,                         /*1f7: mov     -0x3c(%rbp), %eax        */
  0x48, 0x63, 0x4d, 0xe4,                   /*1fa: movslq  -0x1c(%rbp), %rcx        */
  0x48, 0x8b, 0x55, 0xd0,                   /*1fe: mov     -0x30(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*202: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*206: mov     %eax, (%rdx, %rcx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*209: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x50,                         /*20d: mov     0x50(%rax), %eax         */
  0x48, 0x8b, 0x4d, 0xd8,                   /*210: mov     -0x28(%rbp), %rcx        */
  0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*214: mov     %eax, 0xdc(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*21a: mov     -0x18(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*21e: addq    $0x4, 0x10(%rax)         */
  0x48, 0x83, 0xc4, 0x60,                   /*223: add     $0x60, %rsp              */
  0x5b,                                     /*227: pop     %rbx                     */
  0x41, 0x5e,                               /*228: pop     %r14                     */
  0x5d,                                     /*22a: pop     %rbp                     */
};


static uint8_t op_addi[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x8b, 0x48, 0x60,                         /*0f: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1c: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x8b, 0x4c, 0x11, 0x08,                   /*2c: mov     0x8(%rcx, %rdx, 1), %ecx */
  0x83, 0xf9, 0x06,                         /*30: cmp     $0x6, %ecx               */
  0x75, 0x2c,                               /*33: jne     61                       */
  0x48, 0x8b, 0x45, 0xf8,                   /*35: mov     -0x8(%rbp), %rax         */
  0x8b, 0x40, 0x60,                         /*39: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*3c: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*3f: and     $0x7f, %eax              */
  0xf2, 0x0f, 0x2a, 0xc0,                   /*42: cvtsi2sd%eax, %xmm0              */
  0x48, 0x63, 0x45, 0xf4,                   /*46: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4a: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*4e: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x58, 0x04, 0x01,             /*52: addsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*57: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xe9, 0xf4, 0x00, 0x00, 0x00,             /*5c: jmpq    155                      */
  0x83, 0xf9, 0x03,                         /*61: cmp     $0x3, %ecx               */
  0x75, 0x6f,                               /*64: jne     d5                       */
  0x48, 0x63, 0x4d, 0xf4,                   /*66: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xe8,                   /*6a: mov     -0x18(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*6e: shl     $0x4, %rcx               */
  0x8b, 0x0c, 0x0a,                         /*72: mov     (%rdx, %rcx, 1), %ecx    */
  0x89, 0x4d, 0xe4,                         /*75: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*78: mov     -0x8(%rbp), %rcx         */
  0x8b, 0x71, 0x60,                         /*7c: mov     0x60(%rcx), %esi         */
  0xc1, 0xee, 0x07,                         /*7f: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*82: and     $0x7f, %esi              */
  0x89, 0x75, 0xe0,                         /*85: mov     %esi, -0x20(%rbp)        */
  0x8b, 0x7d, 0xe4,                         /*88: mov     -0x1c(%rbp), %edi        */
  0x48, 0x8d, 0x55, 0xdc,                   /*8b: lea     -0x24(%rbp), %rdx        */
  0xff, 0x90, 0x90, 0x01, 0x00, 0x00,       /*8f: callq   *0x190(%rax)             */
  0x84, 0xc0,                               /*95: test    %al, %al                 */
  0x0f, 0x84, 0x92, 0x00, 0x00, 0x00,       /*97: je      12f                      */
  0x48, 0x63, 0x45, 0xf4,                   /*9d: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*a1: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*a5: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*a9: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*b0:                                  */
  0xf2, 0x0f, 0x2a, 0x45, 0xe4,             /*b1: cvtsi2sdl-0x1c(%rbp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4d, 0xe0,             /*b6: cvtsi2sdl-0x20(%rbp), %xmm1      */
  0xf2, 0x0f, 0x58, 0xc8,                   /*bb: addsd   %xmm0, %xmm1             */
  0x48, 0x63, 0x45, 0xf4,                   /*bf: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*c3: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*c7: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x11, 0x0c, 0x01,             /*cb: movsd   %xmm1, (%rcx, %rax, 1)   */
  0xe9, 0x80, 0x00, 0x00, 0x00,             /*d0: jmpq    155                      */
  0x48, 0x63, 0x4d, 0xf4,                   /*d5: movslq  -0xc(%rbp), %rcx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*d9: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xe8,                   /*dd: mov     -0x18(%rbp), %rdx        */
  0xc7, 0x44, 0x11, 0x18, 0x03, 0x00, 0x00, /*e1: movl    $0x3, 0x18(%rcx, %rdx, 1) */
  0x00,                                     /*e8:                                  */
  0x48, 0x8b, 0x4d, 0xf8,                   /*e9: mov     -0x8(%rbp), %rcx         */
  0x8b, 0x49, 0x60,                         /*ed: mov     0x60(%rcx), %ecx         */
  0xc1, 0xe9, 0x07,                         /*f0: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*f3: and     $0x7f, %ecx              */
  0x48, 0x63, 0x55, 0xf4,                   /*f6: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*fa: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x75, 0xe8,                   /*fe: mov     -0x18(%rbp), %rsi        */
  0x89, 0x4c, 0x32, 0x10,                   /*102: mov     %ecx, 0x10(%rdx, %rsi, 1) */
  0x8b, 0x4d, 0xf4,                         /*106: mov     -0xc(%rbp), %ecx         */
  0xc1, 0xe1, 0x17,                         /*109: shl     $0x17, %ecx              */
  0x48, 0x8b, 0x55, 0xf8,                   /*10c: mov     -0x8(%rbp), %rdx         */
  0xbe, 0x00, 0xc0, 0x7f, 0x00,             /*110: mov     $0x7fc000, %esi          */
  0x23, 0x72, 0x60,                         /*115: and     0x60(%rdx), %esi         */
  0x09, 0xce,                               /*118: or      %ecx, %esi               */
  0x81, 0xce, 0xa0, 0x00, 0x00, 0x00,       /*11a: or      $0xa0, %esi              */
  0x89, 0x72, 0x60,                         /*120: mov     %esi, 0x60(%rdx)         */
  0x48, 0x8b, 0x7d, 0xf8,                   /*123: mov     -0x8(%rbp), %rdi         */
  0xff, 0x90, 0xf0, 0x01, 0x00, 0x00,       /*127: callq   *0x1f0(%rax)             */
  0xeb, 0x2f,                               /*12d: jmp     15e                      */
  0x48, 0x63, 0x45, 0xf4,                   /*12f: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*133: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*137: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, /*13b: movl    $0x3, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*142:                                  */
  0x8b, 0x45, 0xdc,                         /*143: mov     -0x24(%rbp), %eax        */
  0x48, 0x63, 0x4d, 0xf4,                   /*146: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xe8,                   /*14a: mov     -0x18(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*14e: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*152: mov     %eax, (%rdx, %rcx, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*155: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*159: addq    $0x4, 0x10(%rax)         */
  0x48, 0x83, 0xc4, 0x30,                   /*15e: add     $0x30, %rsp              */
  0x5d,                                     /*162: pop     %rbp                     */
};


static uint8_t op_sub[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x8b, 0x48, 0x60,                         /*0f: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1c: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x6d,                               /*41: jg      b0                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x0f, 0x85, 0x92, 0x00, 0x00, 0x00,       /*49: jne     e1                       */
  0x48, 0x63, 0x4d, 0xf4,                   /*4f: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xe8,                   /*53: mov     -0x18(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*57: shl     $0x4, %rcx               */
  0x8b, 0x0c, 0x0a,                         /*5b: mov     (%rdx, %rcx, 1), %ecx    */
  0x89, 0x4d, 0xe4,                         /*5e: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x63, 0x4d, 0xf4,                   /*61: movslq  -0xc(%rbp), %rcx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*65: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xe8,                   /*69: mov     -0x18(%rbp), %rdx        */
  0x8b, 0x74, 0x11, 0x10,                   /*6d: mov     0x10(%rcx, %rdx, 1), %esi */
  0x89, 0x75, 0xe0,                         /*71: mov     %esi, -0x20(%rbp)        */
  0x8b, 0x7d, 0xe4,                         /*74: mov     -0x1c(%rbp), %edi        */
  0x48, 0x8d, 0x55, 0xdc,                   /*77: lea     -0x24(%rbp), %rdx        */
  0xff, 0x90, 0x70, 0x01, 0x00, 0x00,       /*7b: callq   *0x170(%rax)             */
  0x84, 0xc0,                               /*81: test    %al, %al                 */
  0x0f, 0x84, 0xf3, 0x00, 0x00, 0x00,       /*83: je      17c                      */
  0x48, 0x63, 0x45, 0xf4,                   /*89: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*8d: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*91: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*95: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*9c:                                  */
  0xf2, 0x0f, 0x2a, 0x45, 0xe4,             /*9d: cvtsi2sdl-0x1c(%rbp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4d, 0xe0,             /*a2: cvtsi2sdl-0x20(%rbp), %xmm1      */
  0xf2, 0x0f, 0x5c, 0xc1,                   /*a7: subsd   %xmm1, %xmm0             */
  0xe9, 0x87, 0x00, 0x00, 0x00,             /*ab: jmpq    137                      */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*b0: cmp     $0x603, %ecx             */
  0x0f, 0x85, 0x8e, 0x00, 0x00, 0x00,       /*b6: jne     14a                      */
  0x48, 0x63, 0x45, 0xf4,                   /*bc: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*c0: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*c4: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*c8: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*cd: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm1 */
  0xf2, 0x0f, 0x5c, 0xc1,                   /*d3: subsd   %xmm1, %xmm0             */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*d7: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xe9, 0xc1, 0x00, 0x00, 0x00,             /*dc: jmpq    1a2                      */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*e1: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x83, 0x00, 0x00, 0x00,       /*e7: jne     170                      */
  0x48, 0x63, 0x45, 0xf4,                   /*ed: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*f1: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f5: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*f9: mov     (%rcx, %rax, 1), %eax    */
  0x89, 0x45, 0xd8,                         /*fc: mov     %eax, -0x28(%rbp)        */
  0x48, 0x63, 0x45, 0xf4,                   /*ff: movslq  -0xc(%rbp), %rax         */
  0x48, 0xc1, 0xe0, 0x04,                   /*103: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*107: mov     -0x18(%rbp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*10b: movsd   0x10(%rax, %rcx, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x45, 0xd0,             /*111: movsd   %xmm0, -0x30(%rbp)       */
  0x48, 0x63, 0x45, 0xf4,                   /*116: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*11a: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*11e: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*122: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*129:                                  */
  0x0f, 0x57, 0xc0,                         /*12a: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x45, 0xd8,             /*12d: cvtsi2sdl-0x28(%rbp), %xmm0      */
  0xf2, 0x0f, 0x5c, 0x45, 0xd0,             /*132: subsd   -0x30(%rbp), %xmm0       */
  0x48, 0x63, 0x45, 0xf4,                   /*137: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*13b: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*13f: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*143: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xeb, 0x58,                               /*148: jmp     1a2                      */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*14a: cmp     $0x606, %ecx             */
  0x75, 0x1e,                               /*150: jne     170                      */
  0x48, 0x63, 0x45, 0xf4,                   /*152: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*156: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*15a: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*15e: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x5c, 0x44, 0x01, 0x10,       /*163: subsd   0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*169: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xeb, 0x32,                               /*16e: jmp     1a2                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*170: mov     -0x8(%rbp), %rdi         */
  0xff, 0x90, 0xf0, 0x01, 0x00, 0x00,       /*174: callq   *0x1f0(%rax)             */
  0xeb, 0x2f,                               /*17a: jmp     1ab                      */
  0x48, 0x63, 0x45, 0xf4,                   /*17c: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*180: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*184: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, /*188: movl    $0x3, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*18f:                                  */
  0x8b, 0x45, 0xdc,                         /*190: mov     -0x24(%rbp), %eax        */
  0x48, 0x63, 0x4d, 0xf4,                   /*193: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xe8,                   /*197: mov     -0x18(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*19b: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*19f: mov     %eax, (%rdx, %rcx, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*1a2: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*1a6: addq    $0x4, 0x10(%rax)         */
  0x48, 0x83, 0xc4, 0x30,                   /*1ab: add     $0x30, %rsp              */
  0x5d,                                     /*1af: pop     %rbp                     */
};


static uint8_t op_subi[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x8b, 0x48, 0x60,                         /*0f: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1c: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x48, 0x8d, 0x34, 0x11,                   /*2c: lea     (%rcx, %rdx, 1), %rsi    */
  0x48, 0x89, 0x75, 0xe0,                   /*30: mov     %rsi, -0x20(%rbp)        */
  0x8b, 0x4c, 0x11, 0x08,                   /*34: mov     0x8(%rcx, %rdx, 1), %ecx */
  0x83, 0xf9, 0x06,                         /*38: cmp     $0x6, %ecx               */
  0x75, 0x26,                               /*3b: jne     63                       */
  0x48, 0x8b, 0x45, 0xf8,                   /*3d: mov     -0x8(%rbp), %rax         */
  0x8b, 0x40, 0x60,                         /*41: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*44: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*47: and     $0x7f, %eax              */
  0xf2, 0x0f, 0x2a, 0xc0,                   /*4a: cvtsi2sd%eax, %xmm0              */
  0x48, 0x8b, 0x45, 0xe0,                   /*4e: mov     -0x20(%rbp), %rax        */
  0xf2, 0x0f, 0x10, 0x08,                   /*52: movsd   (%rax), %xmm1            */
  0xf2, 0x0f, 0x5c, 0xc8,                   /*56: subsd   %xmm0, %xmm1             */
  0xf2, 0x0f, 0x11, 0x08,                   /*5a: movsd   %xmm1, (%rax)            */
  0xe9, 0xae, 0x00, 0x00, 0x00,             /*5e: jmpq    111                      */
  0x83, 0xf9, 0x03,                         /*63: cmp     $0x3, %ecx               */
  0x75, 0x4d,                               /*66: jne     b5                       */
  0x48, 0x8b, 0x4d, 0xe0,                   /*68: mov     -0x20(%rbp), %rcx        */
  0x8b, 0x09,                               /*6c: mov     (%rcx), %ecx             */
  0x89, 0x4d, 0xdc,                         /*6e: mov     %ecx, -0x24(%rbp)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*71: mov     -0x8(%rbp), %rcx         */
  0x8b, 0x71, 0x60,                         /*75: mov     0x60(%rcx), %esi         */
  0xc1, 0xee, 0x07,                         /*78: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*7b: and     $0x7f, %esi              */
  0x89, 0x75, 0xd8,                         /*7e: mov     %esi, -0x28(%rbp)        */
  0x8b, 0x7d, 0xdc,                         /*81: mov     -0x24(%rbp), %edi        */
  0x48, 0x8d, 0x55, 0xd4,                   /*84: lea     -0x2c(%rbp), %rdx        */
  0xff, 0x90, 0x70, 0x01, 0x00, 0x00,       /*88: callq   *0x170(%rax)             */
  0x84, 0xc0,                               /*8e: test    %al, %al                 */
  0x74, 0x6b,                               /*90: je      fd                       */
  0x48, 0x8b, 0x45, 0xe0,                   /*92: mov     -0x20(%rbp), %rax        */
  0xc7, 0x40, 0x08, 0x06, 0x00, 0x00, 0x00, /*96: movl    $0x6, 0x8(%rax)          */
  0xf2, 0x0f, 0x2a, 0x45, 0xdc,             /*9d: cvtsi2sdl-0x24(%rbp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4d, 0xd8,             /*a2: cvtsi2sdl-0x28(%rbp), %xmm1      */
  0xf2, 0x0f, 0x5c, 0xc1,                   /*a7: subsd   %xmm1, %xmm0             */
  0x48, 0x8b, 0x45, 0xe0,                   /*ab: mov     -0x20(%rbp), %rax        */
  0xf2, 0x0f, 0x11, 0x00,                   /*af: movsd   %xmm0, (%rax)            */
  0xeb, 0x5c,                               /*b3: jmp     111                      */
  0x48, 0x8b, 0x4d, 0xe0,                   /*b5: mov     -0x20(%rbp), %rcx        */
  0xc7, 0x41, 0x18, 0x03, 0x00, 0x00, 0x00, /*b9: movl    $0x3, 0x18(%rcx)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*c0: mov     -0x8(%rbp), %rcx         */
  0x8b, 0x49, 0x60,                         /*c4: mov     0x60(%rcx), %ecx         */
  0xc1, 0xe9, 0x07,                         /*c7: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*ca: and     $0x7f, %ecx              */
  0x48, 0x8b, 0x55, 0xe0,                   /*cd: mov     -0x20(%rbp), %rdx        */
  0x89, 0x4a, 0x10,                         /*d1: mov     %ecx, 0x10(%rdx)         */
  0x8b, 0x4d, 0xf4,                         /*d4: mov     -0xc(%rbp), %ecx         */
  0xc1, 0xe1, 0x17,                         /*d7: shl     $0x17, %ecx              */
  0x48, 0x8b, 0x55, 0xf8,                   /*da: mov     -0x8(%rbp), %rdx         */
  0xbe, 0x00, 0xc0, 0x7f, 0x00,             /*de: mov     $0x7fc000, %esi          */
  0x23, 0x72, 0x60,                         /*e3: and     0x60(%rdx), %esi         */
  0x09, 0xce,                               /*e6: or      %ecx, %esi               */
  0x81, 0xce, 0xa0, 0x00, 0x00, 0x00,       /*e8: or      $0xa0, %esi              */
  0x89, 0x72, 0x60,                         /*ee: mov     %esi, 0x60(%rdx)         */
  0x48, 0x8b, 0x7d, 0xf8,                   /*f1: mov     -0x8(%rbp), %rdi         */
  0xff, 0x90, 0xf0, 0x01, 0x00, 0x00,       /*f5: callq   *0x1f0(%rax)             */
  0xeb, 0x1d,                               /*fb: jmp     11a                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*fd: mov     -0x20(%rbp), %rax        */
  0xc7, 0x40, 0x08, 0x03, 0x00, 0x00, 0x00, /*101: movl    $0x3, 0x8(%rax)          */
  0x8b, 0x45, 0xd4,                         /*108: mov     -0x2c(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*10b: mov     -0x20(%rbp), %rcx        */
  0x89, 0x01,                               /*10f: mov     %eax, (%rcx)             */
  0x48, 0x8b, 0x45, 0xf8,                   /*111: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*115: addq    $0x4, 0x10(%rax)         */
  0x48, 0x83, 0xc4, 0x30,                   /*11a: add     $0x30, %rsp              */
  0x5d,                                     /*11e: pop     %rbp                     */
};


static uint8_t op_mul[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x50,                   /*04: sub     $0x50, %rsp              */
  0x49, 0x89, 0xf9,                         /*08: mov     %rdi, %r9                */
  0x4c, 0x89, 0x4d, 0xf8,                   /*0b: mov     %r9, -0x8(%rbp)          */
  0x41, 0x8b, 0x49, 0x60,                   /*0f: mov     0x60(%r9), %ecx          */
  0xc1, 0xe9, 0x17,                         /*13: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*16: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*19: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x58,                   /*1d: mov     0x58(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*21: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*25: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*29: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe0,                   /*2d: mov     %rcx, -0x20(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*31: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*35: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*39: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*3e: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*41: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*46: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*48: cmp     $0x602, %ecx             */
  0x7f, 0x74,                               /*4e: jg      c4                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*50: cmp     $0x303, %ecx             */
  0x0f, 0x85, 0x90, 0x00, 0x00, 0x00,       /*56: jne     ec                       */
  0x48, 0x8b, 0x7d, 0xe8,                   /*5c: mov     -0x18(%rbp), %rdi        */
  0x48, 0x63, 0x45, 0xf4,                   /*60: movslq  -0xc(%rbp), %rax         */
  0x4c, 0x8b, 0x45, 0xe0,                   /*64: mov     -0x20(%rbp), %r8         */
  0x48, 0xc1, 0xe0, 0x04,                   /*68: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x00,                   /*6c: mov     (%r8, %rax, 1), %rsi     */
  0x41, 0x8b, 0x54, 0x00, 0x08,             /*70: mov     0x8(%r8, %rax, 1), %edx  */
  0x49, 0x8b, 0x4c, 0x00, 0x10,             /*75: mov     0x10(%r8, %rax, 1), %rcx */
  0x45, 0x8b, 0x44, 0x00, 0x18,             /*7a: mov     0x18(%r8, %rax, 1), %r8d */
  0x41, 0xff, 0x91, 0x70, 0x02, 0x00, 0x00, /*7f: callq   *0x270(%r9)              */
  0x48, 0x89, 0x45, 0xc0,                   /*86: mov     %rax, -0x40(%rbp)        */
  0x89, 0x55, 0xc8,                         /*8a: mov     %edx, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*8d: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*91: mov     -0x38(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xd8,                   /*95: mov     %rcx, -0x28(%rbp)        */
  0x48, 0x89, 0x45, 0xd0,                   /*99: mov     %rax, -0x30(%rbp)        */
  0x8b, 0x45, 0xd8,                         /*9d: mov     -0x28(%rbp), %eax        */
  0x83, 0xf8, 0x06,                         /*a0: cmp     $0x6, %eax               */
  0x0f, 0x85, 0xe7, 0x00, 0x00, 0x00,       /*a3: jne     190                      */
  0x48, 0x63, 0x45, 0xf4,                   /*a9: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*ad: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*b1: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*b5: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*bc:                                  */
  0xf2, 0x0f, 0x10, 0x45, 0xd0,             /*bd: movsd   -0x30(%rbp), %xmm0       */
  0xeb, 0x7e,                               /*c2: jmp     142                      */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*c4: cmp     $0x603, %ecx             */
  0x0f, 0x85, 0x80, 0x00, 0x00, 0x00,       /*ca: jne     150                      */
  0x48, 0x63, 0x45, 0xf4,                   /*d0: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*d4: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*d8: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*dc: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x59, 0x04, 0x01,             /*e2: mulsd   (%rcx, %rax, 1), %xmm0   */
  0xe9, 0x83, 0x00, 0x00, 0x00,             /*e7: jmpq    16f                      */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*ec: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x87, 0x00, 0x00, 0x00,       /*f2: jne     17f                      */
  0x48, 0x63, 0x45, 0xf4,                   /*f8: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*fc: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*100: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*104: mov     (%rcx, %rax, 1), %eax    */
  0x89, 0x45, 0xbc,                         /*107: mov     %eax, -0x44(%rbp)        */
  0x48, 0x63, 0x45, 0xf4,                   /*10a: movslq  -0xc(%rbp), %rax         */
  0x48, 0xc1, 0xe0, 0x04,                   /*10e: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*112: mov     -0x20(%rbp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*116: movsd   0x10(%rax, %rcx, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x45, 0xb0,             /*11c: movsd   %xmm0, -0x50(%rbp)       */
  0x48, 0x63, 0x45, 0xf4,                   /*121: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*125: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*129: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*12d: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*134:                                  */
  0x0f, 0x57, 0xc0,                         /*135: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x45, 0xbc,             /*138: cvtsi2sdl-0x44(%rbp), %xmm0      */
  0xf2, 0x0f, 0x59, 0x45, 0xb0,             /*13d: mulsd   -0x50(%rbp), %xmm0       */
  0x48, 0x63, 0x45, 0xf4,                   /*142: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*146: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*14a: shl     $0x4, %rax               */
  0xeb, 0x1f,                               /*14e: jmp     16f                      */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*150: cmp     $0x606, %ecx             */
  0x75, 0x27,                               /*156: jne     17f                      */
  0x48, 0x63, 0x45, 0xf4,                   /*158: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*15c: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*160: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*164: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x59, 0x44, 0x01, 0x10,       /*169: mulsd   0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*16f: movsd   %xmm0, (%rcx, %rax, 1)   */
  0x48, 0x8b, 0x45, 0xf8,                   /*174: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*178: addq    $0x4, 0x10(%rax)         */
  0xeb, 0x0b,                               /*17d: jmp     18a                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*17f: mov     -0x8(%rbp), %rdi         */
  0x41, 0xff, 0x91, 0xf0, 0x01, 0x00, 0x00, /*183: callq   *0x1f0(%r9)              */
  0x48, 0x83, 0xc4, 0x50,                   /*18a: add     $0x50, %rsp              */
  0x5d,                                     /*18e: pop     %rbp                     */
  0xeb, 0x2d,                               /*18f: jmp (ret)                        */
  0x83, 0xf8, 0x03,                         /*191: cmp     $0x3, %eax               */
  0x75, 0xdf,                               /*194: jne     174                      */
  0x48, 0x63, 0x45, 0xf4,                   /*196: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*19a: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*19e: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, /*1a2: movl    $0x3, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*1a9:                                  */
  0x8b, 0x45, 0xd0,                         /*1aa: mov     -0x30(%rbp), %eax        */
  0x48, 0x63, 0x4d, 0xf4,                   /*1ad: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xe0,                   /*1b1: mov     -0x20(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*1b5: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*1b9: mov     %eax, (%rdx, %rcx, 1)    */
  0xeb, 0xb7,                               /*1bc: jmp     174                      */
};


static uint8_t op_div[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x8b, 0x48, 0x60,                         /*0f: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1c: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x54,                               /*41: jg      97                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x75, 0x78,                               /*49: jne     c3                       */
  0x48, 0x63, 0x45, 0xf4,                   /*4b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*53: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*57: mov     (%rcx, %rax, 1), %eax    */
  0x89, 0x45, 0xe4,                         /*5a: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x63, 0x45, 0xf4,                   /*5d: movslq  -0xc(%rbp), %rax         */
  0x48, 0xc1, 0xe0, 0x04,                   /*61: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*65: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x44, 0x08, 0x10,                   /*69: mov     0x10(%rax, %rcx, 1), %eax */
  0x89, 0x45, 0xe0,                         /*6d: mov     %eax, -0x20(%rbp)        */
  0x48, 0x63, 0x45, 0xf4,                   /*70: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*74: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*78: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*7c: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*83:                                  */
  0xf2, 0x0f, 0x2a, 0x45, 0xe4,             /*84: cvtsi2sdl-0x1c(%rbp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4d, 0xe0,             /*89: cvtsi2sdl-0x20(%rbp), %xmm1      */
  0xf2, 0x0f, 0x5e, 0xc1,                   /*8e: divsd   %xmm1, %xmm0             */
  0xe9, 0x82, 0x00, 0x00, 0x00,             /*92: jmpq    119                      */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*97: cmp     $0x603, %ecx             */
  0x0f, 0x85, 0x84, 0x00, 0x00, 0x00,       /*9d: jne     127                      */
  0x48, 0x63, 0x45, 0xf4,                   /*a3: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*a7: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*ab: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*af: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*b4: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm1 */
  0xf2, 0x0f, 0x5e, 0xc1,                   /*ba: divsd   %xmm1, %xmm0             */
  0xe9, 0x83, 0x00, 0x00, 0x00,             /*be: jmpq    146                      */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*c3: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x87, 0x00, 0x00, 0x00,       /*c9: jne     156                      */
  0x48, 0x63, 0x45, 0xf4,                   /*cf: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*d3: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*d7: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*db: mov     (%rcx, %rax, 1), %eax    */
  0x89, 0x45, 0xdc,                         /*de: mov     %eax, -0x24(%rbp)        */
  0x48, 0x63, 0x45, 0xf4,                   /*e1: movslq  -0xc(%rbp), %rax         */
  0x48, 0xc1, 0xe0, 0x04,                   /*e5: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*e9: mov     -0x18(%rbp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*ed: movsd   0x10(%rax, %rcx, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x45, 0xd0,             /*f3: movsd   %xmm0, -0x30(%rbp)       */
  0x48, 0x63, 0x45, 0xf4,                   /*f8: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*fc: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*100: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*104: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*10b:                                  */
  0x0f, 0x57, 0xc0,                         /*10c: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x45, 0xdc,             /*10f: cvtsi2sdl-0x24(%rbp), %xmm0      */
  0xf2, 0x0f, 0x5e, 0x45, 0xd0,             /*114: divsd   -0x30(%rbp), %xmm0       */
  0x48, 0x63, 0x45, 0xf4,                   /*119: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*11d: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*121: shl     $0x4, %rax               */
  0xeb, 0x1f,                               /*125: jmp     146                      */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*127: cmp     $0x606, %ecx             */
  0x75, 0x27,                               /*12d: jne     156                      */
  0x48, 0x63, 0x45, 0xf4,                   /*12f: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*133: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*137: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*13b: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x5e, 0x44, 0x01, 0x10,       /*140: divsd   0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*146: movsd   %xmm0, (%rcx, %rax, 1)   */
  0x48, 0x8b, 0x45, 0xf8,                   /*14b: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*14f: addq    $0x4, 0x10(%rax)         */
  0xeb, 0x0a,                               /*154: jmp     160                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*156: mov     -0x8(%rbp), %rdi         */
  0xff, 0x90, 0xf0, 0x01, 0x00, 0x00,       /*15a: callq   *0x1f0(%rax)             */
  0x48, 0x83, 0xc4, 0x30,                   /*160: add     $0x30, %rsp              */
  0x5d,                                     /*164: pop     %rbp                     */
};


static uint8_t op_eq[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x49, 0x89, 0xfe,                         /*0b: mov     %rdi, %r14               */
  0x4c, 0x89, 0x75, 0xe8,                   /*0e: mov     %r14, -0x18(%rbp)        */
  0x41, 0x8b, 0x46, 0x60,                   /*12: mov     0x60(%r14), %eax         */
  0xc1, 0xe8, 0x17,                         /*16: shr     $0x17, %eax              */
  0x89, 0x45, 0xe4,                         /*19: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*1c: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*20: mov     0x18(%rax), %rax         */
  0x48, 0x89, 0x45, 0xd8,                   /*24: mov     %rax, -0x28(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*28: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x79, 0x58,                   /*2c: mov     0x58(%rcx), %rdi         */
  0x48, 0x63, 0x5d, 0xe4,                   /*30: movslq  -0x1c(%rbp), %rbx        */
  0x48, 0xc1, 0xe3, 0x04,                   /*34: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x34, 0x18,                   /*38: mov     (%rax, %rbx, 1), %rsi    */
  0x8b, 0x54, 0x18, 0x08,                   /*3c: mov     0x8(%rax, %rbx, 1), %edx */
  0x48, 0x8b, 0x4c, 0x18, 0x10,             /*40: mov     0x10(%rax, %rbx, 1), %rcx */
  0x44, 0x8b, 0x44, 0x18, 0x18,             /*45: mov     0x18(%rax, %rbx, 1), %r8d */
  0x41, 0xff, 0x96, 0xa0, 0x00, 0x00, 0x00, /*4a: callq   *0xa0(%r14)              */
  0x84, 0xc0,                               /*51: test    %al, %al                 */
  0x0f, 0x85, 0xb6, 0x00, 0x00, 0x00,       /*53: jne     10f                      */
  0x48, 0x63, 0x45, 0xe4,                   /*59: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*5d: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*61: shl     $0x4, %rax               */
  0x0f, 0xb7, 0x54, 0x01, 0x08,             /*65: movzwl  0x8(%rcx, %rax, 1), %edx */
  0xc1, 0xe2, 0x08,                         /*6a: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x01, 0x18,             /*6d: movzbl  0x18(%rcx, %rax, 1), %eax */
  0x09, 0xd0,                               /*72: or      %edx, %eax               */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*74: cmp     $0x602, %eax             */
  0x7f, 0x25,                               /*79: jg      a0                       */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*7b: cmp     $0x303, %eax             */
  0x75, 0x3f,                               /*80: jne     c1                       */
  0x48, 0x63, 0x45, 0xe4,                   /*82: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*86: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*8a: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*8e: mov     (%rcx, %rax, 1), %edx    */
  0x3b, 0x54, 0x01, 0x10,                   /*91: cmp     0x10(%rcx, %rax, 1), %edx */
  0x0f, 0x94, 0xc0,                         /*95: sete    %al                      */
  0x0f, 0xb6, 0xc0,                         /*98: movzbl  %al, %eax                */
  0x89, 0x45, 0xd4,                         /*9b: mov     %eax, -0x2c(%rbp)        */
  0xeb, 0x69,                               /*9e: jmp     109                      */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*a0: cmp     $0x603, %eax             */
  0x75, 0x38,                               /*a5: jne     df                       */
  0x48, 0x63, 0x45, 0xe4,                   /*a7: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*ab: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*af: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*b3: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0xc2, 0x04, 0x01, 0x00,       /*b9: cmpeqsd (%rcx, %rax, 1), %xmm0   */
  0xeb, 0x3d,                               /*bf: jmp     fe                       */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*c1: cmp     $0x306, %eax             */
  0x0f, 0x85, 0x92, 0x00, 0x00, 0x00,       /*c6: jne     15e                      */
  0x48, 0x63, 0x45, 0xe4,                   /*cc: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*d0: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*d4: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*d8: cvtsi2sdl(%rcx, %rax, 1), %xmm0  */
  0xeb, 0x18,                               /*dd: jmp     f7                       */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*df: cmp     $0x606, %eax             */
  0x75, 0x78,                               /*e4: jne     15e                      */
  0x48, 0x63, 0x45, 0xe4,                   /*e6: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*ea: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*ee: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*f2: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0xc2, 0x44, 0x01, 0x10, 0x00, /*f7: cmpeqsd 0x10(%rcx, %rax, 1), %xmm0 */
  0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*fe: movq    %xmm0, %rax              */
  0x83, 0xe0, 0x01,                         /*103: and     $0x1, %eax               */
  0x89, 0x45, 0xd4,                         /*106: mov     %eax, -0x2c(%rbp)        */
  0x83, 0x7d, 0xd4, 0x00,                   /*109: cmpl    $0x0, -0x2c(%rbp)        */
  0x74, 0x39,                               /*10d: je      148                      */
  0x48, 0x63, 0x45, 0xe4,                   /*10f: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*113: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*117: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*11b: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*122:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*123: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*127: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*12b: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*12f: movl    $0x1, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*136: mov     -0x18(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*13a: addq    $0x4, 0x10(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*13f: add     $0x20, %rsp              */
  0x5b,                                     /*143: pop     %rbx                     */
  0x41, 0x5e,                               /*144: pop     %r14                     */
  0x5d,                                     /*146: pop     %rbp                     */
  0xeb, 0x23,                               /*147: jmp (ret)                        */
  0x48, 0x63, 0x45, 0xe4,                   /*149: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*14d: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*151: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*155: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*15c:                                  */
  0xeb, 0xc5,                               /*15d: jmp     123                      */
  0x48, 0x8b, 0x7d, 0xe8,                   /*15f: mov     -0x18(%rbp), %rdi        */
  0x41, 0xff, 0x96, 0xf0, 0x01, 0x00, 0x00, /*163: callq   *0x1f0(%r14)             */
  0xeb, 0xd4,                               /*16a: jmp     13f                      */
};


static uint8_t op_lt[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x20,                   /*04: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x8b, 0x48, 0x60,                         /*0f: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1c: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x20,                               /*41: jg      63                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x75, 0x34,                               /*49: jne     7f                       */
  0x48, 0x63, 0x45, 0xf4,                   /*4b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*53: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*57: mov     (%rcx, %rax, 1), %edx    */
  0x3b, 0x54, 0x01, 0x10,                   /*5a: cmp     0x10(%rcx, %rax, 1), %edx */
  0x0f, 0x9c, 0xc0,                         /*5e: setl    %al                      */
  0xeb, 0x67,                               /*61: jmp     ca                       */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*63: cmp     $0x603, %ecx             */
  0x75, 0x3d,                               /*69: jne     a8                       */
  0x48, 0x63, 0x45, 0xf4,                   /*6b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*6f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*73: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*77: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm0 */
  0xeb, 0x43,                               /*7d: jmp     c2                       */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*7f: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x93, 0x00, 0x00, 0x00,       /*85: jne     11e                      */
  0x48, 0x63, 0x45, 0xf4,                   /*8b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*8f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*93: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*97: cvtsi2sdl(%rcx, %rax, 1), %xmm0  */
  0xf2, 0x0f, 0x10, 0x4c, 0x01, 0x10,       /*9c: movsd   0x10(%rcx, %rax, 1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc8,                   /*a2: ucomisd %xmm0, %xmm1             */
  0xeb, 0x1f,                               /*a6: jmp     c7                       */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*a8: cmp     $0x606, %ecx             */
  0x75, 0x6e,                               /*ae: jne     11e                      */
  0x48, 0x63, 0x45, 0xf4,                   /*b0: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*b4: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*b8: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x44, 0x01, 0x10,       /*bc: movsd   0x10(%rcx, %rax, 1), %xmm0 */
  0x66, 0x0f, 0x2e, 0x04, 0x01,             /*c2: ucomisd (%rcx, %rax, 1), %xmm0   */
  0x0f, 0x97, 0xc0,                         /*c7: seta    %al                      */
  0x0f, 0xb6, 0xc0,                         /*ca: movzbl  %al, %eax                */
  0x89, 0x45, 0xe4,                         /*cd: mov     %eax, -0x1c(%rbp)        */
  0x83, 0x7d, 0xe4, 0x00,                   /*d0: cmpl    $0x0, -0x1c(%rbp)        */
  0x74, 0x16,                               /*d4: je      ec                       */
  0x48, 0x63, 0x45, 0xf4,                   /*d6: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*da: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*de: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*e2: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*e9:                                  */
  0xeb, 0x14,                               /*ea: jmp     100                      */
  0x48, 0x63, 0x45, 0xf4,                   /*ec: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*f0: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f4: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*f8: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*ff:                                  */
  0x48, 0x63, 0x45, 0xf4,                   /*100: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*104: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*108: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*10c: movl    $0x1, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*113: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*117: addq    $0x4, 0x10(%rax)         */
  0xeb, 0x0a,                               /*11c: jmp     128                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*11e: mov     -0x8(%rbp), %rdi         */
  0xff, 0x90, 0xf0, 0x01, 0x00, 0x00,       /*122: callq   *0x1f0(%rax)             */
  0x48, 0x83, 0xc4, 0x20,                   /*128: add     $0x20, %rsp              */
  0x5d,                                     /*12c: pop     %rbp                     */
};


static uint8_t op_le[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x20,                   /*04: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x8b, 0x48, 0x60,                         /*0f: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1c: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x20,                               /*41: jg      63                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x75, 0x34,                               /*49: jne     7f                       */
  0x48, 0x63, 0x45, 0xf4,                   /*4b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*53: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*57: mov     (%rcx, %rax, 1), %edx    */
  0x3b, 0x54, 0x01, 0x10,                   /*5a: cmp     0x10(%rcx, %rax, 1), %edx */
  0x0f, 0x9e, 0xc0,                         /*5e: setle   %al                      */
  0xeb, 0x67,                               /*61: jmp     ca                       */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*63: cmp     $0x603, %ecx             */
  0x75, 0x3d,                               /*69: jne     a8                       */
  0x48, 0x63, 0x45, 0xf4,                   /*6b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*6f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*73: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*77: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm0 */
  0xeb, 0x43,                               /*7d: jmp     c2                       */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*7f: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x93, 0x00, 0x00, 0x00,       /*85: jne     11e                      */
  0x48, 0x63, 0x45, 0xf4,                   /*8b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*8f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*93: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*97: cvtsi2sdl(%rcx, %rax, 1), %xmm0  */
  0xf2, 0x0f, 0x10, 0x4c, 0x01, 0x10,       /*9c: movsd   0x10(%rcx, %rax, 1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc8,                   /*a2: ucomisd %xmm0, %xmm1             */
  0xeb, 0x1f,                               /*a6: jmp     c7                       */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*a8: cmp     $0x606, %ecx             */
  0x75, 0x6e,                               /*ae: jne     11e                      */
  0x48, 0x63, 0x45, 0xf4,                   /*b0: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*b4: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*b8: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x44, 0x01, 0x10,       /*bc: movsd   0x10(%rcx, %rax, 1), %xmm0 */
  0x66, 0x0f, 0x2e, 0x04, 0x01,             /*c2: ucomisd (%rcx, %rax, 1), %xmm0   */
  0x0f, 0x93, 0xc0,                         /*c7: setae   %al                      */
  0x0f, 0xb6, 0xc0,                         /*ca: movzbl  %al, %eax                */
  0x89, 0x45, 0xe4,                         /*cd: mov     %eax, -0x1c(%rbp)        */
  0x83, 0x7d, 0xe4, 0x00,                   /*d0: cmpl    $0x0, -0x1c(%rbp)        */
  0x74, 0x16,                               /*d4: je      ec                       */
  0x48, 0x63, 0x45, 0xf4,                   /*d6: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*da: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*de: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*e2: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*e9:                                  */
  0xeb, 0x14,                               /*ea: jmp     100                      */
  0x48, 0x63, 0x45, 0xf4,                   /*ec: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*f0: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f4: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*f8: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*ff:                                  */
  0x48, 0x63, 0x45, 0xf4,                   /*100: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*104: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*108: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*10c: movl    $0x1, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*113: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*117: addq    $0x4, 0x10(%rax)         */
  0xeb, 0x0a,                               /*11c: jmp     128                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*11e: mov     -0x8(%rbp), %rdi         */
  0xff, 0x90, 0xf0, 0x01, 0x00, 0x00,       /*122: callq   *0x1f0(%rax)             */
  0x48, 0x83, 0xc4, 0x20,                   /*128: add     $0x20, %rsp              */
  0x5d,                                     /*12c: pop     %rbp                     */
};


static uint8_t op_gt[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x20,                   /*04: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x8b, 0x48, 0x60,                         /*0f: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1c: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x20,                               /*41: jg      63                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x75, 0x40,                               /*49: jne     8b                       */
  0x48, 0x63, 0x45, 0xf4,                   /*4b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*53: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*57: mov     (%rcx, %rax, 1), %edx    */
  0x3b, 0x54, 0x01, 0x10,                   /*5a: cmp     0x10(%rcx, %rax, 1), %edx */
  0x0f, 0x9f, 0xc0,                         /*5e: setg    %al                      */
  0xeb, 0x69,                               /*61: jmp     cc                       */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*63: cmp     $0x603, %ecx             */
  0x75, 0x3f,                               /*69: jne     aa                       */
  0x48, 0x63, 0x45, 0xf4,                   /*6b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*6f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*73: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*77: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*7c: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc1,                   /*82: ucomisd %xmm1, %xmm0             */
  0x0f, 0x97, 0xc0,                         /*86: seta    %al                      */
  0xeb, 0x41,                               /*89: jmp     cc                       */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*8b: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x89, 0x00, 0x00, 0x00,       /*91: jne     120                      */
  0x48, 0x63, 0x45, 0xf4,                   /*97: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*9b: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*9f: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*a3: cvtsi2sdl(%rcx, %rax, 1), %xmm0  */
  0xeb, 0x19,                               /*a8: jmp     c3                       */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*aa: cmp     $0x606, %ecx             */
  0x75, 0x6e,                               /*b0: jne     120                      */
  0x48, 0x63, 0x45, 0xf4,                   /*b2: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*b6: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*ba: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*be: movsd   (%rcx, %rax, 1), %xmm0   */
  0x66, 0x0f, 0x2e, 0x44, 0x01, 0x10,       /*c3: ucomisd 0x10(%rcx, %rax, 1), %xmm0 */
  0x0f, 0x97, 0xc0,                         /*c9: seta    %al                      */
  0x0f, 0xb6, 0xc0,                         /*cc: movzbl  %al, %eax                */
  0x89, 0x45, 0xe4,                         /*cf: mov     %eax, -0x1c(%rbp)        */
  0x83, 0x7d, 0xe4, 0x00,                   /*d2: cmpl    $0x0, -0x1c(%rbp)        */
  0x74, 0x16,                               /*d6: je      ee                       */
  0x48, 0x63, 0x45, 0xf4,                   /*d8: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*dc: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*e0: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*e4: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*eb:                                  */
  0xeb, 0x14,                               /*ec: jmp     102                      */
  0x48, 0x63, 0x45, 0xf4,                   /*ee: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*f2: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f6: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*fa: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*101:                                  */
  0x48, 0x63, 0x45, 0xf4,                   /*102: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*106: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*10a: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*10e: movl    $0x1, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*115: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*119: addq    $0x4, 0x10(%rax)         */
  0xeb, 0x0a,                               /*11e: jmp     12a                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*120: mov     -0x8(%rbp), %rdi         */
  0xff, 0x90, 0xf0, 0x01, 0x00, 0x00,       /*124: callq   *0x1f0(%rax)             */
  0x48, 0x83, 0xc4, 0x20,                   /*12a: add     $0x20, %rsp              */
  0x5d,                                     /*12e: pop     %rbp                     */
};


static uint8_t op_ge[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x20,                   /*04: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*08: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xf8,                   /*0b: mov     %rax, -0x8(%rbp)         */
  0x8b, 0x48, 0x60,                         /*0f: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1c: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x20,                               /*41: jg      63                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x75, 0x40,                               /*49: jne     8b                       */
  0x48, 0x63, 0x45, 0xf4,                   /*4b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*53: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*57: mov     (%rcx, %rax, 1), %edx    */
  0x3b, 0x54, 0x01, 0x10,                   /*5a: cmp     0x10(%rcx, %rax, 1), %edx */
  0x0f, 0x9d, 0xc0,                         /*5e: setge   %al                      */
  0xeb, 0x69,                               /*61: jmp     cc                       */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*63: cmp     $0x603, %ecx             */
  0x75, 0x3f,                               /*69: jne     aa                       */
  0x48, 0x63, 0x45, 0xf4,                   /*6b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*6f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*73: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*77: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*7c: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc1,                   /*82: ucomisd %xmm1, %xmm0             */
  0x0f, 0x93, 0xc0,                         /*86: setae   %al                      */
  0xeb, 0x41,                               /*89: jmp     cc                       */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*8b: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x89, 0x00, 0x00, 0x00,       /*91: jne     120                      */
  0x48, 0x63, 0x45, 0xf4,                   /*97: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*9b: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*9f: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*a3: cvtsi2sdl(%rcx, %rax, 1), %xmm0  */
  0xeb, 0x19,                               /*a8: jmp     c3                       */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*aa: cmp     $0x606, %ecx             */
  0x75, 0x6e,                               /*b0: jne     120                      */
  0x48, 0x63, 0x45, 0xf4,                   /*b2: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*b6: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*ba: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*be: movsd   (%rcx, %rax, 1), %xmm0   */
  0x66, 0x0f, 0x2e, 0x44, 0x01, 0x10,       /*c3: ucomisd 0x10(%rcx, %rax, 1), %xmm0 */
  0x0f, 0x93, 0xc0,                         /*c9: setae   %al                      */
  0x0f, 0xb6, 0xc0,                         /*cc: movzbl  %al, %eax                */
  0x89, 0x45, 0xe4,                         /*cf: mov     %eax, -0x1c(%rbp)        */
  0x83, 0x7d, 0xe4, 0x00,                   /*d2: cmpl    $0x0, -0x1c(%rbp)        */
  0x74, 0x16,                               /*d6: je      ee                       */
  0x48, 0x63, 0x45, 0xf4,                   /*d8: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*dc: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*e0: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*e4: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*eb:                                  */
  0xeb, 0x14,                               /*ec: jmp     102                      */
  0x48, 0x63, 0x45, 0xf4,                   /*ee: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*f2: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f6: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*fa: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*101:                                  */
  0x48, 0x63, 0x45, 0xf4,                   /*102: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*106: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*10a: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*10e: movl    $0x1, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*115: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*119: addq    $0x4, 0x10(%rax)         */
  0xeb, 0x0a,                               /*11e: jmp     12a                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*120: mov     -0x8(%rbp), %rdi         */
  0xff, 0x90, 0xf0, 0x01, 0x00, 0x00,       /*124: callq   *0x1f0(%rax)             */
  0x48, 0x83, 0xc4, 0x20,                   /*12a: add     $0x20, %rsp              */
  0x5d,                                     /*12e: pop     %rbp                     */
};


static uint8_t op_array[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*0b: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xe8,                   /*0e: mov     %rax, -0x18(%rbp)        */
  0x8b, 0x50, 0x60,                         /*12: mov     0x60(%rax), %edx         */
  0x89, 0xd3,                               /*15: mov     %edx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*17: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1a: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x18,                   /*1e: mov     0x18(%rax), %r14         */
  0x48, 0x8b, 0x78, 0x58,                   /*22: mov     0x58(%rax), %rdi         */
  0x89, 0xd6,                               /*26: mov     %edx, %esi               */
  0xc1, 0xee, 0x07,                         /*28: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*2b: and     $0x7f, %esi              */
  0xc1, 0xea, 0x0e,                         /*2e: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*31: and     $0x1ff, %edx             */
  0x48, 0xc1, 0xe2, 0x04,                   /*37: shl     $0x4, %rdx               */
  0x4c, 0x01, 0xf2,                         /*3b: add     %r14, %rdx               */
  0xff, 0x90, 0x48, 0x02, 0x00, 0x00,       /*3e: callq   *0x248(%rax)             */
  0x48, 0x89, 0x45, 0xd8,                   /*44: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*48: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*4b: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*4f: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*53: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*58: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*5c: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*60: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*63: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*67: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*6d: add     $0x20, %rsp              */
  0x5b,                                     /*71: pop     %rbx                     */
  0x41, 0x5e,                               /*72: pop     %r14                     */
  0x5d,                                     /*74: pop     %rbp                     */
};


static uint8_t op_arycat[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x41, 0x54,                               /*08: push    %r12                     */
  0x53,                                     /*0a: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*0b: sub     $0x20, %rsp              */
  0x49, 0x89, 0xfc,                         /*0f: mov     %rdi, %r12               */
  0x4c, 0x89, 0x65, 0xd8,                   /*12: mov     %r12, -0x28(%rbp)        */
  0x4d, 0x8b, 0x7c, 0x24, 0x18,             /*16: mov     0x18(%r12), %r15         */
  0x4d, 0x8b, 0x74, 0x24, 0x58,             /*1b: mov     0x58(%r12), %r14         */
  0x41, 0x8b, 0x44, 0x24, 0x60,             /*20: mov     0x60(%r12), %eax         */
  0x89, 0xc3,                               /*25: mov     %eax, %ebx               */
  0xc1, 0xeb, 0x17,                         /*27: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*2a: shl     $0x4, %rbx               */
  0xc1, 0xe8, 0x0e,                         /*2e: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*31: and     $0x1ff, %eax             */
  0x48, 0xc1, 0xe0, 0x04,                   /*36: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x07,                   /*3a: mov     (%r15, %rax, 1), %rsi    */
  0x41, 0x8b, 0x54, 0x07, 0x08,             /*3e: mov     0x8(%r15, %rax, 1), %edx */
  0x4c, 0x89, 0xf7,                         /*43: mov     %r14, %rdi               */
  0x41, 0xff, 0x94, 0x24, 0xf8, 0x00, 0x00, /*46: callq   *0xf8(%r12)              */
  0x00,                                     /*4d:                                  */
  0x41, 0x89, 0xd0,                         /*4e: mov     %edx, %r8d               */
  0x48, 0x89, 0x45, 0xc8,                   /*51: mov     %rax, -0x38(%rbp)        */
  0x44, 0x89, 0x45, 0xd0,                   /*55: mov     %r8d, -0x30(%rbp)        */
  0x49, 0x8b, 0x34, 0x1f,                   /*59: mov     (%r15, %rbx, 1), %rsi    */
  0x41, 0x8b, 0x54, 0x1f, 0x08,             /*5d: mov     0x8(%r15, %rbx, 1), %edx */
  0x48, 0x8b, 0x4d, 0xc8,                   /*62: mov     -0x38(%rbp), %rcx        */
  0x4c, 0x89, 0xf7,                         /*66: mov     %r14, %rdi               */
  0x41, 0xff, 0x94, 0x24, 0xa8, 0x01, 0x00, /*69: callq   *0x1a8(%r12)             */
  0x00,                                     /*70:                                  */
  0x48, 0x8b, 0x45, 0xd8,                   /*71: mov     -0x28(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*75: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*78: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*7c: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*82: add     $0x20, %rsp              */
  0x5b,                                     /*86: pop     %rbx                     */
  0x41, 0x5c,                               /*87: pop     %r12                     */
  0x41, 0x5e,                               /*89: pop     %r14                     */
  0x41, 0x5f,                               /*8b: pop     %r15                     */
  0x5d,                                     /*8d: pop     %rbp                     */
};


static uint8_t op_arypush[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x49, 0x89, 0xf9,                         /*08: mov     %rdi, %r9                */
  0x4c, 0x89, 0x4d, 0xf8,                   /*0b: mov     %r9, -0x8(%rbp)          */
  0x4d, 0x8b, 0x41, 0x18,                   /*0f: mov     0x18(%r9), %r8           */
  0x49, 0x8b, 0x79, 0x58,                   /*13: mov     0x58(%r9), %rdi          */
  0x41, 0x8b, 0x41, 0x60,                   /*17: mov     0x60(%r9), %eax          */
  0x89, 0xc1,                               /*1b: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x17,                         /*1d: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*20: shl     $0x4, %rcx               */
  0xc1, 0xe8, 0x0e,                         /*24: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*27: and     $0x1ff, %eax             */
  0x48, 0xc1, 0xe0, 0x04,                   /*2c: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x08,                   /*30: mov     (%r8, %rcx, 1), %rsi     */
  0x41, 0x8b, 0x54, 0x08, 0x08,             /*34: mov     0x8(%r8, %rcx, 1), %edx  */
  0x49, 0x8b, 0x0c, 0x00,                   /*39: mov     (%r8, %rax, 1), %rcx     */
  0x45, 0x8b, 0x44, 0x00, 0x08,             /*3d: mov     0x8(%r8, %rax, 1), %r8d  */
  0x41, 0xff, 0x91, 0x68, 0x02, 0x00, 0x00, /*42: callq   *0x268(%r9)              */
  0x48, 0x83, 0xc4, 0x10,                   /*49: add     $0x10, %rsp              */
  0x5d,                                     /*4d: pop     %rbp                     */
};


static uint8_t op_aref[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x30,                   /*07: sub     $0x30, %rsp              */
  0x48, 0x89, 0xf8,                         /*0b: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xe8,                   /*0e: mov     %rax, -0x18(%rbp)        */
  0x8b, 0x48, 0x60,                         /*12: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*15: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xe4,                         /*18: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1b: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x49, 0x60,                         /*1f: mov     0x60(%rcx), %ecx         */
  0xc1, 0xe9, 0x07,                         /*22: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*25: and     $0x7f, %ecx              */
  0x89, 0x4d, 0xe0,                         /*28: mov     %ecx, -0x20(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*2b: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x51, 0x60,                         /*2f: mov     0x60(%rcx), %edx         */
  0xc1, 0xea, 0x0e,                         /*32: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*35: and     $0x1ff, %edx             */
  0x48, 0x8b, 0x49, 0x18,                   /*3b: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*3f: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x34, 0x11,                   /*43: mov     (%rcx, %rdx, 1), %rsi    */
  0x48, 0x8b, 0x4c, 0x11, 0x08,             /*47: mov     0x8(%rcx, %rdx, 1), %rcx */
  0x48, 0x89, 0x4d, 0xd8,                   /*4c: mov     %rcx, -0x28(%rbp)        */
  0x48, 0x89, 0x75, 0xd0,                   /*50: mov     %rsi, -0x30(%rbp)        */
  0x83, 0x7d, 0xd8, 0x0e,                   /*54: cmpl    $0xe, -0x28(%rbp)        */
  0x75, 0x40,                               /*58: jne     9a                       */
  0x48, 0x8b, 0x4d, 0xe8,                   /*5a: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x59, 0x60,                         /*5e: mov     0x60(%rcx), %ebx         */
  0xc1, 0xeb, 0x17,                         /*61: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*64: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x71, 0x18,                   /*68: mov     0x18(%rcx), %r14         */
  0x48, 0x8b, 0x79, 0x58,                   /*6c: mov     0x58(%rcx), %rdi         */
  0x8b, 0x4d, 0xe0,                         /*70: mov     -0x20(%rbp), %ecx        */
  0x48, 0x8b, 0x75, 0xd0,                   /*73: mov     -0x30(%rbp), %rsi        */
  0x8b, 0x55, 0xd8,                         /*77: mov     -0x28(%rbp), %edx        */
  0xff, 0x90, 0x20, 0x02, 0x00, 0x00,       /*7a: callq   *0x220(%rax)             */
  0x48, 0x89, 0x45, 0xc0,                   /*80: mov     %rax, -0x40(%rbp)        */
  0x89, 0x55, 0xc8,                         /*84: mov     %edx, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*87: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*8b: mov     -0x38(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*8f: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*94: mov     %rax, (%r14, %rbx, 1)    */
  0xeb, 0x5a,                               /*98: jmp     f4                       */
  0x83, 0x7d, 0xe0, 0x00,                   /*9a: cmpl    $0x0, -0x20(%rbp)        */
  0x74, 0x31,                               /*9e: je      d1                       */
  0x48, 0x63, 0x45, 0xe4,                   /*a0: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*a4: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*a8: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*ac: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*b0: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*b7:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*b8: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*bc: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*c0: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*c4: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*c8: movl    $0x0, (%rcx, %rax, 1)    */
  0xeb, 0x23,                               /*cf: jmp     f4                       */
  0x48, 0x8b, 0x45, 0xe8,                   /*d1: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x60,                         /*d5: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*d8: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x18,                   /*db: mov     0x18(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*df: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xd0,                   /*e3: mov     -0x30(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xd8,                   /*e7: mov     -0x28(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x08,             /*eb: mov     %rsi, 0x8(%rax, %rcx, 1) */
  0x48, 0x89, 0x14, 0x08,                   /*f0: mov     %rdx, (%rax, %rcx, 1)    */
  0x48, 0x83, 0xc4, 0x30,                   /*f4: add     $0x30, %rsp              */
  0x5b,                                     /*f8: pop     %rbx                     */
  0x41, 0x5e,                               /*f9: pop     %r14                     */
  0x5d,                                     /*fb: pop     %rbp                     */
};


static uint8_t op_aset[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x49, 0x89, 0xfa,                         /*08: mov     %rdi, %r10               */
  0x4c, 0x89, 0x55, 0xf8,                   /*0b: mov     %r10, -0x8(%rbp)         */
  0x4d, 0x8b, 0x4a, 0x18,                   /*0f: mov     0x18(%r10), %r9          */
  0x49, 0x8b, 0x7a, 0x58,                   /*13: mov     0x58(%r10), %rdi         */
  0x41, 0x8b, 0x42, 0x60,                   /*17: mov     0x60(%r10), %eax         */
  0x89, 0xc2,                               /*1b: mov     %eax, %edx               */
  0xc1, 0xea, 0x0e,                         /*1d: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*20: and     $0x1ff, %edx             */
  0x48, 0xc1, 0xe2, 0x04,                   /*26: shl     $0x4, %rdx               */
  0x89, 0xc1,                               /*2a: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x07,                         /*2c: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*2f: and     $0x7f, %ecx              */
  0xc1, 0xe8, 0x17,                         /*32: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*35: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x11,                   /*39: mov     (%r9, %rdx, 1), %rsi     */
  0x41, 0x8b, 0x54, 0x11, 0x08,             /*3d: mov     0x8(%r9, %rdx, 1), %edx  */
  0x4d, 0x8b, 0x04, 0x01,                   /*42: mov     (%r9, %rax, 1), %r8      */
  0x45, 0x8b, 0x4c, 0x01, 0x08,             /*46: mov     0x8(%r9, %rax, 1), %r9d  */
  0x41, 0xff, 0x92, 0x58, 0x02, 0x00, 0x00, /*4b: callq   *0x258(%r10)             */
  0x48, 0x83, 0xc4, 0x10,                   /*52: add     $0x10, %rsp              */
  0x5d,                                     /*56: pop     %rbp                     */
};


static uint8_t op_apost[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x70,                   /*07: sub     $0x70, %rsp              */
  0x48, 0x89, 0xf8,                         /*0b: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xe8,                   /*0e: mov     %rax, -0x18(%rbp)        */
  0x8b, 0x48, 0x60,                         /*12: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*15: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xe4,                         /*18: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x63, 0x4d, 0xe4,                   /*1b: movslq  -0x1c(%rbp), %rcx        */
  0x48, 0x8b, 0x55, 0xe8,                   /*1f: mov     -0x18(%rbp), %rdx        */
  0x48, 0x8b, 0x52, 0x18,                   /*23: mov     0x18(%rdx), %rdx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*27: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x34, 0x0a,                   /*2b: mov     (%rdx, %rcx, 1), %rsi    */
  0x48, 0x8b, 0x4c, 0x0a, 0x08,             /*2f: mov     0x8(%rdx, %rcx, 1), %rcx */
  0x48, 0x89, 0x4d, 0xd8,                   /*34: mov     %rcx, -0x28(%rbp)        */
  0x48, 0x89, 0x75, 0xd0,                   /*38: mov     %rsi, -0x30(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*3c: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x49, 0x60,                         /*40: mov     0x60(%rcx), %ecx         */
  0xc1, 0xe9, 0x0e,                         /*43: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*46: and     $0x1ff, %ecx             */
  0x89, 0x4d, 0xcc,                         /*4c: mov     %ecx, -0x34(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4f: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x49, 0x60,                         /*53: mov     0x60(%rcx), %ecx         */
  0xc1, 0xe9, 0x07,                         /*56: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*59: and     $0x7f, %ecx              */
  0x89, 0x4d, 0xc8,                         /*5c: mov     %ecx, -0x38(%rbp)        */
  0x83, 0x7d, 0xd8, 0x0e,                   /*5f: cmpl    $0xe, -0x28(%rbp)        */
  0x0f, 0x85, 0xc9, 0x00, 0x00, 0x00,       /*63: jne     132                      */
  0x48, 0x8b, 0x4d, 0xd0,                   /*69: mov     -0x30(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xb0,                   /*6d: mov     %rcx, -0x50(%rbp)        */
  0x8b, 0x49, 0x18,                         /*71: mov     0x18(%rcx), %ecx         */
  0x89, 0x4d, 0xac,                         /*74: mov     %ecx, -0x54(%rbp)        */
  0x8b, 0x55, 0xcc,                         /*77: mov     -0x34(%rbp), %edx        */
  0x03, 0x55, 0xc8,                         /*7a: add     -0x38(%rbp), %edx        */
  0x39, 0xd1,                               /*7d: cmp     %edx, %ecx               */
  0x0f, 0x8e, 0x2f, 0x01, 0x00, 0x00,       /*7f: jle     1b4                      */
  0x48, 0x63, 0x5d, 0xe4,                   /*85: movslq  -0x1c(%rbp), %rbx        */
  0x8d, 0x4b, 0x01,                         /*89: lea     0x1(%rbx), %ecx          */
  0x89, 0x4d, 0xe4,                         /*8c: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*8f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe3, 0x04,                   /*93: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x71, 0x18,                   /*97: mov     0x18(%rcx), %r14         */
  0x48, 0x8b, 0x79, 0x58,                   /*9b: mov     0x58(%rcx), %rdi         */
  0x8b, 0x75, 0xac,                         /*9f: mov     -0x54(%rbp), %esi        */
  0x48, 0x63, 0x55, 0xcc,                   /*a2: movslq  -0x34(%rbp), %rdx        */
  0x29, 0xd6,                               /*a6: sub     %edx, %esi               */
  0x2b, 0x75, 0xc8,                         /*a8: sub     -0x38(%rbp), %esi        */
  0x48, 0x8b, 0x4d, 0xb0,                   /*ab: mov     -0x50(%rbp), %rcx        */
  0x48, 0xc1, 0xe2, 0x04,                   /*af: shl     $0x4, %rdx               */
  0x48, 0x03, 0x51, 0x28,                   /*b3: add     0x28(%rcx), %rdx         */
  0xff, 0x90, 0x48, 0x02, 0x00, 0x00,       /*b7: callq   *0x248(%rax)             */
  0x48, 0x89, 0x45, 0x98,                   /*bd: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*c1: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*c4: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*c8: mov     -0x60(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*cc: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*d1: mov     %rax, (%r14, %rbx, 1)    */
  0xeb, 0x49,                               /*d5: jmp     120                      */
  0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, /*d7: nopw    0x0(%rax, %rax, 1)       */
  0x00, 0x00,                               /*de:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*e0: movslq  -0x1c(%rbp), %rax        */
  0x8d, 0x48, 0x01,                         /*e4: lea     0x1(%rax), %ecx          */
  0x89, 0x4d, 0xe4,                         /*e7: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*ea: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*ee: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*f2: shl     $0x4, %rax               */
  0x48, 0x63, 0x55, 0xac,                   /*f6: movslq  -0x54(%rbp), %rdx        */
  0x48, 0x63, 0x75, 0xc8,                   /*fa: movslq  -0x38(%rbp), %rsi        */
  0x48, 0x29, 0xf2,                         /*fe: sub     %rsi, %rdx               */
  0x48, 0xc1, 0xe2, 0x04,                   /*101: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x75, 0xb0,                   /*105: mov     -0x50(%rbp), %rsi        */
  0x48, 0x8b, 0x76, 0x28,                   /*109: mov     0x28(%rsi), %rsi         */
  0x48, 0x8b, 0x7c, 0x32, 0xf0,             /*10d: mov     -0x10(%rdx, %rsi, 1), %rdi */
  0x48, 0x8b, 0x54, 0x32, 0xf8,             /*112: mov     -0x8(%rdx, %rsi, 1), %rdx */
  0x48, 0x89, 0x54, 0x01, 0x08,             /*117: mov     %rdx, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x3c, 0x01,                   /*11c: mov     %rdi, (%rcx, %rax, 1)    */
  0x8b, 0x45, 0xc8,                         /*120: mov     -0x38(%rbp), %eax        */
  0x8d, 0x48, 0xff,                         /*123: lea     -0x1(%rax), %ecx         */
  0x89, 0x4d, 0xc8,                         /*126: mov     %ecx, -0x38(%rbp)        */
  0x85, 0xc0,                               /*129: test    %eax, %eax               */
  0x75, 0xb3,                               /*12b: jne     e0                       */
  0xe9, 0x66, 0x01, 0x00, 0x00,             /*12d: jmpq    298                      */
  0x48, 0x63, 0x5d, 0xe4,                   /*132: movslq  -0x1c(%rbp), %rbx        */
  0x8d, 0x4b, 0x01,                         /*136: lea     0x1(%rbx), %ecx          */
  0x89, 0x4d, 0xe4,                         /*139: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*13c: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe3, 0x04,                   /*140: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x71, 0x18,                   /*144: mov     0x18(%rcx), %r14         */
  0x48, 0x8b, 0x79, 0x58,                   /*148: mov     0x58(%rcx), %rdi         */
  0x31, 0xf6,                               /*14c: xor     %esi, %esi               */
  0xff, 0x90, 0xd8, 0x00, 0x00, 0x00,       /*14e: callq   *0xd8(%rax)              */
  0x48, 0x89, 0x45, 0xb8,                   /*154: mov     %rax, -0x48(%rbp)        */
  0x89, 0x55, 0xc0,                         /*158: mov     %edx, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xb8,                   /*15b: mov     -0x48(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*15f: mov     -0x40(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*163: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*168: mov     %rax, (%r14, %rbx, 1)    */
  0xeb, 0x34,                               /*16c: jmp     1a2                      */
  0x66, 0x90,                               /*16e: xchg    %ax, %ax                 */
  0x48, 0x63, 0x45, 0xe4,                   /*170: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*174: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*178: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*17c: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*180: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*187:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*188: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*18c: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*190: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*194: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*198: movl    $0x0, (%rcx, %rax, 1)    */
  0xff, 0x45, 0xe4,                         /*19f: incl    -0x1c(%rbp)              */
  0x8b, 0x45, 0xc8,                         /*1a2: mov     -0x38(%rbp), %eax        */
  0x8d, 0x48, 0xff,                         /*1a5: lea     -0x1(%rax), %ecx         */
  0x89, 0x4d, 0xc8,                         /*1a8: mov     %ecx, -0x38(%rbp)        */
  0x85, 0xc0,                               /*1ab: test    %eax, %eax               */
  0x75, 0xc1,                               /*1ad: jne     170                      */
  0xe9, 0xe4, 0x00, 0x00, 0x00,             /*1af: jmpq    298                      */
  0x48, 0x63, 0x5d, 0xe4,                   /*1b4: movslq  -0x1c(%rbp), %rbx        */
  0x8d, 0x4b, 0x01,                         /*1b8: lea     0x1(%rbx), %ecx          */
  0x89, 0x4d, 0xe4,                         /*1bb: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1be: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe3, 0x04,                   /*1c2: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x71, 0x18,                   /*1c6: mov     0x18(%rcx), %r14         */
  0x48, 0x8b, 0x79, 0x58,                   /*1ca: mov     0x58(%rcx), %rdi         */
  0x31, 0xf6,                               /*1ce: xor     %esi, %esi               */
  0xff, 0x90, 0xd8, 0x00, 0x00, 0x00,       /*1d0: callq   *0xd8(%rax)              */
  0x48, 0x89, 0x45, 0x88,                   /*1d6: mov     %rax, -0x78(%rbp)        */
  0x89, 0x55, 0x90,                         /*1da: mov     %edx, -0x70(%rbp)        */
  0x48, 0x8b, 0x45, 0x88,                   /*1dd: mov     -0x78(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x90,                   /*1e1: mov     -0x70(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*1e5: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*1ea: mov     %rax, (%r14, %rbx, 1)    */
  0xc7, 0x45, 0xa8, 0x00, 0x00, 0x00, 0x00, /*1ee: movl    $0x0, -0x58(%rbp)        */
  0xeb, 0x48,                               /*1f5: jmp     23f                      */
  0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, /*1f7: nopw    0x0(%rax, %rax, 1)       */
  0x00, 0x00,                               /*1fe:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*200: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xa8,                   /*204: movslq  -0x58(%rbp), %rcx        */
  0x48, 0x01, 0xc8,                         /*208: add     %rcx, %rax               */
  0x48, 0x8b, 0x55, 0xe8,                   /*20b: mov     -0x18(%rbp), %rdx        */
  0x48, 0x8b, 0x52, 0x18,                   /*20f: mov     0x18(%rdx), %rdx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*213: shl     $0x4, %rax               */
  0x48, 0x63, 0x75, 0xcc,                   /*217: movslq  -0x34(%rbp), %rsi        */
  0x48, 0x01, 0xce,                         /*21b: add     %rcx, %rsi               */
  0x48, 0x8b, 0x4d, 0xb0,                   /*21e: mov     -0x50(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*222: mov     0x28(%rcx), %rcx         */
  0x48, 0xc1, 0xe6, 0x04,                   /*226: shl     $0x4, %rsi               */
  0x48, 0x8b, 0x3c, 0x31,                   /*22a: mov     (%rcx, %rsi, 1), %rdi    */
  0x48, 0x8b, 0x4c, 0x31, 0x08,             /*22e: mov     0x8(%rcx, %rsi, 1), %rcx */
  0x48, 0x89, 0x4c, 0x02, 0x08,             /*233: mov     %rcx, 0x8(%rdx, %rax, 1) */
  0x48, 0x89, 0x3c, 0x02,                   /*238: mov     %rdi, (%rdx, %rax, 1)    */
  0xff, 0x45, 0xa8,                         /*23c: incl    -0x58(%rbp)              */
  0x8b, 0x45, 0xa8,                         /*23f: mov     -0x58(%rbp), %eax        */
  0x03, 0x45, 0xcc,                         /*242: add     -0x34(%rbp), %eax        */
  0x3b, 0x45, 0xac,                         /*245: cmp     -0x54(%rbp), %eax        */
  0x7c, 0xb6,                               /*248: jl      200                      */
  0xeb, 0x44,                               /*24a: jmp     290                      */
  0x0f, 0x1f, 0x40, 0x00,                   /*24c: nopl    0x0(%rax)                */
  0x48, 0x63, 0x45, 0xe4,                   /*250: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xa8,                   /*254: movslq  -0x58(%rbp), %rcx        */
  0x48, 0x01, 0xc1,                         /*258: add     %rax, %rcx               */
  0x48, 0x8b, 0x45, 0xe8,                   /*25b: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*25f: mov     0x18(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*263: shl     $0x4, %rcx               */
  0xc7, 0x44, 0x08, 0x08, 0x00, 0x00, 0x00, /*267: movl    $0x0, 0x8(%rax, %rcx, 1) */
  0x00,                                     /*26e:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*26f: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xa8,                   /*273: movslq  -0x58(%rbp), %rcx        */
  0x48, 0x01, 0xc1,                         /*277: add     %rax, %rcx               */
  0x48, 0x8b, 0x45, 0xe8,                   /*27a: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*27e: mov     0x18(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*282: shl     $0x4, %rcx               */
  0xc7, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, /*286: movl    $0x0, (%rax, %rcx, 1)    */
  0xff, 0x45, 0xa8,                         /*28d: incl    -0x58(%rbp)              */
  0x8b, 0x45, 0xa8,                         /*290: mov     -0x58(%rbp), %eax        */
  0x3b, 0x45, 0xc8,                         /*293: cmp     -0x38(%rbp), %eax        */
  0x7c, 0xb8,                               /*296: jl      250                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*298: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*29c: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*29f: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*2a3: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x70,                   /*2a9: add     $0x70, %rsp              */
  0x5b,                                     /*2ad: pop     %rbx                     */
  0x41, 0x5e,                               /*2ae: pop     %r14                     */
  0x5d,                                     /*2b0: pop     %rbp                     */
};


static uint8_t op_string[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*0b: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xe8,                   /*0e: mov     %rax, -0x18(%rbp)        */
  0x8b, 0x48, 0x60,                         /*12: mov     0x60(%rax), %ecx         */
  0x89, 0xcb,                               /*15: mov     %ecx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*17: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1a: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x78, 0x58,                   /*1e: mov     0x58(%rax), %rdi         */
  0xc1, 0xe9, 0x07,                         /*22: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*25: movzwl  %cx, %ecx                */
  0x4c, 0x8b, 0x70, 0x18,                   /*28: mov     0x18(%rax), %r14         */
  0x48, 0x8b, 0x50, 0x20,                   /*2c: mov     0x20(%rax), %rdx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*30: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x34, 0x0a,                   /*34: mov     (%rdx, %rcx, 1), %rsi    */
  0x8b, 0x54, 0x0a, 0x08,                   /*38: mov     0x8(%rdx, %rcx, 1), %edx */
  0xff, 0x90, 0xe0, 0x01, 0x00, 0x00,       /*3c: callq   *0x1e0(%rax)             */
  0x48, 0x89, 0x45, 0xd8,                   /*42: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*46: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*49: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*4d: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*51: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*56: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*5a: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*5e: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*61: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*65: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*6b: add     $0x20, %rsp              */
  0x5b,                                     /*6f: pop     %rbx                     */
  0x41, 0x5e,                               /*70: pop     %r14                     */
  0x5d,                                     /*72: pop     %rbp                     */
};


static uint8_t op_strcat[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x49, 0x89, 0xf9,                         /*08: mov     %rdi, %r9                */
  0x4c, 0x89, 0x4d, 0xf8,                   /*0b: mov     %r9, -0x8(%rbp)          */
  0x4d, 0x8b, 0x41, 0x18,                   /*0f: mov     0x18(%r9), %r8           */
  0x49, 0x8b, 0x79, 0x58,                   /*13: mov     0x58(%r9), %rdi          */
  0x41, 0x8b, 0x41, 0x60,                   /*17: mov     0x60(%r9), %eax          */
  0x89, 0xc1,                               /*1b: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x17,                         /*1d: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*20: shl     $0x4, %rcx               */
  0xc1, 0xe8, 0x0e,                         /*24: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*27: and     $0x1ff, %eax             */
  0x48, 0xc1, 0xe0, 0x04,                   /*2c: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x08,                   /*30: mov     (%r8, %rcx, 1), %rsi     */
  0x41, 0x8b, 0x54, 0x08, 0x08,             /*34: mov     0x8(%r8, %rcx, 1), %edx  */
  0x49, 0x8b, 0x0c, 0x00,                   /*39: mov     (%r8, %rax, 1), %rcx     */
  0x45, 0x8b, 0x44, 0x00, 0x08,             /*3d: mov     0x8(%r8, %rax, 1), %r8d  */
  0x41, 0xff, 0x91, 0x10, 0x02, 0x00, 0x00, /*42: callq   *0x210(%r9)              */
  0x48, 0x83, 0xc4, 0x10,                   /*49: add     $0x10, %rsp              */
  0x5d,                                     /*4d: pop     %rbp                     */
};


static uint8_t op_hash[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x40,                   /*07: sub     $0x40, %rsp              */
  0x49, 0x89, 0xfe,                         /*0b: mov     %rdi, %r14               */
  0x4c, 0x89, 0x75, 0xe8,                   /*0e: mov     %r14, -0x18(%rbp)        */
  0x41, 0x8b, 0x46, 0x60,                   /*12: mov     0x60(%r14), %eax         */
  0xc1, 0xe8, 0x0e,                         /*16: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*19: and     $0x1ff, %eax             */
  0x89, 0x45, 0xe4,                         /*1e: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*21: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*25: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*28: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*2b: and     $0x7f, %eax              */
  0x89, 0x45, 0xe0,                         /*2e: mov     %eax, -0x20(%rbp)        */
  0x01, 0xc0,                               /*31: add     %eax, %eax               */
  0x03, 0x45, 0xe4,                         /*33: add     -0x1c(%rbp), %eax        */
  0x89, 0x45, 0xdc,                         /*36: mov     %eax, -0x24(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*39: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*3d: mov     0x58(%rax), %rdi         */
  0x8b, 0x75, 0xe0,                         /*41: mov     -0x20(%rbp), %esi        */
  0x41, 0xff, 0x96, 0x68, 0x01, 0x00, 0x00, /*44: callq   *0x168(%r14)             */
  0x48, 0x89, 0x45, 0xc8,                   /*4b: mov     %rax, -0x38(%rbp)        */
  0x89, 0x55, 0xd0,                         /*4f: mov     %edx, -0x30(%rbp)        */
  0xeb, 0x4e,                               /*52: jmp     a2                       */
  0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, /*54: data16  data16                   */
  0x00, 0x00, 0x00, 0x00, 0x00,             /*5b:                                  */
  0x48, 0x8b, 0x45, 0xe8,                   /*60: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x58, 0x18,                   /*64: mov     0x18(%rax), %rbx         */
  0x48, 0x8b, 0x78, 0x58,                   /*68: mov     0x58(%rax), %rdi         */
  0x48, 0x63, 0x45, 0xe4,                   /*6c: movslq  -0x1c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*70: shl     $0x4, %rax               */
  0x48, 0x8b, 0x75, 0xc8,                   /*74: mov     -0x38(%rbp), %rsi        */
  0x8b, 0x55, 0xd0,                         /*78: mov     -0x30(%rbp), %edx        */
  0x48, 0x8b, 0x0c, 0x03,                   /*7b: mov     (%rbx, %rax, 1), %rcx    */
  0x44, 0x8b, 0x44, 0x03, 0x08,             /*7f: mov     0x8(%rbx, %rax, 1), %r8d */
  0x4c, 0x8b, 0x4c, 0x03, 0x10,             /*84: mov     0x10(%rbx, %rax, 1), %r9 */
  0x48, 0x8b, 0x44, 0x03, 0x18,             /*89: mov     0x18(%rbx, %rax, 1), %rax */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*8e: mov     %rax, 0x8(%rsp)          */
  0x4c, 0x89, 0x0c, 0x24,                   /*93: mov     %r9, (%rsp)              */
  0x41, 0xff, 0x96, 0xb8, 0x01, 0x00, 0x00, /*97: callq   *0x1b8(%r14)             */
  0x83, 0x45, 0xe4, 0x02,                   /*9e: addl    $0x2, -0x1c(%rbp)        */
  0x8b, 0x45, 0xe4,                         /*a2: mov     -0x1c(%rbp), %eax        */
  0x3b, 0x45, 0xdc,                         /*a5: cmp     -0x24(%rbp), %eax        */
  0x7c, 0xb6,                               /*a8: jl      60                       */
  0x48, 0x8b, 0x45, 0xe8,                   /*aa: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x60,                         /*ae: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*b1: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x18,                   /*b4: mov     0x18(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*b8: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xc8,                   /*bc: mov     -0x38(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xd0,                   /*c0: mov     -0x30(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x08,             /*c4: mov     %rsi, 0x8(%rax, %rcx, 1) */
  0x48, 0x89, 0x14, 0x08,                   /*c9: mov     %rdx, (%rax, %rcx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*cd: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*d1: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*d4: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*d8: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x40,                   /*de: add     $0x40, %rsp              */
  0x5b,                                     /*e2: pop     %rbx                     */
  0x41, 0x5e,                               /*e3: pop     %r14                     */
  0x5d,                                     /*e5: pop     %rbp                     */
};


static uint8_t op_lambda[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x41, 0x54,                               /*08: push    %r12                     */
  0x53,                                     /*0a: push    %rbx                     */
  0x48, 0x83, 0xec, 0x50,                   /*0b: sub     $0x50, %rsp              */
  0x49, 0x89, 0xfc,                         /*0f: mov     %rdi, %r12               */
  0x4c, 0x89, 0x65, 0xd8,                   /*12: mov     %r12, -0x28(%rbp)        */
  0x41, 0x8b, 0x44, 0x24, 0x60,             /*16: mov     0x60(%r12), %eax         */
  0xc1, 0xe8, 0x07,                         /*1b: shr     $0x7, %eax               */
  0x83, 0xe0, 0x03,                         /*1e: and     $0x3, %eax               */
  0x89, 0x45, 0xcc,                         /*21: mov     %eax, -0x34(%rbp)        */
  0xf6, 0x45, 0xcc, 0x02,                   /*24: testb   $0x2, -0x34(%rbp)        */
  0x74, 0x2d,                               /*28: je      57                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*2a: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*2e: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x78, 0x58,                   /*32: mov     0x58(%rax), %rdi         */
  0x8b, 0x40, 0x60,                         /*36: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x09,                         /*39: shr     $0x9, %eax               */
  0x25, 0xff, 0x3f, 0x00, 0x00,             /*3c: and     $0x3fff, %eax            */
  0x48, 0x8b, 0x49, 0x20,                   /*41: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x34, 0xc1,                   /*45: mov     (%rcx, %rax, 8), %rsi    */
  0x41, 0xff, 0x54, 0x24, 0x70,             /*49: callq   *0x70(%r12)              */
  0x48, 0x89, 0x45, 0xd0,                   /*4e: mov     %rax, -0x30(%rbp)        */
  0xe9, 0x9c, 0x00, 0x00, 0x00,             /*52: jmpq    f3                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*57: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*5b: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x78, 0x58,                   /*5f: mov     0x58(%rax), %rdi         */
  0x8b, 0x40, 0x60,                         /*63: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x09,                         /*66: shr     $0x9, %eax               */
  0x25, 0xff, 0x3f, 0x00, 0x00,             /*69: and     $0x3fff, %eax            */
  0x48, 0x8b, 0x49, 0x20,                   /*6e: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x34, 0xc1,                   /*72: mov     (%rcx, %rax, 8), %rsi    */
  0x41, 0xff, 0x94, 0x24, 0x48, 0x01, 0x00, /*76: callq   *0x148(%r12)             */
  0x00,                                     /*7d:                                  */
  0x48, 0x89, 0x45, 0xd0,                   /*7e: mov     %rax, -0x30(%rbp)        */
  0xf6, 0x45, 0xcc, 0x01,                   /*82: testb   $0x1, -0x34(%rbp)        */
  0x74, 0x6b,                               /*86: je      f3                       */
  0x48, 0x8b, 0x45, 0xd0,                   /*88: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*8c: mov     0x20(%rax), %rax         */
  0x0f, 0xb6, 0x00,                         /*90: movzbl  (%rax), %eax             */
  0x83, 0xf8, 0x0c,                         /*93: cmp     $0xc, %eax               */
  0x75, 0x5b,                               /*96: jne     f3                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*98: mov     -0x28(%rbp), %rax        */
  0x4c, 0x8b, 0x70, 0x58,                   /*9c: mov     0x58(%rax), %r14         */
  0x48, 0x8b, 0x45, 0xd0,                   /*a0: mov     -0x30(%rbp), %rax        */
  0x4c, 0x8b, 0x78, 0x20,                   /*a4: mov     0x20(%rax), %r15         */
  0x49, 0x8b, 0xb4, 0x24, 0xe0, 0x02, 0x00, /*a8: mov     0x2e0(%r12), %rsi        */
  0x00,                                     /*af:                                  */
  0xba, 0x0c, 0x00, 0x00, 0x00,             /*b0: mov     $0xc, %edx               */
  0x4c, 0x89, 0xf7,                         /*b5: mov     %r14, %rdi               */
  0x41, 0xff, 0x94, 0x24, 0xa0, 0x02, 0x00, /*b8: callq   *0x2a0(%r12)             */
  0x00,                                     /*bf:                                  */
  0x4c, 0x89, 0xf7,                         /*c0: mov     %r14, %rdi               */
  0x4c, 0x89, 0xfe,                         /*c3: mov     %r15, %rsi               */
  0x89, 0xc2,                               /*c6: mov     %eax, %edx               */
  0x41, 0xff, 0x94, 0x24, 0x58, 0x01, 0x00, /*c8: callq   *0x158(%r12)             */
  0x00,                                     /*cf:                                  */
  0x48, 0x89, 0x45, 0xa8,                   /*d0: mov     %rax, -0x58(%rbp)        */
  0x89, 0x55, 0xb0,                         /*d4: mov     %edx, -0x50(%rbp)        */
  0x48, 0x8b, 0x45, 0xa8,                   /*d7: mov     -0x58(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb0,                   /*db: mov     -0x50(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xc0,                   /*df: mov     %rcx, -0x40(%rbp)        */
  0x48, 0x89, 0x45, 0xb8,                   /*e3: mov     %rax, -0x48(%rbp)        */
  0x48, 0x8b, 0x45, 0xb8,                   /*e7: mov     -0x48(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*eb: mov     -0x30(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x20,                   /*ef: mov     %rax, 0x20(%rcx)         */
  0xf6, 0x45, 0xcc, 0x01,                   /*f3: testb   $0x1, -0x34(%rbp)        */
  0x74, 0x1e,                               /*f7: je      117                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*f9: mov     -0x30(%rbp), %rax        */
  0x8b, 0x08,                               /*fd: mov     (%rax), %ecx             */
  0x89, 0xca,                               /*ff: mov     %ecx, %edx               */
  0x81, 0xe2, 0x00, 0xf8, 0xf7, 0xff,       /*101: and     $0xfff7f800, %edx        */
  0x81, 0xe1, 0xff, 0x07, 0x00, 0x00,       /*107: and     $0x7ff, %ecx             */
  0x09, 0xd1,                               /*10d: or      %edx, %ecx               */
  0x81, 0xc9, 0x00, 0x00, 0x08, 0x00,       /*10f: or      $0x80000, %ecx           */
  0x89, 0x08,                               /*115: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x45, 0xd8,                   /*117: mov     -0x28(%rbp), %rax        */
  0x8b, 0x58, 0x60,                         /*11b: mov     0x60(%rax), %ebx         */
  0xc1, 0xeb, 0x17,                         /*11e: shr     $0x17, %ebx              */
  0x4c, 0x8b, 0x70, 0x18,                   /*121: mov     0x18(%rax), %r14         */
  0x48, 0xc1, 0xe3, 0x04,                   /*125: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x7d, 0xd0,                   /*129: mov     -0x30(%rbp), %rdi        */
  0x41, 0xff, 0x94, 0x24, 0x40, 0x02, 0x00, /*12d: callq   *0x240(%r12)             */
  0x00,                                     /*134:                                  */
  0x48, 0x89, 0x45, 0x98,                   /*135: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*139: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*13c: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*140: mov     -0x60(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*144: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*149: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xd8,                   /*14d: mov     -0x28(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*151: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*154: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*158: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x50,                   /*15e: add     $0x50, %rsp              */
  0x5b,                                     /*162: pop     %rbx                     */
  0x41, 0x5c,                               /*163: pop     %r12                     */
  0x41, 0x5e,                               /*165: pop     %r14                     */
  0x41, 0x5f,                               /*167: pop     %r15                     */
  0x5d,                                     /*169: pop     %rbp                     */
};


static uint8_t op_range[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x49, 0x89, 0xfa,                         /*0b: mov     %rdi, %r10               */
  0x4c, 0x89, 0x55, 0xe8,                   /*0e: mov     %r10, -0x18(%rbp)        */
  0x41, 0x8b, 0x4a, 0x60,                   /*12: mov     0x60(%r10), %ecx         */
  0xc1, 0xe9, 0x0e,                         /*16: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*19: and     $0x1ff, %ecx             */
  0x89, 0x4d, 0xe4,                         /*1f: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*22: mov     -0x18(%rbp), %rcx        */
  0x44, 0x8b, 0x49, 0x60,                   /*26: mov     0x60(%rcx), %r9d         */
  0x45, 0x89, 0xce,                         /*2a: mov     %r9d, %r14d              */
  0x41, 0xc1, 0xee, 0x17,                   /*2d: shr     $0x17, %r14d             */
  0x49, 0xc1, 0xe6, 0x04,                   /*31: shl     $0x4, %r14               */
  0x48, 0x8b, 0x59, 0x18,                   /*35: mov     0x18(%rcx), %rbx         */
  0x48, 0x8b, 0x79, 0x58,                   /*39: mov     0x58(%rcx), %rdi         */
  0x48, 0x63, 0x45, 0xe4,                   /*3d: movslq  -0x1c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*41: shl     $0x4, %rax               */
  0x41, 0xc1, 0xe9, 0x07,                   /*45: shr     $0x7, %r9d               */
  0x41, 0x83, 0xe1, 0x7f,                   /*49: and     $0x7f, %r9d              */
  0x48, 0x8b, 0x34, 0x03,                   /*4d: mov     (%rbx, %rax, 1), %rsi    */
  0x8b, 0x54, 0x03, 0x08,                   /*51: mov     0x8(%rbx, %rax, 1), %edx */
  0x48, 0x8b, 0x4c, 0x03, 0x10,             /*55: mov     0x10(%rbx, %rax, 1), %rcx */
  0x44, 0x8b, 0x44, 0x03, 0x18,             /*5a: mov     0x18(%rbx, %rax, 1), %r8d */
  0x41, 0xff, 0x92, 0x80, 0x01, 0x00, 0x00, /*5f: callq   *0x180(%r10)             */
  0x48, 0x89, 0x45, 0xd0,                   /*66: mov     %rax, -0x30(%rbp)        */
  0x89, 0x55, 0xd8,                         /*6a: mov     %edx, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*6d: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*71: mov     -0x28(%rbp), %rcx        */
  0x4a, 0x89, 0x4c, 0x33, 0x08,             /*75: mov     %rcx, 0x8(%rbx, %r14, 1) */
  0x4a, 0x89, 0x04, 0x33,                   /*7a: mov     %rax, (%rbx, %r14, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*7e: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*82: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*85: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*89: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*8f: add     $0x20, %rsp              */
  0x5b,                                     /*93: pop     %rbx                     */
  0x41, 0x5e,                               /*94: pop     %r14                     */
  0x5d,                                     /*96: pop     %rbp                     */
};


static uint8_t op_oclass[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*0b: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xe8,                   /*0e: mov     %rax, -0x18(%rbp)        */
  0x8b, 0x58, 0x60,                         /*12: mov     0x60(%rax), %ebx         */
  0xc1, 0xeb, 0x17,                         /*15: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*18: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x18,                   /*1c: mov     0x18(%rax), %r14         */
  0x48, 0x8b, 0x48, 0x58,                   /*20: mov     0x58(%rax), %rcx         */
  0x48, 0x8b, 0x79, 0x40,                   /*24: mov     0x40(%rcx), %rdi         */
  0xff, 0x90, 0x40, 0x02, 0x00, 0x00,       /*28: callq   *0x240(%rax)             */
  0x48, 0x89, 0x45, 0xd8,                   /*2e: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*32: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*35: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*39: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*3d: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*42: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x83, 0xc4, 0x20,                   /*46: add     $0x20, %rsp              */
  0x5b,                                     /*4a: pop     %rbx                     */
  0x41, 0x5e,                               /*4b: pop     %r14                     */
  0x5d,                                     /*4d: pop     %rbp                     */
};


static uint8_t op_class[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x53,                                     /*08: push    %rbx                     */
  0x48, 0x83, 0xec, 0x68,                   /*09: sub     $0x68, %rsp              */
  0x49, 0x89, 0xfe,                         /*0d: mov     %rdi, %r14               */
  0x4c, 0x89, 0x75, 0xe0,                   /*10: mov     %r14, -0x20(%rbp)        */
  0x48, 0xc7, 0x45, 0xd8, 0x00, 0x00, 0x00, /*14: movq    $0x0, -0x28(%rbp)        */
  0x00,                                     /*1b:                                  */
  0x48, 0x8b, 0x45, 0xe0,                   /*1c: mov     -0x20(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*20: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*23: shr     $0x17, %eax              */
  0x89, 0x45, 0xd4,                         /*26: mov     %eax, -0x2c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*29: mov     -0x20(%rbp), %rax        */
  0x8b, 0x48, 0x60,                         /*2d: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x0e,                         /*30: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*33: and     $0x1ff, %ecx             */
  0x48, 0x8b, 0x40, 0x28,                   /*39: mov     0x28(%rax), %rax         */
  0x8b, 0x04, 0x88,                         /*3d: mov     (%rax, %rcx, 4), %eax    */
  0x89, 0x45, 0xac,                         /*40: mov     %eax, -0x54(%rbp)        */
  0x48, 0x63, 0x45, 0xd4,                   /*43: movslq  -0x2c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*47: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*4b: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*4f: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*53: mov     (%rcx, %rax, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*57: mov     0x8(%rcx, %rax, 1), %rax */
  0x48, 0x89, 0x45, 0xc8,                   /*5c: mov     %rax, -0x38(%rbp)        */
  0x48, 0x89, 0x55, 0xc0,                   /*60: mov     %rdx, -0x40(%rbp)        */
  0x48, 0x63, 0x45, 0xd4,                   /*64: movslq  -0x2c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*68: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*6c: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*70: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x54, 0x08, 0x10,             /*74: mov     0x10(%rax, %rcx, 1), %rdx */
  0x48, 0x8b, 0x44, 0x08, 0x18,             /*79: mov     0x18(%rax, %rcx, 1), %rax */
  0x48, 0x89, 0x45, 0xb8,                   /*7e: mov     %rax, -0x48(%rbp)        */
  0x48, 0x89, 0x55, 0xb0,                   /*82: mov     %rdx, -0x50(%rbp)        */
  0x83, 0x7d, 0xc8, 0x00,                   /*86: cmpl    $0x0, -0x38(%rbp)        */
  0x75, 0x38,                               /*8a: jne     c4                       */
  0x83, 0x7d, 0xc0, 0x00,                   /*8c: cmpl    $0x0, -0x40(%rbp)        */
  0x75, 0x32,                               /*90: jne     c4                       */
  0x48, 0x8b, 0x45, 0xe0,                   /*92: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*96: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*9a: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*9e: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x78, 0x48,                   /*a2: mov     0x48(%rax), %rdi         */
  0x41, 0xff, 0x96, 0x40, 0x02, 0x00, 0x00, /*a6: callq   *0x240(%r14)             */
  0x48, 0x89, 0x45, 0x98,                   /*ad: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*b1: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*b4: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*b8: mov     -0x60(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xc8,                   /*bc: mov     %rcx, -0x38(%rbp)        */
  0x48, 0x89, 0x45, 0xc0,                   /*c0: mov     %rax, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*c4: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*c8: mov     0x58(%rax), %rdi         */
  0x44, 0x8b, 0x4d, 0xac,                   /*cc: mov     -0x54(%rbp), %r9d        */
  0x48, 0x8b, 0x75, 0xc0,                   /*d0: mov     -0x40(%rbp), %rsi        */
  0x8b, 0x55, 0xc8,                         /*d4: mov     -0x38(%rbp), %edx        */
  0x48, 0x8b, 0x4d, 0xb0,                   /*d7: mov     -0x50(%rbp), %rcx        */
  0x44, 0x8b, 0x45, 0xb8,                   /*db: mov     -0x48(%rbp), %r8d        */
  0x41, 0xff, 0x96, 0x88, 0x01, 0x00, 0x00, /*df: callq   *0x188(%r14)             */
  0x48, 0x89, 0x45, 0xd8,                   /*e6: mov     %rax, -0x28(%rbp)        */
  0x48, 0x63, 0x5d, 0xd4,                   /*ea: movslq  -0x2c(%rbp), %rbx        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*ee: mov     -0x20(%rbp), %rcx        */
  0x4c, 0x8b, 0x79, 0x18,                   /*f2: mov     0x18(%rcx), %r15         */
  0x48, 0xc1, 0xe3, 0x04,                   /*f6: shl     $0x4, %rbx               */
  0x48, 0x89, 0xc7,                         /*fa: mov     %rax, %rdi               */
  0x41, 0xff, 0x96, 0x40, 0x02, 0x00, 0x00, /*fd: callq   *0x240(%r14)             */
  0x48, 0x89, 0x45, 0x88,                   /*104: mov     %rax, -0x78(%rbp)        */
  0x89, 0x55, 0x90,                         /*108: mov     %edx, -0x70(%rbp)        */
  0x48, 0x8b, 0x45, 0x88,                   /*10b: mov     -0x78(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x90,                   /*10f: mov     -0x70(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*113: mov     %rcx, 0x8(%r15, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1f,                   /*118: mov     %rax, (%r15, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe0,                   /*11c: mov     -0x20(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*120: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*123: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*127: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x68,                   /*12d: add     $0x68, %rsp              */
  0x5b,                                     /*131: pop     %rbx                     */
  0x41, 0x5e,                               /*132: pop     %r14                     */
  0x41, 0x5f,                               /*134: pop     %r15                     */
  0x5d,                                     /*136: pop     %rbp                     */
};


static uint8_t op_module[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x53,                                     /*08: push    %rbx                     */
  0x48, 0x83, 0xec, 0x58,                   /*09: sub     $0x58, %rsp              */
  0x49, 0x89, 0xfe,                         /*0d: mov     %rdi, %r14               */
  0x4c, 0x89, 0x75, 0xe0,                   /*10: mov     %r14, -0x20(%rbp)        */
  0x48, 0xc7, 0x45, 0xd8, 0x00, 0x00, 0x00, /*14: movq    $0x0, -0x28(%rbp)        */
  0x00,                                     /*1b:                                  */
  0x48, 0x8b, 0x45, 0xe0,                   /*1c: mov     -0x20(%rbp), %rax        */
  0x8b, 0x40, 0x60,                         /*20: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*23: shr     $0x17, %eax              */
  0x89, 0x45, 0xd4,                         /*26: mov     %eax, -0x2c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*29: mov     -0x20(%rbp), %rax        */
  0x8b, 0x48, 0x60,                         /*2d: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x0e,                         /*30: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*33: and     $0x1ff, %ecx             */
  0x48, 0x8b, 0x40, 0x28,                   /*39: mov     0x28(%rax), %rax         */
  0x8b, 0x04, 0x88,                         /*3d: mov     (%rax, %rcx, 4), %eax    */
  0x89, 0x45, 0xbc,                         /*40: mov     %eax, -0x44(%rbp)        */
  0x48, 0x63, 0x45, 0xd4,                   /*43: movslq  -0x2c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*47: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*4b: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*4f: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*53: mov     (%rcx, %rax, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*57: mov     0x8(%rcx, %rax, 1), %rax */
  0x48, 0x89, 0x45, 0xc8,                   /*5c: mov     %rax, -0x38(%rbp)        */
  0x48, 0x89, 0x55, 0xc0,                   /*60: mov     %rdx, -0x40(%rbp)        */
  0x83, 0x7d, 0xc8, 0x00,                   /*64: cmpl    $0x0, -0x38(%rbp)        */
  0x75, 0x38,                               /*68: jne     a2                       */
  0x83, 0x7d, 0xc0, 0x00,                   /*6a: cmpl    $0x0, -0x40(%rbp)        */
  0x75, 0x32,                               /*6e: jne     a2                       */
  0x48, 0x8b, 0x45, 0xe0,                   /*70: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*74: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*78: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*7c: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x78, 0x48,                   /*80: mov     0x48(%rax), %rdi         */
  0x41, 0xff, 0x96, 0x40, 0x02, 0x00, 0x00, /*84: callq   *0x240(%r14)             */
  0x48, 0x89, 0x45, 0xa8,                   /*8b: mov     %rax, -0x58(%rbp)        */
  0x89, 0x55, 0xb0,                         /*8f: mov     %edx, -0x50(%rbp)        */
  0x48, 0x8b, 0x45, 0xa8,                   /*92: mov     -0x58(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb0,                   /*96: mov     -0x50(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xc8,                   /*9a: mov     %rcx, -0x38(%rbp)        */
  0x48, 0x89, 0x45, 0xc0,                   /*9e: mov     %rax, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*a2: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*a6: mov     0x58(%rax), %rdi         */
  0x8b, 0x4d, 0xbc,                         /*aa: mov     -0x44(%rbp), %ecx        */
  0x48, 0x8b, 0x75, 0xc0,                   /*ad: mov     -0x40(%rbp), %rsi        */
  0x8b, 0x55, 0xc8,                         /*b1: mov     -0x38(%rbp), %edx        */
  0x41, 0xff, 0x96, 0xb0, 0x00, 0x00, 0x00, /*b4: callq   *0xb0(%r14)              */
  0x48, 0x89, 0x45, 0xd8,                   /*bb: mov     %rax, -0x28(%rbp)        */
  0x48, 0x63, 0x5d, 0xd4,                   /*bf: movslq  -0x2c(%rbp), %rbx        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*c3: mov     -0x20(%rbp), %rcx        */
  0x4c, 0x8b, 0x79, 0x18,                   /*c7: mov     0x18(%rcx), %r15         */
  0x48, 0xc1, 0xe3, 0x04,                   /*cb: shl     $0x4, %rbx               */
  0x48, 0x89, 0xc7,                         /*cf: mov     %rax, %rdi               */
  0x41, 0xff, 0x96, 0x40, 0x02, 0x00, 0x00, /*d2: callq   *0x240(%r14)             */
  0x48, 0x89, 0x45, 0x98,                   /*d9: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*dd: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*e0: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*e4: mov     -0x60(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*e8: mov     %rcx, 0x8(%r15, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1f,                   /*ed: mov     %rax, (%r15, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe0,                   /*f1: mov     -0x20(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*f5: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*f8: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*fc: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x58,                   /*102: add     $0x58, %rsp              */
  0x5b,                                     /*106: pop     %rbx                     */
  0x41, 0x5e,                               /*107: pop     %r14                     */
  0x41, 0x5f,                               /*109: pop     %r15                     */
  0x5d,                                     /*10b: pop     %rbp                     */
};


static uint8_t op_exec[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x40,                   /*07: sub     $0x40, %rsp              */
  0x49, 0x89, 0xfe,                         /*0b: mov     %rdi, %r14               */
  0x4c, 0x89, 0x75, 0xe8,                   /*0e: mov     %r14, -0x18(%rbp)        */
  0x41, 0x8b, 0x46, 0x60,                   /*12: mov     0x60(%r14), %eax         */
  0xc1, 0xe8, 0x17,                         /*16: shr     $0x17, %eax              */
  0x89, 0x45, 0xe4,                         /*19: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x63, 0x45, 0xe4,                   /*1c: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*20: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*24: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*28: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*2c: mov     (%rcx, %rax, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*30: mov     0x8(%rcx, %rax, 1), %rax */
  0x48, 0x89, 0x45, 0xd0,                   /*35: mov     %rax, -0x30(%rbp)        */
  0x48, 0x89, 0x55, 0xc8,                   /*39: mov     %rdx, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*3d: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*41: mov     0x58(%rax), %rdi         */
  0x41, 0xff, 0x96, 0xe8, 0x00, 0x00, 0x00, /*45: callq   *0xe8(%r14)              */
  0x48, 0x89, 0x45, 0xd8,                   /*4c: mov     %rax, -0x28(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*50: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x10,                   /*54: mov     0x10(%rcx), %rcx         */
  0x48, 0x83, 0xc1, 0x04,                   /*58: add     $0x4, %rcx               */
  0x48, 0x89, 0x48, 0x30,                   /*5c: mov     %rcx, 0x30(%rax)         */
  0x8b, 0x45, 0xe4,                         /*60: mov     -0x1c(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*63: mov     -0x28(%rbp), %rcx        */
  0x89, 0x41, 0x44,                         /*67: mov     %eax, 0x44(%rcx)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*6a: mov     -0x28(%rbp), %rax        */
  0xc7, 0x00, 0x00, 0x00, 0x00, 0x00,       /*6e: movl    $0x0, (%rax)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*74: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*78: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*7c: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*80: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xd8,                   /*84: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*88: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*8c: mov     -0x28(%rbp), %rax        */
  0xc7, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, /*90: movl    $0x0, 0x40(%rax)         */
  0x48, 0x8b, 0x45, 0xc8,                   /*97: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*9b: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*9f: mov     %rax, 0x48(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*a3: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*a7: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*ab: mov     0x18(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xe4,                   /*af: movslq  -0x1c(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*b3: shl     $0x4, %rcx               */
  0x48, 0x01, 0x48, 0x08,                   /*b7: add     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xe8,                   /*bb: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*bf: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x78, 0x58,                   /*c3: mov     0x58(%rax), %rdi         */
  0x8b, 0x40, 0x60,                         /*c7: mov     0x60(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*ca: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*cd: movzwl  %ax, %eax                */
  0x48, 0x8b, 0x49, 0x20,                   /*d0: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x34, 0xc1,                   /*d4: mov     (%rcx, %rax, 8), %rsi    */
  0x41, 0xff, 0x96, 0x48, 0x01, 0x00, 0x00, /*d8: callq   *0x148(%r14)             */
  0x48, 0x89, 0x45, 0xc0,                   /*df: mov     %rax, -0x40(%rbp)        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*e3: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x48,                   /*e7: mov     0x48(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x20,                   /*eb: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xc0,                   /*ef: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*f3: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*f7: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xc0,                   /*fb: mov     -0x40(%rbp), %rax        */
  0x8b, 0x00,                               /*ff: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*101: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*104: test    $0x80, %al               */
  0x74, 0x74,                               /*106: je      17c                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*108: mov     -0x28(%rbp), %rax        */
  0xc7, 0x40, 0x18, 0x00, 0x00, 0x00, 0x00, /*10c: movl    $0x0, 0x18(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*113: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*117: mov     0x58(%rax), %rdi         */
  0x48, 0x8b, 0x47, 0x18,                   /*11b: mov     0x18(%rdi), %rax         */
  0x48, 0x8b, 0x58, 0x08,                   /*11f: mov     0x8(%rax), %rbx          */
  0x48, 0x8b, 0x45, 0xc0,                   /*123: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x75, 0xc8,                   /*127: mov     -0x38(%rbp), %rsi        */
  0x8b, 0x55, 0xd0,                         /*12b: mov     -0x30(%rbp), %edx        */
  0xff, 0x50, 0x18,                         /*12e: callq   *0x18(%rax)              */
  0x48, 0x89, 0x45, 0xb0,                   /*131: mov     %rax, -0x50(%rbp)        */
  0x89, 0x55, 0xb8,                         /*135: mov     %edx, -0x48(%rbp)        */
  0x48, 0x8b, 0x45, 0xb0,                   /*138: mov     -0x50(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*13c: mov     -0x48(%rbp), %rcx        */
  0x48, 0x89, 0x4b, 0x08,                   /*140: mov     %rcx, 0x8(%rbx)          */
  0x48, 0x89, 0x03,                         /*144: mov     %rax, (%rbx)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*147: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*14b: mov     0x58(%rax), %rdi         */
  0x8b, 0x70, 0x50,                         /*14f: mov     0x50(%rax), %esi         */
  0x41, 0xff, 0x96, 0x10, 0x01, 0x00, 0x00, /*152: callq   *0x110(%r14)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*159: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*15d: mov     0x58(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*161: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x84, 0x95, 0x00, 0x00, 0x00,       /*166: je      201                      */
  0x48, 0x8b, 0x7d, 0xe8,                   /*16c: mov     -0x18(%rbp), %rdi        */
  0x41, 0xff, 0x96, 0xc8, 0x01, 0x00, 0x00, /*170: callq   *0x1c8(%r14)             */
  0xe9, 0xbd, 0x00, 0x00, 0x00,             /*177: jmpq    239                      */
  0x48, 0x8b, 0x45, 0xc0,                   /*17c: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*180: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*184: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*188: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xe8,                   /*18c: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*190: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x10,                   /*194: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x20,                   /*198: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*19c: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*1a0: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*1a4: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*1a8: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*1ac: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*1b0: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x78, 0x58,                   /*1b4: mov     0x58(%rax), %rdi         */
  0x0f, 0xb7, 0x71, 0x02,                   /*1b8: movzwl  0x2(%rcx), %esi          */
  0xba, 0x01, 0x00, 0x00, 0x00,             /*1bc: mov     $0x1, %edx               */
  0x41, 0xff, 0x96, 0x40, 0x01, 0x00, 0x00, /*1c1: callq   *0x140(%r14)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*1c8: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*1cc: mov     0x8(%rax), %rax          */
  0x0f, 0xb7, 0x40, 0x02,                   /*1d0: movzwl  0x2(%rax), %eax          */
  0x48, 0x8b, 0x4d, 0xd8,                   /*1d4: mov     -0x28(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*1d8: mov     %eax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*1db: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*1df: mov     0x58(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1e3: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*1e7: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x18,                   /*1eb: mov     %rcx, 0x18(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*1ef: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*1f3: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x08,                   /*1f7: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x10,                   /*1fb: mov     %rcx, 0x10(%rax)         */
  0xeb, 0x38,                               /*1ff: jmp     239                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*201: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*205: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*209: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x48, 0x20,                   /*20d: mov     0x20(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*211: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x08,                   /*215: mov     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xe8,                   /*219: mov     -0x18(%rbp), %rax        */
  0x48, 0x89, 0x48, 0x18,                   /*21d: mov     %rcx, 0x18(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*221: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*225: mov     0x58(%rax), %rdi         */
  0x41, 0xff, 0x96, 0x60, 0x01, 0x00, 0x00, /*229: callq   *0x160(%r14)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*230: mov     -0x18(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*234: addq    $0x4, 0x10(%rax)         */
  0x48, 0x83, 0xc4, 0x40,                   /*239: add     $0x40, %rsp              */
  0x5b,                                     /*23d: pop     %rbx                     */
  0x41, 0x5e,                               /*23e: pop     %r14                     */
  0x5d,                                     /*240: pop     %rbp                     */
};


static uint8_t op_method[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x20,                   /*04: sub     $0x20, %rsp              */
  0x49, 0x89, 0xf9,                         /*08: mov     %rdi, %r9                */
  0x4c, 0x89, 0x4d, 0xf8,                   /*0b: mov     %r9, -0x8(%rbp)          */
  0x41, 0x8b, 0x49, 0x60,                   /*0f: mov     0x60(%r9), %ecx          */
  0xc1, 0xe9, 0x17,                         /*13: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*16: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x63, 0x4d, 0xf4,                   /*19: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xf8,                   /*1d: mov     -0x8(%rbp), %rdx         */
  0x48, 0x8b, 0x52, 0x18,                   /*21: mov     0x18(%rdx), %rdx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*25: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x34, 0x0a,                   /*29: mov     (%rdx, %rcx, 1), %rsi    */
  0x48, 0x89, 0x75, 0xe8,                   /*2d: mov     %rsi, -0x18(%rbp)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*31: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x79, 0x58,                   /*35: mov     0x58(%rcx), %rdi         */
  0x8b, 0x51, 0x60,                         /*39: mov     0x60(%rcx), %edx         */
  0xc1, 0xea, 0x0e,                         /*3c: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*3f: and     $0x1ff, %edx             */
  0x4c, 0x8b, 0x41, 0x18,                   /*45: mov     0x18(%rcx), %r8          */
  0x48, 0x8b, 0x49, 0x28,                   /*49: mov     0x28(%rcx), %rcx         */
  0x8b, 0x14, 0x91,                         /*4d: mov     (%rcx, %rdx, 4), %edx    */
  0x48, 0x63, 0x45, 0xf4,                   /*50: movslq  -0xc(%rbp), %rax         */
  0x48, 0xc1, 0xe0, 0x04,                   /*54: shl     $0x4, %rax               */
  0x4a, 0x8b, 0x4c, 0x00, 0x10,             /*58: mov     0x10(%rax, %r8, 1), %rcx */
  0x46, 0x8b, 0x44, 0x00, 0x18,             /*5d: mov     0x18(%rax, %r8, 1), %r8d */
  0x41, 0xff, 0x91, 0xf0, 0x00, 0x00, 0x00, /*62: callq   *0xf0(%r9)               */
  0x48, 0x8b, 0x45, 0xf8,                   /*69: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x50,                         /*6d: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*70: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*74: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*7a: add     $0x20, %rsp              */
  0x5d,                                     /*7e: pop     %rbp                     */
};


static uint8_t op_sclass[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x48, 0x89, 0xf8,                         /*0b: mov     %rdi, %rax               */
  0x48, 0x89, 0x45, 0xe8,                   /*0e: mov     %rax, -0x18(%rbp)        */
  0x8b, 0x48, 0x60,                         /*12: mov     0x60(%rax), %ecx         */
  0x89, 0xcb,                               /*15: mov     %ecx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*17: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1a: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x18,                   /*1e: mov     0x18(%rax), %r14         */
  0x48, 0x8b, 0x78, 0x58,                   /*22: mov     0x58(%rax), %rdi         */
  0xc1, 0xe9, 0x0e,                         /*26: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*29: and     $0x1ff, %ecx             */
  0x48, 0xc1, 0xe1, 0x04,                   /*2f: shl     $0x4, %rcx               */
  0x49, 0x8b, 0x34, 0x0e,                   /*33: mov     (%r14, %rcx, 1), %rsi    */
  0x41, 0x8b, 0x54, 0x0e, 0x08,             /*37: mov     0x8(%r14, %rcx, 1), %edx */
  0xff, 0x90, 0xc8, 0x00, 0x00, 0x00,       /*3c: callq   *0xc8(%rax)              */
  0x48, 0x89, 0x45, 0xd8,                   /*42: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*46: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*49: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*4d: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*51: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*56: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*5a: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x50,                         /*5e: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x58,                   /*61: mov     0x58(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*65: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*6b: add     $0x20, %rsp              */
  0x5b,                                     /*6f: pop     %rbx                     */
  0x41, 0x5e,                               /*70: pop     %r14                     */
  0x5d,                                     /*72: pop     %rbp                     */
};


static uint8_t op_tclass[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x41, 0x54,                               /*08: push    %r12                     */
  0x53,                                     /*0a: push    %rbx                     */
  0x48, 0x83, 0xec, 0x40,                   /*0b: sub     $0x40, %rsp              */
  0x49, 0x89, 0xfc,                         /*0f: mov     %rdi, %r12               */
  0x4c, 0x89, 0x65, 0xd8,                   /*12: mov     %r12, -0x28(%rbp)        */
  0x49, 0x8b, 0x44, 0x24, 0x58,             /*16: mov     0x58(%r12), %rax         */
  0x48, 0x89, 0x45, 0xd0,                   /*1b: mov     %rax, -0x30(%rbp)        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*23: mov     0x20(%rax), %rax         */
  0x48, 0x83, 0x78, 0x48, 0x00,             /*27: cmpq    $0x0, 0x48(%rax)         */
  0x74, 0x4d,                               /*2c: je      7b                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*2e: mov     -0x28(%rbp), %rax        */
  0x8b, 0x58, 0x60,                         /*32: mov     0x60(%rax), %ebx         */
  0xc1, 0xeb, 0x17,                         /*35: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*38: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x18,                   /*3c: mov     0x18(%rax), %r14         */
  0x48, 0x8b, 0x40, 0x58,                   /*40: mov     0x58(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*44: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*48: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x78, 0x48,                   /*4c: mov     0x48(%rax), %rdi         */
  0x41, 0xff, 0x94, 0x24, 0x40, 0x02, 0x00, /*50: callq   *0x240(%r12)             */
  0x00,                                     /*57:                                  */
  0x48, 0x89, 0x45, 0xa0,                   /*58: mov     %rax, -0x60(%rbp)        */
  0x89, 0x55, 0xa8,                         /*5c: mov     %edx, -0x58(%rbp)        */
  0x48, 0x8b, 0x45, 0xa0,                   /*5f: mov     -0x60(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa8,                   /*63: mov     -0x58(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*67: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*6c: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xd8,                   /*70: mov     -0x28(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*74: addq    $0x4, 0x10(%rax)         */
  0xeb, 0x71,                               /*79: jmp     ec                       */
  0x4c, 0x8b, 0x75, 0xd0,                   /*7b: mov     -0x30(%rbp), %r14        */
  0x49, 0x8b, 0x84, 0x24, 0xb0, 0x01, 0x00, /*7f: mov     0x1b0(%r12), %rax        */
  0x00,                                     /*86:                                  */
  0x48, 0x8b, 0x30,                         /*87: mov     (%rax), %rsi             */
  0x4c, 0x89, 0xf7,                         /*8a: mov     %r14, %rdi               */
  0x41, 0xff, 0x94, 0x24, 0x18, 0x01, 0x00, /*8d: callq   *0x118(%r12)             */
  0x00,                                     /*94:                                  */
  0x49, 0x89, 0xc7,                         /*95: mov     %rax, %r15               */
  0x48, 0x8b, 0x7d, 0xd0,                   /*98: mov     -0x30(%rbp), %rdi        */
  0x49, 0x8b, 0xb4, 0x24, 0xe8, 0x02, 0x00, /*9c: mov     0x2e8(%r12), %rsi        */
  0x00,                                     /*a3:                                  */
  0xba, 0x19, 0x00, 0x00, 0x00,             /*a4: mov     $0x19, %edx              */
  0x41, 0xff, 0x54, 0x24, 0x78,             /*a9: callq   *0x78(%r12)              */
  0x89, 0xd1,                               /*ae: mov     %edx, %ecx               */
  0x48, 0x89, 0x45, 0xb0,                   /*b0: mov     %rax, -0x50(%rbp)        */
  0x89, 0x4d, 0xb8,                         /*b4: mov     %ecx, -0x48(%rbp)        */
  0x48, 0x8b, 0x55, 0xb0,                   /*b7: mov     -0x50(%rbp), %rdx        */
  0x4c, 0x89, 0xf7,                         /*bb: mov     %r14, %rdi               */
  0x4c, 0x89, 0xfe,                         /*be: mov     %r15, %rsi               */
  0x41, 0xff, 0x94, 0x24, 0xd8, 0x01, 0x00, /*c1: callq   *0x1d8(%r12)             */
  0x00,                                     /*c8:                                  */
  0x48, 0x89, 0x45, 0xc0,                   /*c9: mov     %rax, -0x40(%rbp)        */
  0x89, 0x55, 0xc8,                         /*cd: mov     %edx, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*d0: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*d4: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*d8: mov     0x58(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x28,                   /*dc: mov     %rax, 0x28(%rcx)         */
  0x48, 0x8b, 0x7d, 0xd8,                   /*e0: mov     -0x28(%rbp), %rdi        */
  0x41, 0xff, 0x94, 0x24, 0xc8, 0x01, 0x00, /*e4: callq   *0x1c8(%r12)             */
  0x00,                                     /*eb:                                  */
  0x48, 0x83, 0xc4, 0x40,                   /*ec: add     $0x40, %rsp              */
  0x5b,                                     /*f0: pop     %rbx                     */
  0x41, 0x5c,                               /*f1: pop     %r12                     */
  0x41, 0x5e,                               /*f3: pop     %r14                     */
  0x41, 0x5f,                               /*f5: pop     %r15                     */
  0x5d,                                     /*f7: pop     %rbp                     */
};


static uint8_t op_debug[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x49, 0x89, 0xf8,                         /*08: mov     %rdi, %r8                */
  0x4c, 0x89, 0x45, 0xf8,                   /*0b: mov     %r8, -0x8(%rbp)          */
  0x41, 0x8b, 0x48, 0x60,                   /*0f: mov     0x60(%r8), %ecx          */
  0x89, 0xce,                               /*13: mov     %ecx, %esi               */
  0xc1, 0xee, 0x17,                         /*15: shr     $0x17, %esi              */
  0x89, 0xca,                               /*18: mov     %ecx, %edx               */
  0xc1, 0xea, 0x0e,                         /*1a: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*1d: and     $0x1ff, %edx             */
  0xc1, 0xe9, 0x07,                         /*23: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*26: and     $0x7f, %ecx              */
  0x49, 0x8b, 0xb8, 0xf0, 0x02, 0x00, 0x00, /*29: mov     0x2f0(%r8), %rdi         */
  0x31, 0xc0,                               /*30: xor     %eax, %eax               */
  0x41, 0xff, 0x90, 0x78, 0x01, 0x00, 0x00, /*32: callq   *0x178(%r8)              */
  0x48, 0x83, 0xc4, 0x10,                   /*39: add     $0x10, %rsp              */
  0x5d,                                     /*3d: pop     %rbp                     */
};


static uint8_t op_stop[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x48, 0x89, 0x7d, 0xf8,                   /*08: mov     %rdi, -0x8(%rbp)         */
  0xff, 0x97, 0xe8, 0x01, 0x00, 0x00,       /*0c: callq   *0x1e8(%rdi)             */
  0x48, 0x83, 0xc4, 0x10,                   /*12: add     $0x10, %rsp              */
  0x5d,                                     /*16: pop     %rbp                     */
};


static uint8_t op_err[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x50,                   /*07: sub     $0x50, %rsp              */
  0x48, 0x89, 0xfb,                         /*0b: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5d, 0xe8,                   /*0e: mov     %rbx, -0x18(%rbp)        */
  0x48, 0x8b, 0x7b, 0x58,                   /*12: mov     0x58(%rbx), %rdi         */
  0x48, 0x89, 0x7d, 0xe0,                   /*16: mov     %rdi, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*1a: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x60,                         /*1e: mov     0x60(%rax), %ecx         */
  0xc1, 0xe9, 0x07,                         /*21: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*24: movzwl  %cx, %ecx                */
  0x48, 0x8b, 0x40, 0x20,                   /*27: mov     0x20(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*2b: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x34, 0x08,                   /*2f: mov     (%rax, %rcx, 1), %rsi    */
  0x8b, 0x54, 0x08, 0x08,                   /*33: mov     0x8(%rax, %rcx, 1), %edx */
  0xff, 0x93, 0xe0, 0x01, 0x00, 0x00,       /*37: callq   *0x1e0(%rbx)             */
  0x48, 0x89, 0x45, 0xd0,                   /*3d: mov     %rax, -0x30(%rbp)        */
  0x89, 0x55, 0xd8,                         /*41: mov     %edx, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*44: mov     -0x18(%rbp), %rax        */
  0xf7, 0x40, 0x60, 0x00, 0x00, 0x80, 0xff, /*48: testl   $0xff800000, 0x60(%rax)  */
  0x74, 0x3b,                               /*4f: je      8c                       */
  0x4c, 0x8b, 0x75, 0xe0,                   /*51: mov     -0x20(%rbp), %r14        */
  0x48, 0x8b, 0x83, 0x78, 0x02, 0x00, 0x00, /*55: mov     0x278(%rbx), %rax        */
  0x48, 0x8b, 0x30,                         /*5c: mov     (%rax), %rsi             */
  0x4c, 0x89, 0xf7,                         /*5f: mov     %r14, %rdi               */
  0xff, 0x93, 0x18, 0x01, 0x00, 0x00,       /*62: callq   *0x118(%rbx)             */
  0x48, 0x8b, 0x55, 0xd0,                   /*68: mov     -0x30(%rbp), %rdx        */
  0x8b, 0x4d, 0xd8,                         /*6c: mov     -0x28(%rbp), %ecx        */
  0x4c, 0x89, 0xf7,                         /*6f: mov     %r14, %rdi               */
  0x48, 0x89, 0xc6,                         /*72: mov     %rax, %rsi               */
  0xff, 0x93, 0xd8, 0x01, 0x00, 0x00,       /*75: callq   *0x1d8(%rbx)             */
  0x48, 0x89, 0x45, 0xa0,                   /*7b: mov     %rax, -0x60(%rbp)        */
  0x89, 0x55, 0xa8,                         /*7f: mov     %edx, -0x58(%rbp)        */
  0x48, 0x8b, 0x45, 0xa0,                   /*82: mov     -0x60(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa8,                   /*86: mov     -0x58(%rbp), %rcx        */
  0xeb, 0x39,                               /*8a: jmp     c5                       */
  0x4c, 0x8b, 0x75, 0xe0,                   /*8c: mov     -0x20(%rbp), %r14        */
  0x48, 0x8b, 0x83, 0x80, 0x00, 0x00, 0x00, /*90: mov     0x80(%rbx), %rax         */
  0x48, 0x8b, 0x30,                         /*97: mov     (%rax), %rsi             */
  0x4c, 0x89, 0xf7,                         /*9a: mov     %r14, %rdi               */
  0xff, 0x93, 0x18, 0x01, 0x00, 0x00,       /*9d: callq   *0x118(%rbx)             */
  0x48, 0x8b, 0x55, 0xd0,                   /*a3: mov     -0x30(%rbp), %rdx        */
  0x8b, 0x4d, 0xd8,                         /*a7: mov     -0x28(%rbp), %ecx        */
  0x4c, 0x89, 0xf7,                         /*aa: mov     %r14, %rdi               */
  0x48, 0x89, 0xc6,                         /*ad: mov     %rax, %rsi               */
  0xff, 0x93, 0xd8, 0x01, 0x00, 0x00,       /*b0: callq   *0x1d8(%rbx)             */
  0x48, 0x89, 0x45, 0xb0,                   /*b6: mov     %rax, -0x50(%rbp)        */
  0x89, 0x55, 0xb8,                         /*ba: mov     %edx, -0x48(%rbp)        */
  0x48, 0x8b, 0x45, 0xb0,                   /*bd: mov     -0x50(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*c1: mov     -0x48(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xc8,                   /*c5: mov     %rcx, -0x38(%rbp)        */
  0x48, 0x89, 0x45, 0xc0,                   /*c9: mov     %rax, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*cd: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*d1: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*d5: mov     0x58(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x28,                   /*d9: mov     %rax, 0x28(%rcx)         */
  0x48, 0x8b, 0x7d, 0xe8,                   /*dd: mov     -0x18(%rbp), %rdi        */
  0xff, 0x93, 0xc8, 0x01, 0x00, 0x00,       /*e1: callq   *0x1c8(%rbx)             */
  0x48, 0x83, 0xc4, 0x50,                   /*e7: add     $0x50, %rsp              */
  0x5b,                                     /*eb: pop     %rbx                     */
  0x41, 0x5e,                               /*ec: pop     %r14                     */
  0x5d,                                     /*ee: pop     %rbp                     */
};

static uint8_t* ops[76];
static size_t op_sizes[] = {
  sizeof(op_nop), /* op_nop */
  sizeof(op_move), /* op_move */
  sizeof(op_loadl), /* op_loadl */
  sizeof(op_loadi), /* op_loadi */
  sizeof(op_loadsym), /* op_loadsym */
  sizeof(op_loadnil), /* op_loadnil */
  sizeof(op_loadself), /* op_loadself */
  sizeof(op_loadt), /* op_loadt */
  sizeof(op_loadf), /* op_loadf */
  sizeof(op_getglobal), /* op_getglobal */
  sizeof(op_setglobal), /* op_setglobal */
  sizeof(op_getspecial), /* op_getspecial */
  sizeof(op_setspecial), /* op_setspecial */
  sizeof(op_getiv), /* op_getiv */
  sizeof(op_setiv), /* op_setiv */
  sizeof(op_getcv), /* op_getcv */
  sizeof(op_setcv), /* op_setcv */
  sizeof(op_getconst), /* op_getconst */
  sizeof(op_setconst), /* op_setconst */
  sizeof(op_getmcnst), /* op_getmcnst */
  sizeof(op_setmcnst), /* op_setmcnst */
  sizeof(op_getupvar), /* op_getupvar */
  sizeof(op_setupvar), /* op_setupvar */
  sizeof(op_jmp), /* op_jmp */
  sizeof(op_jmpif), /* op_jmpif */
  sizeof(op_jmpnot), /* op_jmpnot */
  sizeof(op_onerr), /* op_onerr */
  sizeof(op_rescue), /* op_rescue */
  sizeof(op_poperr), /* op_poperr */
  sizeof(op_raise), /* op_raise */
  sizeof(op_epush), /* op_epush */
  sizeof(op_epop), /* op_epop */
  sizeof(op_send), /* op_send */
  sizeof(op_sendb), /* op_sendb */
  sizeof(op_fsend), /* op_fsend */
  sizeof(op_call), /* op_call */
  sizeof(op_super), /* op_super */
  sizeof(op_argary), /* op_argary */
  sizeof(op_enter), /* op_enter */
  sizeof(op_karg), /* op_karg */
  sizeof(op_kdict), /* op_kdict */
  sizeof(op_return), /* op_return */
  sizeof(op_tailcall), /* op_tailcall */
  sizeof(op_blkpush), /* op_blkpush */
  sizeof(op_add), /* op_add */
  sizeof(op_addi), /* op_addi */
  sizeof(op_sub), /* op_sub */
  sizeof(op_subi), /* op_subi */
  sizeof(op_mul), /* op_mul */
  sizeof(op_div), /* op_div */
  sizeof(op_eq), /* op_eq */
  sizeof(op_lt), /* op_lt */
  sizeof(op_le), /* op_le */
  sizeof(op_gt), /* op_gt */
  sizeof(op_ge), /* op_ge */
  sizeof(op_array), /* op_array */
  sizeof(op_arycat), /* op_arycat */
  sizeof(op_arypush), /* op_arypush */
  sizeof(op_aref), /* op_aref */
  sizeof(op_aset), /* op_aset */
  sizeof(op_apost), /* op_apost */
  sizeof(op_string), /* op_string */
  sizeof(op_strcat), /* op_strcat */
  sizeof(op_hash), /* op_hash */
  sizeof(op_lambda), /* op_lambda */
  sizeof(op_range), /* op_range */
  sizeof(op_oclass), /* op_oclass */
  sizeof(op_class), /* op_class */
  sizeof(op_module), /* op_module */
  sizeof(op_exec), /* op_exec */
  sizeof(op_method), /* op_method */
  sizeof(op_sclass), /* op_sclass */
  sizeof(op_tclass), /* op_tclass */
  sizeof(op_debug), /* op_debug */
  sizeof(op_stop), /* op_stop */
  sizeof(op_err), /* op_err */
};

extern void init_symtbl();
void init_ops() {
  static int init = 0;
  if(init == 0) {
    init = 1;
    init_symtbl();
    ops[0] = op_nop;
    ops[1] = op_move;
    ops[2] = op_loadl;
    ops[3] = op_loadi;
    ops[4] = op_loadsym;
    ops[5] = op_loadnil;
    ops[6] = op_loadself;
    ops[7] = op_loadt;
    ops[8] = op_loadf;
    ops[9] = op_getglobal;
    ops[10] = op_setglobal;
    ops[11] = op_getspecial;
    ops[12] = op_setspecial;
    ops[13] = op_getiv;
    ops[14] = op_setiv;
    ops[15] = op_getcv;
    ops[16] = op_setcv;
    ops[17] = op_getconst;
    ops[18] = op_setconst;
    ops[19] = op_getmcnst;
    ops[20] = op_setmcnst;
    ops[21] = op_getupvar;
    ops[22] = op_setupvar;
    ops[23] = op_jmp;
    ops[24] = op_jmpif;
    ops[25] = op_jmpnot;
    ops[26] = op_onerr;
    ops[27] = op_rescue;
    ops[28] = op_poperr;
    ops[29] = op_raise;
    ops[30] = op_epush;
    ops[31] = op_epop;
    ops[32] = op_send;
    ops[33] = op_sendb;
    ops[34] = op_fsend;
    ops[35] = op_call;
    ops[36] = op_super;
    ops[37] = op_argary;
    ops[38] = op_enter;
    ops[39] = op_karg;
    ops[40] = op_kdict;
    ops[41] = op_return;
    ops[42] = op_tailcall;
    ops[43] = op_blkpush;
    ops[44] = op_add;
    ops[45] = op_addi;
    ops[46] = op_sub;
    ops[47] = op_subi;
    ops[48] = op_mul;
    ops[49] = op_div;
    ops[50] = op_eq;
    ops[51] = op_lt;
    ops[52] = op_le;
    ops[53] = op_gt;
    ops[54] = op_ge;
    ops[55] = op_array;
    ops[56] = op_arycat;
    ops[57] = op_arypush;
    ops[58] = op_aref;
    ops[59] = op_aset;
    ops[60] = op_apost;
    ops[61] = op_string;
    ops[62] = op_strcat;
    ops[63] = op_hash;
    ops[64] = op_lambda;
    ops[65] = op_range;
    ops[66] = op_oclass;
    ops[67] = op_class;
    ops[68] = op_module;
    ops[69] = op_exec;
    ops[70] = op_method;
    ops[71] = op_sclass;
    ops[72] = op_tclass;
    ops[73] = op_debug;
    ops[74] = op_stop;
    ops[75] = op_err;
  }
}
