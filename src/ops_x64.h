
static uint8_t op_nop[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
};


static uint8_t op_move[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
  0x48, 0x8b, 0x47, 0x10,                   /*04: mov     +0x10(%rdi), %rax        */
  0x48, 0x8b, 0x4f, 0x18,                   /*08: mov     +0x18(%rdi), %rcx        */
  0x8b, 0x00,                               /*0c: mov     (%rax), %eax             */
  0x89, 0xc2,                               /*0e: mov     %eax, %edx               */
  0xc1, 0xea, 0x17,                         /*10: shr     $0x17, %edx              */
  0x48, 0xc1, 0xe2, 0x04,                   /*13: shl     $0x4, %rdx               */
  0xc1, 0xe8, 0x0e,                         /*17: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*1a: and     $0x1ff, %eax             */
  0x48, 0xc1, 0xe0, 0x04,                   /*1f: shl     $0x4, %rax               */
  0x48, 0x8b, 0x34, 0x01,                   /*23: mov     (%rcx,%rax,1), %rsi      */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*27: mov     +0x8(%rcx,%rax,1), %rax  */
  0x48, 0x89, 0x44, 0x11, 0x08,             /*2c: mov     %rax, +0x8(%rcx,%rdx,1)  */
  0x48, 0x89, 0x34, 0x11,                   /*31: mov     %rsi, (%rcx,%rdx,1)      */
};


static uint8_t op_loadl[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
  0x48, 0x8b, 0x47, 0x10,                   /*04: mov     +0x10(%rdi), %rax        */
  0x4c, 0x8b, 0x47, 0x18,                   /*08: mov     +0x18(%rdi), %r8         */
  0x8b, 0x00,                               /*0c: mov     (%rax), %eax             */
  0x89, 0xc2,                               /*0e: mov     %eax, %edx               */
  0xc1, 0xea, 0x17,                         /*10: shr     $0x17, %edx              */
  0x48, 0xc1, 0xe2, 0x04,                   /*13: shl     $0x4, %rdx               */
  0xc1, 0xe8, 0x07,                         /*17: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*1a: movzwl  %ax, %eax                */
  0x48, 0x8b, 0x77, 0x20,                   /*1d: mov     +0x20(%rdi), %rsi        */
  0x48, 0xc1, 0xe0, 0x04,                   /*21: shl     $0x4, %rax               */
  0x48, 0x8b, 0x0c, 0x06,                   /*25: mov     (%rsi,%rax,1), %rcx      */
  0x48, 0x8b, 0x44, 0x06, 0x08,             /*29: mov     +0x8(%rsi,%rax,1), %rax  */
  0x49, 0x89, 0x44, 0x10, 0x08,             /*2e: mov     %rax, +0x8(%r8,%rdx,1)   */
  0x49, 0x89, 0x0c, 0x10,                   /*33: mov     %rcx, (%r8,%rdx,1)       */
};


static uint8_t op_loadi[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
  0x48, 0x8b, 0x47, 0x10,                   /*04: mov     +0x10(%rdi), %rax        */
  0x48, 0x8b, 0x4f, 0x18,                   /*08: mov     +0x18(%rdi), %rcx        */
  0x8b, 0x00,                               /*0c: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*0e: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*11: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, 0x00,/*15: movl    $0x3, +0x8(%rcx,%rax,1)  */
  0x48, 0x8b, 0x04, 0x24,                   /*1d: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x48, 0x10,                   /*21: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x18,                   /*25: mov     +0x18(%rax), %rax        */
  0x8b, 0x09,                               /*29: mov     (%rcx), %ecx             */
  0x89, 0xca,                               /*2b: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*2d: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*30: movzwl  %dx, %edx                */
  0x81, 0xc2, 0x01, 0x80, 0xff, 0xff,       /*33: add     $0xffff8001, %edx        */
  0xc1, 0xe9, 0x17,                         /*39: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*3c: shl     $0x4, %rcx               */
  0x89, 0x14, 0x08,                         /*40: mov     %edx, (%rax,%rcx,1)      */
};


static uint8_t op_loadsym[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
  0x48, 0x8b, 0x47, 0x10,                   /*04: mov     +0x10(%rdi), %rax        */
  0x48, 0x8b, 0x4f, 0x18,                   /*08: mov     +0x18(%rdi), %rcx        */
  0x8b, 0x00,                               /*0c: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*0e: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*11: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x04, 0x00, 0x00, 0x00,/*15: movl    $0x4, +0x8(%rcx,%rax,1)  */
  0x48, 0x8b, 0x04, 0x24,                   /*1d: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x48, 0x10,                   /*21: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x50, 0x18,                   /*25: mov     +0x18(%rax), %rdx        */
  0x8b, 0x09,                               /*29: mov     (%rcx), %ecx             */
  0x89, 0xce,                               /*2b: mov     %ecx, %esi               */
  0xc1, 0xee, 0x07,                         /*2d: shr     $0x7, %esi               */
  0x0f, 0xb7, 0xf6,                         /*30: movzwl  %si, %esi                */
  0x48, 0x8b, 0x40, 0x28,                   /*33: mov     +0x28(%rax), %rax        */
  0x8b, 0x04, 0xb0,                         /*37: mov     (%rax,%rsi,4), %eax      */
  0xc1, 0xe9, 0x17,                         /*3a: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*3d: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*41: mov     %eax, (%rdx,%rcx,1)      */
};


static uint8_t op_loadnil[] = {
  0x48, 0x83, 0xec, 0x18,                   /*00: sub     $0x18, %rsp              */
  0x48, 0x89, 0x7c, 0x24, 0x10,             /*04: mov     %rdi, +0x10(%rsp)        */
  0x48, 0x8b, 0x47, 0x10,                   /*09: mov     +0x10(%rdi), %rax        */
  0x8b, 0x00,                               /*0d: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*0f: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x0c,                   /*12: mov     %eax, +0xc(%rsp)         */
  0x48, 0x63, 0x44, 0x24, 0x0c,             /*16: movslq  +0xc(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*1b: mov     +0x10(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*20: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*24: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00,/*28: movl    $0, +0x8(%rcx,%rax,1)    */
  0x48, 0x63, 0x44, 0x24, 0x0c,             /*30: movslq  +0xc(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*35: mov     +0x10(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*3a: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*3e: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*42: movl    $0, (%rcx,%rax,1)        */
  0x48, 0x83, 0xc4, 0x18,                   /*49: add     $0x18, %rsp              */
};


static uint8_t op_loadself[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
  0x48, 0x8b, 0x47, 0x10,                   /*04: mov     +0x10(%rdi), %rax        */
  0x48, 0x8b, 0x4f, 0x18,                   /*08: mov     +0x18(%rdi), %rcx        */
  0x8b, 0x00,                               /*0c: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*0e: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*11: shl     $0x4, %rax               */
  0x48, 0x8b, 0x11,                         /*15: mov     (%rcx), %rdx             */
  0x48, 0x8b, 0x71, 0x08,                   /*18: mov     +0x8(%rcx), %rsi         */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*1c: mov     %rsi, +0x8(%rcx,%rax,1)  */
  0x48, 0x89, 0x14, 0x01,                   /*21: mov     %rdx, (%rcx,%rax,1)      */
};


static uint8_t op_loadt[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
  0x48, 0x8b, 0x47, 0x10,                   /*04: mov     +0x10(%rdi), %rax        */
  0x48, 0x8b, 0x4f, 0x18,                   /*08: mov     +0x18(%rdi), %rcx        */
  0x8b, 0x00,                               /*0c: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*0e: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*11: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, 0x00,/*15: movl    $0x2, +0x8(%rcx,%rax,1)  */
  0x48, 0x8b, 0x04, 0x24,                   /*1d: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x48, 0x10,                   /*21: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x18,                   /*25: mov     +0x18(%rax), %rax        */
  0x8b, 0x09,                               /*29: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x17,                         /*2b: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*2e: shl     $0x4, %rcx               */
  0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*32: movl    $0x1, (%rax,%rcx,1)      */
};


static uint8_t op_loadf[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
  0x48, 0x8b, 0x47, 0x10,                   /*04: mov     +0x10(%rdi), %rax        */
  0x48, 0x8b, 0x4f, 0x18,                   /*08: mov     +0x18(%rdi), %rcx        */
  0x8b, 0x00,                               /*0c: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*0e: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*11: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00,/*15: movl    $0, +0x8(%rcx,%rax,1)    */
  0x48, 0x8b, 0x04, 0x24,                   /*1d: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x48, 0x10,                   /*21: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x18,                   /*25: mov     +0x18(%rax), %rax        */
  0x8b, 0x09,                               /*29: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x17,                         /*2b: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*2e: shl     $0x4, %rcx               */
  0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*32: movl    $0x1, (%rax,%rcx,1)      */
};


static uint8_t op_getglobal[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*05: sub     $0x20, %rsp              */
  0x48, 0x89, 0xfb,                         /*09: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x18,             /*0c: mov     %rbx, +0x18(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*11: mov     +0x10(%rbx), %rax        */
  0x4c, 0x8b, 0x73, 0x18,                   /*15: mov     +0x18(%rbx), %r14        */
  0x8b, 0x00,                               /*19: mov     (%rax), %eax             */
  0x41, 0x89, 0xc7,                         /*1b: mov     %eax, %r15d              */
  0x41, 0xc1, 0xef, 0x17,                   /*1e: shr     $0x17, %r15d             */
  0x49, 0xc1, 0xe7, 0x04,                   /*22: shl     $0x4, %r15               */
  0x48, 0x8b, 0x7b, 0x58,                   /*26: mov     +0x58(%rbx), %rdi        */
  0xc1, 0xe8, 0x07,                         /*2a: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*2d: movzwl  %ax, %eax                */
  0x48, 0x8b, 0x4b, 0x28,                   /*30: mov     +0x28(%rbx), %rcx        */
  0x8b, 0x34, 0x81,                         /*34: mov     (%rcx,%rax,4), %esi      */
  0xff, 0x93, 0xa8, 0x01, 0x00, 0x00,       /*37: callq   +0x1a8(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*3d: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*42: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*46: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*4b: mov     +0x10(%rsp), %rcx        */
  0x4b, 0x89, 0x4c, 0x3e, 0x08,             /*50: mov     %rcx, +0x8(%r14,%r15,1)  */
  0x4b, 0x89, 0x04, 0x3e,                   /*55: mov     %rax, (%r14,%r15,1)      */
  0x48, 0x89, 0xdf,                         /*59: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*5c: add     $0x20, %rsp              */
  0x5b,                                     /*60: pop     %rbx                     */
  0x41, 0x5e,                               /*61: pop     %r14                     */
  0x41, 0x5f,                               /*63: pop     %r15                     */
};


static uint8_t op_setglobal[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x7b, 0x58,                   /*0d: mov     +0x58(%rbx), %rdi        */
  0x48, 0x8b, 0x43, 0x10,                   /*11: mov     +0x10(%rbx), %rax        */
  0x48, 0x8b, 0x4b, 0x18,                   /*15: mov     +0x18(%rbx), %rcx        */
  0x8b, 0x00,                               /*19: mov     (%rax), %eax             */
  0x89, 0xc2,                               /*1b: mov     %eax, %edx               */
  0xc1, 0xea, 0x07,                         /*1d: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*20: movzwl  %dx, %edx                */
  0x48, 0x8b, 0x73, 0x28,                   /*23: mov     +0x28(%rbx), %rsi        */
  0x8b, 0x34, 0x96,                         /*27: mov     (%rsi,%rdx,4), %esi      */
  0xc1, 0xe8, 0x17,                         /*2a: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*2d: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*31: mov     (%rcx,%rax,1), %rdx      */
  0x8b, 0x4c, 0x01, 0x08,                   /*35: mov     +0x8(%rcx,%rax,1), %ecx  */
  0xff, 0x93, 0x98, 0x00, 0x00, 0x00,       /*39: callq   +0x98(%rbx)              */
  0x48, 0x89, 0xdf,                         /*3f: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*42: add     $0x10, %rsp              */
  0x5b,                                     /*46: pop     %rbx                     */
};


static uint8_t op_getspecial[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*05: sub     $0x20, %rsp              */
  0x49, 0x89, 0xff,                         /*09: mov     %rdi, %r15               */
  0x4c, 0x89, 0x7c, 0x24, 0x18,             /*0c: mov     %r15, +0x18(%rsp)        */
  0x49, 0x8b, 0x47, 0x10,                   /*11: mov     +0x10(%r15), %rax        */
  0x4d, 0x8b, 0x77, 0x18,                   /*15: mov     +0x18(%r15), %r14        */
  0x8b, 0x00,                               /*19: mov     (%rax), %eax             */
  0x89, 0xc3,                               /*1b: mov     %eax, %ebx               */
  0xc1, 0xeb, 0x17,                         /*1d: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*20: shl     $0x4, %rbx               */
  0x49, 0x8b, 0x7f, 0x58,                   /*24: mov     +0x58(%r15), %rdi        */
  0xc1, 0xe8, 0x07,                         /*28: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xf0,                         /*2b: movzwl  %ax, %esi                */
  0x41, 0xff, 0x97, 0x58, 0x02, 0x00, 0x00, /*2e: callq   +0x258(%r15)             */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*35: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*3a: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*3e: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*43: mov     +0x10(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*48: mov     %rcx, +0x8(%r14,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1e,                   /*4d: mov     %rax, (%r14,%rbx,1)      */
  0x4c, 0x89, 0xff,                         /*51: mov     %r15, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*54: add     $0x20, %rsp              */
  0x5b,                                     /*58: pop     %rbx                     */
  0x41, 0x5e,                               /*59: pop     %r14                     */
  0x41, 0x5f,                               /*5b: pop     %r15                     */
};


static uint8_t op_setspecial[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x7b, 0x58,                   /*0d: mov     +0x58(%rbx), %rdi        */
  0x48, 0x8b, 0x43, 0x10,                   /*11: mov     +0x10(%rbx), %rax        */
  0x48, 0x8b, 0x4b, 0x18,                   /*15: mov     +0x18(%rbx), %rcx        */
  0x8b, 0x00,                               /*19: mov     (%rax), %eax             */
  0x89, 0xc2,                               /*1b: mov     %eax, %edx               */
  0xc1, 0xea, 0x07,                         /*1d: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xf2,                         /*20: movzwl  %dx, %esi                */
  0xc1, 0xe8, 0x17,                         /*23: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*26: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*2a: mov     (%rcx,%rax,1), %rdx      */
  0x8b, 0x4c, 0x01, 0x08,                   /*2e: mov     +0x8(%rcx,%rax,1), %ecx  */
  0xff, 0x93, 0x30, 0x01, 0x00, 0x00,       /*32: callq   +0x130(%rbx)             */
  0x48, 0x89, 0xdf,                         /*38: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*3b: add     $0x10, %rsp              */
  0x5b,                                     /*3f: pop     %rbx                     */
};


static uint8_t op_getiv[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*05: sub     $0x20, %rsp              */
  0x48, 0x89, 0xfb,                         /*09: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x18,             /*0c: mov     %rbx, +0x18(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*11: mov     +0x10(%rbx), %rax        */
  0x4c, 0x8b, 0x73, 0x18,                   /*15: mov     +0x18(%rbx), %r14        */
  0x8b, 0x00,                               /*19: mov     (%rax), %eax             */
  0x41, 0x89, 0xc7,                         /*1b: mov     %eax, %r15d              */
  0x41, 0xc1, 0xef, 0x17,                   /*1e: shr     $0x17, %r15d             */
  0x49, 0xc1, 0xe7, 0x04,                   /*22: shl     $0x4, %r15               */
  0x48, 0x8b, 0x7b, 0x58,                   /*26: mov     +0x58(%rbx), %rdi        */
  0xc1, 0xe8, 0x07,                         /*2a: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*2d: movzwl  %ax, %eax                */
  0x48, 0x8b, 0x4b, 0x28,                   /*30: mov     +0x28(%rbx), %rcx        */
  0x8b, 0x34, 0x81,                         /*34: mov     (%rcx,%rax,4), %esi      */
  0xff, 0x93, 0xc0, 0x00, 0x00, 0x00,       /*37: callq   +0xc0(%rbx)              */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*3d: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*42: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*46: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*4b: mov     +0x10(%rsp), %rcx        */
  0x4b, 0x89, 0x4c, 0x3e, 0x08,             /*50: mov     %rcx, +0x8(%r14,%r15,1)  */
  0x4b, 0x89, 0x04, 0x3e,                   /*55: mov     %rax, (%r14,%r15,1)      */
  0x48, 0x89, 0xdf,                         /*59: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*5c: add     $0x20, %rsp              */
  0x5b,                                     /*60: pop     %rbx                     */
  0x41, 0x5e,                               /*61: pop     %r14                     */
  0x41, 0x5f,                               /*63: pop     %r15                     */
};


static uint8_t op_setiv[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x7b, 0x58,                   /*0d: mov     +0x58(%rbx), %rdi        */
  0x48, 0x8b, 0x43, 0x10,                   /*11: mov     +0x10(%rbx), %rax        */
  0x48, 0x8b, 0x4b, 0x18,                   /*15: mov     +0x18(%rbx), %rcx        */
  0x8b, 0x00,                               /*19: mov     (%rax), %eax             */
  0x89, 0xc2,                               /*1b: mov     %eax, %edx               */
  0xc1, 0xea, 0x07,                         /*1d: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*20: movzwl  %dx, %edx                */
  0x48, 0x8b, 0x73, 0x28,                   /*23: mov     +0x28(%rbx), %rsi        */
  0x8b, 0x34, 0x96,                         /*27: mov     (%rsi,%rdx,4), %esi      */
  0xc1, 0xe8, 0x17,                         /*2a: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*2d: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*31: mov     (%rcx,%rax,1), %rdx      */
  0x8b, 0x4c, 0x01, 0x08,                   /*35: mov     +0x8(%rcx,%rax,1), %ecx  */
  0xff, 0x93, 0x08, 0x02, 0x00, 0x00,       /*39: callq   +0x208(%rbx)             */
  0x48, 0x89, 0xdf,                         /*3f: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*42: add     $0x10, %rsp              */
  0x5b,                                     /*46: pop     %rbx                     */
};


static uint8_t op_getcv[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*05: sub     $0x20, %rsp              */
  0x49, 0x89, 0xff,                         /*09: mov     %rdi, %r15               */
  0x4c, 0x89, 0x7c, 0x24, 0x18,             /*0c: mov     %r15, +0x18(%rsp)        */
  0x49, 0x8b, 0x47, 0x10,                   /*11: mov     +0x10(%r15), %rax        */
  0x49, 0x8b, 0x4f, 0x58,                   /*15: mov     +0x58(%r15), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*19: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*1d: mov     +0x20(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x38,                   /*21: mov     %rax, +0x38(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*25: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*2a: mov     +0x10(%rax), %rcx        */
  0x4c, 0x8b, 0x70, 0x18,                   /*2e: mov     +0x18(%rax), %r14        */
  0x8b, 0x09,                               /*32: mov     (%rcx), %ecx             */
  0x89, 0xcb,                               /*34: mov     %ecx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*36: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*39: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x78, 0x58,                   /*3d: mov     +0x58(%rax), %rdi        */
  0xc1, 0xe9, 0x07,                         /*41: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*44: movzwl  %cx, %ecx                */
  0x48, 0x8b, 0x40, 0x28,                   /*47: mov     +0x28(%rax), %rax        */
  0x8b, 0x34, 0x88,                         /*4b: mov     (%rax,%rcx,4), %esi      */
  0x41, 0xff, 0x97, 0xe0, 0x00, 0x00, 0x00, /*4e: callq   +0xe0(%r15)              */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*55: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*5a: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*5e: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*63: mov     +0x10(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*68: mov     %rcx, +0x8(%r14,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1e,                   /*6d: mov     %rax, (%r14,%rbx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*71: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*76: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*7a: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*7e: mov     +0x20(%rax), %rax        */
  0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*82: movq    $0, +0x38(%rax)          */
  0x4c, 0x89, 0xff,                         /*8a: mov     %r15, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*8d: add     $0x20, %rsp              */
  0x5b,                                     /*91: pop     %rbx                     */
  0x41, 0x5e,                               /*92: pop     %r14                     */
  0x41, 0x5f,                               /*94: pop     %r15                     */
};


static uint8_t op_setcv[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x7b, 0x58,                   /*0d: mov     +0x58(%rbx), %rdi        */
  0x48, 0x8b, 0x43, 0x10,                   /*11: mov     +0x10(%rbx), %rax        */
  0x48, 0x8b, 0x4b, 0x18,                   /*15: mov     +0x18(%rbx), %rcx        */
  0x8b, 0x00,                               /*19: mov     (%rax), %eax             */
  0x89, 0xc2,                               /*1b: mov     %eax, %edx               */
  0xc1, 0xea, 0x07,                         /*1d: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*20: movzwl  %dx, %edx                */
  0x48, 0x8b, 0x73, 0x28,                   /*23: mov     +0x28(%rbx), %rsi        */
  0x8b, 0x34, 0x96,                         /*27: mov     (%rsi,%rdx,4), %esi      */
  0xc1, 0xe8, 0x17,                         /*2a: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*2d: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*31: mov     (%rcx,%rax,1), %rdx      */
  0x8b, 0x4c, 0x01, 0x08,                   /*35: mov     +0x8(%rcx,%rax,1), %ecx  */
  0xff, 0x93, 0x38, 0x02, 0x00, 0x00,       /*39: callq   +0x238(%rbx)             */
  0x48, 0x89, 0xdf,                         /*3f: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*42: add     $0x10, %rsp              */
  0x5b,                                     /*46: pop     %rbx                     */
};


static uint8_t op_getconst[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x30,                   /*01: sub     $0x30, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x28,             /*08: mov     %rbx, +0x28(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x48, 0x8b, 0x4b, 0x58,                   /*11: mov     +0x58(%rbx), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*15: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*19: mov     +0x20(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x38,                   /*1d: mov     %rax, +0x38(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*21: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*26: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x48, 0x10,                   /*2a: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x28,                   /*2e: mov     +0x28(%rax), %rax        */
  0x8b, 0x09,                               /*32: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x07,                         /*34: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*37: movzwl  %cx, %ecx                */
  0x8b, 0x34, 0x88,                         /*3a: mov     (%rax,%rcx,4), %esi      */
  0xff, 0x93, 0x90, 0x00, 0x00, 0x00,       /*3d: callq   +0x90(%rbx)              */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*43: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*48: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*4c: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*51: mov     +0x10(%rsp), %rcx        */
  0x48, 0x89, 0x4c, 0x24, 0x20,             /*56: mov     %rcx, +0x20(%rsp)        */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*5b: mov     %rax, +0x18(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*60: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*65: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*69: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*6d: mov     +0x20(%rax), %rax        */
  0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*71: movq    $0, +0x38(%rax)          */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*79: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*7e: mov     +0x58(%rax), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*82: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x08,                   /*86: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x18,                   /*8a: mov     %rcx, +0x18(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*8e: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*93: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x18,                   /*97: mov     +0x18(%rax), %rax        */
  0x8b, 0x09,                               /*9b: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x17,                         /*9d: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*a0: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x54, 0x24, 0x18,             /*a4: mov     +0x18(%rsp), %rdx        */
  0x48, 0x8b, 0x74, 0x24, 0x20,             /*a9: mov     +0x20(%rsp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x08,             /*ae: mov     %rsi, +0x8(%rax,%rcx,1)  */
  0x48, 0x89, 0x14, 0x08,                   /*b3: mov     %rdx, (%rax,%rcx,1)      */
  0x48, 0x89, 0xdf,                         /*b7: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x30,                   /*ba: add     $0x30, %rsp              */
  0x5b,                                     /*be: pop     %rbx                     */
};


static uint8_t op_setconst[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x7b, 0x58,                   /*0d: mov     +0x58(%rbx), %rdi        */
  0x48, 0x8b, 0x43, 0x10,                   /*11: mov     +0x10(%rbx), %rax        */
  0x48, 0x8b, 0x4b, 0x18,                   /*15: mov     +0x18(%rbx), %rcx        */
  0x8b, 0x00,                               /*19: mov     (%rax), %eax             */
  0x89, 0xc2,                               /*1b: mov     %eax, %edx               */
  0xc1, 0xea, 0x07,                         /*1d: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*20: movzwl  %dx, %edx                */
  0x48, 0x8b, 0x73, 0x28,                   /*23: mov     +0x28(%rbx), %rsi        */
  0x8b, 0x34, 0x96,                         /*27: mov     (%rsi,%rdx,4), %esi      */
  0xc1, 0xe8, 0x17,                         /*2a: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*2d: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*31: mov     (%rcx,%rax,1), %rdx      */
  0x8b, 0x4c, 0x01, 0x08,                   /*35: mov     +0x8(%rcx,%rax,1), %ecx  */
  0xff, 0x93, 0xd8, 0x01, 0x00, 0x00,       /*39: callq   +0x1d8(%rbx)             */
  0x48, 0x89, 0xdf,                         /*3f: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*42: add     $0x10, %rsp              */
  0x5b,                                     /*46: pop     %rbx                     */
};


static uint8_t op_getmcnst[] = {
  0x41, 0x56,                               /*00: push    %r14                     */
  0x53,                                     /*02: push    %rbx                     */
  0x48, 0x83, 0xec, 0x38,                   /*03: sub     $0x38, %rsp              */
  0x49, 0x89, 0xfe,                         /*07: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x30,             /*0a: mov     %r14, +0x30(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*0f: mov     +0x10(%r14), %rax        */
  0x8b, 0x00,                               /*13: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x1c,                   /*18: mov     %eax, +0x1c(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*1c: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*21: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x58,                   /*25: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*29: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*2d: mov     +0x20(%rax), %rax        */
  0x48, 0x89, 0x48, 0x38,                   /*31: mov     %rcx, +0x38(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*35: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*3a: mov     +0x58(%rax), %rdi        */
  0x48, 0x63, 0x54, 0x24, 0x1c,             /*3e: movslq  +0x1c(%rsp), %rdx        */
  0x48, 0x8b, 0x48, 0x10,                   /*43: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x58, 0x18,                   /*47: mov     +0x18(%rax), %rbx        */
  0x48, 0xc1, 0xe2, 0x04,                   /*4b: shl     $0x4, %rdx               */
  0x8b, 0x09,                               /*4f: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x07,                         /*51: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*54: movzwl  %cx, %ecx                */
  0x48, 0x8b, 0x40, 0x28,                   /*57: mov     +0x28(%rax), %rax        */
  0x8b, 0x0c, 0x88,                         /*5b: mov     (%rax,%rcx,4), %ecx      */
  0x48, 0x8b, 0x34, 0x13,                   /*5e: mov     (%rbx,%rdx,1), %rsi      */
  0x8b, 0x54, 0x13, 0x08,                   /*62: mov     +0x8(%rbx,%rdx,1), %edx  */
  0x41, 0xff, 0x96, 0x30, 0x02, 0x00, 0x00, /*66: callq   +0x230(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*6d: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*72: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*76: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*7b: mov     +0x10(%rsp), %rcx        */
  0x48, 0x89, 0x4c, 0x24, 0x28,             /*80: mov     %rcx, +0x28(%rsp)        */
  0x48, 0x89, 0x44, 0x24, 0x20,             /*85: mov     %rax, +0x20(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*8a: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*8f: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*93: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*97: mov     +0x20(%rax), %rax        */
  0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00,/*9b: movq    $0, +0x38(%rax)          */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*a3: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*a8: mov     +0x58(%rax), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*ac: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x08,                   /*b0: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x18,                   /*b4: mov     %rcx, +0x18(%rax)        */
  0x48, 0x63, 0x44, 0x24, 0x1c,             /*b8: movslq  +0x1c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x30,             /*bd: mov     +0x30(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*c2: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*c6: shl     $0x4, %rax               */
  0x48, 0x8b, 0x54, 0x24, 0x20,             /*ca: mov     +0x20(%rsp), %rdx        */
  0x48, 0x8b, 0x74, 0x24, 0x28,             /*cf: mov     +0x28(%rsp), %rsi        */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*d4: mov     %rsi, +0x8(%rcx,%rax,1)  */
  0x48, 0x89, 0x14, 0x01,                   /*d9: mov     %rdx, (%rcx,%rax,1)      */
  0x4c, 0x89, 0xf7,                         /*dd: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x38,                   /*e0: add     $0x38, %rsp              */
  0x5b,                                     /*e4: pop     %rbx                     */
  0x41, 0x5e,                               /*e5: pop     %r14                     */
};


static uint8_t op_setmcnst[] = {
  0x41, 0x56,                               /*00: push    %r14                     */
  0x53,                                     /*02: push    %rbx                     */
  0x48, 0x83, 0xec, 0x18,                   /*03: sub     $0x18, %rsp              */
  0x49, 0x89, 0xfe,                         /*07: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x10,             /*0a: mov     %r14, +0x10(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*0f: mov     +0x10(%r14), %rax        */
  0x8b, 0x00,                               /*13: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x0c,                   /*18: mov     %eax, +0xc(%rsp)         */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*1c: mov     +0x10(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*21: mov     +0x58(%rax), %rdi        */
  0x48, 0x63, 0x5c, 0x24, 0x0c,             /*25: movslq  +0xc(%rsp), %rbx         */
  0x48, 0x8b, 0x48, 0x10,                   /*2a: mov     +0x10(%rax), %rcx        */
  0x4c, 0x8b, 0x48, 0x18,                   /*2e: mov     +0x18(%rax), %r9         */
  0x8b, 0x09,                               /*32: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x07,                         /*34: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*37: movzwl  %cx, %ecx                */
  0x48, 0x8b, 0x40, 0x28,                   /*3a: mov     +0x28(%rax), %rax        */
  0x8b, 0x0c, 0x88,                         /*3e: mov     (%rax,%rcx,4), %ecx      */
  0x48, 0xc1, 0xe3, 0x04,                   /*41: shl     $0x4, %rbx               */
  0x49, 0x8b, 0x74, 0x19, 0x10,             /*45: mov     +0x10(%r9,%rbx,1), %rsi  */
  0x41, 0x8b, 0x54, 0x19, 0x18,             /*4a: mov     +0x18(%r9,%rbx,1), %edx  */
  0x4d, 0x8b, 0x04, 0x19,                   /*4f: mov     (%r9,%rbx,1), %r8        */
  0x45, 0x8b, 0x4c, 0x19, 0x08,             /*53: mov     +0x8(%r9,%rbx,1), %r9d   */
  0x41, 0xff, 0x96, 0x08, 0x01, 0x00, 0x00, /*58: callq   +0x108(%r14)             */
  0x4c, 0x89, 0xf7,                         /*5f: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x18,                   /*62: add     $0x18, %rsp              */
  0x5b,                                     /*66: pop     %rbx                     */
  0x41, 0x5e,                               /*67: pop     %r14                     */
};


static uint8_t op_getupvar[] = {
  0x41, 0x56,                               /*00: push    %r14                     */
  0x53,                                     /*02: push    %rbx                     */
  0x48, 0x83, 0xec, 0x38,                   /*03: sub     $0x38, %rsp              */
  0x48, 0x89, 0xfb,                         /*07: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x30,             /*0a: mov     %rbx, +0x30(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0f: mov     +0x10(%rbx), %rax        */
  0x8b, 0x00,                               /*13: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*18: shl     $0x4, %rax               */
  0x48, 0x03, 0x43, 0x18,                   /*1c: add     +0x18(%rbx), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x28,             /*20: mov     %rax, +0x28(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*25: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*2a: mov     +0x10(%rax), %rax        */
  0x8b, 0x30,                               /*2e: mov     (%rax), %esi             */
  0xc1, 0xee, 0x07,                         /*30: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*33: and     $0x7f, %esi              */
  0x89, 0x74, 0x24, 0x24,                   /*36: mov     %esi, +0x24(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*3a: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*3f: mov     +0x58(%rax), %rdi        */
  0xff, 0x93, 0x98, 0x02, 0x00, 0x00,       /*43: callq   +0x298(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*49: mov     %rax, +0x18(%rsp)        */
  0x48, 0x85, 0xc0,                         /*4e: test    %rax, %rax               */
  0x74, 0x40,                               /*51: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*53: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*58: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*5c: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0e,                         /*5e: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*61: and     $0x1ff, %eax             */
  0x89, 0x44, 0x24, 0x04,                   /*66: mov     %eax, +0x4(%rsp)         */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*6a: mov     +0x28(%rsp), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x04,             /*6f: movslq  +0x4(%rsp), %rcx         */
  0x48, 0x8b, 0x54, 0x24, 0x18,             /*74: mov     +0x18(%rsp), %rdx        */
  0x48, 0x8b, 0x52, 0x18,                   /*79: mov     +0x18(%rdx), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*7d: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x34, 0x0a,                   /*81: mov     (%rdx,%rcx,1), %rsi      */
  0x48, 0x8b, 0x4c, 0x0a, 0x08,             /*85: mov     +0x8(%rdx,%rcx,1), %rcx  */
  0x48, 0x89, 0x48, 0x08,                   /*8a: mov     %rcx, +0x8(%rax)         */
  0x48, 0x89, 0x30,                         /*8e: mov     %rsi, (%rax)             */
  0xeb, 0x25,                               /*91: jmp                              */
  0x4c, 0x8b, 0x74, 0x24, 0x28,             /*93: mov     +0x28(%rsp), %r14        */
  0xff, 0x93, 0xb8, 0x00, 0x00, 0x00,       /*98: callq   +0xb8(%rbx)              */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*9e: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*a3: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*a7: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*ac: mov     +0x10(%rsp), %rcx        */
  0x49, 0x89, 0x4e, 0x08,                   /*b1: mov     %rcx, +0x8(%r14)         */
  0x49, 0x89, 0x06,                         /*b5: mov     %rax, (%r14)             */
  0x48, 0x89, 0xdf,                         /*b8: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x38,                   /*bb: add     $0x38, %rsp              */
  0x5b,                                     /*bf: pop     %rbx                     */
  0x41, 0x5e,                               /*c0: pop     %r14                     */
};


static uint8_t op_setupvar[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x30,                   /*01: sub     $0x30, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x28,             /*08: mov     %rbx, +0x28(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x8b, 0x30,                               /*11: mov     (%rax), %esi             */
  0xc1, 0xee, 0x07,                         /*13: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*16: and     $0x7f, %esi              */
  0x89, 0x74, 0x24, 0x24,                   /*19: mov     %esi, +0x24(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*1d: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*22: mov     +0x58(%rax), %rdi        */
  0xff, 0x93, 0x98, 0x02, 0x00, 0x00,       /*26: callq   +0x298(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*2c: mov     %rax, +0x18(%rsp)        */
  0x48, 0x85, 0xc0,                         /*31: test    %rax, %rax               */
  0x74, 0x6d,                               /*34: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*36: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*3b: mov     +0x10(%rax), %rcx        */
  0x8b, 0x09,                               /*3f: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x17,                         /*41: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*44: shl     $0x4, %rcx               */
  0x48, 0x03, 0x48, 0x18,                   /*48: add     +0x18(%rax), %rcx        */
  0x48, 0x89, 0x4c, 0x24, 0x10,             /*4c: mov     %rcx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*51: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*56: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*5a: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0e,                         /*5c: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*5f: and     $0x1ff, %eax             */
  0x89, 0x44, 0x24, 0x0c,                   /*64: mov     %eax, +0xc(%rsp)         */
  0x48, 0x63, 0x44, 0x24, 0x0c,             /*68: movslq  +0xc(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*6d: mov     +0x18(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*72: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*76: shl     $0x4, %rax               */
  0x48, 0x8b, 0x54, 0x24, 0x10,             /*7a: mov     +0x10(%rsp), %rdx        */
  0x48, 0x8b, 0x32,                         /*7f: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*82: mov     +0x8(%rdx), %rdx         */
  0x48, 0x89, 0x54, 0x01, 0x08,             /*86: mov     %rdx, +0x8(%rcx,%rax,1)  */
  0x48, 0x89, 0x34, 0x01,                   /*8b: mov     %rsi, (%rcx,%rax,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*8f: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*94: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x74, 0x24, 0x18,             /*98: mov     +0x18(%rsp), %rsi        */
  0xff, 0x93, 0x00, 0x01, 0x00, 0x00,       /*9d: callq   +0x100(%rbx)             */
  0x48, 0x89, 0xdf,                         /*a3: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x30,                   /*a6: add     $0x30, %rsp              */
  0x5b,                                     /*aa: pop     %rbx                     */
};


static uint8_t op_jmp[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
  0x48, 0x8b, 0x47, 0x10,                   /*04: mov     +0x10(%rdi), %rax        */
  0x8b, 0x08,                               /*08: mov     (%rax), %ecx             */
  0xc1, 0xe9, 0x07,                         /*0a: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*0d: movzwl  %cx, %ecx                */
  0x81, 0xc1, 0x01, 0x80, 0xff, 0xff,       /*10: add     $0xffff8001, %ecx        */
  0x48, 0x63, 0xc9,                         /*16: movslq  %ecx, %rcx               */
  0x48, 0x8d, 0x04, 0x88,                   /*19: lea     (%rax,%rcx,4), %rax      */
  0x48, 0x89, 0x47, 0x10,                   /*1d: mov     %rax, +0x10(%rdi)        */
};


static uint8_t op_jmpif[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
  0x48, 0x8b, 0x47, 0x10,                   /*04: mov     +0x10(%rdi), %rax        */
  0x48, 0x8b, 0x4f, 0x18,                   /*08: mov     +0x18(%rdi), %rcx        */
  0x8b, 0x00,                               /*0c: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*0e: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*11: shl     $0x4, %rax               */
  0x83, 0x7c, 0x01, 0x08, 0x00,             /*15: cmpl    $0, +0x8(%rcx,%rax,1)    */
  0x74, 0x23,                               /*1a: je                               */
  0x48, 0x8b, 0x04, 0x24,                   /*1c: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x48, 0x10,                   /*20: mov     +0x10(%rax), %rcx        */
  0x8b, 0x11,                               /*24: mov     (%rcx), %edx             */
  0xc1, 0xea, 0x07,                         /*26: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*29: movzwl  %dx, %edx                */
  0x81, 0xc2, 0x01, 0x80, 0xff, 0xff,       /*2c: add     $0xffff8001, %edx        */
  0x48, 0x63, 0xd2,                         /*32: movslq  %edx, %rdx               */
  0x48, 0x8d, 0x0c, 0x91,                   /*35: lea     (%rcx,%rdx,4), %rcx      */
  0x48, 0x89, 0x48, 0x10,                   /*39: mov     %rcx, +0x10(%rax)        */
  0xeb, 0x09,                               /*3d: jmp                              */
  0x48, 0x8b, 0x04, 0x24,                   /*3f: mov     (%rsp), %rax             */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*43: addq    $0x4, +0x10(%rax)        */
};


static uint8_t op_jmpnot[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
  0x48, 0x8b, 0x47, 0x10,                   /*04: mov     +0x10(%rdi), %rax        */
  0x48, 0x8b, 0x4f, 0x18,                   /*08: mov     +0x18(%rdi), %rcx        */
  0x8b, 0x00,                               /*0c: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*0e: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*11: shl     $0x4, %rax               */
  0x83, 0x7c, 0x01, 0x08, 0x00,             /*15: cmpl    $0, +0x8(%rcx,%rax,1)    */
  0x74, 0x0b,                               /*1a: je                               */
  0x48, 0x8b, 0x04, 0x24,                   /*1c: mov     (%rsp), %rax             */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*20: addq    $0x4, +0x10(%rax)        */
  0xeb, 0x21,                               /*25: jmp                              */
  0x48, 0x8b, 0x04, 0x24,                   /*27: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x48, 0x10,                   /*2b: mov     +0x10(%rax), %rcx        */
  0x8b, 0x11,                               /*2f: mov     (%rcx), %edx             */
  0xc1, 0xea, 0x07,                         /*31: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*34: movzwl  %dx, %edx                */
  0x81, 0xc2, 0x01, 0x80, 0xff, 0xff,       /*37: add     $0xffff8001, %edx        */
  0x48, 0x63, 0xd2,                         /*3d: movslq  %edx, %rdx               */
  0x48, 0x8d, 0x0c, 0x91,                   /*40: lea     (%rcx,%rdx,4), %rcx      */
  0x48, 0x89, 0x48, 0x10,                   /*44: mov     %rcx, +0x10(%rax)        */
};


static uint8_t op_onerr[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x43, 0x58,                   /*0d: mov     +0x58(%rbx), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*11: mov     +0x18(%rax), %rax        */
  0x8b, 0x48, 0x40,                         /*15: mov     +0x40(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x20,                   /*18: mov     +0x20(%rax), %rax        */
  0x3b, 0x48, 0x1c,                         /*1c: cmp     +0x1c(%rax), %ecx        */
  0x7f, 0x69,                               /*1f: jg                               */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*21: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*26: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2a: mov     +0x18(%rax), %rax        */
  0x83, 0x78, 0x40, 0x00,                   /*2e: cmpl    $0, +0x40(%rax)          */
  0x74, 0x12,                               /*32: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*34: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*39: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*3d: mov     +0x18(%rax), %rax        */
  0xd1, 0x60, 0x40,                         /*41: shll    +0x40(%rax)              */
  0xeb, 0x14,                               /*44: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*46: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*4b: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*4f: mov     +0x18(%rax), %rax        */
  0xc7, 0x40, 0x40, 0x10, 0x00, 0x00, 0x00, /*53: movl    $0x10, +0x40(%rax)       */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*5a: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x78, 0x58,                   /*5f: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x47, 0x18,                   /*63: mov     +0x18(%rdi), %rax        */
  0x48, 0x8b, 0x70, 0x38,                   /*67: mov     +0x38(%rax), %rsi        */
  0x48, 0x63, 0x50, 0x40,                   /*6b: movslq  +0x40(%rax), %rdx        */
  0x48, 0xc1, 0xe2, 0x03,                   /*6f: shl     $0x3, %rdx               */
  0xff, 0x93, 0x28, 0x01, 0x00, 0x00,       /*73: callq   +0x128(%rbx)             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*79: mov     +0x8(%rsp), %rcx         */
  0x48, 0x8b, 0x49, 0x58,                   /*7e: mov     +0x58(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*82: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x38,                   /*86: mov     %rax, +0x38(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*8a: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x48, 0x10,                   /*8f: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x58,                   /*93: mov     +0x58(%rax), %rax        */
  0x8b, 0x11,                               /*97: mov     (%rcx), %edx             */
  0xc1, 0xea, 0x07,                         /*99: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*9c: movzwl  %dx, %edx                */
  0x81, 0xc2, 0x01, 0x80, 0xff, 0xff,       /*9f: add     $0xffff8001, %edx        */
  0x48, 0x63, 0xd2,                         /*a5: movslq  %edx, %rdx               */
  0x48, 0x8d, 0x0c, 0x91,                   /*a8: lea     (%rcx,%rdx,4), %rcx      */
  0x48, 0x8b, 0x40, 0x18,                   /*ac: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*b0: mov     +0x20(%rax), %rax        */
  0x48, 0x63, 0x50, 0x1c,                   /*b4: movslq  +0x1c(%rax), %rdx        */
  0x8d, 0x72, 0x01,                         /*b8: lea     +0x1(%rdx), %esi         */
  0x89, 0x70, 0x1c,                         /*bb: mov     %esi, +0x1c(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*be: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*c3: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*c7: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x38,                   /*cb: mov     +0x38(%rax), %rax        */
  0x48, 0x89, 0x0c, 0xd0,                   /*cf: mov     %rcx, (%rax,%rdx,8)      */
  0x48, 0x89, 0xdf,                         /*d3: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*d6: add     $0x10, %rsp              */
  0x5b,                                     /*da: pop     %rbx                     */
};


static uint8_t op_rescue[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
  0x48, 0x8b, 0x47, 0x58,                   /*04: mov     +0x58(%rdi), %rax        */
  0x48, 0x8b, 0x40, 0x28,                   /*08: mov     +0x28(%rax), %rax        */
  0x0f, 0xb6, 0x00,                         /*0c: movzbl  (%rax), %eax             */
  0x48, 0x8b, 0x4f, 0x10,                   /*0f: mov     +0x10(%rdi), %rcx        */
  0x48, 0x8b, 0x57, 0x18,                   /*13: mov     +0x18(%rdi), %rdx        */
  0x8b, 0x09,                               /*17: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x17,                         /*19: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*1c: shl     $0x4, %rcx               */
  0x89, 0x44, 0x0a, 0x08,                   /*20: mov     %eax, +0x8(%rdx,%rcx,1)  */
  0x48, 0x8b, 0x04, 0x24,                   /*24: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x48, 0x58,                   /*28: mov     +0x58(%rax), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*2c: mov     +0x28(%rcx), %rcx        */
  0x48, 0x8b, 0x50, 0x10,                   /*30: mov     +0x10(%rax), %rdx        */
  0x48, 0x8b, 0x40, 0x18,                   /*34: mov     +0x18(%rax), %rax        */
  0x8b, 0x12,                               /*38: mov     (%rdx), %edx             */
  0xc1, 0xea, 0x17,                         /*3a: shr     $0x17, %edx              */
  0x48, 0xc1, 0xe2, 0x04,                   /*3d: shl     $0x4, %rdx               */
  0x48, 0x89, 0x0c, 0x10,                   /*41: mov     %rcx, (%rax,%rdx,1)      */
  0x48, 0x8b, 0x04, 0x24,                   /*45: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x40, 0x58,                   /*49: mov     +0x58(%rax), %rax        */
  0x48, 0xc7, 0x40, 0x28, 0x00, 0x00, 0x00, 0x00,/*4d: movq    $0, +0x28(%rax)          */
};


static uint8_t op_poperr[] = {
  0x48, 0x83, 0xec, 0x18,                   /*00: sub     $0x18, %rsp              */
  0x48, 0x89, 0x7c, 0x24, 0x10,             /*04: mov     %rdi, +0x10(%rsp)        */
  0x48, 0x8b, 0x47, 0x10,                   /*09: mov     +0x10(%rdi), %rax        */
  0x8b, 0x00,                               /*0d: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*0f: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x0c,                   /*12: mov     %eax, +0xc(%rsp)         */
  0xeb, 0x1c,                               /*16: jmp                              */
  0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*18: nopl    +0(%rax,%rax,1)          */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*20: mov     +0x10(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*25: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*29: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*2d: mov     +0x20(%rax), %rax        */
  0xff, 0x48, 0x1c,                         /*31: decl    +0x1c(%rax)              */
  0x8b, 0x44, 0x24, 0x0c,                   /*34: mov     +0xc(%rsp), %eax         */
  0x8d, 0x48, 0xff,                         /*38: lea     -0x1(%rax), %ecx         */
  0x89, 0x4c, 0x24, 0x0c,                   /*3b: mov     %ecx, +0xc(%rsp)         */
  0x85, 0xc0,                               /*3f: test    %eax, %eax               */
  0x75, 0xdd,                               /*41: jne                              */
  0x48, 0x83, 0xc4, 0x18,                   /*43: add     $0x18, %rsp              */
};


static uint8_t op_raise[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x48, 0x8b, 0x4b, 0x18,                   /*11: mov     +0x18(%rbx), %rcx        */
  0x8b, 0x00,                               /*15: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*17: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*1a: shl     $0x4, %rax               */
  0x48, 0x8b, 0x04, 0x01,                   /*1e: mov     (%rcx,%rax,1), %rax      */
  0x48, 0x8b, 0x4b, 0x58,                   /*22: mov     +0x58(%rbx), %rcx        */
  0x48, 0x89, 0x41, 0x28,                   /*26: mov     %rax, +0x28(%rcx)        */
  0x48, 0x8b, 0x7c, 0x24, 0x08,             /*2a: mov     +0x8(%rsp), %rdi         */
  0xff, 0x93, 0xd0, 0x01, 0x00, 0x00,       /*2f: callq   +0x1d0(%rbx)             */
  0x48, 0x89, 0xdf,                         /*35: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*38: add     $0x10, %rsp              */
  0x5b,                                     /*3c: pop     %rbx                     */
};


static uint8_t op_epush[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x7b, 0x58,                   /*0d: mov     +0x58(%rbx), %rdi        */
  0x48, 0x8b, 0x43, 0x08,                   /*11: mov     +0x8(%rbx), %rax         */
  0x48, 0x8b, 0x4b, 0x10,                   /*15: mov     +0x10(%rbx), %rcx        */
  0x8b, 0x09,                               /*19: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x07,                         /*1b: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*1e: movzwl  %cx, %ecx                */
  0x48, 0x8b, 0x40, 0x20,                   /*21: mov     +0x20(%rax), %rax        */
  0x48, 0x8b, 0x34, 0xc8,                   /*25: mov     (%rax,%rcx,8), %rsi      */
  0xff, 0x53, 0x70,                         /*29: callq   +0x70(%rbx)              */
  0x48, 0x89, 0x04, 0x24,                   /*2c: mov     %rax, (%rsp)             */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*30: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*35: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*39: mov     +0x18(%rax), %rax        */
  0x8b, 0x48, 0x50,                         /*3d: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x20,                   /*40: mov     +0x20(%rax), %rax        */
  0x3b, 0x48, 0x20,                         /*44: cmp     +0x20(%rax), %ecx        */
  0x7f, 0x69,                               /*47: jg                               */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*49: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*4e: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*52: mov     +0x18(%rax), %rax        */
  0x83, 0x78, 0x50, 0x00,                   /*56: cmpl    $0, +0x50(%rax)          */
  0x74, 0x12,                               /*5a: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*5c: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*61: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*65: mov     +0x18(%rax), %rax        */
  0xd1, 0x60, 0x50,                         /*69: shll    +0x50(%rax)              */
  0xeb, 0x14,                               /*6c: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*6e: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x40, 0x58,                   /*73: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*77: mov     +0x18(%rax), %rax        */
  0xc7, 0x40, 0x50, 0x10, 0x00, 0x00, 0x00, /*7b: movl    $0x10, +0x50(%rax)       */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*82: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x78, 0x58,                   /*87: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x47, 0x18,                   /*8b: mov     +0x18(%rdi), %rax        */
  0x48, 0x8b, 0x70, 0x48,                   /*8f: mov     +0x48(%rax), %rsi        */
  0x48, 0x63, 0x50, 0x50,                   /*93: movslq  +0x50(%rax), %rdx        */
  0x48, 0xc1, 0xe2, 0x03,                   /*97: shl     $0x3, %rdx               */
  0xff, 0x93, 0x28, 0x01, 0x00, 0x00,       /*9b: callq   +0x128(%rbx)             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*a1: mov     +0x8(%rsp), %rcx         */
  0x48, 0x8b, 0x49, 0x58,                   /*a6: mov     +0x58(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*aa: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*ae: mov     %rax, +0x48(%rcx)        */
  0x48, 0x8b, 0x04, 0x24,                   /*b2: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*b6: mov     +0x8(%rsp), %rcx         */
  0x48, 0x8b, 0x49, 0x58,                   /*bb: mov     +0x58(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*bf: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*c3: mov     +0x20(%rcx), %rcx        */
  0x48, 0x63, 0x51, 0x20,                   /*c7: movslq  +0x20(%rcx), %rdx        */
  0x8d, 0x72, 0x01,                         /*cb: lea     +0x1(%rdx), %esi         */
  0x89, 0x71, 0x20,                         /*ce: mov     %esi, +0x20(%rcx)        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*d1: mov     +0x8(%rsp), %rcx         */
  0x48, 0x8b, 0x49, 0x58,                   /*d6: mov     +0x58(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*da: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x48,                   /*de: mov     +0x48(%rcx), %rcx        */
  0x48, 0x89, 0x04, 0xd1,                   /*e2: mov     %rax, (%rcx,%rdx,8)      */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*e6: mov     +0x8(%rsp), %rax         */
  0x8b, 0x48, 0x50,                         /*eb: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*ee: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*f2: mov     %ecx, +0xdc(%rax)        */
  0x48, 0x89, 0xdf,                         /*f8: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*fb: add     $0x10, %rsp              */
  0x5b,                                     /*ff: pop     %rbx                     */
};


static uint8_t op_epop[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*01: sub     $0x20, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x18,             /*08: mov     %rbx, +0x18(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x8b, 0x00,                               /*11: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*13: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x14,                   /*16: mov     %eax, +0x14(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*1a: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*1f: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*23: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*27: mov     +0x20(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*2b: mov     %rax, +0x8(%rsp)         */
  0x8b, 0x40, 0x20,                         /*30: mov     +0x20(%rax), %eax        */
  0x89, 0x04, 0x24,                         /*33: mov     %eax, (%rsp)             */
  0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00,/*36: movl    $0, +0x4(%rsp)           */
  0xeb, 0x2d,                               /*3e: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*40: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*45: mov     +0x58(%rax), %rdi        */
  0x8b, 0x34, 0x24,                         /*49: mov     (%rsp), %esi             */
  0xff, 0xce,                               /*4c: dec     %esi                     */
  0x89, 0x34, 0x24,                         /*4e: mov     %esi, (%rsp)             */
  0xff, 0x93, 0x20, 0x02, 0x00, 0x00,       /*51: callq   +0x220(%rbx)             */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*57: mov     +0x18(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*5c: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*5f: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*63: mov     %ecx, +0xdc(%rax)        */
  0xff, 0x44, 0x24, 0x04,                   /*69: incl    +0x4(%rsp)               */
  0x8b, 0x44, 0x24, 0x04,                   /*6d: mov     +0x4(%rsp), %eax         */
  0x3b, 0x44, 0x24, 0x14,                   /*71: cmp     +0x14(%rsp), %eax        */
  0x7d, 0x19,                               /*75: jge                              */
  0x8b, 0x04, 0x24,                         /*77: mov     (%rsp), %eax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*7a: mov     +0x8(%rsp), %rcx         */
  0x3b, 0x41, 0xd0,                         /*7f: cmp     -0x30(%rcx), %eax        */
  0x0f, 0x9f, 0xc0,                         /*82: setg    %al                      */
  0xeb, 0x0b,                               /*85: jmp                              */
  0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*87: nopw    +0(%rax,%rax,1)          */
  0x31, 0xc0,                               /*90: xor     %eax, %eax               */
  0x84, 0xc0,                               /*92: test    %al, %al                 */
  0x75, 0xaa,                               /*94: jne                              */
  0x48, 0x89, 0xdf,                         /*96: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*99: add     $0x20, %rsp              */
  0x5b,                                     /*9d: pop     %rbx                     */
};


static uint8_t op_send[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x81, 0xec, 0x80, 0x00, 0x00, 0x00, /*01: sub     $0x80, %rsp              */
  0x48, 0x89, 0xfb,                         /*08: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x78,             /*0b: mov     %rbx, +0x78(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*10: mov     +0x10(%rbx), %rax        */
  0x8b, 0x00,                               /*14: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*16: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x74,                   /*19: mov     %eax, +0x74(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*1d: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*22: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*26: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*28: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*2b: and     $0x7f, %eax              */
  0x89, 0x44, 0x24, 0x70,                   /*2e: mov     %eax, +0x70(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*32: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*37: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x28,                   /*3b: mov     +0x28(%rax), %rax        */
  0x8b, 0x09,                               /*3f: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x0e,                         /*41: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*44: and     $0x1ff, %ecx             */
  0x8b, 0x04, 0x88,                         /*4a: mov     (%rax,%rcx,4), %eax      */
  0x89, 0x44, 0x24, 0x34,                   /*4d: mov     %eax, +0x34(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x74,             /*51: movslq  +0x74(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*56: mov     +0x78(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*5b: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*5f: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*63: mov     (%rcx,%rax,1), %rdx      */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*67: mov     +0x8(%rcx,%rax,1), %rax  */
  0x48, 0x89, 0x44, 0x24, 0x50,             /*6c: mov     %rax, +0x50(%rsp)        */
  0x48, 0x89, 0x54, 0x24, 0x48,             /*71: mov     %rdx, +0x48(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*76: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*7b: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*7f: mov     (%rax), %eax             */
  0x83, 0xe0, 0x7f,                         /*81: and     $0x7f, %eax              */
  0x83, 0xf8, 0x21,                         /*84: cmp     $0x21, %eax              */
  0x0f, 0x84, 0x81, 0x00, 0x00, 0x00,       /*87: je                               */
  0x83, 0x7c, 0x24, 0x70, 0x7f,             /*8d: cmpl    $0x7f, +0x70(%rsp)       */
  0x75, 0x36,                               /*92: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x74,             /*94: movslq  +0x74(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*99: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*9d: mov     +0x78(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*a2: mov     +0x18(%rcx), %rcx        */
  0xc7, 0x44, 0x08, 0x28, 0x00, 0x00, 0x00, 0x00,/*a6: movl    $0, +0x28(%rax,%rcx,1)   */
  0x48, 0x63, 0x44, 0x24, 0x74,             /*ae: movslq  +0x74(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*b3: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*b7: mov     +0x78(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*bc: mov     +0x18(%rcx), %rcx        */
  0xc7, 0x44, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00,/*c0: movl    $0, +0x20(%rax,%rcx,1)   */
  0xeb, 0x44,                               /*c8: jmp                              */
  0x48, 0x63, 0x44, 0x24, 0x74,             /*ca: movslq  +0x74(%rsp), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x70,             /*cf: movslq  +0x70(%rsp), %rcx        */
  0x48, 0x01, 0xc1,                         /*d4: add     %rax, %rcx               */
  0x48, 0xc1, 0xe1, 0x04,                   /*d7: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*db: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*e0: mov     +0x18(%rax), %rax        */
  0xc7, 0x44, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00,/*e4: movl    $0, +0x18(%rcx,%rax,1)   */
  0x48, 0x63, 0x44, 0x24, 0x74,             /*ec: movslq  +0x74(%rsp), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x70,             /*f1: movslq  +0x70(%rsp), %rcx        */
  0x48, 0x01, 0xc1,                         /*f6: add     %rax, %rcx               */
  0x48, 0xc1, 0xe1, 0x04,                   /*f9: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*fd: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*102: mov     +0x18(%rax), %rax        */
  0xc7, 0x44, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00,/*106: movl    $0, +0x10(%rcx,%rax,1)   */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*10e: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*113: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x74, 0x24, 0x48,             /*117: mov     +0x48(%rsp), %rsi        */
  0x8b, 0x54, 0x24, 0x50,                   /*11c: mov     +0x50(%rsp), %edx        */
  0xff, 0x93, 0xa0, 0x02, 0x00, 0x00,       /*120: callq   +0x2a0(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x60,             /*126: mov     %rax, +0x60(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*12b: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*130: mov     +0x58(%rax), %rdi        */
  0x8b, 0x54, 0x24, 0x34,                   /*134: mov     +0x34(%rsp), %edx        */
  0x48, 0x8d, 0x74, 0x24, 0x60,             /*138: lea     +0x60(%rsp), %rsi        */
  0xff, 0x93, 0xd0, 0x00, 0x00, 0x00,       /*13d: callq   +0xd0(%rbx)              */
  0x48, 0x89, 0x44, 0x24, 0x68,             /*143: mov     %rax, +0x68(%rsp)        */
  0x48, 0x85, 0xc0,                         /*148: test    %rax, %rax               */
  0x0f, 0x85, 0xe2, 0x00, 0x00, 0x00,       /*14b: jne                              */
  0x8b, 0x7c, 0x24, 0x34,                   /*151: mov     +0x34(%rsp), %edi        */
  0xff, 0x93, 0x50, 0x01, 0x00, 0x00,       /*155: callq   +0x150(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x20,             /*15b: mov     %rax, +0x20(%rsp)        */
  0x89, 0x54, 0x24, 0x28,                   /*160: mov     %edx, +0x28(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*164: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*169: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0xb3, 0xb8, 0x02, 0x00, 0x00, /*16d: mov     +0x2b8(%rbx), %rsi       */
  0xba, 0x0e, 0x00, 0x00, 0x00,             /*174: mov     $0xe, %edx               */
  0xff, 0x93, 0xa8, 0x02, 0x00, 0x00,       /*179: callq   +0x2a8(%rbx)             */
  0x89, 0x44, 0x24, 0x34,                   /*17f: mov     %eax, +0x34(%rsp)        */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*183: mov     +0x78(%rsp), %rcx        */
  0x48, 0x8b, 0x79, 0x58,                   /*188: mov     +0x58(%rcx), %rdi        */
  0x48, 0x8d, 0x74, 0x24, 0x60,             /*18c: lea     +0x60(%rsp), %rsi        */
  0x89, 0xc2,                               /*191: mov     %eax, %edx               */
  0xff, 0x93, 0xd0, 0x00, 0x00, 0x00,       /*193: callq   +0xd0(%rbx)              */
  0x48, 0x89, 0x44, 0x24, 0x68,             /*199: mov     %rax, +0x68(%rsp)        */
  0x83, 0x7c, 0x24, 0x70, 0x7f,             /*19e: cmpl    $0x7f, +0x70(%rsp)       */
  0x75, 0x3a,                               /*1a3: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*1a5: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x18,                   /*1aa: mov     +0x18(%rax), %rcx        */
  0x48, 0x8b, 0x78, 0x58,                   /*1ae: mov     +0x58(%rax), %rdi        */
  0x48, 0x63, 0x44, 0x24, 0x74,             /*1b2: movslq  +0x74(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1b7: shl     $0x4, %rax               */
  0x48, 0x8b, 0x74, 0x08, 0x10,             /*1bb: mov     +0x10(%rax,%rcx,1), %rsi */
  0x8b, 0x54, 0x08, 0x18,                   /*1c0: mov     +0x18(%rax,%rcx,1), %edx */
  0x48, 0x8b, 0x4c, 0x24, 0x20,             /*1c4: mov     +0x20(%rsp), %rcx        */
  0x44, 0x8b, 0x44, 0x24, 0x28,             /*1c9: mov     +0x28(%rsp), %r8d        */
  0xff, 0x93, 0x40, 0x02, 0x00, 0x00,       /*1ce: callq   +0x240(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x10,             /*1d4: mov     %rax, +0x10(%rsp)        */
  0x89, 0x54, 0x24, 0x18,                   /*1d9: mov     %edx, +0x18(%rsp)        */
  0xeb, 0x54,                               /*1dd: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*1df: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1e4: mov     +0x18(%rax), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x74,             /*1e8: movslq  +0x74(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*1ed: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x7c, 0x08, 0x20,             /*1f1: lea     +0x20(%rax,%rcx,1), %rdi */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*1f6: lea     +0x10(%rax,%rcx,1), %rsi */
  0x48, 0x63, 0x54, 0x24, 0x70,             /*1fb: movslq  +0x70(%rsp), %rdx        */
  0x48, 0xff, 0xc2,                         /*200: inc     %rdx                     */
  0x89, 0x54, 0x24, 0x70,                   /*203: mov     %edx, +0x70(%rsp)        */
  0xff, 0x93, 0xa8, 0x00, 0x00, 0x00,       /*207: callq   +0xa8(%rbx)              */
  0x48, 0x63, 0x44, 0x24, 0x74,             /*20d: movslq  +0x74(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*212: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*216: mov     +0x78(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*21b: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x20,             /*21f: mov     +0x20(%rsp), %rdx        */
  0x48, 0x8b, 0x74, 0x24, 0x28,             /*224: mov     +0x28(%rsp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x18,             /*229: mov     %rsi, +0x18(%rax,%rcx,1) */
  0x48, 0x89, 0x54, 0x08, 0x10,             /*22e: mov     %rdx, +0x10(%rax,%rcx,1) */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*233: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*238: mov     +0x58(%rax), %rdi        */
  0xff, 0x93, 0xe8, 0x00, 0x00, 0x00,       /*23c: callq   +0xe8(%rbx)              */
  0x48, 0x89, 0x44, 0x24, 0x58,             /*242: mov     %rax, +0x58(%rsp)        */
  0x8b, 0x4c, 0x24, 0x34,                   /*247: mov     +0x34(%rsp), %ecx        */
  0x89, 0x08,                               /*24b: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*24d: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*252: mov     +0x58(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*257: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*25b: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*260: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*264: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*268: mov     +0x8(%rax), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*26c: mov     +0x58(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*271: mov     %rax, +0x10(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x60,             /*275: mov     +0x60(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*27a: mov     +0x58(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*27f: mov     %rax, +0x48(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*283: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*288: mov     +0x10(%rax), %rax        */
  0x48, 0x83, 0xc0, 0x04,                   /*28c: add     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*290: mov     +0x58(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x30,                   /*295: mov     %rax, +0x30(%rcx)        */
  0x8b, 0x44, 0x24, 0x74,                   /*299: mov     +0x74(%rsp), %eax        */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*29d: mov     +0x58(%rsp), %rcx        */
  0x89, 0x41, 0x44,                         /*2a2: mov     %eax, +0x44(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*2a5: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*2aa: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2ae: mov     +0x18(%rax), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x74,             /*2b2: movslq  +0x74(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*2b7: shl     $0x4, %rcx               */
  0x48, 0x01, 0x48, 0x08,                   /*2bb: add     %rcx, +0x8(%rax)         */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*2bf: mov     +0x68(%rsp), %rax        */
  0x8b, 0x00,                               /*2c4: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*2c6: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*2c9: test    $0x80, %al               */
  0x74, 0x28,                               /*2cb: je                               */
  0x83, 0x7c, 0x24, 0x70, 0x7f,             /*2cd: cmpl    $0x7f, +0x70(%rsp)       */
  0x0f, 0x85, 0xd1, 0x00, 0x00, 0x00,       /*2d2: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*2d8: mov     +0x58(%rsp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*2dd: movl    $0xffffffff, +0x40(%rax) */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*2e4: mov     +0x58(%rsp), %rax        */
  0xc7, 0x40, 0x18, 0x03, 0x00, 0x00, 0x00, /*2e9: movl    $0x3, +0x18(%rax)        */
  0xe9, 0xcf, 0x00, 0x00, 0x00,             /*2f0: jmpq                             */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*2f5: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*2fa: mov     +0x78(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*2ff: mov     +0x58(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*303: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*307: mov     +0x20(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*30b: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*30f: mov     +0x78(%rsp), %rcx        */
  0x48, 0x89, 0x01,                         /*314: mov     %rax, (%rcx)             */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*317: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*31c: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*320: mov     +0x78(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*325: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*329: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*32e: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*332: mov     +0x10(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x20,                   /*336: mov     %rcx, +0x20(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*33a: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*33f: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*343: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x28,                   /*347: mov     %rcx, +0x28(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*34b: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*350: mov     +0x8(%rax), %rax         */
  0x0f, 0xb7, 0x40, 0x02,                   /*354: movzwl  +0x2(%rax), %eax         */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*358: mov     +0x58(%rsp), %rcx        */
  0x89, 0x41, 0x18,                         /*35d: mov     %eax, +0x18(%rcx)        */
  0x83, 0x7c, 0x24, 0x70, 0x7f,             /*360: cmpl    $0x7f, +0x70(%rsp)       */
  0x0f, 0x85, 0x97, 0x01, 0x00, 0x00,       /*365: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*36b: mov     +0x58(%rsp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*370: movl    $0xffffffff, +0x40(%rax) */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*377: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*37c: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x58,                   /*380: mov     +0x58(%rax), %rdi        */
  0x0f, 0xb7, 0x41, 0x02,                   /*384: movzwl  +0x2(%rcx), %eax         */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*388: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*38d: cmp     $0x3, %eax               */
  0x7c, 0x0d,                               /*390: jl                               */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*392: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*397: mov     +0x8(%rax), %rax         */
  0x0f, 0xb7, 0x70, 0x02,                   /*39b: movzwl  +0x2(%rax), %esi         */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*39f: mov     $0x3, %edx               */
  0xe9, 0x7d, 0x01, 0x00, 0x00,             /*3a4: jmpq                             */
  0x8b, 0x44, 0x24, 0x70,                   /*3a9: mov     +0x70(%rsp), %eax        */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*3ad: mov     +0x58(%rsp), %rcx        */
  0x89, 0x41, 0x40,                         /*3b2: mov     %eax, +0x40(%rcx)        */
  0x8b, 0x44, 0x24, 0x70,                   /*3b5: mov     +0x70(%rsp), %eax        */
  0x83, 0xc0, 0x02,                         /*3b9: add     $0x2, %eax               */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*3bc: mov     +0x58(%rsp), %rcx        */
  0x89, 0x41, 0x18,                         /*3c1: mov     %eax, +0x18(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*3c4: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*3c9: mov     +0x78(%rsp), %rcx        */
  0x48, 0x8b, 0x79, 0x58,                   /*3ce: mov     +0x58(%rcx), %rdi        */
  0x48, 0x8b, 0x74, 0x24, 0x48,             /*3d2: mov     +0x48(%rsp), %rsi        */
  0x8b, 0x54, 0x24, 0x50,                   /*3d7: mov     +0x50(%rsp), %edx        */
  0xff, 0x50, 0x18,                         /*3db: callq   +0x18(%rax)              */
  0x48, 0x89, 0x04, 0x24,                   /*3de: mov     %rax, (%rsp)             */
  0x89, 0x54, 0x24, 0x08,                   /*3e2: mov     %edx, +0x8(%rsp)         */
  0x48, 0x8b, 0x04, 0x24,                   /*3e6: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*3ea: mov     +0x8(%rsp), %rcx         */
  0x48, 0x89, 0x4c, 0x24, 0x40,             /*3ef: mov     %rcx, +0x40(%rsp)        */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*3f4: mov     %rax, +0x38(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*3f9: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*3fe: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*402: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*406: mov     +0x8(%rax), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*40a: mov     +0x38(%rsp), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x40,             /*40f: mov     +0x40(%rsp), %rdx        */
  0x48, 0x89, 0x50, 0x08,                   /*414: mov     %rdx, +0x8(%rax)         */
  0x48, 0x89, 0x08,                         /*418: mov     %rcx, (%rax)             */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*41b: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*420: mov     +0x58(%rax), %rdi        */
  0x8b, 0x70, 0x50,                         /*424: mov     +0x50(%rax), %esi        */
  0xff, 0x93, 0x10, 0x01, 0x00, 0x00,       /*427: callq   +0x110(%rbx)             */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*42d: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*432: mov     +0x58(%rax), %rax        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*436: cmpq    $0, +0x28(%rax)          */
  0x74, 0x10,                               /*43b: je                               */
  0x48, 0x8b, 0x7c, 0x24, 0x78,             /*43d: mov     +0x78(%rsp), %rdi        */
  0xff, 0x93, 0xd0, 0x01, 0x00, 0x00,       /*442: callq   +0x1d0(%rbx)             */
  0xe9, 0x05, 0x01, 0x00, 0x00,             /*448: jmpq                             */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*44d: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*452: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*456: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*45a: mov     +0x20(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x58,             /*45e: mov     %rax, +0x58(%rsp)        */
  0x48, 0x83, 0x78, 0x48, 0x00,             /*463: cmpq    $0, +0x48(%rax)          */
  0x75, 0x52,                               /*468: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*46a: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0xb8,                   /*46f: mov     -0x48(%rax), %rax        */
  0x0f, 0xba, 0x20, 0x12,                   /*473: btl     $0x12, (%rax)            */
  0x72, 0x43,                               /*477: jb                               */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*479: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0xb8,                   /*47e: mov     -0x48(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*482: mov     +0x78(%rsp), %rcx        */
  0x48, 0x89, 0x01,                         /*487: mov     %rax, (%rcx)             */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*48a: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x08,                         /*48f: mov     (%rax), %rcx             */
  0x48, 0x8b, 0x49, 0x18,                   /*492: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x08,                   /*496: mov     %rcx, +0x8(%rax)         */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*49a: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*49f: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*4a3: mov     +0x10(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x20,                   /*4a7: mov     %rcx, +0x20(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*4ab: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*4b0: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*4b4: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x28,                   /*4b8: mov     %rcx, +0x28(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*4bc: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*4c1: mov     +0x10(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*4c5: mov     +0x78(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*4ca: mov     +0x58(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*4ce: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*4d2: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*4d6: mov     +0x78(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*4db: mov     %rax, +0x18(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*4df: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x30,                   /*4e4: mov     +0x30(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x78,             /*4e8: mov     +0x78(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*4ed: mov     %rax, +0x10(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*4f1: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*4f6: mov     +0x58(%rax), %rdi        */
  0xff, 0x93, 0x60, 0x01, 0x00, 0x00,       /*4fa: callq   +0x160(%rbx)             */
  0xeb, 0x50,                               /*500: jmp                              */
  0x8b, 0x44, 0x24, 0x70,                   /*502: mov     +0x70(%rsp), %eax        */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*506: mov     +0x58(%rsp), %rcx        */
  0x89, 0x41, 0x40,                         /*50b: mov     %eax, +0x40(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*50e: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*513: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x58,                   /*517: mov     +0x58(%rax), %rdi        */
  0x0f, 0xb7, 0x71, 0x02,                   /*51b: movzwl  +0x2(%rcx), %esi         */
  0x8b, 0x54, 0x24, 0x70,                   /*51f: mov     +0x70(%rsp), %edx        */
  0x83, 0xc2, 0x02,                         /*523: add     $0x2, %edx               */
  0xff, 0x93, 0x40, 0x01, 0x00, 0x00,       /*526: callq   +0x140(%rbx)             */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*52c: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*531: mov     +0x58(%rax), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*535: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x08,                   /*539: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x18,                   /*53d: mov     %rcx, +0x18(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*541: mov     +0x78(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*546: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*54a: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x10,                   /*54e: mov     %rcx, +0x10(%rax)        */
  0x48, 0x89, 0xdf,                         /*552: mov     %rbx, %rdi               */
  0x48, 0x81, 0xc4, 0x80, 0x00, 0x00, 0x00, /*555: add     $0x80, %rsp              */
  0x5b,                                     /*55c: pop     %rbx                     */
};


static uint8_t op_sendb[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0xff, 0x93, 0x68, 0x02, 0x00, 0x00,       /*0d: callq   +0x268(%rbx)             */
  0x48, 0x89, 0xdf,                         /*13: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*16: add     $0x10, %rsp              */
  0x5b,                                     /*1a: pop     %rbx                     */
};


static uint8_t op_fsend[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
};


static uint8_t op_call[] = {
  0x41, 0x56,                               /*00: push    %r14                     */
  0x53,                                     /*02: push    %rbx                     */
  0x48, 0x83, 0xec, 0x48,                   /*03: sub     $0x48, %rsp              */
  0x48, 0x89, 0xfb,                         /*07: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x40,             /*0a: mov     %rbx, +0x40(%rsp)        */
  0x48, 0x8b, 0x43, 0x58,                   /*0f: mov     +0x58(%rbx), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*13: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*17: mov     +0x8(%rax), %rax         */
  0x48, 0x8b, 0x08,                         /*1b: mov     (%rax), %rcx             */
  0x48, 0x8b, 0x40, 0x08,                   /*1e: mov     +0x8(%rax), %rax         */
  0x48, 0x89, 0x44, 0x24, 0x30,             /*22: mov     %rax, +0x30(%rsp)        */
  0x48, 0x89, 0x4c, 0x24, 0x28,             /*27: mov     %rcx, +0x28(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*2c: mov     +0x28(%rsp), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x20,             /*31: mov     %rax, +0x20(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*36: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*3b: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*3f: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*43: mov     +0x20(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*47: mov     %rax, +0x38(%rsp)        */
  0x48, 0x8b, 0x4c, 0x24, 0x20,             /*4c: mov     +0x20(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*51: mov     +0x20(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x48,                   /*55: mov     %rcx, +0x48(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*59: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*5e: mov     +0x38(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*63: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*67: mov     +0x20(%rsp), %rax        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*6c: cmpq    $0, +0x28(%rax)          */
  0x74, 0x50,                               /*71: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*73: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x28,                   /*78: mov     +0x28(%rax), %rax        */
  0x83, 0x78, 0x20, 0x00,                   /*7c: cmpl    $0, +0x20(%rax)          */
  0x74, 0x13,                               /*80: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*82: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x28,                   /*87: mov     +0x28(%rax), %rax        */
  0x8b, 0x40, 0x20,                         /*8b: mov     +0x20(%rax), %eax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*8e: mov     +0x38(%rsp), %rcx        */
  0x89, 0x01,                               /*93: mov     %eax, (%rcx)             */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*95: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x28,                   /*9a: mov     +0x28(%rax), %rax        */
  0x48, 0x83, 0x78, 0x18, 0x00,             /*9e: cmpq    $0, +0x18(%rax)          */
  0x75, 0x1e,                               /*a3: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*a5: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*aa: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*ae: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*b2: mov     +0x8(%rax), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x20,             /*b6: mov     +0x20(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*bb: mov     +0x28(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*bf: mov     %rax, +0x18(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*c3: mov     +0x20(%rsp), %rax        */
  0x8b, 0x00,                               /*c8: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*ca: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*cd: test    $0x80, %al               */
  0x74, 0x6d,                               /*cf: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*d1: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*d6: mov     +0x40(%rsp), %rcx        */
  0x48, 0x8b, 0x79, 0x58,                   /*db: mov     +0x58(%rcx), %rdi        */
  0x48, 0x8b, 0x74, 0x24, 0x28,             /*df: mov     +0x28(%rsp), %rsi        */
  0x8b, 0x54, 0x24, 0x30,                   /*e4: mov     +0x30(%rsp), %edx        */
  0xff, 0x50, 0x18,                         /*e8: callq   +0x18(%rax)              */
  0x48, 0x89, 0x44, 0x24, 0x10,             /*eb: mov     %rax, +0x10(%rsp)        */
  0x89, 0x54, 0x24, 0x18,                   /*f0: mov     %edx, +0x18(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*f4: mov     +0x10(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*f9: mov     +0x18(%rsp), %rcx        */
  0x48, 0x89, 0x4c, 0x24, 0x30,             /*fe: mov     %rcx, +0x30(%rsp)        */
  0x48, 0x89, 0x44, 0x24, 0x28,             /*103: mov     %rax, +0x28(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*108: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*10d: mov     +0x58(%rax), %rdi        */
  0x8b, 0x70, 0x50,                         /*111: mov     +0x50(%rax), %esi        */
  0xff, 0x93, 0x10, 0x01, 0x00, 0x00,       /*114: callq   +0x110(%rbx)             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*11a: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*11f: mov     +0x58(%rax), %rax        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*123: cmpq    $0, +0x28(%rax)          */
  0x0f, 0x84, 0xa6, 0x00, 0x00, 0x00,       /*128: je                               */
  0x48, 0x8b, 0x7c, 0x24, 0x40,             /*12e: mov     +0x40(%rsp), %rdi        */
  0xff, 0x93, 0xd0, 0x01, 0x00, 0x00,       /*133: callq   +0x1d0(%rbx)             */
  0xe9, 0x11, 0x02, 0x00, 0x00,             /*139: jmpq                             */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*13e: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*143: mov     +0x40(%rsp), %rcx        */
  0x48, 0x89, 0x01,                         /*148: mov     %rax, (%rcx)             */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*14b: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*150: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*154: mov     +0x40(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*159: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*15d: mov     +0x40(%rsp), %rax        */
  0x48, 0x83, 0x78, 0x08, 0x00,             /*162: cmpq    $0, +0x8(%rax)           */
  0x0f, 0x84, 0x29, 0x01, 0x00, 0x00,       /*167: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*16d: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*172: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*176: mov     +0x10(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x20,                   /*17a: mov     %rcx, +0x20(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*17e: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*183: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*187: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x28,                   /*18b: mov     %rcx, +0x28(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*18f: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*194: mov     +0x8(%rax), %rax         */
  0x0f, 0xb7, 0x40, 0x02,                   /*198: movzwl  +0x2(%rax), %eax         */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*19c: mov     +0x38(%rsp), %rcx        */
  0x89, 0x41, 0x18,                         /*1a1: mov     %eax, +0x18(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*1a4: mov     +0x38(%rsp), %rax        */
  0x83, 0x78, 0x40, 0x00,                   /*1a9: cmpl    $0, +0x40(%rax)          */
  0x0f, 0x88, 0x1f, 0x01, 0x00, 0x00,       /*1ad: js                               */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*1b3: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*1b8: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x58,                   /*1bc: mov     +0x58(%rax), %rdi        */
  0x0f, 0xb7, 0x71, 0x02,                   /*1c0: movzwl  +0x2(%rcx), %esi         */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*1c4: mov     +0x38(%rsp), %rax        */
  0x8b, 0x50, 0x40,                         /*1c9: mov     +0x40(%rax), %edx        */
  0x83, 0xc2, 0x02,                         /*1cc: add     $0x2, %edx               */
  0xe9, 0x2b, 0x01, 0x00, 0x00,             /*1cf: jmpq                             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*1d4: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*1d9: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1dd: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*1e1: mov     +0x20(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*1e5: mov     %rax, +0x38(%rsp)        */
  0x48, 0x8b, 0x40, 0x10,                   /*1ea: mov     +0x10(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*1ee: mov     +0x40(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*1f3: mov     +0x58(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*1f7: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*1fb: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*1ff: mov     +0x40(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*204: mov     %rax, +0x18(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*208: mov     +0x38(%rsp), %rax        */
  0x48, 0x63, 0x40, 0x44,                   /*20d: movslq  +0x44(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*211: mov     +0x40(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*216: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*21a: shl     $0x4, %rax               */
  0x48, 0x8b, 0x54, 0x24, 0x28,             /*21e: mov     +0x28(%rsp), %rdx        */
  0x48, 0x8b, 0x74, 0x24, 0x30,             /*223: mov     +0x30(%rsp), %rsi        */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*228: mov     %rsi, +0x8(%rcx,%rax,1)  */
  0x48, 0x89, 0x14, 0x01,                   /*22d: mov     %rdx, (%rcx,%rax,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*231: mov     +0x38(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x30,                   /*236: mov     +0x30(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*23a: mov     +0x40(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*23f: mov     %rax, +0x10(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*243: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*248: mov     +0x58(%rax), %rdi        */
  0xff, 0x93, 0x60, 0x01, 0x00, 0x00,       /*24c: callq   +0x160(%rbx)             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*252: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*257: mov     +0x58(%rax), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*25b: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*25f: mov     +0x20(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x08,                   /*263: mov     +0x8(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*267: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x08,                   /*26b: mov     %rcx, +0x8(%rax)         */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*26f: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*274: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*278: mov     +0x10(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x20,                   /*27c: mov     %rcx, +0x20(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*280: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*285: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*289: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x28,                   /*28d: mov     %rcx, +0x28(%rax)        */
  0xe9, 0xb9, 0x00, 0x00, 0x00,             /*291: jmpq                             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*296: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*29b: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*29f: mov     +0x18(%rax), %rax        */
  0x4c, 0x8b, 0x70, 0x08,                   /*2a3: mov     +0x8(%rax), %r14         */
  0xff, 0x93, 0xb8, 0x00, 0x00, 0x00,       /*2a7: callq   +0xb8(%rbx)              */
  0x48, 0x89, 0x04, 0x24,                   /*2ad: mov     %rax, (%rsp)             */
  0x89, 0x54, 0x24, 0x08,                   /*2b1: mov     %edx, +0x8(%rsp)         */
  0x48, 0x8b, 0x04, 0x24,                   /*2b5: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*2b9: mov     +0x8(%rsp), %rcx         */
  0x49, 0x89, 0x4e, 0x08,                   /*2be: mov     %rcx, +0x8(%r14)         */
  0x49, 0x89, 0x06,                         /*2c2: mov     %rax, (%r14)             */
  0x48, 0x8b, 0x7c, 0x24, 0x40,             /*2c5: mov     +0x40(%rsp), %rdi        */
  0xff, 0x93, 0x88, 0x00, 0x00, 0x00,       /*2ca: callq   +0x88(%rbx)              */
  0xeb, 0x7d,                               /*2d0: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*2d2: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*2d7: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x58,                   /*2db: mov     +0x58(%rax), %rdi        */
  0x0f, 0xb7, 0x41, 0x02,                   /*2df: movzwl  +0x2(%rcx), %eax         */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*2e3: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*2e8: cmp     $0x3, %eax               */
  0x7c, 0x0d,                               /*2eb: jl                               */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*2ed: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*2f2: mov     +0x8(%rax), %rax         */
  0x0f, 0xb7, 0x70, 0x02,                   /*2f6: movzwl  +0x2(%rax), %esi         */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*2fa: mov     $0x3, %edx               */
  0xff, 0x93, 0x40, 0x01, 0x00, 0x00,       /*2ff: callq   +0x140(%rbx)             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*305: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*30a: mov     +0x58(%rax), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*30e: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x08,                   /*312: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x18,                   /*316: mov     %rcx, +0x18(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*31a: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*31f: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x20,             /*323: mov     +0x20(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*328: mov     +0x28(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*32c: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x11,                         /*330: mov     (%rcx), %rdx             */
  0x48, 0x8b, 0x49, 0x08,                   /*333: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x08,                   /*337: mov     %rcx, +0x8(%rax)         */
  0x48, 0x89, 0x10,                         /*33b: mov     %rdx, (%rax)             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*33e: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*343: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*347: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x10,                   /*34b: mov     %rcx, +0x10(%rax)        */
  0x48, 0x89, 0xdf,                         /*34f: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x48,                   /*352: add     $0x48, %rsp              */
  0x5b,                                     /*356: pop     %rbx                     */
  0x41, 0x5e,                               /*357: pop     %r14                     */
};


static uint8_t op_super[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x41, 0x55,                               /*04: push    %r13                     */
  0x41, 0x54,                               /*06: push    %r12                     */
  0x53,                                     /*08: push    %rbx                     */
  0x48, 0x83, 0xec, 0x70,                   /*09: sub     $0x70, %rsp              */
  0x49, 0x89, 0xfd,                         /*0d: mov     %rdi, %r13               */
  0x4c, 0x89, 0x6c, 0x24, 0x68,             /*10: mov     %r13, +0x68(%rsp)        */
  0x49, 0x8b, 0x45, 0x58,                   /*15: mov     +0x58(%r13), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*19: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*1d: mov     +0x20(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x50,             /*21: mov     %rax, +0x50(%rsp)        */
  0x8b, 0x00,                               /*26: mov     (%rax), %eax             */
  0x89, 0x44, 0x24, 0x3c,                   /*28: mov     %eax, +0x3c(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*2c: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*31: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*35: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*37: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x38,                   /*3a: mov     %eax, +0x38(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*3e: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*43: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*47: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*49: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*4c: and     $0x7f, %eax              */
  0x89, 0x44, 0x24, 0x34,                   /*4f: mov     %eax, +0x34(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*53: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*58: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x08,                         /*5c: mov     (%rax), %rcx             */
  0x48, 0x8b, 0x40, 0x08,                   /*5f: mov     +0x8(%rax), %rax         */
  0x48, 0x89, 0x44, 0x24, 0x60,             /*63: mov     %rax, +0x60(%rsp)        */
  0x48, 0x89, 0x4c, 0x24, 0x58,             /*68: mov     %rcx, +0x58(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*6d: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*72: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*76: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*7a: mov     +0x20(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x48,                   /*7e: mov     +0x48(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x28,                   /*82: mov     +0x28(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x40,             /*86: mov     %rax, +0x40(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*8b: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*90: mov     +0x58(%rax), %rdi        */
  0x8b, 0x54, 0x24, 0x3c,                   /*94: mov     +0x3c(%rsp), %edx        */
  0x48, 0x8d, 0x74, 0x24, 0x40,             /*98: lea     +0x40(%rsp), %rsi        */
  0x41, 0xff, 0x95, 0xd0, 0x00, 0x00, 0x00, /*9d: callq   +0xd0(%r13)              */
  0x48, 0x89, 0x44, 0x24, 0x48,             /*a4: mov     %rax, +0x48(%rsp)        */
  0x48, 0x85, 0xc0,                         /*a9: test    %rax, %rax               */
  0x0f, 0x85, 0xfe, 0x00, 0x00, 0x00,       /*ac: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*b2: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*b7: mov     +0x58(%rax), %rdi        */
  0x49, 0x8b, 0xb5, 0xb8, 0x02, 0x00, 0x00, /*bb: mov     +0x2b8(%r13), %rsi       */
  0xba, 0x0e, 0x00, 0x00, 0x00,             /*c2: mov     $0xe, %edx               */
  0x41, 0xff, 0x95, 0xa8, 0x02, 0x00, 0x00, /*c7: callq   +0x2a8(%r13)             */
  0x89, 0x44, 0x24, 0x3c,                   /*ce: mov     %eax, +0x3c(%rsp)        */
  0x48, 0x8b, 0x4c, 0x24, 0x68,             /*d2: mov     +0x68(%rsp), %rcx        */
  0x48, 0x8b, 0x79, 0x58,                   /*d7: mov     +0x58(%rcx), %rdi        */
  0x48, 0x8d, 0x74, 0x24, 0x40,             /*db: lea     +0x40(%rsp), %rsi        */
  0x89, 0xc2,                               /*e0: mov     %eax, %edx               */
  0x41, 0xff, 0x95, 0xd0, 0x00, 0x00, 0x00, /*e2: callq   +0xd0(%r13)              */
  0x48, 0x89, 0x44, 0x24, 0x48,             /*e9: mov     %rax, +0x48(%rsp)        */
  0x83, 0x7c, 0x24, 0x34, 0x7f,             /*ee: cmpl    $0x7f, +0x34(%rsp)       */
  0x75, 0x55,                               /*f3: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*f5: mov     +0x68(%rsp), %rax        */
  0x4c, 0x8b, 0x78, 0x18,                   /*fa: mov     +0x18(%rax), %r15        */
  0x4c, 0x8b, 0x70, 0x58,                   /*fe: mov     +0x58(%rax), %r14        */
  0x4c, 0x63, 0x64, 0x24, 0x38,             /*102: movslq  +0x38(%rsp), %r12        */
  0x49, 0xc1, 0xe4, 0x04,                   /*107: shl     $0x4, %r12               */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*10b: mov     +0x50(%rsp), %rax        */
  0x8b, 0x38,                               /*110: mov     (%rax), %edi             */
  0x41, 0xff, 0x95, 0x50, 0x01, 0x00, 0x00, /*112: callq   +0x150(%r13)             */
  0x41, 0x89, 0xd0,                         /*119: mov     %edx, %r8d               */
  0x48, 0x89, 0x44, 0x24, 0x20,             /*11c: mov     %rax, +0x20(%rsp)        */
  0x44, 0x89, 0x44, 0x24, 0x28,             /*121: mov     %r8d, +0x28(%rsp)        */
  0x4b, 0x8b, 0x74, 0x3c, 0x10,             /*126: mov     +0x10(%r12,%r15,1), %rsi */
  0x43, 0x8b, 0x54, 0x3c, 0x18,             /*12b: mov     +0x18(%r12,%r15,1), %edx */
  0x48, 0x8b, 0x4c, 0x24, 0x20,             /*130: mov     +0x20(%rsp), %rcx        */
  0x4c, 0x89, 0xf7,                         /*135: mov     %r14, %rdi               */
  0x41, 0xff, 0x95, 0x40, 0x02, 0x00, 0x00, /*138: callq   +0x240(%r13)             */
  0x48, 0x89, 0x44, 0x24, 0x10,             /*13f: mov     %rax, +0x10(%rsp)        */
  0x89, 0x54, 0x24, 0x18,                   /*144: mov     %edx, +0x18(%rsp)        */
  0xeb, 0x66,                               /*148: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*14a: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*14f: mov     +0x18(%rax), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x38,             /*153: movslq  +0x38(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*158: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x7c, 0x08, 0x20,             /*15c: lea     +0x20(%rax,%rcx,1), %rdi */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*161: lea     +0x10(%rax,%rcx,1), %rsi */
  0x48, 0x63, 0x54, 0x24, 0x34,             /*166: movslq  +0x34(%rsp), %rdx        */
  0x48, 0xff, 0xc2,                         /*16b: inc     %rdx                     */
  0x89, 0x54, 0x24, 0x34,                   /*16e: mov     %edx, +0x34(%rsp)        */
  0x41, 0xff, 0x95, 0xa8, 0x00, 0x00, 0x00, /*172: callq   +0xa8(%r13)              */
  0x48, 0x63, 0x44, 0x24, 0x38,             /*179: movslq  +0x38(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*17e: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x68,             /*182: mov     +0x68(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*187: mov     +0x18(%rcx), %rcx        */
  0xc7, 0x44, 0x08, 0x18, 0x04, 0x00, 0x00, 0x00,/*18b: movl    $0x4, +0x18(%rax,%rcx,1) */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*193: mov     +0x50(%rsp), %rax        */
  0x8b, 0x00,                               /*198: mov     (%rax), %eax             */
  0x48, 0x63, 0x4c, 0x24, 0x38,             /*19a: movslq  +0x38(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*19f: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x54, 0x24, 0x68,             /*1a3: mov     +0x68(%rsp), %rdx        */
  0x48, 0x8b, 0x52, 0x18,                   /*1a8: mov     +0x18(%rdx), %rdx        */
  0x89, 0x44, 0x11, 0x10,                   /*1ac: mov     %eax, +0x10(%rcx,%rdx,1) */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*1b0: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*1b5: mov     +0x58(%rax), %rdi        */
  0x41, 0xff, 0x95, 0xe8, 0x00, 0x00, 0x00, /*1b9: callq   +0xe8(%r13)              */
  0x48, 0x89, 0x44, 0x24, 0x50,             /*1c0: mov     %rax, +0x50(%rsp)        */
  0x8b, 0x4c, 0x24, 0x3c,                   /*1c5: mov     +0x3c(%rsp), %ecx        */
  0x89, 0x08,                               /*1c9: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*1cb: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*1d0: mov     +0x50(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*1d5: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*1d9: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*1de: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1e2: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*1e6: mov     +0x8(%rax), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*1ea: mov     +0x50(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*1ef: mov     %rax, +0x10(%rcx)        */
  0x83, 0x7c, 0x24, 0x34, 0x7f,             /*1f3: cmpl    $0x7f, +0x34(%rsp)       */
  0x75, 0x0e,                               /*1f8: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*1fa: mov     +0x50(%rsp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*1ff: movl    $0xffffffff, +0x40(%rax) */
  0xeb, 0x0c,                               /*206: jmp                              */
  0x8b, 0x44, 0x24, 0x34,                   /*208: mov     +0x34(%rsp), %eax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*20c: mov     +0x50(%rsp), %rcx        */
  0x89, 0x41, 0x40,                         /*211: mov     %eax, +0x40(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*214: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*219: mov     +0x50(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*21e: mov     %rax, +0x48(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*222: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*227: mov     +0x10(%rax), %rax        */
  0x48, 0x83, 0xc0, 0x04,                   /*22b: add     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*22f: mov     +0x50(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x30,                   /*234: mov     %rax, +0x30(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*238: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*23d: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*241: mov     +0x18(%rax), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x38,             /*245: movslq  +0x38(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*24a: shl     $0x4, %rcx               */
  0x48, 0x01, 0x48, 0x08,                   /*24e: add     %rcx, +0x8(%rax)         */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*252: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*257: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*25b: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*25f: mov     +0x8(%rax), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*263: mov     +0x58(%rsp), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x60,             /*268: mov     +0x60(%rsp), %rdx        */
  0x48, 0x89, 0x50, 0x08,                   /*26d: mov     %rdx, +0x8(%rax)         */
  0x48, 0x89, 0x08,                         /*271: mov     %rcx, (%rax)             */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*274: mov     +0x48(%rsp), %rax        */
  0x8b, 0x00,                               /*279: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*27b: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*27e: test    $0x80, %al               */
  0x74, 0x1c,                               /*280: je                               */
  0x83, 0x7c, 0x24, 0x34, 0x7f,             /*282: cmpl    $0x7f, +0x34(%rsp)       */
  0x0f, 0x85, 0xb1, 0x00, 0x00, 0x00,       /*287: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*28d: mov     +0x50(%rsp), %rax        */
  0xc7, 0x40, 0x18, 0x03, 0x00, 0x00, 0x00, /*292: movl    $0x3, +0x18(%rax)        */
  0xe9, 0xaf, 0x00, 0x00, 0x00,             /*299: jmpq                             */
  0x8b, 0x44, 0x24, 0x38,                   /*29e: mov     +0x38(%rsp), %eax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*2a2: mov     +0x50(%rsp), %rcx        */
  0x89, 0x41, 0x44,                         /*2a7: mov     %eax, +0x44(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*2aa: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*2af: mov     +0x50(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*2b4: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*2b8: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2bd: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x68,             /*2c1: mov     +0x68(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*2c6: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*2ca: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*2cf: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*2d3: mov     +0x10(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x20,                   /*2d7: mov     %rcx, +0x20(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*2db: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*2e0: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*2e4: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x28,                   /*2e8: mov     %rcx, +0x28(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*2ec: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*2f1: mov     +0x8(%rax), %rax         */
  0x0f, 0xb7, 0x40, 0x02,                   /*2f5: movzwl  +0x2(%rax), %eax         */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*2f9: mov     +0x50(%rsp), %rcx        */
  0x89, 0x41, 0x18,                         /*2fe: mov     %eax, +0x18(%rcx)        */
  0x83, 0x7c, 0x24, 0x34, 0x7f,             /*301: cmpl    $0x7f, +0x34(%rsp)       */
  0x0f, 0x85, 0xed, 0x00, 0x00, 0x00,       /*306: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*30c: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*311: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x58,                   /*315: mov     +0x58(%rax), %rdi        */
  0x0f, 0xb7, 0x41, 0x02,                   /*319: movzwl  +0x2(%rcx), %eax         */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*31d: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*322: cmp     $0x3, %eax               */
  0x7c, 0x0d,                               /*325: jl                               */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*327: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*32c: mov     +0x8(%rax), %rax         */
  0x0f, 0xb7, 0x70, 0x02,                   /*330: movzwl  +0x2(%rax), %esi         */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*334: mov     $0x3, %edx               */
  0xe9, 0xd7, 0x00, 0x00, 0x00,             /*339: jmpq                             */
  0x8b, 0x44, 0x24, 0x34,                   /*33e: mov     +0x34(%rsp), %eax        */
  0x83, 0xc0, 0x02,                         /*342: add     $0x2, %eax               */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*345: mov     +0x50(%rsp), %rcx        */
  0x89, 0x41, 0x18,                         /*34a: mov     %eax, +0x18(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*34d: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*352: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x47, 0x18,                   /*356: mov     +0x18(%rdi), %rax        */
  0x48, 0x8b, 0x58, 0x08,                   /*35a: mov     +0x8(%rax), %rbx         */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*35e: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x74, 0x24, 0x58,             /*363: mov     +0x58(%rsp), %rsi        */
  0x8b, 0x54, 0x24, 0x60,                   /*368: mov     +0x60(%rsp), %edx        */
  0xff, 0x50, 0x18,                         /*36c: callq   +0x18(%rax)              */
  0x48, 0x89, 0x04, 0x24,                   /*36f: mov     %rax, (%rsp)             */
  0x89, 0x54, 0x24, 0x08,                   /*373: mov     %edx, +0x8(%rsp)         */
  0x48, 0x8b, 0x04, 0x24,                   /*377: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*37b: mov     +0x8(%rsp), %rcx         */
  0x48, 0x89, 0x4b, 0x08,                   /*380: mov     %rcx, +0x8(%rbx)         */
  0x48, 0x89, 0x03,                         /*384: mov     %rax, (%rbx)             */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*387: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*38c: mov     +0x58(%rax), %rdi        */
  0x8b, 0x70, 0x50,                         /*390: mov     +0x50(%rax), %esi        */
  0x41, 0xff, 0x95, 0x10, 0x01, 0x00, 0x00, /*393: callq   +0x110(%r13)             */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*39a: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*39f: mov     +0x58(%rax), %rax        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*3a3: cmpq    $0, +0x28(%rax)          */
  0x74, 0x11,                               /*3a8: je                               */
  0x48, 0x8b, 0x7c, 0x24, 0x68,             /*3aa: mov     +0x68(%rsp), %rdi        */
  0x41, 0xff, 0x95, 0xd0, 0x01, 0x00, 0x00, /*3af: callq   +0x1d0(%r13)             */
  0xe9, 0x87, 0x00, 0x00, 0x00,             /*3b6: jmpq                             */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*3bb: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*3c0: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*3c4: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x48, 0x20,                   /*3c8: mov     +0x20(%rax), %rcx        */
  0x48, 0x8b, 0x49, 0x10,                   /*3cc: mov     +0x10(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x08,                   /*3d0: mov     %rcx, +0x8(%rax)         */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*3d4: mov     +0x68(%rsp), %rax        */
  0x48, 0x89, 0x48, 0x18,                   /*3d9: mov     %rcx, +0x18(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*3dd: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*3e2: mov     +0x58(%rax), %rdi        */
  0x41, 0xff, 0x95, 0x60, 0x01, 0x00, 0x00, /*3e6: callq   +0x160(%r13)             */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*3ed: mov     +0x68(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*3f2: addq    $0x4, +0x10(%rax)        */
  0xeb, 0x49,                               /*3f7: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*3f9: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*3fe: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x58,                   /*402: mov     +0x58(%rax), %rdi        */
  0x0f, 0xb7, 0x71, 0x02,                   /*406: movzwl  +0x2(%rcx), %esi         */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*40a: mov     +0x50(%rsp), %rax        */
  0x8b, 0x50, 0x40,                         /*40f: mov     +0x40(%rax), %edx        */
  0x83, 0xc2, 0x02,                         /*412: add     $0x2, %edx               */
  0x41, 0xff, 0x95, 0x40, 0x01, 0x00, 0x00, /*415: callq   +0x140(%r13)             */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*41c: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*421: mov     +0x58(%rax), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*425: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x08,                   /*429: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x18,                   /*42d: mov     %rcx, +0x18(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*431: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*436: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*43a: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x10,                   /*43e: mov     %rcx, +0x10(%rax)        */
  0x4c, 0x89, 0xef,                         /*442: mov     %r13, %rdi               */
  0x48, 0x83, 0xc4, 0x70,                   /*445: add     $0x70, %rsp              */
  0x5b,                                     /*449: pop     %rbx                     */
  0x41, 0x5c,                               /*44a: pop     %r12                     */
  0x41, 0x5d,                               /*44c: pop     %r13                     */
  0x41, 0x5e,                               /*44e: pop     %r14                     */
  0x41, 0x5f,                               /*450: pop     %r15                     */
};


static uint8_t op_argary[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x41, 0x54,                               /*04: push    %r12                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x81, 0xec, 0xa8, 0x00, 0x00, 0x00, /*07: sub     $0xa8, %rsp              */
  0x49, 0x89, 0xfc,                         /*0e: mov     %rdi, %r12               */
  0x4c, 0x89, 0xa4, 0x24, 0xa0, 0x00, 0x00, 0x00,/*11: mov     %r12, +0xa0(%rsp)        */
  0x49, 0x8b, 0x44, 0x24, 0x10,             /*19: mov     +0x10(%r12), %rax        */
  0x8b, 0x00,                               /*1e: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*20: shr     $0x17, %eax              */
  0x89, 0x84, 0x24, 0x9c, 0x00, 0x00, 0x00, /*23: mov     %eax, +0x9c(%rsp)        */
  0x48, 0x8b, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00,/*2a: mov     +0xa0(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*32: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*36: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*38: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*3b: movzwl  %ax, %eax                */
  0x89, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00, /*3e: mov     %eax, +0x98(%rsp)        */
  0xc1, 0xe8, 0x0a,                         /*45: shr     $0xa, %eax               */
  0x89, 0x84, 0x24, 0x94, 0x00, 0x00, 0x00, /*48: mov     %eax, +0x94(%rsp)        */
  0x8b, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00, /*4f: mov     +0x98(%rsp), %eax        */
  0xc1, 0xe8, 0x09,                         /*56: shr     $0x9, %eax               */
  0x83, 0xe0, 0x01,                         /*59: and     $0x1, %eax               */
  0x89, 0x84, 0x24, 0x90, 0x00, 0x00, 0x00, /*5c: mov     %eax, +0x90(%rsp)        */
  0x8b, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00, /*63: mov     +0x98(%rsp), %eax        */
  0xc1, 0xe8, 0x04,                         /*6a: shr     $0x4, %eax               */
  0x83, 0xe0, 0x1f,                         /*6d: and     $0x1f, %eax              */
  0x89, 0x84, 0x24, 0x8c, 0x00, 0x00, 0x00, /*70: mov     %eax, +0x8c(%rsp)        */
  0x8b, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00, /*77: mov     +0x98(%rsp), %eax        */
  0x83, 0xe0, 0x0f,                         /*7e: and     $0xf, %eax               */
  0x89, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00, /*81: mov     %eax, +0x88(%rsp)        */
  0x74, 0x32,                               /*88: je                               */
  0x48, 0x8b, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00,/*8a: mov     +0xa0(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*92: mov     +0x58(%rax), %rdi        */
  0x8b, 0xb4, 0x24, 0x88, 0x00, 0x00, 0x00, /*96: mov     +0x88(%rsp), %esi        */
  0xff, 0xce,                               /*9d: dec     %esi                     */
  0x41, 0xff, 0x94, 0x24, 0x98, 0x02, 0x00, 0x00,/*9f: callq   +0x298(%r12)             */
  0x48, 0x89, 0x44, 0x24, 0x78,             /*a7: mov     %rax, +0x78(%rsp)        */
  0x48, 0x85, 0xc0,                         /*ac: test    %rax, %rax               */
  0x0f, 0x84, 0x8e, 0x02, 0x00, 0x00,       /*af: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x78,             /*b5: mov     +0x78(%rsp), %rax        */
  0xeb, 0x08,                               /*ba: jmp                              */
  0x48, 0x8b, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00,/*bc: mov     +0xa0(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*c4: mov     +0x18(%rax), %rax        */
  0x48, 0x83, 0xc0, 0x10,                   /*c8: add     $0x10, %rax              */
  0x48, 0x89, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,/*cc: mov     %rax, +0x80(%rsp)        */
  0x83, 0xbc, 0x24, 0x90, 0x00, 0x00, 0x00, 0x00,/*d4: cmpl    $0, +0x90(%rsp)          */
  0x0f, 0x84, 0x8f, 0x01, 0x00, 0x00,       /*dc: je                               */
  0x48, 0xc7, 0x44, 0x24, 0x28, 0x00, 0x00, 0x00, 0x00,/*e2: movq    $0, +0x28(%rsp)          */
  0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00,/*eb: movl    $0, +0x1c(%rsp)          */
  0x48, 0x63, 0x84, 0x24, 0x94, 0x00, 0x00, 0x00,/*f3: movslq  +0x94(%rsp), %rax        */
  0x48, 0x8b, 0x8c, 0x24, 0x80, 0x00, 0x00, 0x00,/*fb: mov     +0x80(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*103: shl     $0x4, %rax               */
  0x83, 0x7c, 0x01, 0x08, 0x0e,             /*107: cmpl    $0xe, +0x8(%rcx,%rax,1)  */
  0x75, 0x32,                               /*10c: jne                              */
  0x48, 0x63, 0x84, 0x24, 0x94, 0x00, 0x00, 0x00,/*10e: movslq  +0x94(%rsp), %rax        */
  0x48, 0x8b, 0x8c, 0x24, 0x80, 0x00, 0x00, 0x00,/*116: mov     +0x80(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*11e: shl     $0x4, %rax               */
  0x48, 0x8b, 0x04, 0x01,                   /*122: mov     (%rcx,%rax,1), %rax      */
  0x48, 0x89, 0x44, 0x24, 0x10,             /*126: mov     %rax, +0x10(%rsp)        */
  0x48, 0x8b, 0x40, 0x28,                   /*12b: mov     +0x28(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x28,             /*12f: mov     %rax, +0x28(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*134: mov     +0x10(%rsp), %rax        */
  0x8b, 0x40, 0x18,                         /*139: mov     +0x18(%rax), %eax        */
  0x89, 0x44, 0x24, 0x1c,                   /*13c: mov     %eax, +0x1c(%rsp)        */
  0x48, 0x63, 0x9c, 0x24, 0x9c, 0x00, 0x00, 0x00,/*140: movslq  +0x9c(%rsp), %rbx        */
  0x48, 0x8b, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00,/*148: mov     +0xa0(%rsp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*150: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x18,                   /*154: mov     +0x18(%rax), %r14        */
  0x48, 0x8b, 0x78, 0x58,                   /*158: mov     +0x58(%rax), %rdi        */
  0x8b, 0xb4, 0x24, 0x94, 0x00, 0x00, 0x00, /*15c: mov     +0x94(%rsp), %esi        */
  0x03, 0x74, 0x24, 0x1c,                   /*163: add     +0x1c(%rsp), %esi        */
  0x03, 0xb4, 0x24, 0x8c, 0x00, 0x00, 0x00, /*167: add     +0x8c(%rsp), %esi        */
  0x41, 0xff, 0x94, 0x24, 0xd8, 0x00, 0x00, 0x00,/*16e: callq   +0xd8(%r12)              */
  0x48, 0x89, 0x04, 0x24,                   /*176: mov     %rax, (%rsp)             */
  0x89, 0x54, 0x24, 0x08,                   /*17a: mov     %edx, +0x8(%rsp)         */
  0x48, 0x8b, 0x04, 0x24,                   /*17e: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*182: mov     +0x8(%rsp), %rcx         */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*187: mov     %rcx, +0x8(%r14,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1e,                   /*18c: mov     %rax, (%r14,%rbx,1)      */
  0x48, 0x63, 0x84, 0x24, 0x9c, 0x00, 0x00, 0x00,/*190: movslq  +0x9c(%rsp), %rax        */
  0x48, 0x8b, 0x8c, 0x24, 0xa0, 0x00, 0x00, 0x00,/*198: mov     +0xa0(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*1a0: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1a4: shl     $0x4, %rax               */
  0x48, 0x8b, 0x04, 0x01,                   /*1a8: mov     (%rcx,%rax,1), %rax      */
  0x48, 0x89, 0x44, 0x24, 0x20,             /*1ac: mov     %rax, +0x20(%rsp)        */
  0x83, 0xbc, 0x24, 0x94, 0x00, 0x00, 0x00, 0x00,/*1b1: cmpl    $0, +0x94(%rsp)          */
  0x7e, 0x21,                               /*1b9: jle                              */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*1bb: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x28,                   /*1c0: mov     +0x28(%rax), %rdi        */
  0x48, 0x8b, 0xb4, 0x24, 0x80, 0x00, 0x00, 0x00,/*1c4: mov     +0x80(%rsp), %rsi        */
  0x48, 0x63, 0x94, 0x24, 0x94, 0x00, 0x00, 0x00,/*1cc: movslq  +0x94(%rsp), %rdx        */
  0x41, 0xff, 0x94, 0x24, 0x88, 0x02, 0x00, 0x00,/*1d4: callq   +0x288(%r12)             */
  0x83, 0x7c, 0x24, 0x1c, 0x00,             /*1dc: cmpl    $0, +0x1c(%rsp)          */
  0x7e, 0x27,                               /*1e1: jle                              */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*1e3: mov     +0x20(%rsp), %rax        */
  0x48, 0x63, 0xbc, 0x24, 0x94, 0x00, 0x00, 0x00,/*1e8: movslq  +0x94(%rsp), %rdi        */
  0x48, 0xc1, 0xe7, 0x04,                   /*1f0: shl     $0x4, %rdi               */
  0x48, 0x03, 0x78, 0x28,                   /*1f4: add     +0x28(%rax), %rdi        */
  0x48, 0x8b, 0x74, 0x24, 0x28,             /*1f8: mov     +0x28(%rsp), %rsi        */
  0x48, 0x63, 0x54, 0x24, 0x1c,             /*1fd: movslq  +0x1c(%rsp), %rdx        */
  0x41, 0xff, 0x94, 0x24, 0x88, 0x02, 0x00, 0x00,/*202: callq   +0x288(%r12)             */
  0x83, 0xbc, 0x24, 0x8c, 0x00, 0x00, 0x00, 0x00,/*20a: cmpl    $0, +0x8c(%rsp)          */
  0x7e, 0x41,                               /*212: jle                              */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*214: mov     +0x20(%rsp), %rax        */
  0x48, 0x63, 0x8c, 0x24, 0x94, 0x00, 0x00, 0x00,/*219: movslq  +0x94(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*221: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x40, 0x28,                   /*225: mov     +0x28(%rax), %rax        */
  0x48, 0x01, 0xc8,                         /*229: add     %rcx, %rax               */
  0x48, 0x63, 0x7c, 0x24, 0x1c,             /*22c: movslq  +0x1c(%rsp), %rdi        */
  0x48, 0xc1, 0xe7, 0x04,                   /*231: shl     $0x4, %rdi               */
  0x48, 0x01, 0xc7,                         /*235: add     %rax, %rdi               */
  0x48, 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,/*238: mov     +0x80(%rsp), %rax        */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*240: lea     +0x10(%rax,%rcx,1), %rsi */
  0x48, 0x63, 0x94, 0x24, 0x8c, 0x00, 0x00, 0x00,/*245: movslq  +0x8c(%rsp), %rdx        */
  0x41, 0xff, 0x94, 0x24, 0x88, 0x02, 0x00, 0x00,/*24d: callq   +0x288(%r12)             */
  0x8b, 0x84, 0x24, 0x94, 0x00, 0x00, 0x00, /*255: mov     +0x94(%rsp), %eax        */
  0x03, 0x44, 0x24, 0x1c,                   /*25c: add     +0x1c(%rsp), %eax        */
  0x03, 0x84, 0x24, 0x8c, 0x00, 0x00, 0x00, /*260: add     +0x8c(%rsp), %eax        */
  0x48, 0x8b, 0x4c, 0x24, 0x20,             /*267: mov     +0x20(%rsp), %rcx        */
  0x89, 0x41, 0x18,                         /*26c: mov     %eax, +0x18(%rcx)        */
  0xeb, 0x56,                               /*26f: jmp                              */
  0x48, 0x63, 0x9c, 0x24, 0x9c, 0x00, 0x00, 0x00,/*271: movslq  +0x9c(%rsp), %rbx        */
  0x48, 0x8b, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00,/*279: mov     +0xa0(%rsp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*281: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x18,                   /*285: mov     +0x18(%rax), %r14        */
  0x48, 0x8b, 0x78, 0x58,                   /*289: mov     +0x58(%rax), %rdi        */
  0x8b, 0xb4, 0x24, 0x94, 0x00, 0x00, 0x00, /*28d: mov     +0x94(%rsp), %esi        */
  0x03, 0xb4, 0x24, 0x8c, 0x00, 0x00, 0x00, /*294: add     +0x8c(%rsp), %esi        */
  0x48, 0x8b, 0x94, 0x24, 0x80, 0x00, 0x00, 0x00,/*29b: mov     +0x80(%rsp), %rdx        */
  0x41, 0xff, 0x94, 0x24, 0x50, 0x02, 0x00, 0x00,/*2a3: callq   +0x250(%r12)             */
  0x48, 0x89, 0x44, 0x24, 0x30,             /*2ab: mov     %rax, +0x30(%rsp)        */
  0x89, 0x54, 0x24, 0x38,                   /*2b0: mov     %edx, +0x38(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*2b4: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*2b9: mov     +0x38(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*2be: mov     %rcx, +0x8(%r14,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1e,                   /*2c3: mov     %rax, (%r14,%rbx,1)      */
  0x48, 0x63, 0x84, 0x24, 0x9c, 0x00, 0x00, 0x00,/*2c7: movslq  +0x9c(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*2cf: shl     $0x4, %rax               */
  0x48, 0x8b, 0x8c, 0x24, 0xa0, 0x00, 0x00, 0x00,/*2d3: mov     +0xa0(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*2db: mov     +0x18(%rcx), %rcx        */
  0x48, 0x63, 0x94, 0x24, 0x94, 0x00, 0x00, 0x00,/*2df: movslq  +0x94(%rsp), %rdx        */
  0x48, 0x63, 0xb4, 0x24, 0x90, 0x00, 0x00, 0x00,/*2e7: movslq  +0x90(%rsp), %rsi        */
  0x48, 0x01, 0xd6,                         /*2ef: add     %rdx, %rsi               */
  0x48, 0x63, 0x94, 0x24, 0x8c, 0x00, 0x00, 0x00,/*2f2: movslq  +0x8c(%rsp), %rdx        */
  0x48, 0x01, 0xf2,                         /*2fa: add     %rsi, %rdx               */
  0x48, 0x8b, 0xb4, 0x24, 0x80, 0x00, 0x00, 0x00,/*2fd: mov     +0x80(%rsp), %rsi        */
  0x48, 0xc1, 0xe2, 0x04,                   /*305: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x3c, 0x16,                   /*309: mov     (%rsi,%rdx,1), %rdi      */
  0x48, 0x8b, 0x54, 0x16, 0x08,             /*30d: mov     +0x8(%rsi,%rdx,1), %rdx  */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*312: mov     %rdx, +0x18(%rax,%rcx,1) */
  0x48, 0x89, 0x7c, 0x08, 0x10,             /*317: mov     %rdi, +0x10(%rax,%rcx,1) */
  0x48, 0x8b, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00,/*31c: mov     +0xa0(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*324: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*327: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*32b: mov     %ecx, +0xdc(%rax)        */
  0x48, 0x8b, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00,/*331: mov     +0xa0(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*339: addq    $0x4, +0x10(%rax)        */
  0xe9, 0xa7, 0x00, 0x00, 0x00,             /*33e: jmpq                             */
  0x48, 0x8b, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00,/*343: mov     +0xa0(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*34b: mov     +0x58(%rax), %rdi        */
  0x48, 0x89, 0x7c, 0x24, 0x60,             /*34f: mov     %rdi, +0x60(%rsp)        */
  0x48, 0x8b, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00,/*354: mov     +0xa0(%rsp), %rax        */
  0x4c, 0x8b, 0x70, 0x58,                   /*35c: mov     +0x58(%rax), %r14        */
  0x49, 0x8b, 0x44, 0x24, 0x68,             /*360: mov     +0x68(%r12), %rax        */
  0x48, 0x8b, 0x30,                         /*365: mov     (%rax), %rsi             */
  0x41, 0xff, 0x94, 0x24, 0x18, 0x01, 0x00, 0x00,/*368: callq   +0x118(%r12)             */
  0x49, 0x89, 0xc7,                         /*370: mov     %rax, %r15               */
  0x48, 0x8b, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00,/*373: mov     +0xa0(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*37b: mov     +0x58(%rax), %rdi        */
  0x49, 0x8b, 0xb4, 0x24, 0xc0, 0x02, 0x00, 0x00,/*37f: mov     +0x2c0(%r12), %rsi       */
  0xba, 0x1e, 0x00, 0x00, 0x00,             /*387: mov     $0x1e, %edx              */
  0x41, 0xff, 0x54, 0x24, 0x78,             /*38c: callq   +0x78(%r12)              */
  0x89, 0xd1,                               /*391: mov     %edx, %ecx               */
  0x48, 0x89, 0x44, 0x24, 0x50,             /*393: mov     %rax, +0x50(%rsp)        */
  0x89, 0x4c, 0x24, 0x58,                   /*398: mov     %ecx, +0x58(%rsp)        */
  0x48, 0x8b, 0x54, 0x24, 0x50,             /*39c: mov     +0x50(%rsp), %rdx        */
  0x4c, 0x89, 0xf7,                         /*3a1: mov     %r14, %rdi               */
  0x4c, 0x89, 0xfe,                         /*3a4: mov     %r15, %rsi               */
  0x41, 0xff, 0x94, 0x24, 0xe0, 0x01, 0x00, 0x00,/*3a7: callq   +0x1e0(%r12)             */
  0x48, 0x89, 0x44, 0x24, 0x40,             /*3af: mov     %rax, +0x40(%rsp)        */
  0x89, 0x54, 0x24, 0x48,                   /*3b4: mov     %edx, +0x48(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*3b8: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x48,             /*3bd: mov     +0x48(%rsp), %rcx        */
  0x48, 0x89, 0x4c, 0x24, 0x70,             /*3c2: mov     %rcx, +0x70(%rsp)        */
  0x48, 0x89, 0x44, 0x24, 0x68,             /*3c7: mov     %rax, +0x68(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*3cc: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x60,             /*3d1: mov     +0x60(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x28,                   /*3d6: mov     %rax, +0x28(%rcx)        */
  0x48, 0x8b, 0xbc, 0x24, 0xa0, 0x00, 0x00, 0x00,/*3da: mov     +0xa0(%rsp), %rdi        */
  0x41, 0xff, 0x94, 0x24, 0xd0, 0x01, 0x00, 0x00,/*3e2: callq   +0x1d0(%r12)             */
  0x4c, 0x89, 0xe7,                         /*3ea: mov     %r12, %rdi               */
  0x48, 0x81, 0xc4, 0xa8, 0x00, 0x00, 0x00, /*3ed: add     $0xa8, %rsp              */
  0x5b,                                     /*3f4: pop     %rbx                     */
  0x41, 0x5c,                               /*3f5: pop     %r12                     */
  0x41, 0x5e,                               /*3f7: pop     %r14                     */
  0x41, 0x5f,                               /*3f9: pop     %r15                     */
};


static uint8_t op_enter[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x81, 0xec, 0x90, 0x00, 0x00, 0x00, /*05: sub     $0x90, %rsp              */
  0x49, 0x89, 0xfe,                         /*0c: mov     %rdi, %r14               */
  0x4c, 0x89, 0xb4, 0x24, 0x88, 0x00, 0x00, 0x00,/*0f: mov     %r14, +0x88(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*17: mov     +0x10(%r14), %rax        */
  0x8b, 0x00,                               /*1b: mov     (%rax), %eax             */
  0x89, 0xc1,                               /*1d: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x07,                         /*1f: shr     $0x7, %ecx               */
  0x89, 0x8c, 0x24, 0x84, 0x00, 0x00, 0x00, /*22: mov     %ecx, +0x84(%rsp)        */
  0xc1, 0xe8, 0x19,                         /*29: shr     $0x19, %eax              */
  0x83, 0xe0, 0x1f,                         /*2c: and     $0x1f, %eax              */
  0x89, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, /*2f: mov     %eax, +0x80(%rsp)        */
  0x8b, 0x84, 0x24, 0x84, 0x00, 0x00, 0x00, /*36: mov     +0x84(%rsp), %eax        */
  0xc1, 0xe8, 0x0d,                         /*3d: shr     $0xd, %eax               */
  0x83, 0xe0, 0x1f,                         /*40: and     $0x1f, %eax              */
  0x89, 0x44, 0x24, 0x7c,                   /*43: mov     %eax, +0x7c(%rsp)        */
  0x8b, 0x84, 0x24, 0x84, 0x00, 0x00, 0x00, /*47: mov     +0x84(%rsp), %eax        */
  0xc1, 0xe8, 0x0c,                         /*4e: shr     $0xc, %eax               */
  0x83, 0xe0, 0x01,                         /*51: and     $0x1, %eax               */
  0x89, 0x44, 0x24, 0x78,                   /*54: mov     %eax, +0x78(%rsp)        */
  0x8b, 0x84, 0x24, 0x84, 0x00, 0x00, 0x00, /*58: mov     +0x84(%rsp), %eax        */
  0xc1, 0xe8, 0x07,                         /*5f: shr     $0x7, %eax               */
  0x83, 0xe0, 0x1f,                         /*62: and     $0x1f, %eax              */
  0x89, 0x44, 0x24, 0x74,                   /*65: mov     %eax, +0x74(%rsp)        */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*69: mov     +0x88(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*71: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*75: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*79: mov     +0x20(%rax), %rax        */
  0x8b, 0x40, 0x40,                         /*7d: mov     +0x40(%rax), %eax        */
  0x89, 0x44, 0x24, 0x70,                   /*80: mov     %eax, +0x70(%rsp)        */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*84: mov     +0x88(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*8c: mov     +0x18(%rax), %rax        */
  0x48, 0x83, 0xc0, 0x10,                   /*90: add     $0x10, %rax              */
  0x48, 0x89, 0x44, 0x24, 0x68,             /*94: mov     %rax, +0x68(%rsp)        */
  0x48, 0x89, 0x44, 0x24, 0x60,             /*99: mov     %rax, +0x60(%rsp)        */
  0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, /*9e: mov     +0x80(%rsp), %eax        */
  0x03, 0x44, 0x24, 0x7c,                   /*a5: add     +0x7c(%rsp), %eax        */
  0x03, 0x44, 0x24, 0x78,                   /*a9: add     +0x78(%rsp), %eax        */
  0x03, 0x44, 0x24, 0x74,                   /*ad: add     +0x74(%rsp), %eax        */
  0x89, 0x44, 0x24, 0x5c,                   /*b1: mov     %eax, +0x5c(%rsp)        */
  0xb8, 0x01, 0x00, 0x00, 0x00,             /*b5: mov     $0x1, %eax               */
  0x83, 0x7c, 0x24, 0x70, 0x00,             /*ba: cmpl    $0, +0x70(%rsp)          */
  0x78, 0x04,                               /*bf: js                               */
  0x8b, 0x44, 0x24, 0x70,                   /*c1: mov     +0x70(%rsp), %eax        */
  0x48, 0x98,                               /*c5: cltq                             */
  0x48, 0x8b, 0x4c, 0x24, 0x68,             /*c7: mov     +0x68(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*cc: shl     $0x4, %rax               */
  0x48, 0x8d, 0x14, 0x01,                   /*d0: lea     (%rcx,%rax,1), %rdx      */
  0x48, 0x89, 0x54, 0x24, 0x50,             /*d4: mov     %rdx, +0x50(%rsp)        */
  0x83, 0x7c, 0x01, 0x08, 0x00,             /*d9: cmpl    $0, +0x8(%rcx,%rax,1)    */
  0x75, 0x0a,                               /*de: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*e0: mov     +0x50(%rsp), %rax        */
  0x83, 0x38, 0x00,                         /*e5: cmpl    $0, (%rax)               */
  0x74, 0x56,                               /*e8: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*ea: mov     +0x50(%rsp), %rax        */
  0x83, 0x78, 0x08, 0x0d,                   /*ef: cmpl    $0xd, +0x8(%rax)         */
  0x74, 0x4b,                               /*f3: je                               */
  0x48, 0x8b, 0x5c, 0x24, 0x50,             /*f5: mov     +0x50(%rsp), %rbx        */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*fa: mov     +0x88(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*102: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x33,                         /*106: mov     (%rbx), %rsi             */
  0x8b, 0x53, 0x08,                         /*109: mov     +0x8(%rbx), %edx         */
  0x4d, 0x8b, 0x86, 0xc8, 0x02, 0x00, 0x00, /*10c: mov     +0x2c8(%r14), %r8        */
  0x4d, 0x8b, 0x8e, 0xd0, 0x02, 0x00, 0x00, /*113: mov     +0x2d0(%r14), %r9        */
  0xb9, 0x0d, 0x00, 0x00, 0x00,             /*11a: mov     $0xd, %ecx               */
  0x41, 0xff, 0x96, 0x20, 0x01, 0x00, 0x00, /*11f: callq   +0x120(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x40,             /*126: mov     %rax, +0x40(%rsp)        */
  0x89, 0x54, 0x24, 0x48,                   /*12b: mov     %edx, +0x48(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*12f: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x48,             /*134: mov     +0x48(%rsp), %rcx        */
  0x48, 0x89, 0x4b, 0x08,                   /*139: mov     %rcx, +0x8(%rbx)         */
  0x48, 0x89, 0x03,                         /*13d: mov     %rax, (%rbx)             */
  0x83, 0x7c, 0x24, 0x70, 0x00,             /*140: cmpl    $0, +0x70(%rsp)          */
  0x79, 0x48,                               /*145: jns                              */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*147: mov     +0x88(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*14f: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*153: mov     +0x10(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*157: mov     %rax, +0x38(%rsp)        */
  0x48, 0x8b, 0x40, 0x28,                   /*15c: mov     +0x28(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x68,             /*160: mov     %rax, +0x68(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*165: mov     +0x38(%rsp), %rax        */
  0x8b, 0x40, 0x18,                         /*16a: mov     +0x18(%rax), %eax        */
  0x89, 0x44, 0x24, 0x70,                   /*16d: mov     %eax, +0x70(%rsp)        */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*171: mov     +0x88(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x18,                   /*179: mov     +0x18(%rax), %rcx        */
  0x48, 0x8b, 0x78, 0x58,                   /*17d: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x71, 0x10,                   /*181: mov     +0x10(%rcx), %rsi        */
  0x8b, 0x51, 0x18,                         /*185: mov     +0x18(%rcx), %edx        */
  0x41, 0xff, 0x96, 0x00, 0x02, 0x00, 0x00, /*188: callq   +0x200(%r14)             */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*18f: mov     +0x88(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*197: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*19b: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*19f: mov     +0x20(%rax), %rax        */
  0x48, 0x83, 0x78, 0x08, 0x00,             /*1a3: cmpq    $0, +0x8(%rax)           */
  0x0f, 0x84, 0x89, 0x00, 0x00, 0x00,       /*1a8: je                               */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*1ae: mov     +0x88(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*1b6: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1ba: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*1be: mov     +0x20(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*1c2: mov     +0x8(%rax), %rax         */
  0x8b, 0x00,                               /*1c6: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*1c8: shr     $0xb, %eax               */
  0xf6, 0xc4, 0x01,                         /*1cb: test    $0x1, %ah                */
  0x74, 0x67,                               /*1ce: je                               */
  0x83, 0x7c, 0x24, 0x70, 0x00,             /*1d0: cmpl    $0, +0x70(%rsp)          */
  0x0f, 0x88, 0xb3, 0x00, 0x00, 0x00,       /*1d5: js                               */
  0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, /*1db: mov     +0x80(%rsp), %eax        */
  0x03, 0x44, 0x24, 0x74,                   /*1e2: add     +0x74(%rsp), %eax        */
  0x39, 0x44, 0x24, 0x70,                   /*1e6: cmp     %eax, +0x70(%rsp)        */
  0x7c, 0x19,                               /*1ea: jl                               */
  0x83, 0x7c, 0x24, 0x78, 0x00,             /*1ec: cmpl    $0, +0x78(%rsp)          */
  0x0f, 0x85, 0x97, 0x00, 0x00, 0x00,       /*1f1: jne                              */
  0x8b, 0x44, 0x24, 0x70,                   /*1f7: mov     +0x70(%rsp), %eax        */
  0x3b, 0x44, 0x24, 0x5c,                   /*1fb: cmp     +0x5c(%rsp), %eax        */
  0x0f, 0x8e, 0x89, 0x00, 0x00, 0x00,       /*1ff: jle                              */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*205: mov     +0x88(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*20d: mov     +0x58(%rax), %rdi        */
  0x8b, 0xb4, 0x24, 0x80, 0x00, 0x00, 0x00, /*211: mov     +0x80(%rsp), %esi        */
  0x03, 0x74, 0x24, 0x74,                   /*218: add     +0x74(%rsp), %esi        */
  0x41, 0xff, 0x96, 0x90, 0x02, 0x00, 0x00, /*21c: callq   +0x290(%r14)             */
  0x48, 0x8b, 0xbc, 0x24, 0x88, 0x00, 0x00, 0x00,/*223: mov     +0x88(%rsp), %rdi        */
  0x41, 0xff, 0x96, 0xd0, 0x01, 0x00, 0x00, /*22b: callq   +0x1d0(%r14)             */
  0xe9, 0xd0, 0x03, 0x00, 0x00,             /*232: jmpq                             */
  0x83, 0x7c, 0x24, 0x5c, 0x02,             /*237: cmpl    $0x2, +0x5c(%rsp)        */
  0x7c, 0x50,                               /*23c: jl                               */
  0x83, 0x7c, 0x24, 0x70, 0x01,             /*23e: cmpl    $0x1, +0x70(%rsp)        */
  0x75, 0x49,                               /*243: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*245: mov     +0x68(%rsp), %rax        */
  0x83, 0x78, 0x08, 0x0e,                   /*24a: cmpl    $0xe, +0x8(%rax)         */
  0x75, 0x3e,                               /*24e: jne                              */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*250: mov     +0x88(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*258: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*25c: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x30,                         /*261: mov     (%rax), %rsi             */
  0x8b, 0x50, 0x08,                         /*264: mov     +0x8(%rax), %edx         */
  0x41, 0xff, 0x96, 0x00, 0x02, 0x00, 0x00, /*267: callq   +0x200(%r14)             */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*26e: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x00,                         /*273: mov     (%rax), %rax             */
  0x8b, 0x40, 0x18,                         /*276: mov     +0x18(%rax), %eax        */
  0x89, 0x44, 0x24, 0x70,                   /*279: mov     %eax, +0x70(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*27d: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x00,                         /*282: mov     (%rax), %rax             */
  0x48, 0x8b, 0x40, 0x28,                   /*285: mov     +0x28(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x68,             /*289: mov     %rax, +0x68(%rsp)        */
  0x8b, 0x44, 0x24, 0x5c,                   /*28e: mov     +0x5c(%rsp), %eax        */
  0x48, 0x8b, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00,/*292: mov     +0x88(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*29a: mov     +0x58(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*29e: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*2a2: mov     +0x20(%rcx), %rcx        */
  0x89, 0x41, 0x40,                         /*2a6: mov     %eax, +0x40(%rcx)        */
  0x8b, 0x44, 0x24, 0x70,                   /*2a9: mov     +0x70(%rsp), %eax        */
  0x3b, 0x44, 0x24, 0x5c,                   /*2ad: cmp     +0x5c(%rsp), %eax        */
  0x7d, 0x42,                               /*2b1: jge                              */
  0x8b, 0x44, 0x24, 0x74,                   /*2b3: mov     +0x74(%rsp), %eax        */
  0x89, 0x44, 0x24, 0x34,                   /*2b7: mov     %eax, +0x34(%rsp)        */
  0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, /*2bb: mov     +0x80(%rsp), %eax        */
  0x03, 0x44, 0x24, 0x74,                   /*2c2: add     +0x74(%rsp), %eax        */
  0x39, 0x44, 0x24, 0x70,                   /*2c6: cmp     %eax, +0x70(%rsp)        */
  0x0f, 0x8d, 0xb2, 0x01, 0x00, 0x00,       /*2ca: jge                              */
  0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, /*2d0: mov     +0x80(%rsp), %eax        */
  0x3b, 0x44, 0x24, 0x70,                   /*2d7: cmp     +0x70(%rsp), %eax        */
  0x0f, 0x8d, 0x99, 0x01, 0x00, 0x00,       /*2db: jge                              */
  0x8b, 0x44, 0x24, 0x70,                   /*2e1: mov     +0x70(%rsp), %eax        */
  0x2b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, /*2e5: sub     +0x80(%rsp), %eax        */
  0x89, 0x44, 0x24, 0x34,                   /*2ec: mov     %eax, +0x34(%rsp)        */
  0xe9, 0x8d, 0x01, 0x00, 0x00,             /*2f0: jmpq                             */
  0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00,/*2f5: movl    $0, +0x1c(%rsp)          */
  0x48, 0x8b, 0x44, 0x24, 0x60,             /*2fd: mov     +0x60(%rsp), %rax        */
  0x48, 0x3b, 0x44, 0x24, 0x68,             /*302: cmp     +0x68(%rsp), %rax        */
  0x74, 0x57,                               /*307: je                               */
  0x48, 0x63, 0x44, 0x24, 0x5c,             /*309: movslq  +0x5c(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*30e: shl     $0x4, %rax               */
  0x48, 0x8b, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00,/*312: mov     +0x88(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*31a: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x50,             /*31e: mov     +0x50(%rsp), %rdx        */
  0x48, 0x8b, 0x32,                         /*323: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*326: mov     +0x8(%rdx), %rdx         */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*32a: mov     %rdx, +0x18(%rax,%rcx,1) */
  0x48, 0x89, 0x74, 0x08, 0x10,             /*32f: mov     %rsi, +0x10(%rax,%rcx,1) */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*334: mov     +0x88(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x18,                   /*33c: mov     +0x18(%rax), %rdi        */
  0x48, 0x83, 0xc7, 0x10,                   /*340: add     $0x10, %rdi              */
  0x48, 0x8b, 0x74, 0x24, 0x68,             /*344: mov     +0x68(%rsp), %rsi        */
  0x48, 0x63, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,/*349: movslq  +0x80(%rsp), %rax        */
  0x48, 0x63, 0x54, 0x24, 0x7c,             /*351: movslq  +0x7c(%rsp), %rdx        */
  0x48, 0x01, 0xc2,                         /*356: add     %rax, %rdx               */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*359: callq   +0xa8(%r14)              */
  0x83, 0x7c, 0x24, 0x78, 0x00,             /*360: cmpl    $0, +0x78(%rsp)          */
  0x74, 0x70,                               /*365: je                               */
  0x8b, 0x74, 0x24, 0x70,                   /*367: mov     +0x70(%rsp), %esi        */
  0x2b, 0xb4, 0x24, 0x80, 0x00, 0x00, 0x00, /*36b: sub     +0x80(%rsp), %esi        */
  0x2b, 0x74, 0x24, 0x7c,                   /*372: sub     +0x7c(%rsp), %esi        */
  0x2b, 0x74, 0x24, 0x74,                   /*376: sub     +0x74(%rsp), %esi        */
  0x89, 0x74, 0x24, 0x1c,                   /*37a: mov     %esi, +0x1c(%rsp)        */
  0x48, 0x63, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,/*37e: movslq  +0x80(%rsp), %rax        */
  0x48, 0x63, 0x54, 0x24, 0x7c,             /*386: movslq  +0x7c(%rsp), %rdx        */
  0x48, 0x8d, 0x1c, 0x10,                   /*38b: lea     (%rax,%rdx,1), %rbx      */
  0x48, 0xc1, 0xe3, 0x04,                   /*38f: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00,/*393: mov     +0x88(%rsp), %rcx        */
  0x4c, 0x8b, 0x79, 0x18,                   /*39b: mov     +0x18(%rcx), %r15        */
  0x48, 0x8b, 0x79, 0x58,                   /*39f: mov     +0x58(%rcx), %rdi        */
  0x48, 0xc1, 0xe0, 0x04,                   /*3a3: shl     $0x4, %rax               */
  0x48, 0x03, 0x44, 0x24, 0x68,             /*3a7: add     +0x68(%rsp), %rax        */
  0x48, 0xc1, 0xe2, 0x04,                   /*3ac: shl     $0x4, %rdx               */
  0x48, 0x01, 0xc2,                         /*3b0: add     %rax, %rdx               */
  0x41, 0xff, 0x96, 0x50, 0x02, 0x00, 0x00, /*3b3: callq   +0x250(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*3ba: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*3bf: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*3c3: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*3c8: mov     +0x10(%rsp), %rcx        */
  0x4a, 0x89, 0x4c, 0x3b, 0x18,             /*3cd: mov     %rcx, +0x18(%rbx,%r15,1) */
  0x4a, 0x89, 0x44, 0x3b, 0x10,             /*3d2: mov     %rax, +0x10(%rbx,%r15,1) */
  0x83, 0x7c, 0x24, 0x74, 0x00,             /*3d7: cmpl    $0, +0x74(%rsp)          */
  0x74, 0x5b,                               /*3dc: je                               */
  0x8b, 0x44, 0x24, 0x70,                   /*3de: mov     +0x70(%rsp), %eax        */
  0x2b, 0x44, 0x24, 0x74,                   /*3e2: sub     +0x74(%rsp), %eax        */
  0x3b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, /*3e6: cmp     +0x80(%rsp), %eax        */
  0x7e, 0x4a,                               /*3ed: jle                              */
  0x48, 0x63, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,/*3ef: movslq  +0x80(%rsp), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x7c,             /*3f7: movslq  +0x7c(%rsp), %rcx        */
  0x48, 0x01, 0xc1,                         /*3fc: add     %rax, %rcx               */
  0x48, 0x63, 0x44, 0x24, 0x78,             /*3ff: movslq  +0x78(%rsp), %rax        */
  0x48, 0x01, 0xc8,                         /*404: add     %rcx, %rax               */
  0x48, 0xc1, 0xe0, 0x04,                   /*407: shl     $0x4, %rax               */
  0x48, 0x8b, 0x94, 0x24, 0x88, 0x00, 0x00, 0x00,/*40b: mov     +0x88(%rsp), %rdx        */
  0x48, 0x8b, 0x52, 0x18,                   /*413: mov     +0x18(%rdx), %rdx        */
  0x48, 0x8d, 0x7c, 0x10, 0x10,             /*417: lea     +0x10(%rax,%rdx,1), %rdi */
  0x48, 0x63, 0x74, 0x24, 0x1c,             /*41c: movslq  +0x1c(%rsp), %rsi        */
  0x48, 0x01, 0xce,                         /*421: add     %rcx, %rsi               */
  0x48, 0xc1, 0xe6, 0x04,                   /*424: shl     $0x4, %rsi               */
  0x48, 0x03, 0x74, 0x24, 0x68,             /*428: add     +0x68(%rsp), %rsi        */
  0x48, 0x63, 0x54, 0x24, 0x74,             /*42d: movslq  +0x74(%rsp), %rdx        */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*432: callq   +0xa8(%r14)              */
  0x48, 0x8b, 0x44, 0x24, 0x60,             /*439: mov     +0x60(%rsp), %rax        */
  0x48, 0x3b, 0x44, 0x24, 0x68,             /*43e: cmp     +0x68(%rsp), %rax        */
  0x75, 0x2b,                               /*443: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x5c,             /*445: movslq  +0x5c(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*44a: shl     $0x4, %rax               */
  0x48, 0x8b, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00,/*44e: mov     +0x88(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*456: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x50,             /*45a: mov     +0x50(%rsp), %rdx        */
  0x48, 0x8b, 0x32,                         /*45f: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*462: mov     +0x8(%rdx), %rdx         */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*466: mov     %rdx, +0x18(%rax,%rcx,1) */
  0x48, 0x89, 0x74, 0x08, 0x10,             /*46b: mov     %rsi, +0x10(%rax,%rcx,1) */
  0x48, 0x63, 0x44, 0x24, 0x7c,             /*470: movslq  +0x7c(%rsp), %rax        */
  0xe9, 0x78, 0x01, 0x00, 0x00,             /*475: jmpq                             */
  0xc7, 0x44, 0x24, 0x34, 0x00, 0x00, 0x00, 0x00,/*47a: movl    $0, +0x34(%rsp)          */
  0x48, 0x63, 0x44, 0x24, 0x5c,             /*482: movslq  +0x5c(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*487: shl     $0x4, %rax               */
  0x48, 0x8b, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00,/*48b: mov     +0x88(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*493: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x50,             /*497: mov     +0x50(%rsp), %rdx        */
  0x48, 0x8b, 0x32,                         /*49c: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*49f: mov     +0x8(%rdx), %rdx         */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*4a3: mov     %rdx, +0x18(%rax,%rcx,1) */
  0x48, 0x89, 0x74, 0x08, 0x10,             /*4a8: mov     %rsi, +0x10(%rax,%rcx,1) */
  0x48, 0x63, 0x44, 0x24, 0x70,             /*4ad: movslq  +0x70(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*4b2: shl     $0x4, %rax               */
  0x48, 0x8b, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00,/*4b6: mov     +0x88(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*4be: mov     +0x18(%rcx), %rcx        */
  0xc7, 0x44, 0x08, 0x18, 0x00, 0x00, 0x00, 0x00,/*4c2: movl    $0, +0x18(%rax,%rcx,1)   */
  0x48, 0x63, 0x44, 0x24, 0x70,             /*4ca: movslq  +0x70(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*4cf: shl     $0x4, %rax               */
  0x48, 0x8b, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00,/*4d3: mov     +0x88(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*4db: mov     +0x18(%rcx), %rcx        */
  0xc7, 0x44, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00,/*4df: movl    $0, +0x10(%rax,%rcx,1)   */
  0x48, 0x8b, 0x44, 0x24, 0x60,             /*4e7: mov     +0x60(%rsp), %rax        */
  0x48, 0x3b, 0x44, 0x24, 0x68,             /*4ec: cmp     +0x68(%rsp), %rax        */
  0x74, 0x29,                               /*4f1: je                               */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*4f3: mov     +0x88(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x18,                   /*4fb: mov     +0x18(%rax), %rdi        */
  0x48, 0x83, 0xc7, 0x10,                   /*4ff: add     $0x10, %rdi              */
  0x48, 0x8b, 0x74, 0x24, 0x68,             /*503: mov     +0x68(%rsp), %rsi        */
  0x48, 0x63, 0x54, 0x24, 0x70,             /*508: movslq  +0x70(%rsp), %rdx        */
  0x48, 0x63, 0x44, 0x24, 0x34,             /*50d: movslq  +0x34(%rsp), %rax        */
  0x48, 0x29, 0xc2,                         /*512: sub     %rax, %rdx               */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*515: callq   +0xa8(%r14)              */
  0x83, 0x7c, 0x24, 0x34, 0x00,             /*51c: cmpl    $0, +0x34(%rsp)          */
  0x74, 0x3f,                               /*521: je                               */
  0x48, 0x63, 0x44, 0x24, 0x5c,             /*523: movslq  +0x5c(%rsp), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x74,             /*528: movslq  +0x74(%rsp), %rcx        */
  0x48, 0x29, 0xc8,                         /*52d: sub     %rcx, %rax               */
  0x48, 0xc1, 0xe0, 0x04,                   /*530: shl     $0x4, %rax               */
  0x48, 0x8b, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00,/*534: mov     +0x88(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*53c: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8d, 0x7c, 0x08, 0x10,             /*540: lea     +0x10(%rax,%rcx,1), %rdi */
  0x48, 0x63, 0x74, 0x24, 0x70,             /*545: movslq  +0x70(%rsp), %rsi        */
  0x48, 0x63, 0x54, 0x24, 0x34,             /*54a: movslq  +0x34(%rsp), %rdx        */
  0x48, 0x29, 0xd6,                         /*54f: sub     %rdx, %rsi               */
  0x48, 0xc1, 0xe6, 0x04,                   /*552: shl     $0x4, %rsi               */
  0x48, 0x03, 0x74, 0x24, 0x68,             /*556: add     +0x68(%rsp), %rsi        */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*55b: callq   +0xa8(%r14)              */
  0x83, 0x7c, 0x24, 0x78, 0x00,             /*562: cmpl    $0, +0x78(%rsp)          */
  0x74, 0x4a,                               /*567: je                               */
  0x48, 0x63, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,/*569: movslq  +0x80(%rsp), %rax        */
  0x48, 0x63, 0x5c, 0x24, 0x7c,             /*571: movslq  +0x7c(%rsp), %rbx        */
  0x48, 0x01, 0xc3,                         /*576: add     %rax, %rbx               */
  0x48, 0xc1, 0xe3, 0x04,                   /*579: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*57d: mov     +0x88(%rsp), %rax        */
  0x4c, 0x8b, 0x78, 0x18,                   /*585: mov     +0x18(%rax), %r15        */
  0x48, 0x8b, 0x78, 0x58,                   /*589: mov     +0x58(%rax), %rdi        */
  0x31, 0xf6,                               /*58d: xor     %esi, %esi               */
  0x41, 0xff, 0x96, 0xd8, 0x00, 0x00, 0x00, /*58f: callq   +0xd8(%r14)              */
  0x48, 0x89, 0x44, 0x24, 0x20,             /*596: mov     %rax, +0x20(%rsp)        */
  0x89, 0x54, 0x24, 0x28,                   /*59b: mov     %edx, +0x28(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*59f: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x28,             /*5a4: mov     +0x28(%rsp), %rcx        */
  0x4a, 0x89, 0x4c, 0x3b, 0x18,             /*5a9: mov     %rcx, +0x18(%rbx,%r15,1) */
  0x4a, 0x89, 0x44, 0x3b, 0x10,             /*5ae: mov     %rax, +0x10(%rbx,%r15,1) */
  0x83, 0x7c, 0x24, 0x7c, 0x00,             /*5b3: cmpl    $0, +0x7c(%rsp)          */
  0x74, 0x11,                               /*5b8: je                               */
  0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, /*5ba: mov     +0x80(%rsp), %eax        */
  0x03, 0x44, 0x24, 0x74,                   /*5c1: add     +0x74(%rsp), %eax        */
  0x39, 0x44, 0x24, 0x70,                   /*5c5: cmp     %eax, +0x70(%rsp)        */
  0x7d, 0x0f,                               /*5c9: jge                              */
  0x48, 0x8b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,/*5cb: mov     +0x88(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*5d3: addq    $0x4, +0x10(%rax)        */
  0xeb, 0x2d,                               /*5d8: jmp                              */
  0x48, 0x63, 0x44, 0x24, 0x70,             /*5da: movslq  +0x70(%rsp), %rax        */
  0x48, 0x63, 0x8c, 0x24, 0x80, 0x00, 0x00, 0x00,/*5df: movslq  +0x80(%rsp), %rcx        */
  0x48, 0x29, 0xc8,                         /*5e7: sub     %rcx, %rax               */
  0x48, 0x63, 0x4c, 0x24, 0x74,             /*5ea: movslq  +0x74(%rsp), %rcx        */
  0x48, 0x29, 0xc8,                         /*5ef: sub     %rcx, %rax               */
  0x48, 0x8b, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00,/*5f2: mov     +0x88(%rsp), %rcx        */
  0x48, 0x8b, 0x51, 0x10,                   /*5fa: mov     +0x10(%rcx), %rdx        */
  0x48, 0x8d, 0x44, 0x82, 0x04,             /*5fe: lea     +0x4(%rdx,%rax,4), %rax  */
  0x48, 0x89, 0x41, 0x10,                   /*603: mov     %rax, +0x10(%rcx)        */
  0x4c, 0x89, 0xf7,                         /*607: mov     %r14, %rdi               */
  0x48, 0x81, 0xc4, 0x90, 0x00, 0x00, 0x00, /*60a: add     $0x90, %rsp              */
  0x5b,                                     /*611: pop     %rbx                     */
  0x41, 0x5e,                               /*612: pop     %r14                     */
  0x41, 0x5f,                               /*614: pop     %r15                     */
};


static uint8_t op_karg[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
};


static uint8_t op_kdict[] = {
  0x48, 0x89, 0x3c, 0x24,                   /*00: mov     %rdi, (%rsp)             */
};


static uint8_t op_return[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x60,                   /*05: sub     $0x60, %rsp              */
  0x48, 0x89, 0xfb,                         /*09: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x58,             /*0c: mov     %rbx, +0x58(%rsp)        */
  0x48, 0x8b, 0x43, 0x58,                   /*11: mov     +0x58(%rbx), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x50,             /*15: mov     %rax, +0x50(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*1a: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*1f: mov     +0x58(%rax), %rax        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*23: cmpq    $0, +0x28(%rax)          */
  0x0f, 0x85, 0x1f, 0x04, 0x00, 0x00,       /*28: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*2e: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*33: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*37: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*3b: mov     +0x20(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x48,             /*3f: mov     %rax, +0x48(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*44: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*49: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*4d: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*51: mov     +0x20(%rax), %rax        */
  0x8b, 0x40, 0x20,                         /*55: mov     +0x20(%rax), %eax        */
  0x89, 0x44, 0x24, 0x40,                   /*58: mov     %eax, +0x40(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*5c: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*61: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x18,                   /*65: mov     +0x18(%rax), %rax        */
  0x8b, 0x09,                               /*69: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x17,                         /*6b: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*6e: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x14, 0x08,                   /*72: mov     (%rax,%rcx,1), %rdx      */
  0x48, 0x8b, 0x44, 0x08, 0x08,             /*76: mov     +0x8(%rax,%rcx,1), %rax  */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*7b: mov     %rax, +0x38(%rsp)        */
  0x48, 0x89, 0x54, 0x24, 0x30,             /*80: mov     %rdx, +0x30(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*85: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*8a: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*8e: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0e,                         /*90: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*93: and     $0x1ff, %eax             */
  0x0f, 0x84, 0x2a, 0x01, 0x00, 0x00,       /*98: je                               */
  0x83, 0xf8, 0x01,                         /*9e: cmp     $0x1, %eax               */
  0x0f, 0x85, 0xf7, 0x00, 0x00, 0x00,       /*a1: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*a7: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x00,                         /*ac: mov     (%rax), %rax             */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*af: cmpq    $0, +0x28(%rax)          */
  0x0f, 0x84, 0x92, 0x01, 0x00, 0x00,       /*b4: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*ba: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x00,                         /*bf: mov     (%rax), %rax             */
  0x48, 0x8b, 0x40, 0x28,                   /*c2: mov     +0x28(%rax), %rax        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*c6: cmpq    $0, +0x28(%rax)          */
  0x0f, 0x88, 0x7b, 0x01, 0x00, 0x00,       /*cb: js                               */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*d1: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*d6: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x48, 0x20,                   /*da: mov     +0x20(%rax), %rcx        */
  0x48, 0x3b, 0x48, 0x28,                   /*de: cmp     +0x28(%rax), %rcx        */
  0x75, 0x38,                               /*e2: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*e4: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*e9: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*ed: mov     +0x20(%rax), %rax        */
  0x48, 0x83, 0x78, 0x30, 0x00,             /*f1: cmpq    $0, +0x30(%rax)          */
  0x74, 0x24,                               /*f6: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*f8: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*fd: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x04, 0x24,                   /*101: mov     %rax, (%rsp)             */
  0x48, 0x8b, 0x00,                         /*105: mov     (%rax), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*108: mov     +0x50(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*10d: mov     %rax, +0x18(%rcx)        */
  0x48, 0x8b, 0x04, 0x24,                   /*111: mov     (%rsp), %rax             */
  0x48, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, /*115: movq    $0, (%rax)               */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*11c: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*121: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*125: mov     +0x20(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x48,             /*129: mov     %rax, +0x48(%rsp)        */
  0x48, 0x8b, 0x40, 0x10,                   /*12e: mov     +0x10(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*132: mov     +0x50(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*137: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*13b: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*13f: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*144: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x48, 0x28,                   /*148: mov     +0x28(%rax), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x58,             /*14c: mov     +0x58(%rsp), %rdx        */
  0x48, 0x8b, 0x12,                         /*151: mov     (%rdx), %rdx             */
  0x48, 0x8b, 0x52, 0x28,                   /*154: mov     +0x28(%rdx), %rdx        */
  0x48, 0x8b, 0x52, 0x28,                   /*158: mov     +0x28(%rdx), %rdx        */
  0x48, 0x8d, 0x14, 0x92,                   /*15c: lea     (%rdx,%rdx,4), %rdx      */
  0x48, 0xc1, 0xe2, 0x04,                   /*160: shl     $0x4, %rdx               */
  0x48, 0x8d, 0x4c, 0x11, 0x50,             /*164: lea     +0x50(%rcx,%rdx,1), %rcx */
  0x48, 0x89, 0x48, 0x20,                   /*169: mov     %rcx, +0x20(%rax)        */
  0xeb, 0x07,                               /*16d: jmp                              */
  0x90,                                     /*16f: nop                              */
  0x48, 0x83, 0x44, 0x24, 0x48, 0xb0,       /*170: addq    $0xffffffffffffffb0, +0x48(%rsp) */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*176: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*17b: mov     +0x50(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*180: mov     +0x18(%rcx), %rcx        */
  0x48, 0x3b, 0x41, 0x20,                   /*184: cmp     +0x20(%rcx), %rax        */
  0x0f, 0x86, 0xd7, 0x01, 0x00, 0x00,       /*188: jbe                              */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*18e: mov     +0x48(%rsp), %rax        */
  0x83, 0x78, 0xf4, 0xff,                   /*193: cmpl    $0xffffffff, -0xc(%rax)  */
  0x75, 0xd7,                               /*197: jne                              */
  0xe9, 0x98, 0x01, 0x00, 0x00,             /*199: jmpq                             */
  0x83, 0xf8, 0x02,                         /*19e: cmp     $0x2, %eax               */
  0x0f, 0x85, 0xbe, 0x01, 0x00, 0x00,       /*1a1: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*1a7: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x00,                         /*1ac: mov     (%rax), %rax             */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*1af: cmpq    $0, +0x28(%rax)          */
  0x74, 0x12,                               /*1b4: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*1b6: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x00,                         /*1bb: mov     (%rax), %rax             */
  0x0f, 0xba, 0x20, 0x13,                   /*1be: btl     $0x13, (%rax)            */
  0x0f, 0x83, 0x00, 0x01, 0x00, 0x00,       /*1c2: jae                              */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*1c8: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*1cd: mov     +0x50(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*1d2: mov     +0x18(%rcx), %rcx        */
  0x48, 0x3b, 0x41, 0x28,                   /*1d6: cmp     +0x28(%rcx), %rax        */
  0x75, 0x59,                               /*1da: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*1dc: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1e1: mov     +0x18(%rax), %rax        */
  0x48, 0x83, 0x38, 0x00,                   /*1e5: cmpq    $0, (%rax)               */
  0x0f, 0x84, 0x51, 0x02, 0x00, 0x00,       /*1e9: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*1ef: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f4: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x00,                         /*1f8: mov     (%rax), %rax             */
  0x48, 0x8b, 0x48, 0x20,                   /*1fb: mov     +0x20(%rax), %rcx        */
  0x48, 0x3b, 0x48, 0x28,                   /*1ff: cmp     +0x28(%rax), %rcx        */
  0x74, 0x5c,                               /*203: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*205: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*20a: mov     +0x18(%rax), %rax        */
  0xc7, 0x40, 0x54, 0x05, 0x00, 0x00, 0x00, /*20e: movl    $0x5, +0x54(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*215: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x18,                   /*21a: mov     +0x18(%rax), %rcx        */
  0x48, 0x8b, 0x09,                         /*21e: mov     (%rcx), %rcx             */
  0x48, 0x89, 0x48, 0x18,                   /*221: mov     %rcx, +0x18(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*225: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*22a: mov     +0x18(%rax), %rax        */
  0xc7, 0x40, 0x54, 0x01, 0x00, 0x00, 0x00, /*22e: movl    $0x1, +0x54(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*235: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*23a: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*23e: mov     +0x20(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x48,             /*242: mov     %rax, +0x48(%rsp)        */
  0xe9, 0x19, 0x01, 0x00, 0x00,             /*247: jmpq                             */
  0x48, 0x8b, 0x7c, 0x24, 0x50,             /*24c: mov     +0x50(%rsp), %rdi        */
  0xbe, 0x01, 0x00, 0x00, 0x00,             /*251: mov     $0x1, %esi               */
  0xff, 0x93, 0xc8, 0x01, 0x00, 0x00,       /*256: callq   +0x1c8(%rbx)             */
  0xe9, 0xec, 0x01, 0x00, 0x00,             /*25c: jmpq                             */
  0x4c, 0x8b, 0x74, 0x24, 0x50,             /*261: mov     +0x50(%rsp), %r14        */
  0x48, 0x8b, 0x83, 0x10, 0x02, 0x00, 0x00, /*266: mov     +0x210(%rbx), %rax       */
  0x48, 0x8b, 0x30,                         /*26d: mov     (%rax), %rsi             */
  0x4c, 0x89, 0xf7,                         /*270: mov     %r14, %rdi               */
  0xff, 0x93, 0x18, 0x01, 0x00, 0x00,       /*273: callq   +0x118(%rbx)             */
  0x49, 0x89, 0xc7,                         /*279: mov     %rax, %r15               */
  0x48, 0x8b, 0x7c, 0x24, 0x50,             /*27c: mov     +0x50(%rsp), %rdi        */
  0x48, 0x8b, 0xb3, 0xd8, 0x02, 0x00, 0x00, /*281: mov     +0x2d8(%rbx), %rsi       */
  0xba, 0x0d, 0x00, 0x00, 0x00,             /*288: mov     $0xd, %edx               */
  0xff, 0x53, 0x78,                         /*28d: callq   +0x78(%rbx)              */
  0x89, 0xd1,                               /*290: mov     %edx, %ecx               */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*292: mov     %rax, +0x8(%rsp)         */
  0x89, 0x4c, 0x24, 0x10,                   /*297: mov     %ecx, +0x10(%rsp)        */
  0x48, 0x8b, 0x54, 0x24, 0x08,             /*29b: mov     +0x8(%rsp), %rdx         */
  0x4c, 0x89, 0xf7,                         /*2a0: mov     %r14, %rdi               */
  0x4c, 0x89, 0xfe,                         /*2a3: mov     %r15, %rsi               */
  0xff, 0x93, 0xe0, 0x01, 0x00, 0x00,       /*2a6: callq   +0x1e0(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*2ac: mov     %rax, +0x18(%rsp)        */
  0x89, 0x54, 0x24, 0x20,                   /*2b1: mov     %edx, +0x20(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*2b5: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*2ba: mov     +0x50(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x28,                   /*2bf: mov     %rax, +0x28(%rcx)        */
  0xe9, 0x85, 0x01, 0x00, 0x00,             /*2c3: jmpq                             */
  0x48, 0x8b, 0x7c, 0x24, 0x50,             /*2c8: mov     +0x50(%rsp), %rdi        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*2cd: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x30,                         /*2d2: mov     (%rax), %rsi             */
  0xff, 0x93, 0xb0, 0x02, 0x00, 0x00,       /*2d5: callq   +0x2b0(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x28,             /*2db: mov     %rax, +0x28(%rsp)        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*2e0: cmpq    $0, +0x28(%rax)          */
  0x0f, 0x88, 0x55, 0x01, 0x00, 0x00,       /*2e5: js                               */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*2eb: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2f0: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x28,             /*2f4: mov     +0x28(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*2f9: mov     +0x28(%rcx), %rcx        */
  0x48, 0x8d, 0x0c, 0x89,                   /*2fd: lea     (%rcx,%rcx,4), %rcx      */
  0x48, 0xc1, 0xe1, 0x04,                   /*301: shl     $0x4, %rcx               */
  0x48, 0x03, 0x48, 0x28,                   /*305: add     +0x28(%rax), %rcx        */
  0x48, 0x89, 0x4c, 0x24, 0x48,             /*309: mov     %rcx, +0x48(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*30e: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*313: mov     +0x18(%rax), %rax        */
  0x48, 0x3b, 0x48, 0x28,                   /*317: cmp     +0x28(%rax), %rcx        */
  0x0f, 0x84, 0x1f, 0x01, 0x00, 0x00,       /*31b: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*321: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*326: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x48, 0x20,                   /*32a: mov     +0x20(%rax), %rcx        */
  0x48, 0x8b, 0x49, 0x10,                   /*32e: mov     +0x10(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x08,                   /*332: mov     %rcx, +0x8(%rax)         */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*336: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*33b: mov     +0x50(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*340: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x20,                   /*344: mov     %rax, +0x20(%rcx)        */
  0xeb, 0x1b,                               /*348: jmp                              */
  0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*34a: nopw    +0(%rax,%rax,1)          */
  0x48, 0x8b, 0x7c, 0x24, 0x50,             /*350: mov     +0x50(%rsp), %rdi        */
  0x8b, 0x74, 0x24, 0x40,                   /*355: mov     +0x40(%rsp), %esi        */
  0xff, 0xce,                               /*359: dec     %esi                     */
  0x89, 0x74, 0x24, 0x40,                   /*35b: mov     %esi, +0x40(%rsp)        */
  0xff, 0x93, 0x20, 0x02, 0x00, 0x00,       /*35f: callq   +0x220(%rbx)             */
  0x8b, 0x44, 0x24, 0x40,                   /*365: mov     +0x40(%rsp), %eax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*369: mov     +0x50(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*36e: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*372: mov     +0x20(%rcx), %rcx        */
  0x3b, 0x41, 0xd0,                         /*376: cmp     -0x30(%rcx), %eax        */
  0x7f, 0xd5,                               /*379: jg                               */
  0x48, 0x8b, 0x7c, 0x24, 0x50,             /*37b: mov     +0x50(%rsp), %rdi        */
  0xff, 0x93, 0x60, 0x01, 0x00, 0x00,       /*380: callq   +0x160(%rbx)             */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*386: mov     +0x48(%rsp), %rax        */
  0x8b, 0x40, 0x44,                         /*38b: mov     +0x44(%rax), %eax        */
  0x89, 0x44, 0x24, 0x44,                   /*38e: mov     %eax, +0x44(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*392: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x30,                   /*397: mov     +0x30(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*39b: mov     +0x58(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*3a0: mov     %rax, +0x10(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*3a4: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*3a9: mov     +0x10(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*3ad: mov     +0x50(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*3b2: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*3b6: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*3ba: mov     +0x58(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*3bf: mov     %rax, +0x18(%rcx)        */
  0x83, 0x7c, 0x24, 0x44, 0xff,             /*3c3: cmpl    $0xffffffff, +0x44(%rsp) */
  0x0f, 0x84, 0x9c, 0x00, 0x00, 0x00,       /*3c8: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*3ce: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*3d3: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*3d7: mov     +0x20(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*3db: mov     +0x8(%rax), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*3df: mov     +0x58(%rsp), %rcx        */
  0x48, 0x89, 0x01,                         /*3e4: mov     %rax, (%rcx)             */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*3e7: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x08,                         /*3ec: mov     (%rax), %rcx             */
  0x48, 0x8b, 0x49, 0x18,                   /*3ef: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x08,                   /*3f3: mov     %rcx, +0x8(%rax)         */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*3f7: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*3fc: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*400: mov     +0x10(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x20,                   /*404: mov     %rcx, +0x20(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*408: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*40d: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*411: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x28,                   /*415: mov     %rcx, +0x28(%rax)        */
  0x48, 0x63, 0x44, 0x24, 0x44,             /*419: movslq  +0x44(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*41e: mov     +0x58(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*423: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*427: shl     $0x4, %rax               */
  0x48, 0x8b, 0x54, 0x24, 0x30,             /*42b: mov     +0x30(%rsp), %rdx        */
  0x48, 0x8b, 0x74, 0x24, 0x38,             /*430: mov     +0x38(%rsp), %rsi        */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*435: mov     %rsi, +0x8(%rcx,%rax,1)  */
  0x48, 0x89, 0x14, 0x01,                   /*43a: mov     %rdx, (%rcx,%rax,1)      */
  0xeb, 0x18,                               /*43e: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x50,             /*440: mov     +0x50(%rsp), %rdi        */
  0x31, 0xf6,                               /*445: xor     %esi, %esi               */
  0xff, 0x93, 0xc8, 0x01, 0x00, 0x00,       /*447: callq   +0x1c8(%rbx)             */
  0x48, 0x8b, 0x7c, 0x24, 0x58,             /*44d: mov     +0x58(%rsp), %rdi        */
  0xff, 0x93, 0xd0, 0x01, 0x00, 0x00,       /*452: callq   +0x1d0(%rbx)             */
  0x48, 0x89, 0xdf,                         /*458: mov     %rbx, %rdi               */
  0xe8, 0xa0, 0xfb, 0xff, 0xff,             /*45b: callq                            */
  0x48, 0x83, 0xc4, 0x60,                   /*460: add     $0x60, %rsp              */
  0x5b,                                     /*464: pop     %rbx                     */
  0x41, 0x5e,                               /*465: pop     %r14                     */
  0x41, 0x5f,                               /*467: pop     %r15                     */
  0xeb, 0x3c,                               /*469: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*46b: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x30,                   /*470: mov     +0x30(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*474: mov     +0x50(%rsp), %rcx        */
  0x48, 0x89, 0x01,                         /*479: mov     %rax, (%rcx)             */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*47c: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x30,             /*481: mov     +0x30(%rsp), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x38,             /*486: mov     +0x38(%rsp), %rdx        */
  0x48, 0x89, 0x50, 0x40,                   /*48b: mov     %rdx, +0x40(%rax)        */
  0x48, 0x89, 0x48, 0x38,                   /*48f: mov     %rcx, +0x38(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*493: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x48,                   /*498: mov     +0x48(%rax), %rdi        */
  0xbe, 0x01, 0x00, 0x00, 0x00,             /*49c: mov     $0x1, %esi               */
};


static uint8_t op_tailcall[] = {
  0x41, 0x56,                               /*00: push    %r14                     */
  0x53,                                     /*02: push    %rbx                     */
  0x48, 0x83, 0xec, 0x78,                   /*03: sub     $0x78, %rsp              */
  0x49, 0x89, 0xfe,                         /*07: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x70,             /*0a: mov     %r14, +0x70(%rsp)        */
  0x49, 0x8b, 0x46, 0x58,                   /*0f: mov     +0x58(%r14), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x68,             /*13: mov     %rax, +0x68(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*18: mov     +0x70(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*1d: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*21: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*23: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x64,                   /*26: mov     %eax, +0x64(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*2a: mov     +0x70(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*2f: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*33: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*35: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*38: and     $0x7f, %eax              */
  0x89, 0x44, 0x24, 0x60,                   /*3b: mov     %eax, +0x60(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*3f: mov     +0x70(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*44: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x28,                   /*48: mov     +0x28(%rax), %rax        */
  0x8b, 0x09,                               /*4c: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x0e,                         /*4e: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*51: and     $0x1ff, %ecx             */
  0x8b, 0x04, 0x88,                         /*57: mov     (%rax,%rcx,4), %eax      */
  0x89, 0x44, 0x24, 0x34,                   /*5a: mov     %eax, +0x34(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x64,             /*5e: movslq  +0x64(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x70,             /*63: mov     +0x70(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*68: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*6c: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*70: mov     (%rcx,%rax,1), %rdx      */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*74: mov     +0x8(%rcx,%rax,1), %rax  */
  0x48, 0x89, 0x44, 0x24, 0x40,             /*79: mov     %rax, +0x40(%rsp)        */
  0x48, 0x89, 0x54, 0x24, 0x38,             /*7e: mov     %rdx, +0x38(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*83: mov     +0x70(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*88: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x74, 0x24, 0x38,             /*8c: mov     +0x38(%rsp), %rsi        */
  0x8b, 0x54, 0x24, 0x40,                   /*91: mov     +0x40(%rsp), %edx        */
  0x41, 0xff, 0x96, 0xa0, 0x02, 0x00, 0x00, /*95: callq   +0x2a0(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x50,             /*9c: mov     %rax, +0x50(%rsp)        */
  0x48, 0x8b, 0x7c, 0x24, 0x68,             /*a1: mov     +0x68(%rsp), %rdi        */
  0x8b, 0x54, 0x24, 0x34,                   /*a6: mov     +0x34(%rsp), %edx        */
  0x48, 0x8d, 0x74, 0x24, 0x50,             /*aa: lea     +0x50(%rsp), %rsi        */
  0x41, 0xff, 0x96, 0xd0, 0x00, 0x00, 0x00, /*af: callq   +0xd0(%r14)              */
  0x48, 0x89, 0x44, 0x24, 0x58,             /*b6: mov     %rax, +0x58(%rsp)        */
  0x48, 0x85, 0xc0,                         /*bb: test    %rax, %rax               */
  0x0f, 0x85, 0xe0, 0x00, 0x00, 0x00,       /*be: jne                              */
  0x8b, 0x7c, 0x24, 0x34,                   /*c4: mov     +0x34(%rsp), %edi        */
  0x41, 0xff, 0x96, 0x50, 0x01, 0x00, 0x00, /*c8: callq   +0x150(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x20,             /*cf: mov     %rax, +0x20(%rsp)        */
  0x89, 0x54, 0x24, 0x28,                   /*d4: mov     %edx, +0x28(%rsp)        */
  0x48, 0x8b, 0x7c, 0x24, 0x68,             /*d8: mov     +0x68(%rsp), %rdi        */
  0x49, 0x8b, 0xb6, 0xb8, 0x02, 0x00, 0x00, /*dd: mov     +0x2b8(%r14), %rsi       */
  0xba, 0x0e, 0x00, 0x00, 0x00,             /*e4: mov     $0xe, %edx               */
  0x41, 0xff, 0x96, 0xa8, 0x02, 0x00, 0x00, /*e9: callq   +0x2a8(%r14)             */
  0x89, 0x44, 0x24, 0x34,                   /*f0: mov     %eax, +0x34(%rsp)        */
  0x48, 0x8b, 0x7c, 0x24, 0x68,             /*f4: mov     +0x68(%rsp), %rdi        */
  0x48, 0x8d, 0x74, 0x24, 0x50,             /*f9: lea     +0x50(%rsp), %rsi        */
  0x89, 0xc2,                               /*fe: mov     %eax, %edx               */
  0x41, 0xff, 0x96, 0xd0, 0x00, 0x00, 0x00, /*100: callq   +0xd0(%r14)              */
  0x48, 0x89, 0x44, 0x24, 0x58,             /*107: mov     %rax, +0x58(%rsp)        */
  0x83, 0x7c, 0x24, 0x60, 0x7f,             /*10c: cmpl    $0x7f, +0x60(%rsp)       */
  0x75, 0x3c,                               /*111: jne                              */
  0x48, 0x8b, 0x7c, 0x24, 0x68,             /*113: mov     +0x68(%rsp), %rdi        */
  0x48, 0x63, 0x44, 0x24, 0x64,             /*118: movslq  +0x64(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*11d: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x70,             /*121: mov     +0x70(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*126: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x74, 0x08, 0x10,             /*12a: mov     +0x10(%rax,%rcx,1), %rsi */
  0x8b, 0x54, 0x08, 0x18,                   /*12f: mov     +0x18(%rax,%rcx,1), %edx */
  0x48, 0x8b, 0x4c, 0x24, 0x20,             /*133: mov     +0x20(%rsp), %rcx        */
  0x44, 0x8b, 0x44, 0x24, 0x28,             /*138: mov     +0x28(%rsp), %r8d        */
  0x41, 0xff, 0x96, 0x40, 0x02, 0x00, 0x00, /*13d: callq   +0x240(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x10,             /*144: mov     %rax, +0x10(%rsp)        */
  0x89, 0x54, 0x24, 0x18,                   /*149: mov     %edx, +0x18(%rsp)        */
  0xeb, 0x55,                               /*14d: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*14f: mov     +0x70(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*154: mov     +0x18(%rax), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x64,             /*158: movslq  +0x64(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*15d: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x7c, 0x08, 0x20,             /*161: lea     +0x20(%rax,%rcx,1), %rdi */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*166: lea     +0x10(%rax,%rcx,1), %rsi */
  0x48, 0x63, 0x54, 0x24, 0x60,             /*16b: movslq  +0x60(%rsp), %rdx        */
  0x48, 0xff, 0xc2,                         /*170: inc     %rdx                     */
  0x89, 0x54, 0x24, 0x60,                   /*173: mov     %edx, +0x60(%rsp)        */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*177: callq   +0xa8(%r14)              */
  0x48, 0x63, 0x44, 0x24, 0x64,             /*17e: movslq  +0x64(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*183: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x70,             /*187: mov     +0x70(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*18c: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x20,             /*190: mov     +0x20(%rsp), %rdx        */
  0x48, 0x8b, 0x74, 0x24, 0x28,             /*195: mov     +0x28(%rsp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x18,             /*19a: mov     %rsi, +0x18(%rax,%rcx,1) */
  0x48, 0x89, 0x54, 0x08, 0x10,             /*19f: mov     %rdx, +0x10(%rax,%rcx,1) */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*1a4: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1a9: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*1ad: mov     +0x20(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x48,             /*1b1: mov     %rax, +0x48(%rsp)        */
  0x8b, 0x4c, 0x24, 0x34,                   /*1b6: mov     +0x34(%rsp), %ecx        */
  0x89, 0x08,                               /*1ba: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*1bc: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x48,             /*1c1: mov     +0x48(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*1c6: mov     %rax, +0x48(%rcx)        */
  0x83, 0x7c, 0x24, 0x60, 0x7f,             /*1ca: cmpl    $0x7f, +0x60(%rsp)       */
  0x75, 0x0e,                               /*1cf: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*1d1: mov     +0x48(%rsp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*1d6: movl    $0xffffffff, +0x40(%rax) */
  0xeb, 0x0c,                               /*1dd: jmp                              */
  0x8b, 0x44, 0x24, 0x60,                   /*1df: mov     +0x60(%rsp), %eax        */
  0x48, 0x8b, 0x4c, 0x24, 0x48,             /*1e3: mov     +0x48(%rsp), %rcx        */
  0x89, 0x41, 0x40,                         /*1e8: mov     %eax, +0x40(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*1eb: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f0: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x78, 0x08,                   /*1f4: mov     +0x8(%rax), %rdi         */
  0x48, 0x63, 0x74, 0x24, 0x64,             /*1f8: movslq  +0x64(%rsp), %rsi        */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*1fd: mov     +0x70(%rsp), %rax        */
  0x48, 0xc1, 0xe6, 0x04,                   /*202: shl     $0x4, %rsi               */
  0x48, 0x03, 0x70, 0x18,                   /*206: add     +0x18(%rax), %rsi        */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*20a: mov     +0x48(%rsp), %rax        */
  0x48, 0x63, 0x50, 0x40,                   /*20f: movslq  +0x40(%rax), %rdx        */
  0x48, 0xff, 0xc2,                         /*213: inc     %rdx                     */
  0x41, 0xff, 0x96, 0xa8, 0x00, 0x00, 0x00, /*216: callq   +0xa8(%r14)              */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*21d: mov     +0x58(%rsp), %rax        */
  0x8b, 0x00,                               /*222: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*224: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*227: test    $0x80, %al               */
  0x74, 0x5b,                               /*229: je                               */
  0x48, 0x8b, 0x7c, 0x24, 0x68,             /*22b: mov     +0x68(%rsp), %rdi        */
  0x48, 0x8b, 0x47, 0x18,                   /*230: mov     +0x18(%rdi), %rax        */
  0x48, 0x8b, 0x58, 0x08,                   /*234: mov     +0x8(%rax), %rbx         */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*238: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x74, 0x24, 0x38,             /*23d: mov     +0x38(%rsp), %rsi        */
  0x8b, 0x54, 0x24, 0x40,                   /*242: mov     +0x40(%rsp), %edx        */
  0xff, 0x50, 0x18,                         /*246: callq   +0x18(%rax)              */
  0x48, 0x89, 0x04, 0x24,                   /*249: mov     %rax, (%rsp)             */
  0x89, 0x54, 0x24, 0x08,                   /*24d: mov     %edx, +0x8(%rsp)         */
  0x48, 0x8b, 0x04, 0x24,                   /*251: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*255: mov     +0x8(%rsp), %rcx         */
  0x48, 0x89, 0x4b, 0x08,                   /*25a: mov     %rcx, +0x8(%rbx)         */
  0x48, 0x89, 0x03,                         /*25e: mov     %rax, (%rbx)             */
  0x48, 0x8b, 0x7c, 0x24, 0x68,             /*261: mov     +0x68(%rsp), %rdi        */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*266: mov     +0x70(%rsp), %rax        */
  0x8b, 0x70, 0x50,                         /*26b: mov     +0x50(%rax), %esi        */
  0x41, 0xff, 0x96, 0x10, 0x01, 0x00, 0x00, /*26e: callq   +0x110(%r14)             */
  0x48, 0x8b, 0x7c, 0x24, 0x70,             /*275: mov     +0x70(%rsp), %rdi        */
  0x41, 0xff, 0x96, 0x88, 0x00, 0x00, 0x00, /*27a: callq   +0x88(%r14)              */
  0xe9, 0xba, 0x00, 0x00, 0x00,             /*281: jmpq                             */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*286: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*28b: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x70,             /*28f: mov     +0x70(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*294: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*298: mov     +0x70(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*29d: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*2a1: mov     +0x10(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x20,                   /*2a5: mov     %rcx, +0x20(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*2a9: mov     +0x70(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*2ae: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*2b2: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x28,                   /*2b6: mov     %rcx, +0x28(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*2ba: mov     +0x48(%rsp), %rax        */
  0x83, 0x78, 0x40, 0x00,                   /*2bf: cmpl    $0, +0x40(%rax)          */
  0x78, 0x1f,                               /*2c3: js                               */
  0x48, 0x8b, 0x7c, 0x24, 0x68,             /*2c5: mov     +0x68(%rsp), %rdi        */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*2ca: mov     +0x70(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*2cf: mov     +0x8(%rax), %rax         */
  0x0f, 0xb7, 0x70, 0x02,                   /*2d3: movzwl  +0x2(%rax), %esi         */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*2d7: mov     +0x48(%rsp), %rax        */
  0x8b, 0x50, 0x40,                         /*2dc: mov     +0x40(%rax), %edx        */
  0x83, 0xc2, 0x02,                         /*2df: add     $0x2, %edx               */
  0xeb, 0x2e,                               /*2e2: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x68,             /*2e4: mov     +0x68(%rsp), %rdi        */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*2e9: mov     +0x70(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*2ee: mov     +0x8(%rax), %rax         */
  0x0f, 0xb7, 0x40, 0x02,                   /*2f2: movzwl  +0x2(%rax), %eax         */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*2f6: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*2fb: cmp     $0x3, %eax               */
  0x7c, 0x0d,                               /*2fe: jl                               */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*300: mov     +0x70(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*305: mov     +0x8(%rax), %rax         */
  0x0f, 0xb7, 0x70, 0x02,                   /*309: movzwl  +0x2(%rax), %esi         */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*30d: mov     $0x3, %edx               */
  0x41, 0xff, 0x96, 0x40, 0x01, 0x00, 0x00, /*312: callq   +0x140(%r14)             */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*319: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*31e: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*322: mov     +0x8(%rax), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x70,             /*326: mov     +0x70(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*32b: mov     %rax, +0x18(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x70,             /*32f: mov     +0x70(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*334: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*338: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x10,                   /*33c: mov     %rcx, +0x10(%rax)        */
  0x4c, 0x89, 0xf7,                         /*340: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x78,                   /*343: add     $0x78, %rsp              */
  0x5b,                                     /*347: pop     %rbx                     */
  0x41, 0x5e,                               /*348: pop     %r14                     */
};


static uint8_t op_blkpush[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x40,                   /*01: sub     $0x40, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x38,             /*08: mov     %rbx, +0x38(%rsp)        */
  0x48, 0x8b, 0x43, 0x58,                   /*0d: mov     +0x58(%rbx), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x30,             /*11: mov     %rax, +0x30(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*16: mov     +0x38(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*1b: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*1f: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*21: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x2c,                   /*24: mov     %eax, +0x2c(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*28: mov     +0x38(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*2d: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*31: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*33: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*36: movzwl  %ax, %eax                */
  0x89, 0x44, 0x24, 0x28,                   /*39: mov     %eax, +0x28(%rsp)        */
  0xc1, 0xe8, 0x0a,                         /*3d: shr     $0xa, %eax               */
  0x89, 0x44, 0x24, 0x24,                   /*40: mov     %eax, +0x24(%rsp)        */
  0x8b, 0x44, 0x24, 0x28,                   /*44: mov     +0x28(%rsp), %eax        */
  0xc1, 0xe8, 0x09,                         /*48: shr     $0x9, %eax               */
  0x83, 0xe0, 0x01,                         /*4b: and     $0x1, %eax               */
  0x89, 0x44, 0x24, 0x20,                   /*4e: mov     %eax, +0x20(%rsp)        */
  0x8b, 0x44, 0x24, 0x28,                   /*52: mov     +0x28(%rsp), %eax        */
  0xc1, 0xe8, 0x04,                         /*56: shr     $0x4, %eax               */
  0x83, 0xe0, 0x1f,                         /*59: and     $0x1f, %eax              */
  0x89, 0x44, 0x24, 0x1c,                   /*5c: mov     %eax, +0x1c(%rsp)        */
  0x8b, 0x44, 0x24, 0x28,                   /*60: mov     +0x28(%rsp), %eax        */
  0x83, 0xe0, 0x0f,                         /*64: and     $0xf, %eax               */
  0x89, 0x44, 0x24, 0x18,                   /*67: mov     %eax, +0x18(%rsp)        */
  0x74, 0x26,                               /*6b: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*6d: mov     +0x38(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*72: mov     +0x58(%rax), %rdi        */
  0x8b, 0x74, 0x24, 0x18,                   /*76: mov     +0x18(%rsp), %esi        */
  0xff, 0xce,                               /*7a: dec     %esi                     */
  0xff, 0x93, 0x98, 0x02, 0x00, 0x00,       /*7c: callq   +0x298(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*82: mov     %rax, +0x8(%rsp)         */
  0x48, 0x85, 0xc0,                         /*87: test    %rax, %rax               */
  0x74, 0x67,                               /*8a: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*8c: mov     +0x8(%rsp), %rax         */
  0xeb, 0x05,                               /*91: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*93: mov     +0x38(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*98: mov     +0x18(%rax), %rax        */
  0x48, 0x83, 0xc0, 0x10,                   /*9c: add     $0x10, %rax              */
  0x48, 0x89, 0x44, 0x24, 0x10,             /*a0: mov     %rax, +0x10(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x2c,             /*a5: movslq  +0x2c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*aa: mov     +0x38(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*af: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*b3: shl     $0x4, %rax               */
  0x48, 0x63, 0x54, 0x24, 0x24,             /*b7: movslq  +0x24(%rsp), %rdx        */
  0x48, 0x63, 0x74, 0x24, 0x20,             /*bc: movslq  +0x20(%rsp), %rsi        */
  0x48, 0x01, 0xd6,                         /*c1: add     %rdx, %rsi               */
  0x48, 0x63, 0x54, 0x24, 0x1c,             /*c4: movslq  +0x1c(%rsp), %rdx        */
  0x48, 0x01, 0xf2,                         /*c9: add     %rsi, %rdx               */
  0x48, 0x8b, 0x74, 0x24, 0x10,             /*cc: mov     +0x10(%rsp), %rsi        */
  0x48, 0xc1, 0xe2, 0x04,                   /*d1: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x3c, 0x16,                   /*d5: mov     (%rsi,%rdx,1), %rdi      */
  0x48, 0x8b, 0x54, 0x16, 0x08,             /*d9: mov     +0x8(%rsi,%rdx,1), %rdx  */
  0x48, 0x89, 0x54, 0x01, 0x08,             /*de: mov     %rdx, +0x8(%rcx,%rax,1)  */
  0x48, 0x89, 0x3c, 0x01,                   /*e3: mov     %rdi, (%rcx,%rax,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*e7: mov     +0x38(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*ec: addq    $0x4, +0x10(%rax)        */
  0xeb, 0x1b,                               /*f1: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x30,             /*f3: mov     +0x30(%rsp), %rdi        */
  0xbe, 0x02, 0x00, 0x00, 0x00,             /*f8: mov     $0x2, %esi               */
  0xff, 0x93, 0xc8, 0x01, 0x00, 0x00,       /*fd: callq   +0x1c8(%rbx)             */
  0x48, 0x8b, 0x7c, 0x24, 0x38,             /*103: mov     +0x38(%rsp), %rdi        */
  0xff, 0x93, 0xd0, 0x01, 0x00, 0x00,       /*108: callq   +0x1d0(%rbx)             */
  0x48, 0x89, 0xdf,                         /*10e: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x40,                   /*111: add     $0x40, %rsp              */
  0x5b,                                     /*115: pop     %rbx                     */
};


static uint8_t op_add[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x60,                   /*05: sub     $0x60, %rsp              */
  0x49, 0x89, 0xfe,                         /*09: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x58,             /*0c: mov     %r14, +0x58(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*11: mov     +0x10(%r14), %rax        */
  0x8b, 0x00,                               /*15: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*17: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x54,                   /*1a: mov     %eax, +0x54(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*1e: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*23: mov     +0x58(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x48,             /*27: mov     %rax, +0x48(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*2c: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*31: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x40,             /*35: mov     %rax, +0x40(%rsp)        */
  0x48, 0x63, 0x4c, 0x24, 0x54,             /*3a: movslq  +0x54(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*3f: shl     $0x4, %rcx               */
  0x0f, 0xb7, 0x54, 0x08, 0x08,             /*43: movzwl  +0x8(%rax,%rcx,1), %edx  */
  0xc1, 0xe2, 0x08,                         /*48: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x08, 0x18,             /*4b: movzbl  +0x18(%rax,%rcx,1), %eax */
  0x09, 0xd0,                               /*50: or      %edx, %eax               */
  0x3d, 0x0f, 0x10, 0x00, 0x00,             /*52: cmp     $0x100f, %eax            */
  0x0f, 0x8f, 0x82, 0x00, 0x00, 0x00,       /*57: jg                               */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*5d: cmp     $0x602, %eax             */
  0x0f, 0x8f, 0xd0, 0x00, 0x00, 0x00,       /*62: jg                               */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*68: cmp     $0x303, %eax             */
  0x0f, 0x85, 0xf3, 0x00, 0x00, 0x00,       /*6d: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*73: mov     +0x40(%rsp), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x54,             /*78: movslq  +0x54(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*7d: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x14, 0x08,                   /*81: lea     (%rax,%rcx,1), %rdx      */
  0x48, 0x89, 0x54, 0x24, 0x28,             /*85: mov     %rdx, +0x28(%rsp)        */
  0x8b, 0x04, 0x08,                         /*8a: mov     (%rax,%rcx,1), %eax      */
  0x89, 0x44, 0x24, 0x3c,                   /*8d: mov     %eax, +0x3c(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*91: mov     +0x28(%rsp), %rax        */
  0x8b, 0x70, 0x10,                         /*96: mov     +0x10(%rax), %esi        */
  0x89, 0x74, 0x24, 0x38,                   /*99: mov     %esi, +0x38(%rsp)        */
  0x8b, 0x7c, 0x24, 0x3c,                   /*9d: mov     +0x3c(%rsp), %edi        */
  0x48, 0x8d, 0x54, 0x24, 0x34,             /*a1: lea     +0x34(%rsp), %rdx        */
  0x41, 0xff, 0x96, 0x98, 0x01, 0x00, 0x00, /*a6: callq   +0x198(%r14)             */
  0x84, 0xc0,                               /*ad: test    %al, %al                 */
  0x0f, 0x84, 0x5a, 0x01, 0x00, 0x00,       /*af: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*b5: mov     +0x28(%rsp), %rax        */
  0xc7, 0x40, 0x08, 0x06, 0x00, 0x00, 0x00, /*ba: movl    $0x6, +0x8(%rax)         */
  0xf2, 0x0f, 0x2a, 0x44, 0x24, 0x3c,       /*c1: cvtsi2sdl+0x3c(%rsp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4c, 0x24, 0x38,       /*c7: cvtsi2sdl+0x38(%rsp), %xmm1      */
  0xf2, 0x0f, 0x58, 0xc8,                   /*cd: addsd   %xmm0, %xmm1             */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*d1: mov     +0x28(%rsp), %rax        */
  0xf2, 0x0f, 0x11, 0x08,                   /*d6: movsd   %xmm1, (%rax)            */
  0xe9, 0x5b, 0x01, 0x00, 0x00,             /*da: jmpq                             */
  0x3d, 0x10, 0x10, 0x00, 0x00,             /*df: cmp     $0x1010, %eax            */
  0x0f, 0x85, 0x17, 0x01, 0x00, 0x00,       /*e4: jne                              */
  0x48, 0x63, 0x5c, 0x24, 0x54,             /*ea: movslq  +0x54(%rsp), %rbx        */
  0x4c, 0x8b, 0x7c, 0x24, 0x40,             /*ef: mov     +0x40(%rsp), %r15        */
  0x48, 0xc1, 0xe3, 0x04,                   /*f4: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x7c, 0x24, 0x48,             /*f8: mov     +0x48(%rsp), %rdi        */
  0x49, 0x8b, 0x34, 0x1f,                   /*fd: mov     (%r15,%rbx,1), %rsi      */
  0x41, 0x8b, 0x54, 0x1f, 0x08,             /*101: mov     +0x8(%r15,%rbx,1), %edx  */
  0x49, 0x8b, 0x4c, 0x1f, 0x10,             /*106: mov     +0x10(%r15,%rbx,1), %rcx */
  0x45, 0x8b, 0x44, 0x1f, 0x18,             /*10b: mov     +0x18(%r15,%rbx,1), %r8d */
  0x41, 0xff, 0x96, 0x38, 0x01, 0x00, 0x00, /*110: callq   +0x138(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*117: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*11c: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*120: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*125: mov     +0x10(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*12a: mov     %rcx, +0x8(%r15,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1f,                   /*12f: mov     %rax, (%r15,%rbx,1)      */
  0xe9, 0x02, 0x01, 0x00, 0x00,             /*133: jmpq                             */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*138: cmp     $0x603, %eax             */
  0x0f, 0x85, 0x97, 0x00, 0x00, 0x00,       /*13d: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x54,             /*143: movslq  +0x54(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*148: mov     +0x40(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*14d: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*151: cvtsi2sdl+0x10(%rcx,%rax,1), %xmm0 */
  0xf2, 0x0f, 0x58, 0x04, 0x01,             /*157: addsd   (%rcx,%rax,1), %xmm0     */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*15c: movsd   %xmm0, (%rcx,%rax,1)     */
  0xe9, 0xd4, 0x00, 0x00, 0x00,             /*161: jmpq                             */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*166: cmp     $0x306, %eax             */
  0x0f, 0x85, 0x90, 0x00, 0x00, 0x00,       /*16b: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x54,             /*171: movslq  +0x54(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*176: mov     +0x40(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*17b: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*17f: mov     (%rcx,%rax,1), %eax      */
  0x89, 0x44, 0x24, 0x24,                   /*182: mov     %eax, +0x24(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x54,             /*186: movslq  +0x54(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*18b: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*18f: mov     +0x40(%rsp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*194: movsd   +0x10(%rax,%rcx,1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x44, 0x24, 0x18,       /*19a: movsd   %xmm0, +0x18(%rsp)       */
  0x48, 0x63, 0x44, 0x24, 0x54,             /*1a0: movslq  +0x54(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*1a5: mov     +0x40(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1aa: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, 0x00,/*1ae: movl    $0x6, +0x8(%rcx,%rax,1)  */
  0x0f, 0x57, 0xc0,                         /*1b6: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x44, 0x24, 0x24,       /*1b9: cvtsi2sdl+0x24(%rsp), %xmm0      */
  0xf2, 0x0f, 0x58, 0x44, 0x24, 0x18,       /*1bf: addsd   +0x18(%rsp), %xmm0       */
  0x48, 0x63, 0x44, 0x24, 0x54,             /*1c5: movslq  +0x54(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*1ca: mov     +0x40(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1cf: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*1d3: movsd   %xmm0, (%rcx,%rax,1)     */
  0xeb, 0x60,                               /*1d8: jmp                              */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*1da: cmp     $0x606, %eax             */
  0x75, 0x20,                               /*1df: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x54,             /*1e1: movslq  +0x54(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*1e6: mov     +0x40(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1eb: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*1ef: movsd   (%rcx,%rax,1), %xmm0     */
  0xf2, 0x0f, 0x58, 0x44, 0x01, 0x10,       /*1f4: addsd   +0x10(%rcx,%rax,1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*1fa: movsd   %xmm0, (%rcx,%rax,1)     */
  0xeb, 0x39,                               /*1ff: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x58,             /*201: mov     +0x58(%rsp), %rdi        */
  0x41, 0xff, 0x96, 0xf8, 0x01, 0x00, 0x00, /*206: callq   +0x1f8(%r14)             */
  0xeb, 0x48,                               /*20d: jmp                              */
  0x48, 0x63, 0x44, 0x24, 0x54,             /*20f: movslq  +0x54(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*214: mov     +0x40(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*219: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, 0x00,/*21d: movl    $0x3, +0x8(%rcx,%rax,1)  */
  0x8b, 0x44, 0x24, 0x34,                   /*225: mov     +0x34(%rsp), %eax        */
  0x48, 0x63, 0x4c, 0x24, 0x54,             /*229: movslq  +0x54(%rsp), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x40,             /*22e: mov     +0x40(%rsp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*233: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*237: mov     %eax, (%rdx,%rcx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*23a: mov     +0x58(%rsp), %rax        */
  0x8b, 0x40, 0x50,                         /*23f: mov     +0x50(%rax), %eax        */
  0x48, 0x8b, 0x4c, 0x24, 0x48,             /*242: mov     +0x48(%rsp), %rcx        */
  0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*247: mov     %eax, +0xdc(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*24d: mov     +0x58(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*252: addq    $0x4, +0x10(%rax)        */
  0x4c, 0x89, 0xf7,                         /*257: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x60,                   /*25a: add     $0x60, %rsp              */
  0x5b,                                     /*25e: pop     %rbx                     */
  0x41, 0x5e,                               /*25f: pop     %r14                     */
  0x41, 0x5f,                               /*261: pop     %r15                     */
};


static uint8_t op_addi[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x30,                   /*01: sub     $0x30, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x28,             /*08: mov     %rbx, +0x28(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x8b, 0x00,                               /*11: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*13: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x24,                   /*16: mov     %eax, +0x24(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*1a: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*23: mov     %rax, +0x18(%rsp)        */
  0x48, 0x63, 0x4c, 0x24, 0x24,             /*28: movslq  +0x24(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*2d: shl     $0x4, %rcx               */
  0x8b, 0x44, 0x08, 0x08,                   /*31: mov     +0x8(%rax,%rcx,1), %eax  */
  0x83, 0xf8, 0x06,                         /*35: cmp     $0x6, %eax               */
  0x75, 0x32,                               /*38: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*3a: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*3f: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*43: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*45: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*48: and     $0x7f, %eax              */
  0xf2, 0x0f, 0x2a, 0xc0,                   /*4b: cvtsi2sd%eax, %xmm0              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*4f: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*54: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*59: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x58, 0x04, 0x01,             /*5d: addsd   (%rcx,%rax,1), %xmm0     */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*62: movsd   %xmm0, (%rcx,%rax,1)     */
  0xe9, 0x16, 0x01, 0x00, 0x00,             /*67: jmpq                             */
  0x83, 0xf8, 0x03,                         /*6c: cmp     $0x3, %eax               */
  0x75, 0x7f,                               /*6f: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*71: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*76: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*7b: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*7f: mov     (%rcx,%rax,1), %eax      */
  0x89, 0x44, 0x24, 0x14,                   /*82: mov     %eax, +0x14(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*86: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*8b: mov     +0x10(%rax), %rax        */
  0x8b, 0x30,                               /*8f: mov     (%rax), %esi             */
  0xc1, 0xee, 0x07,                         /*91: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*94: and     $0x7f, %esi              */
  0x89, 0x74, 0x24, 0x10,                   /*97: mov     %esi, +0x10(%rsp)        */
  0x8b, 0x7c, 0x24, 0x14,                   /*9b: mov     +0x14(%rsp), %edi        */
  0x48, 0x8d, 0x54, 0x24, 0x0c,             /*9f: lea     +0xc(%rsp), %rdx         */
  0xff, 0x93, 0x98, 0x01, 0x00, 0x00,       /*a4: callq   +0x198(%rbx)             */
  0x84, 0xc0,                               /*aa: test    %al, %al                 */
  0x0f, 0x84, 0xa5, 0x00, 0x00, 0x00,       /*ac: je                               */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*b2: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*b7: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*bc: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, 0x00,/*c0: movl    $0x6, +0x8(%rcx,%rax,1)  */
  0xf2, 0x0f, 0x2a, 0x44, 0x24, 0x14,       /*c8: cvtsi2sdl+0x14(%rsp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4c, 0x24, 0x10,       /*ce: cvtsi2sdl+0x10(%rsp), %xmm1      */
  0xf2, 0x0f, 0x58, 0xc8,                   /*d4: addsd   %xmm0, %xmm1             */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*d8: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*dd: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*e2: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x11, 0x0c, 0x01,             /*e6: movsd   %xmm1, (%rcx,%rax,1)     */
  0xe9, 0x92, 0x00, 0x00, 0x00,             /*eb: jmpq                             */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*f0: movslq  +0x24(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f5: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*f9: mov     +0x18(%rsp), %rcx        */
  0xc7, 0x44, 0x08, 0x18, 0x03, 0x00, 0x00, 0x00,/*fe: movl    $0x3, +0x18(%rax,%rcx,1) */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*106: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*10b: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*10f: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*111: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*114: and     $0x7f, %eax              */
  0x48, 0x63, 0x4c, 0x24, 0x24,             /*117: movslq  +0x24(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*11c: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x54, 0x24, 0x18,             /*120: mov     +0x18(%rsp), %rdx        */
  0x89, 0x44, 0x11, 0x10,                   /*125: mov     %eax, +0x10(%rcx,%rdx,1) */
  0x8b, 0x44, 0x24, 0x24,                   /*129: mov     +0x24(%rsp), %eax        */
  0xc1, 0xe0, 0x17,                         /*12d: shl     $0x17, %eax              */
  0x48, 0x8b, 0x4c, 0x24, 0x28,             /*130: mov     +0x28(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x10,                   /*135: mov     +0x10(%rcx), %rcx        */
  0xba, 0x00, 0xc0, 0x7f, 0x00,             /*139: mov     $0x7fc000, %edx          */
  0x23, 0x11,                               /*13e: and     (%rcx), %edx             */
  0x09, 0xc2,                               /*140: or      %eax, %edx               */
  0x81, 0xca, 0xa0, 0x00, 0x00, 0x00,       /*142: or      $0xa0, %edx              */
  0x89, 0x11,                               /*148: mov     %edx, (%rcx)             */
  0x48, 0x8b, 0x7c, 0x24, 0x28,             /*14a: mov     +0x28(%rsp), %rdi        */
  0xff, 0x93, 0xf8, 0x01, 0x00, 0x00,       /*14f: callq   +0x1f8(%rbx)             */
  0xeb, 0x40,                               /*155: jmp                              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*157: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*15c: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*161: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, 0x00,/*165: movl    $0x3, +0x8(%rcx,%rax,1)  */
  0x8b, 0x44, 0x24, 0x0c,                   /*16d: mov     +0xc(%rsp), %eax         */
  0x48, 0x63, 0x4c, 0x24, 0x24,             /*171: movslq  +0x24(%rsp), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x18,             /*176: mov     +0x18(%rsp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*17b: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*17f: mov     %eax, (%rdx,%rcx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*182: mov     +0x28(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*187: addq    $0x4, +0x10(%rax)        */
  0x48, 0x8b, 0x7c, 0x24, 0x28,             /*18c: mov     +0x28(%rsp), %rdi        */
  0xff, 0x93, 0x78, 0x01, 0x00, 0x00,       /*191: callq   +0x178(%rbx)             */
  0x48, 0x89, 0xdf,                         /*197: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x30,                   /*19a: add     $0x30, %rsp              */
  0x5b,                                     /*19e: pop     %rbx                     */
};


static uint8_t op_sub[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x30,                   /*01: sub     $0x30, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x28,             /*08: mov     %rbx, +0x28(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x8b, 0x00,                               /*11: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*13: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x24,                   /*16: mov     %eax, +0x24(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*1a: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*23: mov     %rax, +0x18(%rsp)        */
  0x48, 0x63, 0x4c, 0x24, 0x24,             /*28: movslq  +0x24(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*2d: shl     $0x4, %rcx               */
  0x0f, 0xb7, 0x54, 0x08, 0x08,             /*31: movzwl  +0x8(%rax,%rcx,1), %edx  */
  0xc1, 0xe2, 0x08,                         /*36: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x08, 0x18,             /*39: movzbl  +0x18(%rax,%rcx,1), %eax */
  0x09, 0xd0,                               /*3e: or      %edx, %eax               */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*40: cmp     $0x602, %eax             */
  0x7f, 0x78,                               /*45: jg                               */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*47: cmp     $0x303, %eax             */
  0x0f, 0x85, 0x9f, 0x00, 0x00, 0x00,       /*4c: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*52: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*57: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*5c: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*60: mov     (%rcx,%rax,1), %eax      */
  0x89, 0x44, 0x24, 0x14,                   /*63: mov     %eax, +0x14(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*67: movslq  +0x24(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*6c: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*70: mov     +0x18(%rsp), %rcx        */
  0x8b, 0x74, 0x08, 0x10,                   /*75: mov     +0x10(%rax,%rcx,1), %esi */
  0x89, 0x74, 0x24, 0x10,                   /*79: mov     %esi, +0x10(%rsp)        */
  0x8b, 0x7c, 0x24, 0x14,                   /*7d: mov     +0x14(%rsp), %edi        */
  0x48, 0x8d, 0x54, 0x24, 0x0c,             /*81: lea     +0xc(%rsp), %rdx         */
  0xff, 0x93, 0x70, 0x01, 0x00, 0x00,       /*86: callq   +0x170(%rbx)             */
  0x84, 0xc0,                               /*8c: test    %al, %al                 */
  0x0f, 0x84, 0x03, 0x01, 0x00, 0x00,       /*8e: je                               */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*94: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*99: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*9e: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, 0x00,/*a2: movl    $0x6, +0x8(%rcx,%rax,1)  */
  0xf2, 0x0f, 0x2a, 0x44, 0x24, 0x14,       /*aa: cvtsi2sdl+0x14(%rsp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4c, 0x24, 0x10,       /*b0: cvtsi2sdl+0x10(%rsp), %xmm1      */
  0xf2, 0x0f, 0x5c, 0xc1,                   /*b6: subsd   %xmm1, %xmm0             */
  0xe9, 0x8f, 0x00, 0x00, 0x00,             /*ba: jmpq                             */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*bf: cmp     $0x603, %eax             */
  0x0f, 0x85, 0x99, 0x00, 0x00, 0x00,       /*c4: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*ca: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*cf: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*d4: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*d8: movsd   (%rcx,%rax,1), %xmm0     */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*dd: cvtsi2sdl+0x10(%rcx,%rax,1), %xmm1 */
  0xf2, 0x0f, 0x5c, 0xc1,                   /*e3: subsd   %xmm1, %xmm0             */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*e7: movsd   %xmm0, (%rcx,%rax,1)     */
  0xe9, 0xd1, 0x00, 0x00, 0x00,             /*ec: jmpq                             */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*f1: cmp     $0x306, %eax             */
  0x0f, 0x85, 0x8e, 0x00, 0x00, 0x00,       /*f6: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*fc: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*101: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*106: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*10a: mov     (%rcx,%rax,1), %eax      */
  0x89, 0x44, 0x24, 0x08,                   /*10d: mov     %eax, +0x8(%rsp)         */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*111: movslq  +0x24(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*116: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*11a: mov     +0x18(%rsp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*11f: movsd   +0x10(%rax,%rcx,1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x24,             /*125: movsd   %xmm0, (%rsp)            */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*12a: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*12f: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*134: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, 0x00,/*138: movl    $0x6, +0x8(%rcx,%rax,1)  */
  0x0f, 0x57, 0xc0,                         /*140: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x44, 0x24, 0x08,       /*143: cvtsi2sdl+0x8(%rsp), %xmm0       */
  0xf2, 0x0f, 0x5c, 0x04, 0x24,             /*149: subsd   (%rsp), %xmm0            */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*14e: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*153: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*158: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*15c: movsd   %xmm0, (%rcx,%rax,1)     */
  0xeb, 0x5f,                               /*161: jmp                              */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*163: cmp     $0x606, %eax             */
  0x75, 0x20,                               /*168: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*16a: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*16f: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*174: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*178: movsd   (%rcx,%rax,1), %xmm0     */
  0xf2, 0x0f, 0x5c, 0x44, 0x01, 0x10,       /*17d: subsd   +0x10(%rcx,%rax,1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*183: movsd   %xmm0, (%rcx,%rax,1)     */
  0xeb, 0x38,                               /*188: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x28,             /*18a: mov     +0x28(%rsp), %rdi        */
  0xff, 0x93, 0xf8, 0x01, 0x00, 0x00,       /*18f: callq   +0x1f8(%rbx)             */
  0xeb, 0x35,                               /*195: jmp                              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*197: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*19c: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1a1: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, 0x00,/*1a5: movl    $0x3, +0x8(%rcx,%rax,1)  */
  0x8b, 0x44, 0x24, 0x0c,                   /*1ad: mov     +0xc(%rsp), %eax         */
  0x48, 0x63, 0x4c, 0x24, 0x24,             /*1b1: movslq  +0x24(%rsp), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x18,             /*1b6: mov     +0x18(%rsp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*1bb: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*1bf: mov     %eax, (%rdx,%rcx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*1c2: mov     +0x28(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*1c7: addq    $0x4, +0x10(%rax)        */
  0x48, 0x89, 0xdf,                         /*1cc: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x30,                   /*1cf: add     $0x30, %rsp              */
  0x5b,                                     /*1d3: pop     %rbx                     */
};


static uint8_t op_subi[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x30,                   /*01: sub     $0x30, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x28,             /*08: mov     %rbx, +0x28(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x8b, 0x00,                               /*11: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*13: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x24,                   /*16: mov     %eax, +0x24(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*1a: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*23: mov     %rax, +0x18(%rsp)        */
  0x48, 0x63, 0x4c, 0x24, 0x24,             /*28: movslq  +0x24(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*2d: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x14, 0x08,                   /*31: lea     (%rax,%rcx,1), %rdx      */
  0x48, 0x89, 0x54, 0x24, 0x10,             /*35: mov     %rdx, +0x10(%rsp)        */
  0x8b, 0x44, 0x08, 0x08,                   /*3a: mov     +0x8(%rax,%rcx,1), %eax  */
  0x83, 0xf8, 0x06,                         /*3e: cmp     $0x6, %eax               */
  0x75, 0x2b,                               /*41: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*43: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*48: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*4c: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*4e: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*51: and     $0x7f, %eax              */
  0xf2, 0x0f, 0x2a, 0xc0,                   /*54: cvtsi2sd%eax, %xmm0              */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*58: mov     +0x10(%rsp), %rax        */
  0xf2, 0x0f, 0x10, 0x08,                   /*5d: movsd   (%rax), %xmm1            */
  0xf2, 0x0f, 0x5c, 0xc8,                   /*61: subsd   %xmm0, %xmm1             */
  0xf2, 0x0f, 0x11, 0x08,                   /*65: movsd   %xmm1, (%rax)            */
  0xe9, 0xc9, 0x00, 0x00, 0x00,             /*69: jmpq                             */
  0x83, 0xf8, 0x03,                         /*6e: cmp     $0x3, %eax               */
  0x75, 0x5a,                               /*71: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*73: mov     +0x10(%rsp), %rax        */
  0x8b, 0x00,                               /*78: mov     (%rax), %eax             */
  0x89, 0x44, 0x24, 0x0c,                   /*7a: mov     %eax, +0xc(%rsp)         */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*7e: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*83: mov     +0x10(%rax), %rax        */
  0x8b, 0x30,                               /*87: mov     (%rax), %esi             */
  0xc1, 0xee, 0x07,                         /*89: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*8c: and     $0x7f, %esi              */
  0x89, 0x74, 0x24, 0x08,                   /*8f: mov     %esi, +0x8(%rsp)         */
  0x8b, 0x7c, 0x24, 0x0c,                   /*93: mov     +0xc(%rsp), %edi         */
  0x48, 0x8d, 0x54, 0x24, 0x04,             /*97: lea     +0x4(%rsp), %rdx         */
  0xff, 0x93, 0x70, 0x01, 0x00, 0x00,       /*9c: callq   +0x170(%rbx)             */
  0x84, 0xc0,                               /*a2: test    %al, %al                 */
  0x74, 0x7a,                               /*a4: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*a6: mov     +0x10(%rsp), %rax        */
  0xc7, 0x40, 0x08, 0x06, 0x00, 0x00, 0x00, /*ab: movl    $0x6, +0x8(%rax)         */
  0xf2, 0x0f, 0x2a, 0x44, 0x24, 0x0c,       /*b2: cvtsi2sdl+0xc(%rsp), %xmm0       */
  0xf2, 0x0f, 0x2a, 0x4c, 0x24, 0x08,       /*b8: cvtsi2sdl+0x8(%rsp), %xmm1       */
  0xf2, 0x0f, 0x5c, 0xc1,                   /*be: subsd   %xmm1, %xmm0             */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*c2: mov     +0x10(%rsp), %rax        */
  0xf2, 0x0f, 0x11, 0x00,                   /*c7: movsd   %xmm0, (%rax)            */
  0xeb, 0x6a,                               /*cb: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*cd: mov     +0x10(%rsp), %rax        */
  0xc7, 0x40, 0x18, 0x03, 0x00, 0x00, 0x00, /*d2: movl    $0x3, +0x18(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*d9: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*de: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*e2: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*e4: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*e7: and     $0x7f, %eax              */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*ea: mov     +0x10(%rsp), %rcx        */
  0x89, 0x41, 0x10,                         /*ef: mov     %eax, +0x10(%rcx)        */
  0x8b, 0x44, 0x24, 0x24,                   /*f2: mov     +0x24(%rsp), %eax        */
  0xc1, 0xe0, 0x17,                         /*f6: shl     $0x17, %eax              */
  0x48, 0x8b, 0x4c, 0x24, 0x28,             /*f9: mov     +0x28(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x10,                   /*fe: mov     +0x10(%rcx), %rcx        */
  0xba, 0x00, 0xc0, 0x7f, 0x00,             /*102: mov     $0x7fc000, %edx          */
  0x23, 0x11,                               /*107: and     (%rcx), %edx             */
  0x09, 0xc2,                               /*109: or      %eax, %edx               */
  0x81, 0xca, 0xa0, 0x00, 0x00, 0x00,       /*10b: or      $0xa0, %edx              */
  0x89, 0x11,                               /*111: mov     %edx, (%rcx)             */
  0x48, 0x8b, 0x7c, 0x24, 0x28,             /*113: mov     +0x28(%rsp), %rdi        */
  0xff, 0x93, 0xf8, 0x01, 0x00, 0x00,       /*118: callq   +0x1f8(%rbx)             */
  0xeb, 0x21,                               /*11e: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*120: mov     +0x10(%rsp), %rax        */
  0xc7, 0x40, 0x08, 0x03, 0x00, 0x00, 0x00, /*125: movl    $0x3, +0x8(%rax)         */
  0x8b, 0x44, 0x24, 0x04,                   /*12c: mov     +0x4(%rsp), %eax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*130: mov     +0x10(%rsp), %rcx        */
  0x89, 0x01,                               /*135: mov     %eax, (%rcx)             */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*137: mov     +0x28(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*13c: addq    $0x4, +0x10(%rax)        */
  0x48, 0x89, 0xdf,                         /*141: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x30,                   /*144: add     $0x30, %rsp              */
  0x5b,                                     /*148: pop     %rbx                     */
};


static uint8_t op_mul[] = {
  0x41, 0x56,                               /*00: push    %r14                     */
  0x53,                                     /*02: push    %rbx                     */
  0x48, 0x83, 0xec, 0x58,                   /*03: sub     $0x58, %rsp              */
  0x49, 0x89, 0xfe,                         /*07: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x50,             /*0a: mov     %r14, +0x50(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*0f: mov     +0x10(%r14), %rax        */
  0x8b, 0x00,                               /*13: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x4c,                   /*18: mov     %eax, +0x4c(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*1c: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*21: mov     +0x58(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x40,             /*25: mov     %rax, +0x40(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*2a: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2f: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*33: mov     %rax, +0x38(%rsp)        */
  0x48, 0x63, 0x4c, 0x24, 0x4c,             /*38: movslq  +0x4c(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*3d: shl     $0x4, %rcx               */
  0x0f, 0xb7, 0x54, 0x08, 0x08,             /*41: movzwl  +0x8(%rax,%rcx,1), %edx  */
  0xc1, 0xe2, 0x08,                         /*46: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x08, 0x18,             /*49: movzbl  +0x18(%rax,%rcx,1), %eax */
  0x09, 0xd0,                               /*4e: or      %edx, %eax               */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*50: cmp     $0x602, %eax             */
  0x0f, 0x8f, 0x82, 0x00, 0x00, 0x00,       /*55: jg                               */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*5b: cmp     $0x303, %eax             */
  0x0f, 0x85, 0xa0, 0x00, 0x00, 0x00,       /*60: jne                              */
  0x48, 0x8b, 0x7c, 0x24, 0x40,             /*66: mov     +0x40(%rsp), %rdi        */
  0x48, 0x63, 0x44, 0x24, 0x4c,             /*6b: movslq  +0x4c(%rsp), %rax        */
  0x48, 0x8b, 0x5c, 0x24, 0x38,             /*70: mov     +0x38(%rsp), %rbx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*75: shl     $0x4, %rax               */
  0x48, 0x8b, 0x34, 0x03,                   /*79: mov     (%rbx,%rax,1), %rsi      */
  0x8b, 0x54, 0x03, 0x08,                   /*7d: mov     +0x8(%rbx,%rax,1), %edx  */
  0x48, 0x8b, 0x4c, 0x03, 0x10,             /*81: mov     +0x10(%rbx,%rax,1), %rcx */
  0x44, 0x8b, 0x44, 0x03, 0x18,             /*86: mov     +0x18(%rbx,%rax,1), %r8d */
  0x41, 0xff, 0x96, 0x78, 0x02, 0x00, 0x00, /*8b: callq   +0x278(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*92: mov     %rax, +0x18(%rsp)        */
  0x89, 0x54, 0x24, 0x20,                   /*97: mov     %edx, +0x20(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*9b: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x20,             /*a0: mov     +0x20(%rsp), %rcx        */
  0x48, 0x89, 0x4c, 0x24, 0x30,             /*a5: mov     %rcx, +0x30(%rsp)        */
  0x48, 0x89, 0x44, 0x24, 0x28,             /*aa: mov     %rax, +0x28(%rsp)        */
  0x8b, 0x44, 0x24, 0x30,                   /*af: mov     +0x30(%rsp), %eax        */
  0x83, 0xf8, 0x06,                         /*b3: cmp     $0x6, %eax               */
  0x0f, 0x85, 0x06, 0x01, 0x00, 0x00,       /*b6: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x4c,             /*bc: movslq  +0x4c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*c1: mov     +0x38(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*c6: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, 0x00,/*ca: movl    $0x6, +0x8(%rcx,%rax,1)  */
  0xf2, 0x0f, 0x10, 0x44, 0x24, 0x28,       /*d2: movsd   +0x28(%rsp), %xmm0       */
  0xe9, 0x88, 0x00, 0x00, 0x00,             /*d8: jmpq                             */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*dd: cmp     $0x603, %eax             */
  0x0f, 0x85, 0x8d, 0x00, 0x00, 0x00,       /*e2: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x4c,             /*e8: movslq  +0x4c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*ed: mov     +0x38(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f2: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*f6: cvtsi2sdl+0x10(%rcx,%rax,1), %xmm0 */
  0xf2, 0x0f, 0x59, 0x04, 0x01,             /*fc: mulsd   (%rcx,%rax,1), %xmm0     */
  0xe9, 0x8f, 0x00, 0x00, 0x00,             /*101: jmpq                             */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*106: cmp     $0x306, %eax             */
  0x0f, 0x85, 0x95, 0x00, 0x00, 0x00,       /*10b: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x4c,             /*111: movslq  +0x4c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*116: mov     +0x38(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*11b: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*11f: mov     (%rcx,%rax,1), %eax      */
  0x89, 0x44, 0x24, 0x14,                   /*122: mov     %eax, +0x14(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x4c,             /*126: movslq  +0x4c(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*12b: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*12f: mov     +0x38(%rsp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*134: movsd   +0x10(%rax,%rcx,1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x44, 0x24, 0x08,       /*13a: movsd   %xmm0, +0x8(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x4c,             /*140: movslq  +0x4c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*145: mov     +0x38(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*14a: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, 0x00,/*14e: movl    $0x6, +0x8(%rcx,%rax,1)  */
  0x0f, 0x57, 0xc0,                         /*156: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x44, 0x24, 0x14,       /*159: cvtsi2sdl+0x14(%rsp), %xmm0      */
  0xf2, 0x0f, 0x59, 0x44, 0x24, 0x08,       /*15f: mulsd   +0x8(%rsp), %xmm0        */
  0x48, 0x63, 0x44, 0x24, 0x4c,             /*165: movslq  +0x4c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*16a: mov     +0x38(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*16f: shl     $0x4, %rax               */
  0xeb, 0x20,                               /*173: jmp                              */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*175: cmp     $0x606, %eax             */
  0x75, 0x2a,                               /*17a: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x4c,             /*17c: movslq  +0x4c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*181: mov     +0x38(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*186: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*18a: movsd   (%rcx,%rax,1), %xmm0     */
  0xf2, 0x0f, 0x59, 0x44, 0x01, 0x10,       /*18f: mulsd   +0x10(%rcx,%rax,1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*195: movsd   %xmm0, (%rcx,%rax,1)     */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*19a: mov     +0x50(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*19f: addq    $0x4, +0x10(%rax)        */
  0xeb, 0x0c,                               /*1a4: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x50,             /*1a6: mov     +0x50(%rsp), %rdi        */
  0x41, 0xff, 0x96, 0xf8, 0x01, 0x00, 0x00, /*1ab: callq   +0x1f8(%r14)             */
  0x4c, 0x89, 0xf7,                         /*1b2: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x58,                   /*1b5: add     $0x58, %rsp              */
  0x5b,                                     /*1b9: pop     %rbx                     */
  0x41, 0x5e,                               /*1ba: pop     %r14                     */
  0xeb, 0x32,                               /*1bc: jmp                              */
  0x83, 0xf8, 0x03,                         /*1be: cmp     $0x3, %eax               */
  0x75, 0xd3,                               /*1c1: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x4c,             /*1c3: movslq  +0x4c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*1c8: mov     +0x38(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1cd: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, 0x00,/*1d1: movl    $0x3, +0x8(%rcx,%rax,1)  */
  0x8b, 0x44, 0x24, 0x28,                   /*1d9: mov     +0x28(%rsp), %eax        */
  0x48, 0x63, 0x4c, 0x24, 0x4c,             /*1dd: movslq  +0x4c(%rsp), %rcx        */
  0x48, 0x8b, 0x54, 0x24, 0x38,             /*1e2: mov     +0x38(%rsp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*1e7: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*1eb: mov     %eax, (%rdx,%rcx,1)      */
  0xeb, 0xa6,                               /*1ee: jmp                              */
};


static uint8_t op_div[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x30,                   /*01: sub     $0x30, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x28,             /*08: mov     %rbx, +0x28(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x8b, 0x00,                               /*11: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*13: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x24,                   /*16: mov     %eax, +0x24(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*1a: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*23: mov     %rax, +0x18(%rsp)        */
  0x48, 0x63, 0x4c, 0x24, 0x24,             /*28: movslq  +0x24(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*2d: shl     $0x4, %rcx               */
  0x0f, 0xb7, 0x54, 0x08, 0x08,             /*31: movzwl  +0x8(%rax,%rcx,1), %edx  */
  0xc1, 0xe2, 0x08,                         /*36: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x08, 0x18,             /*39: movzbl  +0x18(%rax,%rcx,1), %eax */
  0x09, 0xd0,                               /*3e: or      %edx, %eax               */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*40: cmp     $0x602, %eax             */
  0x7f, 0x61,                               /*45: jg                               */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*47: cmp     $0x303, %eax             */
  0x0f, 0x85, 0x83, 0x00, 0x00, 0x00,       /*4c: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*52: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*57: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*5c: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*60: mov     (%rcx,%rax,1), %eax      */
  0x89, 0x44, 0x24, 0x14,                   /*63: mov     %eax, +0x14(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*67: movslq  +0x24(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*6c: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*70: mov     +0x18(%rsp), %rcx        */
  0x8b, 0x44, 0x08, 0x10,                   /*75: mov     +0x10(%rax,%rcx,1), %eax */
  0x89, 0x44, 0x24, 0x10,                   /*79: mov     %eax, +0x10(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*7d: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*82: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*87: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, 0x00,/*8b: movl    $0x6, +0x8(%rcx,%rax,1)  */
  0xf2, 0x0f, 0x2a, 0x44, 0x24, 0x14,       /*93: cvtsi2sdl+0x14(%rsp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4c, 0x24, 0x10,       /*99: cvtsi2sdl+0x10(%rsp), %xmm1      */
  0xf2, 0x0f, 0x5e, 0xc1,                   /*9f: divsd   %xmm1, %xmm0             */
  0xe9, 0x8a, 0x00, 0x00, 0x00,             /*a3: jmpq                             */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*a8: cmp     $0x603, %eax             */
  0x0f, 0x85, 0x8f, 0x00, 0x00, 0x00,       /*ad: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*b3: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*b8: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*bd: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*c1: movsd   (%rcx,%rax,1), %xmm0     */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*c6: cvtsi2sdl+0x10(%rcx,%rax,1), %xmm1 */
  0xf2, 0x0f, 0x5e, 0xc1,                   /*cc: divsd   %xmm1, %xmm0             */
  0xe9, 0x8d, 0x00, 0x00, 0x00,             /*d0: jmpq                             */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*d5: cmp     $0x306, %eax             */
  0x0f, 0x85, 0x93, 0x00, 0x00, 0x00,       /*da: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*e0: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*e5: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*ea: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*ee: mov     (%rcx,%rax,1), %eax      */
  0x89, 0x44, 0x24, 0x0c,                   /*f1: mov     %eax, +0xc(%rsp)         */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*f5: movslq  +0x24(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*fa: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*fe: mov     +0x18(%rsp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*103: movsd   +0x10(%rax,%rcx,1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x24,             /*109: movsd   %xmm0, (%rsp)            */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*10e: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*113: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*118: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, 0x00,/*11c: movl    $0x6, +0x8(%rcx,%rax,1)  */
  0x0f, 0x57, 0xc0,                         /*124: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x44, 0x24, 0x0c,       /*127: cvtsi2sdl+0xc(%rsp), %xmm0       */
  0xf2, 0x0f, 0x5e, 0x04, 0x24,             /*12d: divsd   (%rsp), %xmm0            */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*132: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*137: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*13c: shl     $0x4, %rax               */
  0xeb, 0x20,                               /*140: jmp                              */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*142: cmp     $0x606, %eax             */
  0x75, 0x2a,                               /*147: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*149: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*14e: mov     +0x18(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*153: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*157: movsd   (%rcx,%rax,1), %xmm0     */
  0xf2, 0x0f, 0x5e, 0x44, 0x01, 0x10,       /*15c: divsd   +0x10(%rcx,%rax,1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*162: movsd   %xmm0, (%rcx,%rax,1)     */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*167: mov     +0x28(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*16c: addq    $0x4, +0x10(%rax)        */
  0xeb, 0x0b,                               /*171: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x28,             /*173: mov     +0x28(%rsp), %rdi        */
  0xff, 0x93, 0xf8, 0x01, 0x00, 0x00,       /*178: callq   +0x1f8(%rbx)             */
  0x48, 0x89, 0xdf,                         /*17e: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x30,                   /*181: add     $0x30, %rsp              */
  0x5b,                                     /*185: pop     %rbx                     */
};


static uint8_t op_eq[] = {
  0x41, 0x56,                               /*00: push    %r14                     */
  0x53,                                     /*02: push    %rbx                     */
  0x48, 0x83, 0xec, 0x28,                   /*03: sub     $0x28, %rsp              */
  0x49, 0x89, 0xfe,                         /*07: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x20,             /*0a: mov     %r14, +0x20(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*0f: mov     +0x10(%r14), %rax        */
  0x8b, 0x00,                               /*13: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x1c,                   /*18: mov     %eax, +0x1c(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*1c: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*21: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x10,             /*25: mov     %rax, +0x10(%rsp)        */
  0x48, 0x8b, 0x4c, 0x24, 0x20,             /*2a: mov     +0x20(%rsp), %rcx        */
  0x48, 0x8b, 0x79, 0x58,                   /*2f: mov     +0x58(%rcx), %rdi        */
  0x48, 0x63, 0x5c, 0x24, 0x1c,             /*33: movslq  +0x1c(%rsp), %rbx        */
  0x48, 0xc1, 0xe3, 0x04,                   /*38: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x34, 0x18,                   /*3c: mov     (%rax,%rbx,1), %rsi      */
  0x8b, 0x54, 0x18, 0x08,                   /*40: mov     +0x8(%rax,%rbx,1), %edx  */
  0x48, 0x8b, 0x4c, 0x18, 0x10,             /*44: mov     +0x10(%rax,%rbx,1), %rcx */
  0x44, 0x8b, 0x44, 0x18, 0x18,             /*49: mov     +0x18(%rax,%rbx,1), %r8d */
  0x41, 0xff, 0x96, 0xa0, 0x00, 0x00, 0x00, /*4e: callq   +0xa0(%r14)              */
  0x84, 0xc0,                               /*55: test    %al, %al                 */
  0x0f, 0x85, 0xc7, 0x00, 0x00, 0x00,       /*57: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x1c,             /*5d: movslq  +0x1c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*62: mov     +0x10(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*67: shl     $0x4, %rax               */
  0x0f, 0xb7, 0x54, 0x01, 0x08,             /*6b: movzwl  +0x8(%rcx,%rax,1), %edx  */
  0xc1, 0xe2, 0x08,                         /*70: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x01, 0x18,             /*73: movzbl  +0x18(%rcx,%rax,1), %eax */
  0x09, 0xd0,                               /*78: or      %edx, %eax               */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*7a: cmp     $0x602, %eax             */
  0x7f, 0x28,                               /*7f: jg                               */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*81: cmp     $0x303, %eax             */
  0x75, 0x44,                               /*86: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x1c,             /*88: movslq  +0x1c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*8d: mov     +0x10(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*92: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*96: mov     (%rcx,%rax,1), %edx      */
  0x3b, 0x54, 0x01, 0x10,                   /*99: cmp     +0x10(%rcx,%rax,1), %edx */
  0x0f, 0x94, 0xc0,                         /*9d: sete    %al                      */
  0x0f, 0xb6, 0xc0,                         /*a0: movzbl  %al, %eax                */
  0x89, 0x44, 0x24, 0x0c,                   /*a3: mov     %eax, +0xc(%rsp)         */
  0xeb, 0x74,                               /*a7: jmp                              */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*a9: cmp     $0x603, %eax             */
  0x75, 0x3c,                               /*ae: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x1c,             /*b0: movslq  +0x1c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*b5: mov     +0x10(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*ba: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*be: cvtsi2sdl+0x10(%rcx,%rax,1), %xmm0 */
  0xf2, 0x0f, 0xc2, 0x04, 0x01, 0x00,       /*c4: cmpeqsd (%rcx,%rax,1), %xmm0     */
  0xeb, 0x45,                               /*ca: jmp                              */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*cc: cmp     $0x306, %eax             */
  0x0f, 0x85, 0xaa, 0x00, 0x00, 0x00,       /*d1: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x1c,             /*d7: movslq  +0x1c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*dc: mov     +0x10(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*e1: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*e5: cvtsi2sdl(%rcx,%rax,1), %xmm0    */
  0xeb, 0x1e,                               /*ea: jmp                              */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*ec: cmp     $0x606, %eax             */
  0x0f, 0x85, 0x8a, 0x00, 0x00, 0x00,       /*f1: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x1c,             /*f7: movslq  +0x1c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*fc: mov     +0x10(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*101: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*105: movsd   (%rcx,%rax,1), %xmm0     */
  0xf2, 0x0f, 0xc2, 0x44, 0x01, 0x10, 0x00, /*10a: cmpeqsd +0x10(%rcx,%rax,1), %xmm0 */
  0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*111: movq    %xmm0, %rax              */
  0x83, 0xe0, 0x01,                         /*116: and     $0x1, %eax               */
  0x89, 0x44, 0x24, 0x0c,                   /*119: mov     %eax, +0xc(%rsp)         */
  0x83, 0x7c, 0x24, 0x0c, 0x00,             /*11d: cmpl    $0, +0xc(%rsp)           */
  0x74, 0x45,                               /*122: je                               */
  0x48, 0x63, 0x44, 0x24, 0x1c,             /*124: movslq  +0x1c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*129: mov     +0x10(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*12e: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, 0x00,/*132: movl    $0x2, +0x8(%rcx,%rax,1)  */
  0x48, 0x63, 0x44, 0x24, 0x1c,             /*13a: movslq  +0x1c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*13f: mov     +0x10(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*144: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*148: movl    $0x1, (%rcx,%rax,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*14f: mov     +0x20(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*154: addq    $0x4, +0x10(%rax)        */
  0x4c, 0x89, 0xf7,                         /*159: mov     %r14, %rdi               */
  0xe8, 0x9f, 0xfe, 0xff, 0xff,             /*15c: callq                            */
  0x48, 0x83, 0xc4, 0x28,                   /*161: add     $0x28, %rsp              */
  0x5b,                                     /*165: pop     %rbx                     */
  0x41, 0x5e,                               /*166: pop     %r14                     */
  0xeb, 0x26,                               /*168: jmp                              */
  0x48, 0x63, 0x44, 0x24, 0x1c,             /*16a: movslq  +0x1c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*16f: mov     +0x10(%rsp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*174: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00,/*178: movl    $0, +0x8(%rcx,%rax,1)    */
  0xeb, 0xb9,                               /*180: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x20,             /*182: mov     +0x20(%rsp), %rdi        */
  0xeb, 0xca,                               /*187: jmp                              */
};


static uint8_t op_lt[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*01: sub     $0x20, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x18,             /*08: mov     %rbx, +0x18(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x8b, 0x00,                               /*11: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*13: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x14,                   /*16: mov     %eax, +0x14(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*1a: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*23: mov     %rax, +0x8(%rsp)         */
  0x48, 0x63, 0x4c, 0x24, 0x14,             /*28: movslq  +0x14(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*2d: shl     $0x4, %rcx               */
  0x0f, 0xb7, 0x54, 0x08, 0x08,             /*31: movzwl  +0x8(%rax,%rcx,1), %edx  */
  0xc1, 0xe2, 0x08,                         /*36: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x08, 0x18,             /*39: movzbl  +0x18(%rax,%rcx,1), %eax */
  0x09, 0xd0,                               /*3e: or      %edx, %eax               */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*40: cmp     $0x602, %eax             */
  0x7f, 0x21,                               /*45: jg                               */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*47: cmp     $0x303, %eax             */
  0x75, 0x37,                               /*4c: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*4e: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*53: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*58: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*5c: mov     (%rcx,%rax,1), %edx      */
  0x3b, 0x54, 0x01, 0x10,                   /*5f: cmp     +0x10(%rcx,%rax,1), %edx */
  0x0f, 0x9c, 0xc0,                         /*63: setl    %al                      */
  0xeb, 0x6a,                               /*66: jmp                              */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*68: cmp     $0x603, %eax             */
  0x75, 0x40,                               /*6d: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*6f: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*74: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*79: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*7d: cvtsi2sdl+0x10(%rcx,%rax,1), %xmm0 */
  0xeb, 0x45,                               /*83: jmp                              */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*85: cmp     $0x306, %eax             */
  0x0f, 0x85, 0x9f, 0x00, 0x00, 0x00,       /*8a: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*90: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*95: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*9a: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*9e: cvtsi2sdl(%rcx,%rax,1), %xmm0    */
  0xf2, 0x0f, 0x10, 0x4c, 0x01, 0x10,       /*a3: movsd   +0x10(%rcx,%rax,1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc8,                   /*a9: ucomisd %xmm0, %xmm1             */
  0xeb, 0x20,                               /*ad: jmp                              */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*af: cmp     $0x606, %eax             */
  0x75, 0x79,                               /*b4: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*b6: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*bb: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*c0: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x44, 0x01, 0x10,       /*c4: movsd   +0x10(%rcx,%rax,1), %xmm0 */
  0x66, 0x0f, 0x2e, 0x04, 0x01,             /*ca: ucomisd (%rcx,%rax,1), %xmm0     */
  0x0f, 0x97, 0xc0,                         /*cf: seta    %al                      */
  0x0f, 0xb6, 0xc0,                         /*d2: movzbl  %al, %eax                */
  0x89, 0x44, 0x24, 0x04,                   /*d5: mov     %eax, +0x4(%rsp)         */
  0x83, 0x7c, 0x24, 0x04, 0x00,             /*d9: cmpl    $0, +0x4(%rsp)           */
  0x74, 0x18,                               /*de: je                               */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*e0: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*e5: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*ea: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, 0x00,/*ee: movl    $0x2, +0x8(%rcx,%rax,1)  */
  0xeb, 0x16,                               /*f6: jmp                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*f8: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*fd: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*102: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00,/*106: movl    $0, +0x8(%rcx,%rax,1)    */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*10e: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*113: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*118: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*11c: movl    $0x1, (%rcx,%rax,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*123: mov     +0x18(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*128: addq    $0x4, +0x10(%rax)        */
  0xeb, 0x0b,                               /*12d: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x18,             /*12f: mov     +0x18(%rsp), %rdi        */
  0xff, 0x93, 0xf8, 0x01, 0x00, 0x00,       /*134: callq   +0x1f8(%rbx)             */
  0x48, 0x89, 0xdf,                         /*13a: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*13d: add     $0x20, %rsp              */
  0x5b,                                     /*141: pop     %rbx                     */
};


static uint8_t op_le[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*01: sub     $0x20, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x18,             /*08: mov     %rbx, +0x18(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x8b, 0x00,                               /*11: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*13: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x14,                   /*16: mov     %eax, +0x14(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*1a: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*23: mov     %rax, +0x8(%rsp)         */
  0x48, 0x63, 0x4c, 0x24, 0x14,             /*28: movslq  +0x14(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*2d: shl     $0x4, %rcx               */
  0x0f, 0xb7, 0x54, 0x08, 0x08,             /*31: movzwl  +0x8(%rax,%rcx,1), %edx  */
  0xc1, 0xe2, 0x08,                         /*36: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x08, 0x18,             /*39: movzbl  +0x18(%rax,%rcx,1), %eax */
  0x09, 0xd0,                               /*3e: or      %edx, %eax               */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*40: cmp     $0x602, %eax             */
  0x7f, 0x21,                               /*45: jg                               */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*47: cmp     $0x303, %eax             */
  0x75, 0x37,                               /*4c: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*4e: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*53: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*58: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*5c: mov     (%rcx,%rax,1), %edx      */
  0x3b, 0x54, 0x01, 0x10,                   /*5f: cmp     +0x10(%rcx,%rax,1), %edx */
  0x0f, 0x9e, 0xc0,                         /*63: setle   %al                      */
  0xeb, 0x6a,                               /*66: jmp                              */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*68: cmp     $0x603, %eax             */
  0x75, 0x40,                               /*6d: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*6f: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*74: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*79: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*7d: cvtsi2sdl+0x10(%rcx,%rax,1), %xmm0 */
  0xeb, 0x45,                               /*83: jmp                              */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*85: cmp     $0x306, %eax             */
  0x0f, 0x85, 0x9f, 0x00, 0x00, 0x00,       /*8a: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*90: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*95: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*9a: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*9e: cvtsi2sdl(%rcx,%rax,1), %xmm0    */
  0xf2, 0x0f, 0x10, 0x4c, 0x01, 0x10,       /*a3: movsd   +0x10(%rcx,%rax,1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc8,                   /*a9: ucomisd %xmm0, %xmm1             */
  0xeb, 0x20,                               /*ad: jmp                              */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*af: cmp     $0x606, %eax             */
  0x75, 0x79,                               /*b4: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*b6: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*bb: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*c0: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x44, 0x01, 0x10,       /*c4: movsd   +0x10(%rcx,%rax,1), %xmm0 */
  0x66, 0x0f, 0x2e, 0x04, 0x01,             /*ca: ucomisd (%rcx,%rax,1), %xmm0     */
  0x0f, 0x93, 0xc0,                         /*cf: setae   %al                      */
  0x0f, 0xb6, 0xc0,                         /*d2: movzbl  %al, %eax                */
  0x89, 0x44, 0x24, 0x04,                   /*d5: mov     %eax, +0x4(%rsp)         */
  0x83, 0x7c, 0x24, 0x04, 0x00,             /*d9: cmpl    $0, +0x4(%rsp)           */
  0x74, 0x18,                               /*de: je                               */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*e0: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*e5: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*ea: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, 0x00,/*ee: movl    $0x2, +0x8(%rcx,%rax,1)  */
  0xeb, 0x16,                               /*f6: jmp                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*f8: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*fd: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*102: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00,/*106: movl    $0, +0x8(%rcx,%rax,1)    */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*10e: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*113: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*118: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*11c: movl    $0x1, (%rcx,%rax,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*123: mov     +0x18(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*128: addq    $0x4, +0x10(%rax)        */
  0xeb, 0x0b,                               /*12d: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x18,             /*12f: mov     +0x18(%rsp), %rdi        */
  0xff, 0x93, 0xf8, 0x01, 0x00, 0x00,       /*134: callq   +0x1f8(%rbx)             */
  0x48, 0x89, 0xdf,                         /*13a: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*13d: add     $0x20, %rsp              */
  0x5b,                                     /*141: pop     %rbx                     */
};


static uint8_t op_gt[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*01: sub     $0x20, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x18,             /*08: mov     %rbx, +0x18(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x8b, 0x00,                               /*11: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*13: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x14,                   /*16: mov     %eax, +0x14(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*1a: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*23: mov     %rax, +0x8(%rsp)         */
  0x48, 0x63, 0x4c, 0x24, 0x14,             /*28: movslq  +0x14(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*2d: shl     $0x4, %rcx               */
  0x0f, 0xb7, 0x54, 0x08, 0x08,             /*31: movzwl  +0x8(%rax,%rcx,1), %edx  */
  0xc1, 0xe2, 0x08,                         /*36: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x08, 0x18,             /*39: movzbl  +0x18(%rax,%rcx,1), %eax */
  0x09, 0xd0,                               /*3e: or      %edx, %eax               */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*40: cmp     $0x602, %eax             */
  0x7f, 0x21,                               /*45: jg                               */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*47: cmp     $0x303, %eax             */
  0x75, 0x43,                               /*4c: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*4e: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*53: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*58: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*5c: mov     (%rcx,%rax,1), %edx      */
  0x3b, 0x54, 0x01, 0x10,                   /*5f: cmp     +0x10(%rcx,%rax,1), %edx */
  0x0f, 0x9f, 0xc0,                         /*63: setg    %al                      */
  0xeb, 0x6c,                               /*66: jmp                              */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*68: cmp     $0x603, %eax             */
  0x75, 0x42,                               /*6d: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*6f: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*74: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*79: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*7d: movsd   (%rcx,%rax,1), %xmm0     */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*82: cvtsi2sdl+0x10(%rcx,%rax,1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc1,                   /*88: ucomisd %xmm1, %xmm0             */
  0x0f, 0x97, 0xc0,                         /*8c: seta    %al                      */
  0xeb, 0x43,                               /*8f: jmp                              */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*91: cmp     $0x306, %eax             */
  0x0f, 0x85, 0x95, 0x00, 0x00, 0x00,       /*96: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*9c: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*a1: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*a6: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*aa: cvtsi2sdl(%rcx,%rax,1), %xmm0    */
  0xeb, 0x1a,                               /*af: jmp                              */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*b1: cmp     $0x606, %eax             */
  0x75, 0x79,                               /*b6: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*b8: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*bd: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*c2: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*c6: movsd   (%rcx,%rax,1), %xmm0     */
  0x66, 0x0f, 0x2e, 0x44, 0x01, 0x10,       /*cb: ucomisd +0x10(%rcx,%rax,1), %xmm0 */
  0x0f, 0x97, 0xc0,                         /*d1: seta    %al                      */
  0x0f, 0xb6, 0xc0,                         /*d4: movzbl  %al, %eax                */
  0x89, 0x44, 0x24, 0x04,                   /*d7: mov     %eax, +0x4(%rsp)         */
  0x83, 0x7c, 0x24, 0x04, 0x00,             /*db: cmpl    $0, +0x4(%rsp)           */
  0x74, 0x18,                               /*e0: je                               */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*e2: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*e7: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*ec: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, 0x00,/*f0: movl    $0x2, +0x8(%rcx,%rax,1)  */
  0xeb, 0x16,                               /*f8: jmp                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*fa: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*ff: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*104: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00,/*108: movl    $0, +0x8(%rcx,%rax,1)    */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*110: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*115: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*11a: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*11e: movl    $0x1, (%rcx,%rax,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*125: mov     +0x18(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*12a: addq    $0x4, +0x10(%rax)        */
  0xeb, 0x0b,                               /*12f: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x18,             /*131: mov     +0x18(%rsp), %rdi        */
  0xff, 0x93, 0xf8, 0x01, 0x00, 0x00,       /*136: callq   +0x1f8(%rbx)             */
  0x48, 0x89, 0xdf,                         /*13c: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*13f: add     $0x20, %rsp              */
  0x5b,                                     /*143: pop     %rbx                     */
};


static uint8_t op_ge[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*01: sub     $0x20, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x18,             /*08: mov     %rbx, +0x18(%rsp)        */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x8b, 0x00,                               /*11: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*13: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x14,                   /*16: mov     %eax, +0x14(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*1a: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f: mov     +0x18(%rax), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*23: mov     %rax, +0x8(%rsp)         */
  0x48, 0x63, 0x4c, 0x24, 0x14,             /*28: movslq  +0x14(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*2d: shl     $0x4, %rcx               */
  0x0f, 0xb7, 0x54, 0x08, 0x08,             /*31: movzwl  +0x8(%rax,%rcx,1), %edx  */
  0xc1, 0xe2, 0x08,                         /*36: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x08, 0x18,             /*39: movzbl  +0x18(%rax,%rcx,1), %eax */
  0x09, 0xd0,                               /*3e: or      %edx, %eax               */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*40: cmp     $0x602, %eax             */
  0x7f, 0x21,                               /*45: jg                               */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*47: cmp     $0x303, %eax             */
  0x75, 0x43,                               /*4c: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*4e: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*53: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*58: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*5c: mov     (%rcx,%rax,1), %edx      */
  0x3b, 0x54, 0x01, 0x10,                   /*5f: cmp     +0x10(%rcx,%rax,1), %edx */
  0x0f, 0x9d, 0xc0,                         /*63: setge   %al                      */
  0xeb, 0x6c,                               /*66: jmp                              */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*68: cmp     $0x603, %eax             */
  0x75, 0x42,                               /*6d: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*6f: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*74: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*79: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*7d: movsd   (%rcx,%rax,1), %xmm0     */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*82: cvtsi2sdl+0x10(%rcx,%rax,1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc1,                   /*88: ucomisd %xmm1, %xmm0             */
  0x0f, 0x93, 0xc0,                         /*8c: setae   %al                      */
  0xeb, 0x43,                               /*8f: jmp                              */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*91: cmp     $0x306, %eax             */
  0x0f, 0x85, 0x95, 0x00, 0x00, 0x00,       /*96: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*9c: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*a1: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*a6: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*aa: cvtsi2sdl(%rcx,%rax,1), %xmm0    */
  0xeb, 0x1a,                               /*af: jmp                              */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*b1: cmp     $0x606, %eax             */
  0x75, 0x79,                               /*b6: jne                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*b8: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*bd: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*c2: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*c6: movsd   (%rcx,%rax,1), %xmm0     */
  0x66, 0x0f, 0x2e, 0x44, 0x01, 0x10,       /*cb: ucomisd +0x10(%rcx,%rax,1), %xmm0 */
  0x0f, 0x93, 0xc0,                         /*d1: setae   %al                      */
  0x0f, 0xb6, 0xc0,                         /*d4: movzbl  %al, %eax                */
  0x89, 0x44, 0x24, 0x04,                   /*d7: mov     %eax, +0x4(%rsp)         */
  0x83, 0x7c, 0x24, 0x04, 0x00,             /*db: cmpl    $0, +0x4(%rsp)           */
  0x74, 0x18,                               /*e0: je                               */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*e2: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*e7: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*ec: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, 0x00,/*f0: movl    $0x2, +0x8(%rcx,%rax,1)  */
  0xeb, 0x16,                               /*f8: jmp                              */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*fa: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*ff: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*104: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00,/*108: movl    $0, +0x8(%rcx,%rax,1)    */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*110: movslq  +0x14(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*115: mov     +0x8(%rsp), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*11a: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*11e: movl    $0x1, (%rcx,%rax,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*125: mov     +0x18(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*12a: addq    $0x4, +0x10(%rax)        */
  0xeb, 0x0b,                               /*12f: jmp                              */
  0x48, 0x8b, 0x7c, 0x24, 0x18,             /*131: mov     +0x18(%rsp), %rdi        */
  0xff, 0x93, 0xf8, 0x01, 0x00, 0x00,       /*136: callq   +0x1f8(%rbx)             */
  0x48, 0x89, 0xdf,                         /*13c: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*13f: add     $0x20, %rsp              */
  0x5b,                                     /*143: pop     %rbx                     */
};


static uint8_t op_array[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*05: sub     $0x20, %rsp              */
  0x49, 0x89, 0xfe,                         /*09: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x18,             /*0c: mov     %r14, +0x18(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*11: mov     +0x10(%r14), %rax        */
  0x4d, 0x8b, 0x7e, 0x18,                   /*15: mov     +0x18(%r14), %r15        */
  0x8b, 0x10,                               /*19: mov     (%rax), %edx             */
  0x89, 0xd3,                               /*1b: mov     %edx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*1d: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*20: shl     $0x4, %rbx               */
  0x49, 0x8b, 0x7e, 0x58,                   /*24: mov     +0x58(%r14), %rdi        */
  0x89, 0xd6,                               /*28: mov     %edx, %esi               */
  0xc1, 0xee, 0x07,                         /*2a: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*2d: and     $0x7f, %esi              */
  0xc1, 0xea, 0x0e,                         /*30: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*33: and     $0x1ff, %edx             */
  0x48, 0xc1, 0xe2, 0x04,                   /*39: shl     $0x4, %rdx               */
  0x4c, 0x01, 0xfa,                         /*3d: add     %r15, %rdx               */
  0x41, 0xff, 0x96, 0x50, 0x02, 0x00, 0x00, /*40: callq   +0x250(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*47: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*4c: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*50: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*55: mov     +0x10(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*5a: mov     %rcx, +0x8(%r15,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1f,                   /*5f: mov     %rax, (%r15,%rbx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*63: mov     +0x18(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*68: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*6b: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*6f: mov     %ecx, +0xdc(%rax)        */
  0x4c, 0x89, 0xf7,                         /*75: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*78: add     $0x20, %rsp              */
  0x5b,                                     /*7c: pop     %rbx                     */
  0x41, 0x5e,                               /*7d: pop     %r14                     */
  0x41, 0x5f,                               /*7f: pop     %r15                     */
};


static uint8_t op_arycat[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x41, 0x54,                               /*04: push    %r12                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x18,                   /*07: sub     $0x18, %rsp              */
  0x49, 0x89, 0xfc,                         /*0b: mov     %rdi, %r12               */
  0x4c, 0x89, 0x64, 0x24, 0x10,             /*0e: mov     %r12, +0x10(%rsp)        */
  0x4d, 0x8b, 0x74, 0x24, 0x58,             /*13: mov     +0x58(%r12), %r14        */
  0x49, 0x8b, 0x44, 0x24, 0x10,             /*18: mov     +0x10(%r12), %rax        */
  0x4d, 0x8b, 0x7c, 0x24, 0x18,             /*1d: mov     +0x18(%r12), %r15        */
  0x8b, 0x00,                               /*22: mov     (%rax), %eax             */
  0x89, 0xc3,                               /*24: mov     %eax, %ebx               */
  0xc1, 0xeb, 0x17,                         /*26: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*29: shl     $0x4, %rbx               */
  0xc1, 0xe8, 0x0e,                         /*2d: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*30: and     $0x1ff, %eax             */
  0x48, 0xc1, 0xe0, 0x04,                   /*35: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x07,                   /*39: mov     (%r15,%rax,1), %rsi      */
  0x41, 0x8b, 0x54, 0x07, 0x08,             /*3d: mov     +0x8(%r15,%rax,1), %edx  */
  0x4c, 0x89, 0xf7,                         /*42: mov     %r14, %rdi               */
  0x41, 0xff, 0x94, 0x24, 0xf8, 0x00, 0x00, 0x00,/*45: callq   +0xf8(%r12)              */
  0x41, 0x89, 0xd0,                         /*4d: mov     %edx, %r8d               */
  0x48, 0x89, 0x04, 0x24,                   /*50: mov     %rax, (%rsp)             */
  0x44, 0x89, 0x44, 0x24, 0x08,             /*54: mov     %r8d, +0x8(%rsp)         */
  0x49, 0x8b, 0x34, 0x1f,                   /*59: mov     (%r15,%rbx,1), %rsi      */
  0x41, 0x8b, 0x54, 0x1f, 0x08,             /*5d: mov     +0x8(%r15,%rbx,1), %edx  */
  0x48, 0x8b, 0x0c, 0x24,                   /*62: mov     (%rsp), %rcx             */
  0x4c, 0x89, 0xf7,                         /*66: mov     %r14, %rdi               */
  0x41, 0xff, 0x94, 0x24, 0xb0, 0x01, 0x00, 0x00,/*69: callq   +0x1b0(%r12)             */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*71: mov     +0x10(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*76: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*79: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*7d: mov     %ecx, +0xdc(%rax)        */
  0x4c, 0x89, 0xe7,                         /*83: mov     %r12, %rdi               */
  0x48, 0x83, 0xc4, 0x18,                   /*86: add     $0x18, %rsp              */
  0x5b,                                     /*8a: pop     %rbx                     */
  0x41, 0x5c,                               /*8b: pop     %r12                     */
  0x41, 0x5e,                               /*8d: pop     %r14                     */
  0x41, 0x5f,                               /*8f: pop     %r15                     */
};


static uint8_t op_arypush[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x7b, 0x58,                   /*0d: mov     +0x58(%rbx), %rdi        */
  0x48, 0x8b, 0x4b, 0x10,                   /*11: mov     +0x10(%rbx), %rcx        */
  0x4c, 0x8b, 0x43, 0x18,                   /*15: mov     +0x18(%rbx), %r8         */
  0x8b, 0x01,                               /*19: mov     (%rcx), %eax             */
  0x89, 0xc1,                               /*1b: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x17,                         /*1d: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*20: shl     $0x4, %rcx               */
  0xc1, 0xe8, 0x0e,                         /*24: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*27: and     $0x1ff, %eax             */
  0x48, 0xc1, 0xe0, 0x04,                   /*2c: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x08,                   /*30: mov     (%r8,%rcx,1), %rsi       */
  0x41, 0x8b, 0x54, 0x08, 0x08,             /*34: mov     +0x8(%r8,%rcx,1), %edx   */
  0x49, 0x8b, 0x0c, 0x00,                   /*39: mov     (%r8,%rax,1), %rcx       */
  0x45, 0x8b, 0x44, 0x00, 0x08,             /*3d: mov     +0x8(%r8,%rax,1), %r8d   */
  0xff, 0x93, 0x70, 0x02, 0x00, 0x00,       /*42: callq   +0x270(%rbx)             */
  0x48, 0x89, 0xdf,                         /*48: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*4b: add     $0x10, %rsp              */
  0x5b,                                     /*4f: pop     %rbx                     */
};


static uint8_t op_aref[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x30,                   /*05: sub     $0x30, %rsp              */
  0x49, 0x89, 0xff,                         /*09: mov     %rdi, %r15               */
  0x4c, 0x89, 0x7c, 0x24, 0x28,             /*0c: mov     %r15, +0x28(%rsp)        */
  0x49, 0x8b, 0x47, 0x10,                   /*11: mov     +0x10(%r15), %rax        */
  0x8b, 0x00,                               /*15: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*17: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x24,                   /*1a: mov     %eax, +0x24(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*1e: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*23: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*27: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*29: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*2c: and     $0x7f, %eax              */
  0x89, 0x44, 0x24, 0x20,                   /*2f: mov     %eax, +0x20(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*33: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*38: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x18,                   /*3c: mov     +0x18(%rax), %rax        */
  0x8b, 0x09,                               /*40: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x0e,                         /*42: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*45: and     $0x1ff, %ecx             */
  0x48, 0xc1, 0xe1, 0x04,                   /*4b: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x14, 0x08,                   /*4f: mov     (%rax,%rcx,1), %rdx      */
  0x48, 0x8b, 0x44, 0x08, 0x08,             /*53: mov     +0x8(%rax,%rcx,1), %rax  */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*58: mov     %rax, +0x18(%rsp)        */
  0x48, 0x89, 0x54, 0x24, 0x10,             /*5d: mov     %rdx, +0x10(%rsp)        */
  0x83, 0x7c, 0x24, 0x18, 0x0e,             /*62: cmpl    $0xe, +0x18(%rsp)        */
  0x75, 0x4a,                               /*67: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*69: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*6e: mov     +0x10(%rax), %rcx        */
  0x4c, 0x8b, 0x70, 0x18,                   /*72: mov     +0x18(%rax), %r14        */
  0x8b, 0x19,                               /*76: mov     (%rcx), %ebx             */
  0xc1, 0xeb, 0x17,                         /*78: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*7b: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x78, 0x58,                   /*7f: mov     +0x58(%rax), %rdi        */
  0x8b, 0x4c, 0x24, 0x20,                   /*83: mov     +0x20(%rsp), %ecx        */
  0x48, 0x8b, 0x74, 0x24, 0x10,             /*87: mov     +0x10(%rsp), %rsi        */
  0x8b, 0x54, 0x24, 0x18,                   /*8c: mov     +0x18(%rsp), %edx        */
  0x41, 0xff, 0x97, 0x28, 0x02, 0x00, 0x00, /*90: callq   +0x228(%r15)             */
  0x48, 0x89, 0x04, 0x24,                   /*97: mov     %rax, (%rsp)             */
  0x89, 0x54, 0x24, 0x08,                   /*9b: mov     %edx, +0x8(%rsp)         */
  0x48, 0x8b, 0x04, 0x24,                   /*9f: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*a3: mov     +0x8(%rsp), %rcx         */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*a8: mov     %rcx, +0x8(%r14,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1e,                   /*ad: mov     %rax, (%r14,%rbx,1)      */
  0xeb, 0x65,                               /*b1: jmp                              */
  0x83, 0x7c, 0x24, 0x20, 0x00,             /*b3: cmpl    $0, +0x20(%rsp)          */
  0x74, 0x35,                               /*b8: je                               */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*ba: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x28,             /*bf: mov     +0x28(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*c4: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*c8: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00,/*cc: movl    $0, +0x8(%rcx,%rax,1)    */
  0x48, 0x63, 0x44, 0x24, 0x24,             /*d4: movslq  +0x24(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x28,             /*d9: mov     +0x28(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*de: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*e2: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*e6: movl    $0, (%rcx,%rax,1)        */
  0xeb, 0x29,                               /*ed: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*ef: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*f4: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x18,                   /*f8: mov     +0x18(%rax), %rax        */
  0x8b, 0x09,                               /*fc: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x17,                         /*fe: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*101: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x54, 0x24, 0x10,             /*105: mov     +0x10(%rsp), %rdx        */
  0x48, 0x8b, 0x74, 0x24, 0x18,             /*10a: mov     +0x18(%rsp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x08,             /*10f: mov     %rsi, +0x8(%rax,%rcx,1)  */
  0x48, 0x89, 0x14, 0x08,                   /*114: mov     %rdx, (%rax,%rcx,1)      */
  0x4c, 0x89, 0xff,                         /*118: mov     %r15, %rdi               */
  0x48, 0x83, 0xc4, 0x30,                   /*11b: add     $0x30, %rsp              */
  0x5b,                                     /*11f: pop     %rbx                     */
  0x41, 0x5e,                               /*120: pop     %r14                     */
  0x41, 0x5f,                               /*122: pop     %r15                     */
};


static uint8_t op_aset[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x7b, 0x58,                   /*0d: mov     +0x58(%rbx), %rdi        */
  0x48, 0x8b, 0x4b, 0x10,                   /*11: mov     +0x10(%rbx), %rcx        */
  0x4c, 0x8b, 0x4b, 0x18,                   /*15: mov     +0x18(%rbx), %r9         */
  0x8b, 0x01,                               /*19: mov     (%rcx), %eax             */
  0x89, 0xc2,                               /*1b: mov     %eax, %edx               */
  0xc1, 0xea, 0x0e,                         /*1d: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*20: and     $0x1ff, %edx             */
  0x48, 0xc1, 0xe2, 0x04,                   /*26: shl     $0x4, %rdx               */
  0x89, 0xc1,                               /*2a: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x07,                         /*2c: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*2f: and     $0x7f, %ecx              */
  0xc1, 0xe8, 0x17,                         /*32: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*35: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x11,                   /*39: mov     (%r9,%rdx,1), %rsi       */
  0x41, 0x8b, 0x54, 0x11, 0x08,             /*3d: mov     +0x8(%r9,%rdx,1), %edx   */
  0x4d, 0x8b, 0x04, 0x01,                   /*42: mov     (%r9,%rax,1), %r8        */
  0x45, 0x8b, 0x4c, 0x01, 0x08,             /*46: mov     +0x8(%r9,%rax,1), %r9d   */
  0xff, 0x93, 0x60, 0x02, 0x00, 0x00,       /*4b: callq   +0x260(%rbx)             */
  0x48, 0x89, 0xdf,                         /*51: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*54: add     $0x10, %rsp              */
  0x5b,                                     /*58: pop     %rbx                     */
};


static uint8_t op_apost[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x70,                   /*05: sub     $0x70, %rsp              */
  0x49, 0x89, 0xfe,                         /*09: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x68,             /*0c: mov     %r14, +0x68(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*11: mov     +0x10(%r14), %rax        */
  0x8b, 0x00,                               /*15: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*17: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x64,                   /*1a: mov     %eax, +0x64(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x64,             /*1e: movslq  +0x64(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x68,             /*23: mov     +0x68(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*28: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*2c: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*30: mov     (%rcx,%rax,1), %rdx      */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*34: mov     +0x8(%rcx,%rax,1), %rax  */
  0x48, 0x89, 0x44, 0x24, 0x58,             /*39: mov     %rax, +0x58(%rsp)        */
  0x48, 0x89, 0x54, 0x24, 0x50,             /*3e: mov     %rdx, +0x50(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*43: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*48: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*4c: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0e,                         /*4e: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*51: and     $0x1ff, %eax             */
  0x89, 0x44, 0x24, 0x4c,                   /*56: mov     %eax, +0x4c(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*5a: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*5f: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*63: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*65: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*68: and     $0x7f, %eax              */
  0x89, 0x44, 0x24, 0x48,                   /*6b: mov     %eax, +0x48(%rsp)        */
  0x83, 0x7c, 0x24, 0x58, 0x0e,             /*6f: cmpl    $0xe, +0x58(%rsp)        */
  0x0f, 0x85, 0xe0, 0x00, 0x00, 0x00,       /*74: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*7a: mov     +0x50(%rsp), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x30,             /*7f: mov     %rax, +0x30(%rsp)        */
  0x8b, 0x40, 0x18,                         /*84: mov     +0x18(%rax), %eax        */
  0x89, 0x44, 0x24, 0x2c,                   /*87: mov     %eax, +0x2c(%rsp)        */
  0x8b, 0x4c, 0x24, 0x4c,                   /*8b: mov     +0x4c(%rsp), %ecx        */
  0x03, 0x4c, 0x24, 0x48,                   /*8f: add     +0x48(%rsp), %ecx        */
  0x39, 0xc8,                               /*93: cmp     %ecx, %eax               */
  0x0f, 0x8e, 0x50, 0x01, 0x00, 0x00,       /*95: jle                              */
  0x48, 0x63, 0x5c, 0x24, 0x64,             /*9b: movslq  +0x64(%rsp), %rbx        */
  0x8d, 0x43, 0x01,                         /*a0: lea     +0x1(%rbx), %eax         */
  0x89, 0x44, 0x24, 0x64,                   /*a3: mov     %eax, +0x64(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*a7: mov     +0x68(%rsp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*ac: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x78, 0x18,                   /*b0: mov     +0x18(%rax), %r15        */
  0x48, 0x8b, 0x78, 0x58,                   /*b4: mov     +0x58(%rax), %rdi        */
  0x8b, 0x74, 0x24, 0x2c,                   /*b8: mov     +0x2c(%rsp), %esi        */
  0x48, 0x63, 0x54, 0x24, 0x4c,             /*bc: movslq  +0x4c(%rsp), %rdx        */
  0x29, 0xd6,                               /*c1: sub     %edx, %esi               */
  0x2b, 0x74, 0x24, 0x48,                   /*c3: sub     +0x48(%rsp), %esi        */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*c7: mov     +0x30(%rsp), %rax        */
  0x48, 0xc1, 0xe2, 0x04,                   /*cc: shl     $0x4, %rdx               */
  0x48, 0x03, 0x50, 0x28,                   /*d0: add     +0x28(%rax), %rdx        */
  0x41, 0xff, 0x96, 0x50, 0x02, 0x00, 0x00, /*d4: callq   +0x250(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*db: mov     %rax, +0x18(%rsp)        */
  0x89, 0x54, 0x24, 0x20,                   /*e0: mov     %edx, +0x20(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*e4: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x20,             /*e9: mov     +0x20(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*ee: mov     %rcx, +0x8(%r15,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1f,                   /*f3: mov     %rax, (%r15,%rbx,1)      */
  0xeb, 0x4d,                               /*f7: jmp                              */
  0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*f9: nopl    +0(%rax)                 */
  0x48, 0x63, 0x44, 0x24, 0x64,             /*100: movslq  +0x64(%rsp), %rax        */
  0x8d, 0x48, 0x01,                         /*105: lea     +0x1(%rax), %ecx         */
  0x89, 0x4c, 0x24, 0x64,                   /*108: mov     %ecx, +0x64(%rsp)        */
  0x48, 0x8b, 0x4c, 0x24, 0x68,             /*10c: mov     +0x68(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*111: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*115: shl     $0x4, %rax               */
  0x48, 0x63, 0x54, 0x24, 0x2c,             /*119: movslq  +0x2c(%rsp), %rdx        */
  0x48, 0x63, 0x74, 0x24, 0x48,             /*11e: movslq  +0x48(%rsp), %rsi        */
  0x48, 0x29, 0xf2,                         /*123: sub     %rsi, %rdx               */
  0x48, 0xc1, 0xe2, 0x04,                   /*126: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x74, 0x24, 0x30,             /*12a: mov     +0x30(%rsp), %rsi        */
  0x48, 0x8b, 0x76, 0x28,                   /*12f: mov     +0x28(%rsi), %rsi        */
  0x48, 0x8b, 0x7c, 0x32, 0xf0,             /*133: mov     -0x10(%rdx,%rsi,1), %rdi */
  0x48, 0x8b, 0x54, 0x32, 0xf8,             /*138: mov     -0x8(%rdx,%rsi,1), %rdx  */
  0x48, 0x89, 0x54, 0x01, 0x08,             /*13d: mov     %rdx, +0x8(%rcx,%rax,1)  */
  0x48, 0x89, 0x3c, 0x01,                   /*142: mov     %rdi, (%rcx,%rax,1)      */
  0x8b, 0x44, 0x24, 0x48,                   /*146: mov     +0x48(%rsp), %eax        */
  0x8d, 0x48, 0xff,                         /*14a: lea     -0x1(%rax), %ecx         */
  0x89, 0x4c, 0x24, 0x48,                   /*14d: mov     %ecx, +0x48(%rsp)        */
  0x85, 0xc0,                               /*151: test    %eax, %eax               */
  0x75, 0xab,                               /*153: jne                              */
  0xe9, 0x97, 0x01, 0x00, 0x00,             /*155: jmpq                             */
  0x48, 0x63, 0x5c, 0x24, 0x64,             /*15a: movslq  +0x64(%rsp), %rbx        */
  0x8d, 0x43, 0x01,                         /*15f: lea     +0x1(%rbx), %eax         */
  0x89, 0x44, 0x24, 0x64,                   /*162: mov     %eax, +0x64(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*166: mov     +0x68(%rsp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*16b: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x78, 0x18,                   /*16f: mov     +0x18(%rax), %r15        */
  0x48, 0x8b, 0x78, 0x58,                   /*173: mov     +0x58(%rax), %rdi        */
  0x31, 0xf6,                               /*177: xor     %esi, %esi               */
  0x41, 0xff, 0x96, 0xd8, 0x00, 0x00, 0x00, /*179: callq   +0xd8(%r14)              */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*180: mov     %rax, +0x38(%rsp)        */
  0x89, 0x54, 0x24, 0x40,                   /*185: mov     %edx, +0x40(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*189: mov     +0x38(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*18e: mov     +0x40(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*193: mov     %rcx, +0x8(%r15,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1f,                   /*198: mov     %rax, (%r15,%rbx,1)      */
  0xeb, 0x39,                               /*19c: jmp                              */
  0x66, 0x90,                               /*19e: xchg    %ax, %ax                 */
  0x48, 0x63, 0x44, 0x24, 0x64,             /*1a0: movslq  +0x64(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x68,             /*1a5: mov     +0x68(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*1aa: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1ae: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00,/*1b2: movl    $0, +0x8(%rcx,%rax,1)    */
  0x48, 0x63, 0x44, 0x24, 0x64,             /*1ba: movslq  +0x64(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x68,             /*1bf: mov     +0x68(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*1c4: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1c8: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*1cc: movl    $0, (%rcx,%rax,1)        */
  0xff, 0x44, 0x24, 0x64,                   /*1d3: incl    +0x64(%rsp)              */
  0x8b, 0x44, 0x24, 0x48,                   /*1d7: mov     +0x48(%rsp), %eax        */
  0x8d, 0x48, 0xff,                         /*1db: lea     -0x1(%rax), %ecx         */
  0x89, 0x4c, 0x24, 0x48,                   /*1de: mov     %ecx, +0x48(%rsp)        */
  0x85, 0xc0,                               /*1e2: test    %eax, %eax               */
  0x75, 0xba,                               /*1e4: jne                              */
  0xe9, 0x06, 0x01, 0x00, 0x00,             /*1e6: jmpq                             */
  0x48, 0x63, 0x5c, 0x24, 0x64,             /*1eb: movslq  +0x64(%rsp), %rbx        */
  0x8d, 0x43, 0x01,                         /*1f0: lea     +0x1(%rbx), %eax         */
  0x89, 0x44, 0x24, 0x64,                   /*1f3: mov     %eax, +0x64(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*1f7: mov     +0x68(%rsp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*1fc: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x78, 0x18,                   /*200: mov     +0x18(%rax), %r15        */
  0x48, 0x8b, 0x78, 0x58,                   /*204: mov     +0x58(%rax), %rdi        */
  0x31, 0xf6,                               /*208: xor     %esi, %esi               */
  0x41, 0xff, 0x96, 0xd8, 0x00, 0x00, 0x00, /*20a: callq   +0xd8(%r14)              */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*211: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*216: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*21a: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*21f: mov     +0x10(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*224: mov     %rcx, +0x8(%r15,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1f,                   /*229: mov     %rax, (%r15,%rbx,1)      */
  0xc7, 0x44, 0x24, 0x28, 0x00, 0x00, 0x00, 0x00,/*22d: movl    $0, +0x28(%rsp)          */
  0xeb, 0x4e,                               /*235: jmp                              */
  0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*237: nopw    +0(%rax,%rax,1)          */
  0x48, 0x63, 0x44, 0x24, 0x64,             /*240: movslq  +0x64(%rsp), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x28,             /*245: movslq  +0x28(%rsp), %rcx        */
  0x48, 0x01, 0xc8,                         /*24a: add     %rcx, %rax               */
  0x48, 0x8b, 0x54, 0x24, 0x68,             /*24d: mov     +0x68(%rsp), %rdx        */
  0x48, 0x8b, 0x52, 0x18,                   /*252: mov     +0x18(%rdx), %rdx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*256: shl     $0x4, %rax               */
  0x48, 0x63, 0x74, 0x24, 0x4c,             /*25a: movslq  +0x4c(%rsp), %rsi        */
  0x48, 0x01, 0xce,                         /*25f: add     %rcx, %rsi               */
  0x48, 0x8b, 0x4c, 0x24, 0x30,             /*262: mov     +0x30(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*267: mov     +0x28(%rcx), %rcx        */
  0x48, 0xc1, 0xe6, 0x04,                   /*26b: shl     $0x4, %rsi               */
  0x48, 0x8b, 0x3c, 0x31,                   /*26f: mov     (%rcx,%rsi,1), %rdi      */
  0x48, 0x8b, 0x4c, 0x31, 0x08,             /*273: mov     +0x8(%rcx,%rsi,1), %rcx  */
  0x48, 0x89, 0x4c, 0x02, 0x08,             /*278: mov     %rcx, +0x8(%rdx,%rax,1)  */
  0x48, 0x89, 0x3c, 0x02,                   /*27d: mov     %rdi, (%rdx,%rax,1)      */
  0xff, 0x44, 0x24, 0x28,                   /*281: incl    +0x28(%rsp)              */
  0x8b, 0x44, 0x24, 0x28,                   /*285: mov     +0x28(%rsp), %eax        */
  0x03, 0x44, 0x24, 0x4c,                   /*289: add     +0x4c(%rsp), %eax        */
  0x3b, 0x44, 0x24, 0x2c,                   /*28d: cmp     +0x2c(%rsp), %eax        */
  0x7c, 0xad,                               /*291: jl                               */
  0xeb, 0x52,                               /*293: jmp                              */
  0x66, 0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,/*295: data16  "nopw %cs:0x0(%rax,%rax,1)" */
  0x48, 0x63, 0x44, 0x24, 0x64,             /*2a0: movslq  +0x64(%rsp), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x28,             /*2a5: movslq  +0x28(%rsp), %rcx        */
  0x48, 0x01, 0xc1,                         /*2aa: add     %rax, %rcx               */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*2ad: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2b2: mov     +0x18(%rax), %rax        */
  0x48, 0xc1, 0xe1, 0x04,                   /*2b6: shl     $0x4, %rcx               */
  0xc7, 0x44, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00,/*2ba: movl    $0, +0x8(%rax,%rcx,1)    */
  0x48, 0x63, 0x44, 0x24, 0x64,             /*2c2: movslq  +0x64(%rsp), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x28,             /*2c7: movslq  +0x28(%rsp), %rcx        */
  0x48, 0x01, 0xc1,                         /*2cc: add     %rax, %rcx               */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*2cf: mov     +0x68(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2d4: mov     +0x18(%rax), %rax        */
  0x48, 0xc1, 0xe1, 0x04,                   /*2d8: shl     $0x4, %rcx               */
  0xc7, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, /*2dc: movl    $0, (%rax,%rcx,1)        */
  0xff, 0x44, 0x24, 0x28,                   /*2e3: incl    +0x28(%rsp)              */
  0x8b, 0x44, 0x24, 0x28,                   /*2e7: mov     +0x28(%rsp), %eax        */
  0x3b, 0x44, 0x24, 0x48,                   /*2eb: cmp     +0x48(%rsp), %eax        */
  0x7c, 0xaf,                               /*2ef: jl                               */
  0x48, 0x8b, 0x44, 0x24, 0x68,             /*2f1: mov     +0x68(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*2f6: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*2f9: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*2fd: mov     %ecx, +0xdc(%rax)        */
  0x4c, 0x89, 0xf7,                         /*303: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x70,                   /*306: add     $0x70, %rsp              */
  0x5b,                                     /*30a: pop     %rbx                     */
  0x41, 0x5e,                               /*30b: pop     %r14                     */
  0x41, 0x5f,                               /*30d: pop     %r15                     */
};


static uint8_t op_string[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*05: sub     $0x20, %rsp              */
  0x49, 0x89, 0xff,                         /*09: mov     %rdi, %r15               */
  0x4c, 0x89, 0x7c, 0x24, 0x18,             /*0c: mov     %r15, +0x18(%rsp)        */
  0x49, 0x8b, 0x47, 0x10,                   /*11: mov     +0x10(%r15), %rax        */
  0x4d, 0x8b, 0x77, 0x18,                   /*15: mov     +0x18(%r15), %r14        */
  0x8b, 0x00,                               /*19: mov     (%rax), %eax             */
  0x89, 0xc3,                               /*1b: mov     %eax, %ebx               */
  0xc1, 0xeb, 0x17,                         /*1d: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*20: shl     $0x4, %rbx               */
  0x49, 0x8b, 0x7f, 0x58,                   /*24: mov     +0x58(%r15), %rdi        */
  0xc1, 0xe8, 0x07,                         /*28: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*2b: movzwl  %ax, %eax                */
  0x49, 0x8b, 0x4f, 0x20,                   /*2e: mov     +0x20(%r15), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*32: shl     $0x4, %rax               */
  0x48, 0x8b, 0x34, 0x01,                   /*36: mov     (%rcx,%rax,1), %rsi      */
  0x8b, 0x54, 0x01, 0x08,                   /*3a: mov     +0x8(%rcx,%rax,1), %edx  */
  0x41, 0xff, 0x97, 0xe8, 0x01, 0x00, 0x00, /*3e: callq   +0x1e8(%r15)             */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*45: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*4a: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*4e: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*53: mov     +0x10(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*58: mov     %rcx, +0x8(%r14,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1e,                   /*5d: mov     %rax, (%r14,%rbx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*61: mov     +0x18(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*66: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*69: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*6d: mov     %ecx, +0xdc(%rax)        */
  0x4c, 0x89, 0xff,                         /*73: mov     %r15, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*76: add     $0x20, %rsp              */
  0x5b,                                     /*7a: pop     %rbx                     */
  0x41, 0x5e,                               /*7b: pop     %r14                     */
  0x41, 0x5f,                               /*7d: pop     %r15                     */
};


static uint8_t op_strcat[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x7b, 0x58,                   /*0d: mov     +0x58(%rbx), %rdi        */
  0x48, 0x8b, 0x4b, 0x10,                   /*11: mov     +0x10(%rbx), %rcx        */
  0x4c, 0x8b, 0x43, 0x18,                   /*15: mov     +0x18(%rbx), %r8         */
  0x8b, 0x01,                               /*19: mov     (%rcx), %eax             */
  0x89, 0xc1,                               /*1b: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x17,                         /*1d: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*20: shl     $0x4, %rcx               */
  0xc1, 0xe8, 0x0e,                         /*24: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*27: and     $0x1ff, %eax             */
  0x48, 0xc1, 0xe0, 0x04,                   /*2c: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x08,                   /*30: mov     (%r8,%rcx,1), %rsi       */
  0x41, 0x8b, 0x54, 0x08, 0x08,             /*34: mov     +0x8(%r8,%rcx,1), %edx   */
  0x49, 0x8b, 0x0c, 0x00,                   /*39: mov     (%r8,%rax,1), %rcx       */
  0x45, 0x8b, 0x44, 0x00, 0x08,             /*3d: mov     +0x8(%r8,%rax,1), %r8d   */
  0xff, 0x93, 0x18, 0x02, 0x00, 0x00,       /*42: callq   +0x218(%rbx)             */
  0x48, 0x89, 0xdf,                         /*48: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*4b: add     $0x10, %rsp              */
  0x5b,                                     /*4f: pop     %rbx                     */
};


static uint8_t op_hash[] = {
  0x41, 0x56,                               /*00: push    %r14                     */
  0x53,                                     /*02: push    %rbx                     */
  0x48, 0x83, 0xec, 0x38,                   /*03: sub     $0x38, %rsp              */
  0x49, 0x89, 0xfe,                         /*07: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x30,             /*0a: mov     %r14, +0x30(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*0f: mov     +0x10(%r14), %rax        */
  0x8b, 0x00,                               /*13: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0e,                         /*15: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*18: and     $0x1ff, %eax             */
  0x89, 0x44, 0x24, 0x2c,                   /*1d: mov     %eax, +0x2c(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*21: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*26: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*2a: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*2c: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*2f: and     $0x7f, %eax              */
  0x89, 0x44, 0x24, 0x28,                   /*32: mov     %eax, +0x28(%rsp)        */
  0x01, 0xc0,                               /*36: add     %eax, %eax               */
  0x03, 0x44, 0x24, 0x2c,                   /*38: add     +0x2c(%rsp), %eax        */
  0x89, 0x44, 0x24, 0x24,                   /*3c: mov     %eax, +0x24(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*40: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*45: mov     +0x58(%rax), %rdi        */
  0x8b, 0x74, 0x24, 0x28,                   /*49: mov     +0x28(%rsp), %esi        */
  0x41, 0xff, 0x96, 0x68, 0x01, 0x00, 0x00, /*4d: callq   +0x168(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x10,             /*54: mov     %rax, +0x10(%rsp)        */
  0x89, 0x54, 0x24, 0x18,                   /*59: mov     %edx, +0x18(%rsp)        */
  0xeb, 0x48,                               /*5d: jmp                              */
  0x90,                                     /*5f: nop                              */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*60: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x58, 0x18,                   /*65: mov     +0x18(%rax), %rbx        */
  0x48, 0x8b, 0x78, 0x58,                   /*69: mov     +0x58(%rax), %rdi        */
  0x48, 0x63, 0x44, 0x24, 0x2c,             /*6d: movslq  +0x2c(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*72: shl     $0x4, %rax               */
  0x48, 0x8b, 0x74, 0x24, 0x10,             /*76: mov     +0x10(%rsp), %rsi        */
  0x8b, 0x54, 0x24, 0x18,                   /*7b: mov     +0x18(%rsp), %edx        */
  0x48, 0x8b, 0x0c, 0x03,                   /*7f: mov     (%rbx,%rax,1), %rcx      */
  0x44, 0x8b, 0x44, 0x03, 0x08,             /*83: mov     +0x8(%rbx,%rax,1), %r8d  */
  0x4c, 0x8b, 0x4c, 0x03, 0x10,             /*88: mov     +0x10(%rbx,%rax,1), %r9  */
  0x48, 0x8b, 0x44, 0x03, 0x18,             /*8d: mov     +0x18(%rbx,%rax,1), %rax */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*92: mov     %rax, +0x8(%rsp)         */
  0x4c, 0x89, 0x0c, 0x24,                   /*97: mov     %r9, (%rsp)              */
  0x41, 0xff, 0x96, 0xc0, 0x01, 0x00, 0x00, /*9b: callq   +0x1c0(%r14)             */
  0x83, 0x44, 0x24, 0x2c, 0x02,             /*a2: addl    $0x2, +0x2c(%rsp)        */
  0x8b, 0x44, 0x24, 0x2c,                   /*a7: mov     +0x2c(%rsp), %eax        */
  0x3b, 0x44, 0x24, 0x24,                   /*ab: cmp     +0x24(%rsp), %eax        */
  0x7c, 0xaf,                               /*af: jl                               */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*b1: mov     +0x30(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*b6: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x18,                   /*ba: mov     +0x18(%rax), %rax        */
  0x8b, 0x09,                               /*be: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x17,                         /*c0: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*c3: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x54, 0x24, 0x10,             /*c7: mov     +0x10(%rsp), %rdx        */
  0x48, 0x8b, 0x74, 0x24, 0x18,             /*cc: mov     +0x18(%rsp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x08,             /*d1: mov     %rsi, +0x8(%rax,%rcx,1)  */
  0x48, 0x89, 0x14, 0x08,                   /*d6: mov     %rdx, (%rax,%rcx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*da: mov     +0x30(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*df: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*e2: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*e6: mov     %ecx, +0xdc(%rax)        */
  0x4c, 0x89, 0xf7,                         /*ec: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x38,                   /*ef: add     $0x38, %rsp              */
  0x5b,                                     /*f3: pop     %rbx                     */
  0x41, 0x5e,                               /*f4: pop     %r14                     */
};


static uint8_t op_lambda[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x41, 0x54,                               /*04: push    %r12                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x48,                   /*07: sub     $0x48, %rsp              */
  0x49, 0x89, 0xfc,                         /*0b: mov     %rdi, %r12               */
  0x4c, 0x89, 0x64, 0x24, 0x40,             /*0e: mov     %r12, +0x40(%rsp)        */
  0x49, 0x8b, 0x44, 0x24, 0x10,             /*13: mov     +0x10(%r12), %rax        */
  0x8b, 0x00,                               /*18: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*1a: shr     $0x7, %eax               */
  0x83, 0xe0, 0x03,                         /*1d: and     $0x3, %eax               */
  0x89, 0x44, 0x24, 0x34,                   /*20: mov     %eax, +0x34(%rsp)        */
  0xf6, 0x44, 0x24, 0x34, 0x02,             /*24: testb   $0x2, +0x34(%rsp)        */
  0x74, 0x32,                               /*29: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*2b: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*30: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x48, 0x08,                   /*34: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x40, 0x10,                   /*38: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*3c: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x09,                         /*3e: shr     $0x9, %eax               */
  0x25, 0xff, 0x3f, 0x00, 0x00,             /*41: and     $0x3fff, %eax            */
  0x48, 0x8b, 0x49, 0x20,                   /*46: mov     +0x20(%rcx), %rcx        */
  0x48, 0x8b, 0x34, 0xc1,                   /*4a: mov     (%rcx,%rax,8), %rsi      */
  0x41, 0xff, 0x54, 0x24, 0x70,             /*4e: callq   +0x70(%r12)              */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*53: mov     %rax, +0x38(%rsp)        */
  0xe9, 0xad, 0x00, 0x00, 0x00,             /*58: jmpq                             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*5d: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*62: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x48, 0x08,                   /*66: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x40, 0x10,                   /*6a: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*6e: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x09,                         /*70: shr     $0x9, %eax               */
  0x25, 0xff, 0x3f, 0x00, 0x00,             /*73: and     $0x3fff, %eax            */
  0x48, 0x8b, 0x49, 0x20,                   /*78: mov     +0x20(%rcx), %rcx        */
  0x48, 0x8b, 0x34, 0xc1,                   /*7c: mov     (%rcx,%rax,8), %rsi      */
  0x41, 0xff, 0x94, 0x24, 0x48, 0x01, 0x00, 0x00,/*80: callq   +0x148(%r12)             */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*88: mov     %rax, +0x38(%rsp)        */
  0xf6, 0x44, 0x24, 0x34, 0x01,             /*8d: testb   $0x1, +0x34(%rsp)        */
  0x74, 0x76,                               /*92: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*94: mov     +0x38(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*99: mov     +0x20(%rax), %rax        */
  0x0f, 0xb6, 0x00,                         /*9d: movzbl  (%rax), %eax             */
  0x83, 0xf8, 0x0c,                         /*a0: cmp     $0xc, %eax               */
  0x75, 0x65,                               /*a3: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*a5: mov     +0x40(%rsp), %rax        */
  0x4c, 0x8b, 0x70, 0x58,                   /*aa: mov     +0x58(%rax), %r14        */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*ae: mov     +0x38(%rsp), %rax        */
  0x4c, 0x8b, 0x78, 0x20,                   /*b3: mov     +0x20(%rax), %r15        */
  0x49, 0x8b, 0xb4, 0x24, 0xe0, 0x02, 0x00, 0x00,/*b7: mov     +0x2e0(%r12), %rsi       */
  0xba, 0x0c, 0x00, 0x00, 0x00,             /*bf: mov     $0xc, %edx               */
  0x4c, 0x89, 0xf7,                         /*c4: mov     %r14, %rdi               */
  0x41, 0xff, 0x94, 0x24, 0xa8, 0x02, 0x00, 0x00,/*c7: callq   +0x2a8(%r12)             */
  0x4c, 0x89, 0xf7,                         /*cf: mov     %r14, %rdi               */
  0x4c, 0x89, 0xfe,                         /*d2: mov     %r15, %rsi               */
  0x89, 0xc2,                               /*d5: mov     %eax, %edx               */
  0x41, 0xff, 0x94, 0x24, 0x58, 0x01, 0x00, 0x00,/*d7: callq   +0x158(%r12)             */
  0x48, 0x89, 0x44, 0x24, 0x10,             /*df: mov     %rax, +0x10(%rsp)        */
  0x89, 0x54, 0x24, 0x18,                   /*e4: mov     %edx, +0x18(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*e8: mov     +0x10(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*ed: mov     +0x18(%rsp), %rcx        */
  0x48, 0x89, 0x4c, 0x24, 0x28,             /*f2: mov     %rcx, +0x28(%rsp)        */
  0x48, 0x89, 0x44, 0x24, 0x20,             /*f7: mov     %rax, +0x20(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*fc: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x38,             /*101: mov     +0x38(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x20,                   /*106: mov     %rax, +0x20(%rcx)        */
  0xf6, 0x44, 0x24, 0x34, 0x01,             /*10a: testb   $0x1, +0x34(%rsp)        */
  0x74, 0x1f,                               /*10f: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x38,             /*111: mov     +0x38(%rsp), %rax        */
  0x8b, 0x08,                               /*116: mov     (%rax), %ecx             */
  0x89, 0xca,                               /*118: mov     %ecx, %edx               */
  0x81, 0xe2, 0x00, 0xf8, 0xf7, 0xff,       /*11a: and     $0xfff7f800, %edx        */
  0x81, 0xe1, 0xff, 0x07, 0x00, 0x00,       /*120: and     $0x7ff, %ecx             */
  0x09, 0xd1,                               /*126: or      %edx, %ecx               */
  0x81, 0xc9, 0x00, 0x00, 0x08, 0x00,       /*128: or      $0x80000, %ecx           */
  0x89, 0x08,                               /*12e: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*130: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*135: mov     +0x10(%rax), %rcx        */
  0x4c, 0x8b, 0x70, 0x18,                   /*139: mov     +0x18(%rax), %r14        */
  0x8b, 0x19,                               /*13d: mov     (%rcx), %ebx             */
  0xc1, 0xeb, 0x17,                         /*13f: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*142: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x7c, 0x24, 0x38,             /*146: mov     +0x38(%rsp), %rdi        */
  0x41, 0xff, 0x94, 0x24, 0x48, 0x02, 0x00, 0x00,/*14b: callq   +0x248(%r12)             */
  0x48, 0x89, 0x04, 0x24,                   /*153: mov     %rax, (%rsp)             */
  0x89, 0x54, 0x24, 0x08,                   /*157: mov     %edx, +0x8(%rsp)         */
  0x48, 0x8b, 0x04, 0x24,                   /*15b: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*15f: mov     +0x8(%rsp), %rcx         */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*164: mov     %rcx, +0x8(%r14,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1e,                   /*169: mov     %rax, (%r14,%rbx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*16d: mov     +0x40(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*172: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*175: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*179: mov     %ecx, +0xdc(%rax)        */
  0x4c, 0x89, 0xe7,                         /*17f: mov     %r12, %rdi               */
  0x48, 0x83, 0xc4, 0x48,                   /*182: add     $0x48, %rsp              */
  0x5b,                                     /*186: pop     %rbx                     */
  0x41, 0x5c,                               /*187: pop     %r12                     */
  0x41, 0x5e,                               /*189: pop     %r14                     */
  0x41, 0x5f,                               /*18b: pop     %r15                     */
};


static uint8_t op_range[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*05: sub     $0x20, %rsp              */
  0x49, 0x89, 0xfe,                         /*09: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x18,             /*0c: mov     %r14, +0x18(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*11: mov     +0x10(%r14), %rax        */
  0x8b, 0x00,                               /*15: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0e,                         /*17: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*1a: and     $0x1ff, %eax             */
  0x89, 0x44, 0x24, 0x14,                   /*1f: mov     %eax, +0x14(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*23: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*28: mov     +0x10(%rax), %rcx        */
  0x4c, 0x8b, 0x78, 0x18,                   /*2c: mov     +0x18(%rax), %r15        */
  0x44, 0x8b, 0x09,                         /*30: mov     (%rcx), %r9d             */
  0x44, 0x89, 0xcb,                         /*33: mov     %r9d, %ebx               */
  0xc1, 0xeb, 0x17,                         /*36: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*39: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x78, 0x58,                   /*3d: mov     +0x58(%rax), %rdi        */
  0x48, 0x63, 0x44, 0x24, 0x14,             /*41: movslq  +0x14(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*46: shl     $0x4, %rax               */
  0x41, 0xc1, 0xe9, 0x07,                   /*4a: shr     $0x7, %r9d               */
  0x41, 0x83, 0xe1, 0x7f,                   /*4e: and     $0x7f, %r9d              */
  0x49, 0x8b, 0x34, 0x07,                   /*52: mov     (%r15,%rax,1), %rsi      */
  0x41, 0x8b, 0x54, 0x07, 0x08,             /*56: mov     +0x8(%r15,%rax,1), %edx  */
  0x49, 0x8b, 0x4c, 0x07, 0x10,             /*5b: mov     +0x10(%r15,%rax,1), %rcx */
  0x45, 0x8b, 0x44, 0x07, 0x18,             /*60: mov     +0x18(%r15,%rax,1), %r8d */
  0x41, 0xff, 0x96, 0x88, 0x01, 0x00, 0x00, /*65: callq   +0x188(%r14)             */
  0x48, 0x89, 0x04, 0x24,                   /*6c: mov     %rax, (%rsp)             */
  0x89, 0x54, 0x24, 0x08,                   /*70: mov     %edx, +0x8(%rsp)         */
  0x48, 0x8b, 0x04, 0x24,                   /*74: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*78: mov     +0x8(%rsp), %rcx         */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*7d: mov     %rcx, +0x8(%r15,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1f,                   /*82: mov     %rax, (%r15,%rbx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*86: mov     +0x18(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*8b: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*8e: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*92: mov     %ecx, +0xdc(%rax)        */
  0x4c, 0x89, 0xf7,                         /*98: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*9b: add     $0x20, %rsp              */
  0x5b,                                     /*9f: pop     %rbx                     */
  0x41, 0x5e,                               /*a0: pop     %r14                     */
  0x41, 0x5f,                               /*a2: pop     %r15                     */
};


static uint8_t op_oclass[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*05: sub     $0x20, %rsp              */
  0x49, 0x89, 0xff,                         /*09: mov     %rdi, %r15               */
  0x4c, 0x89, 0x7c, 0x24, 0x18,             /*0c: mov     %r15, +0x18(%rsp)        */
  0x49, 0x8b, 0x47, 0x10,                   /*11: mov     +0x10(%r15), %rax        */
  0x4d, 0x8b, 0x77, 0x18,                   /*15: mov     +0x18(%r15), %r14        */
  0x8b, 0x18,                               /*19: mov     (%rax), %ebx             */
  0xc1, 0xeb, 0x17,                         /*1b: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1e: shl     $0x4, %rbx               */
  0x49, 0x8b, 0x47, 0x58,                   /*22: mov     +0x58(%r15), %rax        */
  0x48, 0x8b, 0x78, 0x40,                   /*26: mov     +0x40(%rax), %rdi        */
  0x41, 0xff, 0x97, 0x48, 0x02, 0x00, 0x00, /*2a: callq   +0x248(%r15)             */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*31: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*36: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*3a: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*3f: mov     +0x10(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*44: mov     %rcx, +0x8(%r14,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1e,                   /*49: mov     %rax, (%r14,%rbx,1)      */
  0x4c, 0x89, 0xff,                         /*4d: mov     %r15, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*50: add     $0x20, %rsp              */
  0x5b,                                     /*54: pop     %rbx                     */
  0x41, 0x5e,                               /*55: pop     %r14                     */
  0x41, 0x5f,                               /*57: pop     %r15                     */
};


static uint8_t op_class[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x60,                   /*05: sub     $0x60, %rsp              */
  0x49, 0x89, 0xfe,                         /*09: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x58,             /*0c: mov     %r14, +0x58(%rsp)        */
  0x48, 0xc7, 0x44, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00,/*11: movq    $0, +0x50(%rsp)          */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*1a: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*1f: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*23: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*25: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x4c,                   /*28: mov     %eax, +0x4c(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*2c: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*31: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x28,                   /*35: mov     +0x28(%rax), %rax        */
  0x8b, 0x09,                               /*39: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x0e,                         /*3b: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*3e: and     $0x1ff, %ecx             */
  0x8b, 0x04, 0x88,                         /*44: mov     (%rax,%rcx,4), %eax      */
  0x89, 0x44, 0x24, 0x24,                   /*47: mov     %eax, +0x24(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x4c,             /*4b: movslq  +0x4c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*50: mov     +0x58(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*55: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*59: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*5d: mov     (%rcx,%rax,1), %rdx      */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*61: mov     +0x8(%rcx,%rax,1), %rax  */
  0x48, 0x89, 0x44, 0x24, 0x40,             /*66: mov     %rax, +0x40(%rsp)        */
  0x48, 0x89, 0x54, 0x24, 0x38,             /*6b: mov     %rdx, +0x38(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x4c,             /*70: movslq  +0x4c(%rsp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*75: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*79: mov     +0x58(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*7e: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x54, 0x08, 0x10,             /*82: mov     +0x10(%rax,%rcx,1), %rdx */
  0x48, 0x8b, 0x44, 0x08, 0x18,             /*87: mov     +0x18(%rax,%rcx,1), %rax */
  0x48, 0x89, 0x44, 0x24, 0x30,             /*8c: mov     %rax, +0x30(%rsp)        */
  0x48, 0x89, 0x54, 0x24, 0x28,             /*91: mov     %rdx, +0x28(%rsp)        */
  0x83, 0x7c, 0x24, 0x40, 0x00,             /*96: cmpl    $0, +0x40(%rsp)          */
  0x75, 0x40,                               /*9b: jne                              */
  0x83, 0x7c, 0x24, 0x38, 0x00,             /*9d: cmpl    $0, +0x38(%rsp)          */
  0x75, 0x39,                               /*a2: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*a4: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*a9: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*ad: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*b1: mov     +0x20(%rax), %rax        */
  0x48, 0x8b, 0x78, 0x48,                   /*b5: mov     +0x48(%rax), %rdi        */
  0x41, 0xff, 0x96, 0x48, 0x02, 0x00, 0x00, /*b9: callq   +0x248(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x10,             /*c0: mov     %rax, +0x10(%rsp)        */
  0x89, 0x54, 0x24, 0x18,                   /*c5: mov     %edx, +0x18(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*c9: mov     +0x10(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*ce: mov     +0x18(%rsp), %rcx        */
  0x48, 0x89, 0x4c, 0x24, 0x40,             /*d3: mov     %rcx, +0x40(%rsp)        */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*d8: mov     %rax, +0x38(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*dd: mov     +0x58(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*e2: mov     +0x58(%rax), %rdi        */
  0x44, 0x8b, 0x4c, 0x24, 0x24,             /*e6: mov     +0x24(%rsp), %r9d        */
  0x48, 0x8b, 0x74, 0x24, 0x38,             /*eb: mov     +0x38(%rsp), %rsi        */
  0x8b, 0x54, 0x24, 0x40,                   /*f0: mov     +0x40(%rsp), %edx        */
  0x48, 0x8b, 0x4c, 0x24, 0x28,             /*f4: mov     +0x28(%rsp), %rcx        */
  0x44, 0x8b, 0x44, 0x24, 0x30,             /*f9: mov     +0x30(%rsp), %r8d        */
  0x41, 0xff, 0x96, 0x90, 0x01, 0x00, 0x00, /*fe: callq   +0x190(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x50,             /*105: mov     %rax, +0x50(%rsp)        */
  0x48, 0x63, 0x5c, 0x24, 0x4c,             /*10a: movslq  +0x4c(%rsp), %rbx        */
  0x48, 0x8b, 0x4c, 0x24, 0x58,             /*10f: mov     +0x58(%rsp), %rcx        */
  0x4c, 0x8b, 0x79, 0x18,                   /*114: mov     +0x18(%rcx), %r15        */
  0x48, 0xc1, 0xe3, 0x04,                   /*118: shl     $0x4, %rbx               */
  0x48, 0x89, 0xc7,                         /*11c: mov     %rax, %rdi               */
  0x41, 0xff, 0x96, 0x48, 0x02, 0x00, 0x00, /*11f: callq   +0x248(%r14)             */
  0x48, 0x89, 0x04, 0x24,                   /*126: mov     %rax, (%rsp)             */
  0x89, 0x54, 0x24, 0x08,                   /*12a: mov     %edx, +0x8(%rsp)         */
  0x48, 0x8b, 0x04, 0x24,                   /*12e: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*132: mov     +0x8(%rsp), %rcx         */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*137: mov     %rcx, +0x8(%r15,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1f,                   /*13c: mov     %rax, (%r15,%rbx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x58,             /*140: mov     +0x58(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*145: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*148: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*14c: mov     %ecx, +0xdc(%rax)        */
  0x4c, 0x89, 0xf7,                         /*152: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x60,                   /*155: add     $0x60, %rsp              */
  0x5b,                                     /*159: pop     %rbx                     */
  0x41, 0x5e,                               /*15a: pop     %r14                     */
  0x41, 0x5f,                               /*15c: pop     %r15                     */
};


static uint8_t op_module[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x50,                   /*05: sub     $0x50, %rsp              */
  0x49, 0x89, 0xfe,                         /*09: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x48,             /*0c: mov     %r14, +0x48(%rsp)        */
  0x48, 0xc7, 0x44, 0x24, 0x40, 0x00, 0x00, 0x00, 0x00,/*11: movq    $0, +0x40(%rsp)          */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*1a: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*1f: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*23: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*25: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x3c,                   /*28: mov     %eax, +0x3c(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*2c: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*31: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x28,                   /*35: mov     +0x28(%rax), %rax        */
  0x8b, 0x09,                               /*39: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x0e,                         /*3b: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*3e: and     $0x1ff, %ecx             */
  0x8b, 0x04, 0x88,                         /*44: mov     (%rax,%rcx,4), %eax      */
  0x89, 0x44, 0x24, 0x24,                   /*47: mov     %eax, +0x24(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x3c,             /*4b: movslq  +0x3c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x48,             /*50: mov     +0x48(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*55: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*59: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*5d: mov     (%rcx,%rax,1), %rdx      */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*61: mov     +0x8(%rcx,%rax,1), %rax  */
  0x48, 0x89, 0x44, 0x24, 0x30,             /*66: mov     %rax, +0x30(%rsp)        */
  0x48, 0x89, 0x54, 0x24, 0x28,             /*6b: mov     %rdx, +0x28(%rsp)        */
  0x83, 0x7c, 0x24, 0x30, 0x00,             /*70: cmpl    $0, +0x30(%rsp)          */
  0x75, 0x40,                               /*75: jne                              */
  0x83, 0x7c, 0x24, 0x28, 0x00,             /*77: cmpl    $0, +0x28(%rsp)          */
  0x75, 0x39,                               /*7c: jne                              */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*7e: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*83: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*87: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*8b: mov     +0x20(%rax), %rax        */
  0x48, 0x8b, 0x78, 0x48,                   /*8f: mov     +0x48(%rax), %rdi        */
  0x41, 0xff, 0x96, 0x48, 0x02, 0x00, 0x00, /*93: callq   +0x248(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x10,             /*9a: mov     %rax, +0x10(%rsp)        */
  0x89, 0x54, 0x24, 0x18,                   /*9f: mov     %edx, +0x18(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*a3: mov     +0x10(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x18,             /*a8: mov     +0x18(%rsp), %rcx        */
  0x48, 0x89, 0x4c, 0x24, 0x30,             /*ad: mov     %rcx, +0x30(%rsp)        */
  0x48, 0x89, 0x44, 0x24, 0x28,             /*b2: mov     %rax, +0x28(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*b7: mov     +0x48(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*bc: mov     +0x58(%rax), %rdi        */
  0x8b, 0x4c, 0x24, 0x24,                   /*c0: mov     +0x24(%rsp), %ecx        */
  0x48, 0x8b, 0x74, 0x24, 0x28,             /*c4: mov     +0x28(%rsp), %rsi        */
  0x8b, 0x54, 0x24, 0x30,                   /*c9: mov     +0x30(%rsp), %edx        */
  0x41, 0xff, 0x96, 0xb0, 0x00, 0x00, 0x00, /*cd: callq   +0xb0(%r14)              */
  0x48, 0x89, 0x44, 0x24, 0x40,             /*d4: mov     %rax, +0x40(%rsp)        */
  0x48, 0x63, 0x5c, 0x24, 0x3c,             /*d9: movslq  +0x3c(%rsp), %rbx        */
  0x48, 0x8b, 0x4c, 0x24, 0x48,             /*de: mov     +0x48(%rsp), %rcx        */
  0x4c, 0x8b, 0x79, 0x18,                   /*e3: mov     +0x18(%rcx), %r15        */
  0x48, 0xc1, 0xe3, 0x04,                   /*e7: shl     $0x4, %rbx               */
  0x48, 0x89, 0xc7,                         /*eb: mov     %rax, %rdi               */
  0x41, 0xff, 0x96, 0x48, 0x02, 0x00, 0x00, /*ee: callq   +0x248(%r14)             */
  0x48, 0x89, 0x04, 0x24,                   /*f5: mov     %rax, (%rsp)             */
  0x89, 0x54, 0x24, 0x08,                   /*f9: mov     %edx, +0x8(%rsp)         */
  0x48, 0x8b, 0x04, 0x24,                   /*fd: mov     (%rsp), %rax             */
  0x48, 0x8b, 0x4c, 0x24, 0x08,             /*101: mov     +0x8(%rsp), %rcx         */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*106: mov     %rcx, +0x8(%r15,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1f,                   /*10b: mov     %rax, (%r15,%rbx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x48,             /*10f: mov     +0x48(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*114: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*117: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*11b: mov     %ecx, +0xdc(%rax)        */
  0x4c, 0x89, 0xf7,                         /*121: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x50,                   /*124: add     $0x50, %rsp              */
  0x5b,                                     /*128: pop     %rbx                     */
  0x41, 0x5e,                               /*129: pop     %r14                     */
  0x41, 0x5f,                               /*12b: pop     %r15                     */
};


static uint8_t op_exec[] = {
  0x41, 0x56,                               /*00: push    %r14                     */
  0x53,                                     /*02: push    %rbx                     */
  0x48, 0x83, 0xec, 0x48,                   /*03: sub     $0x48, %rsp              */
  0x49, 0x89, 0xfe,                         /*07: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x40,             /*0a: mov     %r14, +0x40(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*0f: mov     +0x10(%r14), %rax        */
  0x8b, 0x00,                               /*13: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x3c,                   /*18: mov     %eax, +0x3c(%rsp)        */
  0x48, 0x63, 0x44, 0x24, 0x3c,             /*1c: movslq  +0x3c(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*21: mov     +0x40(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*26: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*2a: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*2e: mov     (%rcx,%rax,1), %rdx      */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*32: mov     +0x8(%rcx,%rax,1), %rax  */
  0x48, 0x89, 0x44, 0x24, 0x28,             /*37: mov     %rax, +0x28(%rsp)        */
  0x48, 0x89, 0x54, 0x24, 0x20,             /*3c: mov     %rdx, +0x20(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*41: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*46: mov     +0x58(%rax), %rdi        */
  0x41, 0xff, 0x96, 0xe8, 0x00, 0x00, 0x00, /*4a: callq   +0xe8(%r14)              */
  0x48, 0x89, 0x44, 0x24, 0x30,             /*51: mov     %rax, +0x30(%rsp)        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*56: mov     +0x40(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x10,                   /*5b: mov     +0x10(%rcx), %rcx        */
  0x48, 0x83, 0xc1, 0x04,                   /*5f: add     $0x4, %rcx               */
  0x48, 0x89, 0x48, 0x30,                   /*63: mov     %rcx, +0x30(%rax)        */
  0x8b, 0x44, 0x24, 0x3c,                   /*67: mov     +0x3c(%rsp), %eax        */
  0x48, 0x8b, 0x4c, 0x24, 0x30,             /*6b: mov     +0x30(%rsp), %rcx        */
  0x89, 0x41, 0x44,                         /*70: mov     %eax, +0x44(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*73: mov     +0x30(%rsp), %rax        */
  0xc7, 0x00, 0x00, 0x00, 0x00, 0x00,       /*78: movl    $0, (%rax)               */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*7e: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*83: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*87: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*8b: mov     +0x8(%rax), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x30,             /*8f: mov     +0x30(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*94: mov     %rax, +0x10(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*98: mov     +0x30(%rsp), %rax        */
  0xc7, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, /*9d: movl    $0, +0x40(%rax)          */
  0x48, 0x8b, 0x44, 0x24, 0x20,             /*a4: mov     +0x20(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x30,             /*a9: mov     +0x30(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*ae: mov     %rax, +0x48(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*b2: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*b7: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*bb: mov     +0x18(%rax), %rax        */
  0x48, 0x63, 0x4c, 0x24, 0x3c,             /*bf: movslq  +0x3c(%rsp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*c4: shl     $0x4, %rcx               */
  0x48, 0x01, 0x48, 0x08,                   /*c8: add     %rcx, +0x8(%rax)         */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*cc: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*d1: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x48, 0x08,                   /*d5: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x40, 0x10,                   /*d9: mov     +0x10(%rax), %rax        */
  0x8b, 0x00,                               /*dd: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x07,                         /*df: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*e2: movzwl  %ax, %eax                */
  0x48, 0x8b, 0x49, 0x20,                   /*e5: mov     +0x20(%rcx), %rcx        */
  0x48, 0x8b, 0x34, 0xc1,                   /*e9: mov     (%rcx,%rax,8), %rsi      */
  0x41, 0xff, 0x96, 0x48, 0x01, 0x00, 0x00, /*ed: callq   +0x148(%r14)             */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*f4: mov     %rax, +0x18(%rsp)        */
  0x48, 0x8b, 0x4c, 0x24, 0x30,             /*f9: mov     +0x30(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x48,                   /*fe: mov     +0x48(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x20,                   /*102: mov     %rcx, +0x20(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*106: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x30,             /*10b: mov     +0x30(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*110: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*114: mov     +0x18(%rsp), %rax        */
  0x8b, 0x00,                               /*119: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*11b: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*11e: test    $0x80, %al               */
  0x0f, 0x84, 0x80, 0x00, 0x00, 0x00,       /*120: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x30,             /*126: mov     +0x30(%rsp), %rax        */
  0xc7, 0x40, 0x18, 0x00, 0x00, 0x00, 0x00, /*12b: movl    $0, +0x18(%rax)          */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*132: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*137: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x47, 0x18,                   /*13b: mov     +0x18(%rdi), %rax        */
  0x48, 0x8b, 0x58, 0x08,                   /*13f: mov     +0x8(%rax), %rbx         */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*143: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x74, 0x24, 0x20,             /*148: mov     +0x20(%rsp), %rsi        */
  0x8b, 0x54, 0x24, 0x28,                   /*14d: mov     +0x28(%rsp), %edx        */
  0xff, 0x50, 0x18,                         /*151: callq   +0x18(%rax)              */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*154: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*159: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*15d: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*162: mov     +0x10(%rsp), %rcx        */
  0x48, 0x89, 0x4b, 0x08,                   /*167: mov     %rcx, +0x8(%rbx)         */
  0x48, 0x89, 0x03,                         /*16b: mov     %rax, (%rbx)             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*16e: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*173: mov     +0x58(%rax), %rdi        */
  0x8b, 0x70, 0x50,                         /*177: mov     +0x50(%rax), %esi        */
  0x41, 0xff, 0x96, 0x10, 0x01, 0x00, 0x00, /*17a: callq   +0x110(%r14)             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*181: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*186: mov     +0x58(%rax), %rax        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*18a: cmpq    $0, +0x28(%rax)          */
  0x0f, 0x84, 0x9f, 0x00, 0x00, 0x00,       /*18f: je                               */
  0x48, 0x8b, 0x7c, 0x24, 0x40,             /*195: mov     +0x40(%rsp), %rdi        */
  0x41, 0xff, 0x96, 0xd0, 0x01, 0x00, 0x00, /*19a: callq   +0x1d0(%r14)             */
  0xe9, 0xca, 0x00, 0x00, 0x00,             /*1a1: jmpq                             */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*1a6: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1ab: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*1af: mov     +0x40(%rsp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*1b4: mov     %rax, +0x8(%rcx)         */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*1b8: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*1bd: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*1c1: mov     +0x10(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x20,                   /*1c5: mov     %rcx, +0x20(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*1c9: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*1ce: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1d2: mov     +0x18(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x28,                   /*1d6: mov     %rcx, +0x28(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*1da: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*1df: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x58,                   /*1e3: mov     +0x58(%rax), %rdi        */
  0x0f, 0xb7, 0x71, 0x02,                   /*1e7: movzwl  +0x2(%rcx), %esi         */
  0xba, 0x01, 0x00, 0x00, 0x00,             /*1eb: mov     $0x1, %edx               */
  0x41, 0xff, 0x96, 0x40, 0x01, 0x00, 0x00, /*1f0: callq   +0x140(%r14)             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*1f7: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*1fc: mov     +0x8(%rax), %rax         */
  0x0f, 0xb7, 0x40, 0x02,                   /*200: movzwl  +0x2(%rax), %eax         */
  0x48, 0x8b, 0x4c, 0x24, 0x30,             /*204: mov     +0x30(%rsp), %rcx        */
  0x89, 0x41, 0x18,                         /*209: mov     %eax, +0x18(%rcx)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*20c: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x58,                   /*211: mov     +0x58(%rax), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*215: mov     +0x18(%rcx), %rcx        */
  0x48, 0x8b, 0x49, 0x08,                   /*219: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x18,                   /*21d: mov     %rcx, +0x18(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*221: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*226: mov     +0x8(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*22a: mov     +0x8(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x10,                   /*22e: mov     %rcx, +0x10(%rax)        */
  0xeb, 0x3c,                               /*232: jmp                              */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*234: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x58,                   /*239: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*23d: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x48, 0x20,                   /*241: mov     +0x20(%rax), %rcx        */
  0x48, 0x8b, 0x49, 0x10,                   /*245: mov     +0x10(%rcx), %rcx        */
  0x48, 0x89, 0x48, 0x08,                   /*249: mov     %rcx, +0x8(%rax)         */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*24d: mov     +0x40(%rsp), %rax        */
  0x48, 0x89, 0x48, 0x18,                   /*252: mov     %rcx, +0x18(%rax)        */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*256: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*25b: mov     +0x58(%rax), %rdi        */
  0x41, 0xff, 0x96, 0x60, 0x01, 0x00, 0x00, /*25f: callq   +0x160(%r14)             */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*266: mov     +0x40(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*26b: addq    $0x4, +0x10(%rax)        */
  0x4c, 0x89, 0xf7,                         /*270: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x48,                   /*273: add     $0x48, %rsp              */
  0x5b,                                     /*277: pop     %rbx                     */
  0x41, 0x5e,                               /*278: pop     %r14                     */
};


static uint8_t op_method[] = {
  0x41, 0x56,                               /*00: push    %r14                     */
  0x53,                                     /*02: push    %rbx                     */
  0x48, 0x83, 0xec, 0x18,                   /*03: sub     $0x18, %rsp              */
  0x49, 0x89, 0xfe,                         /*07: mov     %rdi, %r14               */
  0x4c, 0x89, 0x74, 0x24, 0x10,             /*0a: mov     %r14, +0x10(%rsp)        */
  0x49, 0x8b, 0x46, 0x10,                   /*0f: mov     +0x10(%r14), %rax        */
  0x8b, 0x00,                               /*13: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x89, 0x44, 0x24, 0x0c,                   /*18: mov     %eax, +0xc(%rsp)         */
  0x48, 0x63, 0x44, 0x24, 0x0c,             /*1c: movslq  +0xc(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*21: mov     +0x10(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*26: mov     +0x18(%rcx), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*2a: shl     $0x4, %rax               */
  0x48, 0x8b, 0x34, 0x01,                   /*2e: mov     (%rcx,%rax,1), %rsi      */
  0x48, 0x89, 0x34, 0x24,                   /*32: mov     %rsi, (%rsp)             */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*36: mov     +0x10(%rsp), %rax        */
  0x48, 0x8b, 0x78, 0x58,                   /*3b: mov     +0x58(%rax), %rdi        */
  0x48, 0x8b, 0x48, 0x10,                   /*3f: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x58, 0x18,                   /*43: mov     +0x18(%rax), %rbx        */
  0x8b, 0x09,                               /*47: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x0e,                         /*49: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*4c: and     $0x1ff, %ecx             */
  0x48, 0x8b, 0x40, 0x28,                   /*52: mov     +0x28(%rax), %rax        */
  0x8b, 0x14, 0x88,                         /*56: mov     (%rax,%rcx,4), %edx      */
  0x48, 0x63, 0x44, 0x24, 0x0c,             /*59: movslq  +0xc(%rsp), %rax         */
  0x48, 0xc1, 0xe0, 0x04,                   /*5e: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4c, 0x18, 0x10,             /*62: mov     +0x10(%rax,%rbx,1), %rcx */
  0x44, 0x8b, 0x44, 0x18, 0x18,             /*67: mov     +0x18(%rax,%rbx,1), %r8d */
  0x41, 0xff, 0x96, 0xf0, 0x00, 0x00, 0x00, /*6c: callq   +0xf0(%r14)              */
  0x48, 0x8b, 0x44, 0x24, 0x10,             /*73: mov     +0x10(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*78: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*7b: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*7f: mov     %ecx, +0xdc(%rax)        */
  0x4c, 0x89, 0xf7,                         /*85: mov     %r14, %rdi               */
  0x48, 0x83, 0xc4, 0x18,                   /*88: add     $0x18, %rsp              */
  0x5b,                                     /*8c: pop     %rbx                     */
  0x41, 0x5e,                               /*8d: pop     %r14                     */
};


static uint8_t op_sclass[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*05: sub     $0x20, %rsp              */
  0x49, 0x89, 0xff,                         /*09: mov     %rdi, %r15               */
  0x4c, 0x89, 0x7c, 0x24, 0x18,             /*0c: mov     %r15, +0x18(%rsp)        */
  0x49, 0x8b, 0x47, 0x10,                   /*11: mov     +0x10(%r15), %rax        */
  0x4d, 0x8b, 0x77, 0x18,                   /*15: mov     +0x18(%r15), %r14        */
  0x8b, 0x00,                               /*19: mov     (%rax), %eax             */
  0x89, 0xc3,                               /*1b: mov     %eax, %ebx               */
  0xc1, 0xeb, 0x17,                         /*1d: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*20: shl     $0x4, %rbx               */
  0x49, 0x8b, 0x7f, 0x58,                   /*24: mov     +0x58(%r15), %rdi        */
  0xc1, 0xe8, 0x0e,                         /*28: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*2b: and     $0x1ff, %eax             */
  0x48, 0xc1, 0xe0, 0x04,                   /*30: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x06,                   /*34: mov     (%r14,%rax,1), %rsi      */
  0x41, 0x8b, 0x54, 0x06, 0x08,             /*38: mov     +0x8(%r14,%rax,1), %edx  */
  0x41, 0xff, 0x97, 0xc8, 0x00, 0x00, 0x00, /*3d: callq   +0xc8(%r15)              */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*44: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*49: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*4d: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*52: mov     +0x10(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*57: mov     %rcx, +0x8(%r14,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1e,                   /*5c: mov     %rax, (%r14,%rbx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*60: mov     +0x18(%rsp), %rax        */
  0x8b, 0x48, 0x50,                         /*65: mov     +0x50(%rax), %ecx        */
  0x48, 0x8b, 0x40, 0x58,                   /*68: mov     +0x58(%rax), %rax        */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*6c: mov     %ecx, +0xdc(%rax)        */
  0x4c, 0x89, 0xff,                         /*72: mov     %r15, %rdi               */
  0x48, 0x83, 0xc4, 0x20,                   /*75: add     $0x20, %rsp              */
  0x5b,                                     /*79: pop     %rbx                     */
  0x41, 0x5e,                               /*7a: pop     %r14                     */
  0x41, 0x5f,                               /*7c: pop     %r15                     */
};


static uint8_t op_tclass[] = {
  0x41, 0x57,                               /*00: push    %r15                     */
  0x41, 0x56,                               /*02: push    %r14                     */
  0x41, 0x54,                               /*04: push    %r12                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x48,                   /*07: sub     $0x48, %rsp              */
  0x49, 0x89, 0xfc,                         /*0b: mov     %rdi, %r12               */
  0x4c, 0x89, 0x64, 0x24, 0x40,             /*0e: mov     %r12, +0x40(%rsp)        */
  0x49, 0x8b, 0x44, 0x24, 0x58,             /*13: mov     +0x58(%r12), %rax        */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*18: mov     %rax, +0x38(%rsp)        */
  0x48, 0x8b, 0x40, 0x18,                   /*1d: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*21: mov     +0x20(%rax), %rax        */
  0x48, 0x83, 0x78, 0x48, 0x00,             /*25: cmpq    $0, +0x48(%rax)          */
  0x74, 0x56,                               /*2a: je                               */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*2c: mov     +0x40(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*31: mov     +0x10(%rax), %rcx        */
  0x4c, 0x8b, 0x70, 0x18,                   /*35: mov     +0x18(%rax), %r14        */
  0x8b, 0x19,                               /*39: mov     (%rcx), %ebx             */
  0xc1, 0xeb, 0x17,                         /*3b: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*3e: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x40, 0x58,                   /*42: mov     +0x58(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*46: mov     +0x18(%rax), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*4a: mov     +0x20(%rax), %rax        */
  0x48, 0x8b, 0x78, 0x48,                   /*4e: mov     +0x48(%rax), %rdi        */
  0x41, 0xff, 0x94, 0x24, 0x48, 0x02, 0x00, 0x00,/*52: callq   +0x248(%r12)             */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*5a: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*5f: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*63: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*68: mov     +0x10(%rsp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*6d: mov     %rcx, +0x8(%r14,%rbx,1)  */
  0x49, 0x89, 0x04, 0x1e,                   /*72: mov     %rax, (%r14,%rbx,1)      */
  0x48, 0x8b, 0x44, 0x24, 0x40,             /*76: mov     +0x40(%rsp), %rax        */
  0x48, 0x83, 0x40, 0x10, 0x04,             /*7b: addq    $0x4, +0x10(%rax)        */
  0xeb, 0x7b,                               /*80: jmp                              */
  0x4c, 0x8b, 0x74, 0x24, 0x38,             /*82: mov     +0x38(%rsp), %r14        */
  0x49, 0x8b, 0x84, 0x24, 0xb8, 0x01, 0x00, 0x00,/*87: mov     +0x1b8(%r12), %rax       */
  0x48, 0x8b, 0x30,                         /*8f: mov     (%rax), %rsi             */
  0x4c, 0x89, 0xf7,                         /*92: mov     %r14, %rdi               */
  0x41, 0xff, 0x94, 0x24, 0x18, 0x01, 0x00, 0x00,/*95: callq   +0x118(%r12)             */
  0x49, 0x89, 0xc7,                         /*9d: mov     %rax, %r15               */
  0x48, 0x8b, 0x7c, 0x24, 0x38,             /*a0: mov     +0x38(%rsp), %rdi        */
  0x49, 0x8b, 0xb4, 0x24, 0xe8, 0x02, 0x00, 0x00,/*a5: mov     +0x2e8(%r12), %rsi       */
  0xba, 0x19, 0x00, 0x00, 0x00,             /*ad: mov     $0x19, %edx              */
  0x41, 0xff, 0x54, 0x24, 0x78,             /*b2: callq   +0x78(%r12)              */
  0x89, 0xd1,                               /*b7: mov     %edx, %ecx               */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*b9: mov     %rax, +0x18(%rsp)        */
  0x89, 0x4c, 0x24, 0x20,                   /*be: mov     %ecx, +0x20(%rsp)        */
  0x48, 0x8b, 0x54, 0x24, 0x18,             /*c2: mov     +0x18(%rsp), %rdx        */
  0x4c, 0x89, 0xf7,                         /*c7: mov     %r14, %rdi               */
  0x4c, 0x89, 0xfe,                         /*ca: mov     %r15, %rsi               */
  0x41, 0xff, 0x94, 0x24, 0xe0, 0x01, 0x00, 0x00,/*cd: callq   +0x1e0(%r12)             */
  0x48, 0x89, 0x44, 0x24, 0x28,             /*d5: mov     %rax, +0x28(%rsp)        */
  0x89, 0x54, 0x24, 0x30,                   /*da: mov     %edx, +0x30(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*de: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x40,             /*e3: mov     +0x40(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*e8: mov     +0x58(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x28,                   /*ec: mov     %rax, +0x28(%rcx)        */
  0x48, 0x8b, 0x7c, 0x24, 0x40,             /*f0: mov     +0x40(%rsp), %rdi        */
  0x41, 0xff, 0x94, 0x24, 0xd0, 0x01, 0x00, 0x00,/*f5: callq   +0x1d0(%r12)             */
  0x4c, 0x89, 0xe7,                         /*fd: mov     %r12, %rdi               */
  0x48, 0x83, 0xc4, 0x48,                   /*100: add     $0x48, %rsp              */
  0x5b,                                     /*104: pop     %rbx                     */
  0x41, 0x5c,                               /*105: pop     %r12                     */
  0x41, 0x5e,                               /*107: pop     %r14                     */
  0x41, 0x5f,                               /*109: pop     %r15                     */
};


static uint8_t op_debug[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0x48, 0x8b, 0x43, 0x10,                   /*0d: mov     +0x10(%rbx), %rax        */
  0x8b, 0x08,                               /*11: mov     (%rax), %ecx             */
  0x89, 0xce,                               /*13: mov     %ecx, %esi               */
  0xc1, 0xee, 0x17,                         /*15: shr     $0x17, %esi              */
  0x89, 0xca,                               /*18: mov     %ecx, %edx               */
  0xc1, 0xea, 0x0e,                         /*1a: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*1d: and     $0x1ff, %edx             */
  0xc1, 0xe9, 0x07,                         /*23: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*26: and     $0x7f, %ecx              */
  0x48, 0x8b, 0xbb, 0xf0, 0x02, 0x00, 0x00, /*29: mov     +0x2f0(%rbx), %rdi       */
  0x31, 0xc0,                               /*30: xor     %eax, %eax               */
  0xff, 0x93, 0x80, 0x01, 0x00, 0x00,       /*32: callq   +0x180(%rbx)             */
  0x48, 0x89, 0xdf,                         /*38: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*3b: add     $0x10, %rsp              */
  0x5b,                                     /*3f: pop     %rbx                     */
};


static uint8_t op_stop[] = {
  0x53,                                     /*00: push    %rbx                     */
  0x48, 0x83, 0xec, 0x10,                   /*01: sub     $0x10, %rsp              */
  0x48, 0x89, 0xfb,                         /*05: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x08,             /*08: mov     %rbx, +0x8(%rsp)         */
  0xff, 0x93, 0xf0, 0x01, 0x00, 0x00,       /*0d: callq   +0x1f0(%rbx)             */
  0x48, 0x89, 0xdf,                         /*13: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x10,                   /*16: add     $0x10, %rsp              */
  0x5b,                                     /*1a: pop     %rbx                     */
};


static uint8_t op_err[] = {
  0x41, 0x56,                               /*00: push    %r14                     */
  0x53,                                     /*02: push    %rbx                     */
  0x48, 0x83, 0xec, 0x58,                   /*03: sub     $0x58, %rsp              */
  0x48, 0x89, 0xfb,                         /*07: mov     %rdi, %rbx               */
  0x48, 0x89, 0x5c, 0x24, 0x50,             /*0a: mov     %rbx, +0x50(%rsp)        */
  0x48, 0x8b, 0x7b, 0x58,                   /*0f: mov     +0x58(%rbx), %rdi        */
  0x48, 0x89, 0x7c, 0x24, 0x48,             /*13: mov     %rdi, +0x48(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*18: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*1d: mov     +0x10(%rax), %rcx        */
  0x48, 0x8b, 0x40, 0x20,                   /*21: mov     +0x20(%rax), %rax        */
  0x8b, 0x09,                               /*25: mov     (%rcx), %ecx             */
  0xc1, 0xe9, 0x07,                         /*27: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*2a: movzwl  %cx, %ecx                */
  0x48, 0xc1, 0xe1, 0x04,                   /*2d: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x34, 0x08,                   /*31: mov     (%rax,%rcx,1), %rsi      */
  0x8b, 0x54, 0x08, 0x08,                   /*35: mov     +0x8(%rax,%rcx,1), %edx  */
  0xff, 0x93, 0xe8, 0x01, 0x00, 0x00,       /*39: callq   +0x1e8(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x38,             /*3f: mov     %rax, +0x38(%rsp)        */
  0x89, 0x54, 0x24, 0x40,                   /*44: mov     %edx, +0x40(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x50,             /*48: mov     +0x50(%rsp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*4d: mov     +0x10(%rax), %rax        */
  0xf7, 0x00, 0x00, 0x00, 0x80, 0xff,       /*51: testl   $0xff800000, (%rax)      */
  0x74, 0x42,                               /*57: je                               */
  0x4c, 0x8b, 0x74, 0x24, 0x48,             /*59: mov     +0x48(%rsp), %r14        */
  0x48, 0x8b, 0x83, 0x80, 0x02, 0x00, 0x00, /*5e: mov     +0x280(%rbx), %rax       */
  0x48, 0x8b, 0x30,                         /*65: mov     (%rax), %rsi             */
  0x4c, 0x89, 0xf7,                         /*68: mov     %r14, %rdi               */
  0xff, 0x93, 0x18, 0x01, 0x00, 0x00,       /*6b: callq   +0x118(%rbx)             */
  0x48, 0x8b, 0x54, 0x24, 0x38,             /*71: mov     +0x38(%rsp), %rdx        */
  0x8b, 0x4c, 0x24, 0x40,                   /*76: mov     +0x40(%rsp), %ecx        */
  0x4c, 0x89, 0xf7,                         /*7a: mov     %r14, %rdi               */
  0x48, 0x89, 0xc6,                         /*7d: mov     %rax, %rsi               */
  0xff, 0x93, 0xe0, 0x01, 0x00, 0x00,       /*80: callq   +0x1e0(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*86: mov     %rax, +0x8(%rsp)         */
  0x89, 0x54, 0x24, 0x10,                   /*8b: mov     %edx, +0x10(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x08,             /*8f: mov     +0x8(%rsp), %rax         */
  0x48, 0x8b, 0x4c, 0x24, 0x10,             /*94: mov     +0x10(%rsp), %rcx        */
  0xeb, 0x40,                               /*99: jmp                              */
  0x4c, 0x8b, 0x74, 0x24, 0x48,             /*9b: mov     +0x48(%rsp), %r14        */
  0x48, 0x8b, 0x83, 0x80, 0x00, 0x00, 0x00, /*a0: mov     +0x80(%rbx), %rax        */
  0x48, 0x8b, 0x30,                         /*a7: mov     (%rax), %rsi             */
  0x4c, 0x89, 0xf7,                         /*aa: mov     %r14, %rdi               */
  0xff, 0x93, 0x18, 0x01, 0x00, 0x00,       /*ad: callq   +0x118(%rbx)             */
  0x48, 0x8b, 0x54, 0x24, 0x38,             /*b3: mov     +0x38(%rsp), %rdx        */
  0x8b, 0x4c, 0x24, 0x40,                   /*b8: mov     +0x40(%rsp), %ecx        */
  0x4c, 0x89, 0xf7,                         /*bc: mov     %r14, %rdi               */
  0x48, 0x89, 0xc6,                         /*bf: mov     %rax, %rsi               */
  0xff, 0x93, 0xe0, 0x01, 0x00, 0x00,       /*c2: callq   +0x1e0(%rbx)             */
  0x48, 0x89, 0x44, 0x24, 0x18,             /*c8: mov     %rax, +0x18(%rsp)        */
  0x89, 0x54, 0x24, 0x20,                   /*cd: mov     %edx, +0x20(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x18,             /*d1: mov     +0x18(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x20,             /*d6: mov     +0x20(%rsp), %rcx        */
  0x48, 0x89, 0x4c, 0x24, 0x30,             /*db: mov     %rcx, +0x30(%rsp)        */
  0x48, 0x89, 0x44, 0x24, 0x28,             /*e0: mov     %rax, +0x28(%rsp)        */
  0x48, 0x8b, 0x44, 0x24, 0x28,             /*e5: mov     +0x28(%rsp), %rax        */
  0x48, 0x8b, 0x4c, 0x24, 0x50,             /*ea: mov     +0x50(%rsp), %rcx        */
  0x48, 0x8b, 0x49, 0x58,                   /*ef: mov     +0x58(%rcx), %rcx        */
  0x48, 0x89, 0x41, 0x28,                   /*f3: mov     %rax, +0x28(%rcx)        */
  0x48, 0x8b, 0x7c, 0x24, 0x50,             /*f7: mov     +0x50(%rsp), %rdi        */
  0xff, 0x93, 0xd0, 0x01, 0x00, 0x00,       /*fc: callq   +0x1d0(%rbx)             */
  0x48, 0x89, 0xdf,                         /*102: mov     %rbx, %rdi               */
  0x48, 0x83, 0xc4, 0x58,                   /*105: add     $0x58, %rsp              */
  0x5b,                                     /*109: pop     %rbx                     */
  0x41, 0x5e,                               /*10a: pop     %r14                     */
};

static uint8_t* ops[76];
static size_t op_sizes[] = {
  sizeof(op_nop), /* op_nop */
  sizeof(op_move), /* op_move */
  sizeof(op_loadl), /* op_loadl */
  sizeof(op_loadi), /* op_loadi */
  sizeof(op_loadsym), /* op_loadsym */
  sizeof(op_loadnil), /* op_loadnil */
  sizeof(op_loadself), /* op_loadself */
  sizeof(op_loadt), /* op_loadt */
  sizeof(op_loadf), /* op_loadf */
  sizeof(op_getglobal), /* op_getglobal */
  sizeof(op_setglobal), /* op_setglobal */
  sizeof(op_getspecial), /* op_getspecial */
  sizeof(op_setspecial), /* op_setspecial */
  sizeof(op_getiv), /* op_getiv */
  sizeof(op_setiv), /* op_setiv */
  sizeof(op_getcv), /* op_getcv */
  sizeof(op_setcv), /* op_setcv */
  sizeof(op_getconst), /* op_getconst */
  sizeof(op_setconst), /* op_setconst */
  sizeof(op_getmcnst), /* op_getmcnst */
  sizeof(op_setmcnst), /* op_setmcnst */
  sizeof(op_getupvar), /* op_getupvar */
  sizeof(op_setupvar), /* op_setupvar */
  sizeof(op_jmp), /* op_jmp */
  sizeof(op_jmpif), /* op_jmpif */
  sizeof(op_jmpnot), /* op_jmpnot */
  sizeof(op_onerr), /* op_onerr */
  sizeof(op_rescue), /* op_rescue */
  sizeof(op_poperr), /* op_poperr */
  sizeof(op_raise), /* op_raise */
  sizeof(op_epush), /* op_epush */
  sizeof(op_epop), /* op_epop */
  sizeof(op_send), /* op_send */
  sizeof(op_sendb), /* op_sendb */
  sizeof(op_fsend), /* op_fsend */
  sizeof(op_call), /* op_call */
  sizeof(op_super), /* op_super */
  sizeof(op_argary), /* op_argary */
  sizeof(op_enter), /* op_enter */
  sizeof(op_karg), /* op_karg */
  sizeof(op_kdict), /* op_kdict */
  sizeof(op_return), /* op_return */
  sizeof(op_tailcall), /* op_tailcall */
  sizeof(op_blkpush), /* op_blkpush */
  sizeof(op_add), /* op_add */
  sizeof(op_addi), /* op_addi */
  sizeof(op_sub), /* op_sub */
  sizeof(op_subi), /* op_subi */
  sizeof(op_mul), /* op_mul */
  sizeof(op_div), /* op_div */
  sizeof(op_eq), /* op_eq */
  sizeof(op_lt), /* op_lt */
  sizeof(op_le), /* op_le */
  sizeof(op_gt), /* op_gt */
  sizeof(op_ge), /* op_ge */
  sizeof(op_array), /* op_array */
  sizeof(op_arycat), /* op_arycat */
  sizeof(op_arypush), /* op_arypush */
  sizeof(op_aref), /* op_aref */
  sizeof(op_aset), /* op_aset */
  sizeof(op_apost), /* op_apost */
  sizeof(op_string), /* op_string */
  sizeof(op_strcat), /* op_strcat */
  sizeof(op_hash), /* op_hash */
  sizeof(op_lambda), /* op_lambda */
  sizeof(op_range), /* op_range */
  sizeof(op_oclass), /* op_oclass */
  sizeof(op_class), /* op_class */
  sizeof(op_module), /* op_module */
  sizeof(op_exec), /* op_exec */
  sizeof(op_method), /* op_method */
  sizeof(op_sclass), /* op_sclass */
  sizeof(op_tclass), /* op_tclass */
  sizeof(op_debug), /* op_debug */
  sizeof(op_stop), /* op_stop */
  sizeof(op_err), /* op_err */
};

extern void init_symtbl();
void init_ops() {
  static int init = 0;
  if(init == 0) {
    init = 1;
    init_symtbl();
    ops[0] = op_nop;
    ops[1] = op_move;
    ops[2] = op_loadl;
    ops[3] = op_loadi;
    ops[4] = op_loadsym;
    ops[5] = op_loadnil;
    ops[6] = op_loadself;
    ops[7] = op_loadt;
    ops[8] = op_loadf;
    ops[9] = op_getglobal;
    ops[10] = op_setglobal;
    ops[11] = op_getspecial;
    ops[12] = op_setspecial;
    ops[13] = op_getiv;
    ops[14] = op_setiv;
    ops[15] = op_getcv;
    ops[16] = op_setcv;
    ops[17] = op_getconst;
    ops[18] = op_setconst;
    ops[19] = op_getmcnst;
    ops[20] = op_setmcnst;
    ops[21] = op_getupvar;
    ops[22] = op_setupvar;
    ops[23] = op_jmp;
    ops[24] = op_jmpif;
    ops[25] = op_jmpnot;
    ops[26] = op_onerr;
    ops[27] = op_rescue;
    ops[28] = op_poperr;
    ops[29] = op_raise;
    ops[30] = op_epush;
    ops[31] = op_epop;
    ops[32] = op_send;
    ops[33] = op_sendb;
    ops[34] = op_fsend;
    ops[35] = op_call;
    ops[36] = op_super;
    ops[37] = op_argary;
    ops[38] = op_enter;
    ops[39] = op_karg;
    ops[40] = op_kdict;
    ops[41] = op_return;
    ops[42] = op_tailcall;
    ops[43] = op_blkpush;
    ops[44] = op_add;
    ops[45] = op_addi;
    ops[46] = op_sub;
    ops[47] = op_subi;
    ops[48] = op_mul;
    ops[49] = op_div;
    ops[50] = op_eq;
    ops[51] = op_lt;
    ops[52] = op_le;
    ops[53] = op_gt;
    ops[54] = op_ge;
    ops[55] = op_array;
    ops[56] = op_arycat;
    ops[57] = op_arypush;
    ops[58] = op_aref;
    ops[59] = op_aset;
    ops[60] = op_apost;
    ops[61] = op_string;
    ops[62] = op_strcat;
    ops[63] = op_hash;
    ops[64] = op_lambda;
    ops[65] = op_range;
    ops[66] = op_oclass;
    ops[67] = op_class;
    ops[68] = op_module;
    ops[69] = op_exec;
    ops[70] = op_method;
    ops[71] = op_sclass;
    ops[72] = op_tclass;
    ops[73] = op_debug;
    ops[74] = op_stop;
    ops[75] = op_err;
  }
}
