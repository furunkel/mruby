
static size_t op_nop_size = 9;
static uint8_t op_nop[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x5d,                                     /*08: pop     %rbp                     */
};


static size_t op_move_size = 55;
static uint8_t op_move[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0x89, 0xc1,                               /*0b: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x17,                         /*0d: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x57, 0x20,                   /*10: mov     0x20(%rdi), %rdx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*14: shl     $0x4, %rcx               */
  0xc1, 0xe8, 0x0e,                         /*18: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*1b: and     $0x1ff, %eax             */
  0x48, 0xc1, 0xe0, 0x04,                   /*20: shl     $0x4, %rax               */
  0x48, 0x8b, 0x34, 0x02,                   /*24: mov     (%rdx, %rax, 1), %rsi    */
  0x48, 0x8b, 0x44, 0x02, 0x08,             /*28: mov     0x8(%rdx, %rax, 1), %rax */
  0x48, 0x89, 0x44, 0x0a, 0x08,             /*2d: mov     %rax, 0x8(%rdx, %rcx, 1) */
  0x48, 0x89, 0x34, 0x0a,                   /*32: mov     %rsi, (%rdx, %rcx, 1)    */
  0x5d,                                     /*36: pop     %rbp                     */
};


static size_t op_loadl_size = 57;
static uint8_t op_loadl[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0x89, 0xc1,                               /*0b: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x17,                         /*0d: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*10: shl     $0x4, %rcx               */
  0xc1, 0xe8, 0x07,                         /*14: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*17: movzwl  %ax, %eax                */
  0x48, 0x8b, 0x57, 0x20,                   /*1a: mov     0x20(%rdi), %rdx         */
  0x48, 0x8b, 0x77, 0x28,                   /*1e: mov     0x28(%rdi), %rsi         */
  0x48, 0xc1, 0xe0, 0x04,                   /*22: shl     $0x4, %rax               */
  0x48, 0x8b, 0x3c, 0x06,                   /*26: mov     (%rsi, %rax, 1), %rdi    */
  0x48, 0x8b, 0x44, 0x06, 0x08,             /*2a: mov     0x8(%rsi, %rax, 1), %rax */
  0x48, 0x89, 0x44, 0x0a, 0x08,             /*2f: mov     %rax, 0x8(%rdx, %rcx, 1) */
  0x48, 0x89, 0x3c, 0x0a,                   /*34: mov     %rdi, (%rdx, %rcx, 1)    */
  0x5d,                                     /*38: pop     %rbp                     */
};


static size_t op_loadi_size = 66;
static uint8_t op_loadi[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x20,                   /*0e: mov     0x20(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, /*16: movl    $0x3, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*1d:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*1e: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x68,                         /*22: mov     0x68(%rax), %ecx         */
  0x89, 0xca,                               /*25: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*27: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*2a: movzwl  %dx, %edx                */
  0x81, 0xc2, 0x01, 0x80, 0xff, 0xff,       /*2d: add     $0xffff8001, %edx        */
  0xc1, 0xe9, 0x17,                         /*33: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x20,                   /*36: mov     0x20(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*3a: shl     $0x4, %rcx               */
  0x89, 0x14, 0x08,                         /*3e: mov     %edx, (%rax, %rcx, 1)    */
  0x5d,                                     /*41: pop     %rbp                     */
};


static size_t op_loadsym_size = 67;
static uint8_t op_loadsym[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x20,                   /*0e: mov     0x20(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x04, 0x00, 0x00, /*16: movl    $0x4, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*1d:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*1e: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x68,                         /*22: mov     0x68(%rax), %ecx         */
  0x89, 0xca,                               /*25: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*27: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*2a: movzwl  %dx, %edx                */
  0x48, 0x8b, 0x70, 0x20,                   /*2d: mov     0x20(%rax), %rsi         */
  0x48, 0x8b, 0x40, 0x30,                   /*31: mov     0x30(%rax), %rax         */
  0x8b, 0x04, 0x90,                         /*35: mov     (%rax, %rdx, 4), %eax    */
  0xc1, 0xe9, 0x17,                         /*38: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*3b: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0e,                         /*3f: mov     %eax, (%rsi, %rcx, 1)    */
  0x5d,                                     /*42: pop     %rbp                     */
};


static size_t op_loadnil_size = 65;
static uint8_t op_loadnil[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x89, 0x45, 0xf4,                         /*0e: mov     %eax, -0xc(%rbp)         */
  0x48, 0x63, 0x45, 0xf4,                   /*11: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*15: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*19: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*1d: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*21: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*28:                                  */
  0x48, 0x63, 0x45, 0xf4,                   /*29: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*2d: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*31: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*35: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*39: movl    $0x0, (%rcx, %rax, 1)    */
  0x5d,                                     /*40: pop     %rbp                     */
};


static size_t op_loadself_size = 39;
static uint8_t op_loadself[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x20,                   /*0e: mov     0x20(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0x48, 0x8b, 0x11,                         /*16: mov     (%rcx), %rdx             */
  0x48, 0x8b, 0x71, 0x08,                   /*19: mov     0x8(%rcx), %rsi          */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*1d: mov     %rsi, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x14, 0x01,                   /*22: mov     %rdx, (%rcx, %rax, 1)    */
  0x5d,                                     /*26: pop     %rbp                     */
};


static size_t op_loadt_size = 56;
static uint8_t op_loadt[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x20,                   /*0e: mov     0x20(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*16: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*1d:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*1e: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x68,                         /*22: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*25: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x20,                   /*28: mov     0x20(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*2c: shl     $0x4, %rcx               */
  0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*30: movl    $0x1, (%rax, %rcx, 1)    */
  0x5d,                                     /*37: pop     %rbp                     */
};


static size_t op_loadf_size = 56;
static uint8_t op_loadf[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x20,                   /*0e: mov     0x20(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*16: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*1d:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*1e: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x68,                         /*22: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*25: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x20,                   /*28: mov     0x20(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*2c: shl     $0x4, %rcx               */
  0xc7, 0x04, 0x08, 0x01, 0x00, 0x00, 0x00, /*30: movl    $0x1, (%rax, %rcx, 1)    */
  0x5d,                                     /*37: pop     %rbp                     */
};


static size_t op_getglobal_size = 93;
static uint8_t op_getglobal[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0xb9, 0x40, 0x01, 0x00, 0x00,             /*0b: mov     $0x140, %ecx             */
  0x48, 0x03, 0x0f,                         /*10: add     (%rdi), %rcx             */
  0x48, 0x89, 0x7d, 0xe8,                   /*13: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x57, 0x68,                         /*17: mov     0x68(%rdi), %edx         */
  0x89, 0xd3,                               /*1a: mov     %edx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*1c: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1f: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x47, 0x60,                   /*23: mov     0x60(%rdi), %rax         */
  0xc1, 0xea, 0x07,                         /*27: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*2a: movzwl  %dx, %edx                */
  0x4c, 0x8b, 0x77, 0x20,                   /*2d: mov     0x20(%rdi), %r14         */
  0x48, 0x8b, 0x77, 0x30,                   /*31: mov     0x30(%rdi), %rsi         */
  0x8b, 0x34, 0x96,                         /*35: mov     (%rsi, %rdx, 4), %esi    */
  0x48, 0x89, 0xc7,                         /*38: mov     %rax, %rdi               */
  0xff, 0xd1,                               /*3b: callq   *%rcx                    */
  0x48, 0x89, 0x45, 0xd8,                   /*3d: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*41: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*44: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*48: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*4c: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*51: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x83, 0xc4, 0x20,                   /*55: add     $0x20, %rsp              */
  0x5b,                                     /*59: pop     %rbx                     */
  0x41, 0x5e,                               /*5a: pop     %r14                     */
  0x5d,                                     /*5c: pop     %rbp                     */
};


static size_t op_setglobal_size = 71;
static uint8_t op_setglobal[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x4c, 0x8b, 0x0f,                         /*08: mov     (%rdi), %r9              */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x4c, 0x8b, 0x47, 0x60,                   /*0f: mov     0x60(%rdi), %r8          */
  0x8b, 0x4f, 0x68,                         /*13: mov     0x68(%rdi), %ecx         */
  0x89, 0xca,                               /*16: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*18: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*1b: movzwl  %dx, %edx                */
  0x48, 0x8b, 0x47, 0x20,                   /*1e: mov     0x20(%rdi), %rax         */
  0x48, 0x8b, 0x77, 0x30,                   /*22: mov     0x30(%rdi), %rsi         */
  0x8b, 0x34, 0x96,                         /*26: mov     (%rsi, %rdx, 4), %esi    */
  0xc1, 0xe9, 0x17,                         /*29: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*2c: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x14, 0x08,                   /*30: mov     (%rax, %rcx, 1), %rdx    */
  0x8b, 0x4c, 0x08, 0x08,                   /*34: mov     0x8(%rax, %rcx, 1), %ecx */
  0x49, 0x83, 0xc1, 0x30,                   /*38: add     $0x30, %r9               */
  0x4c, 0x89, 0xc7,                         /*3c: mov     %r8, %rdi                */
  0x41, 0xff, 0xd1,                         /*3f: callq   *%r9                     */
  0x48, 0x83, 0xc4, 0x10,                   /*42: add     $0x10, %rsp              */
  0x5d,                                     /*46: pop     %rbp                     */
};


static size_t op_getspecial_size = 83;
static uint8_t op_getspecial[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0xb8, 0xf0, 0x01, 0x00, 0x00,             /*0b: mov     $0x1f0, %eax             */
  0x48, 0x03, 0x07,                         /*10: add     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xe8,                   /*13: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x4f, 0x68,                         /*17: mov     0x68(%rdi), %ecx         */
  0x89, 0xcb,                               /*1a: mov     %ecx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*1c: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1f: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x77, 0x20,                   /*23: mov     0x20(%rdi), %r14         */
  0x48, 0x8b, 0x7f, 0x60,                   /*27: mov     0x60(%rdi), %rdi         */
  0xc1, 0xe9, 0x07,                         /*2b: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xf1,                         /*2e: movzwl  %cx, %esi                */
  0xff, 0xd0,                               /*31: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd8,                   /*33: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*37: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*3a: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3e: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*42: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*47: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x83, 0xc4, 0x20,                   /*4b: add     $0x20, %rsp              */
  0x5b,                                     /*4f: pop     %rbx                     */
  0x41, 0x5e,                               /*50: pop     %r14                     */
  0x5d,                                     /*52: pop     %rbp                     */
};


static size_t op_setspecial_size = 64;
static uint8_t op_setspecial[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0xb8, 0xc8, 0x00, 0x00, 0x00,             /*08: mov     $0xc8, %eax              */
  0x48, 0x03, 0x07,                         /*0d: add     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*10: mov     %rdi, -0x8(%rbp)         */
  0x48, 0x8b, 0x4f, 0x20,                   /*14: mov     0x20(%rdi), %rcx         */
  0x4c, 0x8b, 0x47, 0x60,                   /*18: mov     0x60(%rdi), %r8          */
  0x8b, 0x7f, 0x68,                         /*1c: mov     0x68(%rdi), %edi         */
  0x89, 0xfa,                               /*1f: mov     %edi, %edx               */
  0xc1, 0xea, 0x07,                         /*21: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xf2,                         /*24: movzwl  %dx, %esi                */
  0xc1, 0xef, 0x17,                         /*27: shr     $0x17, %edi              */
  0x48, 0xc1, 0xe7, 0x04,                   /*2a: shl     $0x4, %rdi               */
  0x48, 0x8b, 0x14, 0x39,                   /*2e: mov     (%rcx, %rdi, 1), %rdx    */
  0x8b, 0x4c, 0x39, 0x08,                   /*32: mov     0x8(%rcx, %rdi, 1), %ecx */
  0x4c, 0x89, 0xc7,                         /*36: mov     %r8, %rdi                */
  0xff, 0xd0,                               /*39: callq   *%rax                    */
  0x48, 0x83, 0xc4, 0x10,                   /*3b: add     $0x10, %rsp              */
  0x5d,                                     /*3f: pop     %rbp                     */
};


static size_t op_getiv_size = 92;
static uint8_t op_getiv[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x48, 0x8b, 0x0f,                         /*0b: mov     (%rdi), %rcx             */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x57, 0x68,                         /*12: mov     0x68(%rdi), %edx         */
  0x89, 0xd3,                               /*15: mov     %edx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*17: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1a: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x47, 0x60,                   /*1e: mov     0x60(%rdi), %rax         */
  0xc1, 0xea, 0x07,                         /*22: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*25: movzwl  %dx, %edx                */
  0x4c, 0x8b, 0x77, 0x20,                   /*28: mov     0x20(%rdi), %r14         */
  0x48, 0x8b, 0x77, 0x30,                   /*2c: mov     0x30(%rdi), %rsi         */
  0x8b, 0x34, 0x96,                         /*30: mov     (%rsi, %rdx, 4), %esi    */
  0x48, 0x83, 0xc1, 0x58,                   /*33: add     $0x58, %rcx              */
  0x48, 0x89, 0xc7,                         /*37: mov     %rax, %rdi               */
  0xff, 0xd1,                               /*3a: callq   *%rcx                    */
  0x48, 0x89, 0x45, 0xd8,                   /*3c: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*40: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*43: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*47: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*4b: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*50: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x83, 0xc4, 0x20,                   /*54: add     $0x20, %rsp              */
  0x5b,                                     /*58: pop     %rbx                     */
  0x41, 0x5e,                               /*59: pop     %r14                     */
  0x5d,                                     /*5b: pop     %rbp                     */
};


static size_t op_setiv_size = 85;
static uint8_t op_setiv[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x53,                                     /*04: push    %rbx                     */
  0x50,                                     /*05: push    %rax                     */
  0x48, 0x8b, 0x1f,                         /*06: mov     (%rdi), %rbx             */
  0x48, 0x89, 0x7d, 0xf0,                   /*09: mov     %rdi, -0x10(%rbp)        */
  0x4c, 0x8b, 0x47, 0x60,                   /*0d: mov     0x60(%rdi), %r8          */
  0x8b, 0x4f, 0x68,                         /*11: mov     0x68(%rdi), %ecx         */
  0x89, 0xca,                               /*14: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*16: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*19: movzwl  %dx, %edx                */
  0x48, 0x8b, 0x47, 0x20,                   /*1c: mov     0x20(%rdi), %rax         */
  0x48, 0x8b, 0x77, 0x30,                   /*20: mov     0x30(%rdi), %rsi         */
  0x8b, 0x34, 0x96,                         /*24: mov     (%rsi, %rdx, 4), %esi    */
  0xc1, 0xe9, 0x17,                         /*27: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*2a: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x14, 0x08,                   /*2e: mov     (%rax, %rcx, 1), %rdx    */
  0x8b, 0x4c, 0x08, 0x08,                   /*32: mov     0x8(%rax, %rcx, 1), %ecx */
  0x48, 0x8d, 0x83, 0xa0, 0x01, 0x00, 0x00, /*36: lea     0x1a0(%rbx), %rax        */
  0x4c, 0x89, 0xc7,                         /*3d: mov     %r8, %rdi                */
  0xff, 0xd0,                               /*40: callq   *%rax                    */
  0x48, 0x8b, 0x7d, 0xf0,                   /*42: mov     -0x10(%rbp), %rdi        */
  0x48, 0x81, 0xc3, 0x10, 0x01, 0x00, 0x00, /*46: add     $0x110, %rbx             */
  0xff, 0xd3,                               /*4d: callq   *%rbx                    */
  0x48, 0x83, 0xc4, 0x08,                   /*4f: add     $0x8, %rsp               */
  0x5b,                                     /*53: pop     %rbx                     */
  0x5d,                                     /*54: pop     %rbp                     */
};


static size_t op_getcv_size = 137;
static uint8_t op_getcv[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x48, 0x8b, 0x07,                         /*0b: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x48, 0x8b, 0x4f, 0x18,                   /*12: mov     0x18(%rdi), %rcx         */
  0x48, 0x8b, 0x57, 0x60,                   /*16: mov     0x60(%rdi), %rdx         */
  0x48, 0x8b, 0x52, 0x18,                   /*1a: mov     0x18(%rdx), %rdx         */
  0x48, 0x8b, 0x52, 0x20,                   /*1e: mov     0x20(%rdx), %rdx         */
  0x48, 0x89, 0x4a, 0x38,                   /*22: mov     %rcx, 0x38(%rdx)         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*26: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x51, 0x68,                         /*2a: mov     0x68(%rcx), %edx         */
  0x89, 0xd3,                               /*2d: mov     %edx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*2f: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*32: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x79, 0x60,                   /*36: mov     0x60(%rcx), %rdi         */
  0xc1, 0xea, 0x07,                         /*3a: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*3d: movzwl  %dx, %edx                */
  0x4c, 0x8b, 0x71, 0x20,                   /*40: mov     0x20(%rcx), %r14         */
  0x48, 0x8b, 0x49, 0x30,                   /*44: mov     0x30(%rcx), %rcx         */
  0x8b, 0x34, 0x91,                         /*48: mov     (%rcx, %rdx, 4), %esi    */
  0x48, 0x83, 0xc0, 0x78,                   /*4b: add     $0x78, %rax              */
  0xff, 0xd0,                               /*4f: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd8,                   /*51: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*55: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*58: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*5c: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*60: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*65: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*69: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*6d: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*71: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*75: mov     0x20(%rax), %rax         */
  0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, /*79: movq    $0x0, 0x38(%rax)         */
  0x00,                                     /*80:                                  */
  0x48, 0x83, 0xc4, 0x20,                   /*81: add     $0x20, %rsp              */
  0x5b,                                     /*85: pop     %rbx                     */
  0x41, 0x5e,                               /*86: pop     %r14                     */
  0x5d,                                     /*88: pop     %rbp                     */
};


static size_t op_setcv_size = 73;
static uint8_t op_setcv[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x41, 0xb9, 0xd0, 0x01, 0x00, 0x00,       /*08: mov     $0x1d0, %r9d             */
  0x4c, 0x03, 0x0f,                         /*0e: add     (%rdi), %r9              */
  0x48, 0x89, 0x7d, 0xf8,                   /*11: mov     %rdi, -0x8(%rbp)         */
  0x4c, 0x8b, 0x47, 0x60,                   /*15: mov     0x60(%rdi), %r8          */
  0x8b, 0x4f, 0x68,                         /*19: mov     0x68(%rdi), %ecx         */
  0x89, 0xca,                               /*1c: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*1e: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*21: movzwl  %dx, %edx                */
  0x48, 0x8b, 0x47, 0x20,                   /*24: mov     0x20(%rdi), %rax         */
  0x48, 0x8b, 0x77, 0x30,                   /*28: mov     0x30(%rdi), %rsi         */
  0x8b, 0x34, 0x96,                         /*2c: mov     (%rsi, %rdx, 4), %esi    */
  0xc1, 0xe9, 0x17,                         /*2f: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*32: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x14, 0x08,                   /*36: mov     (%rax, %rcx, 1), %rdx    */
  0x8b, 0x4c, 0x08, 0x08,                   /*3a: mov     0x8(%rax, %rcx, 1), %ecx */
  0x4c, 0x89, 0xc7,                         /*3e: mov     %r8, %rdi                */
  0x41, 0xff, 0xd1,                         /*41: callq   *%r9                     */
  0x48, 0x83, 0xc4, 0x10,                   /*44: add     $0x10, %rsp              */
  0x5d,                                     /*48: pop     %rbp                     */
};


static size_t op_getconst_size = 172;
static uint8_t op_getconst[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x48, 0x8b, 0x07,                         /*08: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x48, 0x8b, 0x4f, 0x18,                   /*0f: mov     0x18(%rdi), %rcx         */
  0x48, 0x8b, 0x57, 0x60,                   /*13: mov     0x60(%rdi), %rdx         */
  0x48, 0x8b, 0x52, 0x18,                   /*17: mov     0x18(%rdx), %rdx         */
  0x48, 0x8b, 0x52, 0x20,                   /*1b: mov     0x20(%rdx), %rdx         */
  0x48, 0x89, 0x4a, 0x38,                   /*1f: mov     %rcx, 0x38(%rdx)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*23: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x51, 0x30,                   /*27: mov     0x30(%rcx), %rdx         */
  0x48, 0x8b, 0x79, 0x60,                   /*2b: mov     0x60(%rcx), %rdi         */
  0x8b, 0x49, 0x68,                         /*2f: mov     0x68(%rcx), %ecx         */
  0xc1, 0xe9, 0x07,                         /*32: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*35: movzwl  %cx, %ecx                */
  0x8b, 0x34, 0x8a,                         /*38: mov     (%rdx, %rcx, 4), %esi    */
  0x48, 0x83, 0xc0, 0x28,                   /*3b: add     $0x28, %rax              */
  0xff, 0xd0,                               /*3f: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd8,                   /*41: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*45: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*48: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*4c: mov     -0x20(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xf0,                   /*50: mov     %rcx, -0x10(%rbp)        */
  0x48, 0x89, 0x45, 0xe8,                   /*54: mov     %rax, -0x18(%rbp)        */
  0x48, 0x8b, 0x45, 0xf8,                   /*58: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x40, 0x60,                   /*5c: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*60: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*64: mov     0x20(%rax), %rax         */
  0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, /*68: movq    $0x0, 0x38(%rax)         */
  0x00,                                     /*6f:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*70: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x48, 0x60,                   /*74: mov     0x60(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*78: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*7c: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x20,                   /*80: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xf8,                   /*84: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x68,                         /*88: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*8b: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x20,                   /*8e: mov     0x20(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*92: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xe8,                   /*96: mov     -0x18(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xf0,                   /*9a: mov     -0x10(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x08,             /*9e: mov     %rsi, 0x8(%rax, %rcx, 1) */
  0x48, 0x89, 0x14, 0x08,                   /*a3: mov     %rdx, (%rax, %rcx, 1)    */
  0x48, 0x83, 0xc4, 0x30,                   /*a7: add     $0x30, %rsp              */
  0x5d,                                     /*ab: pop     %rbp                     */
};


static size_t op_setconst_size = 73;
static uint8_t op_setconst[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x41, 0xb9, 0x70, 0x01, 0x00, 0x00,       /*08: mov     $0x170, %r9d             */
  0x4c, 0x03, 0x0f,                         /*0e: add     (%rdi), %r9              */
  0x48, 0x89, 0x7d, 0xf8,                   /*11: mov     %rdi, -0x8(%rbp)         */
  0x4c, 0x8b, 0x47, 0x60,                   /*15: mov     0x60(%rdi), %r8          */
  0x8b, 0x4f, 0x68,                         /*19: mov     0x68(%rdi), %ecx         */
  0x89, 0xca,                               /*1c: mov     %ecx, %edx               */
  0xc1, 0xea, 0x07,                         /*1e: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*21: movzwl  %dx, %edx                */
  0x48, 0x8b, 0x47, 0x20,                   /*24: mov     0x20(%rdi), %rax         */
  0x48, 0x8b, 0x77, 0x30,                   /*28: mov     0x30(%rdi), %rsi         */
  0x8b, 0x34, 0x96,                         /*2c: mov     (%rsi, %rdx, 4), %esi    */
  0xc1, 0xe9, 0x17,                         /*2f: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*32: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x14, 0x08,                   /*36: mov     (%rax, %rcx, 1), %rdx    */
  0x8b, 0x4c, 0x08, 0x08,                   /*3a: mov     0x8(%rax, %rcx, 1), %ecx */
  0x4c, 0x89, 0xc7,                         /*3e: mov     %r8, %rdi                */
  0x41, 0xff, 0xd1,                         /*41: callq   *%r9                     */
  0x48, 0x83, 0xc4, 0x10,                   /*44: add     $0x10, %rsp              */
  0x5d,                                     /*48: pop     %rbp                     */
};


static size_t op_getmcnst_size = 206;
static uint8_t op_getmcnst[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x41, 0xb8, 0xc8, 0x01, 0x00, 0x00,       /*08: mov     $0x1c8, %r8d             */
  0x4c, 0x03, 0x07,                         /*0e: add     (%rdi), %r8              */
  0x48, 0x89, 0x7d, 0xf8,                   /*11: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*15: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*18: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xe4,                         /*1b: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*1e: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x51, 0x18,                   /*22: mov     0x18(%rcx), %rdx         */
  0x48, 0x8b, 0x49, 0x60,                   /*26: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*2a: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*2e: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x51, 0x38,                   /*32: mov     %rdx, 0x38(%rcx)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*36: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x79, 0x60,                   /*3a: mov     0x60(%rcx), %rdi         */
  0x48, 0x63, 0x55, 0xe4,                   /*3e: movslq  -0x1c(%rbp), %rdx        */
  0x48, 0xc1, 0xe2, 0x04,                   /*42: shl     $0x4, %rdx               */
  0x8b, 0x71, 0x68,                         /*46: mov     0x68(%rcx), %esi         */
  0xc1, 0xee, 0x07,                         /*49: shr     $0x7, %esi               */
  0x0f, 0xb7, 0xf6,                         /*4c: movzwl  %si, %esi                */
  0x48, 0x8b, 0x41, 0x20,                   /*4f: mov     0x20(%rcx), %rax         */
  0x48, 0x8b, 0x49, 0x30,                   /*53: mov     0x30(%rcx), %rcx         */
  0x8b, 0x0c, 0xb1,                         /*57: mov     (%rcx, %rsi, 4), %ecx    */
  0x48, 0x8b, 0x34, 0x10,                   /*5a: mov     (%rax, %rdx, 1), %rsi    */
  0x8b, 0x54, 0x10, 0x08,                   /*5e: mov     0x8(%rax, %rdx, 1), %edx */
  0x41, 0xff, 0xd0,                         /*62: callq   *%r8                     */
  0x48, 0x89, 0x45, 0xd0,                   /*65: mov     %rax, -0x30(%rbp)        */
  0x89, 0x55, 0xd8,                         /*69: mov     %edx, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*6c: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*70: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xf0,                   /*74: mov     %rcx, -0x10(%rbp)        */
  0x48, 0x89, 0x45, 0xe8,                   /*78: mov     %rax, -0x18(%rbp)        */
  0x48, 0x8b, 0x45, 0xf8,                   /*7c: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x40, 0x60,                   /*80: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*84: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*88: mov     0x20(%rax), %rax         */
  0x48, 0xc7, 0x40, 0x38, 0x00, 0x00, 0x00, /*8c: movq    $0x0, 0x38(%rax)         */
  0x00,                                     /*93:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*94: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x48, 0x60,                   /*98: mov     0x60(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*9c: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*a0: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x20,                   /*a4: mov     %rcx, 0x20(%rax)         */
  0x48, 0x63, 0x45, 0xe4,                   /*a8: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*ac: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*b0: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*b4: shl     $0x4, %rax               */
  0x48, 0x8b, 0x55, 0xe8,                   /*b8: mov     -0x18(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xf0,                   /*bc: mov     -0x10(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*c0: mov     %rsi, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x14, 0x01,                   /*c5: mov     %rdx, (%rcx, %rax, 1)    */
  0x48, 0x83, 0xc4, 0x30,                   /*c9: add     $0x30, %rsp              */
  0x5d,                                     /*cd: pop     %rbp                     */
};


static size_t op_setmcnst_size = 93;
static uint8_t op_setmcnst[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x41, 0xba, 0xa0, 0x00, 0x00, 0x00,       /*08: mov     $0xa0, %r10d             */
  0x4c, 0x03, 0x17,                         /*0e: add     (%rdi), %r10             */
  0x48, 0x89, 0x7d, 0xf8,                   /*11: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*15: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*18: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*1b: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*1e: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x79, 0x60,                   /*22: mov     0x60(%rcx), %rdi         */
  0x48, 0x63, 0x45, 0xf4,                   /*26: movslq  -0xc(%rbp), %rax         */
  0x8b, 0x51, 0x68,                         /*2a: mov     0x68(%rcx), %edx         */
  0xc1, 0xea, 0x07,                         /*2d: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*30: movzwl  %dx, %edx                */
  0x4c, 0x8b, 0x49, 0x20,                   /*33: mov     0x20(%rcx), %r9          */
  0x48, 0x8b, 0x49, 0x30,                   /*37: mov     0x30(%rcx), %rcx         */
  0x8b, 0x0c, 0x91,                         /*3b: mov     (%rcx, %rdx, 4), %ecx    */
  0x48, 0xc1, 0xe0, 0x04,                   /*3e: shl     $0x4, %rax               */
  0x49, 0x8b, 0x74, 0x01, 0x10,             /*42: mov     0x10(%r9, %rax, 1), %rsi */
  0x41, 0x8b, 0x54, 0x01, 0x18,             /*47: mov     0x18(%r9, %rax, 1), %edx */
  0x4d, 0x8b, 0x04, 0x01,                   /*4c: mov     (%r9, %rax, 1), %r8      */
  0x45, 0x8b, 0x4c, 0x01, 0x08,             /*50: mov     0x8(%r9, %rax, 1), %r9d  */
  0x41, 0xff, 0xd2,                         /*55: callq   *%r10                    */
  0x48, 0x83, 0xc4, 0x10,                   /*58: add     $0x10, %rsp              */
  0x5d,                                     /*5c: pop     %rbp                     */
};


static size_t op_getupvar_size = 174;
static uint8_t op_getupvar[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x40,                   /*07: sub     $0x40, %rsp              */
  0x48, 0x8b, 0x1f,                         /*0b: mov     (%rdi), %rbx             */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x47, 0x68,                         /*12: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*18: shl     $0x4, %rax               */
  0x48, 0x03, 0x47, 0x20,                   /*1c: add     0x20(%rdi), %rax         */
  0x48, 0x89, 0x45, 0xe0,                   /*20: mov     %rax, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*24: mov     -0x18(%rbp), %rax        */
  0x8b, 0x70, 0x68,                         /*28: mov     0x68(%rax), %esi         */
  0xc1, 0xee, 0x07,                         /*2b: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*2e: and     $0x7f, %esi              */
  0x89, 0x75, 0xdc,                         /*31: mov     %esi, -0x24(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*34: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*38: mov     0x60(%rax), %rdi         */
  0x48, 0x8d, 0x83, 0x38, 0x02, 0x00, 0x00, /*3c: lea     0x238(%rbx), %rax        */
  0xff, 0xd0,                               /*43: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd0,                   /*45: mov     %rax, -0x30(%rbp)        */
  0x48, 0x85, 0xc0,                         /*49: test    %rax, %rax               */
  0x74, 0x38,                               /*4c: je      86                       */
  0x48, 0x8b, 0x45, 0xe8,                   /*4e: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*52: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x0e,                         /*55: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*58: and     $0x1ff, %eax             */
  0x89, 0x45, 0xbc,                         /*5d: mov     %eax, -0x44(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*60: mov     -0x20(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xbc,                   /*64: movslq  -0x44(%rbp), %rcx        */
  0x48, 0x8b, 0x55, 0xd0,                   /*68: mov     -0x30(%rbp), %rdx        */
  0x48, 0x8b, 0x52, 0x18,                   /*6c: mov     0x18(%rdx), %rdx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*70: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x34, 0x0a,                   /*74: mov     (%rdx, %rcx, 1), %rsi    */
  0x48, 0x8b, 0x4c, 0x0a, 0x08,             /*78: mov     0x8(%rdx, %rcx, 1), %rcx */
  0x48, 0x89, 0x48, 0x08,                   /*7d: mov     %rcx, 0x8(%rax)          */
  0x48, 0x89, 0x30,                         /*81: mov     %rsi, (%rax)             */
  0xeb, 0x20,                               /*84: jmp     a6                       */
  0x4c, 0x8b, 0x75, 0xe0,                   /*86: mov     -0x20(%rbp), %r14        */
  0x48, 0x83, 0xc3, 0x58,                   /*8a: add     $0x58, %rbx              */
  0xff, 0xd3,                               /*8e: callq   *%rbx                    */
  0x48, 0x89, 0x45, 0xc0,                   /*90: mov     %rax, -0x40(%rbp)        */
  0x89, 0x55, 0xc8,                         /*94: mov     %edx, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*97: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*9b: mov     -0x38(%rbp), %rcx        */
  0x49, 0x89, 0x4e, 0x08,                   /*9f: mov     %rcx, 0x8(%r14)          */
  0x49, 0x89, 0x06,                         /*a3: mov     %rax, (%r14)             */
  0x48, 0x83, 0xc4, 0x40,                   /*a6: add     $0x40, %rsp              */
  0x5b,                                     /*aa: pop     %rbx                     */
  0x41, 0x5e,                               /*ab: pop     %r14                     */
  0x5d,                                     /*ad: pop     %rbp                     */
};


static size_t op_setupvar_size = 157;
static uint8_t op_setupvar[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x28,                   /*05: sub     $0x28, %rsp              */
  0x48, 0x8b, 0x1f,                         /*09: mov     (%rdi), %rbx             */
  0x48, 0x89, 0x7d, 0xf0,                   /*0c: mov     %rdi, -0x10(%rbp)        */
  0x8b, 0x77, 0x68,                         /*10: mov     0x68(%rdi), %esi         */
  0xc1, 0xee, 0x07,                         /*13: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*16: and     $0x7f, %esi              */
  0x89, 0x75, 0xec,                         /*19: mov     %esi, -0x14(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*1c: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*20: mov     0x60(%rax), %rdi         */
  0x48, 0x8d, 0x83, 0x38, 0x02, 0x00, 0x00, /*24: lea     0x238(%rbx), %rax        */
  0xff, 0xd0,                               /*2b: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xe0,                   /*2d: mov     %rax, -0x20(%rbp)        */
  0x48, 0x85, 0xc0,                         /*31: test    %rax, %rax               */
  0x74, 0x61,                               /*34: je      97                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*36: mov     -0x10(%rbp), %rax        */
  0x8b, 0x48, 0x68,                         /*3a: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*3d: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*40: shl     $0x4, %rcx               */
  0x48, 0x03, 0x48, 0x20,                   /*44: add     0x20(%rax), %rcx         */
  0x48, 0x89, 0x4d, 0xd8,                   /*48: mov     %rcx, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*4c: mov     -0x10(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*50: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x0e,                         /*53: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*56: and     $0x1ff, %eax             */
  0x89, 0x45, 0xd4,                         /*5b: mov     %eax, -0x2c(%rbp)        */
  0x48, 0x63, 0x45, 0xd4,                   /*5e: movslq  -0x2c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*62: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*66: mov     0x18(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*6a: shl     $0x4, %rax               */
  0x48, 0x8b, 0x55, 0xd8,                   /*6e: mov     -0x28(%rbp), %rdx        */
  0x48, 0x8b, 0x32,                         /*72: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*75: mov     0x8(%rdx), %rdx          */
  0x48, 0x89, 0x54, 0x01, 0x08,             /*79: mov     %rdx, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x34, 0x01,                   /*7e: mov     %rsi, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf0,                   /*82: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*86: mov     0x60(%rax), %rdi         */
  0x48, 0x8b, 0x75, 0xe0,                   /*8a: mov     -0x20(%rbp), %rsi        */
  0x48, 0x81, 0xc3, 0x98, 0x00, 0x00, 0x00, /*8e: add     $0x98, %rbx              */
  0xff, 0xd3,                               /*95: callq   *%rbx                    */
  0x48, 0x83, 0xc4, 0x28,                   /*97: add     $0x28, %rsp              */
  0x5b,                                     /*9b: pop     %rbx                     */
  0x5d,                                     /*9c: pop     %rbp                     */
};


static size_t op_jmp_size = 33;
static uint8_t op_jmp[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x07,                         /*0b: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*0e: movzwl  %ax, %eax                */
  0x05, 0x01, 0x80, 0xff, 0xff,             /*11: add     $0xffff8001, %eax        */
  0x48, 0x98,                               /*16: cltq                             */
  0x48, 0xc1, 0xe0, 0x02,                   /*18: shl     $0x2, %rax               */
  0x48, 0x01, 0x47, 0x18,                   /*1c: add     %rax, 0x18(%rdi)         */
  0x5d,                                     /*20: pop     %rbp                     */
};


static size_t op_jmpif_size = 72;
static uint8_t op_jmpif[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x20,                   /*0e: mov     0x20(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0x83, 0x7c, 0x01, 0x08, 0x00,             /*16: cmpl    $0x0, 0x8(%rcx, %rax, 1) */
  0x74, 0x20,                               /*1b: je      3d                       */
  0x48, 0x8b, 0x45, 0xf8,                   /*1d: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x68,                         /*21: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x07,                         /*24: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*27: movzwl  %cx, %ecx                */
  0x81, 0xc1, 0x01, 0x80, 0xff, 0xff,       /*2a: add     $0xffff8001, %ecx        */
  0x48, 0x63, 0xc9,                         /*30: movslq  %ecx, %rcx               */
  0x48, 0xc1, 0xe1, 0x02,                   /*33: shl     $0x2, %rcx               */
  0x48, 0x01, 0x48, 0x18,                   /*37: add     %rcx, 0x18(%rax)         */
  0x5d,                                     /*3b: pop     %rbp                     */
  0xeb, 0x0a,                               /*3c: jmp (ret)                        */
  0x48, 0x8b, 0x45, 0xf8,                   /*3e: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*42: addq    $0x4, 0x18(%rax)         */
  0x5d,                                     /*47: pop     %rbp                     */
};


static size_t op_jmpnot_size = 72;
static uint8_t op_jmpnot[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x48, 0x8b, 0x4f, 0x20,                   /*0e: mov     0x20(%rdi), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*12: shl     $0x4, %rax               */
  0x83, 0x7c, 0x01, 0x08, 0x00,             /*16: cmpl    $0x0, 0x8(%rcx, %rax, 1) */
  0x74, 0x0b,                               /*1b: je      28                       */
  0x48, 0x8b, 0x45, 0xf8,                   /*1d: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*21: addq    $0x4, 0x18(%rax)         */
  0x5d,                                     /*26: pop     %rbp                     */
  0xeb, 0x1f,                               /*27: jmp (ret)                        */
  0x48, 0x8b, 0x45, 0xf8,                   /*29: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x68,                         /*2d: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x07,                         /*30: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*33: movzwl  %cx, %ecx                */
  0x81, 0xc1, 0x01, 0x80, 0xff, 0xff,       /*36: add     $0xffff8001, %ecx        */
  0x48, 0x63, 0xc9,                         /*3c: movslq  %ecx, %rcx               */
  0x48, 0xc1, 0xe1, 0x02,                   /*3f: shl     $0x2, %rcx               */
  0x48, 0x01, 0x48, 0x18,                   /*43: add     %rcx, 0x18(%rax)         */
  0x5d,                                     /*47: pop     %rbp                     */
};


static size_t op_onerr_size = 214;
static uint8_t op_onerr[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x48, 0x8b, 0x07,                         /*08: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x48, 0x8b, 0x4f, 0x60,                   /*0f: mov     0x60(%rdi), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*13: mov     0x18(%rcx), %rcx         */
  0x8b, 0x51, 0x40,                         /*17: mov     0x40(%rcx), %edx         */
  0x48, 0x8b, 0x49, 0x20,                   /*1a: mov     0x20(%rcx), %rcx         */
  0x3b, 0x51, 0x1c,                         /*1e: cmp     0x1c(%rcx), %edx         */
  0x7f, 0x66,                               /*21: jg      89                       */
  0x48, 0x8b, 0x4d, 0xf8,                   /*23: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x60,                   /*27: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*2b: mov     0x18(%rcx), %rcx         */
  0x83, 0x79, 0x40, 0x00,                   /*2f: cmpl    $0x0, 0x40(%rcx)         */
  0x74, 0x11,                               /*33: je      46                       */
  0x48, 0x8b, 0x4d, 0xf8,                   /*35: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x60,                   /*39: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*3d: mov     0x18(%rcx), %rcx         */
  0xd1, 0x61, 0x40,                         /*41: shll    0x40(%rcx)               */
  0xeb, 0x13,                               /*44: jmp     59                       */
  0x48, 0x8b, 0x4d, 0xf8,                   /*46: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x60,                   /*4a: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*4e: mov     0x18(%rcx), %rcx         */
  0xc7, 0x41, 0x40, 0x10, 0x00, 0x00, 0x00, /*52: movl    $0x10, 0x40(%rcx)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*59: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x79, 0x60,                   /*5d: mov     0x60(%rcx), %rdi         */
  0x48, 0x8b, 0x4f, 0x18,                   /*61: mov     0x18(%rdi), %rcx         */
  0x48, 0x8b, 0x71, 0x38,                   /*65: mov     0x38(%rcx), %rsi         */
  0x48, 0x63, 0x51, 0x40,                   /*69: movslq  0x40(%rcx), %rdx         */
  0x48, 0xc1, 0xe2, 0x03,                   /*6d: shl     $0x3, %rdx               */
  0x48, 0x05, 0xc8, 0x00, 0x00, 0x00,       /*71: add     $0xc8, %rax              */
  0xff, 0xd0,                               /*77: callq   *%rax                    */
  0x48, 0x8b, 0x4d, 0xf8,                   /*79: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x60,                   /*7d: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*81: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x38,                   /*85: mov     %rax, 0x38(%rcx)         */
  0x48, 0x8b, 0x45, 0xf8,                   /*89: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x68,                         /*8d: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x07,                         /*90: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*93: movzwl  %cx, %ecx                */
  0x81, 0xc1, 0x01, 0x80, 0xff, 0xff,       /*96: add     $0xffff8001, %ecx        */
  0x48, 0x63, 0xc9,                         /*9c: movslq  %ecx, %rcx               */
  0x48, 0xc1, 0xe1, 0x02,                   /*9f: shl     $0x2, %rcx               */
  0x48, 0x03, 0x48, 0x18,                   /*a3: add     0x18(%rax), %rcx         */
  0x48, 0x8b, 0x40, 0x60,                   /*a7: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*ab: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*af: mov     0x20(%rax), %rax         */
  0x48, 0x63, 0x50, 0x1c,                   /*b3: movslq  0x1c(%rax), %rdx         */
  0x8d, 0x72, 0x01,                         /*b7: lea     0x1(%rdx), %esi          */
  0x89, 0x70, 0x1c,                         /*ba: mov     %esi, 0x1c(%rax)         */
  0x48, 0x8b, 0x45, 0xf8,                   /*bd: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x40, 0x60,                   /*c1: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*c5: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x38,                   /*c9: mov     0x38(%rax), %rax         */
  0x48, 0x89, 0x0c, 0xd0,                   /*cd: mov     %rcx, (%rax, %rdx, 8)    */
  0x48, 0x83, 0xc4, 0x10,                   /*d1: add     $0x10, %rsp              */
  0x5d,                                     /*d5: pop     %rbp                     */
};


static size_t op_rescue_size = 84;
static uint8_t op_rescue[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x48, 0x8b, 0x47, 0x20,                   /*08: mov     0x20(%rdi), %rax         */
  0x48, 0x8b, 0x4f, 0x60,                   /*0c: mov     0x60(%rdi), %rcx         */
  0x48, 0x8b, 0x49, 0x28,                   /*10: mov     0x28(%rcx), %rcx         */
  0x0f, 0xb6, 0x09,                         /*14: movzbl  (%rcx), %ecx             */
  0x8b, 0x57, 0x68,                         /*17: mov     0x68(%rdi), %edx         */
  0xc1, 0xea, 0x17,                         /*1a: shr     $0x17, %edx              */
  0x48, 0xc1, 0xe2, 0x04,                   /*1d: shl     $0x4, %rdx               */
  0x89, 0x4c, 0x10, 0x08,                   /*21: mov     %ecx, 0x8(%rax, %rdx, 1) */
  0x48, 0x8b, 0x45, 0xf8,                   /*25: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x48, 0x20,                   /*29: mov     0x20(%rax), %rcx         */
  0x48, 0x8b, 0x50, 0x60,                   /*2d: mov     0x60(%rax), %rdx         */
  0x48, 0x8b, 0x52, 0x28,                   /*31: mov     0x28(%rdx), %rdx         */
  0x8b, 0x40, 0x68,                         /*35: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*38: shr     $0x17, %eax              */
  0x48, 0xc1, 0xe0, 0x04,                   /*3b: shl     $0x4, %rax               */
  0x48, 0x89, 0x14, 0x01,                   /*3f: mov     %rdx, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*43: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x40, 0x60,                   /*47: mov     0x60(%rax), %rax         */
  0x48, 0xc7, 0x40, 0x28, 0x00, 0x00, 0x00, /*4b: movq    $0x0, 0x28(%rax)         */
  0x00,                                     /*52:                                  */
  0x5d,                                     /*53: pop     %rbp                     */
};


static size_t op_poperr_size = 65;
static uint8_t op_poperr[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x47, 0x68,                         /*08: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*0b: shr     $0x17, %eax              */
  0x89, 0x45, 0xf4,                         /*0e: mov     %eax, -0xc(%rbp)         */
  0xeb, 0x20,                               /*11: jmp     33                       */
  0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, /*13: data16  data16                   */
  0x84, 0x00, 0x00, 0x00, 0x00, 0x00,       /*1a:                                  */
  0x48, 0x8b, 0x45, 0xf8,                   /*20: mov     -0x8(%rbp), %rax         */
  0x48, 0x8b, 0x40, 0x60,                   /*24: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*28: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*2c: mov     0x20(%rax), %rax         */
  0xff, 0x48, 0x1c,                         /*30: decl    0x1c(%rax)               */
  0x8b, 0x45, 0xf4,                         /*33: mov     -0xc(%rbp), %eax         */
  0x8d, 0x48, 0xff,                         /*36: lea     -0x1(%rax), %ecx         */
  0x89, 0x4d, 0xf4,                         /*39: mov     %ecx, -0xc(%rbp)         */
  0x85, 0xc0,                               /*3c: test    %eax, %eax               */
  0x75, 0xe0,                               /*3e: jne     20                       */
  0x5d,                                     /*40: pop     %rbp                     */
};


static size_t op_raise_size = 57;
static uint8_t op_raise[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0xb8, 0x70, 0x01, 0x00, 0x00,             /*08: mov     $0x170, %eax             */
  0x48, 0x03, 0x07,                         /*0d: add     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*10: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*14: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*17: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*1a: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x57, 0x20,                   /*1e: mov     0x20(%rdi), %rdx         */
  0x48, 0x8b, 0x77, 0x60,                   /*22: mov     0x60(%rdi), %rsi         */
  0x48, 0x8b, 0x0c, 0x0a,                   /*26: mov     (%rdx, %rcx, 1), %rcx    */
  0x48, 0x89, 0x4e, 0x28,                   /*2a: mov     %rcx, 0x28(%rsi)         */
  0x48, 0x8b, 0x7d, 0xf8,                   /*2e: mov     -0x8(%rbp), %rdi         */
  0xff, 0xd0,                               /*32: callq   *%rax                    */
  0x48, 0x83, 0xc4, 0x10,                   /*34: add     $0x10, %rsp              */
  0x5d,                                     /*38: pop     %rbp                     */
};


static size_t op_epush_size = 254;
static uint8_t op_epush[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x18,                   /*05: sub     $0x18, %rsp              */
  0x48, 0x8b, 0x1f,                         /*09: mov     (%rdi), %rbx             */
  0x48, 0x89, 0x7d, 0xf0,                   /*0c: mov     %rdi, -0x10(%rbp)        */
  0x48, 0x8b, 0x4f, 0x10,                   /*10: mov     0x10(%rdi), %rcx         */
  0x48, 0x8b, 0x47, 0x60,                   /*14: mov     0x60(%rdi), %rax         */
  0x8b, 0x57, 0x68,                         /*18: mov     0x68(%rdi), %edx         */
  0xc1, 0xea, 0x07,                         /*1b: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*1e: movzwl  %dx, %edx                */
  0x48, 0x8b, 0x49, 0x20,                   /*21: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x34, 0xd1,                   /*25: mov     (%rcx, %rdx, 8), %rsi    */
  0x48, 0x8d, 0x4b, 0x20,                   /*29: lea     0x20(%rbx), %rcx         */
  0x48, 0x89, 0xc7,                         /*2d: mov     %rax, %rdi               */
  0xff, 0xd1,                               /*30: callq   *%rcx                    */
  0x48, 0x89, 0x45, 0xe8,                   /*32: mov     %rax, -0x18(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*36: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*3a: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*3e: mov     0x18(%rax), %rax         */
  0x8b, 0x48, 0x50,                         /*42: mov     0x50(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x20,                   /*45: mov     0x20(%rax), %rax         */
  0x3b, 0x48, 0x20,                         /*49: cmp     0x20(%rax), %ecx         */
  0x7f, 0x67,                               /*4c: jg      b5                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*4e: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*52: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*56: mov     0x18(%rax), %rax         */
  0x83, 0x78, 0x50, 0x00,                   /*5a: cmpl    $0x0, 0x50(%rax)         */
  0x74, 0x11,                               /*5e: je      71                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*60: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*64: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*68: mov     0x18(%rax), %rax         */
  0xd1, 0x60, 0x50,                         /*6c: shll    0x50(%rax)               */
  0xeb, 0x13,                               /*6f: jmp     84                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*71: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*75: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*79: mov     0x18(%rax), %rax         */
  0xc7, 0x40, 0x50, 0x10, 0x00, 0x00, 0x00, /*7d: movl    $0x10, 0x50(%rax)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*84: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*88: mov     0x60(%rax), %rdi         */
  0x48, 0x8b, 0x47, 0x18,                   /*8c: mov     0x18(%rdi), %rax         */
  0x48, 0x8b, 0x70, 0x48,                   /*90: mov     0x48(%rax), %rsi         */
  0x48, 0x63, 0x50, 0x50,                   /*94: movslq  0x50(%rax), %rdx         */
  0x48, 0xc1, 0xe2, 0x03,                   /*98: shl     $0x3, %rdx               */
  0x48, 0x81, 0xc3, 0xc0, 0x00, 0x00, 0x00, /*9c: add     $0xc0, %rbx              */
  0xff, 0xd3,                               /*a3: callq   *%rbx                    */
  0x48, 0x8b, 0x4d, 0xf0,                   /*a5: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x60,                   /*a9: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*ad: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x48,                   /*b1: mov     %rax, 0x48(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*b5: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xf0,                   /*b9: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x60,                   /*bd: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*c1: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*c5: mov     0x20(%rcx), %rcx         */
  0x48, 0x63, 0x51, 0x20,                   /*c9: movslq  0x20(%rcx), %rdx         */
  0x8d, 0x72, 0x01,                         /*cd: lea     0x1(%rdx), %esi          */
  0x89, 0x71, 0x20,                         /*d0: mov     %esi, 0x20(%rcx)         */
  0x48, 0x8b, 0x4d, 0xf0,                   /*d3: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x60,                   /*d7: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*db: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x48,                   /*df: mov     0x48(%rcx), %rcx         */
  0x48, 0x89, 0x04, 0xd1,                   /*e3: mov     %rax, (%rcx, %rdx, 8)    */
  0x48, 0x8b, 0x45, 0xf0,                   /*e7: mov     -0x10(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*eb: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*ee: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*f2: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x18,                   /*f8: add     $0x18, %rsp              */
  0x5b,                                     /*fc: pop     %rbx                     */
  0x5d,                                     /*fd: pop     %rbp                     */
};


static size_t op_epop_size = 156;
static uint8_t op_epop[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x28,                   /*05: sub     $0x28, %rsp              */
  0x48, 0x8b, 0x1f,                         /*09: mov     (%rdi), %rbx             */
  0x48, 0x89, 0x7d, 0xf0,                   /*0c: mov     %rdi, -0x10(%rbp)        */
  0x8b, 0x47, 0x68,                         /*10: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*13: shr     $0x17, %eax              */
  0x89, 0x45, 0xec,                         /*16: mov     %eax, -0x14(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*19: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*1d: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*21: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*25: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xe0,                   /*29: mov     %rax, -0x20(%rbp)        */
  0x8b, 0x40, 0x20,                         /*2d: mov     0x20(%rax), %eax         */
  0x89, 0x45, 0xd8,                         /*30: mov     %eax, -0x28(%rbp)        */
  0xc7, 0x45, 0xdc, 0x00, 0x00, 0x00, 0x00, /*33: movl    $0x0, -0x24(%rbp)        */
  0x48, 0x81, 0xc3, 0xc0, 0x01, 0x00, 0x00, /*3a: add     $0x1c0, %rbx             */
  0xeb, 0x33,                               /*41: jmp     76                       */
  0x66, 0x66, 0x66, 0x66, 0x2e, 0x0f, 0x1f, /*43: data16  data16                   */
  0x84, 0x00, 0x00, 0x00, 0x00, 0x00,       /*4a:                                  */
  0x48, 0x8b, 0x45, 0xf0,                   /*50: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*54: mov     0x60(%rax), %rdi         */
  0x8b, 0x75, 0xd8,                         /*58: mov     -0x28(%rbp), %esi        */
  0xff, 0xce,                               /*5b: dec     %esi                     */
  0x89, 0x75, 0xd8,                         /*5d: mov     %esi, -0x28(%rbp)        */
  0xff, 0xd3,                               /*60: callq   *%rbx                    */
  0x48, 0x8b, 0x45, 0xf0,                   /*62: mov     -0x10(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*66: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*69: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*6d: mov     %ecx, 0xdc(%rax)         */
  0xff, 0x45, 0xdc,                         /*73: incl    -0x24(%rbp)              */
  0x8b, 0x45, 0xdc,                         /*76: mov     -0x24(%rbp), %eax        */
  0x3b, 0x45, 0xec,                         /*79: cmp     -0x14(%rbp), %eax        */
  0x7d, 0x12,                               /*7c: jge     90                       */
  0x8b, 0x45, 0xd8,                         /*7e: mov     -0x28(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*81: mov     -0x20(%rbp), %rcx        */
  0x3b, 0x41, 0xd0,                         /*85: cmp     -0x30(%rcx), %eax        */
  0x0f, 0x9f, 0xc0,                         /*88: setg    %al                      */
  0xeb, 0x05,                               /*8b: jmp     92                       */
  0x0f, 0x1f, 0x00,                         /*8d: nopl    (%rax)                   */
  0x31, 0xc0,                               /*90: xor     %eax, %eax               */
  0x84, 0xc0,                               /*92: test    %al, %al                 */
  0x75, 0xba,                               /*94: jne     50                       */
  0x48, 0x83, 0xc4, 0x28,                   /*96: add     $0x28, %rsp              */
  0x5b,                                     /*9a: pop     %rbx                     */
  0x5d,                                     /*9b: pop     %rbp                     */
};


static size_t op_send_size = 1288;
static uint8_t op_send[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x81, 0xec, 0x80, 0x00, 0x00, 0x00, /*07: sub     $0x80, %rsp              */
  0x4c, 0x8b, 0x37,                         /*0e: mov     (%rdi), %r14             */
  0x48, 0x89, 0x7d, 0xe8,                   /*11: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x47, 0x68,                         /*15: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*18: shr     $0x17, %eax              */
  0x89, 0x45, 0xe4,                         /*1b: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*1e: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*22: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*25: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*28: and     $0x7f, %eax              */
  0x89, 0x45, 0xe0,                         /*2b: mov     %eax, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*2e: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x68,                         /*32: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x0e,                         /*35: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*38: and     $0x1ff, %ecx             */
  0x48, 0x8b, 0x40, 0x30,                   /*3e: mov     0x30(%rax), %rax         */
  0x8b, 0x04, 0x88,                         /*42: mov     (%rax, %rcx, 4), %eax    */
  0x89, 0x45, 0xa4,                         /*45: mov     %eax, -0x5c(%rbp)        */
  0x48, 0x63, 0x45, 0xe4,                   /*48: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4c: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*50: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*54: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*58: mov     (%rcx, %rax, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*5c: mov     0x8(%rcx, %rax, 1), %rax */
  0x48, 0x89, 0x45, 0xc0,                   /*61: mov     %rax, -0x40(%rbp)        */
  0x48, 0x89, 0x55, 0xb8,                   /*65: mov     %rdx, -0x48(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*69: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*6d: mov     0x68(%rax), %eax         */
  0x83, 0xe0, 0x7f,                         /*70: and     $0x7f, %eax              */
  0x83, 0xf8, 0x21,                         /*73: cmp     $0x21, %eax              */
  0x74, 0x76,                               /*76: je      ee                       */
  0x83, 0x7d, 0xe0, 0x7f,                   /*78: cmpl    $0x7f, -0x20(%rbp)       */
  0x75, 0x32,                               /*7c: jne     b0                       */
  0x48, 0x63, 0x45, 0xe4,                   /*7e: movslq  -0x1c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*82: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*86: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*8a: mov     0x20(%rcx), %rcx         */
  0xc7, 0x44, 0x08, 0x28, 0x00, 0x00, 0x00, /*8e: movl    $0x0, 0x28(%rax, %rcx, 1) */
  0x00,                                     /*95:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*96: movslq  -0x1c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*9a: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*9e: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*a2: mov     0x20(%rcx), %rcx         */
  0xc7, 0x44, 0x08, 0x20, 0x00, 0x00, 0x00, /*a6: movl    $0x0, 0x20(%rax, %rcx, 1) */
  0x00,                                     /*ad:                                  */
  0xeb, 0x3e,                               /*ae: jmp     ee                       */
  0x48, 0x63, 0x45, 0xe4,                   /*b0: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xe0,                   /*b4: movslq  -0x20(%rbp), %rcx        */
  0x48, 0x01, 0xc1,                         /*b8: add     %rax, %rcx               */
  0x48, 0xc1, 0xe1, 0x04,                   /*bb: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x45, 0xe8,                   /*bf: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*c3: mov     0x20(%rax), %rax         */
  0xc7, 0x44, 0x01, 0x18, 0x00, 0x00, 0x00, /*c7: movl    $0x0, 0x18(%rcx, %rax, 1) */
  0x00,                                     /*ce:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*cf: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xe0,                   /*d3: movslq  -0x20(%rbp), %rcx        */
  0x48, 0x01, 0xc1,                         /*d7: add     %rax, %rcx               */
  0x48, 0xc1, 0xe1, 0x04,                   /*da: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x45, 0xe8,                   /*de: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*e2: mov     0x20(%rax), %rax         */
  0xc7, 0x44, 0x01, 0x10, 0x00, 0x00, 0x00, /*e6: movl    $0x0, 0x10(%rcx, %rax, 1) */
  0x00,                                     /*ed:                                  */
  0x48, 0x8b, 0x45, 0xe8,                   /*ee: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*f2: mov     0x60(%rax), %rdi         */
  0x48, 0x8b, 0x75, 0xb8,                   /*f6: mov     -0x48(%rbp), %rsi        */
  0x8b, 0x55, 0xc0,                         /*fa: mov     -0x40(%rbp), %edx        */
  0x49, 0x8d, 0x86, 0x40, 0x02, 0x00, 0x00, /*fd: lea     0x240(%r14), %rax        */
  0xff, 0xd0,                               /*104: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd0,                   /*106: mov     %rax, -0x30(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*10a: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*10e: mov     0x60(%rax), %rdi         */
  0x8b, 0x55, 0xa4,                         /*112: mov     -0x5c(%rbp), %edx        */
  0x49, 0x8d, 0x5e, 0x70,                   /*115: lea     0x70(%r14), %rbx         */
  0x48, 0x8d, 0x75, 0xd0,                   /*119: lea     -0x30(%rbp), %rsi        */
  0xff, 0xd3,                               /*11d: callq   *%rbx                    */
  0x48, 0x89, 0x45, 0xd8,                   /*11f: mov     %rax, -0x28(%rbp)        */
  0x48, 0x85, 0xc0,                         /*123: test    %rax, %rax               */
  0x0f, 0x85, 0xd0, 0x00, 0x00, 0x00,       /*126: jne     1fc                      */
  0x8b, 0x7d, 0xa4,                         /*12c: mov     -0x5c(%rbp), %edi        */
  0x49, 0x8d, 0x86, 0xf0, 0x00, 0x00, 0x00, /*12f: lea     0xf0(%r14), %rax         */
  0xff, 0xd0,                               /*136: callq   *%rax                    */
  0x48, 0x89, 0x45, 0x90,                   /*138: mov     %rax, -0x70(%rbp)        */
  0x89, 0x55, 0x98,                         /*13c: mov     %edx, -0x68(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*13f: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*143: mov     0x60(%rax), %rdi         */
  0x49, 0x8d, 0x86, 0x48, 0x02, 0x00, 0x00, /*147: lea     0x248(%r14), %rax        */
  0x49, 0x8d, 0xb6, 0x50, 0x02, 0x00, 0x00, /*14e: lea     0x250(%r14), %rsi        */
  0xba, 0x0e, 0x00, 0x00, 0x00,             /*155: mov     $0xe, %edx               */
  0xff, 0xd0,                               /*15a: callq   *%rax                    */
  0x89, 0x45, 0xa4,                         /*15c: mov     %eax, -0x5c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*15f: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x79, 0x60,                   /*163: mov     0x60(%rcx), %rdi         */
  0x48, 0x8d, 0x75, 0xd0,                   /*167: lea     -0x30(%rbp), %rsi        */
  0x89, 0xc2,                               /*16b: mov     %eax, %edx               */
  0xff, 0xd3,                               /*16d: callq   *%rbx                    */
  0x48, 0x89, 0x45, 0xd8,                   /*16f: mov     %rax, -0x28(%rbp)        */
  0x83, 0x7d, 0xe0, 0x7f,                   /*173: cmpl    $0x7f, -0x20(%rbp)       */
  0x75, 0x37,                               /*177: jne     1b0                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*179: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x20,                   /*17d: mov     0x20(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*181: mov     0x60(%rax), %rdi         */
  0x48, 0x63, 0x45, 0xe4,                   /*185: movslq  -0x1c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*189: shl     $0x4, %rax               */
  0x48, 0x8b, 0x74, 0x08, 0x10,             /*18d: mov     0x10(%rax, %rcx, 1), %rsi */
  0x8b, 0x54, 0x08, 0x18,                   /*192: mov     0x18(%rax, %rcx, 1), %edx */
  0x48, 0x8b, 0x4d, 0x90,                   /*196: mov     -0x70(%rbp), %rcx        */
  0x44, 0x8b, 0x45, 0x98,                   /*19a: mov     -0x68(%rbp), %r8d        */
  0x49, 0x8d, 0x86, 0xe0, 0x01, 0x00, 0x00, /*19e: lea     0x1e0(%r14), %rax        */
  0xff, 0xd0,                               /*1a5: callq   *%rax                    */
  0x48, 0x89, 0x45, 0x80,                   /*1a7: mov     %rax, -0x80(%rbp)        */
  0x89, 0x55, 0x88,                         /*1ab: mov     %edx, -0x78(%rbp)        */
  0xeb, 0x4c,                               /*1ae: jmp     1fc                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*1b0: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*1b4: mov     0x20(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xe4,                   /*1b8: movslq  -0x1c(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*1bc: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x7c, 0x08, 0x20,             /*1c0: lea     0x20(%rax, %rcx, 1), %rdi */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*1c5: lea     0x10(%rax, %rcx, 1), %rsi */
  0x48, 0x63, 0x55, 0xe0,                   /*1ca: movslq  -0x20(%rbp), %rdx        */
  0x48, 0xff, 0xc2,                         /*1ce: inc     %rdx                     */
  0x89, 0x55, 0xe0,                         /*1d1: mov     %edx, -0x20(%rbp)        */
  0x49, 0x8d, 0x46, 0x50,                   /*1d4: lea     0x50(%r14), %rax         */
  0xff, 0xd0,                               /*1d8: callq   *%rax                    */
  0x48, 0x63, 0x45, 0xe4,                   /*1da: movslq  -0x1c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1de: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1e2: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*1e6: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x55, 0x90,                   /*1ea: mov     -0x70(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0x98,                   /*1ee: mov     -0x68(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x18,             /*1f2: mov     %rsi, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x54, 0x08, 0x10,             /*1f7: mov     %rdx, 0x10(%rax, %rcx, 1) */
  0x48, 0x8b, 0x45, 0xe8,                   /*1fc: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*200: mov     0x60(%rax), %rdi         */
  0x49, 0x8d, 0x86, 0x88, 0x00, 0x00, 0x00, /*204: lea     0x88(%r14), %rax         */
  0xff, 0xd0,                               /*20b: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xc8,                   /*20d: mov     %rax, -0x38(%rbp)        */
  0x8b, 0x4d, 0xa4,                         /*211: mov     -0x5c(%rbp), %ecx        */
  0x89, 0x08,                               /*214: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x45, 0xd8,                   /*216: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*21a: mov     -0x38(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*21e: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xe8,                   /*222: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*226: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*22a: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*22e: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xc8,                   /*232: mov     -0x38(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*236: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*23a: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*23e: mov     -0x38(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*242: mov     %rax, 0x48(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*246: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*24a: mov     0x18(%rax), %rax         */
  0x48, 0x83, 0xc0, 0x04,                   /*24e: add     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xc8,                   /*252: mov     -0x38(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x30,                   /*256: mov     %rax, 0x30(%rcx)         */
  0x8b, 0x45, 0xe4,                         /*25a: mov     -0x1c(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*25d: mov     -0x38(%rbp), %rcx        */
  0x89, 0x41, 0x44,                         /*261: mov     %eax, 0x44(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*264: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*268: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*26c: mov     0x18(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xe4,                   /*270: movslq  -0x1c(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*274: shl     $0x4, %rcx               */
  0x48, 0x01, 0x48, 0x08,                   /*278: add     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xd8,                   /*27c: mov     -0x28(%rbp), %rax        */
  0x8b, 0x00,                               /*280: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*282: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*285: test    $0x80, %al               */
  0x74, 0x25,                               /*287: je      2ae                      */
  0x83, 0x7d, 0xe0, 0x7f,                   /*289: cmpl    $0x7f, -0x20(%rbp)       */
  0x0f, 0x85, 0xca, 0x00, 0x00, 0x00,       /*28d: jne     35d                      */
  0x48, 0x8b, 0x45, 0xc8,                   /*293: mov     -0x38(%rbp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*297: movl    $0xffffffff, 0x40(%rax)  */
  0x48, 0x8b, 0x45, 0xc8,                   /*29e: mov     -0x38(%rbp), %rax        */
  0xc7, 0x40, 0x18, 0x03, 0x00, 0x00, 0x00, /*2a2: movl    $0x3, 0x18(%rax)         */
  0xe9, 0xc6, 0x00, 0x00, 0x00,             /*2a9: jmpq    374                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*2ae: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*2b2: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x60,                   /*2b6: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*2ba: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*2be: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x08,                   /*2c2: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x4d, 0xe8,                   /*2c6: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*2ca: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xd8,                   /*2ce: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2d2: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*2d6: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*2da: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*2de: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*2e2: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*2e6: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*2ea: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*2ee: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*2f2: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*2f6: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x30,                   /*2fa: mov     %rcx, 0x30(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*2fe: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*302: mov     0x10(%rax), %rax         */
  0x0f, 0xb7, 0x40, 0x02,                   /*306: movzwl  0x2(%rax), %eax          */
  0x48, 0x8b, 0x4d, 0xc8,                   /*30a: mov     -0x38(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*30e: mov     %eax, 0x18(%rcx)         */
  0x83, 0x7d, 0xe0, 0x7f,                   /*311: cmpl    $0x7f, -0x20(%rbp)       */
  0x0f, 0x85, 0x94, 0x01, 0x00, 0x00,       /*315: jne     4af                      */
  0x48, 0x8b, 0x45, 0xc8,                   /*31b: mov     -0x38(%rbp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*31f: movl    $0xffffffff, 0x40(%rax)  */
  0x48, 0x8b, 0x45, 0xe8,                   /*326: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*32a: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*32e: mov     0x60(%rax), %rdi         */
  0x0f, 0xb7, 0x41, 0x02,                   /*332: movzwl  0x2(%rcx), %eax          */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*336: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*33b: cmp     $0x3, %eax               */
  0x7c, 0x0c,                               /*33e: jl      34c                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*340: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*344: mov     0x10(%rax), %rax         */
  0x0f, 0xb7, 0x70, 0x02,                   /*348: movzwl  0x2(%rax), %esi          */
  0x49, 0x81, 0xc6, 0xe0, 0x00, 0x00, 0x00, /*34c: add     $0xe0, %r14              */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*353: mov     $0x3, %edx               */
  0xe9, 0x79, 0x01, 0x00, 0x00,             /*358: jmpq    4d6                      */
  0x8b, 0x45, 0xe0,                         /*35d: mov     -0x20(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*360: mov     -0x38(%rbp), %rcx        */
  0x89, 0x41, 0x40,                         /*364: mov     %eax, 0x40(%rcx)         */
  0x8b, 0x45, 0xe0,                         /*367: mov     -0x20(%rbp), %eax        */
  0x83, 0xc0, 0x02,                         /*36a: add     $0x2, %eax               */
  0x48, 0x8b, 0x4d, 0xc8,                   /*36d: mov     -0x38(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*371: mov     %eax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*374: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*378: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x79, 0x60,                   /*37c: mov     0x60(%rcx), %rdi         */
  0x48, 0x8b, 0x75, 0xb8,                   /*380: mov     -0x48(%rbp), %rsi        */
  0x8b, 0x55, 0xc0,                         /*384: mov     -0x40(%rbp), %edx        */
  0xff, 0x50, 0x18,                         /*387: callq   *0x18(%rax)              */
  0x48, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, /*38a: mov     %rax, -0x90(%rbp)        */
  0x89, 0x95, 0x78, 0xff, 0xff, 0xff,       /*391: mov     %edx, -0x88(%rbp)        */
  0x48, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, /*397: mov     -0x90(%rbp), %rax        */
  0x48, 0x8b, 0x8d, 0x78, 0xff, 0xff, 0xff, /*39e: mov     -0x88(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xb0,                   /*3a5: mov     %rcx, -0x50(%rbp)        */
  0x48, 0x89, 0x45, 0xa8,                   /*3a9: mov     %rax, -0x58(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*3ad: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*3b1: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*3b5: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*3b9: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xa8,                   /*3bd: mov     -0x58(%rbp), %rcx        */
  0x48, 0x8b, 0x55, 0xb0,                   /*3c1: mov     -0x50(%rbp), %rdx        */
  0x48, 0x89, 0x50, 0x08,                   /*3c5: mov     %rdx, 0x8(%rax)          */
  0x48, 0x89, 0x08,                         /*3c9: mov     %rcx, (%rax)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*3cc: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*3d0: mov     0x60(%rax), %rdi         */
  0x8b, 0x70, 0x58,                         /*3d4: mov     0x58(%rax), %esi         */
  0x49, 0x8d, 0x86, 0xb0, 0x00, 0x00, 0x00, /*3d7: lea     0xb0(%r14), %rax         */
  0xff, 0xd0,                               /*3de: callq   *%rax                    */
  0x48, 0x8b, 0x45, 0xe8,                   /*3e0: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*3e4: mov     0x60(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*3e8: cmpq    $0x0, 0x28(%rax)         */
  0x74, 0x13,                               /*3ed: je      402                      */
  0x48, 0x8b, 0x7d, 0xe8,                   /*3ef: mov     -0x18(%rbp), %rdi        */
  0x49, 0x81, 0xc6, 0x70, 0x01, 0x00, 0x00, /*3f3: add     $0x170, %r14             */
  0x41, 0xff, 0xd6,                         /*3fa: callq   *%r14                    */
  0xe9, 0xfb, 0x00, 0x00, 0x00,             /*3fd: jmpq    4fd                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*402: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*406: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*40a: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*40e: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xc8,                   /*412: mov     %rax, -0x38(%rbp)        */
  0x48, 0x83, 0x78, 0x48, 0x00,             /*416: cmpq    $0x0, 0x48(%rax)         */
  0x75, 0x4e,                               /*41b: jne     46b                      */
  0x48, 0x8b, 0x45, 0xc8,                   /*41d: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0xb8,                   /*421: mov     -0x48(%rax), %rax        */
  0x0f, 0xba, 0x20, 0x12,                   /*425: btl     $0x12, (%rax)            */
  0x72, 0x40,                               /*429: jb      46b                      */
  0x48, 0x8b, 0x45, 0xc8,                   /*42b: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0xb8,                   /*42f: mov     -0x48(%rax), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*433: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*437: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xe8,                   /*43b: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*43f: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*443: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x10,                   /*447: mov     %rcx, 0x10(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*44b: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*44f: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*453: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*457: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*45b: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*45f: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*463: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x30,                   /*467: mov     %rcx, 0x30(%rax)         */
  0x48, 0x8b, 0x45, 0xc8,                   /*46b: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*46f: mov     0x10(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*473: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x60,                   /*477: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*47b: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x08,                   /*47f: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x4d, 0xe8,                   /*483: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x20,                   /*487: mov     %rax, 0x20(%rcx)         */
  0x48, 0x8b, 0x45, 0xc8,                   /*48b: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x30,                   /*48f: mov     0x30(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*493: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*497: mov     %rax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*49b: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*49f: mov     0x60(%rax), %rdi         */
  0x49, 0x81, 0xc6, 0x00, 0x01, 0x00, 0x00, /*4a3: add     $0x100, %r14             */
  0x41, 0xff, 0xd6,                         /*4aa: callq   *%r14                    */
  0xeb, 0x4e,                               /*4ad: jmp     4fd                      */
  0x8b, 0x45, 0xe0,                         /*4af: mov     -0x20(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*4b2: mov     -0x38(%rbp), %rcx        */
  0x89, 0x41, 0x40,                         /*4b6: mov     %eax, 0x40(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*4b9: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*4bd: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*4c1: mov     0x60(%rax), %rdi         */
  0x0f, 0xb7, 0x71, 0x02,                   /*4c5: movzwl  0x2(%rcx), %esi          */
  0x8b, 0x55, 0xe0,                         /*4c9: mov     -0x20(%rbp), %edx        */
  0x83, 0xc2, 0x02,                         /*4cc: add     $0x2, %edx               */
  0x49, 0x81, 0xc6, 0xe0, 0x00, 0x00, 0x00, /*4cf: add     $0xe0, %r14              */
  0x41, 0xff, 0xd6,                         /*4d6: callq   *%r14                    */
  0x48, 0x8b, 0x45, 0xe8,                   /*4d9: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x60,                   /*4dd: mov     0x60(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*4e1: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*4e5: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x20,                   /*4e9: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*4ed: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*4f1: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*4f5: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x18,                   /*4f9: mov     %rcx, 0x18(%rax)         */
  0x48, 0x81, 0xc4, 0x80, 0x00, 0x00, 0x00, /*4fd: add     $0x80, %rsp              */
  0x5b,                                     /*504: pop     %rbx                     */
  0x41, 0x5e,                               /*505: pop     %r14                     */
  0x5d,                                     /*507: pop     %rbp                     */
};


static size_t op_sendb_size = 27;
static uint8_t op_sendb[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0xb8, 0x00, 0x02, 0x00, 0x00,             /*08: mov     $0x200, %eax             */
  0x48, 0x03, 0x07,                         /*0d: add     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*10: mov     %rdi, -0x8(%rbp)         */
  0xff, 0xd0,                               /*14: callq   *%rax                    */
  0x48, 0x83, 0xc4, 0x10,                   /*16: add     $0x10, %rsp              */
  0x5d,                                     /*1a: pop     %rbp                     */
};


static size_t op_fsend_size = 9;
static uint8_t op_fsend[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x5d,                                     /*08: pop     %rbp                     */
};


static size_t op_call_size = 812;
static uint8_t op_call[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x50,                   /*07: sub     $0x50, %rsp              */
  0x48, 0x8b, 0x1f,                         /*0b: mov     (%rdi), %rbx             */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x48, 0x8b, 0x47, 0x60,                   /*12: mov     0x60(%rdi), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*16: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*1a: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x08,                         /*1e: mov     (%rax), %rcx             */
  0x48, 0x8b, 0x40, 0x08,                   /*21: mov     0x8(%rax), %rax          */
  0x48, 0x89, 0x45, 0xd8,                   /*25: mov     %rax, -0x28(%rbp)        */
  0x48, 0x89, 0x4d, 0xd0,                   /*29: mov     %rcx, -0x30(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*2d: mov     -0x30(%rbp), %rax        */
  0x48, 0x89, 0x45, 0xc8,                   /*31: mov     %rax, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*35: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*39: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*3d: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*41: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xe0,                   /*45: mov     %rax, -0x20(%rbp)        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*49: mov     -0x38(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*4d: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x48,                   /*51: mov     %rcx, 0x48(%rax)         */
  0x48, 0x8b, 0x45, 0xc8,                   /*55: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*59: mov     -0x20(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*5d: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xc8,                   /*61: mov     -0x38(%rbp), %rax        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*65: cmpq    $0x0, 0x28(%rax)         */
  0x74, 0x4a,                               /*6a: je      b6                       */
  0x48, 0x8b, 0x45, 0xc8,                   /*6c: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x28,                   /*70: mov     0x28(%rax), %rax         */
  0x83, 0x78, 0x20, 0x00,                   /*74: cmpl    $0x0, 0x20(%rax)         */
  0x74, 0x11,                               /*78: je      8b                       */
  0x48, 0x8b, 0x45, 0xc8,                   /*7a: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x28,                   /*7e: mov     0x28(%rax), %rax         */
  0x8b, 0x40, 0x20,                         /*82: mov     0x20(%rax), %eax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*85: mov     -0x20(%rbp), %rcx        */
  0x89, 0x01,                               /*89: mov     %eax, (%rcx)             */
  0x48, 0x8b, 0x45, 0xc8,                   /*8b: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x28,                   /*8f: mov     0x28(%rax), %rax         */
  0x48, 0x83, 0x78, 0x18, 0x00,             /*93: cmpq    $0x0, 0x18(%rax)         */
  0x75, 0x1c,                               /*98: jne     b6                       */
  0x48, 0x8b, 0x45, 0xe8,                   /*9a: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*9e: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*a2: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*a6: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xc8,                   /*aa: mov     -0x38(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*ae: mov     0x28(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x18,                   /*b2: mov     %rax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xc8,                   /*b6: mov     -0x38(%rbp), %rax        */
  0x8b, 0x00,                               /*ba: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*bc: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*bf: test    $0x80, %al               */
  0x74, 0x66,                               /*c1: je      129                      */
  0x48, 0x8b, 0x45, 0xc8,                   /*c3: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*c7: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x79, 0x60,                   /*cb: mov     0x60(%rcx), %rdi         */
  0x48, 0x8b, 0x75, 0xd0,                   /*cf: mov     -0x30(%rbp), %rsi        */
  0x8b, 0x55, 0xd8,                         /*d3: mov     -0x28(%rbp), %edx        */
  0xff, 0x50, 0x18,                         /*d6: callq   *0x18(%rax)              */
  0x48, 0x89, 0x45, 0xb8,                   /*d9: mov     %rax, -0x48(%rbp)        */
  0x89, 0x55, 0xc0,                         /*dd: mov     %edx, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xb8,                   /*e0: mov     -0x48(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*e4: mov     -0x40(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xd8,                   /*e8: mov     %rcx, -0x28(%rbp)        */
  0x48, 0x89, 0x45, 0xd0,                   /*ec: mov     %rax, -0x30(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*f0: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*f4: mov     0x60(%rax), %rdi         */
  0x8b, 0x70, 0x58,                         /*f8: mov     0x58(%rax), %esi         */
  0x48, 0x8d, 0x83, 0xb0, 0x00, 0x00, 0x00, /*fb: lea     0xb0(%rbx), %rax         */
  0xff, 0xd0,                               /*102: callq   *%rax                    */
  0x48, 0x8b, 0x45, 0xe8,                   /*104: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*108: mov     0x60(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*10c: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x84, 0xa4, 0x00, 0x00, 0x00,       /*111: je      1bb                      */
  0x48, 0x8b, 0x7d, 0xe8,                   /*117: mov     -0x18(%rbp), %rdi        */
  0x48, 0x81, 0xc3, 0x70, 0x01, 0x00, 0x00, /*11b: add     $0x170, %rbx             */
  0xff, 0xd3,                               /*122: callq   *%rbx                    */
  0xe9, 0xfb, 0x01, 0x00, 0x00,             /*124: jmpq    324                      */
  0x48, 0x8b, 0x45, 0xc8,                   /*129: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*12d: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*131: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xc8,                   /*135: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*139: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*13d: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*141: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*145: mov     -0x18(%rbp), %rax        */
  0x48, 0x83, 0x78, 0x10, 0x00,             /*149: cmpq    $0x0, 0x10(%rax)         */
  0x0f, 0x84, 0x1e, 0x01, 0x00, 0x00,       /*14e: je      272                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*154: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*158: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*15c: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*160: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*164: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*168: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*16c: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x30,                   /*170: mov     %rcx, 0x30(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*174: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*178: mov     0x10(%rax), %rax         */
  0x0f, 0xb7, 0x40, 0x02,                   /*17c: movzwl  0x2(%rax), %eax          */
  0x48, 0x8b, 0x4d, 0xe0,                   /*180: mov     -0x20(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*184: mov     %eax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*187: mov     -0x20(%rbp), %rax        */
  0x83, 0x78, 0x40, 0x00,                   /*18b: cmpl    $0x0, 0x40(%rax)         */
  0x0f, 0x88, 0x15, 0x01, 0x00, 0x00,       /*18f: js      2aa                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*195: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*199: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*19d: mov     0x60(%rax), %rdi         */
  0x0f, 0xb7, 0x71, 0x02,                   /*1a1: movzwl  0x2(%rcx), %esi          */
  0x48, 0x8b, 0x45, 0xe0,                   /*1a5: mov     -0x20(%rbp), %rax        */
  0x8b, 0x50, 0x40,                         /*1a9: mov     0x40(%rax), %edx         */
  0x83, 0xc2, 0x02,                         /*1ac: add     $0x2, %edx               */
  0x48, 0x81, 0xc3, 0xe0, 0x00, 0x00, 0x00, /*1af: add     $0xe0, %rbx              */
  0xe9, 0x21, 0x01, 0x00, 0x00,             /*1b6: jmpq    2dc                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*1bb: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*1bf: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*1c3: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*1c7: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xe0,                   /*1cb: mov     %rax, -0x20(%rbp)        */
  0x48, 0x8b, 0x40, 0x10,                   /*1cf: mov     0x10(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1d3: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x60,                   /*1d7: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1db: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x08,                   /*1df: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1e3: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x20,                   /*1e7: mov     %rax, 0x20(%rcx)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*1eb: mov     -0x20(%rbp), %rax        */
  0x48, 0x63, 0x40, 0x44,                   /*1ef: movslq  0x44(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1f3: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*1f7: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*1fb: shl     $0x4, %rax               */
  0x48, 0x8b, 0x55, 0xd0,                   /*1ff: mov     -0x30(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xd8,                   /*203: mov     -0x28(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*207: mov     %rsi, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x14, 0x01,                   /*20c: mov     %rdx, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xe0,                   /*210: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x30,                   /*214: mov     0x30(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*218: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*21c: mov     %rax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*220: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*224: mov     0x60(%rax), %rdi         */
  0x48, 0x81, 0xc3, 0x00, 0x01, 0x00, 0x00, /*228: add     $0x100, %rbx             */
  0xff, 0xd3,                               /*22f: callq   *%rbx                    */
  0x48, 0x8b, 0x45, 0xe8,                   /*231: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x60,                   /*235: mov     0x60(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*239: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*23d: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*241: mov     0x8(%rcx), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*245: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x10,                   /*249: mov     %rcx, 0x10(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*24d: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*251: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*255: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*259: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*25d: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*261: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*265: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x30,                   /*269: mov     %rcx, 0x30(%rax)         */
  0xe9, 0xb2, 0x00, 0x00, 0x00,             /*26d: jmpq    324                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*272: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*276: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*27a: mov     0x18(%rax), %rax         */
  0x4c, 0x8b, 0x70, 0x08,                   /*27e: mov     0x8(%rax), %r14          */
  0x48, 0x8d, 0x43, 0x50,                   /*282: lea     0x50(%rbx), %rax         */
  0xff, 0xd0,                               /*286: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xa8,                   /*288: mov     %rax, -0x58(%rbp)        */
  0x89, 0x55, 0xb0,                         /*28c: mov     %edx, -0x50(%rbp)        */
  0x48, 0x8b, 0x45, 0xa8,                   /*28f: mov     -0x58(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb0,                   /*293: mov     -0x50(%rbp), %rcx        */
  0x49, 0x89, 0x4e, 0x08,                   /*297: mov     %rcx, 0x8(%r14)          */
  0x49, 0x89, 0x06,                         /*29b: mov     %rax, (%r14)             */
  0x48, 0x8b, 0x7d, 0xe8,                   /*29e: mov     -0x18(%rbp), %rdi        */
  0x48, 0x83, 0xc3, 0x28,                   /*2a2: add     $0x28, %rbx              */
  0xff, 0xd3,                               /*2a6: callq   *%rbx                    */
  0xeb, 0x7a,                               /*2a8: jmp     324                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*2aa: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*2ae: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*2b2: mov     0x60(%rax), %rdi         */
  0x0f, 0xb7, 0x41, 0x02,                   /*2b6: movzwl  0x2(%rcx), %eax          */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*2ba: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*2bf: cmp     $0x3, %eax               */
  0x7c, 0x0c,                               /*2c2: jl      2d0                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*2c4: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*2c8: mov     0x10(%rax), %rax         */
  0x0f, 0xb7, 0x70, 0x02,                   /*2cc: movzwl  0x2(%rax), %esi          */
  0x48, 0x81, 0xc3, 0xe0, 0x00, 0x00, 0x00, /*2d0: add     $0xe0, %rbx              */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*2d7: mov     $0x3, %edx               */
  0xff, 0xd3,                               /*2dc: callq   *%rbx                    */
  0x48, 0x8b, 0x45, 0xe8,                   /*2de: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x60,                   /*2e2: mov     0x60(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*2e6: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*2ea: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x20,                   /*2ee: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*2f2: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*2f6: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xc8,                   /*2fa: mov     -0x38(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*2fe: mov     0x28(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*302: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x11,                         /*306: mov     (%rcx), %rdx             */
  0x48, 0x8b, 0x49, 0x08,                   /*309: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x08,                   /*30d: mov     %rcx, 0x8(%rax)          */
  0x48, 0x89, 0x10,                         /*311: mov     %rdx, (%rax)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*314: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*318: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*31c: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x18,                   /*320: mov     %rcx, 0x18(%rax)         */
  0x48, 0x83, 0xc4, 0x50,                   /*324: add     $0x50, %rsp              */
  0x5b,                                     /*328: pop     %rbx                     */
  0x41, 0x5e,                               /*329: pop     %r14                     */
  0x5d,                                     /*32b: pop     %rbp                     */
};


static size_t op_super_size = 1035;
static uint8_t op_super[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x41, 0x54,                               /*08: push    %r12                     */
  0x53,                                     /*0a: push    %rbx                     */
  0x48, 0x83, 0xec, 0x70,                   /*0b: sub     $0x70, %rsp              */
  0x4c, 0x8b, 0x3f,                         /*0f: mov     (%rdi), %r15             */
  0x48, 0x89, 0x7d, 0xd8,                   /*12: mov     %rdi, -0x28(%rbp)        */
  0x48, 0x8b, 0x47, 0x60,                   /*16: mov     0x60(%rdi), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*1a: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*1e: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xc0,                   /*22: mov     %rax, -0x40(%rbp)        */
  0x8b, 0x00,                               /*26: mov     (%rax), %eax             */
  0x89, 0x45, 0xac,                         /*28: mov     %eax, -0x54(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*2b: mov     -0x28(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*2f: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*32: shr     $0x17, %eax              */
  0x89, 0x45, 0xa8,                         /*35: mov     %eax, -0x58(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*38: mov     -0x28(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*3c: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*3f: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*42: and     $0x7f, %eax              */
  0x89, 0x45, 0xa4,                         /*45: mov     %eax, -0x5c(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*48: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*4c: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x08,                         /*50: mov     (%rax), %rcx             */
  0x48, 0x8b, 0x40, 0x08,                   /*53: mov     0x8(%rax), %rax          */
  0x48, 0x89, 0x45, 0xd0,                   /*57: mov     %rax, -0x30(%rbp)        */
  0x48, 0x89, 0x4d, 0xc8,                   /*5b: mov     %rcx, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*5f: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*63: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*67: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*6b: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x48,                   /*6f: mov     0x48(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x28,                   /*73: mov     0x28(%rax), %rax         */
  0x48, 0x89, 0x45, 0xb0,                   /*77: mov     %rax, -0x50(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*7b: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*7f: mov     0x60(%rax), %rdi         */
  0x8b, 0x55, 0xac,                         /*83: mov     -0x54(%rbp), %edx        */
  0x49, 0x8d, 0x5f, 0x70,                   /*86: lea     0x70(%r15), %rbx         */
  0x48, 0x8d, 0x75, 0xb0,                   /*8a: lea     -0x50(%rbp), %rsi        */
  0xff, 0xd3,                               /*8e: callq   *%rbx                    */
  0x48, 0x89, 0x45, 0xb8,                   /*90: mov     %rax, -0x48(%rbp)        */
  0x48, 0x85, 0xc0,                         /*94: test    %rax, %rax               */
  0x0f, 0x85, 0xe7, 0x00, 0x00, 0x00,       /*97: jne     184                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*9d: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*a1: mov     0x60(%rax), %rdi         */
  0x49, 0x8d, 0x87, 0x48, 0x02, 0x00, 0x00, /*a5: lea     0x248(%r15), %rax        */
  0x49, 0x8d, 0xb7, 0x50, 0x02, 0x00, 0x00, /*ac: lea     0x250(%r15), %rsi        */
  0xba, 0x0e, 0x00, 0x00, 0x00,             /*b3: mov     $0xe, %edx               */
  0xff, 0xd0,                               /*b8: callq   *%rax                    */
  0x89, 0x45, 0xac,                         /*ba: mov     %eax, -0x54(%rbp)        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*bd: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x79, 0x60,                   /*c1: mov     0x60(%rcx), %rdi         */
  0x48, 0x8d, 0x75, 0xb0,                   /*c5: lea     -0x50(%rbp), %rsi        */
  0x89, 0xc2,                               /*c9: mov     %eax, %edx               */
  0xff, 0xd3,                               /*cb: callq   *%rbx                    */
  0x48, 0x89, 0x45, 0xb8,                   /*cd: mov     %rax, -0x48(%rbp)        */
  0x83, 0x7d, 0xa4, 0x7f,                   /*d1: cmpl    $0x7f, -0x5c(%rbp)       */
  0x75, 0x51,                               /*d5: jne     128                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*d7: mov     -0x28(%rbp), %rax        */
  0x4c, 0x8b, 0x60, 0x20,                   /*db: mov     0x20(%rax), %r12         */
  0x4c, 0x8b, 0x70, 0x60,                   /*df: mov     0x60(%rax), %r14         */
  0x48, 0x63, 0x5d, 0xa8,                   /*e3: movslq  -0x58(%rbp), %rbx        */
  0x48, 0xc1, 0xe3, 0x04,                   /*e7: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x45, 0xc0,                   /*eb: mov     -0x40(%rbp), %rax        */
  0x8b, 0x38,                               /*ef: mov     (%rax), %edi             */
  0x49, 0x8d, 0x87, 0xf0, 0x00, 0x00, 0x00, /*f1: lea     0xf0(%r15), %rax         */
  0xff, 0xd0,                               /*f8: callq   *%rax                    */
  0x41, 0x89, 0xd0,                         /*fa: mov     %edx, %r8d               */
  0x48, 0x89, 0x45, 0x90,                   /*fd: mov     %rax, -0x70(%rbp)        */
  0x44, 0x89, 0x45, 0x98,                   /*101: mov     %r8d, -0x68(%rbp)        */
  0x4a, 0x8b, 0x74, 0x23, 0x10,             /*105: mov     0x10(%rbx, %r12, 1), %rsi */
  0x42, 0x8b, 0x54, 0x23, 0x18,             /*10a: mov     0x18(%rbx, %r12, 1), %edx */
  0x48, 0x8b, 0x4d, 0x90,                   /*10f: mov     -0x70(%rbp), %rcx        */
  0x49, 0x8d, 0x87, 0xe0, 0x01, 0x00, 0x00, /*113: lea     0x1e0(%r15), %rax        */
  0x4c, 0x89, 0xf7,                         /*11a: mov     %r14, %rdi               */
  0xff, 0xd0,                               /*11d: callq   *%rax                    */
  0x48, 0x89, 0x45, 0x80,                   /*11f: mov     %rax, -0x80(%rbp)        */
  0x89, 0x55, 0x88,                         /*123: mov     %edx, -0x78(%rbp)        */
  0xeb, 0x5c,                               /*126: jmp     184                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*128: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*12c: mov     0x20(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xa8,                   /*130: movslq  -0x58(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*134: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x7c, 0x08, 0x20,             /*138: lea     0x20(%rax, %rcx, 1), %rdi */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*13d: lea     0x10(%rax, %rcx, 1), %rsi */
  0x48, 0x63, 0x55, 0xa4,                   /*142: movslq  -0x5c(%rbp), %rdx        */
  0x48, 0xff, 0xc2,                         /*146: inc     %rdx                     */
  0x89, 0x55, 0xa4,                         /*149: mov     %edx, -0x5c(%rbp)        */
  0x49, 0x8d, 0x47, 0x50,                   /*14c: lea     0x50(%r15), %rax         */
  0xff, 0xd0,                               /*150: callq   *%rax                    */
  0x48, 0x63, 0x45, 0xa8,                   /*152: movslq  -0x58(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*156: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xd8,                   /*15a: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*15e: mov     0x20(%rcx), %rcx         */
  0xc7, 0x44, 0x08, 0x18, 0x04, 0x00, 0x00, /*162: movl    $0x4, 0x18(%rax, %rcx, 1) */
  0x00,                                     /*169:                                  */
  0x48, 0x8b, 0x45, 0xc0,                   /*16a: mov     -0x40(%rbp), %rax        */
  0x8b, 0x00,                               /*16e: mov     (%rax), %eax             */
  0x48, 0x63, 0x4d, 0xa8,                   /*170: movslq  -0x58(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*174: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xd8,                   /*178: mov     -0x28(%rbp), %rdx        */
  0x48, 0x8b, 0x52, 0x20,                   /*17c: mov     0x20(%rdx), %rdx         */
  0x89, 0x44, 0x11, 0x10,                   /*180: mov     %eax, 0x10(%rcx, %rdx, 1) */
  0x48, 0x8b, 0x45, 0xd8,                   /*184: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*188: mov     0x60(%rax), %rdi         */
  0x49, 0x8d, 0x87, 0x88, 0x00, 0x00, 0x00, /*18c: lea     0x88(%r15), %rax         */
  0xff, 0xd0,                               /*193: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xc0,                   /*195: mov     %rax, -0x40(%rbp)        */
  0x8b, 0x4d, 0xac,                         /*199: mov     -0x54(%rbp), %ecx        */
  0x89, 0x08,                               /*19c: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x45, 0xb8,                   /*19e: mov     -0x48(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*1a2: mov     -0x40(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*1a6: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xd8,                   /*1aa: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*1ae: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*1b2: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*1b6: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xc0,                   /*1ba: mov     -0x40(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*1be: mov     %rax, 0x10(%rcx)         */
  0x83, 0x7d, 0xa4, 0x7f,                   /*1c2: cmpl    $0x7f, -0x5c(%rbp)       */
  0x75, 0x0d,                               /*1c6: jne     1d5                      */
  0x48, 0x8b, 0x45, 0xc0,                   /*1c8: mov     -0x40(%rbp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*1cc: movl    $0xffffffff, 0x40(%rax)  */
  0xeb, 0x0a,                               /*1d3: jmp     1df                      */
  0x8b, 0x45, 0xa4,                         /*1d5: mov     -0x5c(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*1d8: mov     -0x40(%rbp), %rcx        */
  0x89, 0x41, 0x40,                         /*1dc: mov     %eax, 0x40(%rcx)         */
  0x48, 0x8b, 0x45, 0xb0,                   /*1df: mov     -0x50(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*1e3: mov     -0x40(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*1e7: mov     %rax, 0x48(%rcx)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*1eb: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1ef: mov     0x18(%rax), %rax         */
  0x48, 0x83, 0xc0, 0x04,                   /*1f3: add     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xc0,                   /*1f7: mov     -0x40(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x30,                   /*1fb: mov     %rax, 0x30(%rcx)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*1ff: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*203: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*207: mov     0x18(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xa8,                   /*20b: movslq  -0x58(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*20f: shl     $0x4, %rcx               */
  0x48, 0x01, 0x48, 0x08,                   /*213: add     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xd8,                   /*217: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*21b: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*21f: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*223: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xc8,                   /*227: mov     -0x38(%rbp), %rcx        */
  0x48, 0x8b, 0x55, 0xd0,                   /*22b: mov     -0x30(%rbp), %rdx        */
  0x48, 0x89, 0x50, 0x08,                   /*22f: mov     %rdx, 0x8(%rax)          */
  0x48, 0x89, 0x08,                         /*233: mov     %rcx, (%rax)             */
  0x48, 0x8b, 0x45, 0xb8,                   /*236: mov     -0x48(%rbp), %rax        */
  0x8b, 0x00,                               /*23a: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*23c: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*23f: test    $0x80, %al               */
  0x74, 0x1a,                               /*241: je      25d                      */
  0x83, 0x7d, 0xa4, 0x7f,                   /*243: cmpl    $0x7f, -0x5c(%rbp)       */
  0x0f, 0x85, 0xaa, 0x00, 0x00, 0x00,       /*247: jne     2f7                      */
  0x48, 0x8b, 0x45, 0xc0,                   /*24d: mov     -0x40(%rbp), %rax        */
  0xc7, 0x40, 0x18, 0x03, 0x00, 0x00, 0x00, /*251: movl    $0x3, 0x18(%rax)         */
  0xe9, 0xa7, 0x00, 0x00, 0x00,             /*258: jmpq    304                      */
  0x8b, 0x45, 0xa8,                         /*25d: mov     -0x58(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*260: mov     -0x40(%rbp), %rcx        */
  0x89, 0x41, 0x44,                         /*264: mov     %eax, 0x44(%rcx)         */
  0x48, 0x8b, 0x45, 0xb8,                   /*267: mov     -0x48(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*26b: mov     -0x40(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*26f: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xb8,                   /*273: mov     -0x48(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*277: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xd8,                   /*27b: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*27f: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*283: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*287: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*28b: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*28f: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*293: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*297: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*29b: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x30,                   /*29f: mov     %rcx, 0x30(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*2a3: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*2a7: mov     0x10(%rax), %rax         */
  0x0f, 0xb7, 0x40, 0x02,                   /*2ab: movzwl  0x2(%rax), %eax          */
  0x48, 0x8b, 0x4d, 0xc0,                   /*2af: mov     -0x40(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*2b3: mov     %eax, 0x18(%rcx)         */
  0x83, 0x7d, 0xa4, 0x7f,                   /*2b6: cmpl    $0x7f, -0x5c(%rbp)       */
  0x0f, 0x85, 0xf7, 0x00, 0x00, 0x00,       /*2ba: jne     3b7                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*2c0: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*2c4: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*2c8: mov     0x60(%rax), %rdi         */
  0x0f, 0xb7, 0x41, 0x02,                   /*2cc: movzwl  0x2(%rcx), %eax          */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*2d0: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*2d5: cmp     $0x3, %eax               */
  0x7c, 0x0c,                               /*2d8: jl      2e6                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*2da: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*2de: mov     0x10(%rax), %rax         */
  0x0f, 0xb7, 0x70, 0x02,                   /*2e2: movzwl  0x2(%rax), %esi          */
  0x49, 0x81, 0xc7, 0xe0, 0x00, 0x00, 0x00, /*2e6: add     $0xe0, %r15              */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*2ed: mov     $0x3, %edx               */
  0xe9, 0xe1, 0x00, 0x00, 0x00,             /*2f2: jmpq    3d8                      */
  0x8b, 0x45, 0xa4,                         /*2f7: mov     -0x5c(%rbp), %eax        */
  0x83, 0xc0, 0x02,                         /*2fa: add     $0x2, %eax               */
  0x48, 0x8b, 0x4d, 0xc0,                   /*2fd: mov     -0x40(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*301: mov     %eax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*304: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*308: mov     0x60(%rax), %rdi         */
  0x48, 0x8b, 0x47, 0x18,                   /*30c: mov     0x18(%rdi), %rax         */
  0x48, 0x8b, 0x58, 0x08,                   /*310: mov     0x8(%rax), %rbx          */
  0x48, 0x8b, 0x45, 0xb8,                   /*314: mov     -0x48(%rbp), %rax        */
  0x48, 0x8b, 0x75, 0xc8,                   /*318: mov     -0x38(%rbp), %rsi        */
  0x8b, 0x55, 0xd0,                         /*31c: mov     -0x30(%rbp), %edx        */
  0xff, 0x50, 0x18,                         /*31f: callq   *0x18(%rax)              */
  0x48, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, /*322: mov     %rax, -0x90(%rbp)        */
  0x89, 0x95, 0x78, 0xff, 0xff, 0xff,       /*329: mov     %edx, -0x88(%rbp)        */
  0x48, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, /*32f: mov     -0x90(%rbp), %rax        */
  0x48, 0x8b, 0x8d, 0x78, 0xff, 0xff, 0xff, /*336: mov     -0x88(%rbp), %rcx        */
  0x48, 0x89, 0x4b, 0x08,                   /*33d: mov     %rcx, 0x8(%rbx)          */
  0x48, 0x89, 0x03,                         /*341: mov     %rax, (%rbx)             */
  0x48, 0x8b, 0x45, 0xd8,                   /*344: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*348: mov     0x60(%rax), %rdi         */
  0x8b, 0x70, 0x58,                         /*34c: mov     0x58(%rax), %esi         */
  0x49, 0x8d, 0x87, 0xb0, 0x00, 0x00, 0x00, /*34f: lea     0xb0(%r15), %rax         */
  0xff, 0xd0,                               /*356: callq   *%rax                    */
  0x48, 0x8b, 0x45, 0xd8,                   /*358: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*35c: mov     0x60(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*360: cmpq    $0x0, 0x28(%rax)         */
  0x74, 0x13,                               /*365: je      37a                      */
  0x48, 0x8b, 0x7d, 0xd8,                   /*367: mov     -0x28(%rbp), %rdi        */
  0x49, 0x81, 0xc7, 0x70, 0x01, 0x00, 0x00, /*36b: add     $0x170, %r15             */
  0x41, 0xff, 0xd7,                         /*372: callq   *%r15                    */
  0xe9, 0x85, 0x00, 0x00, 0x00,             /*375: jmpq    3ff                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*37a: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*37e: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*382: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x48, 0x20,                   /*386: mov     0x20(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*38a: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x08,                   /*38e: mov     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xd8,                   /*392: mov     -0x28(%rbp), %rax        */
  0x48, 0x89, 0x48, 0x20,                   /*396: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*39a: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*39e: mov     0x60(%rax), %rdi         */
  0x49, 0x81, 0xc7, 0x00, 0x01, 0x00, 0x00, /*3a2: add     $0x100, %r15             */
  0x41, 0xff, 0xd7,                         /*3a9: callq   *%r15                    */
  0x48, 0x8b, 0x45, 0xd8,                   /*3ac: mov     -0x28(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*3b0: addq    $0x4, 0x18(%rax)         */
  0xeb, 0x48,                               /*3b5: jmp     3ff                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*3b7: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*3bb: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*3bf: mov     0x60(%rax), %rdi         */
  0x0f, 0xb7, 0x71, 0x02,                   /*3c3: movzwl  0x2(%rcx), %esi          */
  0x48, 0x8b, 0x45, 0xc0,                   /*3c7: mov     -0x40(%rbp), %rax        */
  0x8b, 0x50, 0x40,                         /*3cb: mov     0x40(%rax), %edx         */
  0x83, 0xc2, 0x02,                         /*3ce: add     $0x2, %edx               */
  0x49, 0x81, 0xc7, 0xe0, 0x00, 0x00, 0x00, /*3d1: add     $0xe0, %r15              */
  0x41, 0xff, 0xd7,                         /*3d8: callq   *%r15                    */
  0x48, 0x8b, 0x45, 0xd8,                   /*3db: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x60,                   /*3df: mov     0x60(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*3e3: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*3e7: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x20,                   /*3eb: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*3ef: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*3f3: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*3f7: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x18,                   /*3fb: mov     %rcx, 0x18(%rax)         */
  0x48, 0x83, 0xc4, 0x70,                   /*3ff: add     $0x70, %rsp              */
  0x5b,                                     /*403: pop     %rbx                     */
  0x41, 0x5c,                               /*404: pop     %r12                     */
  0x41, 0x5e,                               /*406: pop     %r14                     */
  0x41, 0x5f,                               /*408: pop     %r15                     */
  0x5d,                                     /*40a: pop     %rbp                     */
};


static size_t op_argary_size = 863;
static uint8_t op_argary[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x41, 0x54,                               /*08: push    %r12                     */
  0x53,                                     /*0a: push    %rbx                     */
  0x48, 0x81, 0xec, 0xb0, 0x00, 0x00, 0x00, /*0b: sub     $0xb0, %rsp              */
  0x4c, 0x8b, 0x27,                         /*12: mov     (%rdi), %r12             */
  0x48, 0x89, 0x7d, 0xd8,                   /*15: mov     %rdi, -0x28(%rbp)        */
  0x8b, 0x47, 0x68,                         /*19: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*1c: shr     $0x17, %eax              */
  0x89, 0x45, 0xd4,                         /*1f: mov     %eax, -0x2c(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*22: mov     -0x28(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*26: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*29: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*2c: movzwl  %ax, %eax                */
  0x89, 0x45, 0xd0,                         /*2f: mov     %eax, -0x30(%rbp)        */
  0xc1, 0xe8, 0x0a,                         /*32: shr     $0xa, %eax               */
  0x89, 0x45, 0xcc,                         /*35: mov     %eax, -0x34(%rbp)        */
  0x8b, 0x45, 0xd0,                         /*38: mov     -0x30(%rbp), %eax        */
  0xc1, 0xe8, 0x09,                         /*3b: shr     $0x9, %eax               */
  0x83, 0xe0, 0x01,                         /*3e: and     $0x1, %eax               */
  0x89, 0x45, 0xc8,                         /*41: mov     %eax, -0x38(%rbp)        */
  0x8b, 0x45, 0xd0,                         /*44: mov     -0x30(%rbp), %eax        */
  0xc1, 0xe8, 0x04,                         /*47: shr     $0x4, %eax               */
  0x83, 0xe0, 0x1f,                         /*4a: and     $0x1f, %eax              */
  0x89, 0x45, 0xc4,                         /*4d: mov     %eax, -0x3c(%rbp)        */
  0x8b, 0x45, 0xd0,                         /*50: mov     -0x30(%rbp), %eax        */
  0x83, 0xe0, 0x0f,                         /*53: and     $0xf, %eax               */
  0x89, 0x45, 0xc0,                         /*56: mov     %eax, -0x40(%rbp)        */
  0x74, 0x2e,                               /*59: je      89                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*5b: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*5f: mov     0x60(%rax), %rdi         */
  0x8b, 0x75, 0xc0,                         /*63: mov     -0x40(%rbp), %esi        */
  0xff, 0xce,                               /*66: dec     %esi                     */
  0x49, 0x8d, 0x84, 0x24, 0x38, 0x02, 0x00, /*68: lea     0x238(%r12), %rax        */
  0x00,                                     /*6f:                                  */
  0xff, 0xd0,                               /*70: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xb0,                   /*72: mov     %rax, -0x50(%rbp)        */
  0x48, 0x85, 0xc0,                         /*76: test    %rax, %rax               */
  0x0f, 0x84, 0x3c, 0x02, 0x00, 0x00,       /*79: je      2bb                      */
  0x48, 0x8b, 0x45, 0xb0,                   /*7f: mov     -0x50(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*83: mov     0x18(%rax), %rax         */
  0xeb, 0x08,                               /*87: jmp     91                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*89: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*8d: mov     0x20(%rax), %rax         */
  0x48, 0x83, 0xc0, 0x10,                   /*91: add     $0x10, %rax              */
  0x48, 0x89, 0x45, 0xb8,                   /*95: mov     %rax, -0x48(%rbp)        */
  0x83, 0x7d, 0xc8, 0x00,                   /*99: cmpl    $0x0, -0x38(%rbp)        */
  0x0f, 0x84, 0x70, 0x01, 0x00, 0x00,       /*9d: je      213                      */
  0x48, 0xc7, 0x85, 0x60, 0xff, 0xff, 0xff, /*a3: movq    $0x0, -0xa0(%rbp)        */
  0x00, 0x00, 0x00, 0x00,                   /*aa:                                  */
  0xc7, 0x85, 0x54, 0xff, 0xff, 0xff, 0x00, /*ae: movl    $0x0, -0xac(%rbp)        */
  0x00, 0x00, 0x00,                         /*b5:                                  */
  0x48, 0x63, 0x45, 0xcc,                   /*b8: movslq  -0x34(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*bc: mov     -0x48(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*c0: shl     $0x4, %rax               */
  0x83, 0x7c, 0x01, 0x08, 0x0e,             /*c4: cmpl    $0xe, 0x8(%rcx, %rax, 1) */
  0x75, 0x32,                               /*c9: jne     fd                       */
  0x48, 0x63, 0x45, 0xcc,                   /*cb: movslq  -0x34(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*cf: mov     -0x48(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*d3: shl     $0x4, %rax               */
  0x48, 0x8b, 0x04, 0x01,                   /*d7: mov     (%rcx, %rax, 1), %rax    */
  0x48, 0x89, 0x85, 0x48, 0xff, 0xff, 0xff, /*db: mov     %rax, -0xb8(%rbp)        */
  0x48, 0x8b, 0x40, 0x28,                   /*e2: mov     0x28(%rax), %rax         */
  0x48, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, /*e6: mov     %rax, -0xa0(%rbp)        */
  0x48, 0x8b, 0x85, 0x48, 0xff, 0xff, 0xff, /*ed: mov     -0xb8(%rbp), %rax        */
  0x8b, 0x40, 0x18,                         /*f4: mov     0x18(%rax), %eax         */
  0x89, 0x85, 0x54, 0xff, 0xff, 0xff,       /*f7: mov     %eax, -0xac(%rbp)        */
  0x48, 0x63, 0x5d, 0xd4,                   /*fd: movslq  -0x2c(%rbp), %rbx        */
  0x48, 0x8b, 0x45, 0xd8,                   /*101: mov     -0x28(%rbp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*105: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x20,                   /*109: mov     0x20(%rax), %r14         */
  0x48, 0x8b, 0x78, 0x60,                   /*10d: mov     0x60(%rax), %rdi         */
  0x8b, 0x75, 0xcc,                         /*111: mov     -0x34(%rbp), %esi        */
  0x03, 0xb5, 0x54, 0xff, 0xff, 0xff,       /*114: add     -0xac(%rbp), %esi        */
  0x03, 0x75, 0xc4,                         /*11a: add     -0x3c(%rbp), %esi        */
  0x49, 0x8d, 0x44, 0x24, 0x78,             /*11d: lea     0x78(%r12), %rax         */
  0xff, 0xd0,                               /*122: callq   *%rax                    */
  0x48, 0x89, 0x85, 0x38, 0xff, 0xff, 0xff, /*124: mov     %rax, -0xc8(%rbp)        */
  0x89, 0x95, 0x40, 0xff, 0xff, 0xff,       /*12b: mov     %edx, -0xc0(%rbp)        */
  0x48, 0x8b, 0x85, 0x38, 0xff, 0xff, 0xff, /*131: mov     -0xc8(%rbp), %rax        */
  0x48, 0x8b, 0x8d, 0x40, 0xff, 0xff, 0xff, /*138: mov     -0xc0(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*13f: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*144: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x63, 0x45, 0xd4,                   /*148: movslq  -0x2c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*14c: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*150: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*154: shl     $0x4, %rax               */
  0x48, 0x8b, 0x04, 0x01,                   /*158: mov     (%rcx, %rax, 1), %rax    */
  0x48, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, /*15c: mov     %rax, -0xa8(%rbp)        */
  0x83, 0x7d, 0xcc, 0x00,                   /*163: cmpl    $0x0, -0x34(%rbp)        */
  0x7e, 0x1d,                               /*167: jle     186                      */
  0x48, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, /*169: mov     -0xa8(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x28,                   /*170: mov     0x28(%rax), %rdi         */
  0x48, 0x8b, 0x75, 0xb8,                   /*174: mov     -0x48(%rbp), %rsi        */
  0x48, 0x63, 0x55, 0xcc,                   /*178: movslq  -0x34(%rbp), %rdx        */
  0x49, 0x8d, 0x84, 0x24, 0x28, 0x02, 0x00, /*17c: lea     0x228(%r12), %rax        */
  0x00,                                     /*183:                                  */
  0xff, 0xd0,                               /*184: callq   *%rax                    */
  0x83, 0xbd, 0x54, 0xff, 0xff, 0xff, 0x00, /*186: cmpl    $0x0, -0xac(%rbp)        */
  0x7e, 0x2b,                               /*18d: jle     1ba                      */
  0x48, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, /*18f: mov     -0xa8(%rbp), %rax        */
  0x48, 0x63, 0x7d, 0xcc,                   /*196: movslq  -0x34(%rbp), %rdi        */
  0x48, 0xc1, 0xe7, 0x04,                   /*19a: shl     $0x4, %rdi               */
  0x48, 0x03, 0x78, 0x28,                   /*19e: add     0x28(%rax), %rdi         */
  0x48, 0x8b, 0xb5, 0x60, 0xff, 0xff, 0xff, /*1a2: mov     -0xa0(%rbp), %rsi        */
  0x48, 0x63, 0x95, 0x54, 0xff, 0xff, 0xff, /*1a9: movslq  -0xac(%rbp), %rdx        */
  0x49, 0x8d, 0x84, 0x24, 0x28, 0x02, 0x00, /*1b0: lea     0x228(%r12), %rax        */
  0x00,                                     /*1b7:                                  */
  0xff, 0xd0,                               /*1b8: callq   *%rax                    */
  0x83, 0x7d, 0xc4, 0x00,                   /*1ba: cmpl    $0x0, -0x3c(%rbp)        */
  0x7e, 0x3b,                               /*1be: jle     1fb                      */
  0x48, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, /*1c0: mov     -0xa8(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xcc,                   /*1c7: movslq  -0x34(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*1cb: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x40, 0x28,                   /*1cf: mov     0x28(%rax), %rax         */
  0x48, 0x01, 0xc8,                         /*1d3: add     %rcx, %rax               */
  0x48, 0x63, 0xbd, 0x54, 0xff, 0xff, 0xff, /*1d6: movslq  -0xac(%rbp), %rdi        */
  0x48, 0xc1, 0xe7, 0x04,                   /*1dd: shl     $0x4, %rdi               */
  0x48, 0x01, 0xc7,                         /*1e1: add     %rax, %rdi               */
  0x48, 0x8b, 0x45, 0xb8,                   /*1e4: mov     -0x48(%rbp), %rax        */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*1e8: lea     0x10(%rax, %rcx, 1), %rsi */
  0x48, 0x63, 0x55, 0xc4,                   /*1ed: movslq  -0x3c(%rbp), %rdx        */
  0x49, 0x81, 0xc4, 0x20, 0x02, 0x00, 0x00, /*1f1: add     $0x220, %r12             */
  0x41, 0xff, 0xd4,                         /*1f8: callq   *%r12                    */
  0x8b, 0x45, 0xcc,                         /*1fb: mov     -0x34(%rbp), %eax        */
  0x03, 0x85, 0x54, 0xff, 0xff, 0xff,       /*1fe: add     -0xac(%rbp), %eax        */
  0x03, 0x45, 0xc4,                         /*204: add     -0x3c(%rbp), %eax        */
  0x48, 0x8b, 0x8d, 0x58, 0xff, 0xff, 0xff, /*207: mov     -0xa8(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*20e: mov     %eax, 0x18(%rcx)         */
  0xeb, 0x4c,                               /*211: jmp     25f                      */
  0x48, 0x63, 0x5d, 0xd4,                   /*213: movslq  -0x2c(%rbp), %rbx        */
  0x48, 0x8b, 0x45, 0xd8,                   /*217: mov     -0x28(%rbp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*21b: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x20,                   /*21f: mov     0x20(%rax), %r14         */
  0x48, 0x8b, 0x78, 0x60,                   /*223: mov     0x60(%rax), %rdi         */
  0x8b, 0x75, 0xcc,                         /*227: mov     -0x34(%rbp), %esi        */
  0x03, 0x75, 0xc4,                         /*22a: add     -0x3c(%rbp), %esi        */
  0x48, 0x8b, 0x55, 0xb8,                   /*22d: mov     -0x48(%rbp), %rdx        */
  0x49, 0x81, 0xc4, 0xf0, 0x01, 0x00, 0x00, /*231: add     $0x1f0, %r12             */
  0x41, 0xff, 0xd4,                         /*238: callq   *%r12                    */
  0x48, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, /*23b: mov     %rax, -0x98(%rbp)        */
  0x89, 0x95, 0x70, 0xff, 0xff, 0xff,       /*242: mov     %edx, -0x90(%rbp)        */
  0x48, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, /*248: mov     -0x98(%rbp), %rax        */
  0x48, 0x8b, 0x8d, 0x70, 0xff, 0xff, 0xff, /*24f: mov     -0x90(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*256: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*25b: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x63, 0x45, 0xd4,                   /*25f: movslq  -0x2c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*263: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xd8,                   /*267: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*26b: mov     0x20(%rcx), %rcx         */
  0x48, 0x63, 0x55, 0xcc,                   /*26f: movslq  -0x34(%rbp), %rdx        */
  0x48, 0x63, 0x75, 0xc8,                   /*273: movslq  -0x38(%rbp), %rsi        */
  0x48, 0x01, 0xd6,                         /*277: add     %rdx, %rsi               */
  0x48, 0x63, 0x55, 0xc4,                   /*27a: movslq  -0x3c(%rbp), %rdx        */
  0x48, 0x01, 0xf2,                         /*27e: add     %rsi, %rdx               */
  0x48, 0x8b, 0x75, 0xb8,                   /*281: mov     -0x48(%rbp), %rsi        */
  0x48, 0xc1, 0xe2, 0x04,                   /*285: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x3c, 0x16,                   /*289: mov     (%rsi, %rdx, 1), %rdi    */
  0x48, 0x8b, 0x54, 0x16, 0x08,             /*28d: mov     0x8(%rsi, %rdx, 1), %rdx */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*292: mov     %rdx, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x7c, 0x08, 0x10,             /*297: mov     %rdi, 0x10(%rax, %rcx, 1) */
  0x48, 0x8b, 0x45, 0xd8,                   /*29c: mov     -0x28(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*2a0: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*2a3: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*2a7: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*2ad: mov     -0x28(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*2b1: addq    $0x4, 0x18(%rax)         */
  0xe9, 0x95, 0x00, 0x00, 0x00,             /*2b6: jmpq    350                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*2bb: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*2bf: mov     0x60(%rax), %rdi         */
  0x48, 0x89, 0x7d, 0x98,                   /*2c3: mov     %rdi, -0x68(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*2c7: mov     -0x28(%rbp), %rax        */
  0x4c, 0x8b, 0x70, 0x60,                   /*2cb: mov     0x60(%rax), %r14         */
  0x49, 0x8b, 0x34, 0x24,                   /*2cf: mov     (%r12), %rsi             */
  0x49, 0x8d, 0x84, 0x24, 0xb8, 0x00, 0x00, /*2d3: lea     0xb8(%r12), %rax         */
  0x00,                                     /*2da:                                  */
  0xff, 0xd0,                               /*2db: callq   *%rax                    */
  0x49, 0x89, 0xc7,                         /*2dd: mov     %rax, %r15               */
  0x48, 0x8b, 0x45, 0xd8,                   /*2e0: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*2e4: mov     0x60(%rax), %rdi         */
  0x49, 0x8d, 0x44, 0x24, 0x10,             /*2e8: lea     0x10(%r12), %rax         */
  0x49, 0x8d, 0xb4, 0x24, 0x58, 0x02, 0x00, /*2ed: lea     0x258(%r12), %rsi        */
  0x00,                                     /*2f4:                                  */
  0xba, 0x1e, 0x00, 0x00, 0x00,             /*2f5: mov     $0x1e, %edx              */
  0xff, 0xd0,                               /*2fa: callq   *%rax                    */
  0x89, 0xd1,                               /*2fc: mov     %edx, %ecx               */
  0x48, 0x89, 0x45, 0x88,                   /*2fe: mov     %rax, -0x78(%rbp)        */
  0x89, 0x4d, 0x90,                         /*302: mov     %ecx, -0x70(%rbp)        */
  0x48, 0x8b, 0x55, 0x88,                   /*305: mov     -0x78(%rbp), %rdx        */
  0x49, 0x8d, 0x84, 0x24, 0x88, 0x01, 0x00, /*309: lea     0x188(%r12), %rax        */
  0x00,                                     /*310:                                  */
  0x4c, 0x89, 0xf7,                         /*311: mov     %r14, %rdi               */
  0x4c, 0x89, 0xfe,                         /*314: mov     %r15, %rsi               */
  0xff, 0xd0,                               /*317: callq   *%rax                    */
  0x48, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, /*319: mov     %rax, -0x88(%rbp)        */
  0x89, 0x55, 0x80,                         /*320: mov     %edx, -0x80(%rbp)        */
  0x48, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, /*323: mov     -0x88(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x80,                   /*32a: mov     -0x80(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xa8,                   /*32e: mov     %rcx, -0x58(%rbp)        */
  0x48, 0x89, 0x45, 0xa0,                   /*332: mov     %rax, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0xa0,                   /*336: mov     -0x60(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x98,                   /*33a: mov     -0x68(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x28,                   /*33e: mov     %rax, 0x28(%rcx)         */
  0x48, 0x8b, 0x7d, 0xd8,                   /*342: mov     -0x28(%rbp), %rdi        */
  0x49, 0x81, 0xc4, 0x70, 0x01, 0x00, 0x00, /*346: add     $0x170, %r12             */
  0x41, 0xff, 0xd4,                         /*34d: callq   *%r12                    */
  0x48, 0x81, 0xc4, 0xb0, 0x00, 0x00, 0x00, /*350: add     $0xb0, %rsp              */
  0x5b,                                     /*357: pop     %rbx                     */
  0x41, 0x5c,                               /*358: pop     %r12                     */
  0x41, 0x5e,                               /*35a: pop     %r14                     */
  0x41, 0x5f,                               /*35c: pop     %r15                     */
  0x5d,                                     /*35e: pop     %rbp                     */
};


static size_t op_enter_size = 1297;
static uint8_t op_enter[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x53,                                     /*08: push    %rbx                     */
  0x48, 0x81, 0xec, 0x88, 0x00, 0x00, 0x00, /*09: sub     $0x88, %rsp              */
  0x4c, 0x8b, 0x37,                         /*10: mov     (%rdi), %r14             */
  0x48, 0x89, 0x7d, 0xe0,                   /*13: mov     %rdi, -0x20(%rbp)        */
  0x8b, 0x47, 0x68,                         /*17: mov     0x68(%rdi), %eax         */
  0x89, 0xc1,                               /*1a: mov     %eax, %ecx               */
  0xc1, 0xe9, 0x07,                         /*1c: shr     $0x7, %ecx               */
  0x89, 0x4d, 0xdc,                         /*1f: mov     %ecx, -0x24(%rbp)        */
  0xc1, 0xe8, 0x19,                         /*22: shr     $0x19, %eax              */
  0x83, 0xe0, 0x1f,                         /*25: and     $0x1f, %eax              */
  0x89, 0x45, 0xd8,                         /*28: mov     %eax, -0x28(%rbp)        */
  0x8b, 0x45, 0xdc,                         /*2b: mov     -0x24(%rbp), %eax        */
  0xc1, 0xe8, 0x0d,                         /*2e: shr     $0xd, %eax               */
  0x83, 0xe0, 0x1f,                         /*31: and     $0x1f, %eax              */
  0x89, 0x45, 0xd4,                         /*34: mov     %eax, -0x2c(%rbp)        */
  0x8b, 0x45, 0xdc,                         /*37: mov     -0x24(%rbp), %eax        */
  0xc1, 0xe8, 0x0c,                         /*3a: shr     $0xc, %eax               */
  0x83, 0xe0, 0x01,                         /*3d: and     $0x1, %eax               */
  0x89, 0x45, 0xd0,                         /*40: mov     %eax, -0x30(%rbp)        */
  0x8b, 0x45, 0xdc,                         /*43: mov     -0x24(%rbp), %eax        */
  0xc1, 0xe8, 0x07,                         /*46: shr     $0x7, %eax               */
  0x83, 0xe0, 0x1f,                         /*49: and     $0x1f, %eax              */
  0x89, 0x45, 0xcc,                         /*4c: mov     %eax, -0x34(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*4f: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*53: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*57: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*5b: mov     0x20(%rax), %rax         */
  0x8b, 0x40, 0x40,                         /*5f: mov     0x40(%rax), %eax         */
  0x89, 0x45, 0xc8,                         /*62: mov     %eax, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*65: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*69: mov     0x20(%rax), %rax         */
  0x48, 0x83, 0xc0, 0x10,                   /*6d: add     $0x10, %rax              */
  0x48, 0x89, 0x45, 0xc0,                   /*71: mov     %rax, -0x40(%rbp)        */
  0x48, 0x89, 0x45, 0xb8,                   /*75: mov     %rax, -0x48(%rbp)        */
  0x8b, 0x45, 0xd8,                         /*79: mov     -0x28(%rbp), %eax        */
  0x03, 0x45, 0xd4,                         /*7c: add     -0x2c(%rbp), %eax        */
  0x03, 0x45, 0xd0,                         /*7f: add     -0x30(%rbp), %eax        */
  0x03, 0x45, 0xcc,                         /*82: add     -0x34(%rbp), %eax        */
  0x89, 0x45, 0xb4,                         /*85: mov     %eax, -0x4c(%rbp)        */
  0xb8, 0x01, 0x00, 0x00, 0x00,             /*88: mov     $0x1, %eax               */
  0x83, 0x7d, 0xc8, 0x00,                   /*8d: cmpl    $0x0, -0x38(%rbp)        */
  0x78, 0x03,                               /*91: js      96                       */
  0x8b, 0x45, 0xc8,                         /*93: mov     -0x38(%rbp), %eax        */
  0x48, 0x98,                               /*96: cltq                             */
  0x48, 0x8b, 0x4d, 0xc0,                   /*98: mov     -0x40(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*9c: shl     $0x4, %rax               */
  0x48, 0x8d, 0x14, 0x01,                   /*a0: lea     (%rcx, %rax, 1), %rdx    */
  0x48, 0x89, 0x55, 0xa8,                   /*a4: mov     %rdx, -0x58(%rbp)        */
  0x83, 0x7c, 0x01, 0x08, 0x00,             /*a8: cmpl    $0x0, 0x8(%rcx, %rax, 1) */
  0x75, 0x09,                               /*ad: jne     b8                       */
  0x48, 0x8b, 0x45, 0xa8,                   /*af: mov     -0x58(%rbp), %rax        */
  0x83, 0x38, 0x00,                         /*b3: cmpl    $0x0, (%rax)             */
  0x74, 0x4e,                               /*b6: je      106                      */
  0x48, 0x8b, 0x45, 0xa8,                   /*b8: mov     -0x58(%rbp), %rax        */
  0x83, 0x78, 0x08, 0x0d,                   /*bc: cmpl    $0xd, 0x8(%rax)          */
  0x74, 0x44,                               /*c0: je      106                      */
  0x48, 0x8b, 0x5d, 0xa8,                   /*c2: mov     -0x58(%rbp), %rbx        */
  0x48, 0x8b, 0x45, 0xe0,                   /*c6: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*ca: mov     0x60(%rax), %rdi         */
  0x48, 0x8b, 0x33,                         /*ce: mov     (%rbx), %rsi             */
  0x8b, 0x53, 0x08,                         /*d1: mov     0x8(%rbx), %edx          */
  0x49, 0x8d, 0x86, 0xb8, 0x00, 0x00, 0x00, /*d4: lea     0xb8(%r14), %rax         */
  0x4d, 0x8d, 0x86, 0x60, 0x02, 0x00, 0x00, /*db: lea     0x260(%r14), %r8         */
  0x4d, 0x8d, 0x8e, 0x68, 0x02, 0x00, 0x00, /*e2: lea     0x268(%r14), %r9         */
  0xb9, 0x0d, 0x00, 0x00, 0x00,             /*e9: mov     $0xd, %ecx               */
  0xff, 0xd0,                               /*ee: callq   *%rax                    */
  0x48, 0x89, 0x45, 0x98,                   /*f0: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*f4: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*f7: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*fb: mov     -0x60(%rbp), %rcx        */
  0x48, 0x89, 0x4b, 0x08,                   /*ff: mov     %rcx, 0x8(%rbx)          */
  0x48, 0x89, 0x03,                         /*103: mov     %rax, (%rbx)             */
  0x83, 0x7d, 0xc8, 0x00,                   /*106: cmpl    $0x0, -0x38(%rbp)        */
  0x79, 0x3e,                               /*10a: jns     14a                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*10c: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*110: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x10,                   /*114: mov     0x10(%rax), %rax         */
  0x48, 0x89, 0x45, 0x90,                   /*118: mov     %rax, -0x70(%rbp)        */
  0x48, 0x8b, 0x40, 0x28,                   /*11c: mov     0x28(%rax), %rax         */
  0x48, 0x89, 0x45, 0xc0,                   /*120: mov     %rax, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0x90,                   /*124: mov     -0x70(%rbp), %rax        */
  0x8b, 0x40, 0x18,                         /*128: mov     0x18(%rax), %eax         */
  0x89, 0x45, 0xc8,                         /*12b: mov     %eax, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*12e: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x20,                   /*132: mov     0x20(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*136: mov     0x60(%rax), %rdi         */
  0x48, 0x8b, 0x71, 0x10,                   /*13a: mov     0x10(%rcx), %rsi         */
  0x8b, 0x51, 0x18,                         /*13e: mov     0x18(%rcx), %edx         */
  0x49, 0x8d, 0x86, 0xa0, 0x01, 0x00, 0x00, /*141: lea     0x1a0(%r14), %rax        */
  0xff, 0xd0,                               /*148: callq   *%rax                    */
  0x48, 0x8b, 0x45, 0xe0,                   /*14a: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*14e: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*152: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*156: mov     0x20(%rax), %rax         */
  0x48, 0x83, 0x78, 0x08, 0x00,             /*15a: cmpq    $0x0, 0x8(%rax)          */
  0x74, 0x6b,                               /*15f: je      1cc                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*161: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*165: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*169: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*16d: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*171: mov     0x8(%rax), %rax          */
  0x8b, 0x00,                               /*175: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*177: shr     $0xb, %eax               */
  0xf6, 0xc4, 0x01,                         /*17a: test    $0x1, %ah                */
  0x74, 0x4d,                               /*17d: je      1cc                      */
  0x83, 0x7d, 0xc8, 0x00,                   /*17f: cmpl    $0x0, -0x38(%rbp)        */
  0x0f, 0x88, 0x90, 0x00, 0x00, 0x00,       /*183: js      219                      */
  0x8b, 0x45, 0xd8,                         /*189: mov     -0x28(%rbp), %eax        */
  0x03, 0x45, 0xcc,                         /*18c: add     -0x34(%rbp), %eax        */
  0x39, 0x45, 0xc8,                         /*18f: cmp     %eax, -0x38(%rbp)        */
  0x7c, 0x0e,                               /*192: jl      1a2                      */
  0x83, 0x7d, 0xd0, 0x00,                   /*194: cmpl    $0x0, -0x30(%rbp)        */
  0x75, 0x7f,                               /*198: jne     219                      */
  0x8b, 0x45, 0xc8,                         /*19a: mov     -0x38(%rbp), %eax        */
  0x3b, 0x45, 0xb4,                         /*19d: cmp     -0x4c(%rbp), %eax        */
  0x7e, 0x77,                               /*1a0: jle     219                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*1a2: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*1a6: mov     0x60(%rax), %rdi         */
  0x8b, 0x75, 0xd8,                         /*1aa: mov     -0x28(%rbp), %esi        */
  0x03, 0x75, 0xcc,                         /*1ad: add     -0x34(%rbp), %esi        */
  0x49, 0x8d, 0x86, 0x28, 0x02, 0x00, 0x00, /*1b0: lea     0x228(%r14), %rax        */
  0xff, 0xd0,                               /*1b7: callq   *%rax                    */
  0x48, 0x8b, 0x7d, 0xe0,                   /*1b9: mov     -0x20(%rbp), %rdi        */
  0x49, 0x81, 0xc6, 0x70, 0x01, 0x00, 0x00, /*1bd: add     $0x170, %r14             */
  0x41, 0xff, 0xd6,                         /*1c4: callq   *%r14                    */
  0xe9, 0x38, 0x03, 0x00, 0x00,             /*1c7: jmpq    504                      */
  0x83, 0x7d, 0xb4, 0x02,                   /*1cc: cmpl    $0x2, -0x4c(%rbp)        */
  0x7c, 0x47,                               /*1d0: jl      219                      */
  0x83, 0x7d, 0xc8, 0x01,                   /*1d2: cmpl    $0x1, -0x38(%rbp)        */
  0x75, 0x41,                               /*1d6: jne     219                      */
  0x48, 0x8b, 0x45, 0xc0,                   /*1d8: mov     -0x40(%rbp), %rax        */
  0x83, 0x78, 0x08, 0x0e,                   /*1dc: cmpl    $0xe, 0x8(%rax)          */
  0x75, 0x37,                               /*1e0: jne     219                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*1e2: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*1e6: mov     0x60(%rax), %rdi         */
  0x48, 0x8b, 0x45, 0xc0,                   /*1ea: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x30,                         /*1ee: mov     (%rax), %rsi             */
  0x8b, 0x50, 0x08,                         /*1f1: mov     0x8(%rax), %edx          */
  0x49, 0x8d, 0x86, 0x98, 0x01, 0x00, 0x00, /*1f4: lea     0x198(%r14), %rax        */
  0xff, 0xd0,                               /*1fb: callq   *%rax                    */
  0x48, 0x8b, 0x45, 0xc0,                   /*1fd: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x00,                         /*201: mov     (%rax), %rax             */
  0x8b, 0x40, 0x18,                         /*204: mov     0x18(%rax), %eax         */
  0x89, 0x45, 0xc8,                         /*207: mov     %eax, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*20a: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x00,                         /*20e: mov     (%rax), %rax             */
  0x48, 0x8b, 0x40, 0x28,                   /*211: mov     0x28(%rax), %rax         */
  0x48, 0x89, 0x45, 0xc0,                   /*215: mov     %rax, -0x40(%rbp)        */
  0x8b, 0x45, 0xb4,                         /*219: mov     -0x4c(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*21c: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x60,                   /*220: mov     0x60(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*224: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*228: mov     0x20(%rcx), %rcx         */
  0x89, 0x41, 0x40,                         /*22c: mov     %eax, 0x40(%rcx)         */
  0x8b, 0x45, 0xc8,                         /*22f: mov     -0x38(%rbp), %eax        */
  0x3b, 0x45, 0xb4,                         /*232: cmp     -0x4c(%rbp), %eax        */
  0x7d, 0x2f,                               /*235: jge     266                      */
  0x8b, 0x45, 0xcc,                         /*237: mov     -0x34(%rbp), %eax        */
  0x89, 0x45, 0x8c,                         /*23a: mov     %eax, -0x74(%rbp)        */
  0x8b, 0x45, 0xd8,                         /*23d: mov     -0x28(%rbp), %eax        */
  0x03, 0x45, 0xcc,                         /*240: add     -0x34(%rbp), %eax        */
  0x39, 0x45, 0xc8,                         /*243: cmp     %eax, -0x38(%rbp)        */
  0x0f, 0x8d, 0x75, 0x01, 0x00, 0x00,       /*246: jge     3c1                      */
  0x8b, 0x45, 0xd8,                         /*24c: mov     -0x28(%rbp), %eax        */
  0x3b, 0x45, 0xc8,                         /*24f: cmp     -0x38(%rbp), %eax        */
  0x0f, 0x8d, 0x62, 0x01, 0x00, 0x00,       /*252: jge     3ba                      */
  0x8b, 0x45, 0xc8,                         /*258: mov     -0x38(%rbp), %eax        */
  0x2b, 0x45, 0xd8,                         /*25b: sub     -0x28(%rbp), %eax        */
  0x89, 0x45, 0x8c,                         /*25e: mov     %eax, -0x74(%rbp)        */
  0xe9, 0x5b, 0x01, 0x00, 0x00,             /*261: jmpq    3c1                      */
  0xc7, 0x85, 0x74, 0xff, 0xff, 0xff, 0x00, /*266: movl    $0x0, -0x8c(%rbp)        */
  0x00, 0x00, 0x00,                         /*26d:                                  */
  0x48, 0x8b, 0x45, 0xb8,                   /*270: mov     -0x48(%rbp), %rax        */
  0x48, 0x3b, 0x45, 0xc0,                   /*274: cmp     -0x40(%rbp), %rax        */
  0x74, 0x46,                               /*278: je      2c0                      */
  0x48, 0x63, 0x45, 0xb4,                   /*27a: movslq  -0x4c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*27e: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*282: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*286: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x55, 0xa8,                   /*28a: mov     -0x58(%rbp), %rdx        */
  0x48, 0x8b, 0x32,                         /*28e: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*291: mov     0x8(%rdx), %rdx          */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*295: mov     %rdx, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x74, 0x08, 0x10,             /*29a: mov     %rsi, 0x10(%rax, %rcx, 1) */
  0x48, 0x8b, 0x45, 0xe0,                   /*29f: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x20,                   /*2a3: mov     0x20(%rax), %rdi         */
  0x48, 0x83, 0xc7, 0x10,                   /*2a7: add     $0x10, %rdi              */
  0x48, 0x8b, 0x75, 0xc0,                   /*2ab: mov     -0x40(%rbp), %rsi        */
  0x48, 0x63, 0x45, 0xd8,                   /*2af: movslq  -0x28(%rbp), %rax        */
  0x48, 0x63, 0x55, 0xd4,                   /*2b3: movslq  -0x2c(%rbp), %rdx        */
  0x48, 0x01, 0xc2,                         /*2b7: add     %rax, %rdx               */
  0x49, 0x8d, 0x46, 0x50,                   /*2ba: lea     0x50(%r14), %rax         */
  0xff, 0xd0,                               /*2be: callq   *%rax                    */
  0x83, 0x7d, 0xd0, 0x00,                   /*2c0: cmpl    $0x0, -0x30(%rbp)        */
  0x74, 0x6b,                               /*2c4: je      331                      */
  0x8b, 0x75, 0xc8,                         /*2c6: mov     -0x38(%rbp), %esi        */
  0x2b, 0x75, 0xd8,                         /*2c9: sub     -0x28(%rbp), %esi        */
  0x2b, 0x75, 0xd4,                         /*2cc: sub     -0x2c(%rbp), %esi        */
  0x2b, 0x75, 0xcc,                         /*2cf: sub     -0x34(%rbp), %esi        */
  0x89, 0xb5, 0x74, 0xff, 0xff, 0xff,       /*2d2: mov     %esi, -0x8c(%rbp)        */
  0x48, 0x63, 0x45, 0xd8,                   /*2d8: movslq  -0x28(%rbp), %rax        */
  0x48, 0x63, 0x55, 0xd4,                   /*2dc: movslq  -0x2c(%rbp), %rdx        */
  0x48, 0x8d, 0x1c, 0x10,                   /*2e0: lea     (%rax, %rdx, 1), %rbx    */
  0x48, 0xc1, 0xe3, 0x04,                   /*2e4: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*2e8: mov     -0x20(%rbp), %rcx        */
  0x4c, 0x8b, 0x79, 0x20,                   /*2ec: mov     0x20(%rcx), %r15         */
  0x48, 0x8b, 0x79, 0x60,                   /*2f0: mov     0x60(%rcx), %rdi         */
  0x48, 0xc1, 0xe0, 0x04,                   /*2f4: shl     $0x4, %rax               */
  0x48, 0x03, 0x45, 0xc0,                   /*2f8: add     -0x40(%rbp), %rax        */
  0x48, 0xc1, 0xe2, 0x04,                   /*2fc: shl     $0x4, %rdx               */
  0x48, 0x01, 0xc2,                         /*300: add     %rax, %rdx               */
  0x49, 0x8d, 0x86, 0xf0, 0x01, 0x00, 0x00, /*303: lea     0x1f0(%r14), %rax        */
  0xff, 0xd0,                               /*30a: callq   *%rax                    */
  0x48, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, /*30c: mov     %rax, -0xa0(%rbp)        */
  0x89, 0x95, 0x68, 0xff, 0xff, 0xff,       /*313: mov     %edx, -0x98(%rbp)        */
  0x48, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, /*319: mov     -0xa0(%rbp), %rax        */
  0x48, 0x8b, 0x8d, 0x68, 0xff, 0xff, 0xff, /*320: mov     -0x98(%rbp), %rcx        */
  0x4a, 0x89, 0x4c, 0x3b, 0x18,             /*327: mov     %rcx, 0x18(%rbx, %r15, 1) */
  0x4a, 0x89, 0x44, 0x3b, 0x10,             /*32c: mov     %rax, 0x10(%rbx, %r15, 1) */
  0x83, 0x7d, 0xcc, 0x00,                   /*331: cmpl    $0x0, -0x34(%rbp)        */
  0x74, 0x4b,                               /*335: je      382                      */
  0x8b, 0x45, 0xc8,                         /*337: mov     -0x38(%rbp), %eax        */
  0x2b, 0x45, 0xcc,                         /*33a: sub     -0x34(%rbp), %eax        */
  0x3b, 0x45, 0xd8,                         /*33d: cmp     -0x28(%rbp), %eax        */
  0x7e, 0x40,                               /*340: jle     382                      */
  0x48, 0x63, 0x45, 0xd8,                   /*342: movslq  -0x28(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xd4,                   /*346: movslq  -0x2c(%rbp), %rcx        */
  0x48, 0x01, 0xc1,                         /*34a: add     %rax, %rcx               */
  0x48, 0x63, 0x45, 0xd0,                   /*34d: movslq  -0x30(%rbp), %rax        */
  0x48, 0x01, 0xc8,                         /*351: add     %rcx, %rax               */
  0x48, 0xc1, 0xe0, 0x04,                   /*354: shl     $0x4, %rax               */
  0x48, 0x8b, 0x55, 0xe0,                   /*358: mov     -0x20(%rbp), %rdx        */
  0x48, 0x8b, 0x52, 0x20,                   /*35c: mov     0x20(%rdx), %rdx         */
  0x48, 0x8d, 0x7c, 0x10, 0x10,             /*360: lea     0x10(%rax, %rdx, 1), %rdi */
  0x48, 0x63, 0xb5, 0x74, 0xff, 0xff, 0xff, /*365: movslq  -0x8c(%rbp), %rsi        */
  0x48, 0x01, 0xce,                         /*36c: add     %rcx, %rsi               */
  0x48, 0xc1, 0xe6, 0x04,                   /*36f: shl     $0x4, %rsi               */
  0x48, 0x03, 0x75, 0xc0,                   /*373: add     -0x40(%rbp), %rsi        */
  0x48, 0x63, 0x55, 0xcc,                   /*377: movslq  -0x34(%rbp), %rdx        */
  0x49, 0x83, 0xc6, 0x50,                   /*37b: add     $0x50, %r14              */
  0x41, 0xff, 0xd6,                         /*37f: callq   *%r14                    */
  0x48, 0x8b, 0x45, 0xb8,                   /*382: mov     -0x48(%rbp), %rax        */
  0x48, 0x3b, 0x45, 0xc0,                   /*386: cmp     -0x40(%rbp), %rax        */
  0x75, 0x25,                               /*38a: jne     3b1                      */
  0x48, 0x63, 0x45, 0xb4,                   /*38c: movslq  -0x4c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*390: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*394: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*398: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x55, 0xa8,                   /*39c: mov     -0x58(%rbp), %rdx        */
  0x48, 0x8b, 0x32,                         /*3a0: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*3a3: mov     0x8(%rdx), %rdx          */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*3a7: mov     %rdx, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x74, 0x08, 0x10,             /*3ac: mov     %rsi, 0x10(%rax, %rcx, 1) */
  0x48, 0x63, 0x45, 0xd4,                   /*3b1: movslq  -0x2c(%rbp), %rax        */
  0xe9, 0x39, 0x01, 0x00, 0x00,             /*3b5: jmpq    4f3                      */
  0xc7, 0x45, 0x8c, 0x00, 0x00, 0x00, 0x00, /*3ba: movl    $0x0, -0x74(%rbp)        */
  0x48, 0x63, 0x45, 0xb4,                   /*3c1: movslq  -0x4c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*3c5: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3c9: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*3cd: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x55, 0xa8,                   /*3d1: mov     -0x58(%rbp), %rdx        */
  0x48, 0x8b, 0x32,                         /*3d5: mov     (%rdx), %rsi             */
  0x48, 0x8b, 0x52, 0x08,                   /*3d8: mov     0x8(%rdx), %rdx          */
  0x48, 0x89, 0x54, 0x08, 0x18,             /*3dc: mov     %rdx, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x74, 0x08, 0x10,             /*3e1: mov     %rsi, 0x10(%rax, %rcx, 1) */
  0x48, 0x63, 0x45, 0xc8,                   /*3e6: movslq  -0x38(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*3ea: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3ee: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*3f2: mov     0x20(%rcx), %rcx         */
  0xc7, 0x44, 0x08, 0x18, 0x00, 0x00, 0x00, /*3f6: movl    $0x0, 0x18(%rax, %rcx, 1) */
  0x00,                                     /*3fd:                                  */
  0x48, 0x63, 0x45, 0xc8,                   /*3fe: movslq  -0x38(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*402: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*406: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*40a: mov     0x20(%rcx), %rcx         */
  0xc7, 0x44, 0x08, 0x10, 0x00, 0x00, 0x00, /*40e: movl    $0x0, 0x10(%rax, %rcx, 1) */
  0x00,                                     /*415:                                  */
  0x48, 0x8b, 0x45, 0xb8,                   /*416: mov     -0x48(%rbp), %rax        */
  0x48, 0x3b, 0x45, 0xc0,                   /*41a: cmp     -0x40(%rbp), %rax        */
  0x74, 0x21,                               /*41e: je      441                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*420: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x20,                   /*424: mov     0x20(%rax), %rdi         */
  0x48, 0x83, 0xc7, 0x10,                   /*428: add     $0x10, %rdi              */
  0x48, 0x8b, 0x75, 0xc0,                   /*42c: mov     -0x40(%rbp), %rsi        */
  0x48, 0x63, 0x55, 0xc8,                   /*430: movslq  -0x38(%rbp), %rdx        */
  0x48, 0x63, 0x45, 0x8c,                   /*434: movslq  -0x74(%rbp), %rax        */
  0x48, 0x29, 0xc2,                         /*438: sub     %rax, %rdx               */
  0x49, 0x8d, 0x46, 0x50,                   /*43b: lea     0x50(%r14), %rax         */
  0xff, 0xd0,                               /*43f: callq   *%rax                    */
  0x83, 0x7d, 0x8c, 0x00,                   /*441: cmpl    $0x0, -0x74(%rbp)        */
  0x74, 0x35,                               /*445: je      47c                      */
  0x48, 0x63, 0x45, 0xb4,                   /*447: movslq  -0x4c(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xcc,                   /*44b: movslq  -0x34(%rbp), %rcx        */
  0x48, 0x29, 0xc8,                         /*44f: sub     %rcx, %rax               */
  0x48, 0xc1, 0xe0, 0x04,                   /*452: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*456: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*45a: mov     0x20(%rcx), %rcx         */
  0x48, 0x8d, 0x7c, 0x08, 0x10,             /*45e: lea     0x10(%rax, %rcx, 1), %rdi */
  0x48, 0x63, 0x75, 0xc8,                   /*463: movslq  -0x38(%rbp), %rsi        */
  0x48, 0x63, 0x55, 0x8c,                   /*467: movslq  -0x74(%rbp), %rdx        */
  0x48, 0x29, 0xd6,                         /*46b: sub     %rdx, %rsi               */
  0x48, 0xc1, 0xe6, 0x04,                   /*46e: shl     $0x4, %rsi               */
  0x48, 0x03, 0x75, 0xc0,                   /*472: add     -0x40(%rbp), %rsi        */
  0x49, 0x8d, 0x46, 0x50,                   /*476: lea     0x50(%r14), %rax         */
  0xff, 0xd0,                               /*47a: callq   *%rax                    */
  0x83, 0x7d, 0xd0, 0x00,                   /*47c: cmpl    $0x0, -0x30(%rbp)        */
  0x74, 0x43,                               /*480: je      4c5                      */
  0x48, 0x63, 0x45, 0xd8,                   /*482: movslq  -0x28(%rbp), %rax        */
  0x48, 0x63, 0x5d, 0xd4,                   /*486: movslq  -0x2c(%rbp), %rbx        */
  0x48, 0x01, 0xc3,                         /*48a: add     %rax, %rbx               */
  0x48, 0xc1, 0xe3, 0x04,                   /*48d: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x45, 0xe0,                   /*491: mov     -0x20(%rbp), %rax        */
  0x4c, 0x8b, 0x78, 0x20,                   /*495: mov     0x20(%rax), %r15         */
  0x48, 0x8b, 0x78, 0x60,                   /*499: mov     0x60(%rax), %rdi         */
  0x49, 0x83, 0xc6, 0x78,                   /*49d: add     $0x78, %r14              */
  0x31, 0xf6,                               /*4a1: xor     %esi, %esi               */
  0x41, 0xff, 0xd6,                         /*4a3: callq   *%r14                    */
  0x48, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, /*4a6: mov     %rax, -0x88(%rbp)        */
  0x89, 0x55, 0x80,                         /*4ad: mov     %edx, -0x80(%rbp)        */
  0x48, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, /*4b0: mov     -0x88(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x80,                   /*4b7: mov     -0x80(%rbp), %rcx        */
  0x4a, 0x89, 0x4c, 0x3b, 0x18,             /*4bb: mov     %rcx, 0x18(%rbx, %r15, 1) */
  0x4a, 0x89, 0x44, 0x3b, 0x10,             /*4c0: mov     %rax, 0x10(%rbx, %r15, 1) */
  0x83, 0x7d, 0xd4, 0x00,                   /*4c5: cmpl    $0x0, -0x2c(%rbp)        */
  0x74, 0x0b,                               /*4c9: je      4d6                      */
  0x8b, 0x45, 0xd8,                         /*4cb: mov     -0x28(%rbp), %eax        */
  0x03, 0x45, 0xcc,                         /*4ce: add     -0x34(%rbp), %eax        */
  0x39, 0x45, 0xc8,                         /*4d1: cmp     %eax, -0x38(%rbp)        */
  0x7d, 0x0b,                               /*4d4: jge     4e1                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*4d6: mov     -0x20(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*4da: addq    $0x4, 0x18(%rax)         */
  0xeb, 0x23,                               /*4df: jmp     504                      */
  0x48, 0x63, 0x45, 0xc8,                   /*4e1: movslq  -0x38(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xd8,                   /*4e5: movslq  -0x28(%rbp), %rcx        */
  0x48, 0x29, 0xc8,                         /*4e9: sub     %rcx, %rax               */
  0x48, 0x63, 0x4d, 0xcc,                   /*4ec: movslq  -0x34(%rbp), %rcx        */
  0x48, 0x29, 0xc8,                         /*4f0: sub     %rcx, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*4f3: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x51, 0x18,                   /*4f7: mov     0x18(%rcx), %rdx         */
  0x48, 0x8d, 0x44, 0x82, 0x04,             /*4fb: lea     0x4(%rdx, %rax, 4), %rax */
  0x48, 0x89, 0x41, 0x18,                   /*500: mov     %rax, 0x18(%rcx)         */
  0x48, 0x81, 0xc4, 0x88, 0x00, 0x00, 0x00, /*504: add     $0x88, %rsp              */
  0x5b,                                     /*50b: pop     %rbx                     */
  0x41, 0x5e,                               /*50c: pop     %r14                     */
  0x41, 0x5f,                               /*50e: pop     %r15                     */
  0x5d,                                     /*510: pop     %rbp                     */
};


static size_t op_karg_size = 9;
static uint8_t op_karg[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x5d,                                     /*08: pop     %rbp                     */
};


static size_t op_kdict_size = 9;
static uint8_t op_kdict[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x89, 0x7d, 0xf8,                   /*04: mov     %rdi, -0x8(%rbp)         */
  0x5d,                                     /*08: pop     %rbp                     */
};


static size_t op_return_size = 1138;
static uint8_t op_return[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x53,                                     /*08: push    %rbx                     */
  0x48, 0x83, 0xec, 0x68,                   /*09: sub     $0x68, %rsp              */
  0x48, 0x8b, 0x1f,                         /*0d: mov     (%rdi), %rbx             */
  0x48, 0x89, 0x7d, 0xe0,                   /*10: mov     %rdi, -0x20(%rbp)        */
  0x48, 0x8b, 0x47, 0x60,                   /*14: mov     0x60(%rdi), %rax         */
  0x48, 0x89, 0x45, 0xd8,                   /*18: mov     %rax, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*1c: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*20: mov     0x60(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*24: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x85, 0xf1, 0x03, 0x00, 0x00,       /*29: jne     420                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*2f: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*33: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*37: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*3b: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xd0,                   /*3f: mov     %rax, -0x30(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*43: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*47: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*4b: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*4f: mov     0x20(%rax), %rax         */
  0x8b, 0x40, 0x20,                         /*53: mov     0x20(%rax), %eax         */
  0x89, 0x45, 0xc8,                         /*56: mov     %eax, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*59: mov     -0x20(%rbp), %rax        */
  0x8b, 0x48, 0x68,                         /*5d: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*60: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x20,                   /*63: mov     0x20(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*67: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x14, 0x08,                   /*6b: mov     (%rax, %rcx, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x08, 0x08,             /*6f: mov     0x8(%rax, %rcx, 1), %rax */
  0x48, 0x89, 0x45, 0xc0,                   /*74: mov     %rax, -0x40(%rbp)        */
  0x48, 0x89, 0x55, 0xb8,                   /*78: mov     %rdx, -0x48(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*7c: mov     -0x20(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*80: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x0e,                         /*83: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*86: and     $0x1ff, %eax             */
  0x0f, 0x84, 0x23, 0x01, 0x00, 0x00,       /*8b: je      1b4                      */
  0x83, 0xf8, 0x01,                         /*91: cmp     $0x1, %eax               */
  0x0f, 0x85, 0xf0, 0x00, 0x00, 0x00,       /*94: jne     18a                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*9a: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*9e: mov     0x8(%rax), %rax          */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*a2: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x84, 0x82, 0x01, 0x00, 0x00,       /*a7: je      22f                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*ad: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*b1: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x40, 0x28,                   /*b5: mov     0x28(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*b9: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x88, 0x6b, 0x01, 0x00, 0x00,       /*be: js      22f                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*c4: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*c8: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x48, 0x20,                   /*cc: mov     0x20(%rax), %rcx         */
  0x48, 0x3b, 0x48, 0x28,                   /*d0: cmp     0x28(%rax), %rcx         */
  0x75, 0x35,                               /*d4: jne     10b                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*d6: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*da: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*de: mov     0x20(%rax), %rax         */
  0x48, 0x83, 0x78, 0x30, 0x00,             /*e2: cmpq    $0x0, 0x30(%rax)         */
  0x74, 0x22,                               /*e7: je      10b                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*e9: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*ed: mov     0x18(%rax), %rax         */
  0x48, 0x89, 0x45, 0x88,                   /*f1: mov     %rax, -0x78(%rbp)        */
  0x48, 0x8b, 0x00,                         /*f5: mov     (%rax), %rax             */
  0x48, 0x8b, 0x4d, 0xd8,                   /*f8: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*fc: mov     %rax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0x88,                   /*100: mov     -0x78(%rbp), %rax        */
  0x48, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, /*104: movq    $0x0, (%rax)             */
  0x48, 0x8b, 0x45, 0xd8,                   /*10b: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*10f: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*113: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xd0,                   /*117: mov     %rax, -0x30(%rbp)        */
  0x48, 0x8b, 0x40, 0x10,                   /*11b: mov     0x10(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xd8,                   /*11f: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*123: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x08,                   /*127: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xd8,                   /*12b: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*12f: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x48, 0x28,                   /*133: mov     0x28(%rax), %rcx         */
  0x48, 0x8b, 0x55, 0xe0,                   /*137: mov     -0x20(%rbp), %rdx        */
  0x48, 0x8b, 0x52, 0x08,                   /*13b: mov     0x8(%rdx), %rdx          */
  0x48, 0x8b, 0x52, 0x28,                   /*13f: mov     0x28(%rdx), %rdx         */
  0x48, 0x8b, 0x52, 0x28,                   /*143: mov     0x28(%rdx), %rdx         */
  0x48, 0x8d, 0x14, 0x92,                   /*147: lea     (%rdx, %rdx, 4), %rdx    */
  0x48, 0xc1, 0xe2, 0x04,                   /*14b: shl     $0x4, %rdx               */
  0x48, 0x8d, 0x4c, 0x11, 0x50,             /*14f: lea     0x50(%rcx, %rdx, 1), %rcx */
  0x48, 0x89, 0x48, 0x20,                   /*154: mov     %rcx, 0x20(%rax)         */
  0xeb, 0x0b,                               /*158: jmp     165                      */
  0x66, 0x0f, 0x1f, 0x44, 0x00, 0x00,       /*15a: nopw    0x0(%rax, %rax, 1)       */
  0x48, 0x83, 0x45, 0xd0, 0xb0,             /*160: addq    $0xffffffffffffffb0, -0x30(%rbp) */
  0x48, 0x8b, 0x45, 0xd0,                   /*165: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*169: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*16d: mov     0x18(%rcx), %rcx         */
  0x48, 0x3b, 0x41, 0x20,                   /*171: cmp     0x20(%rcx), %rax         */
  0x0f, 0x86, 0xca, 0x01, 0x00, 0x00,       /*175: jbe     345                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*17b: mov     -0x30(%rbp), %rax        */
  0x83, 0x78, 0xf4, 0xff,                   /*17f: cmpl    $0xffffffff, -0xc(%rax)  */
  0x75, 0xdb,                               /*183: jne     160                      */
  0xe9, 0x8a, 0x01, 0x00, 0x00,             /*185: jmpq    314                      */
  0x83, 0xf8, 0x02,                         /*18a: cmp     $0x2, %eax               */
  0x0f, 0x85, 0xb2, 0x01, 0x00, 0x00,       /*18d: jne     345                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*193: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*197: mov     0x8(%rax), %rax          */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*19b: cmpq    $0x0, 0x28(%rax)         */
  0x74, 0x12,                               /*1a0: je      1b4                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*1a2: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x08,                   /*1a6: mov     0x8(%rax), %rax          */
  0x0f, 0xba, 0x20, 0x13,                   /*1aa: btl     $0x13, (%rax)            */
  0x0f, 0x83, 0xf6, 0x00, 0x00, 0x00,       /*1ae: jae     2aa                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*1b4: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*1b8: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*1bc: mov     0x18(%rcx), %rcx         */
  0x48, 0x3b, 0x41, 0x28,                   /*1c0: cmp     0x28(%rcx), %rax         */
  0x75, 0x54,                               /*1c4: jne     21a                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*1c6: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1ca: mov     0x18(%rax), %rax         */
  0x48, 0x83, 0x38, 0x00,                   /*1ce: cmpq    $0x0, (%rax)             */
  0x0f, 0x84, 0x39, 0x02, 0x00, 0x00,       /*1d2: je      411                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*1d8: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1dc: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x00,                         /*1e0: mov     (%rax), %rax             */
  0x48, 0x8b, 0x48, 0x20,                   /*1e3: mov     0x20(%rax), %rcx         */
  0x48, 0x3b, 0x48, 0x28,                   /*1e7: cmp     0x28(%rax), %rcx         */
  0x74, 0x59,                               /*1eb: je      246                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*1ed: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1f1: mov     0x18(%rax), %rax         */
  0xc7, 0x40, 0x54, 0x05, 0x00, 0x00, 0x00, /*1f5: movl    $0x5, 0x54(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*1fc: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x18,                   /*200: mov     0x18(%rax), %rcx         */
  0x48, 0x8b, 0x09,                         /*204: mov     (%rcx), %rcx             */
  0x48, 0x89, 0x48, 0x18,                   /*207: mov     %rcx, 0x18(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*20b: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*20f: mov     0x18(%rax), %rax         */
  0xc7, 0x40, 0x54, 0x01, 0x00, 0x00, 0x00, /*213: movl    $0x1, 0x54(%rax)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*21a: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*21e: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*222: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xd0,                   /*226: mov     %rax, -0x30(%rbp)        */
  0xe9, 0x16, 0x01, 0x00, 0x00,             /*22a: jmpq    345                      */
  0x48, 0x8b, 0x7d, 0xd8,                   /*22f: mov     -0x28(%rbp), %rdi        */
  0x48, 0x8d, 0x83, 0x68, 0x01, 0x00, 0x00, /*233: lea     0x168(%rbx), %rax        */
  0xbe, 0x01, 0x00, 0x00, 0x00,             /*23a: mov     $0x1, %esi               */
  0xff, 0xd0,                               /*23f: callq   *%rax                    */
  0xe9, 0xda, 0x01, 0x00, 0x00,             /*241: jmpq    420                      */
  0x4c, 0x8b, 0x7d, 0xd8,                   /*246: mov     -0x28(%rbp), %r15        */
  0x48, 0x8b, 0xb3, 0xa8, 0x01, 0x00, 0x00, /*24a: mov     0x1a8(%rbx), %rsi        */
  0x48, 0x8d, 0x83, 0xb8, 0x00, 0x00, 0x00, /*251: lea     0xb8(%rbx), %rax         */
  0x4c, 0x89, 0xff,                         /*258: mov     %r15, %rdi               */
  0xff, 0xd0,                               /*25b: callq   *%rax                    */
  0x49, 0x89, 0xc6,                         /*25d: mov     %rax, %r14               */
  0x48, 0x8b, 0x7d, 0xd8,                   /*260: mov     -0x28(%rbp), %rdi        */
  0x48, 0x8d, 0x43, 0x10,                   /*264: lea     0x10(%rbx), %rax         */
  0x48, 0x8d, 0xb3, 0x70, 0x02, 0x00, 0x00, /*268: lea     0x270(%rbx), %rsi        */
  0xba, 0x0d, 0x00, 0x00, 0x00,             /*26f: mov     $0xd, %edx               */
  0xff, 0xd0,                               /*274: callq   *%rax                    */
  0x89, 0xd1,                               /*276: mov     %edx, %ecx               */
  0x48, 0x89, 0x45, 0x90,                   /*278: mov     %rax, -0x70(%rbp)        */
  0x89, 0x4d, 0x98,                         /*27c: mov     %ecx, -0x68(%rbp)        */
  0x48, 0x8b, 0x55, 0x90,                   /*27f: mov     -0x70(%rbp), %rdx        */
  0x48, 0x8d, 0x83, 0x88, 0x01, 0x00, 0x00, /*283: lea     0x188(%rbx), %rax        */
  0x4c, 0x89, 0xff,                         /*28a: mov     %r15, %rdi               */
  0x4c, 0x89, 0xf6,                         /*28d: mov     %r14, %rsi               */
  0xff, 0xd0,                               /*290: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xa0,                   /*292: mov     %rax, -0x60(%rbp)        */
  0x89, 0x55, 0xa8,                         /*296: mov     %edx, -0x58(%rbp)        */
  0x48, 0x8b, 0x45, 0xa0,                   /*299: mov     -0x60(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*29d: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x28,                   /*2a1: mov     %rax, 0x28(%rcx)         */
  0xe9, 0x76, 0x01, 0x00, 0x00,             /*2a5: jmpq    420                      */
  0x48, 0x8b, 0x7d, 0xd8,                   /*2aa: mov     -0x28(%rbp), %rdi        */
  0x48, 0x8b, 0x45, 0xe0,                   /*2ae: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x70, 0x08,                   /*2b2: mov     0x8(%rax), %rsi          */
  0x48, 0x8d, 0x83, 0x48, 0x02, 0x00, 0x00, /*2b6: lea     0x248(%rbx), %rax        */
  0xff, 0xd0,                               /*2bd: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xb0,                   /*2bf: mov     %rax, -0x50(%rbp)        */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*2c3: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x88, 0x43, 0x01, 0x00, 0x00,       /*2c8: js      411                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*2ce: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2d2: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xb0,                   /*2d6: mov     -0x50(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*2da: mov     0x28(%rcx), %rcx         */
  0x48, 0x8d, 0x0c, 0x89,                   /*2de: lea     (%rcx, %rcx, 4), %rcx    */
  0x48, 0xc1, 0xe1, 0x04,                   /*2e2: shl     $0x4, %rcx               */
  0x48, 0x03, 0x48, 0x28,                   /*2e6: add     0x28(%rax), %rcx         */
  0x48, 0x89, 0x4d, 0xd0,                   /*2ea: mov     %rcx, -0x30(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*2ee: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2f2: mov     0x18(%rax), %rax         */
  0x48, 0x3b, 0x48, 0x28,                   /*2f6: cmp     0x28(%rax), %rcx         */
  0x0f, 0x84, 0x11, 0x01, 0x00, 0x00,       /*2fa: je      411                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*300: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*304: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x48, 0x20,                   /*308: mov     0x20(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*30c: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x08,                   /*310: mov     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xd0,                   /*314: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*318: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*31c: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x20,                   /*320: mov     %rax, 0x20(%rcx)         */
  0xeb, 0x1f,                               /*324: jmp     345                      */
  0x66, 0x2e, 0x0f, 0x1f, 0x84, 0x00, 0x00, /*326: nopw    %cs:0x0(%rax, %rax, 1)   */
  0x00, 0x00, 0x00,                         /*32d:                                  */
  0x48, 0x8b, 0x7d, 0xd8,                   /*330: mov     -0x28(%rbp), %rdi        */
  0x8b, 0x75, 0xc8,                         /*334: mov     -0x38(%rbp), %esi        */
  0xff, 0xce,                               /*337: dec     %esi                     */
  0x89, 0x75, 0xc8,                         /*339: mov     %esi, -0x38(%rbp)        */
  0x48, 0x8d, 0x83, 0xb8, 0x01, 0x00, 0x00, /*33c: lea     0x1b8(%rbx), %rax        */
  0xff, 0xd0,                               /*343: callq   *%rax                    */
  0x8b, 0x45, 0xc8,                         /*345: mov     -0x38(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*348: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*34c: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*350: mov     0x20(%rcx), %rcx         */
  0x3b, 0x41, 0xd0,                         /*354: cmp     -0x30(%rcx), %eax        */
  0x7f, 0xd7,                               /*357: jg      330                      */
  0x48, 0x8b, 0x7d, 0xd8,                   /*359: mov     -0x28(%rbp), %rdi        */
  0x48, 0x8d, 0x83, 0x00, 0x01, 0x00, 0x00, /*35d: lea     0x100(%rbx), %rax        */
  0xff, 0xd0,                               /*364: callq   *%rax                    */
  0x48, 0x8b, 0x45, 0xd0,                   /*366: mov     -0x30(%rbp), %rax        */
  0x8b, 0x40, 0x44,                         /*36a: mov     0x44(%rax), %eax         */
  0x89, 0x45, 0xcc,                         /*36d: mov     %eax, -0x34(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*370: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x30,                   /*374: mov     0x30(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*378: mov     -0x20(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x18,                   /*37c: mov     %rax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xd0,                   /*380: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*384: mov     0x10(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xd8,                   /*388: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*38c: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x08,                   /*390: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x4d, 0xe0,                   /*394: mov     -0x20(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x20,                   /*398: mov     %rax, 0x20(%rcx)         */
  0x83, 0x7d, 0xcc, 0xff,                   /*39c: cmpl    $0xffffffff, -0x34(%rbp) */
  0x0f, 0x84, 0x92, 0x00, 0x00, 0x00,       /*3a0: je      438                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*3a6: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*3aa: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*3ae: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*3b2: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3b6: mov     -0x20(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*3ba: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xe0,                   /*3be: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x08,                   /*3c2: mov     0x8(%rax), %rcx          */
  0x48, 0x8b, 0x49, 0x18,                   /*3c6: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x10,                   /*3ca: mov     %rcx, 0x10(%rax)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*3ce: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*3d2: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*3d6: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*3da: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*3de: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*3e2: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*3e6: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x30,                   /*3ea: mov     %rcx, 0x30(%rax)         */
  0x48, 0x63, 0x45, 0xcc,                   /*3ee: movslq  -0x34(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3f2: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*3f6: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*3fa: shl     $0x4, %rax               */
  0x48, 0x8b, 0x55, 0xb8,                   /*3fe: mov     -0x48(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xc0,                   /*402: mov     -0x40(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x01, 0x08,             /*406: mov     %rsi, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x14, 0x01,                   /*40b: mov     %rdx, (%rcx, %rax, 1)    */
  0xeb, 0x1c,                               /*40f: jmp     42d                      */
  0x48, 0x8b, 0x7d, 0xd8,                   /*411: mov     -0x28(%rbp), %rdi        */
  0x48, 0x8d, 0x83, 0x68, 0x01, 0x00, 0x00, /*415: lea     0x168(%rbx), %rax        */
  0x31, 0xf6,                               /*41c: xor     %esi, %esi               */
  0xff, 0xd0,                               /*41e: callq   *%rax                    */
  0x48, 0x8b, 0x7d, 0xe0,                   /*420: mov     -0x20(%rbp), %rdi        */
  0x48, 0x81, 0xc3, 0x70, 0x01, 0x00, 0x00, /*424: add     $0x170, %rbx             */
  0xff, 0xd3,                               /*42b: callq   *%rbx                    */
  0x48, 0x83, 0xc4, 0x68,                   /*42d: add     $0x68, %rsp              */
  0x5b,                                     /*431: pop     %rbx                     */
  0x41, 0x5e,                               /*432: pop     %r14                     */
  0x41, 0x5f,                               /*434: pop     %r15                     */
  0x5d,                                     /*436: pop     %rbp                     */
  0xeb, 0x39,                               /*437: jmp (ret)                        */
  0x48, 0x8b, 0x45, 0xe0,                   /*439: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x38,                   /*43d: mov     0x38(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xd8,                   /*441: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x01,                         /*445: mov     %rax, (%rcx)             */
  0x48, 0x8b, 0x45, 0xe0,                   /*448: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*44c: mov     -0x48(%rbp), %rcx        */
  0x48, 0x8b, 0x55, 0xc0,                   /*450: mov     -0x40(%rbp), %rdx        */
  0x48, 0x89, 0x50, 0x48,                   /*454: mov     %rdx, 0x48(%rax)         */
  0x48, 0x89, 0x48, 0x40,                   /*458: mov     %rcx, 0x40(%rax)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*45c: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x50,                   /*460: mov     0x50(%rax), %rdi         */
  0x48, 0x81, 0xc3, 0x38, 0x01, 0x00, 0x00, /*464: add     $0x138, %rbx             */
  0xbe, 0x01, 0x00, 0x00, 0x00,             /*46b: mov     $0x1, %esi               */
  0xff, 0xd3,                               /*470: callq   *%rbx                    */
};


static size_t op_tailcall_size = 782;
static uint8_t op_tailcall[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x81, 0xec, 0x80, 0x00, 0x00, 0x00, /*07: sub     $0x80, %rsp              */
  0x4c, 0x8b, 0x37,                         /*0e: mov     (%rdi), %r14             */
  0x48, 0x89, 0x7d, 0xe8,                   /*11: mov     %rdi, -0x18(%rbp)        */
  0x48, 0x8b, 0x47, 0x60,                   /*15: mov     0x60(%rdi), %rax         */
  0x48, 0x89, 0x45, 0xe0,                   /*19: mov     %rax, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*1d: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*21: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*24: shr     $0x17, %eax              */
  0x89, 0x45, 0xdc,                         /*27: mov     %eax, -0x24(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*2a: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*2e: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*31: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*34: and     $0x7f, %eax              */
  0x89, 0x45, 0xd8,                         /*37: mov     %eax, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*3a: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x68,                         /*3e: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x0e,                         /*41: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*44: and     $0x1ff, %ecx             */
  0x48, 0x8b, 0x40, 0x30,                   /*4a: mov     0x30(%rax), %rax         */
  0x8b, 0x04, 0x88,                         /*4e: mov     (%rax, %rcx, 4), %eax    */
  0x89, 0x45, 0xac,                         /*51: mov     %eax, -0x54(%rbp)        */
  0x48, 0x63, 0x45, 0xdc,                   /*54: movslq  -0x24(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*58: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*5c: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*60: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*64: mov     (%rcx, %rax, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*68: mov     0x8(%rcx, %rax, 1), %rax */
  0x48, 0x89, 0x45, 0xb8,                   /*6d: mov     %rax, -0x48(%rbp)        */
  0x48, 0x89, 0x55, 0xb0,                   /*71: mov     %rdx, -0x50(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*75: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*79: mov     0x60(%rax), %rdi         */
  0x48, 0x8b, 0x75, 0xb0,                   /*7d: mov     -0x50(%rbp), %rsi        */
  0x8b, 0x55, 0xb8,                         /*81: mov     -0x48(%rbp), %edx        */
  0x49, 0x8d, 0x86, 0x38, 0x02, 0x00, 0x00, /*84: lea     0x238(%r14), %rax        */
  0xff, 0xd0,                               /*8b: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xc8,                   /*8d: mov     %rax, -0x38(%rbp)        */
  0x48, 0x8b, 0x7d, 0xe0,                   /*91: mov     -0x20(%rbp), %rdi        */
  0x8b, 0x55, 0xac,                         /*95: mov     -0x54(%rbp), %edx        */
  0x49, 0x8d, 0x46, 0x70,                   /*98: lea     0x70(%r14), %rax         */
  0x48, 0x8d, 0x75, 0xc8,                   /*9c: lea     -0x38(%rbp), %rsi        */
  0xff, 0xd0,                               /*a0: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd0,                   /*a2: mov     %rax, -0x30(%rbp)        */
  0x48, 0x85, 0xc0,                         /*a6: test    %rax, %rax               */
  0x0f, 0x85, 0xcc, 0x00, 0x00, 0x00,       /*a9: jne     17b                      */
  0x8b, 0x7d, 0xac,                         /*af: mov     -0x54(%rbp), %edi        */
  0x49, 0x8d, 0x86, 0xe8, 0x00, 0x00, 0x00, /*b2: lea     0xe8(%r14), %rax         */
  0xff, 0xd0,                               /*b9: callq   *%rax                    */
  0x48, 0x89, 0x45, 0x98,                   /*bb: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*bf: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x7d, 0xe0,                   /*c2: mov     -0x20(%rbp), %rdi        */
  0x49, 0x8d, 0x86, 0x48, 0x02, 0x00, 0x00, /*c6: lea     0x248(%r14), %rax        */
  0x49, 0x8d, 0xb6, 0x50, 0x02, 0x00, 0x00, /*cd: lea     0x250(%r14), %rsi        */
  0xba, 0x0e, 0x00, 0x00, 0x00,             /*d4: mov     $0xe, %edx               */
  0xff, 0xd0,                               /*d9: callq   *%rax                    */
  0x89, 0x45, 0xac,                         /*db: mov     %eax, -0x54(%rbp)        */
  0x48, 0x8b, 0x7d, 0xe0,                   /*de: mov     -0x20(%rbp), %rdi        */
  0x49, 0x8d, 0x4e, 0x68,                   /*e2: lea     0x68(%r14), %rcx         */
  0x48, 0x8d, 0x75, 0xc8,                   /*e6: lea     -0x38(%rbp), %rsi        */
  0x89, 0xc2,                               /*ea: mov     %eax, %edx               */
  0xff, 0xd1,                               /*ec: callq   *%rcx                    */
  0x48, 0x89, 0x45, 0xd0,                   /*ee: mov     %rax, -0x30(%rbp)        */
  0x83, 0x7d, 0xd8, 0x7f,                   /*f2: cmpl    $0x7f, -0x28(%rbp)       */
  0x75, 0x37,                               /*f6: jne     12f                      */
  0x48, 0x8b, 0x7d, 0xe0,                   /*f8: mov     -0x20(%rbp), %rdi        */
  0x48, 0x63, 0x45, 0xdc,                   /*fc: movslq  -0x24(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*100: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*104: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*108: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x74, 0x08, 0x10,             /*10c: mov     0x10(%rax, %rcx, 1), %rsi */
  0x8b, 0x54, 0x08, 0x18,                   /*111: mov     0x18(%rax, %rcx, 1), %edx */
  0x48, 0x8b, 0x4d, 0x98,                   /*115: mov     -0x68(%rbp), %rcx        */
  0x44, 0x8b, 0x45, 0xa0,                   /*119: mov     -0x60(%rbp), %r8d        */
  0x49, 0x8d, 0x86, 0xd8, 0x01, 0x00, 0x00, /*11d: lea     0x1d8(%r14), %rax        */
  0xff, 0xd0,                               /*124: callq   *%rax                    */
  0x48, 0x89, 0x45, 0x88,                   /*126: mov     %rax, -0x78(%rbp)        */
  0x89, 0x55, 0x90,                         /*12a: mov     %edx, -0x70(%rbp)        */
  0xeb, 0x4c,                               /*12d: jmp     17b                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*12f: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*133: mov     0x20(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xdc,                   /*137: movslq  -0x24(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*13b: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x7c, 0x08, 0x20,             /*13f: lea     0x20(%rax, %rcx, 1), %rdi */
  0x48, 0x8d, 0x74, 0x08, 0x10,             /*144: lea     0x10(%rax, %rcx, 1), %rsi */
  0x48, 0x63, 0x55, 0xd8,                   /*149: movslq  -0x28(%rbp), %rdx        */
  0x48, 0xff, 0xc2,                         /*14d: inc     %rdx                     */
  0x89, 0x55, 0xd8,                         /*150: mov     %edx, -0x28(%rbp)        */
  0x49, 0x8d, 0x46, 0x50,                   /*153: lea     0x50(%r14), %rax         */
  0xff, 0xd0,                               /*157: callq   *%rax                    */
  0x48, 0x63, 0x45, 0xdc,                   /*159: movslq  -0x24(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*15d: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*161: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*165: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x55, 0x98,                   /*169: mov     -0x68(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xa0,                   /*16d: mov     -0x60(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x18,             /*171: mov     %rsi, 0x18(%rax, %rcx, 1) */
  0x48, 0x89, 0x54, 0x08, 0x10,             /*176: mov     %rdx, 0x10(%rax, %rcx, 1) */
  0x48, 0x8b, 0x45, 0xe0,                   /*17b: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*17f: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*183: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xc0,                   /*187: mov     %rax, -0x40(%rbp)        */
  0x8b, 0x4d, 0xac,                         /*18b: mov     -0x54(%rbp), %ecx        */
  0x89, 0x08,                               /*18e: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x45, 0xc8,                   /*190: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*194: mov     -0x40(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*198: mov     %rax, 0x48(%rcx)         */
  0x83, 0x7d, 0xd8, 0x7f,                   /*19c: cmpl    $0x7f, -0x28(%rbp)       */
  0x75, 0x0d,                               /*1a0: jne     1af                      */
  0x48, 0x8b, 0x45, 0xc0,                   /*1a2: mov     -0x40(%rbp), %rax        */
  0xc7, 0x40, 0x40, 0xff, 0xff, 0xff, 0xff, /*1a6: movl    $0xffffffff, 0x40(%rax)  */
  0xeb, 0x0a,                               /*1ad: jmp     1b9                      */
  0x8b, 0x45, 0xd8,                         /*1af: mov     -0x28(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*1b2: mov     -0x40(%rbp), %rcx        */
  0x89, 0x41, 0x40,                         /*1b6: mov     %eax, 0x40(%rcx)         */
  0x48, 0x8b, 0x45, 0xe0,                   /*1b9: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*1bd: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x78, 0x08,                   /*1c1: mov     0x8(%rax), %rdi          */
  0x48, 0x63, 0x75, 0xdc,                   /*1c5: movslq  -0x24(%rbp), %rsi        */
  0x48, 0x8b, 0x45, 0xe8,                   /*1c9: mov     -0x18(%rbp), %rax        */
  0x48, 0xc1, 0xe6, 0x04,                   /*1cd: shl     $0x4, %rsi               */
  0x48, 0x03, 0x70, 0x20,                   /*1d1: add     0x20(%rax), %rsi         */
  0x48, 0x8b, 0x45, 0xc0,                   /*1d5: mov     -0x40(%rbp), %rax        */
  0x48, 0x63, 0x50, 0x40,                   /*1d9: movslq  0x40(%rax), %rdx         */
  0x48, 0xff, 0xc2,                         /*1dd: inc     %rdx                     */
  0x49, 0x8d, 0x46, 0x48,                   /*1e0: lea     0x48(%r14), %rax         */
  0xff, 0xd0,                               /*1e4: callq   *%rax                    */
  0x48, 0x8b, 0x45, 0xd0,                   /*1e6: mov     -0x30(%rbp), %rax        */
  0x8b, 0x00,                               /*1ea: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*1ec: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*1ef: test    $0x80, %al               */
  0x74, 0x5a,                               /*1f1: je      24d                      */
  0x48, 0x8b, 0x7d, 0xe0,                   /*1f3: mov     -0x20(%rbp), %rdi        */
  0x48, 0x8b, 0x47, 0x18,                   /*1f7: mov     0x18(%rdi), %rax         */
  0x48, 0x8b, 0x58, 0x08,                   /*1fb: mov     0x8(%rax), %rbx          */
  0x48, 0x8b, 0x45, 0xd0,                   /*1ff: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x75, 0xb0,                   /*203: mov     -0x50(%rbp), %rsi        */
  0x8b, 0x55, 0xb8,                         /*207: mov     -0x48(%rbp), %edx        */
  0xff, 0x50, 0x18,                         /*20a: callq   *0x18(%rax)              */
  0x48, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, /*20d: mov     %rax, -0x88(%rbp)        */
  0x89, 0x55, 0x80,                         /*214: mov     %edx, -0x80(%rbp)        */
  0x48, 0x8b, 0x85, 0x78, 0xff, 0xff, 0xff, /*217: mov     -0x88(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x80,                   /*21e: mov     -0x80(%rbp), %rcx        */
  0x48, 0x89, 0x4b, 0x08,                   /*222: mov     %rcx, 0x8(%rbx)          */
  0x48, 0x89, 0x03,                         /*226: mov     %rax, (%rbx)             */
  0x48, 0x8b, 0x7d, 0xe0,                   /*229: mov     -0x20(%rbp), %rdi        */
  0x48, 0x8b, 0x45, 0xe8,                   /*22d: mov     -0x18(%rbp), %rax        */
  0x8b, 0x70, 0x58,                         /*231: mov     0x58(%rax), %esi         */
  0x49, 0x8d, 0x86, 0xb0, 0x00, 0x00, 0x00, /*234: lea     0xb0(%r14), %rax         */
  0xff, 0xd0,                               /*23b: callq   *%rax                    */
  0x48, 0x8b, 0x7d, 0xe8,                   /*23d: mov     -0x18(%rbp), %rdi        */
  0x49, 0x83, 0xc6, 0x20,                   /*241: add     $0x20, %r14              */
  0x41, 0xff, 0xd6,                         /*245: callq   *%r14                    */
  0xe9, 0xb6, 0x00, 0x00, 0x00,             /*248: jmpq    303                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*24d: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*251: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*255: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*259: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*25d: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*261: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*265: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*269: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*26d: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*271: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*275: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x30,                   /*279: mov     %rcx, 0x30(%rax)         */
  0x48, 0x8b, 0x45, 0xc0,                   /*27d: mov     -0x40(%rbp), %rax        */
  0x83, 0x78, 0x40, 0x00,                   /*281: cmpl    $0x0, 0x40(%rax)         */
  0x78, 0x23,                               /*285: js      2aa                      */
  0x48, 0x8b, 0x7d, 0xe0,                   /*287: mov     -0x20(%rbp), %rdi        */
  0x48, 0x8b, 0x45, 0xe8,                   /*28b: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*28f: mov     0x10(%rax), %rax         */
  0x0f, 0xb7, 0x70, 0x02,                   /*293: movzwl  0x2(%rax), %esi          */
  0x48, 0x8b, 0x45, 0xc0,                   /*297: mov     -0x40(%rbp), %rax        */
  0x8b, 0x50, 0x40,                         /*29b: mov     0x40(%rax), %edx         */
  0x83, 0xc2, 0x02,                         /*29e: add     $0x2, %edx               */
  0x49, 0x81, 0xc6, 0xe0, 0x00, 0x00, 0x00, /*2a1: add     $0xe0, %r14              */
  0xeb, 0x32,                               /*2a8: jmp     2dc                      */
  0x48, 0x8b, 0x7d, 0xe0,                   /*2aa: mov     -0x20(%rbp), %rdi        */
  0x48, 0x8b, 0x45, 0xe8,                   /*2ae: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*2b2: mov     0x10(%rax), %rax         */
  0x0f, 0xb7, 0x40, 0x02,                   /*2b6: movzwl  0x2(%rax), %eax          */
  0xbe, 0x03, 0x00, 0x00, 0x00,             /*2ba: mov     $0x3, %esi               */
  0x83, 0xf8, 0x03,                         /*2bf: cmp     $0x3, %eax               */
  0x7c, 0x0c,                               /*2c2: jl      2d0                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*2c4: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*2c8: mov     0x10(%rax), %rax         */
  0x0f, 0xb7, 0x70, 0x02,                   /*2cc: movzwl  0x2(%rax), %esi          */
  0x49, 0x81, 0xc6, 0xe0, 0x00, 0x00, 0x00, /*2d0: add     $0xe0, %r14              */
  0xba, 0x03, 0x00, 0x00, 0x00,             /*2d7: mov     $0x3, %edx               */
  0x41, 0xff, 0xd6,                         /*2dc: callq   *%r14                    */
  0x48, 0x8b, 0x45, 0xe0,                   /*2df: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*2e3: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*2e7: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xe8,                   /*2eb: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x20,                   /*2ef: mov     %rax, 0x20(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*2f3: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*2f7: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*2fb: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x18,                   /*2ff: mov     %rcx, 0x18(%rax)         */
  0x48, 0x81, 0xc4, 0x80, 0x00, 0x00, 0x00, /*303: add     $0x80, %rsp              */
  0x5b,                                     /*30a: pop     %rbx                     */
  0x41, 0x5e,                               /*30b: pop     %r14                     */
  0x5d,                                     /*30d: pop     %rbp                     */
};


static size_t op_blkpush_size = 259;
static uint8_t op_blkpush[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x53,                                     /*04: push    %rbx                     */
  0x48, 0x83, 0xec, 0x38,                   /*05: sub     $0x38, %rsp              */
  0x48, 0x8b, 0x1f,                         /*09: mov     (%rdi), %rbx             */
  0x48, 0x89, 0x7d, 0xf0,                   /*0c: mov     %rdi, -0x10(%rbp)        */
  0x48, 0x8b, 0x47, 0x60,                   /*10: mov     0x60(%rdi), %rax         */
  0x48, 0x89, 0x45, 0xe8,                   /*14: mov     %rax, -0x18(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*18: mov     -0x10(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*1c: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*1f: shr     $0x17, %eax              */
  0x89, 0x45, 0xe4,                         /*22: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x8b, 0x45, 0xf0,                   /*25: mov     -0x10(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*29: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*2c: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*2f: movzwl  %ax, %eax                */
  0x89, 0x45, 0xe0,                         /*32: mov     %eax, -0x20(%rbp)        */
  0xc1, 0xe8, 0x0a,                         /*35: shr     $0xa, %eax               */
  0x89, 0x45, 0xdc,                         /*38: mov     %eax, -0x24(%rbp)        */
  0x8b, 0x45, 0xe0,                         /*3b: mov     -0x20(%rbp), %eax        */
  0xc1, 0xe8, 0x09,                         /*3e: shr     $0x9, %eax               */
  0x83, 0xe0, 0x01,                         /*41: and     $0x1, %eax               */
  0x89, 0x45, 0xd8,                         /*44: mov     %eax, -0x28(%rbp)        */
  0x8b, 0x45, 0xe0,                         /*47: mov     -0x20(%rbp), %eax        */
  0xc1, 0xe8, 0x04,                         /*4a: shr     $0x4, %eax               */
  0x83, 0xe0, 0x1f,                         /*4d: and     $0x1f, %eax              */
  0x89, 0x45, 0xd4,                         /*50: mov     %eax, -0x2c(%rbp)        */
  0x8b, 0x45, 0xe0,                         /*53: mov     -0x20(%rbp), %eax        */
  0x83, 0xe0, 0x0f,                         /*56: and     $0xf, %eax               */
  0x89, 0x45, 0xd0,                         /*59: mov     %eax, -0x30(%rbp)        */
  0x74, 0x29,                               /*5c: je      87                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*5e: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*62: mov     0x60(%rax), %rdi         */
  0x8b, 0x75, 0xd0,                         /*66: mov     -0x30(%rbp), %esi        */
  0xff, 0xce,                               /*69: dec     %esi                     */
  0x48, 0x8d, 0x83, 0x30, 0x02, 0x00, 0x00, /*6b: lea     0x230(%rbx), %rax        */
  0xff, 0xd0,                               /*72: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xc0,                   /*74: mov     %rax, -0x40(%rbp)        */
  0x48, 0x85, 0xc0,                         /*78: test    %rax, %rax               */
  0x74, 0x61,                               /*7b: je      de                       */
  0x48, 0x8b, 0x45, 0xc0,                   /*7d: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*81: mov     0x18(%rax), %rax         */
  0xeb, 0x08,                               /*85: jmp     8f                       */
  0x48, 0x8b, 0x45, 0xf0,                   /*87: mov     -0x10(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*8b: mov     0x20(%rax), %rax         */
  0x48, 0x83, 0xc0, 0x10,                   /*8f: add     $0x10, %rax              */
  0x48, 0x89, 0x45, 0xc8,                   /*93: mov     %rax, -0x38(%rbp)        */
  0x48, 0x63, 0x45, 0xe4,                   /*97: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xf0,                   /*9b: mov     -0x10(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*9f: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*a3: shl     $0x4, %rax               */
  0x48, 0x63, 0x55, 0xdc,                   /*a7: movslq  -0x24(%rbp), %rdx        */
  0x48, 0x63, 0x75, 0xd8,                   /*ab: movslq  -0x28(%rbp), %rsi        */
  0x48, 0x01, 0xd6,                         /*af: add     %rdx, %rsi               */
  0x48, 0x63, 0x55, 0xd4,                   /*b2: movslq  -0x2c(%rbp), %rdx        */
  0x48, 0x01, 0xf2,                         /*b6: add     %rsi, %rdx               */
  0x48, 0x8b, 0x75, 0xc8,                   /*b9: mov     -0x38(%rbp), %rsi        */
  0x48, 0xc1, 0xe2, 0x04,                   /*bd: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x3c, 0x16,                   /*c1: mov     (%rsi, %rdx, 1), %rdi    */
  0x48, 0x8b, 0x54, 0x16, 0x08,             /*c5: mov     0x8(%rsi, %rdx, 1), %rdx */
  0x48, 0x89, 0x54, 0x01, 0x08,             /*ca: mov     %rdx, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x3c, 0x01,                   /*cf: mov     %rdi, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf0,                   /*d3: mov     -0x10(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*d7: addq    $0x4, 0x18(%rax)         */
  0xeb, 0x1f,                               /*dc: jmp     fd                       */
  0x48, 0x8b, 0x7d, 0xe8,                   /*de: mov     -0x18(%rbp), %rdi        */
  0x48, 0x8d, 0x83, 0x60, 0x01, 0x00, 0x00, /*e2: lea     0x160(%rbx), %rax        */
  0xbe, 0x02, 0x00, 0x00, 0x00,             /*e9: mov     $0x2, %esi               */
  0xff, 0xd0,                               /*ee: callq   *%rax                    */
  0x48, 0x8b, 0x7d, 0xf0,                   /*f0: mov     -0x10(%rbp), %rdi        */
  0x48, 0x81, 0xc3, 0x70, 0x01, 0x00, 0x00, /*f4: add     $0x170, %rbx             */
  0xff, 0xd3,                               /*fb: callq   *%rbx                    */
  0x48, 0x83, 0xc4, 0x38,                   /*fd: add     $0x38, %rsp              */
  0x5b,                                     /*101: pop     %rbx                     */
  0x5d,                                     /*102: pop     %rbp                     */
};


static size_t op_add_size = 560;
static uint8_t op_add[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x60,                   /*07: sub     $0x60, %rsp              */
  0x4c, 0x8b, 0x0f,                         /*0b: mov     (%rdi), %r9              */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x47, 0x68,                         /*12: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x89, 0x45, 0xe4,                         /*18: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*1b: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*1f: mov     0x60(%rax), %rax         */
  0x48, 0x89, 0x45, 0xd8,                   /*23: mov     %rax, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*27: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*2b: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xd0,                   /*2f: mov     %rax, -0x30(%rbp)        */
  0x48, 0x63, 0x4d, 0xe4,                   /*33: movslq  -0x1c(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*37: shl     $0x4, %rcx               */
  0x0f, 0xb7, 0x54, 0x08, 0x08,             /*3b: movzwl  0x8(%rax, %rcx, 1), %edx */
  0xc1, 0xe2, 0x08,                         /*40: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x08, 0x18,             /*43: movzbl  0x18(%rax, %rcx, 1), %eax */
  0x09, 0xd0,                               /*48: or      %edx, %eax               */
  0x3d, 0x0f, 0x10, 0x00, 0x00,             /*4a: cmp     $0x100f, %eax            */
  0x7f, 0x79,                               /*4f: jg      ca                       */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*51: cmp     $0x602, %eax             */
  0x0f, 0x8f, 0xc3, 0x00, 0x00, 0x00,       /*56: jg      11f                      */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*5c: cmp     $0x303, %eax             */
  0x0f, 0x85, 0xe4, 0x00, 0x00, 0x00,       /*61: jne     14b                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*67: mov     -0x30(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xe4,                   /*6b: movslq  -0x1c(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*6f: shl     $0x4, %rcx               */
  0x48, 0x8d, 0x14, 0x08,                   /*73: lea     (%rax, %rcx, 1), %rdx    */
  0x48, 0x89, 0x55, 0xb8,                   /*77: mov     %rdx, -0x48(%rbp)        */
  0x8b, 0x04, 0x08,                         /*7b: mov     (%rax, %rcx, 1), %eax    */
  0x89, 0x45, 0xcc,                         /*7e: mov     %eax, -0x34(%rbp)        */
  0x48, 0x8b, 0x45, 0xb8,                   /*81: mov     -0x48(%rbp), %rax        */
  0x8b, 0x70, 0x10,                         /*85: mov     0x10(%rax), %esi         */
  0x89, 0x75, 0xc8,                         /*88: mov     %esi, -0x38(%rbp)        */
  0x8b, 0x7d, 0xcc,                         /*8b: mov     -0x34(%rbp), %edi        */
  0x49, 0x81, 0xc1, 0x38, 0x01, 0x00, 0x00, /*8e: add     $0x138, %r9              */
  0x48, 0x8d, 0x55, 0xc4,                   /*95: lea     -0x3c(%rbp), %rdx        */
  0x41, 0xff, 0xd1,                         /*99: callq   *%r9                     */
  0x84, 0xc0,                               /*9c: test    %al, %al                 */
  0x0f, 0x84, 0x44, 0x01, 0x00, 0x00,       /*9e: je      1e8                      */
  0x48, 0x8b, 0x45, 0xb8,                   /*a4: mov     -0x48(%rbp), %rax        */
  0xc7, 0x40, 0x08, 0x06, 0x00, 0x00, 0x00, /*a8: movl    $0x6, 0x8(%rax)          */
  0xf2, 0x0f, 0x2a, 0x45, 0xcc,             /*af: cvtsi2sdl-0x34(%rbp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4d, 0xc8,             /*b4: cvtsi2sdl-0x38(%rbp), %xmm1      */
  0xf2, 0x0f, 0x58, 0xc8,                   /*b9: addsd   %xmm0, %xmm1             */
  0x48, 0x8b, 0x45, 0xb8,                   /*bd: mov     -0x48(%rbp), %rax        */
  0xf2, 0x0f, 0x11, 0x08,                   /*c1: movsd   %xmm1, (%rax)            */
  0xe9, 0x44, 0x01, 0x00, 0x00,             /*c5: jmpq    20e                      */
  0x3d, 0x10, 0x10, 0x00, 0x00,             /*ca: cmp     $0x1010, %eax            */
  0x0f, 0x85, 0x03, 0x01, 0x00, 0x00,       /*cf: jne     1d8                      */
  0x48, 0x63, 0x5d, 0xe4,                   /*d5: movslq  -0x1c(%rbp), %rbx        */
  0x4c, 0x8b, 0x75, 0xd0,                   /*d9: mov     -0x30(%rbp), %r14        */
  0x48, 0xc1, 0xe3, 0x04,                   /*dd: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x7d, 0xd8,                   /*e1: mov     -0x28(%rbp), %rdi        */
  0x49, 0x8b, 0x34, 0x1e,                   /*e5: mov     (%r14, %rbx, 1), %rsi    */
  0x41, 0x8b, 0x54, 0x1e, 0x08,             /*e9: mov     0x8(%r14, %rbx, 1), %edx */
  0x49, 0x8b, 0x4c, 0x1e, 0x10,             /*ee: mov     0x10(%r14, %rbx, 1), %rcx */
  0x45, 0x8b, 0x44, 0x1e, 0x18,             /*f3: mov     0x18(%r14, %rbx, 1), %r8d */
  0x49, 0x81, 0xc1, 0xd0, 0x00, 0x00, 0x00, /*f8: add     $0xd0, %r9               */
  0x41, 0xff, 0xd1,                         /*ff: callq   *%r9                     */
  0x48, 0x89, 0x45, 0x98,                   /*102: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*106: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*109: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*10d: mov     -0x60(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*111: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*116: mov     %rax, (%r14, %rbx, 1)    */
  0xe9, 0xef, 0x00, 0x00, 0x00,             /*11a: jmpq    20e                      */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*11f: cmp     $0x603, %eax             */
  0x0f, 0x85, 0x89, 0x00, 0x00, 0x00,       /*124: jne     1b3                      */
  0x48, 0x63, 0x45, 0xe4,                   /*12a: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*12e: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*132: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*136: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x58, 0x04, 0x01,             /*13c: addsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*141: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xe9, 0xc3, 0x00, 0x00, 0x00,             /*146: jmpq    20e                      */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*14b: cmp     $0x306, %eax             */
  0x0f, 0x85, 0x82, 0x00, 0x00, 0x00,       /*150: jne     1d8                      */
  0x48, 0x63, 0x45, 0xe4,                   /*156: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*15a: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*15e: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*162: mov     (%rcx, %rax, 1), %eax    */
  0x89, 0x45, 0xb4,                         /*165: mov     %eax, -0x4c(%rbp)        */
  0x48, 0x63, 0x45, 0xe4,                   /*168: movslq  -0x1c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*16c: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xd0,                   /*170: mov     -0x30(%rbp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*174: movsd   0x10(%rax, %rcx, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x45, 0xa8,             /*17a: movsd   %xmm0, -0x58(%rbp)       */
  0x48, 0x63, 0x45, 0xe4,                   /*17f: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*183: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*187: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*18b: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*192:                                  */
  0x0f, 0x57, 0xc0,                         /*193: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x45, 0xb4,             /*196: cvtsi2sdl-0x4c(%rbp), %xmm0      */
  0xf2, 0x0f, 0x58, 0x45, 0xa8,             /*19b: addsd   -0x58(%rbp), %xmm0       */
  0x48, 0x63, 0x45, 0xe4,                   /*1a0: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*1a4: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1a8: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*1ac: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xeb, 0x5b,                               /*1b1: jmp     20e                      */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*1b3: cmp     $0x606, %eax             */
  0x75, 0x1e,                               /*1b8: jne     1d8                      */
  0x48, 0x63, 0x45, 0xe4,                   /*1ba: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*1be: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1c2: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*1c6: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x58, 0x44, 0x01, 0x10,       /*1cb: addsd   0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*1d1: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xeb, 0x36,                               /*1d6: jmp     20e                      */
  0x48, 0x8b, 0x7d, 0xe8,                   /*1d8: mov     -0x18(%rbp), %rdi        */
  0x49, 0x81, 0xc1, 0x98, 0x01, 0x00, 0x00, /*1dc: add     $0x198, %r9              */
  0x41, 0xff, 0xd1,                         /*1e3: callq   *%r9                     */
  0xeb, 0x40,                               /*1e6: jmp     228                      */
  0x48, 0x63, 0x45, 0xe4,                   /*1e8: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*1ec: mov     -0x30(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1f0: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, /*1f4: movl    $0x3, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*1fb:                                  */
  0x8b, 0x45, 0xc4,                         /*1fc: mov     -0x3c(%rbp), %eax        */
  0x48, 0x63, 0x4d, 0xe4,                   /*1ff: movslq  -0x1c(%rbp), %rcx        */
  0x48, 0x8b, 0x55, 0xd0,                   /*203: mov     -0x30(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*207: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*20b: mov     %eax, (%rdx, %rcx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*20e: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x58,                         /*212: mov     0x58(%rax), %eax         */
  0x48, 0x8b, 0x4d, 0xd8,                   /*215: mov     -0x28(%rbp), %rcx        */
  0x89, 0x81, 0xdc, 0x00, 0x00, 0x00,       /*219: mov     %eax, 0xdc(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*21f: mov     -0x18(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*223: addq    $0x4, 0x18(%rax)         */
  0x48, 0x83, 0xc4, 0x60,                   /*228: add     $0x60, %rsp              */
  0x5b,                                     /*22c: pop     %rbx                     */
  0x41, 0x5e,                               /*22d: pop     %r14                     */
  0x5d,                                     /*22f: pop     %rbp                     */
};


static size_t op_addi_size = 359;
static uint8_t op_addi[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x48, 0x8b, 0x07,                         /*08: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*0f: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*1c: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x8b, 0x4c, 0x11, 0x08,                   /*2c: mov     0x8(%rcx, %rdx, 1), %ecx */
  0x83, 0xf9, 0x06,                         /*30: cmp     $0x6, %ecx               */
  0x75, 0x2c,                               /*33: jne     61                       */
  0x48, 0x8b, 0x45, 0xf8,                   /*35: mov     -0x8(%rbp), %rax         */
  0x8b, 0x40, 0x68,                         /*39: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*3c: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*3f: and     $0x7f, %eax              */
  0xf2, 0x0f, 0x2a, 0xc0,                   /*42: cvtsi2sd%eax, %xmm0              */
  0x48, 0x63, 0x45, 0xf4,                   /*46: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4a: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*4e: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x58, 0x04, 0x01,             /*52: addsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*57: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xe9, 0xf8, 0x00, 0x00, 0x00,             /*5c: jmpq    159                      */
  0x83, 0xf9, 0x03,                         /*61: cmp     $0x3, %ecx               */
  0x75, 0x71,                               /*64: jne     d7                       */
  0x48, 0x63, 0x4d, 0xf4,                   /*66: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xe8,                   /*6a: mov     -0x18(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*6e: shl     $0x4, %rcx               */
  0x8b, 0x0c, 0x0a,                         /*72: mov     (%rdx, %rcx, 1), %ecx    */
  0x89, 0x4d, 0xe4,                         /*75: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*78: mov     -0x8(%rbp), %rcx         */
  0x8b, 0x71, 0x68,                         /*7c: mov     0x68(%rcx), %esi         */
  0xc1, 0xee, 0x07,                         /*7f: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*82: and     $0x7f, %esi              */
  0x89, 0x75, 0xe0,                         /*85: mov     %esi, -0x20(%rbp)        */
  0x8b, 0x7d, 0xe4,                         /*88: mov     -0x1c(%rbp), %edi        */
  0x48, 0x05, 0x30, 0x01, 0x00, 0x00,       /*8b: add     $0x130, %rax             */
  0x48, 0x8d, 0x55, 0xdc,                   /*91: lea     -0x24(%rbp), %rdx        */
  0xff, 0xd0,                               /*95: callq   *%rax                    */
  0x84, 0xc0,                               /*97: test    %al, %al                 */
  0x0f, 0x84, 0x94, 0x00, 0x00, 0x00,       /*99: je      133                      */
  0x48, 0x63, 0x45, 0xf4,                   /*9f: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*a3: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*a7: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*ab: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*b2:                                  */
  0xf2, 0x0f, 0x2a, 0x45, 0xe4,             /*b3: cvtsi2sdl-0x1c(%rbp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4d, 0xe0,             /*b8: cvtsi2sdl-0x20(%rbp), %xmm1      */
  0xf2, 0x0f, 0x58, 0xc8,                   /*bd: addsd   %xmm0, %xmm1             */
  0x48, 0x63, 0x45, 0xf4,                   /*c1: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*c5: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*c9: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x11, 0x0c, 0x01,             /*cd: movsd   %xmm1, (%rcx, %rax, 1)   */
  0xe9, 0x82, 0x00, 0x00, 0x00,             /*d2: jmpq    159                      */
  0x48, 0x63, 0x4d, 0xf4,                   /*d7: movslq  -0xc(%rbp), %rcx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*db: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xe8,                   /*df: mov     -0x18(%rbp), %rdx        */
  0xc7, 0x44, 0x11, 0x18, 0x03, 0x00, 0x00, /*e3: movl    $0x3, 0x18(%rcx, %rdx, 1) */
  0x00,                                     /*ea:                                  */
  0x48, 0x8b, 0x4d, 0xf8,                   /*eb: mov     -0x8(%rbp), %rcx         */
  0x8b, 0x49, 0x68,                         /*ef: mov     0x68(%rcx), %ecx         */
  0xc1, 0xe9, 0x07,                         /*f2: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*f5: and     $0x7f, %ecx              */
  0x48, 0x63, 0x55, 0xf4,                   /*f8: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*fc: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x75, 0xe8,                   /*100: mov     -0x18(%rbp), %rsi        */
  0x89, 0x4c, 0x32, 0x10,                   /*104: mov     %ecx, 0x10(%rdx, %rsi, 1) */
  0x8b, 0x4d, 0xf4,                         /*108: mov     -0xc(%rbp), %ecx         */
  0xc1, 0xe1, 0x17,                         /*10b: shl     $0x17, %ecx              */
  0x48, 0x8b, 0x55, 0xf8,                   /*10e: mov     -0x8(%rbp), %rdx         */
  0xbe, 0x00, 0xc0, 0x7f, 0x00,             /*112: mov     $0x7fc000, %esi          */
  0x23, 0x72, 0x68,                         /*117: and     0x68(%rdx), %esi         */
  0x09, 0xce,                               /*11a: or      %ecx, %esi               */
  0x81, 0xce, 0xa0, 0x00, 0x00, 0x00,       /*11c: or      $0xa0, %esi              */
  0x89, 0x72, 0x68,                         /*122: mov     %esi, 0x68(%rdx)         */
  0x48, 0x8b, 0x7d, 0xf8,                   /*125: mov     -0x8(%rbp), %rdi         */
  0x48, 0x05, 0x98, 0x01, 0x00, 0x00,       /*129: add     $0x198, %rax             */
  0xff, 0xd0,                               /*12f: callq   *%rax                    */
  0xeb, 0x2f,                               /*131: jmp     162                      */
  0x48, 0x63, 0x45, 0xf4,                   /*133: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*137: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*13b: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, /*13f: movl    $0x3, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*146:                                  */
  0x8b, 0x45, 0xdc,                         /*147: mov     -0x24(%rbp), %eax        */
  0x48, 0x63, 0x4d, 0xf4,                   /*14a: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xe8,                   /*14e: mov     -0x18(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*152: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*156: mov     %eax, (%rdx, %rcx, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*159: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*15d: addq    $0x4, 0x18(%rax)         */
  0x48, 0x83, 0xc4, 0x30,                   /*162: add     $0x30, %rsp              */
  0x5d,                                     /*166: pop     %rbp                     */
};


static size_t op_sub_size = 436;
static uint8_t op_sub[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x48, 0x8b, 0x07,                         /*08: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*0f: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*1c: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x6f,                               /*41: jg      b2                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x0f, 0x85, 0x94, 0x00, 0x00, 0x00,       /*49: jne     e3                       */
  0x48, 0x63, 0x4d, 0xf4,                   /*4f: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xe8,                   /*53: mov     -0x18(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*57: shl     $0x4, %rcx               */
  0x8b, 0x0c, 0x0a,                         /*5b: mov     (%rdx, %rcx, 1), %ecx    */
  0x89, 0x4d, 0xe4,                         /*5e: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x63, 0x4d, 0xf4,                   /*61: movslq  -0xc(%rbp), %rcx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*65: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xe8,                   /*69: mov     -0x18(%rbp), %rdx        */
  0x8b, 0x74, 0x11, 0x10,                   /*6d: mov     0x10(%rcx, %rdx, 1), %esi */
  0x89, 0x75, 0xe0,                         /*71: mov     %esi, -0x20(%rbp)        */
  0x8b, 0x7d, 0xe4,                         /*74: mov     -0x1c(%rbp), %edi        */
  0x48, 0x05, 0x10, 0x01, 0x00, 0x00,       /*77: add     $0x110, %rax             */
  0x48, 0x8d, 0x55, 0xdc,                   /*7d: lea     -0x24(%rbp), %rdx        */
  0xff, 0xd0,                               /*81: callq   *%rax                    */
  0x84, 0xc0,                               /*83: test    %al, %al                 */
  0x0f, 0x84, 0xf5, 0x00, 0x00, 0x00,       /*85: je      180                      */
  0x48, 0x63, 0x45, 0xf4,                   /*8b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*8f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*93: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*97: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*9e:                                  */
  0xf2, 0x0f, 0x2a, 0x45, 0xe4,             /*9f: cvtsi2sdl-0x1c(%rbp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4d, 0xe0,             /*a4: cvtsi2sdl-0x20(%rbp), %xmm1      */
  0xf2, 0x0f, 0x5c, 0xc1,                   /*a9: subsd   %xmm1, %xmm0             */
  0xe9, 0x87, 0x00, 0x00, 0x00,             /*ad: jmpq    139                      */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*b2: cmp     $0x603, %ecx             */
  0x0f, 0x85, 0x8e, 0x00, 0x00, 0x00,       /*b8: jne     14c                      */
  0x48, 0x63, 0x45, 0xf4,                   /*be: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*c2: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*c6: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*ca: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*cf: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm1 */
  0xf2, 0x0f, 0x5c, 0xc1,                   /*d5: subsd   %xmm1, %xmm0             */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*d9: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xe9, 0xc3, 0x00, 0x00, 0x00,             /*de: jmpq    1a6                      */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*e3: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x83, 0x00, 0x00, 0x00,       /*e9: jne     172                      */
  0x48, 0x63, 0x45, 0xf4,                   /*ef: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*f3: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f7: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*fb: mov     (%rcx, %rax, 1), %eax    */
  0x89, 0x45, 0xd8,                         /*fe: mov     %eax, -0x28(%rbp)        */
  0x48, 0x63, 0x45, 0xf4,                   /*101: movslq  -0xc(%rbp), %rax         */
  0x48, 0xc1, 0xe0, 0x04,                   /*105: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*109: mov     -0x18(%rbp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*10d: movsd   0x10(%rax, %rcx, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x45, 0xd0,             /*113: movsd   %xmm0, -0x30(%rbp)       */
  0x48, 0x63, 0x45, 0xf4,                   /*118: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*11c: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*120: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*124: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*12b:                                  */
  0x0f, 0x57, 0xc0,                         /*12c: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x45, 0xd8,             /*12f: cvtsi2sdl-0x28(%rbp), %xmm0      */
  0xf2, 0x0f, 0x5c, 0x45, 0xd0,             /*134: subsd   -0x30(%rbp), %xmm0       */
  0x48, 0x63, 0x45, 0xf4,                   /*139: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*13d: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*141: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*145: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xeb, 0x5a,                               /*14a: jmp     1a6                      */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*14c: cmp     $0x606, %ecx             */
  0x75, 0x1e,                               /*152: jne     172                      */
  0x48, 0x63, 0x45, 0xf4,                   /*154: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*158: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*15c: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*160: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x5c, 0x44, 0x01, 0x10,       /*165: subsd   0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*16b: movsd   %xmm0, (%rcx, %rax, 1)   */
  0xeb, 0x34,                               /*170: jmp     1a6                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*172: mov     -0x8(%rbp), %rdi         */
  0x48, 0x05, 0x98, 0x01, 0x00, 0x00,       /*176: add     $0x198, %rax             */
  0xff, 0xd0,                               /*17c: callq   *%rax                    */
  0xeb, 0x2f,                               /*17e: jmp     1af                      */
  0x48, 0x63, 0x45, 0xf4,                   /*180: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*184: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*188: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, /*18c: movl    $0x3, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*193:                                  */
  0x8b, 0x45, 0xdc,                         /*194: mov     -0x24(%rbp), %eax        */
  0x48, 0x63, 0x4d, 0xf4,                   /*197: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xe8,                   /*19b: mov     -0x18(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*19f: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*1a3: mov     %eax, (%rdx, %rcx, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*1a6: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*1aa: addq    $0x4, 0x18(%rax)         */
  0x48, 0x83, 0xc4, 0x30,                   /*1af: add     $0x30, %rsp              */
  0x5d,                                     /*1b3: pop     %rbp                     */
};


static size_t op_subi_size = 291;
static uint8_t op_subi[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x48, 0x8b, 0x07,                         /*08: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*0f: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*1c: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x48, 0x8d, 0x34, 0x11,                   /*2c: lea     (%rcx, %rdx, 1), %rsi    */
  0x48, 0x89, 0x75, 0xe0,                   /*30: mov     %rsi, -0x20(%rbp)        */
  0x8b, 0x4c, 0x11, 0x08,                   /*34: mov     0x8(%rcx, %rdx, 1), %ecx */
  0x83, 0xf9, 0x06,                         /*38: cmp     $0x6, %ecx               */
  0x75, 0x26,                               /*3b: jne     63                       */
  0x48, 0x8b, 0x45, 0xf8,                   /*3d: mov     -0x8(%rbp), %rax         */
  0x8b, 0x40, 0x68,                         /*41: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*44: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*47: and     $0x7f, %eax              */
  0xf2, 0x0f, 0x2a, 0xc0,                   /*4a: cvtsi2sd%eax, %xmm0              */
  0x48, 0x8b, 0x45, 0xe0,                   /*4e: mov     -0x20(%rbp), %rax        */
  0xf2, 0x0f, 0x10, 0x08,                   /*52: movsd   (%rax), %xmm1            */
  0xf2, 0x0f, 0x5c, 0xc8,                   /*56: subsd   %xmm0, %xmm1             */
  0xf2, 0x0f, 0x11, 0x08,                   /*5a: movsd   %xmm1, (%rax)            */
  0xe9, 0xb2, 0x00, 0x00, 0x00,             /*5e: jmpq    115                      */
  0x83, 0xf9, 0x03,                         /*63: cmp     $0x3, %ecx               */
  0x75, 0x4f,                               /*66: jne     b7                       */
  0x48, 0x8b, 0x4d, 0xe0,                   /*68: mov     -0x20(%rbp), %rcx        */
  0x8b, 0x09,                               /*6c: mov     (%rcx), %ecx             */
  0x89, 0x4d, 0xdc,                         /*6e: mov     %ecx, -0x24(%rbp)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*71: mov     -0x8(%rbp), %rcx         */
  0x8b, 0x71, 0x68,                         /*75: mov     0x68(%rcx), %esi         */
  0xc1, 0xee, 0x07,                         /*78: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*7b: and     $0x7f, %esi              */
  0x89, 0x75, 0xd8,                         /*7e: mov     %esi, -0x28(%rbp)        */
  0x8b, 0x7d, 0xdc,                         /*81: mov     -0x24(%rbp), %edi        */
  0x48, 0x05, 0x08, 0x01, 0x00, 0x00,       /*84: add     $0x108, %rax             */
  0x48, 0x8d, 0x55, 0xd4,                   /*8a: lea     -0x2c(%rbp), %rdx        */
  0xff, 0xd0,                               /*8e: callq   *%rax                    */
  0x84, 0xc0,                               /*90: test    %al, %al                 */
  0x74, 0x6d,                               /*92: je      101                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*94: mov     -0x20(%rbp), %rax        */
  0xc7, 0x40, 0x08, 0x06, 0x00, 0x00, 0x00, /*98: movl    $0x6, 0x8(%rax)          */
  0xf2, 0x0f, 0x2a, 0x45, 0xdc,             /*9f: cvtsi2sdl-0x24(%rbp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4d, 0xd8,             /*a4: cvtsi2sdl-0x28(%rbp), %xmm1      */
  0xf2, 0x0f, 0x5c, 0xc1,                   /*a9: subsd   %xmm1, %xmm0             */
  0x48, 0x8b, 0x45, 0xe0,                   /*ad: mov     -0x20(%rbp), %rax        */
  0xf2, 0x0f, 0x11, 0x00,                   /*b1: movsd   %xmm0, (%rax)            */
  0xeb, 0x5e,                               /*b5: jmp     115                      */
  0x48, 0x8b, 0x4d, 0xe0,                   /*b7: mov     -0x20(%rbp), %rcx        */
  0xc7, 0x41, 0x18, 0x03, 0x00, 0x00, 0x00, /*bb: movl    $0x3, 0x18(%rcx)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*c2: mov     -0x8(%rbp), %rcx         */
  0x8b, 0x49, 0x68,                         /*c6: mov     0x68(%rcx), %ecx         */
  0xc1, 0xe9, 0x07,                         /*c9: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*cc: and     $0x7f, %ecx              */
  0x48, 0x8b, 0x55, 0xe0,                   /*cf: mov     -0x20(%rbp), %rdx        */
  0x89, 0x4a, 0x10,                         /*d3: mov     %ecx, 0x10(%rdx)         */
  0x8b, 0x4d, 0xf4,                         /*d6: mov     -0xc(%rbp), %ecx         */
  0xc1, 0xe1, 0x17,                         /*d9: shl     $0x17, %ecx              */
  0x48, 0x8b, 0x55, 0xf8,                   /*dc: mov     -0x8(%rbp), %rdx         */
  0xbe, 0x00, 0xc0, 0x7f, 0x00,             /*e0: mov     $0x7fc000, %esi          */
  0x23, 0x72, 0x68,                         /*e5: and     0x68(%rdx), %esi         */
  0x09, 0xce,                               /*e8: or      %ecx, %esi               */
  0x81, 0xce, 0xa0, 0x00, 0x00, 0x00,       /*ea: or      $0xa0, %esi              */
  0x89, 0x72, 0x68,                         /*f0: mov     %esi, 0x68(%rdx)         */
  0x48, 0x8b, 0x7d, 0xf8,                   /*f3: mov     -0x8(%rbp), %rdi         */
  0x48, 0x05, 0x98, 0x01, 0x00, 0x00,       /*f7: add     $0x198, %rax             */
  0xff, 0xd0,                               /*fd: callq   *%rax                    */
  0xeb, 0x1d,                               /*ff: jmp     11e                      */
  0x48, 0x8b, 0x45, 0xe0,                   /*101: mov     -0x20(%rbp), %rax        */
  0xc7, 0x40, 0x08, 0x03, 0x00, 0x00, 0x00, /*105: movl    $0x3, 0x8(%rax)          */
  0x8b, 0x45, 0xd4,                         /*10c: mov     -0x2c(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*10f: mov     -0x20(%rbp), %rcx        */
  0x89, 0x01,                               /*113: mov     %eax, (%rcx)             */
  0x48, 0x8b, 0x45, 0xf8,                   /*115: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*119: addq    $0x4, 0x18(%rax)         */
  0x48, 0x83, 0xc4, 0x30,                   /*11e: add     $0x30, %rsp              */
  0x5d,                                     /*122: pop     %rbp                     */
};


static size_t op_mul_size = 451;
static uint8_t op_mul[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x50,                   /*04: sub     $0x50, %rsp              */
  0x4c, 0x8b, 0x0f,                         /*08: mov     (%rdi), %r9              */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*0f: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x60,                   /*1c: mov     0x60(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*24: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*28: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe0,                   /*2c: mov     %rcx, -0x20(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*30: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*34: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*38: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*3d: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*40: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*45: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*47: cmp     $0x602, %ecx             */
  0x7f, 0x77,                               /*4d: jg      c6                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*4f: cmp     $0x303, %ecx             */
  0x0f, 0x85, 0x93, 0x00, 0x00, 0x00,       /*55: jne     ee                       */
  0x48, 0x8b, 0x7d, 0xe8,                   /*5b: mov     -0x18(%rbp), %rdi        */
  0x48, 0x63, 0x45, 0xf4,                   /*5f: movslq  -0xc(%rbp), %rax         */
  0x4c, 0x8b, 0x45, 0xe0,                   /*63: mov     -0x20(%rbp), %r8         */
  0x48, 0xc1, 0xe0, 0x04,                   /*67: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x00,                   /*6b: mov     (%r8, %rax, 1), %rsi     */
  0x41, 0x8b, 0x54, 0x00, 0x08,             /*6f: mov     0x8(%r8, %rax, 1), %edx  */
  0x49, 0x8b, 0x4c, 0x00, 0x10,             /*74: mov     0x10(%r8, %rax, 1), %rcx */
  0x45, 0x8b, 0x44, 0x00, 0x18,             /*79: mov     0x18(%r8, %rax, 1), %r8d */
  0x49, 0x81, 0xc1, 0x10, 0x02, 0x00, 0x00, /*7e: add     $0x210, %r9              */
  0x41, 0xff, 0xd1,                         /*85: callq   *%r9                     */
  0x48, 0x89, 0x45, 0xc0,                   /*88: mov     %rax, -0x40(%rbp)        */
  0x89, 0x55, 0xc8,                         /*8c: mov     %edx, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*8f: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*93: mov     -0x38(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xd8,                   /*97: mov     %rcx, -0x28(%rbp)        */
  0x48, 0x89, 0x45, 0xd0,                   /*9b: mov     %rax, -0x30(%rbp)        */
  0x8b, 0x45, 0xd8,                         /*9f: mov     -0x28(%rbp), %eax        */
  0x83, 0xf8, 0x06,                         /*a2: cmp     $0x6, %eax               */
  0x0f, 0x85, 0xea, 0x00, 0x00, 0x00,       /*a5: jne     195                      */
  0x48, 0x63, 0x45, 0xf4,                   /*ab: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*af: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*b3: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*b7: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*be:                                  */
  0xf2, 0x0f, 0x10, 0x45, 0xd0,             /*bf: movsd   -0x30(%rbp), %xmm0       */
  0xeb, 0x7e,                               /*c4: jmp     144                      */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*c6: cmp     $0x603, %ecx             */
  0x0f, 0x85, 0x80, 0x00, 0x00, 0x00,       /*cc: jne     152                      */
  0x48, 0x63, 0x45, 0xf4,                   /*d2: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*d6: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*da: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*de: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x59, 0x04, 0x01,             /*e4: mulsd   (%rcx, %rax, 1), %xmm0   */
  0xe9, 0x83, 0x00, 0x00, 0x00,             /*e9: jmpq    171                      */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*ee: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x87, 0x00, 0x00, 0x00,       /*f4: jne     181                      */
  0x48, 0x63, 0x45, 0xf4,                   /*fa: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*fe: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*102: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*106: mov     (%rcx, %rax, 1), %eax    */
  0x89, 0x45, 0xbc,                         /*109: mov     %eax, -0x44(%rbp)        */
  0x48, 0x63, 0x45, 0xf4,                   /*10c: movslq  -0xc(%rbp), %rax         */
  0x48, 0xc1, 0xe0, 0x04,                   /*110: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*114: mov     -0x20(%rbp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*118: movsd   0x10(%rax, %rcx, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x45, 0xb0,             /*11e: movsd   %xmm0, -0x50(%rbp)       */
  0x48, 0x63, 0x45, 0xf4,                   /*123: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*127: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*12b: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*12f: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*136:                                  */
  0x0f, 0x57, 0xc0,                         /*137: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x45, 0xbc,             /*13a: cvtsi2sdl-0x44(%rbp), %xmm0      */
  0xf2, 0x0f, 0x59, 0x45, 0xb0,             /*13f: mulsd   -0x50(%rbp), %xmm0       */
  0x48, 0x63, 0x45, 0xf4,                   /*144: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*148: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*14c: shl     $0x4, %rax               */
  0xeb, 0x1f,                               /*150: jmp     171                      */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*152: cmp     $0x606, %ecx             */
  0x75, 0x27,                               /*158: jne     181                      */
  0x48, 0x63, 0x45, 0xf4,                   /*15a: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*15e: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*162: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*166: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x59, 0x44, 0x01, 0x10,       /*16b: mulsd   0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*171: movsd   %xmm0, (%rcx, %rax, 1)   */
  0x48, 0x8b, 0x45, 0xf8,                   /*176: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*17a: addq    $0x4, 0x18(%rax)         */
  0xeb, 0x0e,                               /*17f: jmp     18f                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*181: mov     -0x8(%rbp), %rdi         */
  0x49, 0x81, 0xc1, 0x98, 0x01, 0x00, 0x00, /*185: add     $0x198, %r9              */
  0x41, 0xff, 0xd1,                         /*18c: callq   *%r9                     */
  0x48, 0x83, 0xc4, 0x50,                   /*18f: add     $0x50, %rsp              */
  0x5d,                                     /*193: pop     %rbp                     */
  0xeb, 0x2d,                               /*194: jmp (ret)                        */
  0x83, 0xf8, 0x03,                         /*196: cmp     $0x3, %eax               */
  0x75, 0xdc,                               /*199: jne     176                      */
  0x48, 0x63, 0x45, 0xf4,                   /*19b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe0,                   /*19f: mov     -0x20(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*1a3: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x03, 0x00, 0x00, /*1a7: movl    $0x3, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*1ae:                                  */
  0x8b, 0x45, 0xd0,                         /*1af: mov     -0x30(%rbp), %eax        */
  0x48, 0x63, 0x4d, 0xf4,                   /*1b2: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xe0,                   /*1b6: mov     -0x20(%rbp), %rdx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*1ba: shl     $0x4, %rcx               */
  0x89, 0x04, 0x0a,                         /*1be: mov     %eax, (%rdx, %rcx, 1)    */
  0xeb, 0xb4,                               /*1c1: jmp     176                      */
};


static size_t op_div_size = 359;
static uint8_t op_div[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x30,                   /*04: sub     $0x30, %rsp              */
  0x48, 0x8b, 0x07,                         /*08: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*0f: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*1c: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x54,                               /*41: jg      97                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x75, 0x78,                               /*49: jne     c3                       */
  0x48, 0x63, 0x45, 0xf4,                   /*4b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*53: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*57: mov     (%rcx, %rax, 1), %eax    */
  0x89, 0x45, 0xe4,                         /*5a: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x63, 0x45, 0xf4,                   /*5d: movslq  -0xc(%rbp), %rax         */
  0x48, 0xc1, 0xe0, 0x04,                   /*61: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*65: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x44, 0x08, 0x10,                   /*69: mov     0x10(%rax, %rcx, 1), %eax */
  0x89, 0x45, 0xe0,                         /*6d: mov     %eax, -0x20(%rbp)        */
  0x48, 0x63, 0x45, 0xf4,                   /*70: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*74: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*78: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*7c: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*83:                                  */
  0xf2, 0x0f, 0x2a, 0x45, 0xe4,             /*84: cvtsi2sdl-0x1c(%rbp), %xmm0      */
  0xf2, 0x0f, 0x2a, 0x4d, 0xe0,             /*89: cvtsi2sdl-0x20(%rbp), %xmm1      */
  0xf2, 0x0f, 0x5e, 0xc1,                   /*8e: divsd   %xmm1, %xmm0             */
  0xe9, 0x82, 0x00, 0x00, 0x00,             /*92: jmpq    119                      */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*97: cmp     $0x603, %ecx             */
  0x0f, 0x85, 0x84, 0x00, 0x00, 0x00,       /*9d: jne     127                      */
  0x48, 0x63, 0x45, 0xf4,                   /*a3: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*a7: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*ab: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*af: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*b4: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm1 */
  0xf2, 0x0f, 0x5e, 0xc1,                   /*ba: divsd   %xmm1, %xmm0             */
  0xe9, 0x83, 0x00, 0x00, 0x00,             /*be: jmpq    146                      */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*c3: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x87, 0x00, 0x00, 0x00,       /*c9: jne     156                      */
  0x48, 0x63, 0x45, 0xf4,                   /*cf: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*d3: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*d7: shl     $0x4, %rax               */
  0x8b, 0x04, 0x01,                         /*db: mov     (%rcx, %rax, 1), %eax    */
  0x89, 0x45, 0xdc,                         /*de: mov     %eax, -0x24(%rbp)        */
  0x48, 0x63, 0x45, 0xf4,                   /*e1: movslq  -0xc(%rbp), %rax         */
  0x48, 0xc1, 0xe0, 0x04,                   /*e5: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe8,                   /*e9: mov     -0x18(%rbp), %rcx        */
  0xf2, 0x0f, 0x10, 0x44, 0x08, 0x10,       /*ed: movsd   0x10(%rax, %rcx, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x45, 0xd0,             /*f3: movsd   %xmm0, -0x30(%rbp)       */
  0x48, 0x63, 0x45, 0xf4,                   /*f8: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*fc: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*100: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x06, 0x00, 0x00, /*104: movl    $0x6, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*10b:                                  */
  0x0f, 0x57, 0xc0,                         /*10c: xorps   %xmm0, %xmm0             */
  0xf2, 0x0f, 0x2a, 0x45, 0xdc,             /*10f: cvtsi2sdl-0x24(%rbp), %xmm0      */
  0xf2, 0x0f, 0x5e, 0x45, 0xd0,             /*114: divsd   -0x30(%rbp), %xmm0       */
  0x48, 0x63, 0x45, 0xf4,                   /*119: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*11d: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*121: shl     $0x4, %rax               */
  0xeb, 0x1f,                               /*125: jmp     146                      */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*127: cmp     $0x606, %ecx             */
  0x75, 0x27,                               /*12d: jne     156                      */
  0x48, 0x63, 0x45, 0xf4,                   /*12f: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*133: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*137: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*13b: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x5e, 0x44, 0x01, 0x10,       /*140: divsd   0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0x11, 0x04, 0x01,             /*146: movsd   %xmm0, (%rcx, %rax, 1)   */
  0x48, 0x8b, 0x45, 0xf8,                   /*14b: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*14f: addq    $0x4, 0x18(%rax)         */
  0xeb, 0x0c,                               /*154: jmp     162                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*156: mov     -0x8(%rbp), %rdi         */
  0x48, 0x05, 0x98, 0x01, 0x00, 0x00,       /*15a: add     $0x198, %rax             */
  0xff, 0xd0,                               /*160: callq   *%rax                    */
  0x48, 0x83, 0xc4, 0x30,                   /*162: add     $0x30, %rsp              */
  0x5d,                                     /*166: pop     %rbp                     */
};


static size_t op_eq_size = 365;
static uint8_t op_eq[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x4c, 0x8b, 0x37,                         /*0b: mov     (%rdi), %r14             */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x47, 0x68,                         /*12: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x89, 0x45, 0xe4,                         /*18: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*1b: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*1f: mov     0x20(%rax), %rax         */
  0x48, 0x89, 0x45, 0xd8,                   /*23: mov     %rax, -0x28(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*27: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x79, 0x60,                   /*2b: mov     0x60(%rcx), %rdi         */
  0x48, 0x63, 0x5d, 0xe4,                   /*2f: movslq  -0x1c(%rbp), %rbx        */
  0x48, 0xc1, 0xe3, 0x04,                   /*33: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x34, 0x18,                   /*37: mov     (%rax, %rbx, 1), %rsi    */
  0x8b, 0x54, 0x18, 0x08,                   /*3b: mov     0x8(%rax, %rbx, 1), %edx */
  0x48, 0x8b, 0x4c, 0x18, 0x10,             /*3f: mov     0x10(%rax, %rbx, 1), %rcx */
  0x44, 0x8b, 0x44, 0x18, 0x18,             /*44: mov     0x18(%rax, %rbx, 1), %r8d */
  0x49, 0x8d, 0x46, 0x38,                   /*49: lea     0x38(%r14), %rax         */
  0xff, 0xd0,                               /*4d: callq   *%rax                    */
  0x84, 0xc0,                               /*4f: test    %al, %al                 */
  0x0f, 0x85, 0xb6, 0x00, 0x00, 0x00,       /*51: jne     10d                      */
  0x48, 0x63, 0x45, 0xe4,                   /*57: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*5b: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*5f: shl     $0x4, %rax               */
  0x0f, 0xb7, 0x54, 0x01, 0x08,             /*63: movzwl  0x8(%rcx, %rax, 1), %edx */
  0xc1, 0xe2, 0x08,                         /*68: shl     $0x8, %edx               */
  0x0f, 0xb6, 0x44, 0x01, 0x18,             /*6b: movzbl  0x18(%rcx, %rax, 1), %eax */
  0x09, 0xd0,                               /*70: or      %edx, %eax               */
  0x3d, 0x02, 0x06, 0x00, 0x00,             /*72: cmp     $0x602, %eax             */
  0x7f, 0x25,                               /*77: jg      9e                       */
  0x3d, 0x03, 0x03, 0x00, 0x00,             /*79: cmp     $0x303, %eax             */
  0x75, 0x3f,                               /*7e: jne     bf                       */
  0x48, 0x63, 0x45, 0xe4,                   /*80: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*84: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*88: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*8c: mov     (%rcx, %rax, 1), %edx    */
  0x3b, 0x54, 0x01, 0x10,                   /*8f: cmp     0x10(%rcx, %rax, 1), %edx */
  0x0f, 0x94, 0xc0,                         /*93: sete    %al                      */
  0x0f, 0xb6, 0xc0,                         /*96: movzbl  %al, %eax                */
  0x89, 0x45, 0xd4,                         /*99: mov     %eax, -0x2c(%rbp)        */
  0xeb, 0x69,                               /*9c: jmp     107                      */
  0x3d, 0x03, 0x06, 0x00, 0x00,             /*9e: cmp     $0x603, %eax             */
  0x75, 0x38,                               /*a3: jne     dd                       */
  0x48, 0x63, 0x45, 0xe4,                   /*a5: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*a9: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*ad: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*b1: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm0 */
  0xf2, 0x0f, 0xc2, 0x04, 0x01, 0x00,       /*b7: cmpeqsd (%rcx, %rax, 1), %xmm0   */
  0xeb, 0x3d,                               /*bd: jmp     fc                       */
  0x3d, 0x06, 0x03, 0x00, 0x00,             /*bf: cmp     $0x306, %eax             */
  0x0f, 0x85, 0x92, 0x00, 0x00, 0x00,       /*c4: jne     15c                      */
  0x48, 0x63, 0x45, 0xe4,                   /*ca: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*ce: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*d2: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*d6: cvtsi2sdl(%rcx, %rax, 1), %xmm0  */
  0xeb, 0x18,                               /*db: jmp     f5                       */
  0x3d, 0x06, 0x06, 0x00, 0x00,             /*dd: cmp     $0x606, %eax             */
  0x75, 0x78,                               /*e2: jne     15c                      */
  0x48, 0x63, 0x45, 0xe4,                   /*e4: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*e8: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*ec: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*f0: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0xc2, 0x44, 0x01, 0x10, 0x00, /*f5: cmpeqsd 0x10(%rcx, %rax, 1), %xmm0 */
  0x66, 0x48, 0x0f, 0x7e, 0xc0,             /*fc: movq    %xmm0, %rax              */
  0x83, 0xe0, 0x01,                         /*101: and     $0x1, %eax               */
  0x89, 0x45, 0xd4,                         /*104: mov     %eax, -0x2c(%rbp)        */
  0x83, 0x7d, 0xd4, 0x00,                   /*107: cmpl    $0x0, -0x2c(%rbp)        */
  0x74, 0x39,                               /*10b: je      146                      */
  0x48, 0x63, 0x45, 0xe4,                   /*10d: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*111: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*115: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*119: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*120:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*121: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*125: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*129: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*12d: movl    $0x1, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*134: mov     -0x18(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*138: addq    $0x4, 0x18(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*13d: add     $0x20, %rsp              */
  0x5b,                                     /*141: pop     %rbx                     */
  0x41, 0x5e,                               /*142: pop     %r14                     */
  0x5d,                                     /*144: pop     %rbp                     */
  0xeb, 0x26,                               /*145: jmp (ret)                        */
  0x48, 0x63, 0x45, 0xe4,                   /*147: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*14b: mov     -0x28(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*14f: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*153: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*15a:                                  */
  0xeb, 0xc5,                               /*15b: jmp     121                      */
  0x48, 0x8b, 0x7d, 0xe8,                   /*15d: mov     -0x18(%rbp), %rdi        */
  0x49, 0x81, 0xc6, 0x98, 0x01, 0x00, 0x00, /*161: add     $0x198, %r14             */
  0x41, 0xff, 0xd6,                         /*168: callq   *%r14                    */
  0xeb, 0xd1,                               /*16b: jmp     13d                      */
};


static size_t op_lt_size = 303;
static uint8_t op_lt[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x20,                   /*04: sub     $0x20, %rsp              */
  0x48, 0x8b, 0x07,                         /*08: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*0f: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*1c: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x20,                               /*41: jg      63                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x75, 0x34,                               /*49: jne     7f                       */
  0x48, 0x63, 0x45, 0xf4,                   /*4b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*53: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*57: mov     (%rcx, %rax, 1), %edx    */
  0x3b, 0x54, 0x01, 0x10,                   /*5a: cmp     0x10(%rcx, %rax, 1), %edx */
  0x0f, 0x9c, 0xc0,                         /*5e: setl    %al                      */
  0xeb, 0x67,                               /*61: jmp     ca                       */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*63: cmp     $0x603, %ecx             */
  0x75, 0x3d,                               /*69: jne     a8                       */
  0x48, 0x63, 0x45, 0xf4,                   /*6b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*6f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*73: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*77: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm0 */
  0xeb, 0x43,                               /*7d: jmp     c2                       */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*7f: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x93, 0x00, 0x00, 0x00,       /*85: jne     11e                      */
  0x48, 0x63, 0x45, 0xf4,                   /*8b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*8f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*93: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*97: cvtsi2sdl(%rcx, %rax, 1), %xmm0  */
  0xf2, 0x0f, 0x10, 0x4c, 0x01, 0x10,       /*9c: movsd   0x10(%rcx, %rax, 1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc8,                   /*a2: ucomisd %xmm0, %xmm1             */
  0xeb, 0x1f,                               /*a6: jmp     c7                       */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*a8: cmp     $0x606, %ecx             */
  0x75, 0x6e,                               /*ae: jne     11e                      */
  0x48, 0x63, 0x45, 0xf4,                   /*b0: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*b4: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*b8: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x44, 0x01, 0x10,       /*bc: movsd   0x10(%rcx, %rax, 1), %xmm0 */
  0x66, 0x0f, 0x2e, 0x04, 0x01,             /*c2: ucomisd (%rcx, %rax, 1), %xmm0   */
  0x0f, 0x97, 0xc0,                         /*c7: seta    %al                      */
  0x0f, 0xb6, 0xc0,                         /*ca: movzbl  %al, %eax                */
  0x89, 0x45, 0xe4,                         /*cd: mov     %eax, -0x1c(%rbp)        */
  0x83, 0x7d, 0xe4, 0x00,                   /*d0: cmpl    $0x0, -0x1c(%rbp)        */
  0x74, 0x16,                               /*d4: je      ec                       */
  0x48, 0x63, 0x45, 0xf4,                   /*d6: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*da: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*de: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*e2: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*e9:                                  */
  0xeb, 0x14,                               /*ea: jmp     100                      */
  0x48, 0x63, 0x45, 0xf4,                   /*ec: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*f0: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f4: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*f8: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*ff:                                  */
  0x48, 0x63, 0x45, 0xf4,                   /*100: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*104: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*108: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*10c: movl    $0x1, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*113: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*117: addq    $0x4, 0x18(%rax)         */
  0xeb, 0x0c,                               /*11c: jmp     12a                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*11e: mov     -0x8(%rbp), %rdi         */
  0x48, 0x05, 0x98, 0x01, 0x00, 0x00,       /*122: add     $0x198, %rax             */
  0xff, 0xd0,                               /*128: callq   *%rax                    */
  0x48, 0x83, 0xc4, 0x20,                   /*12a: add     $0x20, %rsp              */
  0x5d,                                     /*12e: pop     %rbp                     */
};


static size_t op_le_size = 303;
static uint8_t op_le[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x20,                   /*04: sub     $0x20, %rsp              */
  0x48, 0x8b, 0x07,                         /*08: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*0f: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*1c: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x20,                               /*41: jg      63                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x75, 0x34,                               /*49: jne     7f                       */
  0x48, 0x63, 0x45, 0xf4,                   /*4b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*53: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*57: mov     (%rcx, %rax, 1), %edx    */
  0x3b, 0x54, 0x01, 0x10,                   /*5a: cmp     0x10(%rcx, %rax, 1), %edx */
  0x0f, 0x9e, 0xc0,                         /*5e: setle   %al                      */
  0xeb, 0x67,                               /*61: jmp     ca                       */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*63: cmp     $0x603, %ecx             */
  0x75, 0x3d,                               /*69: jne     a8                       */
  0x48, 0x63, 0x45, 0xf4,                   /*6b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*6f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*73: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x44, 0x01, 0x10,       /*77: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm0 */
  0xeb, 0x43,                               /*7d: jmp     c2                       */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*7f: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x93, 0x00, 0x00, 0x00,       /*85: jne     11e                      */
  0x48, 0x63, 0x45, 0xf4,                   /*8b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*8f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*93: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*97: cvtsi2sdl(%rcx, %rax, 1), %xmm0  */
  0xf2, 0x0f, 0x10, 0x4c, 0x01, 0x10,       /*9c: movsd   0x10(%rcx, %rax, 1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc8,                   /*a2: ucomisd %xmm0, %xmm1             */
  0xeb, 0x1f,                               /*a6: jmp     c7                       */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*a8: cmp     $0x606, %ecx             */
  0x75, 0x6e,                               /*ae: jne     11e                      */
  0x48, 0x63, 0x45, 0xf4,                   /*b0: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*b4: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*b8: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x44, 0x01, 0x10,       /*bc: movsd   0x10(%rcx, %rax, 1), %xmm0 */
  0x66, 0x0f, 0x2e, 0x04, 0x01,             /*c2: ucomisd (%rcx, %rax, 1), %xmm0   */
  0x0f, 0x93, 0xc0,                         /*c7: setae   %al                      */
  0x0f, 0xb6, 0xc0,                         /*ca: movzbl  %al, %eax                */
  0x89, 0x45, 0xe4,                         /*cd: mov     %eax, -0x1c(%rbp)        */
  0x83, 0x7d, 0xe4, 0x00,                   /*d0: cmpl    $0x0, -0x1c(%rbp)        */
  0x74, 0x16,                               /*d4: je      ec                       */
  0x48, 0x63, 0x45, 0xf4,                   /*d6: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*da: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*de: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*e2: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*e9:                                  */
  0xeb, 0x14,                               /*ea: jmp     100                      */
  0x48, 0x63, 0x45, 0xf4,                   /*ec: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*f0: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f4: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*f8: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*ff:                                  */
  0x48, 0x63, 0x45, 0xf4,                   /*100: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*104: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*108: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*10c: movl    $0x1, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*113: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*117: addq    $0x4, 0x18(%rax)         */
  0xeb, 0x0c,                               /*11c: jmp     12a                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*11e: mov     -0x8(%rbp), %rdi         */
  0x48, 0x05, 0x98, 0x01, 0x00, 0x00,       /*122: add     $0x198, %rax             */
  0xff, 0xd0,                               /*128: callq   *%rax                    */
  0x48, 0x83, 0xc4, 0x20,                   /*12a: add     $0x20, %rsp              */
  0x5d,                                     /*12e: pop     %rbp                     */
};


static size_t op_gt_size = 305;
static uint8_t op_gt[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x20,                   /*04: sub     $0x20, %rsp              */
  0x48, 0x8b, 0x07,                         /*08: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*0f: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*1c: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x20,                               /*41: jg      63                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x75, 0x40,                               /*49: jne     8b                       */
  0x48, 0x63, 0x45, 0xf4,                   /*4b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*53: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*57: mov     (%rcx, %rax, 1), %edx    */
  0x3b, 0x54, 0x01, 0x10,                   /*5a: cmp     0x10(%rcx, %rax, 1), %edx */
  0x0f, 0x9f, 0xc0,                         /*5e: setg    %al                      */
  0xeb, 0x69,                               /*61: jmp     cc                       */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*63: cmp     $0x603, %ecx             */
  0x75, 0x3f,                               /*69: jne     aa                       */
  0x48, 0x63, 0x45, 0xf4,                   /*6b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*6f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*73: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*77: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*7c: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc1,                   /*82: ucomisd %xmm1, %xmm0             */
  0x0f, 0x97, 0xc0,                         /*86: seta    %al                      */
  0xeb, 0x41,                               /*89: jmp     cc                       */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*8b: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x89, 0x00, 0x00, 0x00,       /*91: jne     120                      */
  0x48, 0x63, 0x45, 0xf4,                   /*97: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*9b: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*9f: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*a3: cvtsi2sdl(%rcx, %rax, 1), %xmm0  */
  0xeb, 0x19,                               /*a8: jmp     c3                       */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*aa: cmp     $0x606, %ecx             */
  0x75, 0x6e,                               /*b0: jne     120                      */
  0x48, 0x63, 0x45, 0xf4,                   /*b2: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*b6: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*ba: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*be: movsd   (%rcx, %rax, 1), %xmm0   */
  0x66, 0x0f, 0x2e, 0x44, 0x01, 0x10,       /*c3: ucomisd 0x10(%rcx, %rax, 1), %xmm0 */
  0x0f, 0x97, 0xc0,                         /*c9: seta    %al                      */
  0x0f, 0xb6, 0xc0,                         /*cc: movzbl  %al, %eax                */
  0x89, 0x45, 0xe4,                         /*cf: mov     %eax, -0x1c(%rbp)        */
  0x83, 0x7d, 0xe4, 0x00,                   /*d2: cmpl    $0x0, -0x1c(%rbp)        */
  0x74, 0x16,                               /*d6: je      ee                       */
  0x48, 0x63, 0x45, 0xf4,                   /*d8: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*dc: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*e0: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*e4: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*eb:                                  */
  0xeb, 0x14,                               /*ec: jmp     102                      */
  0x48, 0x63, 0x45, 0xf4,                   /*ee: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*f2: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f6: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*fa: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*101:                                  */
  0x48, 0x63, 0x45, 0xf4,                   /*102: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*106: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*10a: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*10e: movl    $0x1, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*115: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*119: addq    $0x4, 0x18(%rax)         */
  0xeb, 0x0c,                               /*11e: jmp     12c                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*120: mov     -0x8(%rbp), %rdi         */
  0x48, 0x05, 0x98, 0x01, 0x00, 0x00,       /*124: add     $0x198, %rax             */
  0xff, 0xd0,                               /*12a: callq   *%rax                    */
  0x48, 0x83, 0xc4, 0x20,                   /*12c: add     $0x20, %rsp              */
  0x5d,                                     /*130: pop     %rbp                     */
};


static size_t op_ge_size = 305;
static uint8_t op_ge[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x20,                   /*04: sub     $0x20, %rsp              */
  0x48, 0x8b, 0x07,                         /*08: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*0f: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*12: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*15: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x8b, 0x4d, 0xf8,                   /*18: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x49, 0x20,                   /*1c: mov     0x20(%rcx), %rcx         */
  0x48, 0x89, 0x4d, 0xe8,                   /*20: mov     %rcx, -0x18(%rbp)        */
  0x48, 0x63, 0x55, 0xf4,                   /*24: movslq  -0xc(%rbp), %rdx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*28: shl     $0x4, %rdx               */
  0x0f, 0xb7, 0x74, 0x11, 0x08,             /*2c: movzwl  0x8(%rcx, %rdx, 1), %esi */
  0xc1, 0xe6, 0x08,                         /*31: shl     $0x8, %esi               */
  0x0f, 0xb6, 0x4c, 0x11, 0x18,             /*34: movzbl  0x18(%rcx, %rdx, 1), %ecx */
  0x09, 0xf1,                               /*39: or      %esi, %ecx               */
  0x81, 0xf9, 0x02, 0x06, 0x00, 0x00,       /*3b: cmp     $0x602, %ecx             */
  0x7f, 0x20,                               /*41: jg      63                       */
  0x81, 0xf9, 0x03, 0x03, 0x00, 0x00,       /*43: cmp     $0x303, %ecx             */
  0x75, 0x40,                               /*49: jne     8b                       */
  0x48, 0x63, 0x45, 0xf4,                   /*4b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*4f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*53: shl     $0x4, %rax               */
  0x8b, 0x14, 0x01,                         /*57: mov     (%rcx, %rax, 1), %edx    */
  0x3b, 0x54, 0x01, 0x10,                   /*5a: cmp     0x10(%rcx, %rax, 1), %edx */
  0x0f, 0x9d, 0xc0,                         /*5e: setge   %al                      */
  0xeb, 0x69,                               /*61: jmp     cc                       */
  0x81, 0xf9, 0x03, 0x06, 0x00, 0x00,       /*63: cmp     $0x603, %ecx             */
  0x75, 0x3f,                               /*69: jne     aa                       */
  0x48, 0x63, 0x45, 0xf4,                   /*6b: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*6f: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*73: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*77: movsd   (%rcx, %rax, 1), %xmm0   */
  0xf2, 0x0f, 0x2a, 0x4c, 0x01, 0x10,       /*7c: cvtsi2sdl0x10(%rcx, %rax, 1), %xmm1 */
  0x66, 0x0f, 0x2e, 0xc1,                   /*82: ucomisd %xmm1, %xmm0             */
  0x0f, 0x93, 0xc0,                         /*86: setae   %al                      */
  0xeb, 0x41,                               /*89: jmp     cc                       */
  0x81, 0xf9, 0x06, 0x03, 0x00, 0x00,       /*8b: cmp     $0x306, %ecx             */
  0x0f, 0x85, 0x89, 0x00, 0x00, 0x00,       /*91: jne     120                      */
  0x48, 0x63, 0x45, 0xf4,                   /*97: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*9b: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*9f: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x2a, 0x04, 0x01,             /*a3: cvtsi2sdl(%rcx, %rax, 1), %xmm0  */
  0xeb, 0x19,                               /*a8: jmp     c3                       */
  0x81, 0xf9, 0x06, 0x06, 0x00, 0x00,       /*aa: cmp     $0x606, %ecx             */
  0x75, 0x6e,                               /*b0: jne     120                      */
  0x48, 0x63, 0x45, 0xf4,                   /*b2: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*b6: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*ba: shl     $0x4, %rax               */
  0xf2, 0x0f, 0x10, 0x04, 0x01,             /*be: movsd   (%rcx, %rax, 1), %xmm0   */
  0x66, 0x0f, 0x2e, 0x44, 0x01, 0x10,       /*c3: ucomisd 0x10(%rcx, %rax, 1), %xmm0 */
  0x0f, 0x93, 0xc0,                         /*c9: setae   %al                      */
  0x0f, 0xb6, 0xc0,                         /*cc: movzbl  %al, %eax                */
  0x89, 0x45, 0xe4,                         /*cf: mov     %eax, -0x1c(%rbp)        */
  0x83, 0x7d, 0xe4, 0x00,                   /*d2: cmpl    $0x0, -0x1c(%rbp)        */
  0x74, 0x16,                               /*d6: je      ee                       */
  0x48, 0x63, 0x45, 0xf4,                   /*d8: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*dc: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*e0: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x02, 0x00, 0x00, /*e4: movl    $0x2, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*eb:                                  */
  0xeb, 0x14,                               /*ec: jmp     102                      */
  0x48, 0x63, 0x45, 0xf4,                   /*ee: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*f2: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*f6: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*fa: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*101:                                  */
  0x48, 0x63, 0x45, 0xf4,                   /*102: movslq  -0xc(%rbp), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*106: mov     -0x18(%rbp), %rcx        */
  0x48, 0xc1, 0xe0, 0x04,                   /*10a: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, /*10e: movl    $0x1, (%rcx, %rax, 1)    */
  0x48, 0x8b, 0x45, 0xf8,                   /*115: mov     -0x8(%rbp), %rax         */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*119: addq    $0x4, 0x18(%rax)         */
  0xeb, 0x0c,                               /*11e: jmp     12c                      */
  0x48, 0x8b, 0x7d, 0xf8,                   /*120: mov     -0x8(%rbp), %rdi         */
  0x48, 0x05, 0x90, 0x01, 0x00, 0x00,       /*124: add     $0x190, %rax             */
  0xff, 0xd0,                               /*12a: callq   *%rax                    */
  0x48, 0x83, 0xc4, 0x20,                   /*12c: add     $0x20, %rsp              */
  0x5d,                                     /*130: pop     %rbp                     */
};


static size_t op_array_size = 118;
static uint8_t op_array[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0xb8, 0xf0, 0x01, 0x00, 0x00,             /*0b: mov     $0x1f0, %eax             */
  0x48, 0x03, 0x07,                         /*10: add     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xe8,                   /*13: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x57, 0x68,                         /*17: mov     0x68(%rdi), %edx         */
  0x89, 0xd3,                               /*1a: mov     %edx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*1c: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1f: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x77, 0x20,                   /*23: mov     0x20(%rdi), %r14         */
  0x48, 0x8b, 0x7f, 0x60,                   /*27: mov     0x60(%rdi), %rdi         */
  0x89, 0xd6,                               /*2b: mov     %edx, %esi               */
  0xc1, 0xee, 0x07,                         /*2d: shr     $0x7, %esi               */
  0x83, 0xe6, 0x7f,                         /*30: and     $0x7f, %esi              */
  0xc1, 0xea, 0x0e,                         /*33: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*36: and     $0x1ff, %edx             */
  0x48, 0xc1, 0xe2, 0x04,                   /*3c: shl     $0x4, %rdx               */
  0x4c, 0x01, 0xf2,                         /*40: add     %r14, %rdx               */
  0xff, 0xd0,                               /*43: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd8,                   /*45: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*49: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*4c: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*50: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*54: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*59: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*5d: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*61: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*64: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*68: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*6e: add     $0x20, %rsp              */
  0x5b,                                     /*72: pop     %rbx                     */
  0x41, 0x5e,                               /*73: pop     %r14                     */
  0x5d,                                     /*75: pop     %rbp                     */
};


static size_t op_arycat_size = 141;
static uint8_t op_arycat[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x41, 0x54,                               /*08: push    %r12                     */
  0x53,                                     /*0a: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*0b: sub     $0x20, %rsp              */
  0x4c, 0x8b, 0x3f,                         /*0f: mov     (%rdi), %r15             */
  0x48, 0x89, 0x7d, 0xd8,                   /*12: mov     %rdi, -0x28(%rbp)        */
  0x4c, 0x8b, 0x67, 0x20,                   /*16: mov     0x20(%rdi), %r12         */
  0x4c, 0x8b, 0x77, 0x60,                   /*1a: mov     0x60(%rdi), %r14         */
  0x8b, 0x47, 0x68,                         /*1e: mov     0x68(%rdi), %eax         */
  0x89, 0xc3,                               /*21: mov     %eax, %ebx               */
  0xc1, 0xeb, 0x17,                         /*23: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*26: shl     $0x4, %rbx               */
  0xc1, 0xe8, 0x0e,                         /*2a: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*2d: and     $0x1ff, %eax             */
  0x48, 0xc1, 0xe0, 0x04,                   /*32: shl     $0x4, %rax               */
  0x49, 0x8b, 0x34, 0x04,                   /*36: mov     (%r12, %rax, 1), %rsi    */
  0x41, 0x8b, 0x54, 0x04, 0x08,             /*3a: mov     0x8(%r12, %rax, 1), %edx */
  0x49, 0x8d, 0x87, 0x90, 0x00, 0x00, 0x00, /*3f: lea     0x90(%r15), %rax         */
  0x4c, 0x89, 0xf7,                         /*46: mov     %r14, %rdi               */
  0xff, 0xd0,                               /*49: callq   *%rax                    */
  0x41, 0x89, 0xd0,                         /*4b: mov     %edx, %r8d               */
  0x48, 0x89, 0x45, 0xc8,                   /*4e: mov     %rax, -0x38(%rbp)        */
  0x44, 0x89, 0x45, 0xd0,                   /*52: mov     %r8d, -0x30(%rbp)        */
  0x49, 0x8b, 0x34, 0x1c,                   /*56: mov     (%r12, %rbx, 1), %rsi    */
  0x41, 0x8b, 0x54, 0x1c, 0x08,             /*5a: mov     0x8(%r12, %rbx, 1), %edx */
  0x48, 0x8b, 0x4d, 0xc8,                   /*5f: mov     -0x38(%rbp), %rcx        */
  0x49, 0x81, 0xc7, 0x48, 0x01, 0x00, 0x00, /*63: add     $0x148, %r15             */
  0x4c, 0x89, 0xf7,                         /*6a: mov     %r14, %rdi               */
  0x41, 0xff, 0xd7,                         /*6d: callq   *%r15                    */
  0x48, 0x8b, 0x45, 0xd8,                   /*70: mov     -0x28(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*74: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*77: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*7b: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*81: add     $0x20, %rsp              */
  0x5b,                                     /*85: pop     %rbx                     */
  0x41, 0x5c,                               /*86: pop     %r12                     */
  0x41, 0x5e,                               /*88: pop     %r14                     */
  0x41, 0x5f,                               /*8a: pop     %r15                     */
  0x5d,                                     /*8c: pop     %rbp                     */
};


static size_t op_arypush_size = 82;
static uint8_t op_arypush[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x41, 0xba, 0x08, 0x02, 0x00, 0x00,       /*08: mov     $0x208, %r10d            */
  0x4c, 0x03, 0x17,                         /*0e: add     (%rdi), %r10             */
  0x48, 0x89, 0x7d, 0xf8,                   /*11: mov     %rdi, -0x8(%rbp)         */
  0x48, 0x8b, 0x47, 0x20,                   /*15: mov     0x20(%rdi), %rax         */
  0x4c, 0x8b, 0x4f, 0x60,                   /*19: mov     0x60(%rdi), %r9          */
  0x8b, 0x7f, 0x68,                         /*1d: mov     0x68(%rdi), %edi         */
  0x89, 0xf9,                               /*20: mov     %edi, %ecx               */
  0xc1, 0xe9, 0x17,                         /*22: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*25: shl     $0x4, %rcx               */
  0xc1, 0xef, 0x0e,                         /*29: shr     $0xe, %edi               */
  0x81, 0xe7, 0xff, 0x01, 0x00, 0x00,       /*2c: and     $0x1ff, %edi             */
  0x48, 0xc1, 0xe7, 0x04,                   /*32: shl     $0x4, %rdi               */
  0x48, 0x8b, 0x34, 0x08,                   /*36: mov     (%rax, %rcx, 1), %rsi    */
  0x8b, 0x54, 0x08, 0x08,                   /*3a: mov     0x8(%rax, %rcx, 1), %edx */
  0x48, 0x8b, 0x0c, 0x38,                   /*3e: mov     (%rax, %rdi, 1), %rcx    */
  0x44, 0x8b, 0x44, 0x38, 0x08,             /*42: mov     0x8(%rax, %rdi, 1), %r8d */
  0x4c, 0x89, 0xcf,                         /*47: mov     %r9, %rdi                */
  0x41, 0xff, 0xd2,                         /*4a: callq   *%r10                    */
  0x48, 0x83, 0xc4, 0x10,                   /*4d: add     $0x10, %rsp              */
  0x5d,                                     /*51: pop     %rbp                     */
};


static size_t op_aref_size = 254;
static uint8_t op_aref[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x30,                   /*07: sub     $0x30, %rsp              */
  0x48, 0x8b, 0x07,                         /*0b: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x4f, 0x68,                         /*12: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*15: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xe4,                         /*18: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1b: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x49, 0x68,                         /*1f: mov     0x68(%rcx), %ecx         */
  0xc1, 0xe9, 0x07,                         /*22: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*25: and     $0x7f, %ecx              */
  0x89, 0x4d, 0xe0,                         /*28: mov     %ecx, -0x20(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*2b: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x51, 0x68,                         /*2f: mov     0x68(%rcx), %edx         */
  0xc1, 0xea, 0x0e,                         /*32: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*35: and     $0x1ff, %edx             */
  0x48, 0x8b, 0x49, 0x20,                   /*3b: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe2, 0x04,                   /*3f: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x34, 0x11,                   /*43: mov     (%rcx, %rdx, 1), %rsi    */
  0x48, 0x8b, 0x4c, 0x11, 0x08,             /*47: mov     0x8(%rcx, %rdx, 1), %rcx */
  0x48, 0x89, 0x4d, 0xd8,                   /*4c: mov     %rcx, -0x28(%rbp)        */
  0x48, 0x89, 0x75, 0xd0,                   /*50: mov     %rsi, -0x30(%rbp)        */
  0x83, 0x7d, 0xd8, 0x0e,                   /*54: cmpl    $0xe, -0x28(%rbp)        */
  0x75, 0x42,                               /*58: jne     9c                       */
  0x48, 0x8b, 0x4d, 0xe8,                   /*5a: mov     -0x18(%rbp), %rcx        */
  0x8b, 0x59, 0x68,                         /*5e: mov     0x68(%rcx), %ebx         */
  0xc1, 0xeb, 0x17,                         /*61: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*64: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x71, 0x20,                   /*68: mov     0x20(%rcx), %r14         */
  0x48, 0x8b, 0x79, 0x60,                   /*6c: mov     0x60(%rcx), %rdi         */
  0x8b, 0x4d, 0xe0,                         /*70: mov     -0x20(%rbp), %ecx        */
  0x48, 0x8b, 0x75, 0xd0,                   /*73: mov     -0x30(%rbp), %rsi        */
  0x8b, 0x55, 0xd8,                         /*77: mov     -0x28(%rbp), %edx        */
  0x48, 0x05, 0xc0, 0x01, 0x00, 0x00,       /*7a: add     $0x1c0, %rax             */
  0xff, 0xd0,                               /*80: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xc0,                   /*82: mov     %rax, -0x40(%rbp)        */
  0x89, 0x55, 0xc8,                         /*86: mov     %edx, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*89: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc8,                   /*8d: mov     -0x38(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*91: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*96: mov     %rax, (%r14, %rbx, 1)    */
  0xeb, 0x5a,                               /*9a: jmp     f6                       */
  0x83, 0x7d, 0xe0, 0x00,                   /*9c: cmpl    $0x0, -0x20(%rbp)        */
  0x74, 0x31,                               /*a0: je      d3                       */
  0x48, 0x63, 0x45, 0xe4,                   /*a2: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*a6: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*aa: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*ae: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*b2: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*b9:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*ba: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*be: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*c2: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*c6: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*ca: movl    $0x0, (%rcx, %rax, 1)    */
  0xeb, 0x23,                               /*d1: jmp     f6                       */
  0x48, 0x8b, 0x45, 0xe8,                   /*d3: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x68,                         /*d7: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*da: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x20,                   /*dd: mov     0x20(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*e1: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xd0,                   /*e5: mov     -0x30(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xd8,                   /*e9: mov     -0x28(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x08,             /*ed: mov     %rsi, 0x8(%rax, %rcx, 1) */
  0x48, 0x89, 0x14, 0x08,                   /*f2: mov     %rdx, (%rax, %rcx, 1)    */
  0x48, 0x83, 0xc4, 0x30,                   /*f6: add     $0x30, %rsp              */
  0x5b,                                     /*fa: pop     %rbx                     */
  0x41, 0x5e,                               /*fb: pop     %r14                     */
  0x5d,                                     /*fd: pop     %rbp                     */
};


static size_t op_aset_size = 90;
static uint8_t op_aset[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x41, 0xbb, 0xf8, 0x01, 0x00, 0x00,       /*08: mov     $0x1f8, %r11d            */
  0x4c, 0x03, 0x1f,                         /*0e: add     (%rdi), %r11             */
  0x48, 0x89, 0x7d, 0xf8,                   /*11: mov     %rdi, -0x8(%rbp)         */
  0x48, 0x8b, 0x47, 0x20,                   /*15: mov     0x20(%rdi), %rax         */
  0x4c, 0x8b, 0x57, 0x60,                   /*19: mov     0x60(%rdi), %r10         */
  0x8b, 0x7f, 0x68,                         /*1d: mov     0x68(%rdi), %edi         */
  0x89, 0xfa,                               /*20: mov     %edi, %edx               */
  0xc1, 0xea, 0x0e,                         /*22: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*25: and     $0x1ff, %edx             */
  0x48, 0xc1, 0xe2, 0x04,                   /*2b: shl     $0x4, %rdx               */
  0x89, 0xf9,                               /*2f: mov     %edi, %ecx               */
  0xc1, 0xe9, 0x07,                         /*31: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*34: and     $0x7f, %ecx              */
  0xc1, 0xef, 0x17,                         /*37: shr     $0x17, %edi              */
  0x48, 0xc1, 0xe7, 0x04,                   /*3a: shl     $0x4, %rdi               */
  0x48, 0x8b, 0x34, 0x10,                   /*3e: mov     (%rax, %rdx, 1), %rsi    */
  0x8b, 0x54, 0x10, 0x08,                   /*42: mov     0x8(%rax, %rdx, 1), %edx */
  0x4c, 0x8b, 0x04, 0x38,                   /*46: mov     (%rax, %rdi, 1), %r8     */
  0x44, 0x8b, 0x4c, 0x38, 0x08,             /*4a: mov     0x8(%rax, %rdi, 1), %r9d */
  0x4c, 0x89, 0xd7,                         /*4f: mov     %r10, %rdi               */
  0x41, 0xff, 0xd3,                         /*52: callq   *%r11                    */
  0x48, 0x83, 0xc4, 0x10,                   /*55: add     $0x10, %rsp              */
  0x5d,                                     /*59: pop     %rbp                     */
};


static size_t op_apost_size = 689;
static uint8_t op_apost[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x70,                   /*07: sub     $0x70, %rsp              */
  0x48, 0x8b, 0x0f,                         /*0b: mov     (%rdi), %rcx             */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x47, 0x68,                         /*12: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x89, 0x45, 0xe4,                         /*18: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x63, 0x45, 0xe4,                   /*1b: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x55, 0xe8,                   /*1f: mov     -0x18(%rbp), %rdx        */
  0x48, 0x8b, 0x52, 0x20,                   /*23: mov     0x20(%rdx), %rdx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*27: shl     $0x4, %rax               */
  0x48, 0x8b, 0x34, 0x02,                   /*2b: mov     (%rdx, %rax, 1), %rsi    */
  0x48, 0x8b, 0x44, 0x02, 0x08,             /*2f: mov     0x8(%rdx, %rax, 1), %rax */
  0x48, 0x89, 0x45, 0xd8,                   /*34: mov     %rax, -0x28(%rbp)        */
  0x48, 0x89, 0x75, 0xd0,                   /*38: mov     %rsi, -0x30(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*3c: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*40: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x0e,                         /*43: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*46: and     $0x1ff, %eax             */
  0x89, 0x45, 0xcc,                         /*4b: mov     %eax, -0x34(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*4e: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*52: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*55: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*58: and     $0x7f, %eax              */
  0x89, 0x45, 0xc8,                         /*5b: mov     %eax, -0x38(%rbp)        */
  0x83, 0x7d, 0xd8, 0x0e,                   /*5e: cmpl    $0xe, -0x28(%rbp)        */
  0x0f, 0x85, 0xca, 0x00, 0x00, 0x00,       /*62: jne     132                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*68: mov     -0x30(%rbp), %rax        */
  0x48, 0x89, 0x45, 0xb0,                   /*6c: mov     %rax, -0x50(%rbp)        */
  0x8b, 0x40, 0x18,                         /*70: mov     0x18(%rax), %eax         */
  0x89, 0x45, 0xac,                         /*73: mov     %eax, -0x54(%rbp)        */
  0x8b, 0x55, 0xcc,                         /*76: mov     -0x34(%rbp), %edx        */
  0x03, 0x55, 0xc8,                         /*79: add     -0x38(%rbp), %edx        */
  0x39, 0xd0,                               /*7c: cmp     %edx, %eax               */
  0x0f, 0x8e, 0x30, 0x01, 0x00, 0x00,       /*7e: jle     1b4                      */
  0x48, 0x63, 0x5d, 0xe4,                   /*84: movslq  -0x1c(%rbp), %rbx        */
  0x8d, 0x43, 0x01,                         /*88: lea     0x1(%rbx), %eax          */
  0x89, 0x45, 0xe4,                         /*8b: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*8e: mov     -0x18(%rbp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*92: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x20,                   /*96: mov     0x20(%rax), %r14         */
  0x48, 0x8b, 0x78, 0x60,                   /*9a: mov     0x60(%rax), %rdi         */
  0x8b, 0x75, 0xac,                         /*9e: mov     -0x54(%rbp), %esi        */
  0x48, 0x63, 0x55, 0xcc,                   /*a1: movslq  -0x34(%rbp), %rdx        */
  0x29, 0xd6,                               /*a5: sub     %edx, %esi               */
  0x2b, 0x75, 0xc8,                         /*a7: sub     -0x38(%rbp), %esi        */
  0x48, 0x8b, 0x45, 0xb0,                   /*aa: mov     -0x50(%rbp), %rax        */
  0x48, 0xc1, 0xe2, 0x04,                   /*ae: shl     $0x4, %rdx               */
  0x48, 0x03, 0x50, 0x28,                   /*b2: add     0x28(%rax), %rdx         */
  0x48, 0x81, 0xc1, 0xe8, 0x01, 0x00, 0x00, /*b6: add     $0x1e8, %rcx             */
  0xff, 0xd1,                               /*bd: callq   *%rcx                    */
  0x48, 0x89, 0x45, 0x98,                   /*bf: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*c3: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*c6: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*ca: mov     -0x60(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*ce: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*d3: mov     %rax, (%r14, %rbx, 1)    */
  0xeb, 0x47,                               /*d7: jmp     120                      */
  0x0f, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, /*d9: nopl    0x0(%rax)                */
  0x48, 0x63, 0x45, 0xe4,                   /*e0: movslq  -0x1c(%rbp), %rax        */
  0x8d, 0x48, 0x01,                         /*e4: lea     0x1(%rax), %ecx          */
  0x89, 0x4d, 0xe4,                         /*e7: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*ea: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*ee: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*f2: shl     $0x4, %rax               */
  0x48, 0x63, 0x55, 0xac,                   /*f6: movslq  -0x54(%rbp), %rdx        */
  0x48, 0x63, 0x75, 0xc8,                   /*fa: movslq  -0x38(%rbp), %rsi        */
  0x48, 0x29, 0xf2,                         /*fe: sub     %rsi, %rdx               */
  0x48, 0xc1, 0xe2, 0x04,                   /*101: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x75, 0xb0,                   /*105: mov     -0x50(%rbp), %rsi        */
  0x48, 0x8b, 0x76, 0x28,                   /*109: mov     0x28(%rsi), %rsi         */
  0x48, 0x8b, 0x7c, 0x32, 0xf0,             /*10d: mov     -0x10(%rdx, %rsi, 1), %rdi */
  0x48, 0x8b, 0x54, 0x32, 0xf8,             /*112: mov     -0x8(%rdx, %rsi, 1), %rdx */
  0x48, 0x89, 0x54, 0x01, 0x08,             /*117: mov     %rdx, 0x8(%rcx, %rax, 1) */
  0x48, 0x89, 0x3c, 0x01,                   /*11c: mov     %rdi, (%rcx, %rax, 1)    */
  0x8b, 0x45, 0xc8,                         /*120: mov     -0x38(%rbp), %eax        */
  0x8d, 0x48, 0xff,                         /*123: lea     -0x1(%rax), %ecx         */
  0x89, 0x4d, 0xc8,                         /*126: mov     %ecx, -0x38(%rbp)        */
  0x85, 0xc0,                               /*129: test    %eax, %eax               */
  0x75, 0xb3,                               /*12b: jne     e0                       */
  0xe9, 0x66, 0x01, 0x00, 0x00,             /*12d: jmpq    298                      */
  0x48, 0x63, 0x5d, 0xe4,                   /*132: movslq  -0x1c(%rbp), %rbx        */
  0x8d, 0x43, 0x01,                         /*136: lea     0x1(%rbx), %eax          */
  0x89, 0x45, 0xe4,                         /*139: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*13c: mov     -0x18(%rbp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*140: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x20,                   /*144: mov     0x20(%rax), %r14         */
  0x48, 0x8b, 0x78, 0x60,                   /*148: mov     0x60(%rax), %rdi         */
  0x48, 0x83, 0xc1, 0x78,                   /*14c: add     $0x78, %rcx              */
  0x31, 0xf6,                               /*150: xor     %esi, %esi               */
  0xff, 0xd1,                               /*152: callq   *%rcx                    */
  0x48, 0x89, 0x45, 0xb8,                   /*154: mov     %rax, -0x48(%rbp)        */
  0x89, 0x55, 0xc0,                         /*158: mov     %edx, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xb8,                   /*15b: mov     -0x48(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xc0,                   /*15f: mov     -0x40(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*163: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*168: mov     %rax, (%r14, %rbx, 1)    */
  0xeb, 0x34,                               /*16c: jmp     1a2                      */
  0x66, 0x90,                               /*16e: xchg    %ax, %ax                 */
  0x48, 0x63, 0x45, 0xe4,                   /*170: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*174: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*178: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*17c: shl     $0x4, %rax               */
  0xc7, 0x44, 0x01, 0x08, 0x00, 0x00, 0x00, /*180: movl    $0x0, 0x8(%rcx, %rax, 1) */
  0x00,                                     /*187:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*188: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*18c: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*190: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*194: shl     $0x4, %rax               */
  0xc7, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, /*198: movl    $0x0, (%rcx, %rax, 1)    */
  0xff, 0x45, 0xe4,                         /*19f: incl    -0x1c(%rbp)              */
  0x8b, 0x45, 0xc8,                         /*1a2: mov     -0x38(%rbp), %eax        */
  0x8d, 0x48, 0xff,                         /*1a5: lea     -0x1(%rax), %ecx         */
  0x89, 0x4d, 0xc8,                         /*1a8: mov     %ecx, -0x38(%rbp)        */
  0x85, 0xc0,                               /*1ab: test    %eax, %eax               */
  0x75, 0xc1,                               /*1ad: jne     170                      */
  0xe9, 0xe4, 0x00, 0x00, 0x00,             /*1af: jmpq    298                      */
  0x48, 0x63, 0x5d, 0xe4,                   /*1b4: movslq  -0x1c(%rbp), %rbx        */
  0x8d, 0x43, 0x01,                         /*1b8: lea     0x1(%rbx), %eax          */
  0x89, 0x45, 0xe4,                         /*1bb: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*1be: mov     -0x18(%rbp), %rax        */
  0x48, 0xc1, 0xe3, 0x04,                   /*1c2: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x20,                   /*1c6: mov     0x20(%rax), %r14         */
  0x48, 0x8b, 0x78, 0x60,                   /*1ca: mov     0x60(%rax), %rdi         */
  0x48, 0x83, 0xc1, 0x70,                   /*1ce: add     $0x70, %rcx              */
  0x31, 0xf6,                               /*1d2: xor     %esi, %esi               */
  0xff, 0xd1,                               /*1d4: callq   *%rcx                    */
  0x48, 0x89, 0x45, 0x88,                   /*1d6: mov     %rax, -0x78(%rbp)        */
  0x89, 0x55, 0x90,                         /*1da: mov     %edx, -0x70(%rbp)        */
  0x48, 0x8b, 0x45, 0x88,                   /*1dd: mov     -0x78(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x90,                   /*1e1: mov     -0x70(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*1e5: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*1ea: mov     %rax, (%r14, %rbx, 1)    */
  0xc7, 0x45, 0xa8, 0x00, 0x00, 0x00, 0x00, /*1ee: movl    $0x0, -0x58(%rbp)        */
  0xeb, 0x48,                               /*1f5: jmp     23f                      */
  0x66, 0x0f, 0x1f, 0x84, 0x00, 0x00, 0x00, /*1f7: nopw    0x0(%rax, %rax, 1)       */
  0x00, 0x00,                               /*1fe:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*200: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xa8,                   /*204: movslq  -0x58(%rbp), %rcx        */
  0x48, 0x01, 0xc8,                         /*208: add     %rcx, %rax               */
  0x48, 0x8b, 0x55, 0xe8,                   /*20b: mov     -0x18(%rbp), %rdx        */
  0x48, 0x8b, 0x52, 0x20,                   /*20f: mov     0x20(%rdx), %rdx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*213: shl     $0x4, %rax               */
  0x48, 0x63, 0x75, 0xcc,                   /*217: movslq  -0x34(%rbp), %rsi        */
  0x48, 0x01, 0xce,                         /*21b: add     %rcx, %rsi               */
  0x48, 0x8b, 0x4d, 0xb0,                   /*21e: mov     -0x50(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x28,                   /*222: mov     0x28(%rcx), %rcx         */
  0x48, 0xc1, 0xe6, 0x04,                   /*226: shl     $0x4, %rsi               */
  0x48, 0x8b, 0x3c, 0x31,                   /*22a: mov     (%rcx, %rsi, 1), %rdi    */
  0x48, 0x8b, 0x4c, 0x31, 0x08,             /*22e: mov     0x8(%rcx, %rsi, 1), %rcx */
  0x48, 0x89, 0x4c, 0x02, 0x08,             /*233: mov     %rcx, 0x8(%rdx, %rax, 1) */
  0x48, 0x89, 0x3c, 0x02,                   /*238: mov     %rdi, (%rdx, %rax, 1)    */
  0xff, 0x45, 0xa8,                         /*23c: incl    -0x58(%rbp)              */
  0x8b, 0x45, 0xa8,                         /*23f: mov     -0x58(%rbp), %eax        */
  0x03, 0x45, 0xcc,                         /*242: add     -0x34(%rbp), %eax        */
  0x3b, 0x45, 0xac,                         /*245: cmp     -0x54(%rbp), %eax        */
  0x7c, 0xb6,                               /*248: jl      200                      */
  0xeb, 0x44,                               /*24a: jmp     290                      */
  0x0f, 0x1f, 0x40, 0x00,                   /*24c: nopl    0x0(%rax)                */
  0x48, 0x63, 0x45, 0xe4,                   /*250: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xa8,                   /*254: movslq  -0x58(%rbp), %rcx        */
  0x48, 0x01, 0xc1,                         /*258: add     %rax, %rcx               */
  0x48, 0x8b, 0x45, 0xe8,                   /*25b: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*25f: mov     0x20(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*263: shl     $0x4, %rcx               */
  0xc7, 0x44, 0x08, 0x08, 0x00, 0x00, 0x00, /*267: movl    $0x0, 0x8(%rax, %rcx, 1) */
  0x00,                                     /*26e:                                  */
  0x48, 0x63, 0x45, 0xe4,                   /*26f: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x63, 0x4d, 0xa8,                   /*273: movslq  -0x58(%rbp), %rcx        */
  0x48, 0x01, 0xc1,                         /*277: add     %rax, %rcx               */
  0x48, 0x8b, 0x45, 0xe8,                   /*27a: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*27e: mov     0x20(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*282: shl     $0x4, %rcx               */
  0xc7, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, /*286: movl    $0x0, (%rax, %rcx, 1)    */
  0xff, 0x45, 0xa8,                         /*28d: incl    -0x58(%rbp)              */
  0x8b, 0x45, 0xa8,                         /*290: mov     -0x58(%rbp), %eax        */
  0x3b, 0x45, 0xc8,                         /*293: cmp     -0x38(%rbp), %eax        */
  0x7c, 0xb8,                               /*296: jl      250                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*298: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*29c: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*29f: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*2a3: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x70,                   /*2a9: add     $0x70, %rsp              */
  0x5b,                                     /*2ad: pop     %rbx                     */
  0x41, 0x5e,                               /*2ae: pop     %r14                     */
  0x5d,                                     /*2b0: pop     %rbp                     */
};


static size_t op_string_size = 119;
static uint8_t op_string[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0xb9, 0x80, 0x01, 0x00, 0x00,             /*0b: mov     $0x180, %ecx             */
  0x48, 0x03, 0x0f,                         /*10: add     (%rdi), %rcx             */
  0x48, 0x89, 0x7d, 0xe8,                   /*13: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x57, 0x68,                         /*17: mov     0x68(%rdi), %edx         */
  0x89, 0xd3,                               /*1a: mov     %edx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*1c: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1f: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x47, 0x60,                   /*23: mov     0x60(%rdi), %rax         */
  0xc1, 0xea, 0x07,                         /*27: shr     $0x7, %edx               */
  0x0f, 0xb7, 0xd2,                         /*2a: movzwl  %dx, %edx                */
  0x4c, 0x8b, 0x77, 0x20,                   /*2d: mov     0x20(%rdi), %r14         */
  0x48, 0x8b, 0x7f, 0x28,                   /*31: mov     0x28(%rdi), %rdi         */
  0x48, 0xc1, 0xe2, 0x04,                   /*35: shl     $0x4, %rdx               */
  0x48, 0x8b, 0x34, 0x17,                   /*39: mov     (%rdi, %rdx, 1), %rsi    */
  0x8b, 0x54, 0x17, 0x08,                   /*3d: mov     0x8(%rdi, %rdx, 1), %edx */
  0x48, 0x89, 0xc7,                         /*41: mov     %rax, %rdi               */
  0xff, 0xd1,                               /*44: callq   *%rcx                    */
  0x48, 0x89, 0x45, 0xd8,                   /*46: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*4a: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*4d: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*51: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*55: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*5a: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*5e: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*62: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*65: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*69: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*6f: add     $0x20, %rsp              */
  0x5b,                                     /*73: pop     %rbx                     */
  0x41, 0x5e,                               /*74: pop     %r14                     */
  0x5d,                                     /*76: pop     %rbp                     */
};


static size_t op_strcat_size = 82;
static uint8_t op_strcat[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x41, 0xba, 0xb0, 0x01, 0x00, 0x00,       /*08: mov     $0x1b0, %r10d            */
  0x4c, 0x03, 0x17,                         /*0e: add     (%rdi), %r10             */
  0x48, 0x89, 0x7d, 0xf8,                   /*11: mov     %rdi, -0x8(%rbp)         */
  0x48, 0x8b, 0x47, 0x20,                   /*15: mov     0x20(%rdi), %rax         */
  0x4c, 0x8b, 0x4f, 0x60,                   /*19: mov     0x60(%rdi), %r9          */
  0x8b, 0x7f, 0x68,                         /*1d: mov     0x68(%rdi), %edi         */
  0x89, 0xf9,                               /*20: mov     %edi, %ecx               */
  0xc1, 0xe9, 0x17,                         /*22: shr     $0x17, %ecx              */
  0x48, 0xc1, 0xe1, 0x04,                   /*25: shl     $0x4, %rcx               */
  0xc1, 0xef, 0x0e,                         /*29: shr     $0xe, %edi               */
  0x81, 0xe7, 0xff, 0x01, 0x00, 0x00,       /*2c: and     $0x1ff, %edi             */
  0x48, 0xc1, 0xe7, 0x04,                   /*32: shl     $0x4, %rdi               */
  0x48, 0x8b, 0x34, 0x08,                   /*36: mov     (%rax, %rcx, 1), %rsi    */
  0x8b, 0x54, 0x08, 0x08,                   /*3a: mov     0x8(%rax, %rcx, 1), %edx */
  0x48, 0x8b, 0x0c, 0x38,                   /*3e: mov     (%rax, %rdi, 1), %rcx    */
  0x44, 0x8b, 0x44, 0x38, 0x08,             /*42: mov     0x8(%rax, %rdi, 1), %r8d */
  0x4c, 0x89, 0xcf,                         /*47: mov     %r9, %rdi                */
  0x41, 0xff, 0xd2,                         /*4a: callq   *%r10                    */
  0x48, 0x83, 0xc4, 0x10,                   /*4d: add     $0x10, %rsp              */
  0x5d,                                     /*51: pop     %rbp                     */
};


static size_t op_hash_size = 226;
static uint8_t op_hash[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x40,                   /*07: sub     $0x40, %rsp              */
  0x4c, 0x8b, 0x37,                         /*0b: mov     (%rdi), %r14             */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x47, 0x68,                         /*12: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x0e,                         /*15: shr     $0xe, %eax               */
  0x25, 0xff, 0x01, 0x00, 0x00,             /*18: and     $0x1ff, %eax             */
  0x89, 0x45, 0xe4,                         /*1d: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*20: mov     -0x18(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*24: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*27: shr     $0x7, %eax               */
  0x83, 0xe0, 0x7f,                         /*2a: and     $0x7f, %eax              */
  0x89, 0x45, 0xe0,                         /*2d: mov     %eax, -0x20(%rbp)        */
  0x01, 0xc0,                               /*30: add     %eax, %eax               */
  0x03, 0x45, 0xe4,                         /*32: add     -0x1c(%rbp), %eax        */
  0x89, 0x45, 0xdc,                         /*35: mov     %eax, -0x24(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*38: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*3c: mov     0x60(%rax), %rdi         */
  0x8b, 0x75, 0xe0,                         /*40: mov     -0x20(%rbp), %esi        */
  0x49, 0x8d, 0x86, 0x00, 0x01, 0x00, 0x00, /*43: lea     0x100(%r14), %rax        */
  0xff, 0xd0,                               /*4a: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xc8,                   /*4c: mov     %rax, -0x38(%rbp)        */
  0x89, 0x55, 0xd0,                         /*50: mov     %edx, -0x30(%rbp)        */
  0x49, 0x81, 0xc6, 0x58, 0x01, 0x00, 0x00, /*53: add     $0x158, %r14             */
  0xeb, 0x42,                               /*5a: jmp     9e                       */
  0x0f, 0x1f, 0x40, 0x00,                   /*5c: nopl    0x0(%rax)                */
  0x48, 0x8b, 0x45, 0xe8,                   /*60: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x58, 0x20,                   /*64: mov     0x20(%rax), %rbx         */
  0x48, 0x8b, 0x78, 0x60,                   /*68: mov     0x60(%rax), %rdi         */
  0x48, 0x63, 0x45, 0xe4,                   /*6c: movslq  -0x1c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*70: shl     $0x4, %rax               */
  0x48, 0x8b, 0x75, 0xc8,                   /*74: mov     -0x38(%rbp), %rsi        */
  0x8b, 0x55, 0xd0,                         /*78: mov     -0x30(%rbp), %edx        */
  0x48, 0x8b, 0x0c, 0x03,                   /*7b: mov     (%rbx, %rax, 1), %rcx    */
  0x44, 0x8b, 0x44, 0x03, 0x08,             /*7f: mov     0x8(%rbx, %rax, 1), %r8d */
  0x4c, 0x8b, 0x4c, 0x03, 0x10,             /*84: mov     0x10(%rbx, %rax, 1), %r9 */
  0x48, 0x8b, 0x44, 0x03, 0x18,             /*89: mov     0x18(%rbx, %rax, 1), %rax */
  0x48, 0x89, 0x44, 0x24, 0x08,             /*8e: mov     %rax, 0x8(%rsp)          */
  0x4c, 0x89, 0x0c, 0x24,                   /*93: mov     %r9, (%rsp)              */
  0x41, 0xff, 0xd6,                         /*97: callq   *%r14                    */
  0x83, 0x45, 0xe4, 0x02,                   /*9a: addl    $0x2, -0x1c(%rbp)        */
  0x8b, 0x45, 0xe4,                         /*9e: mov     -0x1c(%rbp), %eax        */
  0x3b, 0x45, 0xdc,                         /*a1: cmp     -0x24(%rbp), %eax        */
  0x7c, 0xba,                               /*a4: jl      60                       */
  0x48, 0x8b, 0x45, 0xe8,                   /*a6: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x68,                         /*aa: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x17,                         /*ad: shr     $0x17, %ecx              */
  0x48, 0x8b, 0x40, 0x20,                   /*b0: mov     0x20(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*b4: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x55, 0xc8,                   /*b8: mov     -0x38(%rbp), %rdx        */
  0x48, 0x8b, 0x75, 0xd0,                   /*bc: mov     -0x30(%rbp), %rsi        */
  0x48, 0x89, 0x74, 0x08, 0x08,             /*c0: mov     %rsi, 0x8(%rax, %rcx, 1) */
  0x48, 0x89, 0x14, 0x08,                   /*c5: mov     %rdx, (%rax, %rcx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*c9: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*cd: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*d0: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*d4: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x40,                   /*da: add     $0x40, %rsp              */
  0x5b,                                     /*de: pop     %rbx                     */
  0x41, 0x5e,                               /*df: pop     %r14                     */
  0x5d,                                     /*e1: pop     %rbp                     */
};


static size_t op_lambda_size = 370;
static uint8_t op_lambda[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x41, 0x54,                               /*08: push    %r12                     */
  0x53,                                     /*0a: push    %rbx                     */
  0x48, 0x83, 0xec, 0x50,                   /*0b: sub     $0x50, %rsp              */
  0x4c, 0x8b, 0x27,                         /*0f: mov     (%rdi), %r12             */
  0x48, 0x89, 0x7d, 0xd8,                   /*12: mov     %rdi, -0x28(%rbp)        */
  0x8b, 0x47, 0x68,                         /*16: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x07,                         /*19: shr     $0x7, %eax               */
  0x83, 0xe0, 0x03,                         /*1c: and     $0x3, %eax               */
  0x89, 0x45, 0xcc,                         /*1f: mov     %eax, -0x34(%rbp)        */
  0xf6, 0x45, 0xcc, 0x02,                   /*22: testb   $0x2, -0x34(%rbp)        */
  0x74, 0x2f,                               /*26: je      57                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*28: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*2c: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*30: mov     0x60(%rax), %rdi         */
  0x8b, 0x40, 0x68,                         /*34: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x09,                         /*37: shr     $0x9, %eax               */
  0x25, 0xff, 0x3f, 0x00, 0x00,             /*3a: and     $0x3fff, %eax            */
  0x48, 0x8b, 0x49, 0x20,                   /*3f: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x34, 0xc1,                   /*43: mov     (%rcx, %rax, 8), %rsi    */
  0x49, 0x8d, 0x44, 0x24, 0x18,             /*47: lea     0x18(%r12), %rax         */
  0xff, 0xd0,                               /*4c: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd0,                   /*4e: mov     %rax, -0x30(%rbp)        */
  0xe9, 0xa2, 0x00, 0x00, 0x00,             /*52: jmpq    f9                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*57: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*5b: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*5f: mov     0x60(%rax), %rdi         */
  0x8b, 0x40, 0x68,                         /*63: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x09,                         /*66: shr     $0x9, %eax               */
  0x25, 0xff, 0x3f, 0x00, 0x00,             /*69: and     $0x3fff, %eax            */
  0x48, 0x8b, 0x49, 0x20,                   /*6e: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x34, 0xc1,                   /*72: mov     (%rcx, %rax, 8), %rsi    */
  0x49, 0x8d, 0x84, 0x24, 0xe8, 0x00, 0x00, /*76: lea     0xe8(%r12), %rax         */
  0x00,                                     /*7d:                                  */
  0xff, 0xd0,                               /*7e: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd0,                   /*80: mov     %rax, -0x30(%rbp)        */
  0xf6, 0x45, 0xcc, 0x01,                   /*84: testb   $0x1, -0x34(%rbp)        */
  0x74, 0x6f,                               /*88: je      f9                       */
  0x48, 0x8b, 0x45, 0xd0,                   /*8a: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x20,                   /*8e: mov     0x20(%rax), %rax         */
  0x0f, 0xb6, 0x00,                         /*92: movzbl  (%rax), %eax             */
  0x83, 0xf8, 0x0c,                         /*95: cmp     $0xc, %eax               */
  0x75, 0x5f,                               /*98: jne     f9                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*9a: mov     -0x28(%rbp), %rax        */
  0x4c, 0x8b, 0x78, 0x60,                   /*9e: mov     0x60(%rax), %r15         */
  0x48, 0x8b, 0x45, 0xd0,                   /*a2: mov     -0x30(%rbp), %rax        */
  0x4c, 0x8b, 0x70, 0x20,                   /*a6: mov     0x20(%rax), %r14         */
  0x49, 0x8d, 0x84, 0x24, 0x40, 0x02, 0x00, /*aa: lea     0x240(%r12), %rax        */
  0x00,                                     /*b1:                                  */
  0x49, 0x8d, 0xb4, 0x24, 0x78, 0x02, 0x00, /*b2: lea     0x278(%r12), %rsi        */
  0x00,                                     /*b9:                                  */
  0xba, 0x0c, 0x00, 0x00, 0x00,             /*ba: mov     $0xc, %edx               */
  0x4c, 0x89, 0xff,                         /*bf: mov     %r15, %rdi               */
  0xff, 0xd0,                               /*c2: callq   *%rax                    */
  0x49, 0x8d, 0x8c, 0x24, 0xf0, 0x00, 0x00, /*c4: lea     0xf0(%r12), %rcx         */
  0x00,                                     /*cb:                                  */
  0x4c, 0x89, 0xff,                         /*cc: mov     %r15, %rdi               */
  0x4c, 0x89, 0xf6,                         /*cf: mov     %r14, %rsi               */
  0x89, 0xc2,                               /*d2: mov     %eax, %edx               */
  0xff, 0xd1,                               /*d4: callq   *%rcx                    */
  0x48, 0x89, 0x45, 0xa8,                   /*d6: mov     %rax, -0x58(%rbp)        */
  0x89, 0x55, 0xb0,                         /*da: mov     %edx, -0x50(%rbp)        */
  0x48, 0x8b, 0x45, 0xa8,                   /*dd: mov     -0x58(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb0,                   /*e1: mov     -0x50(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xc0,                   /*e5: mov     %rcx, -0x40(%rbp)        */
  0x48, 0x89, 0x45, 0xb8,                   /*e9: mov     %rax, -0x48(%rbp)        */
  0x48, 0x8b, 0x45, 0xb8,                   /*ed: mov     -0x48(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd0,                   /*f1: mov     -0x30(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x20,                   /*f5: mov     %rax, 0x20(%rcx)         */
  0xf6, 0x45, 0xcc, 0x01,                   /*f9: testb   $0x1, -0x34(%rbp)        */
  0x74, 0x1e,                               /*fd: je      11d                      */
  0x48, 0x8b, 0x45, 0xd0,                   /*ff: mov     -0x30(%rbp), %rax        */
  0x8b, 0x08,                               /*103: mov     (%rax), %ecx             */
  0x89, 0xca,                               /*105: mov     %ecx, %edx               */
  0x81, 0xe2, 0x00, 0xf8, 0xf7, 0xff,       /*107: and     $0xfff7f800, %edx        */
  0x81, 0xe1, 0xff, 0x07, 0x00, 0x00,       /*10d: and     $0x7ff, %ecx             */
  0x09, 0xd1,                               /*113: or      %edx, %ecx               */
  0x81, 0xc9, 0x00, 0x00, 0x08, 0x00,       /*115: or      $0x80000, %ecx           */
  0x89, 0x08,                               /*11b: mov     %ecx, (%rax)             */
  0x48, 0x8b, 0x45, 0xd8,                   /*11d: mov     -0x28(%rbp), %rax        */
  0x8b, 0x58, 0x68,                         /*121: mov     0x68(%rax), %ebx         */
  0xc1, 0xeb, 0x17,                         /*124: shr     $0x17, %ebx              */
  0x4c, 0x8b, 0x70, 0x20,                   /*127: mov     0x20(%rax), %r14         */
  0x48, 0xc1, 0xe3, 0x04,                   /*12b: shl     $0x4, %rbx               */
  0x48, 0x8b, 0x7d, 0xd0,                   /*12f: mov     -0x30(%rbp), %rdi        */
  0x49, 0x81, 0xc4, 0xe8, 0x01, 0x00, 0x00, /*133: add     $0x1e8, %r12             */
  0x41, 0xff, 0xd4,                         /*13a: callq   *%r12                    */
  0x48, 0x89, 0x45, 0x98,                   /*13d: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*141: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*144: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*148: mov     -0x60(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*14c: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*151: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xd8,                   /*155: mov     -0x28(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*159: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*15c: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*160: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x50,                   /*166: add     $0x50, %rsp              */
  0x5b,                                     /*16a: pop     %rbx                     */
  0x41, 0x5c,                               /*16b: pop     %r12                     */
  0x41, 0x5e,                               /*16d: pop     %r14                     */
  0x41, 0x5f,                               /*16f: pop     %r15                     */
  0x5d,                                     /*171: pop     %rbp                     */
};


static size_t op_range_size = 152;
static uint8_t op_range[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x41, 0xba, 0x20, 0x01, 0x00, 0x00,       /*0b: mov     $0x120, %r10d            */
  0x4c, 0x03, 0x17,                         /*11: add     (%rdi), %r10             */
  0x48, 0x89, 0x7d, 0xe8,                   /*14: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x4f, 0x68,                         /*18: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x0e,                         /*1b: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*1e: and     $0x1ff, %ecx             */
  0x89, 0x4d, 0xe4,                         /*24: mov     %ecx, -0x1c(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*27: mov     -0x18(%rbp), %rcx        */
  0x44, 0x8b, 0x49, 0x68,                   /*2b: mov     0x68(%rcx), %r9d         */
  0x45, 0x89, 0xce,                         /*2f: mov     %r9d, %r14d              */
  0x41, 0xc1, 0xee, 0x17,                   /*32: shr     $0x17, %r14d             */
  0x49, 0xc1, 0xe6, 0x04,                   /*36: shl     $0x4, %r14               */
  0x48, 0x8b, 0x59, 0x20,                   /*3a: mov     0x20(%rcx), %rbx         */
  0x48, 0x8b, 0x79, 0x60,                   /*3e: mov     0x60(%rcx), %rdi         */
  0x48, 0x63, 0x45, 0xe4,                   /*42: movslq  -0x1c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*46: shl     $0x4, %rax               */
  0x41, 0xc1, 0xe9, 0x07,                   /*4a: shr     $0x7, %r9d               */
  0x41, 0x83, 0xe1, 0x7f,                   /*4e: and     $0x7f, %r9d              */
  0x48, 0x8b, 0x34, 0x03,                   /*52: mov     (%rbx, %rax, 1), %rsi    */
  0x8b, 0x54, 0x03, 0x08,                   /*56: mov     0x8(%rbx, %rax, 1), %edx */
  0x48, 0x8b, 0x4c, 0x03, 0x10,             /*5a: mov     0x10(%rbx, %rax, 1), %rcx */
  0x44, 0x8b, 0x44, 0x03, 0x18,             /*5f: mov     0x18(%rbx, %rax, 1), %r8d */
  0x41, 0xff, 0xd2,                         /*64: callq   *%r10                    */
  0x48, 0x89, 0x45, 0xd0,                   /*67: mov     %rax, -0x30(%rbp)        */
  0x89, 0x55, 0xd8,                         /*6b: mov     %edx, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xd0,                   /*6e: mov     -0x30(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*72: mov     -0x28(%rbp), %rcx        */
  0x4a, 0x89, 0x4c, 0x33, 0x08,             /*76: mov     %rcx, 0x8(%rbx, %r14, 1) */
  0x4a, 0x89, 0x04, 0x33,                   /*7b: mov     %rax, (%rbx, %r14, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*7f: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*83: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*86: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*8a: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*90: add     $0x20, %rsp              */
  0x5b,                                     /*94: pop     %rbx                     */
  0x41, 0x5e,                               /*95: pop     %r14                     */
  0x5d,                                     /*97: pop     %rbp                     */
};


static size_t op_oclass_size = 79;
static uint8_t op_oclass[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0xb8, 0xe8, 0x01, 0x00, 0x00,             /*0b: mov     $0x1e8, %eax             */
  0x48, 0x03, 0x07,                         /*10: add     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xe8,                   /*13: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x5f, 0x68,                         /*17: mov     0x68(%rdi), %ebx         */
  0xc1, 0xeb, 0x17,                         /*1a: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1d: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x77, 0x20,                   /*21: mov     0x20(%rdi), %r14         */
  0x48, 0x8b, 0x4f, 0x60,                   /*25: mov     0x60(%rdi), %rcx         */
  0x48, 0x8b, 0x79, 0x40,                   /*29: mov     0x40(%rcx), %rdi         */
  0xff, 0xd0,                               /*2d: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd8,                   /*2f: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*33: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*36: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*3a: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*3e: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*43: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x83, 0xc4, 0x20,                   /*47: add     $0x20, %rsp              */
  0x5b,                                     /*4b: pop     %rbx                     */
  0x41, 0x5e,                               /*4c: pop     %r14                     */
  0x5d,                                     /*4e: pop     %rbp                     */
};


static size_t op_class_size = 318;
static uint8_t op_class[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x53,                                     /*08: push    %rbx                     */
  0x48, 0x83, 0xec, 0x68,                   /*09: sub     $0x68, %rsp              */
  0x4c, 0x8b, 0x37,                         /*0d: mov     (%rdi), %r14             */
  0x48, 0x89, 0x7d, 0xe0,                   /*10: mov     %rdi, -0x20(%rbp)        */
  0x48, 0xc7, 0x45, 0xd8, 0x00, 0x00, 0x00, /*14: movq    $0x0, -0x28(%rbp)        */
  0x00,                                     /*1b:                                  */
  0x48, 0x8b, 0x45, 0xe0,                   /*1c: mov     -0x20(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*20: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*23: shr     $0x17, %eax              */
  0x89, 0x45, 0xd4,                         /*26: mov     %eax, -0x2c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*29: mov     -0x20(%rbp), %rax        */
  0x8b, 0x48, 0x68,                         /*2d: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x0e,                         /*30: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*33: and     $0x1ff, %ecx             */
  0x48, 0x8b, 0x40, 0x30,                   /*39: mov     0x30(%rax), %rax         */
  0x8b, 0x04, 0x88,                         /*3d: mov     (%rax, %rcx, 4), %eax    */
  0x89, 0x45, 0xac,                         /*40: mov     %eax, -0x54(%rbp)        */
  0x48, 0x63, 0x45, 0xd4,                   /*43: movslq  -0x2c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*47: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*4b: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*4f: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*53: mov     (%rcx, %rax, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*57: mov     0x8(%rcx, %rax, 1), %rax */
  0x48, 0x89, 0x45, 0xc8,                   /*5c: mov     %rax, -0x38(%rbp)        */
  0x48, 0x89, 0x55, 0xc0,                   /*60: mov     %rdx, -0x40(%rbp)        */
  0x48, 0x63, 0x45, 0xd4,                   /*64: movslq  -0x2c(%rbp), %rax        */
  0x48, 0xc1, 0xe0, 0x04,                   /*68: shl     $0x4, %rax               */
  0x48, 0x8b, 0x4d, 0xe0,                   /*6c: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*70: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x54, 0x08, 0x10,             /*74: mov     0x10(%rax, %rcx, 1), %rdx */
  0x48, 0x8b, 0x44, 0x08, 0x18,             /*79: mov     0x18(%rax, %rcx, 1), %rax */
  0x48, 0x89, 0x45, 0xb8,                   /*7e: mov     %rax, -0x48(%rbp)        */
  0x48, 0x89, 0x55, 0xb0,                   /*82: mov     %rdx, -0x50(%rbp)        */
  0x83, 0x7d, 0xc8, 0x00,                   /*86: cmpl    $0x0, -0x38(%rbp)        */
  0x75, 0x3a,                               /*8a: jne     c6                       */
  0x83, 0x7d, 0xc0, 0x00,                   /*8c: cmpl    $0x0, -0x40(%rbp)        */
  0x75, 0x34,                               /*90: jne     c6                       */
  0x48, 0x8b, 0x45, 0xe0,                   /*92: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*96: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*9a: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*9e: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x78, 0x48,                   /*a2: mov     0x48(%rax), %rdi         */
  0x49, 0x8d, 0x86, 0xe8, 0x01, 0x00, 0x00, /*a6: lea     0x1e8(%r14), %rax        */
  0xff, 0xd0,                               /*ad: callq   *%rax                    */
  0x48, 0x89, 0x45, 0x98,                   /*af: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*b3: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*b6: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*ba: mov     -0x60(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xc8,                   /*be: mov     %rcx, -0x38(%rbp)        */
  0x48, 0x89, 0x45, 0xc0,                   /*c2: mov     %rax, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*c6: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*ca: mov     0x60(%rax), %rdi         */
  0x44, 0x8b, 0x4d, 0xac,                   /*ce: mov     -0x54(%rbp), %r9d        */
  0x48, 0x8b, 0x75, 0xc0,                   /*d2: mov     -0x40(%rbp), %rsi        */
  0x8b, 0x55, 0xc8,                         /*d6: mov     -0x38(%rbp), %edx        */
  0x48, 0x8b, 0x4d, 0xb0,                   /*d9: mov     -0x50(%rbp), %rcx        */
  0x44, 0x8b, 0x45, 0xb8,                   /*dd: mov     -0x48(%rbp), %r8d        */
  0x49, 0x8d, 0x86, 0x28, 0x01, 0x00, 0x00, /*e1: lea     0x128(%r14), %rax        */
  0xff, 0xd0,                               /*e8: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd8,                   /*ea: mov     %rax, -0x28(%rbp)        */
  0x48, 0x63, 0x5d, 0xd4,                   /*ee: movslq  -0x2c(%rbp), %rbx        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*f2: mov     -0x20(%rbp), %rcx        */
  0x4c, 0x8b, 0x79, 0x20,                   /*f6: mov     0x20(%rcx), %r15         */
  0x48, 0xc1, 0xe3, 0x04,                   /*fa: shl     $0x4, %rbx               */
  0x49, 0x81, 0xc6, 0xe8, 0x01, 0x00, 0x00, /*fe: add     $0x1e8, %r14             */
  0x48, 0x89, 0xc7,                         /*105: mov     %rax, %rdi               */
  0x41, 0xff, 0xd6,                         /*108: callq   *%r14                    */
  0x48, 0x89, 0x45, 0x88,                   /*10b: mov     %rax, -0x78(%rbp)        */
  0x89, 0x55, 0x90,                         /*10f: mov     %edx, -0x70(%rbp)        */
  0x48, 0x8b, 0x45, 0x88,                   /*112: mov     -0x78(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0x90,                   /*116: mov     -0x70(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*11a: mov     %rcx, 0x8(%r15, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1f,                   /*11f: mov     %rax, (%r15, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe0,                   /*123: mov     -0x20(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*127: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*12a: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*12e: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x68,                   /*134: add     $0x68, %rsp              */
  0x5b,                                     /*138: pop     %rbx                     */
  0x41, 0x5e,                               /*139: pop     %r14                     */
  0x41, 0x5f,                               /*13b: pop     %r15                     */
  0x5d,                                     /*13d: pop     %rbp                     */
};


static size_t op_module_size = 272;
static uint8_t op_module[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x53,                                     /*08: push    %rbx                     */
  0x48, 0x83, 0xec, 0x58,                   /*09: sub     $0x58, %rsp              */
  0x4c, 0x8b, 0x37,                         /*0d: mov     (%rdi), %r14             */
  0x48, 0x89, 0x7d, 0xe0,                   /*10: mov     %rdi, -0x20(%rbp)        */
  0x48, 0xc7, 0x45, 0xd8, 0x00, 0x00, 0x00, /*14: movq    $0x0, -0x28(%rbp)        */
  0x00,                                     /*1b:                                  */
  0x48, 0x8b, 0x45, 0xe0,                   /*1c: mov     -0x20(%rbp), %rax        */
  0x8b, 0x40, 0x68,                         /*20: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x17,                         /*23: shr     $0x17, %eax              */
  0x89, 0x45, 0xd4,                         /*26: mov     %eax, -0x2c(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*29: mov     -0x20(%rbp), %rax        */
  0x8b, 0x48, 0x68,                         /*2d: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x0e,                         /*30: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*33: and     $0x1ff, %ecx             */
  0x48, 0x8b, 0x40, 0x30,                   /*39: mov     0x30(%rax), %rax         */
  0x8b, 0x04, 0x88,                         /*3d: mov     (%rax, %rcx, 4), %eax    */
  0x89, 0x45, 0xbc,                         /*40: mov     %eax, -0x44(%rbp)        */
  0x48, 0x63, 0x45, 0xd4,                   /*43: movslq  -0x2c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*47: mov     -0x20(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*4b: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*4f: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*53: mov     (%rcx, %rax, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*57: mov     0x8(%rcx, %rax, 1), %rax */
  0x48, 0x89, 0x45, 0xc8,                   /*5c: mov     %rax, -0x38(%rbp)        */
  0x48, 0x89, 0x55, 0xc0,                   /*60: mov     %rdx, -0x40(%rbp)        */
  0x83, 0x7d, 0xc8, 0x00,                   /*64: cmpl    $0x0, -0x38(%rbp)        */
  0x75, 0x3a,                               /*68: jne     a4                       */
  0x83, 0x7d, 0xc0, 0x00,                   /*6a: cmpl    $0x0, -0x40(%rbp)        */
  0x75, 0x34,                               /*6e: jne     a4                       */
  0x48, 0x8b, 0x45, 0xe0,                   /*70: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*74: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*78: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*7c: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x78, 0x48,                   /*80: mov     0x48(%rax), %rdi         */
  0x49, 0x8d, 0x86, 0xe8, 0x01, 0x00, 0x00, /*84: lea     0x1e8(%r14), %rax        */
  0xff, 0xd0,                               /*8b: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xa8,                   /*8d: mov     %rax, -0x58(%rbp)        */
  0x89, 0x55, 0xb0,                         /*91: mov     %edx, -0x50(%rbp)        */
  0x48, 0x8b, 0x45, 0xa8,                   /*94: mov     -0x58(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb0,                   /*98: mov     -0x50(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xc8,                   /*9c: mov     %rcx, -0x38(%rbp)        */
  0x48, 0x89, 0x45, 0xc0,                   /*a0: mov     %rax, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xe0,                   /*a4: mov     -0x20(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*a8: mov     0x60(%rax), %rdi         */
  0x8b, 0x4d, 0xbc,                         /*ac: mov     -0x44(%rbp), %ecx        */
  0x48, 0x8b, 0x75, 0xc0,                   /*af: mov     -0x40(%rbp), %rsi        */
  0x8b, 0x55, 0xc8,                         /*b3: mov     -0x38(%rbp), %edx        */
  0x49, 0x8d, 0x46, 0x40,                   /*b6: lea     0x40(%r14), %rax         */
  0xff, 0xd0,                               /*ba: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd8,                   /*bc: mov     %rax, -0x28(%rbp)        */
  0x48, 0x63, 0x5d, 0xd4,                   /*c0: movslq  -0x2c(%rbp), %rbx        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*c4: mov     -0x20(%rbp), %rcx        */
  0x4c, 0x8b, 0x79, 0x20,                   /*c8: mov     0x20(%rcx), %r15         */
  0x48, 0xc1, 0xe3, 0x04,                   /*cc: shl     $0x4, %rbx               */
  0x49, 0x81, 0xc6, 0xe8, 0x01, 0x00, 0x00, /*d0: add     $0x1e8, %r14             */
  0x48, 0x89, 0xc7,                         /*d7: mov     %rax, %rdi               */
  0x41, 0xff, 0xd6,                         /*da: callq   *%r14                    */
  0x48, 0x89, 0x45, 0x98,                   /*dd: mov     %rax, -0x68(%rbp)        */
  0x89, 0x55, 0xa0,                         /*e1: mov     %edx, -0x60(%rbp)        */
  0x48, 0x8b, 0x45, 0x98,                   /*e4: mov     -0x68(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa0,                   /*e8: mov     -0x60(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1f, 0x08,             /*ec: mov     %rcx, 0x8(%r15, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1f,                   /*f1: mov     %rax, (%r15, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe0,                   /*f5: mov     -0x20(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*f9: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*fc: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*100: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x58,                   /*106: add     $0x58, %rsp              */
  0x5b,                                     /*10a: pop     %rbx                     */
  0x41, 0x5e,                               /*10b: pop     %r14                     */
  0x41, 0x5f,                               /*10d: pop     %r15                     */
  0x5d,                                     /*10f: pop     %rbp                     */
};


static size_t op_exec_size = 591;
static uint8_t op_exec[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x40,                   /*07: sub     $0x40, %rsp              */
  0x4c, 0x8b, 0x37,                         /*0b: mov     (%rdi), %r14             */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x47, 0x68,                         /*12: mov     0x68(%rdi), %eax         */
  0xc1, 0xe8, 0x17,                         /*15: shr     $0x17, %eax              */
  0x89, 0x45, 0xe4,                         /*18: mov     %eax, -0x1c(%rbp)        */
  0x48, 0x63, 0x45, 0xe4,                   /*1b: movslq  -0x1c(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*1f: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x20,                   /*23: mov     0x20(%rcx), %rcx         */
  0x48, 0xc1, 0xe0, 0x04,                   /*27: shl     $0x4, %rax               */
  0x48, 0x8b, 0x14, 0x01,                   /*2b: mov     (%rcx, %rax, 1), %rdx    */
  0x48, 0x8b, 0x44, 0x01, 0x08,             /*2f: mov     0x8(%rcx, %rax, 1), %rax */
  0x48, 0x89, 0x45, 0xd0,                   /*34: mov     %rax, -0x30(%rbp)        */
  0x48, 0x89, 0x55, 0xc8,                   /*38: mov     %rdx, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*3c: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*40: mov     0x60(%rax), %rdi         */
  0x4c, 0x89, 0xf0,                         /*44: mov     %r14, %rax               */
  0x48, 0x83, 0xe8, 0x80,                   /*47: sub     $0xffffffffffffff80, %rax */
  0xff, 0xd0,                               /*4b: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd8,                   /*4d: mov     %rax, -0x28(%rbp)        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*51: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x18,                   /*55: mov     0x18(%rcx), %rcx         */
  0x48, 0x83, 0xc1, 0x04,                   /*59: add     $0x4, %rcx               */
  0x48, 0x89, 0x48, 0x30,                   /*5d: mov     %rcx, 0x30(%rax)         */
  0x8b, 0x45, 0xe4,                         /*61: mov     -0x1c(%rbp), %eax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*64: mov     -0x28(%rbp), %rcx        */
  0x89, 0x41, 0x44,                         /*68: mov     %eax, 0x44(%rcx)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*6b: mov     -0x28(%rbp), %rax        */
  0xc7, 0x00, 0x00, 0x00, 0x00, 0x00,       /*6f: movl    $0x0, (%rax)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*75: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*79: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*7d: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x08,                   /*81: mov     0x8(%rax), %rax          */
  0x48, 0x8b, 0x4d, 0xd8,                   /*85: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*89: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xd8,                   /*8d: mov     -0x28(%rbp), %rax        */
  0xc7, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, /*91: movl    $0x0, 0x40(%rax)         */
  0x48, 0x8b, 0x45, 0xc8,                   /*98: mov     -0x38(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*9c: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x48,                   /*a0: mov     %rax, 0x48(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*a4: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*a8: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*ac: mov     0x18(%rax), %rax         */
  0x48, 0x63, 0x4d, 0xe4,                   /*b0: movslq  -0x1c(%rbp), %rcx        */
  0x48, 0xc1, 0xe1, 0x04,                   /*b4: shl     $0x4, %rcx               */
  0x48, 0x01, 0x48, 0x08,                   /*b8: add     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xe8,                   /*bc: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*c0: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*c4: mov     0x60(%rax), %rdi         */
  0x8b, 0x40, 0x68,                         /*c8: mov     0x68(%rax), %eax         */
  0xc1, 0xe8, 0x07,                         /*cb: shr     $0x7, %eax               */
  0x0f, 0xb7, 0xc0,                         /*ce: movzwl  %ax, %eax                */
  0x48, 0x8b, 0x49, 0x20,                   /*d1: mov     0x20(%rcx), %rcx         */
  0x48, 0x8b, 0x34, 0xc1,                   /*d5: mov     (%rcx, %rax, 8), %rsi    */
  0x49, 0x8d, 0x86, 0xe0, 0x00, 0x00, 0x00, /*d9: lea     0xe0(%r14), %rax         */
  0xff, 0xd0,                               /*e0: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xc0,                   /*e2: mov     %rax, -0x40(%rbp)        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*e6: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x48,                   /*ea: mov     0x48(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x20,                   /*ee: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xc0,                   /*f2: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*f6: mov     -0x28(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x08,                   /*fa: mov     %rax, 0x8(%rcx)          */
  0x48, 0x8b, 0x45, 0xc0,                   /*fe: mov     -0x40(%rbp), %rax        */
  0x8b, 0x00,                               /*102: mov     (%rax), %eax             */
  0xc1, 0xe8, 0x0b,                         /*104: shr     $0xb, %eax               */
  0xa8, 0x80,                               /*107: test    $0x80, %al               */
  0x74, 0x79,                               /*109: je      184                      */
  0x48, 0x8b, 0x45, 0xd8,                   /*10b: mov     -0x28(%rbp), %rax        */
  0xc7, 0x40, 0x18, 0x00, 0x00, 0x00, 0x00, /*10f: movl    $0x0, 0x18(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*116: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*11a: mov     0x60(%rax), %rdi         */
  0x48, 0x8b, 0x47, 0x18,                   /*11e: mov     0x18(%rdi), %rax         */
  0x48, 0x8b, 0x58, 0x08,                   /*122: mov     0x8(%rax), %rbx          */
  0x48, 0x8b, 0x45, 0xc0,                   /*126: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x75, 0xc8,                   /*12a: mov     -0x38(%rbp), %rsi        */
  0x8b, 0x55, 0xd0,                         /*12e: mov     -0x30(%rbp), %edx        */
  0xff, 0x50, 0x18,                         /*131: callq   *0x18(%rax)              */
  0x48, 0x89, 0x45, 0xb0,                   /*134: mov     %rax, -0x50(%rbp)        */
  0x89, 0x55, 0xb8,                         /*138: mov     %edx, -0x48(%rbp)        */
  0x48, 0x8b, 0x45, 0xb0,                   /*13b: mov     -0x50(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*13f: mov     -0x48(%rbp), %rcx        */
  0x48, 0x89, 0x4b, 0x08,                   /*143: mov     %rcx, 0x8(%rbx)          */
  0x48, 0x89, 0x03,                         /*147: mov     %rax, (%rbx)             */
  0x48, 0x8b, 0x45, 0xe8,                   /*14a: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*14e: mov     0x60(%rax), %rdi         */
  0x8b, 0x70, 0x58,                         /*152: mov     0x58(%rax), %esi         */
  0x49, 0x8d, 0x86, 0xa8, 0x00, 0x00, 0x00, /*155: lea     0xa8(%r14), %rax         */
  0xff, 0xd0,                               /*15c: callq   *%rax                    */
  0x48, 0x8b, 0x45, 0xe8,                   /*15e: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*162: mov     0x60(%rax), %rax         */
  0x48, 0x83, 0x78, 0x28, 0x00,             /*166: cmpq    $0x0, 0x28(%rax)         */
  0x0f, 0x84, 0x9b, 0x00, 0x00, 0x00,       /*16b: je      20c                      */
  0x48, 0x8b, 0x7d, 0xe8,                   /*171: mov     -0x18(%rbp), %rdi        */
  0x49, 0x81, 0xc6, 0x70, 0x01, 0x00, 0x00, /*175: add     $0x170, %r14             */
  0x41, 0xff, 0xd6,                         /*17c: callq   *%r14                    */
  0xe9, 0xc3, 0x00, 0x00, 0x00,             /*17f: jmpq    247                      */
  0x48, 0x8b, 0x45, 0xc0,                   /*184: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x18,                   /*188: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x4d, 0xe8,                   /*18c: mov     -0x18(%rbp), %rcx        */
  0x48, 0x89, 0x41, 0x10,                   /*190: mov     %rax, 0x10(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*194: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*198: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*19c: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x28,                   /*1a0: mov     %rcx, 0x28(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*1a4: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*1a8: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1ac: mov     0x18(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x30,                   /*1b0: mov     %rcx, 0x30(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*1b4: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*1b8: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x78, 0x60,                   /*1bc: mov     0x60(%rax), %rdi         */
  0x0f, 0xb7, 0x71, 0x02,                   /*1c0: movzwl  0x2(%rcx), %esi          */
  0x49, 0x81, 0xc6, 0xd8, 0x00, 0x00, 0x00, /*1c4: add     $0xd8, %r14              */
  0xba, 0x01, 0x00, 0x00, 0x00,             /*1cb: mov     $0x1, %edx               */
  0x41, 0xff, 0xd6,                         /*1d0: callq   *%r14                    */
  0x48, 0x8b, 0x45, 0xe8,                   /*1d3: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x10,                   /*1d7: mov     0x10(%rax), %rax         */
  0x0f, 0xb7, 0x40, 0x02,                   /*1db: movzwl  0x2(%rax), %eax          */
  0x48, 0x8b, 0x4d, 0xd8,                   /*1df: mov     -0x28(%rbp), %rcx        */
  0x89, 0x41, 0x18,                         /*1e3: mov     %eax, 0x18(%rcx)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*1e6: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x60,                   /*1ea: mov     0x60(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x18,                   /*1ee: mov     0x18(%rcx), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*1f2: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x20,                   /*1f6: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*1fa: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x48, 0x10,                   /*1fe: mov     0x10(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x08,                   /*202: mov     0x8(%rcx), %rcx          */
  0x48, 0x89, 0x48, 0x18,                   /*206: mov     %rcx, 0x18(%rax)         */
  0xeb, 0x3b,                               /*20a: jmp     247                      */
  0x48, 0x8b, 0x45, 0xe8,                   /*20c: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x40, 0x60,                   /*210: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*214: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x48, 0x20,                   /*218: mov     0x20(%rax), %rcx         */
  0x48, 0x8b, 0x49, 0x10,                   /*21c: mov     0x10(%rcx), %rcx         */
  0x48, 0x89, 0x48, 0x08,                   /*220: mov     %rcx, 0x8(%rax)          */
  0x48, 0x8b, 0x45, 0xe8,                   /*224: mov     -0x18(%rbp), %rax        */
  0x48, 0x89, 0x48, 0x20,                   /*228: mov     %rcx, 0x20(%rax)         */
  0x48, 0x8b, 0x45, 0xe8,                   /*22c: mov     -0x18(%rbp), %rax        */
  0x48, 0x8b, 0x78, 0x60,                   /*230: mov     0x60(%rax), %rdi         */
  0x49, 0x81, 0xc6, 0xf8, 0x00, 0x00, 0x00, /*234: add     $0xf8, %r14              */
  0x41, 0xff, 0xd6,                         /*23b: callq   *%r14                    */
  0x48, 0x8b, 0x45, 0xe8,                   /*23e: mov     -0x18(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*242: addq    $0x4, 0x18(%rax)         */
  0x48, 0x83, 0xc4, 0x40,                   /*247: add     $0x40, %rsp              */
  0x5b,                                     /*24b: pop     %rbx                     */
  0x41, 0x5e,                               /*24c: pop     %r14                     */
  0x5d,                                     /*24e: pop     %rbp                     */
};


static size_t op_method_size = 128;
static uint8_t op_method[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x20,                   /*04: sub     $0x20, %rsp              */
  0x41, 0xb9, 0x88, 0x00, 0x00, 0x00,       /*08: mov     $0x88, %r9d              */
  0x4c, 0x03, 0x0f,                         /*0e: add     (%rdi), %r9              */
  0x48, 0x89, 0x7d, 0xf8,                   /*11: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*15: mov     0x68(%rdi), %ecx         */
  0xc1, 0xe9, 0x17,                         /*18: shr     $0x17, %ecx              */
  0x89, 0x4d, 0xf4,                         /*1b: mov     %ecx, -0xc(%rbp)         */
  0x48, 0x63, 0x4d, 0xf4,                   /*1e: movslq  -0xc(%rbp), %rcx         */
  0x48, 0x8b, 0x55, 0xf8,                   /*22: mov     -0x8(%rbp), %rdx         */
  0x48, 0x8b, 0x52, 0x20,                   /*26: mov     0x20(%rdx), %rdx         */
  0x48, 0xc1, 0xe1, 0x04,                   /*2a: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x34, 0x0a,                   /*2e: mov     (%rdx, %rcx, 1), %rsi    */
  0x48, 0x89, 0x75, 0xe8,                   /*32: mov     %rsi, -0x18(%rbp)        */
  0x48, 0x8b, 0x4d, 0xf8,                   /*36: mov     -0x8(%rbp), %rcx         */
  0x48, 0x8b, 0x79, 0x60,                   /*3a: mov     0x60(%rcx), %rdi         */
  0x8b, 0x51, 0x68,                         /*3e: mov     0x68(%rcx), %edx         */
  0xc1, 0xea, 0x0e,                         /*41: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*44: and     $0x1ff, %edx             */
  0x4c, 0x8b, 0x41, 0x20,                   /*4a: mov     0x20(%rcx), %r8          */
  0x48, 0x8b, 0x49, 0x30,                   /*4e: mov     0x30(%rcx), %rcx         */
  0x8b, 0x14, 0x91,                         /*52: mov     (%rcx, %rdx, 4), %edx    */
  0x48, 0x63, 0x45, 0xf4,                   /*55: movslq  -0xc(%rbp), %rax         */
  0x48, 0xc1, 0xe0, 0x04,                   /*59: shl     $0x4, %rax               */
  0x4a, 0x8b, 0x4c, 0x00, 0x10,             /*5d: mov     0x10(%rax, %r8, 1), %rcx */
  0x46, 0x8b, 0x44, 0x00, 0x18,             /*62: mov     0x18(%rax, %r8, 1), %r8d */
  0x41, 0xff, 0xd1,                         /*67: callq   *%r9                     */
  0x48, 0x8b, 0x45, 0xf8,                   /*6a: mov     -0x8(%rbp), %rax         */
  0x8b, 0x48, 0x58,                         /*6e: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*71: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*75: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*7b: add     $0x20, %rsp              */
  0x5d,                                     /*7f: pop     %rbp                     */
};


static size_t op_sclass_size = 115;
static uint8_t op_sclass[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x20,                   /*07: sub     $0x20, %rsp              */
  0x48, 0x8b, 0x07,                         /*0b: mov     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x8b, 0x4f, 0x68,                         /*12: mov     0x68(%rdi), %ecx         */
  0x89, 0xcb,                               /*15: mov     %ecx, %ebx               */
  0xc1, 0xeb, 0x17,                         /*17: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*1a: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x77, 0x20,                   /*1e: mov     0x20(%rdi), %r14         */
  0x48, 0x8b, 0x7f, 0x60,                   /*22: mov     0x60(%rdi), %rdi         */
  0xc1, 0xe9, 0x0e,                         /*26: shr     $0xe, %ecx               */
  0x81, 0xe1, 0xff, 0x01, 0x00, 0x00,       /*29: and     $0x1ff, %ecx             */
  0x48, 0xc1, 0xe1, 0x04,                   /*2f: shl     $0x4, %rcx               */
  0x49, 0x8b, 0x34, 0x0e,                   /*33: mov     (%r14, %rcx, 1), %rsi    */
  0x41, 0x8b, 0x54, 0x0e, 0x08,             /*37: mov     0x8(%r14, %rcx, 1), %edx */
  0x48, 0x83, 0xc0, 0x60,                   /*3c: add     $0x60, %rax              */
  0xff, 0xd0,                               /*40: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd8,                   /*42: mov     %rax, -0x28(%rbp)        */
  0x89, 0x55, 0xe0,                         /*46: mov     %edx, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xd8,                   /*49: mov     -0x28(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe0,                   /*4d: mov     -0x20(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*51: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*56: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xe8,                   /*5a: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x58,                         /*5e: mov     0x58(%rax), %ecx         */
  0x48, 0x8b, 0x40, 0x60,                   /*61: mov     0x60(%rax), %rax         */
  0x89, 0x88, 0xdc, 0x00, 0x00, 0x00,       /*65: mov     %ecx, 0xdc(%rax)         */
  0x48, 0x83, 0xc4, 0x20,                   /*6b: add     $0x20, %rsp              */
  0x5b,                                     /*6f: pop     %rbx                     */
  0x41, 0x5e,                               /*70: pop     %r14                     */
  0x5d,                                     /*72: pop     %rbp                     */
};


static size_t op_tclass_size = 254;
static uint8_t op_tclass[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x57,                               /*04: push    %r15                     */
  0x41, 0x56,                               /*06: push    %r14                     */
  0x41, 0x54,                               /*08: push    %r12                     */
  0x53,                                     /*0a: push    %rbx                     */
  0x48, 0x83, 0xec, 0x40,                   /*0b: sub     $0x40, %rsp              */
  0x4c, 0x8b, 0x27,                         /*0f: mov     (%rdi), %r12             */
  0x48, 0x89, 0x7d, 0xd8,                   /*12: mov     %rdi, -0x28(%rbp)        */
  0x48, 0x8b, 0x47, 0x60,                   /*16: mov     0x60(%rdi), %rax         */
  0x48, 0x89, 0x45, 0xd0,                   /*1a: mov     %rax, -0x30(%rbp)        */
  0x48, 0x8b, 0x40, 0x18,                   /*1e: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*22: mov     0x20(%rax), %rax         */
  0x48, 0x83, 0x78, 0x48, 0x00,             /*26: cmpq    $0x0, 0x48(%rax)         */
  0x74, 0x4f,                               /*2b: je      7c                       */
  0x48, 0x8b, 0x45, 0xd8,                   /*2d: mov     -0x28(%rbp), %rax        */
  0x8b, 0x58, 0x68,                         /*31: mov     0x68(%rax), %ebx         */
  0xc1, 0xeb, 0x17,                         /*34: shr     $0x17, %ebx              */
  0x48, 0xc1, 0xe3, 0x04,                   /*37: shl     $0x4, %rbx               */
  0x4c, 0x8b, 0x70, 0x20,                   /*3b: mov     0x20(%rax), %r14         */
  0x48, 0x8b, 0x40, 0x60,                   /*3f: mov     0x60(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x18,                   /*43: mov     0x18(%rax), %rax         */
  0x48, 0x8b, 0x40, 0x20,                   /*47: mov     0x20(%rax), %rax         */
  0x48, 0x8b, 0x78, 0x48,                   /*4b: mov     0x48(%rax), %rdi         */
  0x49, 0x81, 0xc4, 0xe0, 0x01, 0x00, 0x00, /*4f: add     $0x1e0, %r12             */
  0x41, 0xff, 0xd4,                         /*56: callq   *%r12                    */
  0x48, 0x89, 0x45, 0xa0,                   /*59: mov     %rax, -0x60(%rbp)        */
  0x89, 0x55, 0xa8,                         /*5d: mov     %edx, -0x58(%rbp)        */
  0x48, 0x8b, 0x45, 0xa0,                   /*60: mov     -0x60(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa8,                   /*64: mov     -0x58(%rbp), %rcx        */
  0x49, 0x89, 0x4c, 0x1e, 0x08,             /*68: mov     %rcx, 0x8(%r14, %rbx, 1) */
  0x49, 0x89, 0x04, 0x1e,                   /*6d: mov     %rax, (%r14, %rbx, 1)    */
  0x48, 0x8b, 0x45, 0xd8,                   /*71: mov     -0x28(%rbp), %rax        */
  0x48, 0x83, 0x40, 0x18, 0x04,             /*75: addq    $0x4, 0x18(%rax)         */
  0xeb, 0x76,                               /*7a: jmp     f2                       */
  0x4c, 0x8b, 0x7d, 0xd0,                   /*7c: mov     -0x30(%rbp), %r15        */
  0x49, 0x8b, 0xb4, 0x24, 0x50, 0x01, 0x00, /*80: mov     0x150(%r12), %rsi        */
  0x00,                                     /*87:                                  */
  0x49, 0x8d, 0x84, 0x24, 0xb8, 0x00, 0x00, /*88: lea     0xb8(%r12), %rax         */
  0x00,                                     /*8f:                                  */
  0x4c, 0x89, 0xff,                         /*90: mov     %r15, %rdi               */
  0xff, 0xd0,                               /*93: callq   *%rax                    */
  0x49, 0x89, 0xc6,                         /*95: mov     %rax, %r14               */
  0x48, 0x8b, 0x7d, 0xd0,                   /*98: mov     -0x30(%rbp), %rdi        */
  0x49, 0x8d, 0x44, 0x24, 0x08,             /*9c: lea     0x8(%r12), %rax          */
  0x49, 0x8d, 0xb4, 0x24, 0x80, 0x02, 0x00, /*a1: lea     0x280(%r12), %rsi        */
  0x00,                                     /*a8:                                  */
  0xba, 0x19, 0x00, 0x00, 0x00,             /*a9: mov     $0x19, %edx              */
  0xff, 0xd0,                               /*ae: callq   *%rax                    */
  0x89, 0xd1,                               /*b0: mov     %edx, %ecx               */
  0x48, 0x89, 0x45, 0xb0,                   /*b2: mov     %rax, -0x50(%rbp)        */
  0x89, 0x4d, 0xb8,                         /*b6: mov     %ecx, -0x48(%rbp)        */
  0x48, 0x8b, 0x55, 0xb0,                   /*b9: mov     -0x50(%rbp), %rdx        */
  0x49, 0x8d, 0x84, 0x24, 0x88, 0x01, 0x00, /*bd: lea     0x188(%r12), %rax        */
  0x00,                                     /*c4:                                  */
  0x4c, 0x89, 0xff,                         /*c5: mov     %r15, %rdi               */
  0x4c, 0x89, 0xf6,                         /*c8: mov     %r14, %rsi               */
  0xff, 0xd0,                               /*cb: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xc0,                   /*cd: mov     %rax, -0x40(%rbp)        */
  0x89, 0x55, 0xc8,                         /*d1: mov     %edx, -0x38(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*d4: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xd8,                   /*d8: mov     -0x28(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x60,                   /*dc: mov     0x60(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x28,                   /*e0: mov     %rax, 0x28(%rcx)         */
  0x48, 0x8b, 0x7d, 0xd8,                   /*e4: mov     -0x28(%rbp), %rdi        */
  0x49, 0x81, 0xc4, 0x70, 0x01, 0x00, 0x00, /*e8: add     $0x170, %r12             */
  0x41, 0xff, 0xd4,                         /*ef: callq   *%r12                    */
  0x48, 0x83, 0xc4, 0x40,                   /*f2: add     $0x40, %rsp              */
  0x5b,                                     /*f6: pop     %rbx                     */
  0x41, 0x5c,                               /*f7: pop     %r12                     */
  0x41, 0x5e,                               /*f9: pop     %r14                     */
  0x41, 0x5f,                               /*fb: pop     %r15                     */
  0x5d,                                     /*fd: pop     %rbp                     */
};


static size_t op_debug_size = 67;
static uint8_t op_debug[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0x4c, 0x8b, 0x07,                         /*08: mov     (%rdi), %r8              */
  0x48, 0x89, 0x7d, 0xf8,                   /*0b: mov     %rdi, -0x8(%rbp)         */
  0x8b, 0x4f, 0x68,                         /*0f: mov     0x68(%rdi), %ecx         */
  0x89, 0xce,                               /*12: mov     %ecx, %esi               */
  0xc1, 0xee, 0x17,                         /*14: shr     $0x17, %esi              */
  0x89, 0xca,                               /*17: mov     %ecx, %edx               */
  0xc1, 0xea, 0x0e,                         /*19: shr     $0xe, %edx               */
  0x81, 0xe2, 0xff, 0x01, 0x00, 0x00,       /*1c: and     $0x1ff, %edx             */
  0xc1, 0xe9, 0x07,                         /*22: shr     $0x7, %ecx               */
  0x83, 0xe1, 0x7f,                         /*25: and     $0x7f, %ecx              */
  0x4d, 0x8d, 0x88, 0x18, 0x01, 0x00, 0x00, /*28: lea     0x118(%r8), %r9          */
  0x49, 0x81, 0xc0, 0x88, 0x02, 0x00, 0x00, /*2f: add     $0x288, %r8              */
  0x31, 0xc0,                               /*36: xor     %eax, %eax               */
  0x4c, 0x89, 0xc7,                         /*38: mov     %r8, %rdi                */
  0x41, 0xff, 0xd1,                         /*3b: callq   *%r9                     */
  0x48, 0x83, 0xc4, 0x10,                   /*3e: add     $0x10, %rsp              */
  0x5d,                                     /*42: pop     %rbp                     */
};


static size_t op_stop_size = 27;
static uint8_t op_stop[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x48, 0x83, 0xec, 0x10,                   /*04: sub     $0x10, %rsp              */
  0xb8, 0x88, 0x01, 0x00, 0x00,             /*08: mov     $0x188, %eax             */
  0x48, 0x03, 0x07,                         /*0d: add     (%rdi), %rax             */
  0x48, 0x89, 0x7d, 0xf8,                   /*10: mov     %rdi, -0x8(%rbp)         */
  0xff, 0xd0,                               /*14: callq   *%rax                    */
  0x48, 0x83, 0xc4, 0x10,                   /*16: add     $0x10, %rsp              */
  0x5d,                                     /*1a: pop     %rbp                     */
};


static size_t op_err_size = 250;
static uint8_t op_err[] = {
  0x55,                                     /*00: push    %rbp                     */
  0x48, 0x89, 0xe5,                         /*01: mov     %rsp, %rbp               */
  0x41, 0x56,                               /*04: push    %r14                     */
  0x53,                                     /*06: push    %rbx                     */
  0x48, 0x83, 0xec, 0x50,                   /*07: sub     $0x50, %rsp              */
  0x48, 0x8b, 0x1f,                         /*0b: mov     (%rdi), %rbx             */
  0x48, 0x89, 0x7d, 0xe8,                   /*0e: mov     %rdi, -0x18(%rbp)        */
  0x48, 0x8b, 0x7f, 0x60,                   /*12: mov     0x60(%rdi), %rdi         */
  0x48, 0x89, 0x7d, 0xe0,                   /*16: mov     %rdi, -0x20(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*1a: mov     -0x18(%rbp), %rax        */
  0x8b, 0x48, 0x68,                         /*1e: mov     0x68(%rax), %ecx         */
  0xc1, 0xe9, 0x07,                         /*21: shr     $0x7, %ecx               */
  0x0f, 0xb7, 0xc9,                         /*24: movzwl  %cx, %ecx                */
  0x48, 0x8b, 0x40, 0x28,                   /*27: mov     0x28(%rax), %rax         */
  0x48, 0xc1, 0xe1, 0x04,                   /*2b: shl     $0x4, %rcx               */
  0x48, 0x8b, 0x34, 0x08,                   /*2f: mov     (%rax, %rcx, 1), %rsi    */
  0x8b, 0x54, 0x08, 0x08,                   /*33: mov     0x8(%rax, %rcx, 1), %edx */
  0x48, 0x8d, 0x83, 0x78, 0x01, 0x00, 0x00, /*37: lea     0x178(%rbx), %rax        */
  0xff, 0xd0,                               /*3e: callq   *%rax                    */
  0x48, 0x89, 0x45, 0xd0,                   /*40: mov     %rax, -0x30(%rbp)        */
  0x89, 0x55, 0xd8,                         /*44: mov     %edx, -0x28(%rbp)        */
  0x48, 0x8b, 0x45, 0xe8,                   /*47: mov     -0x18(%rbp), %rax        */
  0xf7, 0x40, 0x68, 0x00, 0x00, 0x80, 0xff, /*4b: testl   $0xff800000, 0x68(%rax)  */
  0x74, 0x3f,                               /*52: je      93                       */
  0x4c, 0x8b, 0x75, 0xe0,                   /*54: mov     -0x20(%rbp), %r14        */
  0x48, 0x8b, 0xb3, 0x18, 0x02, 0x00, 0x00, /*58: mov     0x218(%rbx), %rsi        */
  0x48, 0x8d, 0x83, 0xb0, 0x00, 0x00, 0x00, /*5f: lea     0xb0(%rbx), %rax         */
  0x4c, 0x89, 0xf7,                         /*66: mov     %r14, %rdi               */
  0xff, 0xd0,                               /*69: callq   *%rax                    */
  0x48, 0x8b, 0x55, 0xd0,                   /*6b: mov     -0x30(%rbp), %rdx        */
  0x8b, 0x4d, 0xd8,                         /*6f: mov     -0x28(%rbp), %ecx        */
  0x4c, 0x8d, 0x83, 0x80, 0x01, 0x00, 0x00, /*72: lea     0x180(%rbx), %r8         */
  0x4c, 0x89, 0xf7,                         /*79: mov     %r14, %rdi               */
  0x48, 0x89, 0xc6,                         /*7c: mov     %rax, %rsi               */
  0x41, 0xff, 0xd0,                         /*7f: callq   *%r8                     */
  0x48, 0x89, 0x45, 0xa0,                   /*82: mov     %rax, -0x60(%rbp)        */
  0x89, 0x55, 0xa8,                         /*86: mov     %edx, -0x58(%rbp)        */
  0x48, 0x8b, 0x45, 0xa0,                   /*89: mov     -0x60(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xa8,                   /*8d: mov     -0x58(%rbp), %rcx        */
  0xeb, 0x3a,                               /*91: jmp     cd                       */
  0x4c, 0x8b, 0x75, 0xe0,                   /*93: mov     -0x20(%rbp), %r14        */
  0x48, 0x8b, 0x73, 0x10,                   /*97: mov     0x10(%rbx), %rsi         */
  0x48, 0x8d, 0x83, 0xb8, 0x00, 0x00, 0x00, /*9b: lea     0xb8(%rbx), %rax         */
  0x4c, 0x89, 0xf7,                         /*a2: mov     %r14, %rdi               */
  0xff, 0xd0,                               /*a5: callq   *%rax                    */
  0x48, 0x8b, 0x55, 0xd0,                   /*a7: mov     -0x30(%rbp), %rdx        */
  0x8b, 0x4d, 0xd8,                         /*ab: mov     -0x28(%rbp), %ecx        */
  0x4c, 0x8d, 0x83, 0x88, 0x01, 0x00, 0x00, /*ae: lea     0x188(%rbx), %r8         */
  0x4c, 0x89, 0xf7,                         /*b5: mov     %r14, %rdi               */
  0x48, 0x89, 0xc6,                         /*b8: mov     %rax, %rsi               */
  0x41, 0xff, 0xd0,                         /*bb: callq   *%r8                     */
  0x48, 0x89, 0x45, 0xb0,                   /*be: mov     %rax, -0x50(%rbp)        */
  0x89, 0x55, 0xb8,                         /*c2: mov     %edx, -0x48(%rbp)        */
  0x48, 0x8b, 0x45, 0xb0,                   /*c5: mov     -0x50(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xb8,                   /*c9: mov     -0x48(%rbp), %rcx        */
  0x48, 0x89, 0x4d, 0xc8,                   /*cd: mov     %rcx, -0x38(%rbp)        */
  0x48, 0x89, 0x45, 0xc0,                   /*d1: mov     %rax, -0x40(%rbp)        */
  0x48, 0x8b, 0x45, 0xc0,                   /*d5: mov     -0x40(%rbp), %rax        */
  0x48, 0x8b, 0x4d, 0xe8,                   /*d9: mov     -0x18(%rbp), %rcx        */
  0x48, 0x8b, 0x49, 0x60,                   /*dd: mov     0x60(%rcx), %rcx         */
  0x48, 0x89, 0x41, 0x28,                   /*e1: mov     %rax, 0x28(%rcx)         */
  0x48, 0x8b, 0x7d, 0xe8,                   /*e5: mov     -0x18(%rbp), %rdi        */
  0x48, 0x81, 0xc3, 0x68, 0x01, 0x00, 0x00, /*e9: add     $0x168, %rbx             */
  0xff, 0xd3,                               /*f0: callq   *%rbx                    */
  0x48, 0x83, 0xc4, 0x50,                   /*f2: add     $0x50, %rsp              */
  0x5b,                                     /*f6: pop     %rbx                     */
  0x41, 0x5e,                               /*f7: pop     %r14                     */
  0x5d,                                     /*f9: pop     %rbp                     */
};

static uint8_t* ops[76];
static size_t op_sizes[] = {
  9,
  55,
  57,
  66,
  67,
  65,
  39,
  56,
  56,
  93,
  71,
  83,
  64,
  92,
  85,
  137,
  73,
  172,
  73,
  206,
  93,
  174,
  157,
  33,
  72,
  72,
  214,
  84,
  65,
  57,
  254,
  156,
  1288,
  27,
  9,
  812,
  1035,
  863,
  1297,
  9,
  9,
  1138,
  782,
  259,
  560,
  359,
  436,
  291,
  451,
  359,
  365,
  303,
  303,
  305,
  305,
  118,
  141,
  82,
  254,
  90,
  689,
  119,
  82,
  226,
  370,
  152,
  79,
  318,
  272,
  591,
  128,
  115,
  254,
  67,
  27,
  250
};
void init_ops() {
  static int init = 0;
  if(init == 0) {
    init = 1;
    ops[0] = op_nop;
    ops[1] = op_move;
    ops[2] = op_loadl;
    ops[3] = op_loadi;
    ops[4] = op_loadsym;
    ops[5] = op_loadnil;
    ops[6] = op_loadself;
    ops[7] = op_loadt;
    ops[8] = op_loadf;
    ops[9] = op_getglobal;
    ops[10] = op_setglobal;
    ops[11] = op_getspecial;
    ops[12] = op_setspecial;
    ops[13] = op_getiv;
    ops[14] = op_setiv;
    ops[15] = op_getcv;
    ops[16] = op_setcv;
    ops[17] = op_getconst;
    ops[18] = op_setconst;
    ops[19] = op_getmcnst;
    ops[20] = op_setmcnst;
    ops[21] = op_getupvar;
    ops[22] = op_setupvar;
    ops[23] = op_jmp;
    ops[24] = op_jmpif;
    ops[25] = op_jmpnot;
    ops[26] = op_onerr;
    ops[27] = op_rescue;
    ops[28] = op_poperr;
    ops[29] = op_raise;
    ops[30] = op_epush;
    ops[31] = op_epop;
    ops[32] = op_send;
    ops[33] = op_sendb;
    ops[34] = op_fsend;
    ops[35] = op_call;
    ops[36] = op_super;
    ops[37] = op_argary;
    ops[38] = op_enter;
    ops[39] = op_karg;
    ops[40] = op_kdict;
    ops[41] = op_return;
    ops[42] = op_tailcall;
    ops[43] = op_blkpush;
    ops[44] = op_add;
    ops[45] = op_addi;
    ops[46] = op_sub;
    ops[47] = op_subi;
    ops[48] = op_mul;
    ops[49] = op_div;
    ops[50] = op_eq;
    ops[51] = op_lt;
    ops[52] = op_le;
    ops[53] = op_gt;
    ops[54] = op_ge;
    ops[55] = op_array;
    ops[56] = op_arycat;
    ops[57] = op_arypush;
    ops[58] = op_aref;
    ops[59] = op_aset;
    ops[60] = op_apost;
    ops[61] = op_string;
    ops[62] = op_strcat;
    ops[63] = op_hash;
    ops[64] = op_lambda;
    ops[65] = op_range;
    ops[66] = op_oclass;
    ops[67] = op_class;
    ops[68] = op_module;
    ops[69] = op_exec;
    ops[70] = op_method;
    ops[71] = op_sclass;
    ops[72] = op_tclass;
    ops[73] = op_debug;
    ops[74] = op_stop;
    ops[75] = op_err;
  }
}
